
STM32F7508-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   000020a4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   000001c8  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00029328  900001d0  900001d0  000041d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000ce2c  900294f8  900294f8  0002d4f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  90036324  90036324  0003a324  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9003633c  9003633c  00046d98  2**0
                  CONTENTS
  6 .ARM          00000008  9003633c  9003633c  0003a33c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  90036344  90036344  00046d98  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  90036344  90036344  0003a344  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9003635c  9003635c  0003a35c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000220  20000000  90036364  0003b000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 TouchGFX_ScratchbufferA 00000100  20000220  90036584  0003b220  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferB 00000100  20000320  90036684  0003b320  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001b360  20000420  90036784  0003b420  2**2
                  ALLOC
 14 ._user_heap_stack 00002000  2001b780  90036784  0003b780  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00046d98  2**0
                  CONTENTS, READONLY
 16 FontFlashSection 000001a8  90100000  90100000  0003c000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 TextFlashSection 00000010  901001a8  901001a8  0003c1a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 ExtFlashSection 0000abe0  901001b8  901001b8  0003c1b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 TouchGFX_Framebuffer 0007f800  c0000000  c0000000  00047000  2**2
                  ALLOC
 20 .debug_line   00082375  00000000  00000000  00046dc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006b  00000000  00000000  000c913d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_info   000bb07e  00000000  00000000  000c91a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_abbrev 00019931  00000000  00000000  00184226  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_aranges 00003d90  00000000  00000000  0019db58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    0013e391  00000000  00000000  001a18e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_rnglists 0000418d  00000000  00000000  002dfc79  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_loclists 000299fc  00000000  00000000  002e3e06  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_macro  00043482  00000000  00000000  0030d802  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .comment      000000c2  00000000  00000000  00350c84  2**0
                  CONTENTS, READONLY
 30 .debug_frame  0000b044  00000000  00000000  00350d48  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900001d0 <__do_global_dtors_aux>:
900001d0:	b510      	push	{r4, lr}
900001d2:	4c05      	ldr	r4, [pc, #20]	@ (900001e8 <__do_global_dtors_aux+0x18>)
900001d4:	7823      	ldrb	r3, [r4, #0]
900001d6:	b933      	cbnz	r3, 900001e6 <__do_global_dtors_aux+0x16>
900001d8:	4b04      	ldr	r3, [pc, #16]	@ (900001ec <__do_global_dtors_aux+0x1c>)
900001da:	b113      	cbz	r3, 900001e2 <__do_global_dtors_aux+0x12>
900001dc:	4804      	ldr	r0, [pc, #16]	@ (900001f0 <__do_global_dtors_aux+0x20>)
900001de:	f3af 8000 	nop.w
900001e2:	2301      	movs	r3, #1
900001e4:	7023      	strb	r3, [r4, #0]
900001e6:	bd10      	pop	{r4, pc}
900001e8:	20000420 	.word	0x20000420
900001ec:	00000000 	.word	0x00000000
900001f0:	900294e0 	.word	0x900294e0

900001f4 <frame_dummy>:
900001f4:	b508      	push	{r3, lr}
900001f6:	4b03      	ldr	r3, [pc, #12]	@ (90000204 <frame_dummy+0x10>)
900001f8:	b11b      	cbz	r3, 90000202 <frame_dummy+0xe>
900001fa:	4903      	ldr	r1, [pc, #12]	@ (90000208 <frame_dummy+0x14>)
900001fc:	4803      	ldr	r0, [pc, #12]	@ (9000020c <frame_dummy+0x18>)
900001fe:	f3af 8000 	nop.w
90000202:	bd08      	pop	{r3, pc}
90000204:	00000000 	.word	0x00000000
90000208:	20000424 	.word	0x20000424
9000020c:	900294e0 	.word	0x900294e0

90000210 <strcmp>:
90000210:	f810 2b01 	ldrb.w	r2, [r0], #1
90000214:	f811 3b01 	ldrb.w	r3, [r1], #1
90000218:	2a01      	cmp	r2, #1
9000021a:	bf28      	it	cs
9000021c:	429a      	cmpcs	r2, r3
9000021e:	d0f7      	beq.n	90000210 <strcmp>
90000220:	1ad0      	subs	r0, r2, r3
90000222:	4770      	bx	lr

90000224 <strlen>:
90000224:	4603      	mov	r3, r0
90000226:	f813 2b01 	ldrb.w	r2, [r3], #1
9000022a:	2a00      	cmp	r2, #0
9000022c:	d1fb      	bne.n	90000226 <strlen+0x2>
9000022e:	1a18      	subs	r0, r3, r0
90000230:	3801      	subs	r0, #1
90000232:	4770      	bx	lr
	...

90000240 <memchr>:
90000240:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
90000244:	2a10      	cmp	r2, #16
90000246:	db2b      	blt.n	900002a0 <memchr+0x60>
90000248:	f010 0f07 	tst.w	r0, #7
9000024c:	d008      	beq.n	90000260 <memchr+0x20>
9000024e:	f810 3b01 	ldrb.w	r3, [r0], #1
90000252:	3a01      	subs	r2, #1
90000254:	428b      	cmp	r3, r1
90000256:	d02d      	beq.n	900002b4 <memchr+0x74>
90000258:	f010 0f07 	tst.w	r0, #7
9000025c:	b342      	cbz	r2, 900002b0 <memchr+0x70>
9000025e:	d1f6      	bne.n	9000024e <memchr+0xe>
90000260:	b4f0      	push	{r4, r5, r6, r7}
90000262:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000266:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000026a:	f022 0407 	bic.w	r4, r2, #7
9000026e:	f07f 0700 	mvns.w	r7, #0
90000272:	2300      	movs	r3, #0
90000274:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000278:	3c08      	subs	r4, #8
9000027a:	ea85 0501 	eor.w	r5, r5, r1
9000027e:	ea86 0601 	eor.w	r6, r6, r1
90000282:	fa85 f547 	uadd8	r5, r5, r7
90000286:	faa3 f587 	sel	r5, r3, r7
9000028a:	fa86 f647 	uadd8	r6, r6, r7
9000028e:	faa5 f687 	sel	r6, r5, r7
90000292:	b98e      	cbnz	r6, 900002b8 <memchr+0x78>
90000294:	d1ee      	bne.n	90000274 <memchr+0x34>
90000296:	bcf0      	pop	{r4, r5, r6, r7}
90000298:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000029c:	f002 0207 	and.w	r2, r2, #7
900002a0:	b132      	cbz	r2, 900002b0 <memchr+0x70>
900002a2:	f810 3b01 	ldrb.w	r3, [r0], #1
900002a6:	3a01      	subs	r2, #1
900002a8:	ea83 0301 	eor.w	r3, r3, r1
900002ac:	b113      	cbz	r3, 900002b4 <memchr+0x74>
900002ae:	d1f8      	bne.n	900002a2 <memchr+0x62>
900002b0:	2000      	movs	r0, #0
900002b2:	4770      	bx	lr
900002b4:	3801      	subs	r0, #1
900002b6:	4770      	bx	lr
900002b8:	2d00      	cmp	r5, #0
900002ba:	bf06      	itte	eq
900002bc:	4635      	moveq	r5, r6
900002be:	3803      	subeq	r0, #3
900002c0:	3807      	subne	r0, #7
900002c2:	f015 0f01 	tst.w	r5, #1
900002c6:	d107      	bne.n	900002d8 <memchr+0x98>
900002c8:	3001      	adds	r0, #1
900002ca:	f415 7f80 	tst.w	r5, #256	@ 0x100
900002ce:	bf02      	ittt	eq
900002d0:	3001      	addeq	r0, #1
900002d2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
900002d6:	3001      	addeq	r0, #1
900002d8:	bcf0      	pop	{r4, r5, r6, r7}
900002da:	3801      	subs	r0, #1
900002dc:	4770      	bx	lr
900002de:	bf00      	nop

900002e0 <__aeabi_ldivmod>:
900002e0:	b97b      	cbnz	r3, 90000302 <__aeabi_ldivmod+0x22>
900002e2:	b972      	cbnz	r2, 90000302 <__aeabi_ldivmod+0x22>
900002e4:	2900      	cmp	r1, #0
900002e6:	bfbe      	ittt	lt
900002e8:	2000      	movlt	r0, #0
900002ea:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
900002ee:	e006      	blt.n	900002fe <__aeabi_ldivmod+0x1e>
900002f0:	bf08      	it	eq
900002f2:	2800      	cmpeq	r0, #0
900002f4:	bf1c      	itt	ne
900002f6:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
900002fa:	f04f 30ff 	movne.w	r0, #4294967295
900002fe:	f000 b9d3 	b.w	900006a8 <__aeabi_idiv0>
90000302:	f1ad 0c08 	sub.w	ip, sp, #8
90000306:	e96d ce04 	strd	ip, lr, [sp, #-16]!
9000030a:	2900      	cmp	r1, #0
9000030c:	db09      	blt.n	90000322 <__aeabi_ldivmod+0x42>
9000030e:	2b00      	cmp	r3, #0
90000310:	db1a      	blt.n	90000348 <__aeabi_ldivmod+0x68>
90000312:	f000 f84d 	bl	900003b0 <__udivmoddi4>
90000316:	f8dd e004 	ldr.w	lr, [sp, #4]
9000031a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000031e:	b004      	add	sp, #16
90000320:	4770      	bx	lr
90000322:	4240      	negs	r0, r0
90000324:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000328:	2b00      	cmp	r3, #0
9000032a:	db1b      	blt.n	90000364 <__aeabi_ldivmod+0x84>
9000032c:	f000 f840 	bl	900003b0 <__udivmoddi4>
90000330:	f8dd e004 	ldr.w	lr, [sp, #4]
90000334:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000338:	b004      	add	sp, #16
9000033a:	4240      	negs	r0, r0
9000033c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000340:	4252      	negs	r2, r2
90000342:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000346:	4770      	bx	lr
90000348:	4252      	negs	r2, r2
9000034a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000034e:	f000 f82f 	bl	900003b0 <__udivmoddi4>
90000352:	f8dd e004 	ldr.w	lr, [sp, #4]
90000356:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000035a:	b004      	add	sp, #16
9000035c:	4240      	negs	r0, r0
9000035e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000362:	4770      	bx	lr
90000364:	4252      	negs	r2, r2
90000366:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000036a:	f000 f821 	bl	900003b0 <__udivmoddi4>
9000036e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000372:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000376:	b004      	add	sp, #16
90000378:	4252      	negs	r2, r2
9000037a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000037e:	4770      	bx	lr

90000380 <__aeabi_uldivmod>:
90000380:	b953      	cbnz	r3, 90000398 <__aeabi_uldivmod+0x18>
90000382:	b94a      	cbnz	r2, 90000398 <__aeabi_uldivmod+0x18>
90000384:	2900      	cmp	r1, #0
90000386:	bf08      	it	eq
90000388:	2800      	cmpeq	r0, #0
9000038a:	bf1c      	itt	ne
9000038c:	f04f 31ff 	movne.w	r1, #4294967295
90000390:	f04f 30ff 	movne.w	r0, #4294967295
90000394:	f000 b988 	b.w	900006a8 <__aeabi_idiv0>
90000398:	f1ad 0c08 	sub.w	ip, sp, #8
9000039c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
900003a0:	f000 f806 	bl	900003b0 <__udivmoddi4>
900003a4:	f8dd e004 	ldr.w	lr, [sp, #4]
900003a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
900003ac:	b004      	add	sp, #16
900003ae:	4770      	bx	lr

900003b0 <__udivmoddi4>:
900003b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900003b4:	9d08      	ldr	r5, [sp, #32]
900003b6:	468e      	mov	lr, r1
900003b8:	4604      	mov	r4, r0
900003ba:	4688      	mov	r8, r1
900003bc:	2b00      	cmp	r3, #0
900003be:	d14a      	bne.n	90000456 <__udivmoddi4+0xa6>
900003c0:	428a      	cmp	r2, r1
900003c2:	4617      	mov	r7, r2
900003c4:	d962      	bls.n	9000048c <__udivmoddi4+0xdc>
900003c6:	fab2 f682 	clz	r6, r2
900003ca:	b14e      	cbz	r6, 900003e0 <__udivmoddi4+0x30>
900003cc:	f1c6 0320 	rsb	r3, r6, #32
900003d0:	fa01 f806 	lsl.w	r8, r1, r6
900003d4:	fa20 f303 	lsr.w	r3, r0, r3
900003d8:	40b7      	lsls	r7, r6
900003da:	ea43 0808 	orr.w	r8, r3, r8
900003de:	40b4      	lsls	r4, r6
900003e0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900003e4:	fa1f fc87 	uxth.w	ip, r7
900003e8:	fbb8 f1fe 	udiv	r1, r8, lr
900003ec:	0c23      	lsrs	r3, r4, #16
900003ee:	fb0e 8811 	mls	r8, lr, r1, r8
900003f2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
900003f6:	fb01 f20c 	mul.w	r2, r1, ip
900003fa:	429a      	cmp	r2, r3
900003fc:	d909      	bls.n	90000412 <__udivmoddi4+0x62>
900003fe:	18fb      	adds	r3, r7, r3
90000400:	f101 30ff 	add.w	r0, r1, #4294967295
90000404:	f080 80ea 	bcs.w	900005dc <__udivmoddi4+0x22c>
90000408:	429a      	cmp	r2, r3
9000040a:	f240 80e7 	bls.w	900005dc <__udivmoddi4+0x22c>
9000040e:	3902      	subs	r1, #2
90000410:	443b      	add	r3, r7
90000412:	1a9a      	subs	r2, r3, r2
90000414:	b2a3      	uxth	r3, r4
90000416:	fbb2 f0fe 	udiv	r0, r2, lr
9000041a:	fb0e 2210 	mls	r2, lr, r0, r2
9000041e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90000422:	fb00 fc0c 	mul.w	ip, r0, ip
90000426:	459c      	cmp	ip, r3
90000428:	d909      	bls.n	9000043e <__udivmoddi4+0x8e>
9000042a:	18fb      	adds	r3, r7, r3
9000042c:	f100 32ff 	add.w	r2, r0, #4294967295
90000430:	f080 80d6 	bcs.w	900005e0 <__udivmoddi4+0x230>
90000434:	459c      	cmp	ip, r3
90000436:	f240 80d3 	bls.w	900005e0 <__udivmoddi4+0x230>
9000043a:	443b      	add	r3, r7
9000043c:	3802      	subs	r0, #2
9000043e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
90000442:	eba3 030c 	sub.w	r3, r3, ip
90000446:	2100      	movs	r1, #0
90000448:	b11d      	cbz	r5, 90000452 <__udivmoddi4+0xa2>
9000044a:	40f3      	lsrs	r3, r6
9000044c:	2200      	movs	r2, #0
9000044e:	e9c5 3200 	strd	r3, r2, [r5]
90000452:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90000456:	428b      	cmp	r3, r1
90000458:	d905      	bls.n	90000466 <__udivmoddi4+0xb6>
9000045a:	b10d      	cbz	r5, 90000460 <__udivmoddi4+0xb0>
9000045c:	e9c5 0100 	strd	r0, r1, [r5]
90000460:	2100      	movs	r1, #0
90000462:	4608      	mov	r0, r1
90000464:	e7f5      	b.n	90000452 <__udivmoddi4+0xa2>
90000466:	fab3 f183 	clz	r1, r3
9000046a:	2900      	cmp	r1, #0
9000046c:	d146      	bne.n	900004fc <__udivmoddi4+0x14c>
9000046e:	4573      	cmp	r3, lr
90000470:	d302      	bcc.n	90000478 <__udivmoddi4+0xc8>
90000472:	4282      	cmp	r2, r0
90000474:	f200 8105 	bhi.w	90000682 <__udivmoddi4+0x2d2>
90000478:	1a84      	subs	r4, r0, r2
9000047a:	eb6e 0203 	sbc.w	r2, lr, r3
9000047e:	2001      	movs	r0, #1
90000480:	4690      	mov	r8, r2
90000482:	2d00      	cmp	r5, #0
90000484:	d0e5      	beq.n	90000452 <__udivmoddi4+0xa2>
90000486:	e9c5 4800 	strd	r4, r8, [r5]
9000048a:	e7e2      	b.n	90000452 <__udivmoddi4+0xa2>
9000048c:	2a00      	cmp	r2, #0
9000048e:	f000 8090 	beq.w	900005b2 <__udivmoddi4+0x202>
90000492:	fab2 f682 	clz	r6, r2
90000496:	2e00      	cmp	r6, #0
90000498:	f040 80a4 	bne.w	900005e4 <__udivmoddi4+0x234>
9000049c:	1a8a      	subs	r2, r1, r2
9000049e:	0c03      	lsrs	r3, r0, #16
900004a0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900004a4:	b280      	uxth	r0, r0
900004a6:	b2bc      	uxth	r4, r7
900004a8:	2101      	movs	r1, #1
900004aa:	fbb2 fcfe 	udiv	ip, r2, lr
900004ae:	fb0e 221c 	mls	r2, lr, ip, r2
900004b2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900004b6:	fb04 f20c 	mul.w	r2, r4, ip
900004ba:	429a      	cmp	r2, r3
900004bc:	d907      	bls.n	900004ce <__udivmoddi4+0x11e>
900004be:	18fb      	adds	r3, r7, r3
900004c0:	f10c 38ff 	add.w	r8, ip, #4294967295
900004c4:	d202      	bcs.n	900004cc <__udivmoddi4+0x11c>
900004c6:	429a      	cmp	r2, r3
900004c8:	f200 80e0 	bhi.w	9000068c <__udivmoddi4+0x2dc>
900004cc:	46c4      	mov	ip, r8
900004ce:	1a9b      	subs	r3, r3, r2
900004d0:	fbb3 f2fe 	udiv	r2, r3, lr
900004d4:	fb0e 3312 	mls	r3, lr, r2, r3
900004d8:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
900004dc:	fb02 f404 	mul.w	r4, r2, r4
900004e0:	429c      	cmp	r4, r3
900004e2:	d907      	bls.n	900004f4 <__udivmoddi4+0x144>
900004e4:	18fb      	adds	r3, r7, r3
900004e6:	f102 30ff 	add.w	r0, r2, #4294967295
900004ea:	d202      	bcs.n	900004f2 <__udivmoddi4+0x142>
900004ec:	429c      	cmp	r4, r3
900004ee:	f200 80ca 	bhi.w	90000686 <__udivmoddi4+0x2d6>
900004f2:	4602      	mov	r2, r0
900004f4:	1b1b      	subs	r3, r3, r4
900004f6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
900004fa:	e7a5      	b.n	90000448 <__udivmoddi4+0x98>
900004fc:	f1c1 0620 	rsb	r6, r1, #32
90000500:	408b      	lsls	r3, r1
90000502:	fa22 f706 	lsr.w	r7, r2, r6
90000506:	431f      	orrs	r7, r3
90000508:	fa0e f401 	lsl.w	r4, lr, r1
9000050c:	fa20 f306 	lsr.w	r3, r0, r6
90000510:	fa2e fe06 	lsr.w	lr, lr, r6
90000514:	ea4f 4917 	mov.w	r9, r7, lsr #16
90000518:	4323      	orrs	r3, r4
9000051a:	fa00 f801 	lsl.w	r8, r0, r1
9000051e:	fa1f fc87 	uxth.w	ip, r7
90000522:	fbbe f0f9 	udiv	r0, lr, r9
90000526:	0c1c      	lsrs	r4, r3, #16
90000528:	fb09 ee10 	mls	lr, r9, r0, lr
9000052c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
90000530:	fb00 fe0c 	mul.w	lr, r0, ip
90000534:	45a6      	cmp	lr, r4
90000536:	fa02 f201 	lsl.w	r2, r2, r1
9000053a:	d909      	bls.n	90000550 <__udivmoddi4+0x1a0>
9000053c:	193c      	adds	r4, r7, r4
9000053e:	f100 3aff 	add.w	sl, r0, #4294967295
90000542:	f080 809c 	bcs.w	9000067e <__udivmoddi4+0x2ce>
90000546:	45a6      	cmp	lr, r4
90000548:	f240 8099 	bls.w	9000067e <__udivmoddi4+0x2ce>
9000054c:	3802      	subs	r0, #2
9000054e:	443c      	add	r4, r7
90000550:	eba4 040e 	sub.w	r4, r4, lr
90000554:	fa1f fe83 	uxth.w	lr, r3
90000558:	fbb4 f3f9 	udiv	r3, r4, r9
9000055c:	fb09 4413 	mls	r4, r9, r3, r4
90000560:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
90000564:	fb03 fc0c 	mul.w	ip, r3, ip
90000568:	45a4      	cmp	ip, r4
9000056a:	d908      	bls.n	9000057e <__udivmoddi4+0x1ce>
9000056c:	193c      	adds	r4, r7, r4
9000056e:	f103 3eff 	add.w	lr, r3, #4294967295
90000572:	f080 8082 	bcs.w	9000067a <__udivmoddi4+0x2ca>
90000576:	45a4      	cmp	ip, r4
90000578:	d97f      	bls.n	9000067a <__udivmoddi4+0x2ca>
9000057a:	3b02      	subs	r3, #2
9000057c:	443c      	add	r4, r7
9000057e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
90000582:	eba4 040c 	sub.w	r4, r4, ip
90000586:	fba0 ec02 	umull	lr, ip, r0, r2
9000058a:	4564      	cmp	r4, ip
9000058c:	4673      	mov	r3, lr
9000058e:	46e1      	mov	r9, ip
90000590:	d362      	bcc.n	90000658 <__udivmoddi4+0x2a8>
90000592:	d05f      	beq.n	90000654 <__udivmoddi4+0x2a4>
90000594:	b15d      	cbz	r5, 900005ae <__udivmoddi4+0x1fe>
90000596:	ebb8 0203 	subs.w	r2, r8, r3
9000059a:	eb64 0409 	sbc.w	r4, r4, r9
9000059e:	fa04 f606 	lsl.w	r6, r4, r6
900005a2:	fa22 f301 	lsr.w	r3, r2, r1
900005a6:	431e      	orrs	r6, r3
900005a8:	40cc      	lsrs	r4, r1
900005aa:	e9c5 6400 	strd	r6, r4, [r5]
900005ae:	2100      	movs	r1, #0
900005b0:	e74f      	b.n	90000452 <__udivmoddi4+0xa2>
900005b2:	fbb1 fcf2 	udiv	ip, r1, r2
900005b6:	0c01      	lsrs	r1, r0, #16
900005b8:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
900005bc:	b280      	uxth	r0, r0
900005be:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
900005c2:	463b      	mov	r3, r7
900005c4:	4638      	mov	r0, r7
900005c6:	463c      	mov	r4, r7
900005c8:	46b8      	mov	r8, r7
900005ca:	46be      	mov	lr, r7
900005cc:	2620      	movs	r6, #32
900005ce:	fbb1 f1f7 	udiv	r1, r1, r7
900005d2:	eba2 0208 	sub.w	r2, r2, r8
900005d6:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
900005da:	e766      	b.n	900004aa <__udivmoddi4+0xfa>
900005dc:	4601      	mov	r1, r0
900005de:	e718      	b.n	90000412 <__udivmoddi4+0x62>
900005e0:	4610      	mov	r0, r2
900005e2:	e72c      	b.n	9000043e <__udivmoddi4+0x8e>
900005e4:	f1c6 0220 	rsb	r2, r6, #32
900005e8:	fa2e f302 	lsr.w	r3, lr, r2
900005ec:	40b7      	lsls	r7, r6
900005ee:	40b1      	lsls	r1, r6
900005f0:	fa20 f202 	lsr.w	r2, r0, r2
900005f4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900005f8:	430a      	orrs	r2, r1
900005fa:	fbb3 f8fe 	udiv	r8, r3, lr
900005fe:	b2bc      	uxth	r4, r7
90000600:	fb0e 3318 	mls	r3, lr, r8, r3
90000604:	0c11      	lsrs	r1, r2, #16
90000606:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
9000060a:	fb08 f904 	mul.w	r9, r8, r4
9000060e:	40b0      	lsls	r0, r6
90000610:	4589      	cmp	r9, r1
90000612:	ea4f 4310 	mov.w	r3, r0, lsr #16
90000616:	b280      	uxth	r0, r0
90000618:	d93e      	bls.n	90000698 <__udivmoddi4+0x2e8>
9000061a:	1879      	adds	r1, r7, r1
9000061c:	f108 3cff 	add.w	ip, r8, #4294967295
90000620:	d201      	bcs.n	90000626 <__udivmoddi4+0x276>
90000622:	4589      	cmp	r9, r1
90000624:	d81f      	bhi.n	90000666 <__udivmoddi4+0x2b6>
90000626:	eba1 0109 	sub.w	r1, r1, r9
9000062a:	fbb1 f9fe 	udiv	r9, r1, lr
9000062e:	fb09 f804 	mul.w	r8, r9, r4
90000632:	fb0e 1119 	mls	r1, lr, r9, r1
90000636:	b292      	uxth	r2, r2
90000638:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000063c:	4542      	cmp	r2, r8
9000063e:	d229      	bcs.n	90000694 <__udivmoddi4+0x2e4>
90000640:	18ba      	adds	r2, r7, r2
90000642:	f109 31ff 	add.w	r1, r9, #4294967295
90000646:	d2c4      	bcs.n	900005d2 <__udivmoddi4+0x222>
90000648:	4542      	cmp	r2, r8
9000064a:	d2c2      	bcs.n	900005d2 <__udivmoddi4+0x222>
9000064c:	f1a9 0102 	sub.w	r1, r9, #2
90000650:	443a      	add	r2, r7
90000652:	e7be      	b.n	900005d2 <__udivmoddi4+0x222>
90000654:	45f0      	cmp	r8, lr
90000656:	d29d      	bcs.n	90000594 <__udivmoddi4+0x1e4>
90000658:	ebbe 0302 	subs.w	r3, lr, r2
9000065c:	eb6c 0c07 	sbc.w	ip, ip, r7
90000660:	3801      	subs	r0, #1
90000662:	46e1      	mov	r9, ip
90000664:	e796      	b.n	90000594 <__udivmoddi4+0x1e4>
90000666:	eba7 0909 	sub.w	r9, r7, r9
9000066a:	4449      	add	r1, r9
9000066c:	f1a8 0c02 	sub.w	ip, r8, #2
90000670:	fbb1 f9fe 	udiv	r9, r1, lr
90000674:	fb09 f804 	mul.w	r8, r9, r4
90000678:	e7db      	b.n	90000632 <__udivmoddi4+0x282>
9000067a:	4673      	mov	r3, lr
9000067c:	e77f      	b.n	9000057e <__udivmoddi4+0x1ce>
9000067e:	4650      	mov	r0, sl
90000680:	e766      	b.n	90000550 <__udivmoddi4+0x1a0>
90000682:	4608      	mov	r0, r1
90000684:	e6fd      	b.n	90000482 <__udivmoddi4+0xd2>
90000686:	443b      	add	r3, r7
90000688:	3a02      	subs	r2, #2
9000068a:	e733      	b.n	900004f4 <__udivmoddi4+0x144>
9000068c:	f1ac 0c02 	sub.w	ip, ip, #2
90000690:	443b      	add	r3, r7
90000692:	e71c      	b.n	900004ce <__udivmoddi4+0x11e>
90000694:	4649      	mov	r1, r9
90000696:	e79c      	b.n	900005d2 <__udivmoddi4+0x222>
90000698:	eba1 0109 	sub.w	r1, r1, r9
9000069c:	46c4      	mov	ip, r8
9000069e:	fbb1 f9fe 	udiv	r9, r1, lr
900006a2:	fb09 f804 	mul.w	r8, r9, r4
900006a6:	e7c4      	b.n	90000632 <__udivmoddi4+0x282>

900006a8 <__aeabi_idiv0>:
900006a8:	4770      	bx	lr
900006aa:	bf00      	nop

900006ac <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
900006ac:	f8df d034 	ldr.w	sp, [pc, #52]	@ 900006e4 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
900006b0:	2100      	movs	r1, #0
  b  LoopCopyDataInit
900006b2:	e003      	b.n	900006bc <LoopCopyDataInit>

900006b4 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
900006b4:	4b0c      	ldr	r3, [pc, #48]	@ (900006e8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
900006b6:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
900006b8:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
900006ba:	3104      	adds	r1, #4

900006bc <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
900006bc:	480b      	ldr	r0, [pc, #44]	@ (900006ec <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
900006be:	4b0c      	ldr	r3, [pc, #48]	@ (900006f0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
900006c0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
900006c2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
900006c4:	d3f6      	bcc.n	900006b4 <CopyDataInit>
  ldr  r2, =_sbss
900006c6:	4a0b      	ldr	r2, [pc, #44]	@ (900006f4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
900006c8:	e002      	b.n	900006d0 <LoopFillZerobss>

900006ca <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
900006ca:	2300      	movs	r3, #0
  str  r3, [r2], #4
900006cc:	f842 3b04 	str.w	r3, [r2], #4

900006d0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
900006d0:	4b09      	ldr	r3, [pc, #36]	@ (900006f8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
900006d2:	429a      	cmp	r2, r3
  bcc  FillZerobss
900006d4:	d3f9      	bcc.n	900006ca <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
900006d6:	f003 faf1 	bl	90003cbc <SystemInit>
/* Call static constructors */
    bl __libc_init_array
900006da:	f028 f98b 	bl	900289f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
900006de:	f001 fce1 	bl	900020a4 <main>
  bx  lr    
900006e2:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
900006e4:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
900006e8:	90036364 	.word	0x90036364
  ldr  r0, =_sdata
900006ec:	20000000 	.word	0x20000000
  ldr  r3, =_edata
900006f0:	20000220 	.word	0x20000220
  ldr  r2, =_sbss
900006f4:	20000420 	.word	0x20000420
  ldr  r3, = _ebss
900006f8:	2001b780 	.word	0x2001b780

900006fc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
900006fc:	e7fe      	b.n	900006fc <ADC_IRQHandler>
	...

90000700 <LEDS_CGI_Handler>:

/**
  * @brief  CGI handler for LEDs control
  */
const char * LEDS_CGI_Handler(int iIndex, int iNumParams, char *pcParam[], char *pcValue[])
{
90000700:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90000704:	460d      	mov	r5, r1
90000706:	4616      	mov	r6, r2
90000708:	461f      	mov	r7, r3
  uint32_t i;

  /* We have only one SSI handler iIndex = 0 */
  if (iIndex==0)
9000070a:	4604      	mov	r4, r0
9000070c:	b960      	cbnz	r0, 90000728 <LEDS_CGI_Handler+0x28>
  {
    /* All LEDs off, or when only one LED used, slower toggling timer value */
    /* BSP_LED_Off(LED1); */
    LEDTimer = LED_TIMER_LONG;
9000070e:	f8df 8048 	ldr.w	r8, [pc, #72]	@ 90000758 <LEDS_CGI_Handler+0x58>
90000712:	4b0f      	ldr	r3, [pc, #60]	@ (90000750 <LEDS_CGI_Handler+0x50>)

    /* Check cgi parameter : example GET /leds.cgi?led=2&led=4 */
    for (i=0; i<(uint32_t)iNumParams; i++)
    {
      /* check parameter "led" */
      if (strcmp(pcParam[i] , "led")==0)
90000714:	f8df 9044 	ldr.w	r9, [pc, #68]	@ 9000075c <LEDS_CGI_Handler+0x5c>
      {
        /* Switch LED1 ON if 1, or when only one LED used, faster toggling timer value */
        if(strcmp(pcValue[i], "1") ==0)
90000718:	f8df a044 	ldr.w	sl, [pc, #68]	@ 90000760 <LEDS_CGI_Handler+0x60>
        {
          /* BSP_LED_On(LED1); */
          LEDTimer = LED_TIMER_SHORT;
9000071c:	f8df b044 	ldr.w	fp, [pc, #68]	@ 90000764 <LEDS_CGI_Handler+0x64>
    LEDTimer = LED_TIMER_LONG;
90000720:	f8c8 3000 	str.w	r3, [r8]
    for (i=0; i<(uint32_t)iNumParams; i++)
90000724:	42ac      	cmp	r4, r5
90000726:	d302      	bcc.n	9000072e <LEDS_CGI_Handler+0x2e>
      }
    }
  }
  /* uri to send after cgi call*/
  return "/STM32F7xxLED.html";
}
90000728:	480a      	ldr	r0, [pc, #40]	@ (90000754 <LEDS_CGI_Handler+0x54>)
9000072a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (strcmp(pcParam[i] , "led")==0)
9000072e:	4649      	mov	r1, r9
90000730:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
90000734:	f7ff fd6c 	bl	90000210 <strcmp>
90000738:	b938      	cbnz	r0, 9000074a <LEDS_CGI_Handler+0x4a>
        if(strcmp(pcValue[i], "1") ==0)
9000073a:	4651      	mov	r1, sl
9000073c:	f857 0024 	ldr.w	r0, [r7, r4, lsl #2]
90000740:	f7ff fd66 	bl	90000210 <strcmp>
90000744:	b908      	cbnz	r0, 9000074a <LEDS_CGI_Handler+0x4a>
          LEDTimer = LED_TIMER_SHORT;
90000746:	f8c8 b000 	str.w	fp, [r8]
    for (i=0; i<(uint32_t)iNumParams; i++)
9000074a:	3401      	adds	r4, #1
9000074c:	e7ea      	b.n	90000724 <LEDS_CGI_Handler+0x24>
9000074e:	bf00      	nop
90000750:	0003fffc 	.word	0x0003fffc
90000754:	90029540 	.word	0x90029540
90000758:	20000060 	.word	0x20000060
9000075c:	90029553 	.word	0x90029553
90000760:	90029588 	.word	0x90029588
90000764:	0001fffe 	.word	0x0001fffe

90000768 <mySSIHandler>:

/**** SSI handler ****/

u16_t mySSIHandler(int iIndex, char *pcInsert, int iInsertLen)
{
90000768:	b570      	push	{r4, r5, r6, lr}
9000076a:	460c      	mov	r4, r1
9000076c:	b086      	sub	sp, #24
  /* We have only one SSI handler iIndex = 0 */
  if (iIndex == 0)
9000076e:	bb68      	cbnz	r0, 900007cc <mySSIHandler+0x64>
  {
    if (HAL_GPIO_ReadPin(BUTTON_GPIO_Port, BUTTON_Pin) == 1U)
90000770:	f44f 6100 	mov.w	r1, #2048	@ 0x800
90000774:	4816      	ldr	r0, [pc, #88]	@ (900007d0 <mySSIHandler+0x68>)
90000776:	f003 ff4f 	bl	90004618 <HAL_GPIO_ReadPin>
9000077a:	2801      	cmp	r0, #1
9000077c:	d116      	bne.n	900007ac <mySSIHandler+0x44>
    {
      char myStr1[] = " BUTTON PRESSED"; /* string to be displayed on web page */
9000077e:	4b15      	ldr	r3, [pc, #84]	@ (900007d4 <mySSIHandler+0x6c>)
90000780:	ad01      	add	r5, sp, #4
90000782:	f103 0610 	add.w	r6, r3, #16
90000786:	6818      	ldr	r0, [r3, #0]
90000788:	3308      	adds	r3, #8
9000078a:	f853 1c04 	ldr.w	r1, [r3, #-4]
9000078e:	462a      	mov	r2, r5
90000790:	42b3      	cmp	r3, r6
90000792:	c203      	stmia	r2!, {r0, r1}
90000794:	4615      	mov	r5, r2
90000796:	d1f6      	bne.n	90000786 <mySSIHandler+0x1e>
    else
    {
      char myStr2[] = " BUTTON NOT PRESSED"; /* string to be displayed on web page */

      /* Copy string to be displayed */
      (void)strcpy(pcInsert, myStr2);
90000798:	a901      	add	r1, sp, #4
9000079a:	4620      	mov	r0, r4
9000079c:	f028 f951 	bl	90028a42 <strcpy>

      /* Return number of characters that need to be inserted in html */
      return (u16_t) strlen(myStr2);
900007a0:	a801      	add	r0, sp, #4
900007a2:	f7ff fd3f 	bl	90000224 <strlen>
900007a6:	b280      	uxth	r0, r0
    }

  }
  UNUSED(iInsertLen);
  return 0;
} /* mySSIHandler */
900007a8:	b006      	add	sp, #24
900007aa:	bd70      	pop	{r4, r5, r6, pc}
      char myStr2[] = " BUTTON NOT PRESSED"; /* string to be displayed on web page */
900007ac:	4b0a      	ldr	r3, [pc, #40]	@ (900007d8 <mySSIHandler+0x70>)
900007ae:	aa01      	add	r2, sp, #4
900007b0:	f103 0610 	add.w	r6, r3, #16
900007b4:	6818      	ldr	r0, [r3, #0]
900007b6:	3308      	adds	r3, #8
900007b8:	f853 1c04 	ldr.w	r1, [r3, #-4]
900007bc:	4615      	mov	r5, r2
900007be:	42b3      	cmp	r3, r6
900007c0:	c503      	stmia	r5!, {r0, r1}
900007c2:	462a      	mov	r2, r5
900007c4:	d1f6      	bne.n	900007b4 <mySSIHandler+0x4c>
900007c6:	6818      	ldr	r0, [r3, #0]
900007c8:	6028      	str	r0, [r5, #0]
900007ca:	e7e5      	b.n	90000798 <mySSIHandler+0x30>
  return 0;
900007cc:	2000      	movs	r0, #0
900007ce:	e7eb      	b.n	900007a8 <mySSIHandler+0x40>
900007d0:	40022000 	.word	0x40022000
900007d4:	90029557 	.word	0x90029557
900007d8:	90029567 	.word	0x90029567

900007dc <myCGIinit>:
	CGI_TAB[0] = LEDS_CGI;
900007dc:	4a04      	ldr	r2, [pc, #16]	@ (900007f0 <myCGIinit+0x14>)
900007de:	4b05      	ldr	r3, [pc, #20]	@ (900007f4 <myCGIinit+0x18>)
900007e0:	e892 0003 	ldmia.w	r2, {r0, r1}
900007e4:	e883 0003 	stmia.w	r3, {r0, r1}
  http_set_cgi_handlers(CGI_TAB, 1);
900007e8:	2101      	movs	r1, #1
900007ea:	4618      	mov	r0, r3
900007ec:	f00e bd6c 	b.w	9000f2c8 <http_set_cgi_handlers>
900007f0:	9002a628 	.word	0x9002a628
900007f4:	2000043c 	.word	0x2000043c

900007f8 <mySSIinit>:
/**** Initialize SSI handlers ****/
void mySSIinit(void)
{
  /* Configure SSI handler function */
  /* theSSItags is an array of SSI tag strings to search for in SSI-enabled files */
   http_set_ssi_handler(mySSIHandler, (char const **)theSSItags, numSSItags);
900007f8:	2201      	movs	r2, #1
900007fa:	4902      	ldr	r1, [pc, #8]	@ (90000804 <mySSIinit+0xc>)
900007fc:	4802      	ldr	r0, [pc, #8]	@ (90000808 <mySSIinit+0x10>)
900007fe:	f00e bd55 	b.w	9000f2ac <http_set_ssi_handler>
90000802:	bf00      	nop
90000804:	20000004 	.word	0x20000004
90000808:	90000769 	.word	0x90000769

9000080c <http_server_init>:

/**
  * @brief  Http webserver Init
  */
void http_server_init(void)
{
9000080c:	b508      	push	{r3, lr}
  /* Httpd Init */
  httpd_init();
9000080e:	f00e fd31 	bl	9000f274 <httpd_init>

  /* configure CGI handlers (LEDs control CGI) */
  myCGIinit();
90000812:	f7ff ffe3 	bl	900007dc <myCGIinit>

    /* configure SSI handlers */
  mySSIinit();
}
90000816:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  mySSIinit();
9000081a:	f7ff bfed 	b.w	900007f8 <mySSIinit>
	...

90000820 <low_level_output>:
  *       strange results. You might consider waiting for space in the DMA queue
  *       to become available since the stack doesn't retry to send a packet
  *       dropped because of memory failure (except for the TCP timers).
  */
static err_t low_level_output(struct netif *netif, struct pbuf *p)
{
90000820:	b538      	push	{r3, r4, r5, lr}
  struct pbuf *q;
  uint8_t *pdata;
  uint32_t Trials = CDC_RNDIS_MAX_TX_WAIT_TRIALS;

  USBD_CDC_RNDIS_HandleTypeDef *hcdc = (USBD_CDC_RNDIS_HandleTypeDef*)(USBD_Device.pClassData);
90000822:	4b18      	ldr	r3, [pc, #96]	@ (90000884 <low_level_output+0x64>)
{
90000824:	460c      	mov	r4, r1
  USBD_CDC_RNDIS_HandleTypeDef *hcdc = (USBD_CDC_RNDIS_HandleTypeDef*)(USBD_Device.pClassData);
90000826:	f8d3 52bc 	ldr.w	r5, [r3, #700]	@ 0x2bc
  uint32_t temp = hcdc->TxState;
9000082a:	f8d5 27f8 	ldr.w	r2, [r5, #2040]	@ 0x7f8

  /* Check if the TX State is not busy */
  while ((temp != 0U) && (Trials > 0U))
9000082e:	b112      	cbz	r2, 90000836 <low_level_output+0x16>
  }

  /* If no success getting the TX state ready, return error */
  if (Trials == 0U)
  {
    return (err_t)ERR_USE;
90000830:	f06f 0007 	mvn.w	r0, #7
  {
    return (err_t)ERR_OK;
  }
  UNUSED(netif);
  return (err_t)ERR_USE;
}
90000834:	bd38      	pop	{r3, r4, r5, pc}
  pdata = hcdc->TxBuffer + sizeof(USBD_CDC_RNDIS_PacketMsgTypeDef);
90000836:	f8d5 37d8 	ldr.w	r3, [r5, #2008]	@ 0x7d8
  hcdc->TxLength = 0;
9000083a:	f8c5 27e0 	str.w	r2, [r5, #2016]	@ 0x7e0
  pdata = hcdc->TxBuffer + sizeof(USBD_CDC_RNDIS_PacketMsgTypeDef);
9000083e:	332c      	adds	r3, #44	@ 0x2c
  for (q = p; q != NULL; q = q->next)
90000840:	b984      	cbnz	r4, 90000864 <low_level_output+0x44>
  hcdc->TxLength += sizeof(USBD_CDC_RNDIS_PacketMsgTypeDef);
90000842:	f8d5 27e0 	ldr.w	r2, [r5, #2016]	@ 0x7e0
  (void)USBD_CDC_RNDIS_SetTxBuffer(&USBD_Device, hcdc->TxBuffer, hcdc->TxLength);
90000846:	f8d5 17d8 	ldr.w	r1, [r5, #2008]	@ 0x7d8
  hcdc->TxLength += sizeof(USBD_CDC_RNDIS_PacketMsgTypeDef);
9000084a:	322c      	adds	r2, #44	@ 0x2c
  (void)USBD_CDC_RNDIS_SetTxBuffer(&USBD_Device, hcdc->TxBuffer, hcdc->TxLength);
9000084c:	480d      	ldr	r0, [pc, #52]	@ (90000884 <low_level_output+0x64>)
  hcdc->TxLength += sizeof(USBD_CDC_RNDIS_PacketMsgTypeDef);
9000084e:	f8c5 27e0 	str.w	r2, [r5, #2016]	@ 0x7e0
  (void)USBD_CDC_RNDIS_SetTxBuffer(&USBD_Device, hcdc->TxBuffer, hcdc->TxLength);
90000852:	f00e ff15 	bl	9000f680 <USBD_CDC_RNDIS_SetTxBuffer>
  if (USBD_CDC_RNDIS_TransmitPacket(&USBD_Device) == (uint8_t)USBD_OK)
90000856:	480b      	ldr	r0, [pc, #44]	@ (90000884 <low_level_output+0x64>)
90000858:	f00e ff2c 	bl	9000f6b4 <USBD_CDC_RNDIS_TransmitPacket>
9000085c:	2800      	cmp	r0, #0
9000085e:	d1e7      	bne.n	90000830 <low_level_output+0x10>
    return (err_t)ERR_OK;
90000860:	4620      	mov	r0, r4
90000862:	e7e7      	b.n	90000834 <low_level_output+0x14>
    (void) memcpy(pdata, q->payload, q->len);
90000864:	8962      	ldrh	r2, [r4, #10]
90000866:	4618      	mov	r0, r3
90000868:	6861      	ldr	r1, [r4, #4]
9000086a:	f028 f8f2 	bl	90028a52 <memcpy>
    pdata += q->len;
9000086e:	8961      	ldrh	r1, [r4, #10]
    hcdc->TxLength += q->len;
90000870:	f8d5 27e0 	ldr.w	r2, [r5, #2016]	@ 0x7e0
    (void) memcpy(pdata, q->payload, q->len);
90000874:	4603      	mov	r3, r0
  for (q = p; q != NULL; q = q->next)
90000876:	6824      	ldr	r4, [r4, #0]
    hcdc->TxLength += q->len;
90000878:	440a      	add	r2, r1
    pdata += q->len;
9000087a:	440b      	add	r3, r1
    hcdc->TxLength += q->len;
9000087c:	f8c5 27e0 	str.w	r2, [r5, #2016]	@ 0x7e0
  for (q = p; q != NULL; q = q->next)
90000880:	e7de      	b.n	90000840 <low_level_output+0x20>
90000882:	bf00      	nop
90000884:	20002c0c 	.word	0x20002c0c

90000888 <ethernetif_input>:
void ethernetif_input(struct netif *pnetif)
{
  err_t err;
  struct pbuf *p;

  USBD_CDC_RNDIS_HandleTypeDef *hcdc = (USBD_CDC_RNDIS_HandleTypeDef*)(USBD_Device.pClassData);
90000888:	4b1d      	ldr	r3, [pc, #116]	@ (90000900 <ethernetif_input+0x78>)
{
9000088a:	b570      	push	{r4, r5, r6, lr}
  USBD_CDC_RNDIS_HandleTypeDef *hcdc = (USBD_CDC_RNDIS_HandleTypeDef*)(USBD_Device.pClassData);
9000088c:	f8d3 42bc 	ldr.w	r4, [r3, #700]	@ 0x2bc
{
90000890:	4606      	mov	r6, r0
  if ((hcdc->RxLength > 0U) && (temp == 1U))
90000892:	f8d4 17dc 	ldr.w	r1, [r4, #2012]	@ 0x7dc
  uint32_t temp = hcdc->RxState;
90000896:	f8d4 37fc 	ldr.w	r3, [r4, #2044]	@ 0x7fc
  if ((hcdc->RxLength > 0U) && (temp == 1U))
9000089a:	b379      	cbz	r1, 900008fc <ethernetif_input+0x74>
9000089c:	2b01      	cmp	r3, #1
9000089e:	d12d      	bne.n	900008fc <ethernetif_input+0x74>
    p = pbuf_alloc(PBUF_RAW, (uint16_t)hcdc->RxLength, PBUF_POOL);
900008a0:	f44f 72c1 	mov.w	r2, #386	@ 0x182
900008a4:	b289      	uxth	r1, r1
900008a6:	2000      	movs	r0, #0
900008a8:	f00b f848 	bl	9000b93c <pbuf_alloc>
  if (p != NULL)
900008ac:	4605      	mov	r5, r0
900008ae:	b328      	cbz	r0, 900008fc <ethernetif_input+0x74>
    (void) memcpy(p->payload, (uint8_t *)hcdc->RxBuffer, (uint16_t)hcdc->RxLength);
900008b0:	f8d4 17d4 	ldr.w	r1, [r4, #2004]	@ 0x7d4
900008b4:	f8b4 27dc 	ldrh.w	r2, [r4, #2012]	@ 0x7dc
900008b8:	6840      	ldr	r0, [r0, #4]
900008ba:	f028 f8ca 	bl	90028a52 <memcpy>
    p->len = (uint16_t)hcdc->RxLength;
900008be:	f8d4 37dc 	ldr.w	r3, [r4, #2012]	@ 0x7dc
  {
    return;
  }

  /* entry point to the LwIP stack */
  err = pnetif->input(p, pnetif);
900008c2:	4631      	mov	r1, r6
900008c4:	4628      	mov	r0, r5
    p->len = (uint16_t)hcdc->RxLength;
900008c6:	816b      	strh	r3, [r5, #10]
  err = pnetif->input(p, pnetif);
900008c8:	6933      	ldr	r3, [r6, #16]
900008ca:	4798      	blx	r3

  if (err != (err_t)ERR_OK)
900008cc:	b110      	cbz	r0, 900008d4 <ethernetif_input+0x4c>
  {
    LWIP_DEBUGF(NETIF_DEBUG, ("ethernetif_input: IP input error\n"));
    (void) pbuf_free(p);
900008ce:	4628      	mov	r0, r5
900008d0:	f00b f808 	bl	9000b8e4 <pbuf_free>
    p = NULL;
  }

  /* Reset the Received buffer length to zero for next transfer */
  hcdc->RxLength = 0;
900008d4:	2300      	movs	r3, #0
  hcdc->RxState = 0;

    /* Reset the Rx buffer pointer to origin */
  (void) USBD_CDC_RNDIS_SetRxBuffer(&USBD_Device, UserRxBuffer);
900008d6:	490b      	ldr	r1, [pc, #44]	@ (90000904 <ethernetif_input+0x7c>)
900008d8:	4809      	ldr	r0, [pc, #36]	@ (90000900 <ethernetif_input+0x78>)
  hcdc->RxLength = 0;
900008da:	f8c4 37dc 	str.w	r3, [r4, #2012]	@ 0x7dc
  hcdc->RxState = 0;
900008de:	f8c4 37fc 	str.w	r3, [r4, #2044]	@ 0x7fc
  (void) USBD_CDC_RNDIS_SetRxBuffer(&USBD_Device, UserRxBuffer);
900008e2:	f00e fedb 	bl	9000f69c <USBD_CDC_RNDIS_SetRxBuffer>
  /* Prepare Out endpoint to receive next packet in current/new frame */
  (void) USBD_LL_PrepareReceive(&USBD_Device,
                         CDC_RNDIS_OUT_EP,
                         (uint8_t*)(hcdc->RxBuffer),
                         (uint16_t)hcdc->MaxPcktLen);
900008e6:	f8d4 3800 	ldr.w	r3, [r4, #2048]	@ 0x800
  (void) USBD_LL_PrepareReceive(&USBD_Device,
900008ea:	f8d4 27d4 	ldr.w	r2, [r4, #2004]	@ 0x7d4
900008ee:	2101      	movs	r1, #1
900008f0:	b29b      	uxth	r3, r3
900008f2:	4803      	ldr	r0, [pc, #12]	@ (90000900 <ethernetif_input+0x78>)

  /* Free the allocated buffer :
     The allocated buffer is freed by low layer ethernet functions.
  */
   UNUSED(p);
}
900008f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  (void) USBD_LL_PrepareReceive(&USBD_Device,
900008f8:	f001 bb60 	b.w	90001fbc <USBD_LL_PrepareReceive>
}
900008fc:	bd70      	pop	{r4, r5, r6, pc}
900008fe:	bf00      	nop
90000900:	20002c0c 	.word	0x20002c0c
90000904:	20001cd0 	.word	0x20001cd0

90000908 <ethernetif_init>:
  */
err_t ethernetif_init(struct netif *netif)
{
  LWIP_ASSERT("netif != NULL", (netif != NULL));

  netif->name[0] = IFNAME0;
90000908:	f247 4373 	movw	r3, #29811	@ 0x7473
  netif->hwaddr[2] =  CDC_RNDIS_MAC_ADDR2;
9000090c:	4a0a      	ldr	r2, [pc, #40]	@ (90000938 <ethernetif_init+0x30>)
  netif->name[0] = IFNAME0;
9000090e:	8643      	strh	r3, [r0, #50]	@ 0x32

  /* We directly use etharp_output() here to save a function call.
   * You can instead declare your own function an call etharp_output()
   * from it if you have to do some checks before sending (e.g. if link
   * is available...) */
  netif->output = etharp_output;
90000910:	4b0a      	ldr	r3, [pc, #40]	@ (9000093c <ethernetif_init+0x34>)
90000912:	6143      	str	r3, [r0, #20]
  netif->linkoutput = low_level_output;
90000914:	4b0a      	ldr	r3, [pc, #40]	@ (90000940 <ethernetif_init+0x38>)
90000916:	6183      	str	r3, [r0, #24]
  netif->hwaddr[2] =  CDC_RNDIS_MAC_ADDR2;
90000918:	f240 3302 	movw	r3, #770	@ 0x302
9000091c:	e9c0 230a 	strd	r2, r3, [r0, #40]	@ 0x28
  netif->hwaddr_len = ETH_HWADDR_LEN;
90000920:	2306      	movs	r3, #6
90000922:	f880 3030 	strb.w	r3, [r0, #48]	@ 0x30
  netif->flags |= NETIF_FLAG_BROADCAST | NETIF_FLAG_ETHARP;
90000926:	f890 3031 	ldrb.w	r3, [r0, #49]	@ 0x31
9000092a:	f043 030a 	orr.w	r3, r3, #10
9000092e:	f880 3031 	strb.w	r3, [r0, #49]	@ 0x31

  /* initialize the hardware */
  low_level_init(netif);

  return (err_t)ERR_OK;
}
90000932:	2000      	movs	r0, #0
90000934:	4770      	bx	lr
90000936:	bf00      	nop
90000938:	020005dc 	.word	0x020005dc
9000093c:	9000a141 	.word	0x9000a141
90000940:	90000821 	.word	0x90000821

90000944 <sys_now>:
  * @param  None
  * @retval Current Time value
  */
u32_t sys_now(void)
{
  return HAL_GetTick();
90000944:	f003 ba08 	b.w	90003d58 <HAL_GetTick>

90000948 <ethernetif_update_config>:
  *         to update low level driver configuration.
* @param  netif: The network interface
  * @retval None
  */
void ethernetif_update_config(struct netif *netif)
{
90000948:	b510      	push	{r4, lr}

  if(netif_is_link_up(netif) == 1U)
9000094a:	f890 2031 	ldrb.w	r2, [r0, #49]	@ 0x31
{
9000094e:	4604      	mov	r4, r0
    HAL_GPIO_WritePin(GPIOH, GPIO_PIN_2, 1);
  }
  else
  {
//    BSP_LED_Off(LED1);
    HAL_GPIO_WritePin(GPIOH, GPIO_PIN_2, 0);
90000950:	2104      	movs	r1, #4
90000952:	4805      	ldr	r0, [pc, #20]	@ (90000968 <ethernetif_update_config+0x20>)
  if(netif_is_link_up(netif) == 1U)
90000954:	f012 0204 	ands.w	r2, r2, #4
    HAL_GPIO_WritePin(GPIOH, GPIO_PIN_2, 1);
90000958:	bf18      	it	ne
9000095a:	2201      	movne	r2, #1
    HAL_GPIO_WritePin(GPIOH, GPIO_PIN_2, 0);
9000095c:	f003 fe62 	bl	90004624 <HAL_GPIO_WritePin>
  }

  ethernetif_notify_conn_changed(netif);
90000960:	4620      	mov	r0, r4
90000962:	f001 f8f7 	bl	90001b54 <ethernetif_notify_conn_changed>
}
90000966:	bd10      	pop	{r4, pc}
90000968:	40021c00 	.word	0x40021c00

9000096c <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
9000096c:	4770      	bx	lr

9000096e <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
9000096e:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000970:	f000 fde4 	bl	9000153c <touchgfx_components_init>
    touchgfx_init();
}
90000974:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000978:	f000 bd68 	b.w	9000144c <touchgfx_init>

9000097c <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
9000097c:	f000 bde0 	b.w	90001540 <touchgfx_taskEntry>

90000980 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000980:	6840      	ldr	r0, [r0, #4]
    }
90000982:	4770      	bx	lr

90000984 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000984:	6041      	str	r1, [r0, #4]
    }
90000986:	4770      	bx	lr

90000988 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000988:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
9000098c:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	@ 0xdfc
90000990:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
90000994:	f8c2 3dfc 	str.w	r3, [r2, #3580]	@ 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000998:	4b05      	ldr	r3, [pc, #20]	@ (900009b0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
9000099a:	4a06      	ldr	r2, [pc, #24]	@ (900009b4 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
9000099c:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
900009a0:	430a      	orrs	r2, r1
900009a2:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
900009a6:	681a      	ldr	r2, [r3, #0]
900009a8:	f042 0201 	orr.w	r2, r2, #1
900009ac:	601a      	str	r2, [r3, #0]
}
900009ae:	4770      	bx	lr
900009b0:	e0001000 	.word	0xe0001000
900009b4:	c5acce55 	.word	0xc5acce55

900009b8 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
900009b8:	1a52      	subs	r2, r2, r1
900009ba:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
900009be:	fbb2 f0f3 	udiv	r0, r2, r3
900009c2:	4770      	bx	lr

900009c4 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
900009c4:	4b01      	ldr	r3, [pc, #4]	@ (900009cc <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
900009c6:	6858      	ldr	r0, [r3, #4]
}
900009c8:	4770      	bx	lr
900009ca:	bf00      	nop
900009cc:	e0001000 	.word	0xe0001000

900009d0 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
900009d0:	4770      	bx	lr

900009d2 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
900009d2:	b510      	push	{r4, lr}
900009d4:	4604      	mov	r4, r0
900009d6:	210c      	movs	r1, #12
900009d8:	f026 fda2 	bl	90027520 <_ZdlPvj>
900009dc:	4620      	mov	r0, r4
900009de:	bd10      	pop	{r4, pc}

900009e0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
900009e0:	6803      	ldr	r3, [r0, #0]
{
900009e2:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
900009e4:	691b      	ldr	r3, [r3, #16]
{
900009e6:	4604      	mov	r4, r0
    if (active) //idle task sched out
900009e8:	b131      	cbz	r1, 900009f8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
900009ea:	4798      	blx	r3
900009ec:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
900009ee:	6863      	ldr	r3, [r4, #4]
900009f0:	1a9b      	subs	r3, r3, r2
900009f2:	4403      	add	r3, r0
900009f4:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
900009f6:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
900009f8:	4798      	blx	r3
900009fa:	60a0      	str	r0, [r4, #8]
}
900009fc:	e7fb      	b.n	900009f6 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

900009fe <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
900009fe:	4770      	bx	lr

90000a00 <_ZN20STM32TouchController11sampleTouchERlS0_>:
     */
    assert((BSP_TS_Init(480, 272) == TS_OK));
}

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000a00:	b530      	push	{r4, r5, lr}
90000a02:	b08d      	sub	sp, #52	@ 0x34
90000a04:	460d      	mov	r5, r1
90000a06:	4614      	mov	r4, r2
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_StateTypeDef state = { 0 };
90000a08:	2100      	movs	r1, #0
90000a0a:	222c      	movs	r2, #44	@ 0x2c
90000a0c:	a801      	add	r0, sp, #4
90000a0e:	f027 ff2a 	bl	90028866 <memset>
    BSP_TS_GetState(&state);
90000a12:	a801      	add	r0, sp, #4
90000a14:	f003 f896 	bl	90003b44 <BSP_TS_GetState>
    if (state.touchDetected)
90000a18:	f89d 0004 	ldrb.w	r0, [sp, #4]
90000a1c:	b130      	cbz	r0, 90000a2c <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>
    {
        x = state.touchX[0];
90000a1e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
        y = state.touchY[0];

        return true;
90000a22:	2001      	movs	r0, #1
        x = state.touchX[0];
90000a24:	602b      	str	r3, [r5, #0]
        y = state.touchY[0];
90000a26:	f8bd 3010 	ldrh.w	r3, [sp, #16]
90000a2a:	6023      	str	r3, [r4, #0]
    }
    return false;
}
90000a2c:	b00d      	add	sp, #52	@ 0x34
90000a2e:	bd30      	pop	{r4, r5, pc}

90000a30 <_ZN20STM32TouchControllerD0Ev>:
90000a30:	b510      	push	{r4, lr}
90000a32:	4604      	mov	r4, r0
90000a34:	2104      	movs	r1, #4
90000a36:	f026 fd73 	bl	90027520 <_ZdlPvj>
90000a3a:	4620      	mov	r0, r4
90000a3c:	bd10      	pop	{r4, pc}
	...

90000a40 <_ZN20STM32TouchController4initEv>:
{
90000a40:	b508      	push	{r3, lr}
    assert((BSP_TS_Init(480, 272) == TS_OK));
90000a42:	f44f 7188 	mov.w	r1, #272	@ 0x110
90000a46:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
90000a4a:	f003 f827 	bl	90003a9c <BSP_TS_Init>
90000a4e:	b128      	cbz	r0, 90000a5c <_ZN20STM32TouchController4initEv+0x1c>
90000a50:	4b03      	ldr	r3, [pc, #12]	@ (90000a60 <_ZN20STM32TouchController4initEv+0x20>)
90000a52:	2120      	movs	r1, #32
90000a54:	4a03      	ldr	r2, [pc, #12]	@ (90000a64 <_ZN20STM32TouchController4initEv+0x24>)
90000a56:	4804      	ldr	r0, [pc, #16]	@ (90000a68 <_ZN20STM32TouchController4initEv+0x28>)
90000a58:	f027 fc9e 	bl	90028398 <__assert_func>
}
90000a5c:	bd08      	pop	{r3, pc}
90000a5e:	bf00      	nop
90000a60:	9002958a 	.word	0x9002958a
90000a64:	900295ab 	.word	0x900295ab
90000a68:	900295d5 	.word	0x900295d5

90000a6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
90000a6c:	2803      	cmp	r0, #3
90000a6e:	d823      	bhi.n	90000ab8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>
90000a70:	e8df f000 	tbb	[pc, r0]
90000a74:	1a130b02 	.word	0x1a130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000a78:	4b10      	ldr	r3, [pc, #64]	@ (90000abc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
90000a7a:	2110      	movs	r1, #16
90000a7c:	4810      	ldr	r0, [pc, #64]	@ (90000ac0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
90000a7e:	681a      	ldr	r2, [r3, #0]
90000a80:	fab2 f282 	clz	r2, r2
90000a84:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000a86:	f003 bdcd 	b.w	90004624 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000a8a:	4b0c      	ldr	r3, [pc, #48]	@ (90000abc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
90000a8c:	2140      	movs	r1, #64	@ 0x40
90000a8e:	685a      	ldr	r2, [r3, #4]
90000a90:	fab2 f282 	clz	r2, r2
90000a94:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000a96:	480b      	ldr	r0, [pc, #44]	@ (90000ac4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000a98:	e7f5      	b.n	90000a86 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
90000a9a:	4b08      	ldr	r3, [pc, #32]	@ (90000abc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
90000a9c:	2180      	movs	r1, #128	@ 0x80
90000a9e:	689a      	ldr	r2, [r3, #8]
90000aa0:	fab2 f282 	clz	r2, r2
90000aa4:	0952      	lsrs	r2, r2, #5
90000aa6:	e7f6      	b.n	90000a96 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000aa8:	4b04      	ldr	r3, [pc, #16]	@ (90000abc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
90000aaa:	2140      	movs	r1, #64	@ 0x40
90000aac:	4806      	ldr	r0, [pc, #24]	@ (90000ac8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000aae:	68da      	ldr	r2, [r3, #12]
90000ab0:	fab2 f282 	clz	r2, r2
90000ab4:	0952      	lsrs	r2, r2, #5
90000ab6:	e7e6      	b.n	90000a86 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
90000ab8:	4770      	bx	lr
90000aba:	bf00      	nop
90000abc:	20000444 	.word	0x20000444
90000ac0:	40020400 	.word	0x40020400
90000ac4:	40020800 	.word	0x40020800
90000ac8:	40021800 	.word	0x40021800

90000acc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
90000acc:	2803      	cmp	r0, #3
90000ace:	d823      	bhi.n	90000b18 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>
90000ad0:	e8df f000 	tbb	[pc, r0]
90000ad4:	1a130b02 	.word	0x1a130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000ad8:	4b10      	ldr	r3, [pc, #64]	@ (90000b1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
90000ada:	2110      	movs	r1, #16
90000adc:	4810      	ldr	r0, [pc, #64]	@ (90000b20 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
90000ade:	681a      	ldr	r2, [r3, #0]
90000ae0:	3a00      	subs	r2, #0
90000ae2:	bf18      	it	ne
90000ae4:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000ae6:	f003 bd9d 	b.w	90004624 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90000aea:	4b0c      	ldr	r3, [pc, #48]	@ (90000b1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
90000aec:	2140      	movs	r1, #64	@ 0x40
90000aee:	685a      	ldr	r2, [r3, #4]
90000af0:	3a00      	subs	r2, #0
90000af2:	bf18      	it	ne
90000af4:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90000af6:	480b      	ldr	r0, [pc, #44]	@ (90000b24 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000af8:	e7f5      	b.n	90000ae6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
90000afa:	4b08      	ldr	r3, [pc, #32]	@ (90000b1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
90000afc:	2180      	movs	r1, #128	@ 0x80
90000afe:	689a      	ldr	r2, [r3, #8]
90000b00:	3a00      	subs	r2, #0
90000b02:	bf18      	it	ne
90000b04:	2201      	movne	r2, #1
90000b06:	e7f6      	b.n	90000af6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000b08:	4b04      	ldr	r3, [pc, #16]	@ (90000b1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
90000b0a:	2140      	movs	r1, #64	@ 0x40
90000b0c:	4806      	ldr	r0, [pc, #24]	@ (90000b28 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
90000b0e:	68da      	ldr	r2, [r3, #12]
90000b10:	3a00      	subs	r2, #0
90000b12:	bf18      	it	ne
90000b14:	2201      	movne	r2, #1
90000b16:	e7e6      	b.n	90000ae6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
90000b18:	4770      	bx	lr
90000b1a:	bf00      	nop
90000b1c:	20000444 	.word	0x20000444
90000b20:	40020400 	.word	0x40020400
90000b24:	40020800 	.word	0x40020800
90000b28:	40021800 	.word	0x40021800

90000b2c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
90000b2c:	2803      	cmp	r0, #3
90000b2e:	d80f      	bhi.n	90000b50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>
90000b30:	e8df f000 	tbb	[pc, r0]
90000b34:	0b090602 	.word	0x0b090602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000b38:	2110      	movs	r1, #16
90000b3a:	4806      	ldr	r0, [pc, #24]	@ (90000b54 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000b3c:	f003 bd77 	b.w	9000462e <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000b40:	2140      	movs	r1, #64	@ 0x40
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000b42:	4805      	ldr	r0, [pc, #20]	@ (90000b58 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
90000b44:	e7fa      	b.n	90000b3c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
90000b46:	2180      	movs	r1, #128	@ 0x80
90000b48:	e7fb      	b.n	90000b42 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000b4a:	2140      	movs	r1, #64	@ 0x40
90000b4c:	4803      	ldr	r0, [pc, #12]	@ (90000b5c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000b4e:	e7f5      	b.n	90000b3c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
90000b50:	4770      	bx	lr
90000b52:	bf00      	nop
90000b54:	40020400 	.word	0x40020400
90000b58:	40020800 	.word	0x40020800
90000b5c:	40021800 	.word	0x40021800

90000b60 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
90000b60:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
90000b62:	2803      	cmp	r0, #3
90000b64:	d813      	bhi.n	90000b8e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2e>
90000b66:	e8df f000 	tbb	[pc, r0]
90000b6a:	0a02      	.short	0x0a02
90000b6c:	0f0d      	.short	0x0f0d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000b6e:	2110      	movs	r1, #16
90000b70:	4808      	ldr	r0, [pc, #32]	@ (90000b94 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x34>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000b72:	f003 fd51 	bl	90004618 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
90000b76:	1e43      	subs	r3, r0, #1
90000b78:	4258      	negs	r0, r3
90000b7a:	4158      	adcs	r0, r3
90000b7c:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000b7e:	2140      	movs	r1, #64	@ 0x40
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000b80:	4805      	ldr	r0, [pc, #20]	@ (90000b98 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
90000b82:	e7f6      	b.n	90000b72 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
90000b84:	2180      	movs	r1, #128	@ 0x80
90000b86:	e7fb      	b.n	90000b80 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000b88:	2140      	movs	r1, #64	@ 0x40
90000b8a:	4804      	ldr	r0, [pc, #16]	@ (90000b9c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x3c>)
90000b8c:	e7f1      	b.n	90000b72 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
    switch (id)
90000b8e:	2000      	movs	r0, #0
90000b90:	e7f1      	b.n	90000b76 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
90000b92:	bf00      	nop
90000b94:	40020400 	.word	0x40020400
90000b98:	40020800 	.word	0x40020800
90000b9c:	40021800 	.word	0x40021800

90000ba0 <_ZN8touchgfx4GPIO4initEv>:
{
90000ba0:	b570      	push	{r4, r5, r6, lr}
90000ba2:	4d08      	ldr	r5, [pc, #32]	@ (90000bc4 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
90000ba4:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
90000ba6:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000ba8:	b2e0      	uxtb	r0, r4
90000baa:	f7ff ffd9 	bl	90000b60 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
90000bae:	b118      	cbz	r0, 90000bb8 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
90000bb0:	682b      	ldr	r3, [r5, #0]
90000bb2:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
90000bb4:	bf18      	it	ne
90000bb6:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
90000bb8:	3401      	adds	r4, #1
90000bba:	3504      	adds	r5, #4
90000bbc:	2c05      	cmp	r4, #5
90000bbe:	d1f3      	bne.n	90000ba8 <_ZN8touchgfx4GPIO4initEv+0x8>
}
90000bc0:	bd70      	pop	{r4, r5, r6, pc}
90000bc2:	bf00      	nop
90000bc4:	20000444 	.word	0x20000444

90000bc8 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000bc8:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000bca:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000bce:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000bd2:	4770      	bx	lr

90000bd4 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
90000bd4:	4770      	bx	lr

90000bd6 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000bd6:	2000      	movs	r0, #0
90000bd8:	4770      	bx	lr
	...

90000bdc <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000bdc:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000bde:	3900      	subs	r1, #0
90000be0:	4b02      	ldr	r3, [pc, #8]	@ (90000bec <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
90000be2:	bf18      	it	ne
90000be4:	2101      	movne	r1, #1
90000be6:	7019      	strb	r1, [r3, #0]
    }
90000be8:	4770      	bx	lr
90000bea:	bf00      	nop
90000bec:	2001aa3d 	.word	0x2001aa3d

90000bf0 <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
90000bf0:	4770      	bx	lr

90000bf2 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000bf2:	2000      	movs	r0, #0
90000bf4:	4770      	bx	lr

90000bf6 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000bf6:	6b83      	ldr	r3, [r0, #56]	@ 0x38
90000bf8:	b10b      	cbz	r3, 90000bfe <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000bfa:	4608      	mov	r0, r1
90000bfc:	4718      	bx	r3
        }
    }
90000bfe:	4770      	bx	lr

90000c00 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000c00:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000c04:	4770      	bx	lr

90000c06 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
90000c06:	6840      	ldr	r0, [r0, #4]
90000c08:	6803      	ldr	r3, [r0, #0]
90000c0a:	699b      	ldr	r3, [r3, #24]
90000c0c:	4718      	bx	r3

90000c0e <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
90000c0e:	4770      	bx	lr

90000c10 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
90000c10:	4770      	bx	lr

90000c12 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000c12:	4770      	bx	lr

90000c14 <_ZN11TouchGFXHAL10initializeEv>:

using namespace touchgfx;
CortexMMCUInstrumentation instrumentation;

void TouchGFXHAL::initialize()
{
90000c14:	b538      	push	{r3, r4, r5, lr}
90000c16:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
90000c18:	f000 fdd0 	bl	900017bc <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)0xC007F800);  // Add animation storage
90000c1c:	4908      	ldr	r1, [pc, #32]	@ (90000c40 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
90000c1e:	6823      	ldr	r3, [r4, #0]
90000c20:	4620      	mov	r0, r4

    lockDMAToFrontPorch(false);
    instrumentation.init();
90000c22:	4d08      	ldr	r5, [pc, #32]	@ (90000c44 <_ZN11TouchGFXHAL10initializeEv+0x30>)
    setAnimationStorage((void*)0xC007F800);  // Add animation storage
90000c24:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90000c28:	4798      	blx	r3
        lockDMAToPorch = enableLock;
90000c2a:	2300      	movs	r3, #0
    instrumentation.init();
90000c2c:	4628      	mov	r0, r5
90000c2e:	f884 304a 	strb.w	r3, [r4, #74]	@ 0x4a
90000c32:	f7ff fea9 	bl	90000988 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000c36:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000c38:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000c3a:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);

}
90000c3e:	bd38      	pop	{r3, r4, r5, pc}
90000c40:	c007f800 	.word	0xc007f800
90000c44:	20000454 	.word	0x20000454

90000c48 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
90000c48:	b508      	push	{r3, lr}
    /* USER CODE BEGIN taskEntry step 1 */

    /* USER CODE END taskEntry step 1 */

    enableLCDControllerInterrupt();
90000c4a:	6803      	ldr	r3, [r0, #0]
{
90000c4c:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
90000c4e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90000c52:	4798      	blx	r3
    enableInterrupts();
90000c54:	6823      	ldr	r3, [r4, #0]
90000c56:	4620      	mov	r0, r4
90000c58:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90000c5a:	4798      	blx	r3

    OSWrappers::waitForVSync();
90000c5c:	f000 f92e 	bl	90000ebc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000c60:	6823      	ldr	r3, [r4, #0]
90000c62:	4620      	mov	r0, r4
90000c64:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90000c66:	4798      	blx	r3

#if defined(LCD_DISP_GPIO_Port) && defined(LCD_DISP_Pin)
    /* Display Enable */
    HAL_GPIO_TogglePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin);
90000c68:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90000c6c:	4804      	ldr	r0, [pc, #16]	@ (90000c80 <_ZN11TouchGFXHAL9taskEntryEv+0x38>)
90000c6e:	f003 fcde 	bl	9000462e <HAL_GPIO_TogglePin>

    /* USER CODE END taskEntry step 2 */

    for (;;)
    {
        OSWrappers::waitForVSync();
90000c72:	f000 f923 	bl	90000ebc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90000c76:	6823      	ldr	r3, [r4, #0]
90000c78:	4620      	mov	r0, r4
90000c7a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90000c7c:	4798      	blx	r3
    for (;;)
90000c7e:	e7f8      	b.n	90000c72 <_ZN11TouchGFXHAL9taskEntryEv+0x2a>
90000c80:	40022000 	.word	0x40022000

90000c84 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000c84:	b510      	push	{r4, lr}
90000c86:	4604      	mov	r4, r0
        swapFrameBuffers();
90000c88:	f010 fbde 	bl	90011448 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000c8c:	6823      	ldr	r3, [r4, #0]
90000c8e:	4620      	mov	r0, r4
90000c90:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
90000c94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000c98:	4718      	bx	r3

90000c9a <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000c9a:	f000 bd4b 	b.w	90001734 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000c9e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000c9e:	f000 bd4f 	b.w	90001740 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
	...

90000ca4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000ca4:	b570      	push	{r4, r5, r6, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000ca6:	f000 fda7 	bl	900017f8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
90000caa:	4910      	ldr	r1, [pc, #64]	@ (90000cec <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x48>)
90000cac:	2300      	movs	r3, #0
90000cae:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000cb2:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000cb6:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000cba:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000cbe:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000cc2:	f3c3 334e 	ubfx	r3, r3, #13, #15
90000cc6:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000cc8:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000ccc:	4602      	mov	r2, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000cce:	ea46 7582 	orr.w	r5, r6, r2, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000cd2:	3a01      	subs	r2, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000cd4:	f8c1 5274 	str.w	r5, [r1, #628]	@ 0x274
      } while (ways-- != 0U);
90000cd8:	d2f9      	bcs.n	90000cce <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2a>
    } while(sets-- != 0U);
90000cda:	3b20      	subs	r3, #32
90000cdc:	f113 0f20 	cmn.w	r3, #32
90000ce0:	d1f2      	bne.n	90000cc8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x24>
90000ce2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000ce6:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000cea:	bd70      	pop	{r4, r5, r6, pc}
90000cec:	e000ed00 	.word	0xe000ed00

90000cf0 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000cf0:	f000 bcfc 	b.w	900016ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000cf4 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000cf4:	f000 bd94 	b.w	90001820 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000cf8 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000cf8:	f000 bd9c 	b.w	90001834 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000cfc <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000cfc:	f000 bd00 	b.w	90001700 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000d00 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
90000d00:	f00f bdd0 	b.w	900108a4 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000d04 <_ZN11TouchGFXHALD0Ev>:
90000d04:	b510      	push	{r4, lr}
90000d06:	4604      	mov	r4, r0
90000d08:	2184      	movs	r1, #132	@ 0x84
90000d0a:	f026 fc09 	bl	90027520 <_ZdlPvj>
90000d0e:	4620      	mov	r0, r4
90000d10:	bd10      	pop	{r4, pc}
	...

90000d14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
        if (requestedOrientation != nativeDisplayOrientation)
90000d14:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
            if (DISPLAY_ROTATION == rotate0)
90000d18:	4b0d      	ldr	r3, [pc, #52]	@ (90000d50 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
    virtual void performDisplayOrientationChange()
90000d1a:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
90000d1c:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
90000d20:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000d22:	428c      	cmp	r4, r1
90000d24:	d009      	beq.n	90000d3a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
90000d26:	b93a      	cbnz	r2, 90000d38 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                const uint16_t tmp = DISPLAY_HEIGHT;
90000d28:	490a      	ldr	r1, [pc, #40]	@ (90000d54 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000d2a:	4a0b      	ldr	r2, [pc, #44]	@ (90000d58 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
90000d2c:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000d2e:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
90000d30:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
90000d32:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000d34:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
90000d36:	701a      	strb	r2, [r3, #0]
    }
90000d38:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
90000d3a:	2a00      	cmp	r2, #0
90000d3c:	d0fc      	beq.n	90000d38 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000d3e:	4a06      	ldr	r2, [pc, #24]	@ (90000d58 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
90000d40:	4904      	ldr	r1, [pc, #16]	@ (90000d54 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000d42:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
90000d44:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000d46:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000d48:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
90000d4a:	2200      	movs	r2, #0
90000d4c:	e7f3      	b.n	90000d36 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
90000d4e:	bf00      	nop
90000d50:	2001aa36 	.word	0x2001aa36
90000d54:	2001aa34 	.word	0x2001aa34
90000d58:	2001aa32 	.word	0x2001aa32

90000d5c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000d5c:	b570      	push	{r4, r5, r6, lr}
90000d5e:	460d      	mov	r5, r1
90000d60:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000d62:	b935      	cbnz	r5, 90000d72 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
90000d64:	4b09      	ldr	r3, [pc, #36]	@ (90000d8c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
90000d66:	f240 21ff 	movw	r1, #767	@ 0x2ff
90000d6a:	4a09      	ldr	r2, [pc, #36]	@ (90000d90 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
90000d6c:	4809      	ldr	r0, [pc, #36]	@ (90000d94 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
90000d6e:	f027 fb13 	bl	90028398 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000d72:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000d76:	3a00      	subs	r2, #0
90000d78:	4b07      	ldr	r3, [pc, #28]	@ (90000d98 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
90000d7a:	bf18      	it	ne
90000d7c:	2201      	movne	r2, #1
90000d7e:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
90000d80:	6803      	ldr	r3, [r0, #0]
    }
90000d82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
90000d86:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90000d8a:	4718      	bx	r3
90000d8c:	90029627 	.word	0x90029627
90000d90:	9002965f 	.word	0x9002965f
90000d94:	900296ad 	.word	0x900296ad
90000d98:	2001aa3c 	.word	0x2001aa3c

90000d9c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000d9c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000d9e:	4b09      	ldr	r3, [pc, #36]	@ (90000dc4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000da0:	881b      	ldrh	r3, [r3, #0]
90000da2:	428b      	cmp	r3, r1
90000da4:	d803      	bhi.n	90000dae <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
90000da6:	4b08      	ldr	r3, [pc, #32]	@ (90000dc8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000da8:	881b      	ldrh	r3, [r3, #0]
90000daa:	4293      	cmp	r3, r2
90000dac:	d905      	bls.n	90000dba <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
90000dae:	4b07      	ldr	r3, [pc, #28]	@ (90000dcc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
90000db0:	21a3      	movs	r1, #163	@ 0xa3
90000db2:	4a07      	ldr	r2, [pc, #28]	@ (90000dd0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
90000db4:	4807      	ldr	r0, [pc, #28]	@ (90000dd4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000db6:	f027 faef 	bl	90028398 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
90000dba:	4b07      	ldr	r3, [pc, #28]	@ (90000dd8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000dbc:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
90000dbe:	4b07      	ldr	r3, [pc, #28]	@ (90000ddc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000dc0:	801a      	strh	r2, [r3, #0]
    }
90000dc2:	bd08      	pop	{r3, pc}
90000dc4:	2001aa32 	.word	0x2001aa32
90000dc8:	2001aa34 	.word	0x2001aa34
90000dcc:	900296f2 	.word	0x900296f2
90000dd0:	90029755 	.word	0x90029755
90000dd4:	900296ad 	.word	0x900296ad
90000dd8:	2001aa38 	.word	0x2001aa38
90000ddc:	2001aa3a 	.word	0x2001aa3a

90000de0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000de0:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000de2:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000de6:	b118      	cbz	r0, 90000df0 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000de8:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000dea:	6803      	ldr	r3, [r0, #0]
90000dec:	681b      	ldr	r3, [r3, #0]
90000dee:	4718      	bx	r3
    }
90000df0:	4770      	bx	lr
	...

90000df4 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
90000df4:	4601      	mov	r1, r0
90000df6:	b508      	push	{r3, lr}
        return instance;
90000df8:	4b03      	ldr	r3, [pc, #12]	@ (90000e08 <IdleTaskHook+0x14>)
90000dfa:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
90000dfc:	b101      	cbz	r1, 90000e00 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
90000dfe:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
90000e00:	f010 fb3c 	bl	9001147c <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
90000e04:	2001      	movs	r0, #1
90000e06:	bd08      	pop	{r3, pc}
90000e08:	2001aa40 	.word	0x2001aa40

90000e0c <_GLOBAL__sub_I_instrumentation>:
        : cc_consumed(0),
90000e0c:	4b03      	ldr	r3, [pc, #12]	@ (90000e1c <_GLOBAL__sub_I_instrumentation+0x10>)
90000e0e:	2200      	movs	r2, #0
90000e10:	605a      	str	r2, [r3, #4]
          cc_in(0)
90000e12:	609a      	str	r2, [r3, #8]
90000e14:	4a02      	ldr	r2, [pc, #8]	@ (90000e20 <_GLOBAL__sub_I_instrumentation+0x14>)
90000e16:	601a      	str	r2, [r3, #0]
}
90000e18:	4770      	bx	lr
90000e1a:	bf00      	nop
90000e1c:	20000454 	.word	0x20000454
90000e20:	9002a638 	.word	0x9002a638

90000e24 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90000e24:	2101      	movs	r1, #1
90000e26:	2200      	movs	r2, #0
{
90000e28:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90000e2a:	4608      	mov	r0, r1
90000e2c:	f006 fdfc 	bl	90007a28 <osSemaphoreNew>
90000e30:	4b0a      	ldr	r3, [pc, #40]	@ (90000e5c <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
90000e32:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90000e34:	b928      	cbnz	r0, 90000e42 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
90000e36:	4b0a      	ldr	r3, [pc, #40]	@ (90000e60 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90000e38:	2128      	movs	r1, #40	@ 0x28
90000e3a:	4a0a      	ldr	r2, [pc, #40]	@ (90000e64 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90000e3c:	480a      	ldr	r0, [pc, #40]	@ (90000e68 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
90000e3e:	f027 faab 	bl	90028398 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
90000e42:	2200      	movs	r2, #0
90000e44:	2104      	movs	r1, #4
90000e46:	2001      	movs	r0, #1
90000e48:	f006 feb8 	bl	90007bbc <osMessageQueueNew>
90000e4c:	4b07      	ldr	r3, [pc, #28]	@ (90000e6c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90000e4e:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90000e50:	b918      	cbnz	r0, 90000e5a <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
90000e52:	4b07      	ldr	r3, [pc, #28]	@ (90000e70 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90000e54:	212c      	movs	r1, #44	@ 0x2c
90000e56:	4a03      	ldr	r2, [pc, #12]	@ (90000e64 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90000e58:	e7f0      	b.n	90000e3c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
90000e5a:	bd08      	pop	{r3, pc}
90000e5c:	20000464 	.word	0x20000464
90000e60:	90029798 	.word	0x90029798
90000e64:	900297e1 	.word	0x900297e1
90000e68:	90029810 	.word	0x90029810
90000e6c:	20000460 	.word	0x20000460
90000e70:	90029862 	.word	0x90029862

90000e74 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
90000e74:	4b02      	ldr	r3, [pc, #8]	@ (90000e80 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
90000e76:	f04f 31ff 	mov.w	r1, #4294967295
90000e7a:	6818      	ldr	r0, [r3, #0]
90000e7c:	f006 be2c 	b.w	90007ad8 <osSemaphoreAcquire>
90000e80:	20000464 	.word	0x20000464

90000e84 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
90000e84:	4b01      	ldr	r3, [pc, #4]	@ (90000e8c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
90000e86:	6818      	ldr	r0, [r3, #0]
90000e88:	f006 be62 	b.w	90007b50 <osSemaphoreRelease>
90000e8c:	20000464 	.word	0x20000464

90000e90 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90000e90:	4b02      	ldr	r3, [pc, #8]	@ (90000e9c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
90000e92:	2100      	movs	r1, #0
90000e94:	6818      	ldr	r0, [r3, #0]
90000e96:	f006 be1f 	b.w	90007ad8 <osSemaphoreAcquire>
90000e9a:	bf00      	nop
90000e9c:	20000464 	.word	0x20000464

90000ea0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
90000ea0:	f7ff bff0 	b.w	90000e84 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90000ea4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90000ea4:	2300      	movs	r3, #0
90000ea6:	4803      	ldr	r0, [pc, #12]	@ (90000eb4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90000ea8:	4903      	ldr	r1, [pc, #12]	@ (90000eb8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
90000eaa:	461a      	mov	r2, r3
90000eac:	6800      	ldr	r0, [r0, #0]
90000eae:	f006 becb 	b.w	90007c48 <osMessageQueuePut>
90000eb2:	bf00      	nop
90000eb4:	20000460 	.word	0x20000460
90000eb8:	20000008 	.word	0x20000008

90000ebc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
90000ebc:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90000ebe:	2300      	movs	r3, #0
90000ec0:	4c07      	ldr	r4, [pc, #28]	@ (90000ee0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
90000ec2:	a901      	add	r1, sp, #4
90000ec4:	461a      	mov	r2, r3
90000ec6:	6820      	ldr	r0, [r4, #0]
90000ec8:	f006 ff00 	bl	90007ccc <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
90000ecc:	f04f 33ff 	mov.w	r3, #4294967295
90000ed0:	2200      	movs	r2, #0
90000ed2:	a901      	add	r1, sp, #4
90000ed4:	6820      	ldr	r0, [r4, #0]
90000ed6:	f006 fef9 	bl	90007ccc <osMessageQueueGet>
}
90000eda:	b002      	add	sp, #8
90000edc:	bd10      	pop	{r4, pc}
90000ede:	bf00      	nop
90000ee0:	20000460 	.word	0x20000460

90000ee4 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
90000ee4:	6803      	ldr	r3, [r0, #0]
90000ee6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90000ee8:	4718      	bx	r3

90000eea <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90000eea:	2001      	movs	r0, #1
90000eec:	4770      	bx	lr

90000eee <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
90000eee:	6803      	ldr	r3, [r0, #0]
90000ef0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90000ef2:	4718      	bx	r3

90000ef4 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
90000ef4:	e7fe      	b.n	90000ef4 <DMA2D_XferErrorCallback>
	...

90000ef8 <_ZN8STM32DMA10initializeEv>:
}

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90000ef8:	4b0e      	ldr	r3, [pc, #56]	@ (90000f34 <_ZN8STM32DMA10initializeEv+0x3c>)
{
90000efa:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90000efc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90000efe:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
90000f02:	631a      	str	r2, [r3, #48]	@ 0x30
90000f04:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90000f06:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
90000f0a:	9201      	str	r2, [sp, #4]
90000f0c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
90000f0e:	691a      	ldr	r2, [r3, #16]
90000f10:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
90000f14:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
90000f16:	691a      	ldr	r2, [r3, #16]
90000f18:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
90000f1c:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90000f1e:	4b06      	ldr	r3, [pc, #24]	@ (90000f38 <_ZN8STM32DMA10initializeEv+0x40>)
90000f20:	4a06      	ldr	r2, [pc, #24]	@ (90000f3c <_ZN8STM32DMA10initializeEv+0x44>)
90000f22:	611a      	str	r2, [r3, #16]

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
90000f24:	4a06      	ldr	r2, [pc, #24]	@ (90000f40 <_ZN8STM32DMA10initializeEv+0x48>)
90000f26:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90000f28:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90000f2c:	4b05      	ldr	r3, [pc, #20]	@ (90000f44 <_ZN8STM32DMA10initializeEv+0x4c>)
90000f2e:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90000f30:	b002      	add	sp, #8
90000f32:	4770      	bx	lr
90000f34:	40023800 	.word	0x40023800
90000f38:	20002b6c 	.word	0x20002b6c
90000f3c:	900011d1 	.word	0x900011d1
90000f40:	90000ef5 	.word	0x90000ef5
90000f44:	e000e100 	.word	0xe000e100

90000f48 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90000f48:	f240 30ef 	movw	r0, #1007	@ 0x3ef
90000f4c:	4770      	bx	lr
	...

90000f50 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
90000f50:	4b05      	ldr	r3, [pc, #20]	@ (90000f68 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90000f52:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90000f56:	6003      	str	r3, [r0, #0]
90000f58:	4b04      	ldr	r3, [pc, #16]	@ (90000f6c <_ZN8STM32DMAD1Ev+0x1c>)
90000f5a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90000f5e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000f62:	f3bf 8f6f 	isb	sy
}
90000f66:	4770      	bx	lr
90000f68:	9002a764 	.word	0x9002a764
90000f6c:	e000e100 	.word	0xe000e100

90000f70 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90000f70:	b510      	push	{r4, lr}
90000f72:	4604      	mov	r4, r0
}
90000f74:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
90000f78:	f7ff ffea 	bl	90000f50 <_ZN8STM32DMAD1Ev>
90000f7c:	4620      	mov	r0, r4
90000f7e:	f026 facf 	bl	90027520 <_ZdlPvj>
90000f82:	4620      	mov	r0, r4
90000f84:	bd10      	pop	{r4, pc}
	...

90000f88 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
90000f88:	b508      	push	{r3, lr}
    switch (format)
90000f8a:	280a      	cmp	r0, #10
90000f8c:	d809      	bhi.n	90000fa2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
90000f8e:	e8df f000 	tbb	[pc, r0]
90000f92:	1006      	.short	0x1006
90000f94:	0808080e 	.word	0x0808080e
90000f98:	10101008 	.word	0x10101008
90000f9c:	10          	.byte	0x10
90000f9d:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90000f9e:	2002      	movs	r0, #2
}
90000fa0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
90000fa2:	4b05      	ldr	r3, [pc, #20]	@ (90000fb8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
90000fa4:	2190      	movs	r1, #144	@ 0x90
90000fa6:	4a05      	ldr	r2, [pc, #20]	@ (90000fbc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
90000fa8:	4805      	ldr	r0, [pc, #20]	@ (90000fc0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
90000faa:	f027 f9f5 	bl	90028398 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90000fae:	2000      	movs	r0, #0
90000fb0:	e7f6      	b.n	90000fa0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
90000fb2:	2001      	movs	r0, #1
    return dma2dColorMode;
90000fb4:	e7f4      	b.n	90000fa0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
90000fb6:	bf00      	nop
90000fb8:	900298a4 	.word	0x900298a4
90000fbc:	900298bf 	.word	0x900298bf
90000fc0:	9002990a 	.word	0x9002990a

90000fc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90000fc4:	b538      	push	{r3, r4, r5, lr}
90000fc6:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90000fc8:	7f88      	ldrb	r0, [r1, #30]
90000fca:	f7ff ffdd 	bl	90000f88 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90000fce:	4b17      	ldr	r3, [pc, #92]	@ (9000102c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90000fd0:	8aa5      	ldrh	r5, [r4, #20]
90000fd2:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90000fd4:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90000fd6:	ea42 4205 	orr.w	r2, r2, r5, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90000fda:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90000fdc:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90000fde:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90000fe0:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90000fe2:	1b52      	subs	r2, r2, r5
90000fe4:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90000fe6:	6825      	ldr	r5, [r4, #0]
90000fe8:	2d08      	cmp	r5, #8
90000fea:	d10e      	bne.n	9000100a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90000fec:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90000fee:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90000ff0:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90000ff2:	4a0f      	ldr	r2, [pc, #60]	@ (90001030 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
90000ff4:	7f20      	ldrb	r0, [r4, #28]
90000ff6:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
90000ffa:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
90000ffc:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90000ffe:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
90001000:	4a0c      	ldr	r2, [pc, #48]	@ (90001034 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001002:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001004:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
90001006:	601a      	str	r2, [r3, #0]
    }
}
90001008:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
9000100a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
9000100c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
9000100e:	611a      	str	r2, [r3, #16]
90001010:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90001012:	0a0a      	lsrs	r2, r1, #8
90001014:	0948      	lsrs	r0, r1, #5
90001016:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9000101a:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
9000101e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90001022:	4302      	orrs	r2, r0
90001024:	430a      	orrs	r2, r1
90001026:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
90001028:	4a03      	ldr	r2, [pc, #12]	@ (90001038 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
9000102a:	e7ec      	b.n	90001006 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
9000102c:	4002b000 	.word	0x4002b000
90001030:	00010009 	.word	0x00010009
90001034:	00022301 	.word	0x00022301
90001038:	00032301 	.word	0x00032301

9000103c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
9000103c:	b508      	push	{r3, lr}
    switch (format)
9000103e:	280b      	cmp	r0, #11
90001040:	d80b      	bhi.n	9000105a <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
90001042:	e8df f000 	tbb	[pc, r0]
90001046:	1206      	.short	0x1206
90001048:	0a0a0a10 	.word	0x0a0a0a10
9000104c:	0808080a 	.word	0x0808080a
90001050:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
90001052:	2002      	movs	r0, #2
}
90001054:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
90001056:	2005      	movs	r0, #5
        break;
90001058:	e7fc      	b.n	90001054 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
9000105a:	4b05      	ldr	r3, [pc, #20]	@ (90001070 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
9000105c:	216f      	movs	r1, #111	@ 0x6f
9000105e:	4a05      	ldr	r2, [pc, #20]	@ (90001074 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
90001060:	4805      	ldr	r0, [pc, #20]	@ (90001078 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
90001062:	f027 f999 	bl	90028398 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001066:	2000      	movs	r0, #0
90001068:	e7f4      	b.n	90001054 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
9000106a:	2001      	movs	r0, #1
    return dma2dColorMode;
9000106c:	e7f2      	b.n	90001054 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
9000106e:	bf00      	nop
90001070:	900298a4 	.word	0x900298a4
90001074:	9002995a 	.word	0x9002995a
90001078:	9002990a 	.word	0x9002990a

9000107c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
9000107c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90001080:	f891 801d 	ldrb.w	r8, [r1, #29]
{
90001084:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90001086:	4640      	mov	r0, r8
90001088:	f7ff ffd8 	bl	9000103c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
9000108c:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
9000108e:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90001090:	4638      	mov	r0, r7
90001092:	f7ff ffd3 	bl	9000103c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
90001096:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90001098:	4638      	mov	r0, r7
9000109a:	f7ff ff75 	bl	90000f88 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000109e:	8aa1      	ldrh	r1, [r4, #20]
900010a0:	8b62      	ldrh	r2, [r4, #26]
900010a2:	4b43      	ldr	r3, [pc, #268]	@ (900011b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
900010a4:	1a52      	subs	r2, r2, r1
900010a6:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
900010a8:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
900010aa:	8b22      	ldrh	r2, [r4, #24]
900010ac:	1a52      	subs	r2, r2, r1
900010ae:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
900010b0:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
900010b2:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
900010b4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900010b8:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
900010ba:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
900010bc:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900010be:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
900010c0:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
900010c2:	6820      	ldr	r0, [r4, #0]
900010c4:	2880      	cmp	r0, #128	@ 0x80
900010c6:	d028      	beq.n	9000111a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
900010c8:	7f22      	ldrb	r2, [r4, #28]
900010ca:	d80f      	bhi.n	900010ec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
900010cc:	2820      	cmp	r0, #32
900010ce:	d066      	beq.n	9000119e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x122>
900010d0:	2840      	cmp	r0, #64	@ 0x40
900010d2:	d064      	beq.n	9000119e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x122>
900010d4:	2804      	cmp	r0, #4
900010d6:	d01a      	beq.n	9000110e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900010d8:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
900010dc:	4b34      	ldr	r3, [pc, #208]	@ (900011b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
        if (blitOp.srcFormat != blitOp.dstFormat)
900010de:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900010e0:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
900010e4:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
900010e6:	d060      	beq.n	900011aa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12e>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900010e8:	4a32      	ldr	r2, [pc, #200]	@ (900011b4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
900010ea:	e044      	b.n	90001176 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
900010ec:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
900010f0:	d004      	beq.n	900010fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
900010f2:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
900010f6:	d1ef      	bne.n	900010d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900010f8:	482f      	ldr	r0, [pc, #188]	@ (900011b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
900010fa:	e000      	b.n	900010fe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900010fc:	482f      	ldr	r0, [pc, #188]	@ (900011bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900010fe:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
90001102:	61da      	str	r2, [r3, #28]
90001104:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001106:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001108:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000110a:	6159      	str	r1, [r3, #20]
9000110c:	e032      	b.n	90001174 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000110e:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
90001112:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001116:	61da      	str	r2, [r3, #28]
90001118:	e7f6      	b.n	90001108 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
9000111a:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
9000111c:	1d02      	adds	r2, r0, #4
9000111e:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001120:	7f22      	ldrb	r2, [r4, #28]
90001122:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
90001126:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
9000112a:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000112c:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000112e:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90001130:	7801      	ldrb	r1, [r0, #0]
90001132:	b141      	cbz	r1, 90001146 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
90001134:	2901      	cmp	r1, #1
90001136:	d021      	beq.n	9000117c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
90001138:	4b21      	ldr	r3, [pc, #132]	@ (900011c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
9000113a:	f44f 718d 	mov.w	r1, #282	@ 0x11a
9000113e:	4a21      	ldr	r2, [pc, #132]	@ (900011c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
90001140:	4821      	ldr	r0, [pc, #132]	@ (900011c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
90001142:	f027 f929 	bl	90028398 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001146:	69da      	ldr	r2, [r3, #28]
90001148:	8841      	ldrh	r1, [r0, #2]
9000114a:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
9000114e:	3901      	subs	r1, #1
90001150:	f022 0210 	bic.w	r2, r2, #16
90001154:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
            bool blend = true;
90001158:	2101      	movs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
9000115a:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
9000115c:	4b14      	ldr	r3, [pc, #80]	@ (900011b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
9000115e:	69da      	ldr	r2, [r3, #28]
90001160:	f042 0220 	orr.w	r2, r2, #32
90001164:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90001166:	69da      	ldr	r2, [r3, #28]
90001168:	0692      	lsls	r2, r2, #26
9000116a:	d4fc      	bmi.n	90001166 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
9000116c:	2210      	movs	r2, #16
9000116e:	609a      	str	r2, [r3, #8]
            if (blend)
90001170:	2900      	cmp	r1, #0
90001172:	d0b9      	beq.n	900010e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90001174:	4a15      	ldr	r2, [pc, #84]	@ (900011cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90001176:	601a      	str	r2, [r3, #0]
}
90001178:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
9000117c:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001180:	69da      	ldr	r2, [r3, #28]
90001182:	8840      	ldrh	r0, [r0, #2]
90001184:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
                if (blitOp.alpha == 255)
90001188:	bf18      	it	ne
9000118a:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
9000118c:	3801      	subs	r0, #1
9000118e:	f022 0210 	bic.w	r2, r2, #16
90001192:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
90001196:	f042 0210 	orr.w	r2, r2, #16
9000119a:	61da      	str	r2, [r3, #28]
                break;
9000119c:	e7de      	b.n	9000115c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000119e:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
900011a2:	4b03      	ldr	r3, [pc, #12]	@ (900011b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
900011a4:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
900011a8:	e7b5      	b.n	90001116 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900011aa:	f242 3201 	movw	r2, #8961	@ 0x2301
900011ae:	e7e2      	b.n	90001176 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
900011b0:	4002b000 	.word	0x4002b000
900011b4:	00012301 	.word	0x00012301
900011b8:	00020009 	.word	0x00020009
900011bc:	0002000a 	.word	0x0002000a
900011c0:	900299a4 	.word	0x900299a4
900011c4:	900299be 	.word	0x900299be
900011c8:	9002990a 	.word	0x9002990a
900011cc:	00022301 	.word	0x00022301

900011d0 <DMA2D_XferCpltCallback>:
900011d0:	4b02      	ldr	r3, [pc, #8]	@ (900011dc <DMA2D_XferCpltCallback+0xc>)
900011d2:	681b      	ldr	r3, [r3, #0]
900011d4:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
900011d6:	6803      	ldr	r3, [r0, #0]
900011d8:	695b      	ldr	r3, [r3, #20]
900011da:	4718      	bx	r3
900011dc:	2001aa40 	.word	0x2001aa40

900011e0 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
900011e0:	b570      	push	{r4, r5, r6, lr}
900011e2:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
900011e4:	4b0a      	ldr	r3, [pc, #40]	@ (90001210 <_ZN8STM32DMAC1Ev+0x30>)
900011e6:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
900011e8:	2600      	movs	r6, #0
900011ea:	4625      	mov	r5, r4
900011ec:	2260      	movs	r2, #96	@ 0x60
900011ee:	6060      	str	r0, [r4, #4]
900011f0:	7226      	strb	r6, [r4, #8]
900011f2:	7266      	strb	r6, [r4, #9]
900011f4:	f845 3b20 	str.w	r3, [r5], #32
900011f8:	4629      	mov	r1, r5
900011fa:	f010 fa93 	bl	90011724 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
900011fe:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
90001202:	60ee      	str	r6, [r5, #12]
90001204:	3524      	adds	r5, #36	@ 0x24
90001206:	429d      	cmp	r5, r3
90001208:	d1fb      	bne.n	90001202 <_ZN8STM32DMAC1Ev+0x22>
}
9000120a:	4620      	mov	r0, r4
9000120c:	bd70      	pop	{r4, r5, r6, pc}
9000120e:	bf00      	nop
90001210:	9002a764 	.word	0x9002a764

90001214 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001214:	4b03      	ldr	r3, [pc, #12]	@ (90001224 <_ZN8touchgfx5paint8tearDownEv+0x10>)
90001216:	681a      	ldr	r2, [r3, #0]
90001218:	07d2      	lsls	r2, r2, #31
9000121a:	d4fc      	bmi.n	90001216 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000121c:	2223      	movs	r2, #35	@ 0x23
9000121e:	609a      	str	r2, [r3, #8]
}
90001220:	4770      	bx	lr
90001222:	bf00      	nop
90001224:	4002b000 	.word	0x4002b000

90001228 <_ZN8touchgfx5paint9flushLineEPmi>:
void flushLine(uint32_t* addr, int sizebytes)
{
    // This function is used when decompressing data to flush
    // the currently decoded data in the cache to allow the DMA2D
    // to blend the pixels correctly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90001228:	4b09      	ldr	r3, [pc, #36]	@ (90001250 <_ZN8touchgfx5paint9flushLineEPmi+0x28>)
9000122a:	695a      	ldr	r2, [r3, #20]
9000122c:	03d2      	lsls	r2, r2, #15
9000122e:	d50a      	bpl.n	90001246 <_ZN8touchgfx5paint9flushLineEPmi+0x1e>
  __ASM volatile ("dsb 0xF":::"memory");
90001230:	f3bf 8f4f 	dsb	sy
    uint32_t op_addr = (uint32_t) addr;
     int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (32 bytes) */

    __DSB();

    while (op_size > 0) {
90001234:	4408      	add	r0, r1
90001236:	2900      	cmp	r1, #0
90001238:	eba0 0201 	sub.w	r2, r0, r1
9000123c:	dc04      	bgt.n	90001248 <_ZN8touchgfx5paint9flushLineEPmi+0x20>
9000123e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90001242:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
    }
}
90001246:	4770      	bx	lr
      SCB->DCCMVAC = op_addr;
      op_addr += (uint32_t)linesize;
      op_size -=           linesize;
90001248:	3920      	subs	r1, #32
      SCB->DCCMVAC = op_addr;
9000124a:	f8c3 2268 	str.w	r2, [r3, #616]	@ 0x268
      op_size -=           linesize;
9000124e:	e7f2      	b.n	90001236 <_ZN8touchgfx5paint9flushLineEPmi+0xe>
90001250:	e000ed00 	.word	0xe000ed00

90001254 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90001254:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001256:	4c10      	ldr	r4, [pc, #64]	@ (90001298 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
90001258:	6825      	ldr	r5, [r4, #0]
9000125a:	07ed      	lsls	r5, r5, #31
9000125c:	d4fc      	bmi.n	90001258 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000125e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001260:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90001262:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001264:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001266:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000126a:	f04f 0502 	mov.w	r5, #2
9000126e:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001270:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90001272:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
90001274:	d00a      	beq.n	9000128c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90001276:	4909      	ldr	r1, [pc, #36]	@ (9000129c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001278:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
9000127a:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
9000127e:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001280:	4b07      	ldr	r3, [pc, #28]	@ (900012a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->FGCOLR, color);
90001282:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90001284:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90001286:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001288:	6023      	str	r3, [r4, #0]
    }
}
9000128a:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
9000128c:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
9000128e:	9b03      	ldr	r3, [sp, #12]
90001290:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001292:	4b04      	ldr	r3, [pc, #16]	@ (900012a4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
90001294:	e7f8      	b.n	90001288 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x34>
90001296:	bf00      	nop
90001298:	4002b000 	.word	0x4002b000
9000129c:	00010009 	.word	0x00010009
900012a0:	00020001 	.word	0x00020001
900012a4:	00030001 	.word	0x00030001

900012a8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
900012a8:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900012aa:	4c0f      	ldr	r4, [pc, #60]	@ (900012e8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
900012ac:	6825      	ldr	r5, [r4, #0]
900012ae:	07ed      	lsls	r5, r5, #31
900012b0:	d4fc      	bmi.n	900012ac <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900012b2:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900012b4:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
900012b6:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900012b8:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900012ba:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900012be:	f04f 0502 	mov.w	r5, #2
900012c2:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900012c4:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
900012c6:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
900012c8:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
900012ca:	d008      	beq.n	900012de <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x36>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900012cc:	061b      	lsls	r3, r3, #24
900012ce:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
900012d2:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900012d4:	4b05      	ldr	r3, [pc, #20]	@ (900012ec <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900012d6:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
900012d8:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900012da:	6023      	str	r3, [r4, #0]
    }
}
900012dc:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900012de:	4b04      	ldr	r3, [pc, #16]	@ (900012f0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x48>)
900012e0:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900012e2:	2301      	movs	r3, #1
900012e4:	e7f9      	b.n	900012da <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x32>
900012e6:	bf00      	nop
900012e8:	4002b000 	.word	0x4002b000
900012ec:	00020001 	.word	0x00020001
900012f0:	ff020002 	.word	0xff020002

900012f4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
900012f4:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900012f6:	4c0b      	ldr	r4, [pc, #44]	@ (90001324 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
900012f8:	6825      	ldr	r5, [r4, #0]
900012fa:	07ed      	lsls	r5, r5, #31
900012fc:	d4fc      	bmi.n	900012f8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900012fe:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001300:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90001302:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001304:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001306:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000130a:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
9000130c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001310:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001312:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90001314:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90001316:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90001318:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
9000131a:	4b03      	ldr	r3, [pc, #12]	@ (90001328 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000131c:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
9000131e:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90001320:	6023      	str	r3, [r4, #0]
}
90001322:	bd30      	pop	{r4, r5, pc}
90001324:	4002b000 	.word	0x4002b000
90001328:	00020001 	.word	0x00020001

9000132c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
9000132c:	2001      	movs	r0, #1
9000132e:	4770      	bx	lr

90001330 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90001330:	200c      	movs	r0, #12
90001332:	4770      	bx	lr

90001334 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90001334:	230c      	movs	r3, #12
90001336:	fb03 0001 	mla	r0, r3, r1, r0
    }
9000133a:	3008      	adds	r0, #8
9000133c:	4770      	bx	lr

9000133e <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
9000133e:	230c      	movs	r3, #12
90001340:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001344:	3008      	adds	r0, #8
90001346:	4770      	bx	lr

90001348 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001348:	2001      	movs	r0, #1
9000134a:	4770      	bx	lr

9000134c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
9000134c:	20d0      	movs	r0, #208	@ 0xd0
9000134e:	4770      	bx	lr

90001350 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001350:	23d0      	movs	r3, #208	@ 0xd0
90001352:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001356:	3008      	adds	r0, #8
90001358:	4770      	bx	lr

9000135a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
9000135a:	23d0      	movs	r3, #208	@ 0xd0
9000135c:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001360:	3008      	adds	r0, #8
90001362:	4770      	bx	lr

90001364 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001364:	2001      	movs	r0, #1
90001366:	4770      	bx	lr

90001368 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90001368:	2010      	movs	r0, #16
9000136a:	4770      	bx	lr

9000136c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
9000136c:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001370:	3008      	adds	r0, #8
90001372:	4770      	bx	lr

90001374 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001374:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001378:	3008      	adds	r0, #8
9000137a:	4770      	bx	lr

9000137c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
9000137c:	4608      	mov	r0, r1
9000137e:	f001 bcfb 	b.w	90002d78 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
	...

90001384 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90001384:	4b03      	ldr	r3, [pc, #12]	@ (90001394 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90001386:	b510      	push	{r4, lr}
90001388:	4604      	mov	r4, r0
9000138a:	6003      	str	r3, [r0, #0]
9000138c:	f00e ffe1 	bl	90010352 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001390:	4620      	mov	r0, r4
90001392:	bd10      	pop	{r4, pc}
90001394:	9002a81c 	.word	0x9002a81c

90001398 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
90001398:	b510      	push	{r4, lr}
9000139a:	4604      	mov	r4, r0
9000139c:	f7ff fff2 	bl	90001384 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
900013a0:	2114      	movs	r1, #20
900013a2:	4620      	mov	r0, r4
900013a4:	f026 f8bc 	bl	90027520 <_ZdlPvj>
900013a8:	4620      	mov	r0, r4
900013aa:	bd10      	pop	{r4, pc}

900013ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900013ac:	4b03      	ldr	r3, [pc, #12]	@ (900013bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900013ae:	b510      	push	{r4, lr}
900013b0:	4604      	mov	r4, r0
900013b2:	6003      	str	r3, [r0, #0]
900013b4:	f00e ffcd 	bl	90010352 <_ZN8touchgfx17AbstractPartitionD1Ev>
900013b8:	4620      	mov	r0, r4
900013ba:	bd10      	pop	{r4, pc}
900013bc:	9002a7e8 	.word	0x9002a7e8

900013c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
900013c0:	b510      	push	{r4, lr}
900013c2:	4604      	mov	r4, r0
900013c4:	f7ff fff2 	bl	900013ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
900013c8:	21d8      	movs	r1, #216	@ 0xd8
900013ca:	4620      	mov	r0, r4
900013cc:	f026 f8a8 	bl	90027520 <_ZdlPvj>
900013d0:	4620      	mov	r0, r4
900013d2:	bd10      	pop	{r4, pc}

900013d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900013d4:	4b03      	ldr	r3, [pc, #12]	@ (900013e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900013d6:	b510      	push	{r4, lr}
900013d8:	4604      	mov	r4, r0
900013da:	6003      	str	r3, [r0, #0]
900013dc:	f00e ffb9 	bl	90010352 <_ZN8touchgfx17AbstractPartitionD1Ev>
900013e0:	4620      	mov	r0, r4
900013e2:	bd10      	pop	{r4, pc}
900013e4:	9002a7b4 	.word	0x9002a7b4

900013e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
900013e8:	b510      	push	{r4, lr}
900013ea:	4604      	mov	r4, r0
900013ec:	f7ff fff2 	bl	900013d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
900013f0:	2118      	movs	r1, #24
900013f2:	4620      	mov	r0, r4
900013f4:	f026 f894 	bl	90027520 <_ZdlPvj>
900013f8:	4620      	mov	r0, r4
900013fa:	bd10      	pop	{r4, pc}

900013fc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
900013fc:	4b08      	ldr	r3, [pc, #32]	@ (90001420 <_ZN12FrontendHeapD1Ev+0x24>)
900013fe:	b510      	push	{r4, lr}
90001400:	4604      	mov	r4, r0
90001402:	6003      	str	r3, [r0, #0]
90001404:	f500 7082 	add.w	r0, r0, #260	@ 0x104
90001408:	f7ff ffbc 	bl	90001384 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
9000140c:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
90001410:	f7ff ffcc 	bl	900013ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
90001414:	f104 0014 	add.w	r0, r4, #20
90001418:	f7ff ffdc 	bl	900013d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
9000141c:	4620      	mov	r0, r4
9000141e:	bd10      	pop	{r4, pc}
90001420:	9002a850 	.word	0x9002a850

90001424 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90001424:	b508      	push	{r3, lr}
90001426:	4802      	ldr	r0, [pc, #8]	@ (90001430 <__tcf_0+0xc>)
90001428:	f7ff ffe8 	bl	900013fc <_ZN12FrontendHeapD1Ev>
9000142c:	bd08      	pop	{r3, pc}
9000142e:	bf00      	nop
90001430:	20001340 	.word	0x20001340

90001434 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90001434:	b510      	push	{r4, lr}
90001436:	4604      	mov	r4, r0
90001438:	f7ff ffe0 	bl	900013fc <_ZN12FrontendHeapD1Ev>
9000143c:	f44f 711e 	mov.w	r1, #632	@ 0x278
90001440:	4620      	mov	r0, r4
90001442:	f026 f86d 	bl	90027520 <_ZdlPvj>
90001446:	4620      	mov	r0, r4
90001448:	bd10      	pop	{r4, pc}
	...

9000144c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
9000144c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90001450:	f001 fb16 	bl	90002a80 <_ZN14BitmapDatabase11getInstanceEv>
90001454:	2400      	movs	r4, #0
90001456:	4605      	mov	r5, r0
90001458:	f001 fb16 	bl	90002a88 <_ZN14BitmapDatabase15getInstanceSizeEv>
9000145c:	4623      	mov	r3, r4
9000145e:	4601      	mov	r1, r0
90001460:	4622      	mov	r2, r4
90001462:	4628      	mov	r0, r5
90001464:	9400      	str	r4, [sp, #0]
90001466:	f016 ff97 	bl	90018398 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
9000146a:	4b27      	ldr	r3, [pc, #156]	@ (90001508 <touchgfx_init+0xbc>)
9000146c:	4a27      	ldr	r2, [pc, #156]	@ (9000150c <touchgfx_init+0xc0>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
9000146e:	4620      	mov	r0, r4
        static FrontendHeap instance;
90001470:	4d27      	ldr	r5, [pc, #156]	@ (90001510 <touchgfx_init+0xc4>)
90001472:	601a      	str	r2, [r3, #0]
90001474:	f001 fec6 	bl	90003204 <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90001478:	4b26      	ldr	r3, [pc, #152]	@ (90001514 <touchgfx_init+0xc8>)
9000147a:	4a27      	ldr	r2, [pc, #156]	@ (90001518 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
9000147c:	4827      	ldr	r0, [pc, #156]	@ (9000151c <touchgfx_init+0xd0>)
9000147e:	609a      	str	r2, [r3, #8]
90001480:	f016 fef2 	bl	90018268 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90001484:	682b      	ldr	r3, [r5, #0]
90001486:	f3bf 8f5b 	dmb	ish
9000148a:	07db      	lsls	r3, r3, #31
9000148c:	d435      	bmi.n	900014fa <touchgfx_init+0xae>
9000148e:	4628      	mov	r0, r5
90001490:	f026 f848 	bl	90027524 <__cxa_guard_acquire>
90001494:	b388      	cbz	r0, 900014fa <touchgfx_init+0xae>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90001496:	4c22      	ldr	r4, [pc, #136]	@ (90001520 <touchgfx_init+0xd4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90001498:	4b22      	ldr	r3, [pc, #136]	@ (90001524 <touchgfx_init+0xd8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
9000149a:	f504 768e 	add.w	r6, r4, #284	@ 0x11c
        : presenterStorage(pres),
9000149e:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
900014a2:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
900014a6:	f504 7782 	add.w	r7, r4, #260	@ 0x104
900014aa:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
900014ac:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
900014ae:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
900014b2:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
900014b4:	6126      	str	r6, [r4, #16]
900014b6:	f00e ff4d 	bl	90010354 <_ZN8touchgfx17AbstractPartitionC1Ev>
900014ba:	4b1b      	ldr	r3, [pc, #108]	@ (90001528 <touchgfx_init+0xdc>)
900014bc:	4640      	mov	r0, r8
900014be:	6163      	str	r3, [r4, #20]
900014c0:	f00e ff48 	bl	90010354 <_ZN8touchgfx17AbstractPartitionC1Ev>
900014c4:	4b19      	ldr	r3, [pc, #100]	@ (9000152c <touchgfx_init+0xe0>)
900014c6:	4638      	mov	r0, r7
900014c8:	62e3      	str	r3, [r4, #44]	@ 0x2c
900014ca:	f00e ff43 	bl	90010354 <_ZN8touchgfx17AbstractPartitionC1Ev>
900014ce:	4b18      	ldr	r3, [pc, #96]	@ (90001530 <touchgfx_init+0xe4>)
900014d0:	f504 708c 	add.w	r0, r4, #280	@ 0x118
900014d4:	f8c4 3104 	str.w	r3, [r4, #260]	@ 0x104
900014d8:	f001 ff0a 	bl	900032f0 <_ZN5ModelC1Ev>
900014dc:	4622      	mov	r2, r4
900014de:	f504 718c 	add.w	r1, r4, #280	@ 0x118
900014e2:	4630      	mov	r0, r6
900014e4:	f001 fefa 	bl	900032dc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
900014e8:	4630      	mov	r0, r6
900014ea:	f001 fc45 	bl	90002d78 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
900014ee:	4811      	ldr	r0, [pc, #68]	@ (90001534 <touchgfx_init+0xe8>)
900014f0:	f026 ff70 	bl	900283d4 <atexit>
900014f4:	4628      	mov	r0, r5
900014f6:	f026 f821 	bl	9002753c <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
900014fa:	480f      	ldr	r0, [pc, #60]	@ (90001538 <touchgfx_init+0xec>)
}
900014fc:	b002      	add	sp, #8
900014fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90001502:	f7ff bb87 	b.w	90000c14 <_ZN11TouchGFXHAL10initializeEv>
90001506:	bf00      	nop
90001508:	2001aaa4 	.word	0x2001aaa4
9000150c:	200004ec 	.word	0x200004ec
90001510:	2000133c 	.word	0x2000133c
90001514:	2000050c 	.word	0x2000050c
90001518:	200004f0 	.word	0x200004f0
9000151c:	2000000c 	.word	0x2000000c
90001520:	20001340 	.word	0x20001340
90001524:	9002a850 	.word	0x9002a850
90001528:	9002a7b4 	.word	0x9002a7b4
9000152c:	9002a7e8 	.word	0x9002a7e8
90001530:	9002a81c 	.word	0x9002a81c
90001534:	90001425 	.word	0x90001425
90001538:	20000468 	.word	0x20000468

9000153c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
9000153c:	4770      	bx	lr
	...

90001540 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90001540:	4801      	ldr	r0, [pc, #4]	@ (90001548 <touchgfx_taskEntry+0x8>)
90001542:	f7ff bb81 	b.w	90000c48 <_ZN11TouchGFXHAL9taskEntryEv>
90001546:	bf00      	nop
90001548:	20000468 	.word	0x20000468

9000154c <_GLOBAL__sub_I_touchgfx_init>:
}
9000154c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
9000154e:	4e26      	ldr	r6, [pc, #152]	@ (900015e8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
90001550:	4b26      	ldr	r3, [pc, #152]	@ (900015ec <_GLOBAL__sub_I_touchgfx_init+0xa0>)
90001552:	4c27      	ldr	r4, [pc, #156]	@ (900015f0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
90001554:	4630      	mov	r0, r6
static LCD16bpp display;
90001556:	4d27      	ldr	r5, [pc, #156]	@ (900015f4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
90001558:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
9000155a:	f7ff fe41 	bl	900011e0 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
9000155e:	4628      	mov	r0, r5
90001560:	f01c f82c 	bl	9001d5bc <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90001564:	4824      	ldr	r0, [pc, #144]	@ (900015f8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
90001566:	f015 f801 	bl	9001656c <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
9000156a:	4b24      	ldr	r3, [pc, #144]	@ (900015fc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          mcuInstrumentation(0),
9000156c:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
9000156e:	f44f 7180 	mov.w	r1, #256	@ 0x100
          isFrontPorchEntered(false),
90001572:	4823      	ldr	r0, [pc, #140]	@ (90001600 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90001574:	861a      	strh	r2, [r3, #48]	@ 0x30
          useAuxiliaryLCD(false),
90001576:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
9000157a:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
9000157c:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
90001580:	675a      	str	r2, [r3, #116]	@ 0x74
          touchController(touchCtrl),
90001582:	60dc      	str	r4, [r3, #12]
          auxiliaryLCD(0),
90001584:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
90001588:	491e      	ldr	r1, [pc, #120]	@ (90001604 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
          vSyncCompensationEnabled(false),
9000158a:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
9000158e:	491e      	ldr	r1, [pc, #120]	@ (90001608 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90001590:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
90001594:	491d      	ldr	r1, [pc, #116]	@ (9000160c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90001596:	481e      	ldr	r0, [pc, #120]	@ (90001610 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
90001598:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
9000159c:	491d      	ldr	r1, [pc, #116]	@ (90001614 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
9000159e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900015a0:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
          buttonController(0),
900015a4:	e9c3 2204 	strd	r2, r2, [r3, #16]
900015a8:	e9c3 2206 	strd	r2, r2, [r3, #24]
900015ac:	e9c3 2208 	strd	r2, r2, [r3, #32]
900015b0:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
900015b4:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
900015b8:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
900015bc:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
900015c0:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lcdRef(display),
900015c4:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900015c8:	8001      	strh	r1, [r0, #0]
900015ca:	4813      	ldr	r0, [pc, #76]	@ (90001618 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
900015cc:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900015d0:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900015d2:	f44f 7188 	mov.w	r1, #272	@ 0x110
900015d6:	4811      	ldr	r0, [pc, #68]	@ (9000161c <_GLOBAL__sub_I_touchgfx_init+0xd0>)
900015d8:	8001      	strh	r1, [r0, #0]
900015da:	4811      	ldr	r0, [pc, #68]	@ (90001620 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
900015dc:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
900015de:	4911      	ldr	r1, [pc, #68]	@ (90001624 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
900015e0:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
900015e2:	4a11      	ldr	r2, [pc, #68]	@ (90001628 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
900015e4:	601a      	str	r2, [r3, #0]
}
900015e6:	bd70      	pop	{r4, r5, r6, pc}
900015e8:	20000598 	.word	0x20000598
900015ec:	9002a660 	.word	0x9002a660
900015f0:	20001338 	.word	0x20001338
900015f4:	2000050c 	.word	0x2000050c
900015f8:	200004f0 	.word	0x200004f0
900015fc:	20000468 	.word	0x20000468
90001600:	01010000 	.word	0x01010000
90001604:	01000001 	.word	0x01000001
90001608:	00440400 	.word	0x00440400
9000160c:	00140016 	.word	0x00140016
90001610:	2001aa32 	.word	0x2001aa32
90001614:	2001aa40 	.word	0x2001aa40
90001618:	2001aa38 	.word	0x2001aa38
9000161c:	2001aa34 	.word	0x2001aa34
90001620:	2001aa3a 	.word	0x2001aa3a
90001624:	2001aa36 	.word	0x2001aa36
90001628:	9002a678 	.word	0x9002a678

9000162c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
9000162c:	4801      	ldr	r0, [pc, #4]	@ (90001634 <_GLOBAL__sub_D_touchgfx_init+0x8>)
9000162e:	f7ff bc8f 	b.w	90000f50 <_ZN8STM32DMAD1Ev>
90001632:	bf00      	nop
90001634:	20000598 	.word	0x20000598

90001638 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90001638:	2000      	movs	r0, #0
9000163a:	4770      	bx	lr

9000163c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
9000163c:	8081      	strh	r1, [r0, #4]
    }
9000163e:	4770      	bx	lr

90001640 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90001640:	80c1      	strh	r1, [r0, #6]
    }
90001642:	4770      	bx	lr

90001644 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90001644:	8101      	strh	r1, [r0, #8]
    }
90001646:	4770      	bx	lr

90001648 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90001648:	8141      	strh	r1, [r0, #10]
    }
9000164a:	4770      	bx	lr

9000164c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
9000164c:	4770      	bx	lr

9000164e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
9000164e:	4770      	bx	lr

90001650 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90001650:	4770      	bx	lr

90001652 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90001652:	4770      	bx	lr

90001654 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90001654:	4770      	bx	lr

90001656 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
90001656:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
90001658:	88c4      	ldrh	r4, [r0, #6]
9000165a:	6803      	ldr	r3, [r0, #0]
9000165c:	1b12      	subs	r2, r2, r4
9000165e:	8884      	ldrh	r4, [r0, #4]
90001660:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90001662:	1b09      	subs	r1, r1, r4
90001664:	b212      	sxth	r2, r2
    }
90001666:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
9000166a:	b209      	sxth	r1, r1
9000166c:	4718      	bx	r3

9000166e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
9000166e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90001672:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
90001674:	f04f 33ff 	mov.w	r3, #4294967295
90001678:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
9000167a:	6813      	ldr	r3, [r2, #0]
9000167c:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
9000167e:	6010      	str	r0, [r2, #0]
    }
90001680:	4770      	bx	lr

90001682 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90001682:	2000      	movs	r0, #0
90001684:	4770      	bx	lr

90001686 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
90001686:	888b      	ldrh	r3, [r1, #4]
90001688:	8083      	strh	r3, [r0, #4]
        return true;
    }
9000168a:	2001      	movs	r0, #1
9000168c:	4770      	bx	lr

9000168e <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
9000168e:	4770      	bx	lr

90001690 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90001690:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90001694:	4770      	bx	lr

90001696 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90001696:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
9000169a:	4770      	bx	lr

9000169c <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
9000169c:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000169e:	2200      	movs	r2, #0
        return rect.width;
900016a0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
900016a4:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
900016a8:	8002      	strh	r2, [r0, #0]
900016aa:	8042      	strh	r2, [r0, #2]
900016ac:	8084      	strh	r4, [r0, #4]
900016ae:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
900016b0:	bd10      	pop	{r4, pc}

900016b2 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
900016b2:	2200      	movs	r2, #0
900016b4:	8002      	strh	r2, [r0, #0]
900016b6:	8042      	strh	r2, [r0, #2]
900016b8:	8082      	strh	r2, [r0, #4]
900016ba:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
900016bc:	4770      	bx	lr

900016be <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
900016be:	7701      	strb	r1, [r0, #28]
    }
900016c0:	4770      	bx	lr

900016c2 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
900016c2:	ed80 0a08 	vstr	s0, [r0, #32]
    }
900016c6:	4770      	bx	lr

900016c8 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
900016c8:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
900016cc:	4770      	bx	lr

900016ce <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
900016ce:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
900016d2:	4770      	bx	lr

900016d4 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
900016d4:	2001      	movs	r0, #1
900016d6:	4770      	bx	lr

900016d8 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
900016d8:	3098      	adds	r0, #152	@ 0x98
900016da:	4770      	bx	lr

900016dc <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
900016dc:	308c      	adds	r0, #140	@ 0x8c
900016de:	4770      	bx	lr

900016e0 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
900016e0:	3084      	adds	r0, #132	@ 0x84
900016e2:	4770      	bx	lr

900016e4 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
900016e4:	4770      	bx	lr

900016e6 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
900016e6:	4770      	bx	lr

900016e8 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
900016e8:	4770      	bx	lr
	...

900016ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
900016ec:	4b03      	ldr	r3, [pc, #12]	@ (900016fc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
900016ee:	2290      	movs	r2, #144	@ 0x90
900016f0:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
900016f4:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
900016f8:	4770      	bx	lr
900016fa:	bf00      	nop
900016fc:	e000e100 	.word	0xe000e100

90001700 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90001700:	4a09      	ldr	r2, [pc, #36]	@ (90001728 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90001702:	490a      	ldr	r1, [pc, #40]	@ (9000172c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90001704:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90001706:	480a      	ldr	r0, [pc, #40]	@ (90001730 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90001708:	f3c3 030a 	ubfx	r3, r3, #0, #11
9000170c:	3b01      	subs	r3, #1
9000170e:	b29b      	uxth	r3, r3
90001710:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90001712:	6911      	ldr	r1, [r2, #16]
90001714:	f3c1 010a 	ubfx	r1, r1, #0, #11
90001718:	3901      	subs	r1, #1
9000171a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
9000171c:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
9000171e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90001720:	f043 0301 	orr.w	r3, r3, #1
90001724:	6353      	str	r3, [r2, #52]	@ 0x34
}
90001726:	4770      	bx	lr
90001728:	40016800 	.word	0x40016800
9000172c:	200015ba 	.word	0x200015ba
90001730:	200015b8 	.word	0x200015b8

90001734 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90001734:	4b01      	ldr	r3, [pc, #4]	@ (9000173c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90001736:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
9000173a:	4770      	bx	lr
9000173c:	40016800 	.word	0x40016800

90001740 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90001740:	4b02      	ldr	r3, [pc, #8]	@ (9000174c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90001742:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90001744:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90001748:	625a      	str	r2, [r3, #36]	@ 0x24
}
9000174a:	4770      	bx	lr
9000174c:	40016800 	.word	0x40016800

90001750 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90001750:	4a12      	ldr	r2, [pc, #72]	@ (9000179c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x4c>)
90001752:	6953      	ldr	r3, [r2, #20]
90001754:	03db      	lsls	r3, r3, #15
{
90001756:	b570      	push	{r4, r5, r6, lr}
    if (SCB->CCR & SCB_CCR_DC_Msk)
90001758:	d51e      	bpl.n	90001798 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
9000175a:	2300      	movs	r3, #0
9000175c:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90001760:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90001764:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90001768:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
9000176c:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90001770:	f3c3 334e 	ubfx	r3, r3, #13, #15
90001774:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90001776:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
9000177a:	4601      	mov	r1, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000177c:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
      } while (ways-- != 0U);
90001780:	3901      	subs	r1, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90001782:	f8c2 5274 	str.w	r5, [r2, #628]	@ 0x274
      } while (ways-- != 0U);
90001786:	d2f9      	bcs.n	9000177c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2c>
    } while(sets-- != 0U);
90001788:	3b20      	subs	r3, #32
9000178a:	f113 0f20 	cmn.w	r3, #32
9000178e:	d1f2      	bne.n	90001776 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x26>
90001790:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90001794:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
90001798:	bd70      	pop	{r4, r5, r6, pc}
9000179a:	bf00      	nop
9000179c:	e000ed00 	.word	0xe000ed00

900017a0 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
900017a0:	b510      	push	{r4, lr}
900017a2:	4604      	mov	r4, r0
900017a4:	212c      	movs	r1, #44	@ 0x2c
900017a6:	f025 febb 	bl	90027520 <_ZdlPvj>
900017aa:	4620      	mov	r0, r4
900017ac:	bd10      	pop	{r4, pc}

900017ae <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
900017ae:	b510      	push	{r4, lr}
900017b0:	4604      	mov	r4, r0
900017b2:	21bc      	movs	r1, #188	@ 0xbc
900017b4:	f025 feb4 	bl	90027520 <_ZdlPvj>
900017b8:	4620      	mov	r0, r4
900017ba:	bd10      	pop	{r4, pc}

900017bc <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
900017bc:	b570      	push	{r4, r5, r6, lr}
900017be:	4604      	mov	r4, r0
    HAL::initialize();
900017c0:	f00f f8c5 	bl	9001094e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
900017c4:	6823      	ldr	r3, [r4, #0]
900017c6:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
900017c8:	f013 fc62 	bl	90015090 <_ZN8touchgfx11Application11getInstanceEv>
900017cc:	4601      	mov	r1, r0
900017ce:	4620      	mov	r0, r4
900017d0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900017d2:	6823      	ldr	r3, [r4, #0]
900017d4:	4a05      	ldr	r2, [pc, #20]	@ (900017ec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
900017d6:	4620      	mov	r0, r4
900017d8:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
900017dc:	2300      	movs	r3, #0
900017de:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
900017e2:	46ac      	mov	ip, r5
}
900017e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900017e8:	4760      	bx	ip
900017ea:	bf00      	nop
900017ec:	c003fc00 	.word	0xc003fc00

900017f0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
900017f0:	f00f b894 	b.w	9001091c <_ZN8touchgfx3HAL10beginFrameEv>

900017f4 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
900017f4:	f00f b89e 	b.w	90010934 <_ZN8touchgfx3HAL8endFrameEv>

900017f8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:
    HAL::flushFrameBuffer(rect);
900017f8:	f00f b85a 	b.w	900108b0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

900017fc <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
    return HAL::blockCopy(dest, src, numBytes);
900017fc:	f00f b9c9 	b.w	90010b92 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

90001800 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
90001800:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90001804:	b112      	cbz	r2, 9000180c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
90001806:	6803      	ldr	r3, [r0, #0]
90001808:	695b      	ldr	r3, [r3, #20]
9000180a:	4718      	bx	r3
    }
9000180c:	4770      	bx	lr

9000180e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
9000180e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90001812:	b11a      	cbz	r2, 9000181c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90001814:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90001818:	b102      	cbz	r2, 9000181c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
9000181a:	6018      	str	r0, [r3, #0]
        }
    }
9000181c:	4770      	bx	lr
	...

90001820 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001820:	4b03      	ldr	r3, [pc, #12]	@ (90001830 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
90001822:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90001826:	609a      	str	r2, [r3, #8]
90001828:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
9000182c:	609a      	str	r2, [r3, #8]
}
9000182e:	4770      	bx	lr
90001830:	e000e100 	.word	0xe000e100

90001834 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001834:	4b08      	ldr	r3, [pc, #32]	@ (90001858 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
90001836:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000183a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000183e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90001842:	f3bf 8f6f 	isb	sy
90001846:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
9000184a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000184e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90001852:	f3bf 8f6f 	isb	sy
}
90001856:	4770      	bx	lr
90001858:	e000e100 	.word	0xe000e100

9000185c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
        : widgetWidth(0)
9000185c:	2300      	movs	r3, #0
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
9000185e:	b570      	push	{r4, r5, r6, lr}
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90001860:	4e12      	ldr	r6, [pc, #72]	@ (900018ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
90001862:	4605      	mov	r5, r0
90001864:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
90001866:	4b12      	ldr	r3, [pc, #72]	@ (900018b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
90001868:	6003      	str	r3, [r0, #0]
9000186a:	6833      	ldr	r3, [r6, #0]
9000186c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90001870:	b10a      	cbz	r2, 90001876 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
90001872:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90001874:	b900      	cbnz	r0, 90001878 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
90001876:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90001878:	6803      	ldr	r3, [r0, #0]
9000187a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000187c:	4798      	blx	r3
        return auxiliaryLCD;
9000187e:	6833      	ldr	r3, [r6, #0]
90001880:	fab0 f480 	clz	r4, r0
90001884:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90001886:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90001888:	b130      	cbz	r0, 90001898 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000188a:	6803      	ldr	r3, [r0, #0]
9000188c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000188e:	4798      	blx	r3
90001890:	2800      	cmp	r0, #0
90001892:	bf08      	it	eq
90001894:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90001898:	b92c      	cbnz	r4, 900018a6 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
9000189a:	4b06      	ldr	r3, [pc, #24]	@ (900018b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
9000189c:	212c      	movs	r1, #44	@ 0x2c
9000189e:	4a06      	ldr	r2, [pc, #24]	@ (900018b8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
900018a0:	4806      	ldr	r0, [pc, #24]	@ (900018bc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
900018a2:	f026 fd79 	bl	90028398 <__assert_func>
    }
900018a6:	4628      	mov	r0, r5
900018a8:	bd70      	pop	{r4, r5, r6, pc}
900018aa:	bf00      	nop
900018ac:	2001aa40 	.word	0x2001aa40
900018b0:	9002a864 	.word	0x9002a864
900018b4:	900299fc 	.word	0x900299fc
900018b8:	90029a5a 	.word	0x90029a5a
900018bc:	90029a93 	.word	0x90029a93

900018c0 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
900018c0:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
900018c2:	4e25      	ldr	r6, [pc, #148]	@ (90001958 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
900018c4:	6835      	ldr	r5, [r6, #0]
900018c6:	f3bf 8f5b 	dmb	ish
900018ca:	f015 0501 	ands.w	r5, r5, #1
900018ce:	d140      	bne.n	90001952 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
900018d0:	4630      	mov	r0, r6
900018d2:	f025 fe27 	bl	90027524 <__cxa_guard_acquire>
900018d6:	2800      	cmp	r0, #0
900018d8:	d03b      	beq.n	90001952 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
900018da:	4c20      	ldr	r4, [pc, #128]	@ (9000195c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
900018dc:	4b20      	ldr	r3, [pc, #128]	@ (90001960 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
900018de:	f104 0034 	add.w	r0, r4, #52	@ 0x34
900018e2:	6125      	str	r5, [r4, #16]
900018e4:	84e5      	strh	r5, [r4, #38]	@ 0x26
900018e6:	62a5      	str	r5, [r4, #40]	@ 0x28
900018e8:	85a5      	strh	r5, [r4, #44]	@ 0x2c
900018ea:	e9c4 3500 	strd	r3, r5, [r4]
900018ee:	e9c4 5502 	strd	r5, r5, [r4, #8]
900018f2:	f015 f920 	bl	90016b36 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
900018f6:	f104 0058 	add.w	r0, r4, #88	@ 0x58
900018fa:	f011 fbcd 	bl	90013098 <_ZN8touchgfx12CanvasWidgetC1Ev>
900018fe:	4b19      	ldr	r3, [pc, #100]	@ (90001964 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90001900:	4620      	mov	r0, r4
    class CanvasWidgetProxy : public CanvasWidget
90001902:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90001904:	4b18      	ldr	r3, [pc, #96]	@ (90001968 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
90001906:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
9000190a:	f7ff ffa7 	bl	9000185c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
9000190e:	4b17      	ldr	r3, [pc, #92]	@ (9000196c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
90001910:	4817      	ldr	r0, [pc, #92]	@ (90001970 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
90001912:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
90001916:	3324      	adds	r3, #36	@ 0x24
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
90001918:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
9000191c:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
90001920:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
90001924:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
90001928:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
9000192c:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
90001930:	2300      	movs	r3, #0
90001932:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
90001936:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
9000193a:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
9000193e:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
90001942:	4b0c      	ldr	r3, [pc, #48]	@ (90001974 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
90001944:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
90001948:	f026 fd44 	bl	900283d4 <atexit>
9000194c:	4630      	mov	r0, r6
9000194e:	f025 fdf5 	bl	9002753c <__cxa_guard_release>
}
90001952:	4802      	ldr	r0, [pc, #8]	@ (9000195c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
90001954:	bd70      	pop	{r4, r5, r6, pc}
90001956:	bf00      	nop
90001958:	200015bc 	.word	0x200015bc
9000195c:	200015c0 	.word	0x200015c0
90001960:	90035928 	.word	0x90035928
90001964:	9002a884 	.word	0x9002a884
90001968:	9002a8fc 	.word	0x9002a8fc
9000196c:	900358dc 	.word	0x900358dc
90001970:	900016e9 	.word	0x900016e9
90001974:	900358bc 	.word	0x900358bc

90001978 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90001978:	b538      	push	{r3, r4, r5, lr}
        return instance;
9000197a:	4c18      	ldr	r4, [pc, #96]	@ (900019dc <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
9000197c:	6823      	ldr	r3, [r4, #0]
9000197e:	b35b      	cbz	r3, 900019d8 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90001980:	4b17      	ldr	r3, [pc, #92]	@ (900019e0 <HAL_LTDC_LineEventCallback+0x68>)
90001982:	4a18      	ldr	r2, [pc, #96]	@ (900019e4 <HAL_LTDC_LineEventCallback+0x6c>)
90001984:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90001986:	8811      	ldrh	r1, [r2, #0]
90001988:	428b      	cmp	r3, r1
9000198a:	d116      	bne.n	900019ba <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
9000198c:	4b16      	ldr	r3, [pc, #88]	@ (900019e8 <HAL_LTDC_LineEventCallback+0x70>)
        isFrontPorchEntered = false;
9000198e:	2500      	movs	r5, #0
90001990:	8819      	ldrh	r1, [r3, #0]
90001992:	f003 fb2b 	bl	90004fec <HAL_LTDC_ProgramLineEvent>
        return instance;
90001996:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
90001998:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
9000199c:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
        vSyncCnt++;
900019a0:	3201      	adds	r2, #1
900019a2:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
900019a6:	f7ff fa7d 	bl	90000ea4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
900019aa:	6820      	ldr	r0, [r4, #0]
900019ac:	f00f fd4c 	bl	90011448 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
900019b0:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
900019b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
900019b6:	f7ff b859 	b.w	90000a6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
900019ba:	f003 fb17 	bl	90004fec <HAL_LTDC_ProgramLineEvent>
        return instance;
900019be:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
900019c0:	6823      	ldr	r3, [r4, #0]
900019c2:	4620      	mov	r0, r4
900019c4:	6a1b      	ldr	r3, [r3, #32]
900019c6:	4798      	blx	r3
        isFrontPorchEntered = true;
900019c8:	2301      	movs	r3, #1
            GPIO::clear(GPIO::VSYNC_FREQ);
900019ca:	2000      	movs	r0, #0
900019cc:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
    }
900019d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
900019d4:	f7ff b87a 	b.w	90000acc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
900019d8:	bd38      	pop	{r3, r4, r5, pc}
900019da:	bf00      	nop
900019dc:	2001aa40 	.word	0x2001aa40
900019e0:	40016800 	.word	0x40016800
900019e4:	200015ba 	.word	0x200015ba
900019e8:	200015b8 	.word	0x200015b8

900019ec <MX_USB_Device_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_Device_Init(void)
{
900019ec:	b510      	push	{r4, lr}

  /* Init Device Library */
  (void) USBD_Init(&USBD_Device, &CDC_RNDIS_Desc, 0);
900019ee:	4c09      	ldr	r4, [pc, #36]	@ (90001a14 <MX_USB_Device_Init+0x28>)
900019f0:	2200      	movs	r2, #0
900019f2:	4909      	ldr	r1, [pc, #36]	@ (90001a18 <MX_USB_Device_Init+0x2c>)
900019f4:	4620      	mov	r0, r4
900019f6:	f00e f819 	bl	9000fa2c <USBD_Init>

  /* Add Supported Class */
  (void) USBD_RegisterClass(&USBD_Device, USBD_CDC_RNDIS_CLASS);
900019fa:	4908      	ldr	r1, [pc, #32]	@ (90001a1c <MX_USB_Device_Init+0x30>)
900019fc:	4620      	mov	r0, r4
900019fe:	f00e f828 	bl	9000fa52 <USBD_RegisterClass>

  /* Add CDC Interface Class */
  (void) USBD_CDC_RNDIS_RegisterInterface(&USBD_Device, &USBD_CDC_RNDIS_fops);
90001a02:	4620      	mov	r0, r4
90001a04:	4906      	ldr	r1, [pc, #24]	@ (90001a20 <MX_USB_Device_Init+0x34>)
90001a06:	f00d fe30 	bl	9000f66a <USBD_CDC_RNDIS_RegisterInterface>

  /* Start Device Process */
  (void) USBD_Start(&USBD_Device);
90001a0a:	4620      	mov	r0, r4
}
90001a0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void) USBD_Start(&USBD_Device);
90001a10:	f00e b838 	b.w	9000fa84 <USBD_Start>
90001a14:	20002c0c 	.word	0x20002c0c
90001a18:	20000044 	.word	0x20000044
90001a1c:	200000f4 	.word	0x200000f4
90001a20:	20000010 	.word	0x20000010

90001a24 <CDC_RNDIS_Itf_DeInit>:
  * @param  None
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_RNDIS_Itf_DeInit(void)
{
  USBD_CDC_RNDIS_HandleTypeDef *hcdc_cdc_rndis = (USBD_CDC_RNDIS_HandleTypeDef *)(USBD_Device.pClassData);
90001a24:	4b03      	ldr	r3, [pc, #12]	@ (90001a34 <CDC_RNDIS_Itf_DeInit+0x10>)

  /* Notify application layer that link is down */
  hcdc_cdc_rndis->LinkStatus = 0U;
90001a26:	2000      	movs	r0, #0
  USBD_CDC_RNDIS_HandleTypeDef *hcdc_cdc_rndis = (USBD_CDC_RNDIS_HandleTypeDef *)(USBD_Device.pClassData);
90001a28:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
  hcdc_cdc_rndis->LinkStatus = 0U;
90001a2c:	f8c3 0804 	str.w	r0, [r3, #2052]	@ 0x804

  return (0);
}
90001a30:	4770      	bx	lr
90001a32:	bf00      	nop
90001a34:	20002c0c 	.word	0x20002c0c

90001a38 <CDC_RNDIS_Itf_Receive>:
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_RNDIS_Itf_Receive(uint8_t *Buf, uint32_t *Len)
{
  /* Get the CDC_RNDIS handler pointer */
  USBD_CDC_RNDIS_HandleTypeDef *hcdc_cdc_rndis = (USBD_CDC_RNDIS_HandleTypeDef *)(USBD_Device.pClassData);
90001a38:	4b03      	ldr	r3, [pc, #12]	@ (90001a48 <CDC_RNDIS_Itf_Receive+0x10>)

  /* Call Eth buffer processing */
  hcdc_cdc_rndis->RxState = 1U;
90001a3a:	2201      	movs	r2, #1

  UNUSED(Buf);
  UNUSED(Len);

  return (0);
}
90001a3c:	2000      	movs	r0, #0
  USBD_CDC_RNDIS_HandleTypeDef *hcdc_cdc_rndis = (USBD_CDC_RNDIS_HandleTypeDef *)(USBD_Device.pClassData);
90001a3e:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
  hcdc_cdc_rndis->RxState = 1U;
90001a42:	f8c3 27fc 	str.w	r2, [r3, #2044]	@ 0x7fc
}
90001a46:	4770      	bx	lr
90001a48:	20002c0c 	.word	0x20002c0c

90001a4c <CDC_RNDIS_Itf_TransmitCplt>:
  UNUSED(Buf);
  UNUSED(Len);
  UNUSED(epnum);

  return (0);
}
90001a4c:	2000      	movs	r0, #0
90001a4e:	4770      	bx	lr

90001a50 <CDC_RNDIS_Itf_Control>:
  switch (cmd)
90001a50:	2801      	cmp	r0, #1
{
90001a52:	b538      	push	{r3, r4, r5, lr}
90001a54:	4604      	mov	r4, r0
  switch (cmd)
90001a56:	d10a      	bne.n	90001a6e <CDC_RNDIS_Itf_Control+0x1e>
  USBD_CDC_RNDIS_HandleTypeDef *hcdc_cdc_rndis = (USBD_CDC_RNDIS_HandleTypeDef *)(USBD_Device.pClassData);
90001a58:	4b06      	ldr	r3, [pc, #24]	@ (90001a74 <CDC_RNDIS_Itf_Control+0x24>)
90001a5a:	f8d3 52bc 	ldr.w	r5, [r3, #700]	@ 0x2bc
      if (hcdc_cdc_rndis->LinkStatus == 0U)
90001a5e:	f8d5 3804 	ldr.w	r3, [r5, #2052]	@ 0x804
90001a62:	b923      	cbnz	r3, 90001a6e <CDC_RNDIS_Itf_Control+0x1e>
        netif_set_link_up(&gnetif);
90001a64:	4804      	ldr	r0, [pc, #16]	@ (90001a78 <CDC_RNDIS_Itf_Control+0x28>)
90001a66:	f009 fe93 	bl	9000b790 <netif_set_link_up>
        hcdc_cdc_rndis->LinkStatus = 1U;
90001a6a:	f8c5 4804 	str.w	r4, [r5, #2052]	@ 0x804
}
90001a6e:	2000      	movs	r0, #0
90001a70:	bd38      	pop	{r3, r4, r5, pc}
90001a72:	bf00      	nop
90001a74:	20002c0c 	.word	0x20002c0c
90001a78:	20002bd0 	.word	0x20002bd0

90001a7c <CDC_RNDIS_Itf_Process>:
  *         through this function.
  * @param  pdef: pointer to the USB Device Handle
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_RNDIS_Itf_Process(USBD_HandleTypeDef *pdev)
{
90001a7c:	b508      	push	{r3, lr}
  /* Get the CDC_RNDIS handler pointer */
  USBD_CDC_RNDIS_HandleTypeDef *hcdc_cdc_rndis = (USBD_CDC_RNDIS_HandleTypeDef *)(pdev->pClassData);
90001a7e:	f8d0 32bc 	ldr.w	r3, [r0, #700]	@ 0x2bc

  if ((hcdc_cdc_rndis != NULL) && (hcdc_cdc_rndis->LinkStatus != 0U))
90001a82:	b13b      	cbz	r3, 90001a94 <CDC_RNDIS_Itf_Process+0x18>
90001a84:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
90001a88:	b123      	cbz	r3, 90001a94 <CDC_RNDIS_Itf_Process+0x18>
  {
    /* Read a received packet from the Ethernet buffers and send it
      to the lwIP for handling */
    ethernetif_input(&gnetif);
90001a8a:	4803      	ldr	r0, [pc, #12]	@ (90001a98 <CDC_RNDIS_Itf_Process+0x1c>)
90001a8c:	f7fe fefc 	bl	90000888 <ethernetif_input>

    /* Handle timeouts */
    sys_check_timeouts();
90001a90:	f00c fd50 	bl	9000e534 <sys_check_timeouts>
  }

  return (0);
}
90001a94:	2000      	movs	r0, #0
90001a96:	bd08      	pop	{r3, pc}
90001a98:	20002bd0 	.word	0x20002bd0

90001a9c <CDC_RNDIS_Itf_Init>:
{
90001a9c:	b570      	push	{r4, r5, r6, lr}
  if (CDC_RNDISInitialized == 0U)
90001a9e:	4d23      	ldr	r5, [pc, #140]	@ (90001b2c <CDC_RNDIS_Itf_Init+0x90>)
{
90001aa0:	b088      	sub	sp, #32
90001aa2:	4c23      	ldr	r4, [pc, #140]	@ (90001b30 <CDC_RNDIS_Itf_Init+0x94>)
  if (CDC_RNDISInitialized == 0U)
90001aa4:	782e      	ldrb	r6, [r5, #0]
90001aa6:	bb3e      	cbnz	r6, 90001af8 <CDC_RNDIS_Itf_Init+0x5c>
    lwip_init();
90001aa8:	f009 fbde 	bl	9000b268 <lwip_init>
  IP_ADDR4(&netmask, NETMASK_ADDR0, NETMASK_ADDR1, NETMASK_ADDR2, NETMASK_ADDR3);
90001aac:	4a21      	ldr	r2, [pc, #132]	@ (90001b34 <CDC_RNDIS_Itf_Init+0x98>)
90001aae:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
  (void)netif_add(&gnetif, &ipaddr, &netmask, &gw,
90001ab2:	a905      	add	r1, sp, #20
90001ab4:	4620      	mov	r0, r4
  IP_ADDR4(&netmask, NETMASK_ADDR0, NETMASK_ADDR1, NETMASK_ADDR2, NETMASK_ADDR3);
90001ab6:	e9cd 2305 	strd	r2, r3, [sp, #20]
  IP_ADDR4(&gw, GW_ADDR0, GW_ADDR1, GW_ADDR2, GW_ADDR3);
90001aba:	f503 23b5 	add.w	r3, r3, #370688	@ 0x5a800
  (void)netif_add(&gnetif, &ipaddr, &netmask, &gw,
90001abe:	aa06      	add	r2, sp, #24
  IP_ADDR4(&gw, GW_ADDR0, GW_ADDR1, GW_ADDR2, GW_ADDR3);
90001ac0:	33c1      	adds	r3, #193	@ 0xc1
90001ac2:	9307      	str	r3, [sp, #28]
  (void)netif_add(&gnetif, &ipaddr, &netmask, &gw,
90001ac4:	4b1c      	ldr	r3, [pc, #112]	@ (90001b38 <CDC_RNDIS_Itf_Init+0x9c>)
90001ac6:	9302      	str	r3, [sp, #8]
90001ac8:	4b1c      	ldr	r3, [pc, #112]	@ (90001b3c <CDC_RNDIS_Itf_Init+0xa0>)
90001aca:	e9cd 6300 	strd	r6, r3, [sp]
90001ace:	ab07      	add	r3, sp, #28
90001ad0:	f009 fdce 	bl	9000b670 <netif_add>
  netif_set_default(&gnetif);
90001ad4:	4620      	mov	r0, r4
90001ad6:	f009 fe2f 	bl	9000b738 <netif_set_default>
  if (netif_is_link_up(&gnetif) == 1U)
90001ada:	f894 3031 	ldrb.w	r3, [r4, #49]	@ 0x31
    netif_set_up(&gnetif);
90001ade:	4620      	mov	r0, r4
  if (netif_is_link_up(&gnetif) == 1U)
90001ae0:	0759      	lsls	r1, r3, #29
90001ae2:	d51f      	bpl.n	90001b24 <CDC_RNDIS_Itf_Init+0x88>
    netif_set_up(&gnetif);
90001ae4:	f009 fe2e 	bl	9000b744 <netif_set_up>
  netif_set_link_callback(&gnetif, ethernetif_update_config);
90001ae8:	4915      	ldr	r1, [pc, #84]	@ (90001b40 <CDC_RNDIS_Itf_Init+0xa4>)
90001aea:	4811      	ldr	r0, [pc, #68]	@ (90001b30 <CDC_RNDIS_Itf_Init+0x94>)
90001aec:	f009 fe6c 	bl	9000b7c8 <netif_set_link_callback>
    http_server_init();
90001af0:	f7fe fe8c 	bl	9000080c <http_server_init>
    CDC_RNDISInitialized = 1U;
90001af4:	2301      	movs	r3, #1
90001af6:	702b      	strb	r3, [r5, #0]
  * @param  netif: the network interface
  * @retval None
  */
static void Netif_User_notification(struct netif *netif)
{
  if (netif_is_up(netif) == 1U)
90001af8:	f894 2031 	ldrb.w	r2, [r4, #49]	@ 0x31
 }
 else
  {
    /* Turn On LED 2 to indicate ETH and LwIP init error */
//    BSP_LED_Off(LED1);
    HAL_GPIO_WritePin(GPIOH, GPIO_PIN_2, 0);
90001afc:	2104      	movs	r1, #4
90001afe:	4811      	ldr	r0, [pc, #68]	@ (90001b44 <CDC_RNDIS_Itf_Init+0xa8>)
  if (netif_is_up(netif) == 1U)
90001b00:	f012 0201 	ands.w	r2, r2, #1
    HAL_GPIO_WritePin(GPIOH, GPIO_PIN_2, 1);
90001b04:	bf18      	it	ne
90001b06:	2201      	movne	r2, #1
    HAL_GPIO_WritePin(GPIOH, GPIO_PIN_2, 0);
90001b08:	f002 fd8c 	bl	90004624 <HAL_GPIO_WritePin>
  (void)USBD_CDC_RNDIS_SetTxBuffer(&USBD_Device, UserTxBuffer, 0U);
90001b0c:	2200      	movs	r2, #0
90001b0e:	490e      	ldr	r1, [pc, #56]	@ (90001b48 <CDC_RNDIS_Itf_Init+0xac>)
90001b10:	480e      	ldr	r0, [pc, #56]	@ (90001b4c <CDC_RNDIS_Itf_Init+0xb0>)
90001b12:	f00d fdb5 	bl	9000f680 <USBD_CDC_RNDIS_SetTxBuffer>
  (void)USBD_CDC_RNDIS_SetRxBuffer(&USBD_Device, UserRxBuffer);
90001b16:	490e      	ldr	r1, [pc, #56]	@ (90001b50 <CDC_RNDIS_Itf_Init+0xb4>)
90001b18:	480c      	ldr	r0, [pc, #48]	@ (90001b4c <CDC_RNDIS_Itf_Init+0xb0>)
90001b1a:	f00d fdbf 	bl	9000f69c <USBD_CDC_RNDIS_SetRxBuffer>
}
90001b1e:	2000      	movs	r0, #0
90001b20:	b008      	add	sp, #32
90001b22:	bd70      	pop	{r4, r5, r6, pc}
    netif_set_down(&gnetif);
90001b24:	f009 fe20 	bl	9000b768 <netif_set_down>
90001b28:	e7de      	b.n	90001ae8 <CDC_RNDIS_Itf_Init+0x4c>
90001b2a:	bf00      	nop
90001b2c:	2000167c 	.word	0x2000167c
90001b30:	20002bd0 	.word	0x20002bd0
90001b34:	0205a8c0 	.word	0x0205a8c0
90001b38:	9000e72d 	.word	0x9000e72d
90001b3c:	90000909 	.word	0x90000909
90001b40:	90000949 	.word	0x90000949
90001b44:	40021c00 	.word	0x40021c00
90001b48:	20001680 	.word	0x20001680
90001b4c:	20002c0c 	.word	0x20002c0c
90001b50:	20001cd0 	.word	0x20001cd0

90001b54 <ethernetif_notify_conn_changed>:
  * @brief  This function notify user about link status changement.
  * @param  netif: the network interface
  * @retval None
  */
void ethernetif_notify_conn_changed(struct netif *netif)
{
90001b54:	b530      	push	{r4, r5, lr}
  ip_addr_t ipaddr;
  ip_addr_t netmask;
  ip_addr_t gw;

  if(netif_is_link_up(netif) == 1U)
90001b56:	f890 2031 	ldrb.w	r2, [r0, #49]	@ 0x31
{
90001b5a:	b085      	sub	sp, #20
90001b5c:	4604      	mov	r4, r0
  if(netif_is_link_up(netif) == 1U)
90001b5e:	f012 0504 	ands.w	r5, r2, #4
90001b62:	d01d      	beq.n	90001ba0 <ethernetif_notify_conn_changed+0x4c>
  {
//    BSP_LED_Off(LED1);
    HAL_GPIO_WritePin(GPIOH, GPIO_PIN_2, 0);
90001b64:	2200      	movs	r2, #0
90001b66:	2104      	movs	r1, #4
90001b68:	4812      	ldr	r0, [pc, #72]	@ (90001bb4 <ethernetif_notify_conn_changed+0x60>)
90001b6a:	f002 fd5b 	bl	90004624 <HAL_GPIO_WritePin>
//    BSP_LED_On(LED1);
    HAL_GPIO_WritePin(GPIOH, GPIO_PIN_2, 1);
90001b6e:	2201      	movs	r2, #1
90001b70:	2104      	movs	r1, #4
90001b72:	4810      	ldr	r0, [pc, #64]	@ (90001bb4 <ethernetif_notify_conn_changed+0x60>)
90001b74:	f002 fd56 	bl	90004624 <HAL_GPIO_WritePin>

    IP_ADDR4(&ipaddr, IP_ADDR0, IP_ADDR1, IP_ADDR2, IP_ADDR3);
    IP_ADDR4(&netmask, NETMASK_ADDR0, NETMASK_ADDR1, NETMASK_ADDR2, NETMASK_ADDR3);
90001b78:	4a0f      	ldr	r2, [pc, #60]	@ (90001bb8 <ethernetif_notify_conn_changed+0x64>)
90001b7a:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
    IP_ADDR4(&gw, GW_ADDR0, GW_ADDR1, GW_ADDR2, GW_ADDR3);

    netif_set_addr(netif, &ipaddr , &netmask, &gw);
90001b7e:	a901      	add	r1, sp, #4
90001b80:	4620      	mov	r0, r4
    IP_ADDR4(&netmask, NETMASK_ADDR0, NETMASK_ADDR1, NETMASK_ADDR2, NETMASK_ADDR3);
90001b82:	e9cd 2301 	strd	r2, r3, [sp, #4]
    IP_ADDR4(&gw, GW_ADDR0, GW_ADDR1, GW_ADDR2, GW_ADDR3);
90001b86:	f503 23b5 	add.w	r3, r3, #370688	@ 0x5a800
    netif_set_addr(netif, &ipaddr , &netmask, &gw);
90001b8a:	aa02      	add	r2, sp, #8
    IP_ADDR4(&gw, GW_ADDR0, GW_ADDR1, GW_ADDR2, GW_ADDR3);
90001b8c:	33c1      	adds	r3, #193	@ 0xc1
90001b8e:	9303      	str	r3, [sp, #12]
    netif_set_addr(netif, &ipaddr , &netmask, &gw);
90001b90:	ab03      	add	r3, sp, #12
90001b92:	f009 fd41 	bl	9000b618 <netif_set_addr>

    /* When the netif is fully configured this function must be called. */
    netif_set_up(netif);
90001b96:	4620      	mov	r0, r4
90001b98:	f009 fdd4 	bl	9000b744 <netif_set_up>
    netif_set_down(netif);

//    BSP_LED_Off(LED1);
    HAL_GPIO_WritePin(GPIOH, GPIO_PIN_2, 0);
  }
}
90001b9c:	b005      	add	sp, #20
90001b9e:	bd30      	pop	{r4, r5, pc}
    netif_set_down(netif);
90001ba0:	f009 fde2 	bl	9000b768 <netif_set_down>
    HAL_GPIO_WritePin(GPIOH, GPIO_PIN_2, 0);
90001ba4:	462a      	mov	r2, r5
90001ba6:	2104      	movs	r1, #4
90001ba8:	4802      	ldr	r0, [pc, #8]	@ (90001bb4 <ethernetif_notify_conn_changed+0x60>)
}
90001baa:	b005      	add	sp, #20
90001bac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    HAL_GPIO_WritePin(GPIOH, GPIO_PIN_2, 0);
90001bb0:	f002 bd38 	b.w	90004624 <HAL_GPIO_WritePin>
90001bb4:	40021c00 	.word	0x40021c00
90001bb8:	0205a8c0 	.word	0x0205a8c0

90001bbc <USBD_CDC_RNDIS_DeviceDescriptor>:
  * @param  length: Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t *USBD_CDC_RNDIS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  *length = (uint16_t) sizeof(USBD_DeviceDesc);
90001bbc:	2312      	movs	r3, #18
  UNUSED(speed);
  return (uint8_t*)USBD_DeviceDesc;
}
90001bbe:	4801      	ldr	r0, [pc, #4]	@ (90001bc4 <USBD_CDC_RNDIS_DeviceDescriptor+0x8>)
  *length = (uint16_t) sizeof(USBD_DeviceDesc);
90001bc0:	800b      	strh	r3, [r1, #0]
}
90001bc2:	4770      	bx	lr
90001bc4:	20000030 	.word	0x20000030

90001bc8 <USBD_CDC_RNDIS_LangIDStrDescriptor>:
  * @param  length: Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t *USBD_CDC_RNDIS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  *length =(uint16_t) sizeof(USBD_LangIDDesc);
90001bc8:	2304      	movs	r3, #4
  UNUSED(speed);
  return (uint8_t*)USBD_LangIDDesc;
}
90001bca:	4801      	ldr	r0, [pc, #4]	@ (90001bd0 <USBD_CDC_RNDIS_LangIDStrDescriptor+0x8>)
  *length =(uint16_t) sizeof(USBD_LangIDDesc);
90001bcc:	800b      	strh	r3, [r1, #0]
}
90001bce:	4770      	bx	lr
90001bd0:	2000002c 	.word	0x2000002c

90001bd4 <USBD_CDC_RNDIS_ManufacturerStrDescriptor>:
  * @param  speed: Current device speed
  * @param  length: Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t *USBD_CDC_RNDIS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
90001bd4:	b510      	push	{r4, lr}
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
90001bd6:	4c04      	ldr	r4, [pc, #16]	@ (90001be8 <USBD_CDC_RNDIS_ManufacturerStrDescriptor+0x14>)
{
90001bd8:	460a      	mov	r2, r1
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
90001bda:	4804      	ldr	r0, [pc, #16]	@ (90001bec <USBD_CDC_RNDIS_ManufacturerStrDescriptor+0x18>)
90001bdc:	4621      	mov	r1, r4
90001bde:	f00e fb34 	bl	9001024a <USBD_GetString>
  UNUSED(speed);
  return USBD_StrDesc;
}
90001be2:	4620      	mov	r0, r4
90001be4:	bd10      	pop	{r4, pc}
90001be6:	bf00      	nop
90001be8:	20002420 	.word	0x20002420
90001bec:	90029b02 	.word	0x90029b02

90001bf0 <USBD_CDC_RNDIS_SerialStrDescriptor>:
  * @param  speed: Current device speed
  * @param  length: Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t *USBD_CDC_RNDIS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
90001bf0:	b510      	push	{r4, lr}
  static uint8_t USBD_StrDesc[255];

  USBD_GetString (CDC_RNDIS_MAC_STR_DESC, USBD_StrDesc, length);
90001bf2:	4c04      	ldr	r4, [pc, #16]	@ (90001c04 <USBD_CDC_RNDIS_SerialStrDescriptor+0x14>)
{
90001bf4:	460a      	mov	r2, r1
  USBD_GetString (CDC_RNDIS_MAC_STR_DESC, USBD_StrDesc, length);
90001bf6:	4804      	ldr	r0, [pc, #16]	@ (90001c08 <USBD_CDC_RNDIS_SerialStrDescriptor+0x18>)
90001bf8:	4621      	mov	r1, r4
90001bfa:	f00e fb26 	bl	9001024a <USBD_GetString>
  UNUSED(speed);
  return USBD_StrDesc;
}
90001bfe:	4620      	mov	r0, r4
90001c00:	bd10      	pop	{r4, pc}
90001c02:	bf00      	nop
90001c04:	2000231e 	.word	0x2000231e
90001c08:	90029af5 	.word	0x90029af5

90001c0c <USBD_CDC_RNDIS_ProductStrDescriptor>:
{
90001c0c:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_PRODUCT_HS_STRING, USBD_StrDesc, length);
90001c0e:	4905      	ldr	r1, [pc, #20]	@ (90001c24 <USBD_CDC_RNDIS_ProductStrDescriptor+0x18>)
{
90001c10:	b508      	push	{r3, lr}
  if(speed == USBD_SPEED_HIGH)
90001c12:	b920      	cbnz	r0, 90001c1e <USBD_CDC_RNDIS_ProductStrDescriptor+0x12>
    USBD_GetString((uint8_t *)USBD_PRODUCT_HS_STRING, USBD_StrDesc, length);
90001c14:	4804      	ldr	r0, [pc, #16]	@ (90001c28 <USBD_CDC_RNDIS_ProductStrDescriptor+0x1c>)
    USBD_GetString((uint8_t *)USBD_PRODUCT_FS_STRING, USBD_StrDesc, length);
90001c16:	f00e fb18 	bl	9001024a <USBD_GetString>
}
90001c1a:	4802      	ldr	r0, [pc, #8]	@ (90001c24 <USBD_CDC_RNDIS_ProductStrDescriptor+0x18>)
90001c1c:	bd08      	pop	{r3, pc}
    USBD_GetString((uint8_t *)USBD_PRODUCT_FS_STRING, USBD_StrDesc, length);
90001c1e:	4803      	ldr	r0, [pc, #12]	@ (90001c2c <USBD_CDC_RNDIS_ProductStrDescriptor+0x20>)
90001c20:	e7f9      	b.n	90001c16 <USBD_CDC_RNDIS_ProductStrDescriptor+0xa>
90001c22:	bf00      	nop
90001c24:	20002420 	.word	0x20002420
90001c28:	90029b15 	.word	0x90029b15
90001c2c:	90029b30 	.word	0x90029b30

90001c30 <USBD_CDC_RNDIS_ConfigStrDescriptor>:
  * @param  speed: Current device speed
  * @param  length: Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t *USBD_CDC_RNDIS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
90001c30:	460a      	mov	r2, r1
  if(speed == USBD_SPEED_HIGH)
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_HS_STRING, USBD_StrDesc, length);
90001c32:	4905      	ldr	r1, [pc, #20]	@ (90001c48 <USBD_CDC_RNDIS_ConfigStrDescriptor+0x18>)
{
90001c34:	b508      	push	{r3, lr}
  if(speed == USBD_SPEED_HIGH)
90001c36:	b920      	cbnz	r0, 90001c42 <USBD_CDC_RNDIS_ConfigStrDescriptor+0x12>
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_HS_STRING, USBD_StrDesc, length);
90001c38:	4804      	ldr	r0, [pc, #16]	@ (90001c4c <USBD_CDC_RNDIS_ConfigStrDescriptor+0x1c>)
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_FS_STRING, USBD_StrDesc, length);
90001c3a:	f00e fb06 	bl	9001024a <USBD_GetString>
  }
  return USBD_StrDesc;
}
90001c3e:	4802      	ldr	r0, [pc, #8]	@ (90001c48 <USBD_CDC_RNDIS_ConfigStrDescriptor+0x18>)
90001c40:	bd08      	pop	{r3, pc}
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_FS_STRING, USBD_StrDesc, length);
90001c42:	4803      	ldr	r0, [pc, #12]	@ (90001c50 <USBD_CDC_RNDIS_ConfigStrDescriptor+0x20>)
90001c44:	e7f9      	b.n	90001c3a <USBD_CDC_RNDIS_ConfigStrDescriptor+0xa>
90001c46:	bf00      	nop
90001c48:	20002420 	.word	0x20002420
90001c4c:	90029b4b 	.word	0x90029b4b
90001c50:	90029b5f 	.word	0x90029b5f

90001c54 <USBD_CDC_RNDIS_InterfaceStrDescriptor>:
  * @param  speed: Current device speed
  * @param  length: Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t *USBD_CDC_RNDIS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
90001c54:	460a      	mov	r2, r1
  if(speed == USBD_SPEED_HIGH)
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_HS_STRING, USBD_StrDesc, length);
90001c56:	4905      	ldr	r1, [pc, #20]	@ (90001c6c <USBD_CDC_RNDIS_InterfaceStrDescriptor+0x18>)
{
90001c58:	b508      	push	{r3, lr}
  if(speed == USBD_SPEED_HIGH)
90001c5a:	b920      	cbnz	r0, 90001c66 <USBD_CDC_RNDIS_InterfaceStrDescriptor+0x12>
    USBD_GetString((uint8_t *)USBD_INTERFACE_HS_STRING, USBD_StrDesc, length);
90001c5c:	4804      	ldr	r0, [pc, #16]	@ (90001c70 <USBD_CDC_RNDIS_InterfaceStrDescriptor+0x1c>)
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_FS_STRING, USBD_StrDesc, length);
90001c5e:	f00e faf4 	bl	9001024a <USBD_GetString>
  }
  return USBD_StrDesc;
}
90001c62:	4802      	ldr	r0, [pc, #8]	@ (90001c6c <USBD_CDC_RNDIS_InterfaceStrDescriptor+0x18>)
90001c64:	bd08      	pop	{r3, pc}
    USBD_GetString((uint8_t *)USBD_INTERFACE_FS_STRING, USBD_StrDesc, length);
90001c66:	4803      	ldr	r0, [pc, #12]	@ (90001c74 <USBD_CDC_RNDIS_InterfaceStrDescriptor+0x20>)
90001c68:	e7f9      	b.n	90001c5e <USBD_CDC_RNDIS_InterfaceStrDescriptor+0xa>
90001c6a:	bf00      	nop
90001c6c:	20002420 	.word	0x20002420
90001c70:	90029b73 	.word	0x90029b73
90001c74:	90029b8a 	.word	0x90029b8a

90001c78 <HAL_PCD_MspInit>:
  */
void HAL_PCD_MspInit(PCD_HandleTypeDef *hpcd)
{
  GPIO_InitTypeDef  GPIO_InitStruct;

  if(hpcd->Instance == USB_OTG_FS)
90001c78:	6803      	ldr	r3, [r0, #0]
90001c7a:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
{
90001c7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90001c82:	4604      	mov	r4, r0
90001c84:	b08e      	sub	sp, #56	@ 0x38
  if(hpcd->Instance == USB_OTG_FS)
90001c86:	d14f      	bne.n	90001d28 <HAL_PCD_MspInit+0xb0>
  {
    /* Configure USB FS GPIOs */
    __HAL_RCC_GPIOA_CLK_ENABLE();
90001c88:	4b67      	ldr	r3, [pc, #412]	@ (90001e28 <HAL_PCD_MspInit+0x1b0>)

    /* Configure DM DP Pins */
    GPIO_InitStruct.Pin = (GPIO_PIN_11 | GPIO_PIN_12);
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90001c8a:	f44f 50c0 	mov.w	r0, #6144	@ 0x1800
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
90001c8e:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90001c90:	a909      	add	r1, sp, #36	@ 0x24
    __HAL_RCC_GPIOA_CLK_ENABLE();
90001c92:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90001c94:	f042 0201 	orr.w	r2, r2, #1
90001c98:	631a      	str	r2, [r3, #48]	@ 0x30
90001c9a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90001c9c:	f003 0301 	and.w	r3, r3, #1
90001ca0:	9300      	str	r3, [sp, #0]
90001ca2:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90001ca4:	2302      	movs	r3, #2
90001ca6:	e9cd 0309 	strd	r0, r3, [sp, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
90001caa:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90001cac:	485f      	ldr	r0, [pc, #380]	@ (90001e2c <HAL_PCD_MspInit+0x1b4>)
    GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
90001cae:	e9cd 530b 	strd	r5, r3, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
90001cb2:	230a      	movs	r3, #10
90001cb4:	930d      	str	r3, [sp, #52]	@ 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90001cb6:	f002 fb31 	bl	9000431c <HAL_GPIO_Init>

    if(hpcd->Init.vbus_sensing_enable == 1U)
90001cba:	7ba3      	ldrb	r3, [r4, #14]
90001cbc:	2b01      	cmp	r3, #1
90001cbe:	d108      	bne.n	90001cd2 <HAL_PCD_MspInit+0x5a>
    {
      /* Configure VBUS Pin */
      GPIO_InitStruct.Pin = GPIO_PIN_9;
90001cc0:	f44f 7300 	mov.w	r3, #512	@ 0x200
      GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
      GPIO_InitStruct.Pull = GPIO_NOPULL;
      HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90001cc4:	a909      	add	r1, sp, #36	@ 0x24
90001cc6:	4859      	ldr	r0, [pc, #356]	@ (90001e2c <HAL_PCD_MspInit+0x1b4>)
      GPIO_InitStruct.Pull = GPIO_NOPULL;
90001cc8:	950b      	str	r5, [sp, #44]	@ 0x2c
      GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
90001cca:	e9cd 3509 	strd	r3, r5, [sp, #36]	@ 0x24
      HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90001cce:	f002 fb25 	bl	9000431c <HAL_GPIO_Init>
    }

    /* Configure ID pin */
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
90001cd2:	f44f 6280 	mov.w	r2, #1024	@ 0x400
90001cd6:	2312      	movs	r3, #18
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90001cd8:	a909      	add	r1, sp, #36	@ 0x24
90001cda:	4854      	ldr	r0, [pc, #336]	@ (90001e2c <HAL_PCD_MspInit+0x1b4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
90001cdc:	e9cd 2309 	strd	r2, r3, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pull = GPIO_PULLUP;
90001ce0:	2301      	movs	r3, #1
90001ce2:	930b      	str	r3, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
90001ce4:	230a      	movs	r3, #10
90001ce6:	930d      	str	r3, [sp, #52]	@ 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90001ce8:	f002 fb18 	bl	9000431c <HAL_GPIO_Init>

    /* Enable USB FS Clock */
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
90001cec:	4b4e      	ldr	r3, [pc, #312]	@ (90001e28 <HAL_PCD_MspInit+0x1b0>)

    /* Set USBFS Interrupt priority */
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 6, 0);
90001cee:	2043      	movs	r0, #67	@ 0x43
90001cf0:	2106      	movs	r1, #6
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
90001cf2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90001cf4:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90001cf8:	635a      	str	r2, [r3, #52]	@ 0x34
90001cfa:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90001cfc:	f002 0280 	and.w	r2, r2, #128	@ 0x80
90001d00:	9201      	str	r2, [sp, #4]
90001d02:	9a01      	ldr	r2, [sp, #4]
90001d04:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
90001d06:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90001d0a:	645a      	str	r2, [r3, #68]	@ 0x44
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 6, 0);
90001d0c:	2200      	movs	r2, #0
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
90001d0e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90001d10:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
90001d14:	9302      	str	r3, [sp, #8]
90001d16:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 6, 0);
90001d18:	f002 f848 	bl	90003dac <HAL_NVIC_SetPriority>

    /* Enable USBFS Interrupt */
    HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
90001d1c:	2043      	movs	r0, #67	@ 0x43

    /* Set USBHS Interrupt to the lowest priority */
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 7, 0);

    /* Enable USBHS Interrupt */
    HAL_NVIC_EnableIRQ(OTG_HS_IRQn);
90001d1e:	f002 f877 	bl	90003e10 <HAL_NVIC_EnableIRQ>
  }
}
90001d22:	b00e      	add	sp, #56	@ 0x38
90001d24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  else if(hpcd->Instance == USB_OTG_HS)
90001d28:	4a41      	ldr	r2, [pc, #260]	@ (90001e30 <HAL_PCD_MspInit+0x1b8>)
90001d2a:	4293      	cmp	r3, r2
90001d2c:	d1f9      	bne.n	90001d22 <HAL_PCD_MspInit+0xaa>
    __HAL_RCC_GPIOA_CLK_ENABLE();
90001d2e:	4c3e      	ldr	r4, [pc, #248]	@ (90001e28 <HAL_PCD_MspInit+0x1b0>)
    GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
90001d30:	2500      	movs	r5, #0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90001d32:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
90001d34:	260a      	movs	r6, #10
    __HAL_RCC_GPIOA_CLK_ENABLE();
90001d36:	6b23      	ldr	r3, [r4, #48]	@ 0x30
    GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
90001d38:	f04f 0803 	mov.w	r8, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90001d3c:	a909      	add	r1, sp, #36	@ 0x24
90001d3e:	483b      	ldr	r0, [pc, #236]	@ (90001e2c <HAL_PCD_MspInit+0x1b4>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
90001d40:	f043 0301 	orr.w	r3, r3, #1
90001d44:	6323      	str	r3, [r4, #48]	@ 0x30
90001d46:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90001d48:	f003 0301 	and.w	r3, r3, #1
90001d4c:	9303      	str	r3, [sp, #12]
90001d4e:	9b03      	ldr	r3, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
90001d50:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90001d52:	f043 0302 	orr.w	r3, r3, #2
90001d56:	6323      	str	r3, [r4, #48]	@ 0x30
90001d58:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90001d5a:	f003 0302 	and.w	r3, r3, #2
90001d5e:	9304      	str	r3, [sp, #16]
90001d60:	9b04      	ldr	r3, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
90001d62:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90001d64:	f043 0304 	orr.w	r3, r3, #4
90001d68:	6323      	str	r3, [r4, #48]	@ 0x30
90001d6a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90001d6c:	f003 0304 	and.w	r3, r3, #4
90001d70:	9305      	str	r3, [sp, #20]
90001d72:	9b05      	ldr	r3, [sp, #20]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90001d74:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90001d76:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90001d7a:	6323      	str	r3, [r4, #48]	@ 0x30
90001d7c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
90001d7e:	960d      	str	r6, [sp, #52]	@ 0x34
    __HAL_RCC_GPIOH_CLK_ENABLE();
90001d80:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90001d84:	9306      	str	r3, [sp, #24]
90001d86:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90001d88:	2320      	movs	r3, #32
    GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
90001d8a:	e9cd 580b 	strd	r5, r8, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90001d8e:	e9cd 3709 	strd	r3, r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90001d92:	f002 fac3 	bl	9000431c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_3;
90001d96:	2308      	movs	r3, #8
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90001d98:	a909      	add	r1, sp, #36	@ 0x24
90001d9a:	4824      	ldr	r0, [pc, #144]	@ (90001e2c <HAL_PCD_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
90001d9c:	960d      	str	r6, [sp, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90001d9e:	e9cd 3709 	strd	r3, r7, [sp, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
90001da2:	e9cd 580b 	strd	r5, r8, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90001da6:	f002 fab9 	bl	9000431c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0  | GPIO_PIN_1  | GPIO_PIN_5 |\
90001daa:	f643 4323 	movw	r3, #15395	@ 0x3c23
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90001dae:	a909      	add	r1, sp, #36	@ 0x24
90001db0:	4820      	ldr	r0, [pc, #128]	@ (90001e34 <HAL_PCD_MspInit+0x1bc>)
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90001db2:	950b      	str	r5, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
90001db4:	960d      	str	r6, [sp, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90001db6:	e9cd 3709 	strd	r3, r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90001dba:	f002 faaf 	bl	9000431c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0;
90001dbe:	2301      	movs	r3, #1
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
90001dc0:	a909      	add	r1, sp, #36	@ 0x24
90001dc2:	481d      	ldr	r0, [pc, #116]	@ (90001e38 <HAL_PCD_MspInit+0x1c0>)
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90001dc4:	950b      	str	r5, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
90001dc6:	960d      	str	r6, [sp, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90001dc8:	e9cd 3709 	strd	r3, r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
90001dcc:	f002 faa6 	bl	9000431c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_4;
90001dd0:	2310      	movs	r3, #16
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90001dd2:	a909      	add	r1, sp, #36	@ 0x24
90001dd4:	4819      	ldr	r0, [pc, #100]	@ (90001e3c <HAL_PCD_MspInit+0x1c4>)
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90001dd6:	950b      	str	r5, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
90001dd8:	960d      	str	r6, [sp, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90001dda:	e9cd 3709 	strd	r3, r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90001dde:	f002 fa9d 	bl	9000431c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_2;
90001de2:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
90001de4:	a909      	add	r1, sp, #36	@ 0x24
90001de6:	4814      	ldr	r0, [pc, #80]	@ (90001e38 <HAL_PCD_MspInit+0x1c0>)
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90001de8:	950b      	str	r5, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
90001dea:	960d      	str	r6, [sp, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90001dec:	e9cd 3709 	strd	r3, r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
90001df0:	f002 fa94 	bl	9000431c <HAL_GPIO_Init>
    __HAL_RCC_USB_OTG_HS_ULPI_CLK_ENABLE();
90001df4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 7, 0);
90001df6:	204d      	movs	r0, #77	@ 0x4d
90001df8:	462a      	mov	r2, r5
    __HAL_RCC_USB_OTG_HS_ULPI_CLK_ENABLE();
90001dfa:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 7, 0);
90001dfe:	2107      	movs	r1, #7
    __HAL_RCC_USB_OTG_HS_ULPI_CLK_ENABLE();
90001e00:	6323      	str	r3, [r4, #48]	@ 0x30
90001e02:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90001e04:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
90001e08:	9307      	str	r3, [sp, #28]
90001e0a:	9b07      	ldr	r3, [sp, #28]
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
90001e0c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90001e0e:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
90001e12:	6323      	str	r3, [r4, #48]	@ 0x30
90001e14:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90001e16:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
90001e1a:	9308      	str	r3, [sp, #32]
90001e1c:	9b08      	ldr	r3, [sp, #32]
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 7, 0);
90001e1e:	f001 ffc5 	bl	90003dac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_HS_IRQn);
90001e22:	204d      	movs	r0, #77	@ 0x4d
90001e24:	e77b      	b.n	90001d1e <HAL_PCD_MspInit+0xa6>
90001e26:	bf00      	nop
90001e28:	40023800 	.word	0x40023800
90001e2c:	40020000 	.word	0x40020000
90001e30:	40040000 	.word	0x40040000
90001e34:	40020400 	.word	0x40020400
90001e38:	40020800 	.word	0x40020800
90001e3c:	40021c00 	.word	0x40021c00

90001e40 <HAL_PCD_SetupStageCallback>:
  * @param  hpcd: PCD handle
  * @retval None
  */
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
{
  (void)USBD_LL_SetupStage(hpcd->pData, (uint8_t *)hpcd->Setup);
90001e40:	f200 419c 	addw	r1, r0, #1180	@ 0x49c
90001e44:	f8d0 04dc 	ldr.w	r0, [r0, #1244]	@ 0x4dc
90001e48:	f00d be2e 	b.w	9000faa8 <USBD_LL_SetupStage>

90001e4c <HAL_PCD_DataOutStageCallback>:
  * @param  epnum: Endpoint Number
  * @retval None
  */
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
{
  (void)USBD_LL_DataOutStage(hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
90001e4c:	2324      	movs	r3, #36	@ 0x24
90001e4e:	fb03 0301 	mla	r3, r3, r1, r0
90001e52:	f8d0 04dc 	ldr.w	r0, [r0, #1244]	@ 0x4dc
90001e56:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
90001e5a:	f00d be55 	b.w	9000fb08 <USBD_LL_DataOutStage>

90001e5e <HAL_PCD_DataInStageCallback>:
  * @param  epnum: Endpoint Number
  * @retval None
  */
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
{
  (void)USBD_LL_DataInStage(hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
90001e5e:	2324      	movs	r3, #36	@ 0x24
90001e60:	fb03 0301 	mla	r3, r3, r1, r0
90001e64:	f8d0 04dc 	ldr.w	r0, [r0, #1244]	@ 0x4dc
90001e68:	6a1a      	ldr	r2, [r3, #32]
90001e6a:	f00d be82 	b.w	9000fb72 <USBD_LL_DataInStage>

90001e6e <HAL_PCD_SOFCallback>:
  * @param  hpcd: PCD handle
  * @retval None
  */
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
{
  (void)USBD_LL_SOF(hpcd->pData);
90001e6e:	f8d0 04dc 	ldr.w	r0, [r0, #1244]	@ 0x4dc
90001e72:	f00d bf1c 	b.w	9000fcae <USBD_LL_SOF>

90001e76 <HAL_PCD_ResetCallback>:
  * @brief  Reset callback.
  * @param  hpcd: PCD handle
  * @retval None
  */
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
{
90001e76:	b538      	push	{r3, r4, r5, lr}
  USBD_SpeedTypeDef speed;

  /* Set USB Current Speed */
  switch(hpcd->Init.speed)
90001e78:	79c5      	ldrb	r5, [r0, #7]
{
90001e7a:	4604      	mov	r4, r0
    speed = USBD_SPEED_FULL;
    break;
  }

  /* Reset Device */
  (void)USBD_LL_Reset(hpcd->pData);
90001e7c:	f8d0 04dc 	ldr.w	r0, [r0, #1244]	@ 0x4dc
  switch(hpcd->Init.speed)
90001e80:	3d00      	subs	r5, #0
90001e82:	bf18      	it	ne
90001e84:	2501      	movne	r5, #1
  (void)USBD_LL_Reset(hpcd->pData);
90001e86:	f00d fec7 	bl	9000fc18 <USBD_LL_Reset>

  (void)USBD_LL_SetSpeed(hpcd->pData, speed);
90001e8a:	f8d4 04dc 	ldr.w	r0, [r4, #1244]	@ 0x4dc
90001e8e:	4629      	mov	r1, r5
}
90001e90:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  (void)USBD_LL_SetSpeed(hpcd->pData, speed);
90001e94:	f00d beef 	b.w	9000fc76 <USBD_LL_SetSpeed>

90001e98 <HAL_PCD_SuspendCallback>:
  * @param  hpcd: PCD handle
  * @retval None
  */
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
{
  (void)USBD_LL_Suspend(hpcd->pData);
90001e98:	f8d0 04dc 	ldr.w	r0, [r0, #1244]	@ 0x4dc
90001e9c:	f00d beee 	b.w	9000fc7c <USBD_LL_Suspend>

90001ea0 <HAL_PCD_ResumeCallback>:
  * @param  hpcd: PCD handle
  * @retval None
  */
void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
{
  (void)USBD_LL_Resume(hpcd->pData);
90001ea0:	f8d0 04dc 	ldr.w	r0, [r0, #1244]	@ 0x4dc
90001ea4:	f00d bef8 	b.w	9000fc98 <USBD_LL_Resume>

90001ea8 <HAL_PCD_ISOOUTIncompleteCallback>:
  * @param  epnum: Endpoint Number
  * @retval None
  */
void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
{
  (void)USBD_LL_IsoOUTIncomplete(hpcd->pData, epnum);
90001ea8:	f8d0 04dc 	ldr.w	r0, [r0, #1244]	@ 0x4dc
90001eac:	f00d bf1f 	b.w	9000fcee <USBD_LL_IsoOUTIncomplete>

90001eb0 <HAL_PCD_ISOINIncompleteCallback>:
  * @param  epnum: Endpoint Number
  * @retval None
  */
void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
{
  (void)USBD_LL_IsoINIncomplete(hpcd->pData, epnum);
90001eb0:	f8d0 04dc 	ldr.w	r0, [r0, #1244]	@ 0x4dc
90001eb4:	f00d bf08 	b.w	9000fcc8 <USBD_LL_IsoINIncomplete>

90001eb8 <HAL_PCD_ConnectCallback>:
  * @param  hpcd: PCD handle
  * @retval None
  */
void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
{
  (void)USBD_LL_DevConnected(hpcd->pData);
90001eb8:	f8d0 04dc 	ldr.w	r0, [r0, #1244]	@ 0x4dc
90001ebc:	f00d bf2a 	b.w	9000fd14 <USBD_LL_DevConnected>

90001ec0 <HAL_PCD_DisconnectCallback>:
  * @param  hpcd: PCD handle
  * @retval None
  */
void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
{
  (void)USBD_LL_DevDisconnected(hpcd->pData);
90001ec0:	f8d0 04dc 	ldr.w	r0, [r0, #1244]	@ 0x4dc
90001ec4:	f00d bf28 	b.w	9000fd18 <USBD_LL_DevDisconnected>

90001ec8 <USBD_LL_Init>:
  * @brief  Initializes the Low Level portion of the Device driver.
  * @param  pdev: Device handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
90001ec8:	b538      	push	{r3, r4, r5, lr}
#ifdef USE_USB_FS
  /* Set LL Driver parameters */
  hpcd_USB_FS.Instance = USB_OTG_FS;
90001eca:	4c15      	ldr	r4, [pc, #84]	@ (90001f20 <USBD_LL_Init+0x58>)
90001ecc:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
  hpcd_USB_FS.Init.dma_enable = 0;
  hpcd_USB_FS.Init.low_power_enable = 0;
  hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
  hpcd_USB_FS.Init.Sof_enable = 0;
  hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
  hpcd_USB_FS.Init.vbus_sensing_enable = 0;
90001ed0:	2500      	movs	r5, #0
  hpcd_USB_FS.Instance = USB_OTG_FS;
90001ed2:	6023      	str	r3, [r4, #0]
  hpcd_USB_FS.Init.dev_endpoints = 4;
90001ed4:	2304      	movs	r3, #4
  hpcd_USB_FS.Init.lpm_enable = 0;

  /* Link The driver to the stack */
  hpcd_USB_FS.pData = pdev;
90001ed6:	f8c4 04dc 	str.w	r0, [r4, #1244]	@ 0x4dc
  hpcd_USB_FS.Init.dev_endpoints = 4;
90001eda:	7123      	strb	r3, [r4, #4]
  hpcd_USB_FS.Init.dma_enable = 0;
90001edc:	f44f 7300 	mov.w	r3, #512	@ 0x200
  pdev->pData = &hpcd_USB_FS;
90001ee0:	f8c0 42c8 	str.w	r4, [r0, #712]	@ 0x2c8

  /* Initialize LL Driver */
  (void)HAL_PCD_Init(&hpcd_USB_FS);
90001ee4:	4620      	mov	r0, r4
  hpcd_USB_FS.Init.dma_enable = 0;
90001ee6:	80e3      	strh	r3, [r4, #6]
  hpcd_USB_FS.Init.ep0_mps = 0x40;
90001ee8:	f44f 7310 	mov.w	r3, #576	@ 0x240
  hpcd_USB_FS.Init.vbus_sensing_enable = 0;
90001eec:	81e5      	strh	r5, [r4, #14]
  hpcd_USB_FS.Init.ep0_mps = 0x40;
90001eee:	60a3      	str	r3, [r4, #8]
  hpcd_USB_FS.Init.lpm_enable = 0;
90001ef0:	7325      	strb	r5, [r4, #12]
  (void)HAL_PCD_Init(&hpcd_USB_FS);
90001ef2:	f003 f897 	bl	90005024 <HAL_PCD_Init>

  (void)HAL_PCDEx_SetRxFiFo(&hpcd_USB_FS, 0x80);
90001ef6:	2180      	movs	r1, #128	@ 0x80
90001ef8:	4620      	mov	r0, r4
90001efa:	f003 fdd8 	bl	90005aae <HAL_PCDEx_SetRxFiFo>
  (void)HAL_PCDEx_SetTxFiFo(&hpcd_USB_FS, 0, 0x40);
90001efe:	4629      	mov	r1, r5
90001f00:	2240      	movs	r2, #64	@ 0x40
90001f02:	4620      	mov	r0, r4
90001f04:	f003 fdb4 	bl	90005a70 <HAL_PCDEx_SetTxFiFo>
  (void)HAL_PCDEx_SetTxFiFo(&hpcd_USB_FS, 1, 0x60);
90001f08:	2260      	movs	r2, #96	@ 0x60
90001f0a:	2101      	movs	r1, #1
90001f0c:	4620      	mov	r0, r4
90001f0e:	f003 fdaf 	bl	90005a70 <HAL_PCDEx_SetTxFiFo>
  (void)HAL_PCDEx_SetTxFiFo(&hpcd_USB_FS, 2, 0x20);
90001f12:	2220      	movs	r2, #32
90001f14:	2102      	movs	r1, #2
90001f16:	4620      	mov	r0, r4
90001f18:	f003 fdaa 	bl	90005a70 <HAL_PCDEx_SetTxFiFo>
  (void)HAL_PCDEx_SetTxFiFo(&hpcd_USB_HS, 1, 0x100);
  (void)HAL_PCDEx_SetTxFiFo(&hpcd_USB_HS, 2, 0x40);
#endif

  return USBD_OK;
}
90001f1c:	4628      	mov	r0, r5
90001f1e:	bd38      	pop	{r3, r4, r5, pc}
90001f20:	20002520 	.word	0x20002520

90001f24 <USBD_LL_Start>:
  * @brief  Starts the Low Level portion of the Device driver.
  * @param  pdev: Device handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_LL_Start(USBD_HandleTypeDef *pdev)
{
90001f24:	b508      	push	{r3, lr}
  (void)HAL_PCD_Start(pdev->pData);
90001f26:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90001f2a:	f003 f8ef 	bl	9000510c <HAL_PCD_Start>
  return USBD_OK;
}
90001f2e:	2000      	movs	r0, #0
90001f30:	bd08      	pop	{r3, pc}

90001f32 <USBD_LL_OpenEP>:
  */
USBD_StatusTypeDef USBD_LL_OpenEP(USBD_HandleTypeDef *pdev,
                                  uint8_t ep_addr,
                                  uint8_t ep_type,
                                  uint16_t ep_mps)
{
90001f32:	b510      	push	{r4, lr}
90001f34:	4614      	mov	r4, r2
  (void)HAL_PCD_EP_Open(pdev->pData,
90001f36:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
{
90001f3a:	461a      	mov	r2, r3
  (void)HAL_PCD_EP_Open(pdev->pData,
90001f3c:	4623      	mov	r3, r4
90001f3e:	f003 f90d 	bl	9000515c <HAL_PCD_EP_Open>
                        ep_addr,
                        ep_mps,
                         ep_type);

  return USBD_OK;
}
90001f42:	2000      	movs	r0, #0
90001f44:	bd10      	pop	{r4, pc}

90001f46 <USBD_LL_CloseEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint Number
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_LL_CloseEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
90001f46:	b508      	push	{r3, lr}
  (void)HAL_PCD_EP_Close(pdev->pData, ep_addr);
90001f48:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90001f4c:	f003 f93d 	bl	900051ca <HAL_PCD_EP_Close>
  return USBD_OK;
}
90001f50:	2000      	movs	r0, #0
90001f52:	bd08      	pop	{r3, pc}

90001f54 <USBD_LL_StallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint Number
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_LL_StallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
90001f54:	b508      	push	{r3, lr}
  (void)HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
90001f56:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90001f5a:	f003 f9a4 	bl	900052a6 <HAL_PCD_EP_SetStall>
  return USBD_OK;
}
90001f5e:	2000      	movs	r0, #0
90001f60:	bd08      	pop	{r3, pc}

90001f62 <USBD_LL_ClearStallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint Number
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_LL_ClearStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
90001f62:	b508      	push	{r3, lr}
  (void)HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
90001f64:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90001f68:	f003 f9d4 	bl	90005314 <HAL_PCD_EP_ClrStall>
  return USBD_OK;
}
90001f6c:	2000      	movs	r0, #0
90001f6e:	bd08      	pop	{r3, pc}

90001f70 <USBD_LL_IsStallEP>:
  */
uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
  PCD_HandleTypeDef *hpcd = pdev->pData;

  if((ep_addr & 0x80U) == 0x80U)
90001f70:	f011 0f80 	tst.w	r1, #128	@ 0x80
  PCD_HandleTypeDef *hpcd = pdev->pData;
90001f74:	f8d0 32c8 	ldr.w	r3, [r0, #712]	@ 0x2c8
  if((ep_addr & 0x80U) == 0x80U)
90001f78:	f04f 0224 	mov.w	r2, #36	@ 0x24
  {
    return hpcd->IN_ep[ep_addr & 0x7FU].is_stall;
90001f7c:	bf17      	itett	ne
90001f7e:	f001 017f 	andne.w	r1, r1, #127	@ 0x7f
  }
  else
  {
    return hpcd->OUT_ep[ep_addr & 0x7FU].is_stall;
90001f82:	fb02 3301 	mlaeq	r3, r2, r1, r3
    return hpcd->IN_ep[ep_addr & 0x7FU].is_stall;
90001f86:	fb02 3301 	mlane	r3, r2, r1, r3
90001f8a:	7d98      	ldrbne	r0, [r3, #22]
    return hpcd->OUT_ep[ep_addr & 0x7FU].is_stall;
90001f8c:	bf08      	it	eq
90001f8e:	f893 0256 	ldrbeq.w	r0, [r3, #598]	@ 0x256
  }
}
90001f92:	4770      	bx	lr

90001f94 <USBD_LL_SetUSBAddress>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint Number
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_LL_SetUSBAddress(USBD_HandleTypeDef *pdev, uint8_t dev_addr)
{
90001f94:	b508      	push	{r3, lr}
  (void)HAL_PCD_SetAddress(pdev->pData, dev_addr);
90001f96:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90001f9a:	f003 f8cc 	bl	90005136 <HAL_PCD_SetAddress>
  return USBD_OK;
}
90001f9e:	2000      	movs	r0, #0
90001fa0:	bd08      	pop	{r3, pc}

90001fa2 <USBD_LL_Transmit>:
  */
USBD_StatusTypeDef USBD_LL_Transmit(USBD_HandleTypeDef *pdev,
                                    uint8_t ep_addr,
                                    uint8_t *pbuf,
                                    uint32_t size)
{
90001fa2:	b538      	push	{r3, r4, r5, lr}
  /* Get the packet total length */
  pdev->ep_in[ep_addr & 0x7FU].total_length = size;
90001fa4:	f001 047f 	and.w	r4, r1, #127	@ 0x7f
90001fa8:	2514      	movs	r5, #20
90001faa:	fb05 0404 	mla	r4, r5, r4, r0

  (void)HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
90001fae:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
  pdev->ep_in[ep_addr & 0x7FU].total_length = size;
90001fb2:	61a3      	str	r3, [r4, #24]
  (void)HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
90001fb4:	f003 f95d 	bl	90005272 <HAL_PCD_EP_Transmit>
  return USBD_OK;
}
90001fb8:	2000      	movs	r0, #0
90001fba:	bd38      	pop	{r3, r4, r5, pc}

90001fbc <USBD_LL_PrepareReceive>:
  */
USBD_StatusTypeDef USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev,
                                          uint8_t ep_addr,
                                          uint8_t *pbuf,
                                          uint32_t size)
{
90001fbc:	b508      	push	{r3, lr}
  (void)HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
90001fbe:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90001fc2:	f003 f930 	bl	90005226 <HAL_PCD_EP_Receive>
  return USBD_OK;
}
90001fc6:	2000      	movs	r0, #0
90001fc8:	bd08      	pop	{r3, pc}

90001fca <USBD_LL_GetRxDataSize>:
  * @param  ep_addr: Endpoint Number
  * @retval Received Data Size
  */
uint32_t USBD_LL_GetRxDataSize(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
  return HAL_PCD_EP_GetRxCount(pdev->pData, ep_addr);
90001fca:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90001fce:	f003 b948 	b.w	90005262 <HAL_PCD_EP_GetRxCount>
	...

90001fd4 <vApplicationIdleHook>:
   specified, or call vTaskDelay()). If the application makes use of the
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
   vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90001fd4:	4901      	ldr	r1, [pc, #4]	@ (90001fdc <vApplicationIdleHook+0x8>)
90001fd6:	2000      	movs	r0, #0
90001fd8:	f007 b9e0 	b.w	9000939c <vTaskSetApplicationTaskTag>
90001fdc:	90000df5 	.word	0x90000df5

90001fe0 <StartDefaultTask>:
  MX_USB_Device_Init();
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
	  USBD_CDC_RNDIS_fops.Process(&USBD_Device);
90001fe0:	4d05      	ldr	r5, [pc, #20]	@ (90001ff8 <StartDefaultTask+0x18>)
90001fe2:	4c06      	ldr	r4, [pc, #24]	@ (90001ffc <StartDefaultTask+0x1c>)
{
90001fe4:	b508      	push	{r3, lr}
  MX_USB_Device_Init();
90001fe6:	f7ff fd01 	bl	900019ec <MX_USB_Device_Init>
	  USBD_CDC_RNDIS_fops.Process(&USBD_Device);
90001fea:	696b      	ldr	r3, [r5, #20]
90001fec:	4620      	mov	r0, r4
90001fee:	4798      	blx	r3
    osDelay(100);
90001ff0:	2064      	movs	r0, #100	@ 0x64
90001ff2:	f005 fd01 	bl	900079f8 <osDelay>
  for(;;)
90001ff6:	e7f8      	b.n	90001fea <StartDefaultTask+0xa>
90001ff8:	20000010 	.word	0x20000010
90001ffc:	20002c0c 	.word	0x20002c0c

90002000 <SystemClock_Config>:
{
90002000:	b510      	push	{r4, lr}
90002002:	b094      	sub	sp, #80	@ 0x50
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90002004:	2210      	movs	r2, #16
90002006:	2100      	movs	r1, #0
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90002008:	2402      	movs	r4, #2
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
9000200a:	a80a      	add	r0, sp, #40	@ 0x28
9000200c:	f026 fc2b 	bl	90028866 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90002010:	2214      	movs	r2, #20
90002012:	2100      	movs	r1, #0
90002014:	a803      	add	r0, sp, #12
90002016:	f026 fc26 	bl	90028866 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
9000201a:	4b20      	ldr	r3, [pc, #128]	@ (9000209c <SystemClock_Config+0x9c>)
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
9000201c:	2101      	movs	r1, #1
  RCC_OscInitStruct.PLL.PLLN = 432;
9000201e:	2019      	movs	r0, #25
  __HAL_RCC_PWR_CLK_ENABLE();
90002020:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
90002022:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
90002026:	641a      	str	r2, [r3, #64]	@ 0x40
90002028:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9000202a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
9000202e:	9301      	str	r3, [sp, #4]
90002030:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
90002032:	4b1b      	ldr	r3, [pc, #108]	@ (900020a0 <SystemClock_Config+0xa0>)
90002034:	681a      	ldr	r2, [r3, #0]
90002036:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
9000203a:	601a      	str	r2, [r3, #0]
9000203c:	681b      	ldr	r3, [r3, #0]
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
9000203e:	9412      	str	r4, [sp, #72]	@ 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
90002040:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
90002044:	9302      	str	r3, [sp, #8]
90002046:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
90002048:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
9000204c:	e9cd 1308 	strd	r1, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90002050:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
90002054:	e9cd 430e 	strd	r4, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 432;
90002058:	f44f 73d8 	mov.w	r3, #432	@ 0x1b0
9000205c:	e9cd 0310 	strd	r0, r3, [sp, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLQ = 9;
90002060:	2309      	movs	r3, #9
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002062:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 9;
90002064:	9313      	str	r3, [sp, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002066:	f003 fd73 	bl	90005b50 <HAL_RCC_OscConfig>
9000206a:	b100      	cbz	r0, 9000206e <SystemClock_Config+0x6e>
9000206c:	e7fe      	b.n	9000206c <SystemClock_Config+0x6c>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
9000206e:	f003 fd37 	bl	90005ae0 <HAL_PWREx_EnableOverDrive>
90002072:	b100      	cbz	r0, 90002076 <SystemClock_Config+0x76>
90002074:	e7fe      	b.n	90002074 <SystemClock_Config+0x74>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002076:	230f      	movs	r3, #15
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
90002078:	f44f 52a0 	mov.w	r2, #5120	@ 0x1400
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
9000207c:	9005      	str	r0, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
9000207e:	2107      	movs	r1, #7
90002080:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002082:	e9cd 3403 	strd	r3, r4, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
90002086:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
9000208a:	e9cd 2306 	strd	r2, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
9000208e:	f003 ff47 	bl	90005f20 <HAL_RCC_ClockConfig>
90002092:	b100      	cbz	r0, 90002096 <SystemClock_Config+0x96>
90002094:	e7fe      	b.n	90002094 <SystemClock_Config+0x94>
}
90002096:	b014      	add	sp, #80	@ 0x50
90002098:	bd10      	pop	{r4, pc}
9000209a:	bf00      	nop
9000209c:	40023800 	.word	0x40023800
900020a0:	40007000 	.word	0x40007000

900020a4 <main>:
{
900020a4:	b580      	push	{r7, lr}
900020a6:	b098      	sub	sp, #96	@ 0x60

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
900020a8:	2210      	movs	r2, #16
900020aa:	2100      	movs	r1, #0
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
  MPU_InitStruct.BaseAddress = 0x20000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
900020ac:	f04f 5800 	mov.w	r8, #536870912	@ 0x20000000
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
900020b0:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
900020b2:	2401      	movs	r4, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
900020b4:	f026 fbd7 	bl	90028866 <memset>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0xC0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
900020b8:	261c      	movs	r6, #28
  HAL_MPU_Disable();
900020ba:	f001 fec9 	bl	90003e50 <HAL_MPU_Disable>
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
900020be:	4bb6      	ldr	r3, [pc, #728]	@ (90002398 <main+0x2f4>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900020c0:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
900020c2:	f8ad 402c 	strh.w	r4, [sp, #44]	@ 0x2c

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_8MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
900020c6:	2503      	movs	r5, #3
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
900020c8:	f240 1701 	movw	r7, #257	@ 0x101
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
900020cc:	e9cd 830c 	strd	r8, r3, [sp, #48]	@ 0x30
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
900020d0:	4bb2      	ldr	r3, [pc, #712]	@ (9000239c <main+0x2f8>)
900020d2:	930e      	str	r3, [sp, #56]	@ 0x38
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900020d4:	f001 feda 	bl	90003e8c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0xC0000000;
900020d8:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
900020dc:	f88d 402d 	strb.w	r4, [sp, #45]	@ 0x2d
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
900020e0:	2400      	movs	r4, #0
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900020e2:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.BaseAddress = 0xC0000000;
900020e4:	930c      	str	r3, [sp, #48]	@ 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
900020e6:	f88d 6034 	strb.w	r6, [sp, #52]	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
900020ea:	f88d 4037 	strb.w	r4, [sp, #55]	@ 0x37
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
900020ee:	f8ad 403a 	strh.w	r4, [sp, #58]	@ 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900020f2:	f001 fecb 	bl	90003e8c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
900020f6:	2302      	movs	r3, #2
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900020f8:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
900020fa:	f88d 5037 	strb.w	r5, [sp, #55]	@ 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
900020fe:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_8MB;
90002102:	2316      	movs	r3, #22
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002104:	f8ad 703a 	strh.w	r7, [sp, #58]	@ 0x3a
  MPU_InitStruct.Size = MPU_REGION_SIZE_8MB;
90002108:	f88d 3034 	strb.w	r3, [sp, #52]	@ 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000210c:	f001 febe 	bl	90003e8c <HAL_MPU_ConfigRegion>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0x90000000;
90002110:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002114:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
90002116:	f88d 6034 	strb.w	r6, [sp, #52]	@ 0x34

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
9000211a:	2604      	movs	r6, #4
  MPU_InitStruct.BaseAddress = 0x90000000;
9000211c:	930c      	str	r3, [sp, #48]	@ 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
9000211e:	f88d 502d 	strb.w	r5, [sp, #45]	@ 0x2d
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002122:	f88d 4037 	strb.w	r4, [sp, #55]	@ 0x37
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002126:	f8ad 403a 	strh.w	r4, [sp, #58]	@ 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000212a:	f001 feaf 	bl	90003e8c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
9000212e:	2317      	movs	r3, #23
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002130:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002132:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
90002136:	f88d 3034 	strb.w	r3, [sp, #52]	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
9000213a:	f88d 5037 	strb.w	r5, [sp, #55]	@ 0x37
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
9000213e:	f8ad 703a 	strh.w	r7, [sp, #58]	@ 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002142:	f001 fea3 	bl	90003e8c <HAL_MPU_ConfigRegion>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER5;
90002146:	2305      	movs	r3, #5
  MPU_InitStruct.Size = MPU_REGION_SIZE_1MB;
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002148:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
9000214a:	f88d 4038 	strb.w	r4, [sp, #56]	@ 0x38
  MPU_InitStruct.Number = MPU_REGION_NUMBER5;
9000214e:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_1MB;
90002152:	2313      	movs	r3, #19
90002154:	f88d 3034 	strb.w	r3, [sp, #52]	@ 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002158:	f001 fe98 	bl	90003e8c <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
9000215c:	4630      	mov	r0, r6
9000215e:	f001 fe85 	bl	90003e6c <HAL_MPU_Enable>
  __ASM volatile ("dsb 0xF":::"memory");
90002162:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002166:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
9000216a:	4a8d      	ldr	r2, [pc, #564]	@ (900023a0 <main+0x2fc>)
9000216c:	f8c2 4250 	str.w	r4, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90002170:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002174:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90002178:	6953      	ldr	r3, [r2, #20]
9000217a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000217e:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90002180:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002184:	f3bf 8f6f 	isb	sy
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
90002188:	f8c2 4084 	str.w	r4, [r2, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
9000218c:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002190:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002194:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002198:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
9000219c:	f3c3 334e 	ubfx	r3, r3, #13, #15
900021a0:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900021a2:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900021a6:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900021a8:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
      } while (ways-- != 0U);
900021ac:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900021ae:	f8c2 5260 	str.w	r5, [r2, #608]	@ 0x260
      } while (ways-- != 0U);
900021b2:	d2f9      	bcs.n	900021a8 <main+0x104>
    } while(sets-- != 0U);
900021b4:	3b20      	subs	r3, #32
900021b6:	f113 0f20 	cmn.w	r3, #32
900021ba:	d1f2      	bne.n	900021a2 <main+0xfe>
900021bc:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
900021c0:	6953      	ldr	r3, [r2, #20]
900021c2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
900021c6:	6153      	str	r3, [r2, #20]
900021c8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900021cc:	f3bf 8f6f 	isb	sy
  HAL_Init();
900021d0:	f001 fda4 	bl	90003d1c <HAL_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
900021d4:	2400      	movs	r4, #0
  SystemClock_Config();
900021d6:	f7ff ff13 	bl	90002000 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900021da:	2214      	movs	r2, #20
900021dc:	2100      	movs	r1, #0
900021de:	a80b      	add	r0, sp, #44	@ 0x2c
900021e0:	f026 fb41 	bl	90028866 <memset>
  __HAL_RCC_GPIOG_CLK_ENABLE();
900021e4:	4b6f      	ldr	r3, [pc, #444]	@ (900023a4 <main+0x300>)
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
900021e6:	2110      	movs	r1, #16
900021e8:	486f      	ldr	r0, [pc, #444]	@ (900023a8 <main+0x304>)
  __HAL_RCC_GPIOG_CLK_ENABLE();
900021ea:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
900021ec:	2701      	movs	r7, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
900021ee:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
900021f2:	2510      	movs	r5, #16
  __HAL_RCC_GPIOG_CLK_ENABLE();
900021f4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
900021f8:	2640      	movs	r6, #64	@ 0x40
  __HAL_RCC_GPIOG_CLK_ENABLE();
900021fa:	631a      	str	r2, [r3, #48]	@ 0x30
900021fc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900021fe:	f002 0240 	and.w	r2, r2, #64	@ 0x40
90002202:	9200      	str	r2, [sp, #0]
90002204:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90002206:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002208:	f042 0210 	orr.w	r2, r2, #16
9000220c:	631a      	str	r2, [r3, #48]	@ 0x30
9000220e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002210:	f002 0210 	and.w	r2, r2, #16
90002214:	9201      	str	r2, [sp, #4]
90002216:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90002218:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000221a:	f042 0202 	orr.w	r2, r2, #2
9000221e:	631a      	str	r2, [r3, #48]	@ 0x30
90002220:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002222:	f002 0202 	and.w	r2, r2, #2
90002226:	9202      	str	r2, [sp, #8]
90002228:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
9000222a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000222c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
90002230:	631a      	str	r2, [r3, #48]	@ 0x30
90002232:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002234:	f402 7200 	and.w	r2, r2, #512	@ 0x200
90002238:	9203      	str	r2, [sp, #12]
9000223a:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
9000223c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000223e:	f042 0208 	orr.w	r2, r2, #8
90002242:	631a      	str	r2, [r3, #48]	@ 0x30
90002244:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002246:	f002 0208 	and.w	r2, r2, #8
9000224a:	9204      	str	r2, [sp, #16]
9000224c:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
9000224e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002250:	f042 0201 	orr.w	r2, r2, #1
90002254:	631a      	str	r2, [r3, #48]	@ 0x30
90002256:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002258:	f002 0201 	and.w	r2, r2, #1
9000225c:	9205      	str	r2, [sp, #20]
9000225e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002260:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002262:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
90002266:	631a      	str	r2, [r3, #48]	@ 0x30
90002268:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000226a:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
9000226e:	9206      	str	r2, [sp, #24]
90002270:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90002272:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002274:	f042 0220 	orr.w	r2, r2, #32
90002278:	631a      	str	r2, [r3, #48]	@ 0x30
9000227a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000227c:	f002 0220 	and.w	r2, r2, #32
90002280:	9207      	str	r2, [sp, #28]
90002282:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90002284:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002286:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
9000228a:	631a      	str	r2, [r3, #48]	@ 0x30
9000228c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000228e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90002292:	9208      	str	r2, [sp, #32]
90002294:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90002296:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002298:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
9000229c:	631a      	str	r2, [r3, #48]	@ 0x30
9000229e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900022a0:	f002 0280 	and.w	r2, r2, #128	@ 0x80
900022a4:	9209      	str	r2, [sp, #36]	@ 0x24
900022a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOC_CLK_ENABLE();
900022a8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900022aa:	f042 0204 	orr.w	r2, r2, #4
900022ae:	631a      	str	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
900022b0:	2200      	movs	r2, #0
  __HAL_RCC_GPIOC_CLK_ENABLE();
900022b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900022b4:	f003 0304 	and.w	r3, r3, #4
900022b8:	930a      	str	r3, [sp, #40]	@ 0x28
900022ba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
900022bc:	f002 f9b2 	bl	90004624 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_RESET);
900022c0:	2200      	movs	r2, #0
900022c2:	2108      	movs	r1, #8
900022c4:	4839      	ldr	r0, [pc, #228]	@ (900023ac <main+0x308>)
900022c6:	f002 f9ad 	bl	90004624 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOI, LED1_Pin|LCD_DISP_Pin, GPIO_PIN_RESET);
900022ca:	2200      	movs	r2, #0
900022cc:	f241 0102 	movw	r1, #4098	@ 0x1002
900022d0:	4837      	ldr	r0, [pc, #220]	@ (900023b0 <main+0x30c>)
900022d2:	f002 f9a7 	bl	90004624 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
900022d6:	2200      	movs	r2, #0
900022d8:	21c0      	movs	r1, #192	@ 0xc0
900022da:	4836      	ldr	r0, [pc, #216]	@ (900023b4 <main+0x310>)
900022dc:	f002 f9a2 	bl	90004624 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
900022e0:	2200      	movs	r2, #0
900022e2:	2140      	movs	r1, #64	@ 0x40
900022e4:	4834      	ldr	r0, [pc, #208]	@ (900023b8 <main+0x314>)
900022e6:	f002 f99d 	bl	90004624 <HAL_GPIO_WritePin>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
900022ea:	a90b      	add	r1, sp, #44	@ 0x2c
900022ec:	482e      	ldr	r0, [pc, #184]	@ (900023a8 <main+0x304>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
900022ee:	e9cd 570b 	strd	r5, r7, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
900022f2:	e9cd 480d 	strd	r4, r8, [sp, #52]	@ 0x34
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
900022f6:	f002 f811 	bl	9000431c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3;
900022fa:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900022fc:	a90b      	add	r1, sp, #44	@ 0x2c
900022fe:	482b      	ldr	r0, [pc, #172]	@ (900023ac <main+0x308>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002300:	e9cd 370b 	strd	r3, r7, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002304:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90002308:	f002 f808 	bl	9000431c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LED1_Pin|LCD_DISP_Pin;
9000230c:	f241 0302 	movw	r3, #4098	@ 0x1002
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90002310:	a90b      	add	r1, sp, #44	@ 0x2c
90002312:	4827      	ldr	r0, [pc, #156]	@ (900023b0 <main+0x30c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002314:	e9cd 370b 	strd	r3, r7, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002318:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
9000231c:	f001 fffe 	bl	9000431c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = BUTTON_Pin;
90002320:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  HAL_GPIO_Init(BUTTON_GPIO_Port, &GPIO_InitStruct);
90002324:	a90b      	add	r1, sp, #44	@ 0x2c
90002326:	4822      	ldr	r0, [pc, #136]	@ (900023b0 <main+0x30c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002328:	940d      	str	r4, [sp, #52]	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
9000232a:	e9cd 340b 	strd	r3, r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(BUTTON_GPIO_Port, &GPIO_InitStruct);
9000232e:	f001 fff5 	bl	9000431c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90002332:	23c0      	movs	r3, #192	@ 0xc0
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
90002334:	a90b      	add	r1, sp, #44	@ 0x2c
90002336:	481f      	ldr	r0, [pc, #124]	@ (900023b4 <main+0x310>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002338:	e9cd 370b 	strd	r3, r7, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000233c:	e9cd 480d 	strd	r4, r8, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
90002340:	f001 ffec 	bl	9000431c <HAL_GPIO_Init>
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002344:	481c      	ldr	r0, [pc, #112]	@ (900023b8 <main+0x314>)
90002346:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002348:	e9cd 670b 	strd	r6, r7, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000234c:	e9cd 480d 	strd	r4, r8, [sp, #52]	@ 0x34
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002350:	f001 ffe4 	bl	9000431c <HAL_GPIO_Init>
  hcrc.Instance = CRC;
90002354:	4819      	ldr	r0, [pc, #100]	@ (900023bc <main+0x318>)
90002356:	4b1a      	ldr	r3, [pc, #104]	@ (900023c0 <main+0x31c>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90002358:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
9000235a:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
9000235c:	6207      	str	r7, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
9000235e:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90002362:	f001 fdbf 	bl	90003ee4 <HAL_CRC_Init>
90002366:	b100      	cbz	r0, 9000236a <main+0x2c6>
90002368:	e7fe      	b.n	90002368 <main+0x2c4>
  hdma2d.Instance = DMA2D;
9000236a:	4c16      	ldr	r4, [pc, #88]	@ (900023c4 <main+0x320>)
9000236c:	4b16      	ldr	r3, [pc, #88]	@ (900023c8 <main+0x324>)
  hdma2d.Init.OutputOffset = 0;
9000236e:	e9c4 0002 	strd	r0, r0, [r4, #8]
  hdma2d.Init.Mode = DMA2D_M2M;
90002372:	e9c4 3000 	strd	r3, r0, [r4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
90002376:	e9c4 000a 	strd	r0, r0, [r4, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
9000237a:	e9c4 000c 	strd	r0, r0, [r4, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
9000237e:	4620      	mov	r0, r4
90002380:	f001 fed0 	bl	90004124 <HAL_DMA2D_Init>
90002384:	b100      	cbz	r0, 90002388 <main+0x2e4>
90002386:	e7fe      	b.n	90002386 <main+0x2e2>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90002388:	4639      	mov	r1, r7
9000238a:	4620      	mov	r0, r4
9000238c:	f001 ff80 	bl	90004290 <HAL_DMA2D_ConfigLayer>
90002390:	4603      	mov	r3, r0
90002392:	b1d8      	cbz	r0, 900023cc <main+0x328>
90002394:	e7fe      	b.n	90002394 <main+0x2f0>
90002396:	bf00      	nop
90002398:	03000012 	.word	0x03000012
9000239c:	01010001 	.word	0x01010001
900023a0:	e000ed00 	.word	0xe000ed00
900023a4:	40023800 	.word	0x40023800
900023a8:	40020400 	.word	0x40020400
900023ac:	40022800 	.word	0x40022800
900023b0:	40022000 	.word	0x40022000
900023b4:	40020800 	.word	0x40020800
900023b8:	40021800 	.word	0x40021800
900023bc:	20002bac 	.word	0x20002bac
900023c0:	40023000 	.word	0x40023000
900023c4:	20002b6c 	.word	0x20002b6c
900023c8:	4002b000 	.word	0x4002b000
  hsdram1.Instance = FMC_SDRAM_DEVICE;
900023cc:	484a      	ldr	r0, [pc, #296]	@ (900024f8 <main+0x454>)
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
900023ce:	a90b      	add	r1, sp, #44	@ 0x2c
  hsdram1.Instance = FMC_SDRAM_DEVICE;
900023d0:	4a4a      	ldr	r2, [pc, #296]	@ (900024fc <main+0x458>)
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
900023d2:	6083      	str	r3, [r0, #8]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900023d4:	6146      	str	r6, [r0, #20]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
900023d6:	6283      	str	r3, [r0, #40]	@ 0x28
  SdramTiming.RCDDelay = 16;
900023d8:	9511      	str	r5, [sp, #68]	@ 0x44
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
900023da:	e9c0 2300 	strd	r2, r3, [r0]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
900023de:	2204      	movs	r2, #4
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
900023e0:	e9c0 2503 	strd	r2, r5, [r0, #12]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_1;
900023e4:	2280      	movs	r2, #128	@ 0x80
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
900023e6:	e9c0 3308 	strd	r3, r3, [r0, #32]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
900023ea:	e9c0 2306 	strd	r2, r3, [r0, #24]
  SdramTiming.ExitSelfRefreshDelay = 16;
900023ee:	e9cd 550b 	strd	r5, r5, [sp, #44]	@ 0x2c
  SdramTiming.RowCycleDelay = 16;
900023f2:	e9cd 550d 	strd	r5, r5, [sp, #52]	@ 0x34
  SdramTiming.RPDelay = 16;
900023f6:	e9cd 550f 	strd	r5, r5, [sp, #60]	@ 0x3c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
900023fa:	f004 f8fd 	bl	900065f8 <HAL_SDRAM_Init>
900023fe:	b100      	cbz	r0, 90002402 <main+0x35e>
90002400:	e7fe      	b.n	90002400 <main+0x35c>
  BSP_SDRAM_DeInit();
90002402:	f001 fb31 	bl	90003a68 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
90002406:	f001 fae3 	bl	900039d0 <BSP_SDRAM_Init>
9000240a:	4605      	mov	r5, r0
9000240c:	b100      	cbz	r0, 90002410 <main+0x36c>
9000240e:	e7fe      	b.n	9000240e <main+0x36a>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90002410:	2234      	movs	r2, #52	@ 0x34
90002412:	4601      	mov	r1, r0
90002414:	a80b      	add	r0, sp, #44	@ 0x2c
  hltdc.Instance = LTDC;
90002416:	4c3a      	ldr	r4, [pc, #232]	@ (90002500 <main+0x45c>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90002418:	f026 fa25 	bl	90028866 <memset>
  hltdc.Instance = LTDC;
9000241c:	4b39      	ldr	r3, [pc, #228]	@ (90002504 <main+0x460>)
  hltdc.Init.VerticalSync = 9;
9000241e:	2628      	movs	r6, #40	@ 0x28
  hltdc.Init.AccumulatedVBP = 11;
90002420:	2735      	movs	r7, #53	@ 0x35
  hltdc.Init.AccumulatedActiveH = 283;
90002422:	f240 2c15 	movw	ip, #533	@ 0x215
  hltdc.Init.TotalHeigh = 285;
90002426:	f240 2e35 	movw	lr, #565	@ 0x235
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
9000242a:	4620      	mov	r0, r4
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
9000242c:	6125      	str	r5, [r4, #16]
  hltdc.Init.Backcolor.Blue = 0;
9000242e:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
90002430:	f884 5036 	strb.w	r5, [r4, #54]	@ 0x36
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
90002434:	e9c4 3500 	strd	r3, r5, [r4]
  hltdc.Init.VerticalSync = 9;
90002438:	2309      	movs	r3, #9
9000243a:	e9c4 6305 	strd	r6, r3, [r4, #20]
  hltdc.Init.AccumulatedVBP = 11;
9000243e:	230b      	movs	r3, #11
90002440:	e9c4 7307 	strd	r7, r3, [r4, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90002444:	f240 131b 	movw	r3, #283	@ 0x11b
90002448:	e9c4 c309 	strd	ip, r3, [r4, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
9000244c:	f240 131d 	movw	r3, #285	@ 0x11d
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
90002450:	e9c4 5502 	strd	r5, r5, [r4, #8]
  hltdc.Init.TotalHeigh = 285;
90002454:	e9c4 e30b 	strd	lr, r3, [r4, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002458:	f002 fcd0 	bl	90004dfc <HAL_LTDC_Init>
9000245c:	4602      	mov	r2, r0
9000245e:	b100      	cbz	r0, 90002462 <main+0x3be>
90002460:	e7fe      	b.n	90002460 <main+0x3bc>
  pLayerCfg.WindowX1 = 480;
90002462:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002466:	f44f 7388 	mov.w	r3, #272	@ 0x110
  pLayerCfg.WindowX0 = 0;
9000246a:	900b      	str	r0, [sp, #44]	@ 0x2c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
9000246c:	f44f 6580 	mov.w	r5, #1024	@ 0x400
  pLayerCfg.ImageHeight = 272;
90002470:	9316      	str	r3, [sp, #88]	@ 0x58
  pLayerCfg.Backcolor.Blue = 0;
90002472:	f8ad 205c 	strh.w	r2, [sp, #92]	@ 0x5c
  pLayerCfg.Backcolor.Red = 0;
90002476:	f88d 205e 	strb.w	r2, [sp, #94]	@ 0x5e
  pLayerCfg.WindowY0 = 0;
9000247a:	e9cd 100c 	strd	r1, r0, [sp, #48]	@ 0x30
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
9000247e:	2002      	movs	r0, #2
90002480:	e9cd 300e 	strd	r3, r0, [sp, #56]	@ 0x38
  pLayerCfg.Alpha = 255;
90002484:	20ff      	movs	r0, #255	@ 0xff
  pLayerCfg.Alpha0 = 0;
90002486:	e9cd 0210 	strd	r0, r2, [sp, #64]	@ 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
9000248a:	2005      	movs	r0, #5
  pLayerCfg.ImageWidth = 480;
9000248c:	e9cd 2114 	strd	r2, r1, [sp, #80]	@ 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002490:	e9cd 5012 	strd	r5, r0, [sp, #72]	@ 0x48
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002494:	a90b      	add	r1, sp, #44	@ 0x2c
90002496:	4620      	mov	r0, r4
90002498:	f002 fd7b 	bl	90004f92 <HAL_LTDC_ConfigLayer>
9000249c:	4603      	mov	r3, r0
9000249e:	b100      	cbz	r0, 900024a2 <main+0x3fe>
900024a0:	e7fe      	b.n	900024a0 <main+0x3fc>
  huart1.Instance = USART1;
900024a2:	4819      	ldr	r0, [pc, #100]	@ (90002508 <main+0x464>)
  huart1.Init.BaudRate = 115200;
900024a4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
900024a8:	4918      	ldr	r1, [pc, #96]	@ (9000250c <main+0x468>)
  huart1.Init.Parity = UART_PARITY_NONE;
900024aa:	6103      	str	r3, [r0, #16]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
900024ac:	6243      	str	r3, [r0, #36]	@ 0x24
  huart1.Init.BaudRate = 115200;
900024ae:	e9c0 1200 	strd	r1, r2, [r0]
  huart1.Init.Mode = UART_MODE_TX_RX;
900024b2:	220c      	movs	r2, #12
  huart1.Init.StopBits = UART_STOPBITS_1;
900024b4:	e9c0 3302 	strd	r3, r3, [r0, #8]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
900024b8:	e9c0 2305 	strd	r2, r3, [r0, #20]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
900024bc:	e9c0 3307 	strd	r3, r3, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
900024c0:	f004 fc60 	bl	90006d84 <HAL_UART_Init>
900024c4:	b100      	cbz	r0, 900024c8 <main+0x424>
900024c6:	e7fe      	b.n	900024c6 <main+0x422>
  MX_TouchGFX_Init();
900024c8:	f7fe fa51 	bl	9000096e <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
900024cc:	f7fe fa4e 	bl	9000096c <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
900024d0:	f005 fa08 	bl	900078e4 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
900024d4:	4a0e      	ldr	r2, [pc, #56]	@ (90002510 <main+0x46c>)
900024d6:	2100      	movs	r1, #0
900024d8:	480e      	ldr	r0, [pc, #56]	@ (90002514 <main+0x470>)
900024da:	f005 fa3d 	bl	90007958 <osThreadNew>
900024de:	4b0e      	ldr	r3, [pc, #56]	@ (90002518 <main+0x474>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
900024e0:	4a0e      	ldr	r2, [pc, #56]	@ (9000251c <main+0x478>)
900024e2:	2100      	movs	r1, #0
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
900024e4:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
900024e6:	480e      	ldr	r0, [pc, #56]	@ (90002520 <main+0x47c>)
900024e8:	f005 fa36 	bl	90007958 <osThreadNew>
900024ec:	4b0d      	ldr	r3, [pc, #52]	@ (90002524 <main+0x480>)
900024ee:	6018      	str	r0, [r3, #0]
  osKernelStart();
900024f0:	f005 fa12 	bl	90007918 <osKernelStart>
  while (1)
900024f4:	e7fe      	b.n	900024f4 <main+0x450>
900024f6:	bf00      	nop
900024f8:	20002a08 	.word	0x20002a08
900024fc:	a0000140 	.word	0xa0000140
90002500:	20002ac4 	.word	0x20002ac4
90002504:	40016800 	.word	0x40016800
90002508:	20002a3c 	.word	0x20002a3c
9000250c:	40011000 	.word	0x40011000
90002510:	9002a964 	.word	0x9002a964
90002514:	90001fe1 	.word	0x90001fe1
90002518:	20002a04 	.word	0x20002a04
9000251c:	9002a940 	.word	0x9002a940
90002520:	9000097d 	.word	0x9000097d
90002524:	20002a00 	.word	0x20002a00

90002528 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
90002528:	6802      	ldr	r2, [r0, #0]
9000252a:	4b03      	ldr	r3, [pc, #12]	@ (90002538 <HAL_TIM_PeriodElapsedCallback+0x10>)
9000252c:	429a      	cmp	r2, r3
9000252e:	d101      	bne.n	90002534 <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
90002530:	f001 bc06 	b.w	90003d40 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90002534:	4770      	bx	lr
90002536:	bf00      	nop
90002538:	40001000 	.word	0x40001000

9000253c <Error_Handler>:
  */
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  while(1);
9000253c:	e7fe      	b.n	9000253c <Error_Handler>
	...

90002540 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
90002540:	4b0d      	ldr	r3, [pc, #52]	@ (90002578 <HAL_MspInit+0x38>)
{
90002542:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002544:	210f      	movs	r1, #15
90002546:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_PWR_CLK_ENABLE();
9000254a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
9000254c:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
90002550:	641a      	str	r2, [r3, #64]	@ 0x40
90002552:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
90002554:	f002 5280 	and.w	r2, r2, #268435456	@ 0x10000000
90002558:	9200      	str	r2, [sp, #0]
9000255a:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000255c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
9000255e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90002562:	645a      	str	r2, [r3, #68]	@ 0x44
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002564:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002566:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90002568:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
9000256c:	9301      	str	r3, [sp, #4]
9000256e:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90002570:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002572:	f001 bc1b 	b.w	90003dac <HAL_NVIC_SetPriority>
90002576:	bf00      	nop
90002578:	40023800 	.word	0x40023800

9000257c <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
9000257c:	6802      	ldr	r2, [r0, #0]
{
9000257e:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
90002580:	4b08      	ldr	r3, [pc, #32]	@ (900025a4 <HAL_CRC_MspInit+0x28>)
90002582:	429a      	cmp	r2, r3
90002584:	d10b      	bne.n	9000259e <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90002586:	f8d3 2830 	ldr.w	r2, [r3, #2096]	@ 0x830
9000258a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
9000258e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90002592:	631a      	str	r2, [r3, #48]	@ 0x30
90002594:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90002596:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
9000259a:	9301      	str	r3, [sp, #4]
9000259c:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
9000259e:	b002      	add	sp, #8
900025a0:	4770      	bx	lr
900025a2:	bf00      	nop
900025a4:	40023000 	.word	0x40023000

900025a8 <HAL_DMA2D_MspInit>:
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
900025a8:	4b0e      	ldr	r3, [pc, #56]	@ (900025e4 <HAL_DMA2D_MspInit+0x3c>)
{
900025aa:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
900025ac:	6802      	ldr	r2, [r0, #0]
900025ae:	429a      	cmp	r2, r3
900025b0:	d115      	bne.n	900025de <HAL_DMA2D_MspInit+0x36>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900025b2:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900025b6:	2105      	movs	r1, #5
900025b8:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
900025ba:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900025bc:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
900025c0:	631a      	str	r2, [r3, #48]	@ 0x30
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900025c2:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
900025c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900025c6:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
900025ca:	9301      	str	r3, [sp, #4]
900025cc:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900025ce:	f001 fbed 	bl	90003dac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
900025d2:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
900025d4:	b003      	add	sp, #12
900025d6:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
900025da:	f001 bc19 	b.w	90003e10 <HAL_NVIC_EnableIRQ>
}
900025de:	b003      	add	sp, #12
900025e0:	f85d fb04 	ldr.w	pc, [sp], #4
900025e4:	4002b000 	.word	0x4002b000

900025e8 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
900025e8:	b570      	push	{r4, r5, r6, lr}
900025ea:	b0ac      	sub	sp, #176	@ 0xb0
900025ec:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900025ee:	2214      	movs	r2, #20
900025f0:	2100      	movs	r1, #0
900025f2:	a806      	add	r0, sp, #24
900025f4:	f026 f937 	bl	90028866 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900025f8:	2284      	movs	r2, #132	@ 0x84
900025fa:	2100      	movs	r1, #0
900025fc:	a80b      	add	r0, sp, #44	@ 0x2c
900025fe:	f026 f932 	bl	90028866 <memset>
  if(hltdc->Instance==LTDC)
90002602:	6822      	ldr	r2, [r4, #0]
90002604:	4b42      	ldr	r3, [pc, #264]	@ (90002710 <HAL_LTDC_MspInit+0x128>)
90002606:	429a      	cmp	r2, r3
90002608:	d17f      	bne.n	9000270a <HAL_LTDC_MspInit+0x122>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000260a:	2308      	movs	r3, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 100;
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
9000260c:	2005      	movs	r0, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000260e:	930b      	str	r3, [sp, #44]	@ 0x2c
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 100;
90002610:	2364      	movs	r3, #100	@ 0x64
90002612:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
90002614:	2302      	movs	r3, #2
90002616:	e9cd 3011 	strd	r3, r0, [sp, #68]	@ 0x44
    PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV2;
    PeriphClkInitStruct.PLLSAIDivQ = 1;
9000261a:	2301      	movs	r3, #1
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000261c:	a80b      	add	r0, sp, #44	@ 0x2c
    PeriphClkInitStruct.PLLSAIDivQ = 1;
9000261e:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90002620:	f003 fd60 	bl	900060e4 <HAL_RCCEx_PeriphCLKConfig>
90002624:	b108      	cbz	r0, 9000262a <HAL_LTDC_MspInit+0x42>
    {
      Error_Handler();
90002626:	f7ff ff89 	bl	9000253c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
9000262a:	4b3a      	ldr	r3, [pc, #232]	@ (90002714 <HAL_LTDC_MspInit+0x12c>)
    PJ2     ------> LTDC_R3
    PJ0     ------> LTDC_R1
    PJ1     ------> LTDC_R2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_14;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
9000262c:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000262e:	2500      	movs	r5, #0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90002630:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
90002632:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90002634:	a906      	add	r1, sp, #24
90002636:	4838      	ldr	r0, [pc, #224]	@ (90002718 <HAL_LTDC_MspInit+0x130>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90002638:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
9000263c:	645a      	str	r2, [r3, #68]	@ 0x44
9000263e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
90002640:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
90002644:	9201      	str	r2, [sp, #4]
90002646:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOG_CLK_ENABLE();
90002648:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000264a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000264e:	631a      	str	r2, [r3, #48]	@ 0x30
90002650:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002652:	f002 0240 	and.w	r2, r2, #64	@ 0x40
90002656:	9202      	str	r2, [sp, #8]
90002658:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
9000265a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000265c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
90002660:	631a      	str	r2, [r3, #48]	@ 0x30
90002662:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002664:	f402 7200 	and.w	r2, r2, #512	@ 0x200
90002668:	9203      	str	r2, [sp, #12]
9000266a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOK_CLK_ENABLE();
9000266c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000266e:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
90002672:	631a      	str	r2, [r3, #48]	@ 0x30
90002674:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002676:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
9000267a:	9204      	str	r2, [sp, #16]
9000267c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOI_CLK_ENABLE();
9000267e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002680:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
90002684:	631a      	str	r2, [r3, #48]	@ 0x30
90002686:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90002688:	960a      	str	r6, [sp, #40]	@ 0x28
    __HAL_RCC_GPIOI_CLK_ENABLE();
9000268a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9000268e:	9305      	str	r3, [sp, #20]
90002690:	9b05      	ldr	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90002692:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90002696:	e9cd 5408 	strd	r5, r4, [sp, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
9000269a:	e9cd 3406 	strd	r3, r4, [sp, #24]
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000269e:	f001 fe3d 	bl	9000431c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_11
900026a2:	f64e 73ff 	movw	r3, #61439	@ 0xefff
                          |GPIO_PIN_2|GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900026a6:	a906      	add	r1, sp, #24
900026a8:	481c      	ldr	r0, [pc, #112]	@ (9000271c <HAL_LTDC_MspInit+0x134>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900026aa:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900026ac:	e9cd 3406 	strd	r3, r4, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900026b0:	e9cd 5408 	strd	r5, r4, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900026b4:	f001 fe32 	bl	9000431c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4
900026b8:	23f7      	movs	r3, #247	@ 0xf7
                          |GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900026ba:	a906      	add	r1, sp, #24
900026bc:	4818      	ldr	r0, [pc, #96]	@ (90002720 <HAL_LTDC_MspInit+0x138>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900026be:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900026c0:	e9cd 3406 	strd	r3, r4, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900026c4:	e9cd 5408 	strd	r5, r4, [sp, #32]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900026c8:	f001 fe28 	bl	9000431c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
900026cc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900026d0:	a906      	add	r1, sp, #24
900026d2:	4811      	ldr	r0, [pc, #68]	@ (90002718 <HAL_LTDC_MspInit+0x130>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900026d4:	e9cd 3406 	strd	r3, r4, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
900026d8:	2309      	movs	r3, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900026da:	e9cd 5408 	strd	r5, r4, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
900026de:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900026e0:	f001 fe1c 	bl	9000431c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_15|GPIO_PIN_14;
900026e4:	f44f 4346 	mov.w	r3, #50688	@ 0xc600
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900026e8:	a906      	add	r1, sp, #24
900026ea:	480e      	ldr	r0, [pc, #56]	@ (90002724 <HAL_LTDC_MspInit+0x13c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900026ec:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900026ee:	e9cd 3406 	strd	r3, r4, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900026f2:	e9cd 5408 	strd	r5, r4, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900026f6:	f001 fe11 	bl	9000431c <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
900026fa:	2058      	movs	r0, #88	@ 0x58
900026fc:	462a      	mov	r2, r5
900026fe:	2105      	movs	r1, #5
90002700:	f001 fb54 	bl	90003dac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90002704:	2058      	movs	r0, #88	@ 0x58
90002706:	f001 fb83 	bl	90003e10 <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
9000270a:	b02c      	add	sp, #176	@ 0xb0
9000270c:	bd70      	pop	{r4, r5, r6, pc}
9000270e:	bf00      	nop
90002710:	40016800 	.word	0x40016800
90002714:	40023800 	.word	0x40023800
90002718:	40021800 	.word	0x40021800
9000271c:	40022400 	.word	0x40022400
90002720:	40022800 	.word	0x40022800
90002724:	40022000 	.word	0x40022000

90002728 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
90002728:	b510      	push	{r4, lr}
9000272a:	b0a8      	sub	sp, #160	@ 0xa0
9000272c:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000272e:	2214      	movs	r2, #20
90002730:	2100      	movs	r1, #0
90002732:	a802      	add	r0, sp, #8
90002734:	f026 f897 	bl	90028866 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90002738:	2284      	movs	r2, #132	@ 0x84
9000273a:	2100      	movs	r1, #0
9000273c:	a807      	add	r0, sp, #28
9000273e:	f026 f892 	bl	90028866 <memset>
  if(huart->Instance==USART1)
90002742:	6822      	ldr	r2, [r4, #0]
90002744:	4b16      	ldr	r3, [pc, #88]	@ (900027a0 <HAL_UART_MspInit+0x78>)
90002746:	429a      	cmp	r2, r3
90002748:	d128      	bne.n	9000279c <HAL_UART_MspInit+0x74>

    /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
9000274a:	2340      	movs	r3, #64	@ 0x40
    PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000274c:	a807      	add	r0, sp, #28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
9000274e:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90002750:	f003 fcc8 	bl	900060e4 <HAL_RCCEx_PeriphCLKConfig>
90002754:	b108      	cbz	r0, 9000275a <HAL_UART_MspInit+0x32>
    {
      Error_Handler();
90002756:	f7ff fef1 	bl	9000253c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
9000275a:	4b12      	ldr	r3, [pc, #72]	@ (900027a4 <HAL_UART_MspInit+0x7c>)
    PB6     ------> USART1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000275c:	2100      	movs	r1, #0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
9000275e:	4812      	ldr	r0, [pc, #72]	@ (900027a8 <HAL_UART_MspInit+0x80>)
    __HAL_RCC_USART1_CLK_ENABLE();
90002760:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
90002762:	f042 0210 	orr.w	r2, r2, #16
90002766:	645a      	str	r2, [r3, #68]	@ 0x44
90002768:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
9000276a:	f002 0210 	and.w	r2, r2, #16
9000276e:	9200      	str	r2, [sp, #0]
90002770:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
90002772:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90002774:	f042 0202 	orr.w	r2, r2, #2
90002778:	631a      	str	r2, [r3, #48]	@ 0x30
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
9000277a:	22c0      	movs	r2, #192	@ 0xc0
    __HAL_RCC_GPIOB_CLK_ENABLE();
9000277c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000277e:	f003 0302 	and.w	r3, r3, #2
90002782:	9301      	str	r3, [sp, #4]
90002784:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90002786:	2302      	movs	r3, #2
90002788:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000278c:	2303      	movs	r3, #3
9000278e:	e9cd 1304 	strd	r1, r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
90002792:	2307      	movs	r3, #7
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002794:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
90002796:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002798:	f001 fdc0 	bl	9000431c <HAL_GPIO_Init>

    /* USER CODE END USART1_MspInit 1 */

  }

}
9000279c:	b028      	add	sp, #160	@ 0xa0
9000279e:	bd10      	pop	{r4, pc}
900027a0:	40011000 	.word	0x40011000
900027a4:	40023800 	.word	0x40023800
900027a8:	40020400 	.word	0x40020400

900027ac <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900027ac:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900027ae:	2300      	movs	r3, #0
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900027b0:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900027b2:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
900027b4:	4b24      	ldr	r3, [pc, #144]	@ (90002848 <HAL_SDRAM_MspInit+0x9c>)
900027b6:	681e      	ldr	r6, [r3, #0]
900027b8:	2e00      	cmp	r6, #0
900027ba:	d143      	bne.n	90002844 <HAL_SDRAM_MspInit+0x98>
  FMC_Initialized = 1;
900027bc:	2201      	movs	r2, #1
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900027be:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900027c0:	2503      	movs	r5, #3
900027c2:	240c      	movs	r4, #12
  FMC_Initialized = 1;
900027c4:	601a      	str	r2, [r3, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900027c6:	a901      	add	r1, sp, #4
  __HAL_RCC_FMC_CLK_ENABLE();
900027c8:	4b20      	ldr	r3, [pc, #128]	@ (9000284c <HAL_SDRAM_MspInit+0xa0>)
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900027ca:	4821      	ldr	r0, [pc, #132]	@ (90002850 <HAL_SDRAM_MspInit+0xa4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900027cc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900027ce:	f042 0201 	orr.w	r2, r2, #1
900027d2:	639a      	str	r2, [r3, #56]	@ 0x38
900027d4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900027d6:	f003 0301 	and.w	r3, r3, #1
900027da:	9300      	str	r3, [sp, #0]
900027dc:	9b00      	ldr	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900027de:	f64f 7383 	movw	r3, #65411	@ 0xff83
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900027e2:	e9cd 5404 	strd	r5, r4, [sp, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900027e6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900027ea:	f001 fd97 	bl	9000431c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
900027ee:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900027f2:	a901      	add	r1, sp, #4
900027f4:	4817      	ldr	r0, [pc, #92]	@ (90002854 <HAL_SDRAM_MspInit+0xa8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900027f6:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900027f8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
900027fc:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90002800:	f001 fd8c 	bl	9000431c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
90002804:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90002808:	a901      	add	r1, sp, #4
9000280a:	4813      	ldr	r0, [pc, #76]	@ (90002858 <HAL_SDRAM_MspInit+0xac>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000280c:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
9000280e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002812:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90002816:	f001 fd81 	bl	9000431c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
9000281a:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000281e:	a901      	add	r1, sp, #4
90002820:	480e      	ldr	r0, [pc, #56]	@ (9000285c <HAL_SDRAM_MspInit+0xb0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90002822:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90002824:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002828:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000282c:	f001 fd76 	bl	9000431c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_3|GPIO_PIN_2;
90002830:	232c      	movs	r3, #44	@ 0x2c
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90002832:	a901      	add	r1, sp, #4
90002834:	480a      	ldr	r0, [pc, #40]	@ (90002860 <HAL_SDRAM_MspInit+0xb4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90002836:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90002838:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000283c:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90002840:	f001 fd6c 	bl	9000431c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
90002844:	b007      	add	sp, #28
90002846:	bdf0      	pop	{r4, r5, r6, r7, pc}
90002848:	20002eec 	.word	0x20002eec
9000284c:	40023800 	.word	0x40023800
90002850:	40021000 	.word	0x40021000
90002854:	40021800 	.word	0x40021800
90002858:	40020c00 	.word	0x40020c00
9000285c:	40021400 	.word	0x40021400
90002860:	40021c00 	.word	0x40021c00

90002864 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90002864:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
90002866:	4b12      	ldr	r3, [pc, #72]	@ (900028b0 <HAL_SDRAM_MspDeInit+0x4c>)
90002868:	681a      	ldr	r2, [r3, #0]
9000286a:	bb02      	cbnz	r2, 900028ae <HAL_SDRAM_MspDeInit+0x4a>
  FMC_DeInitialized = 1;
9000286c:	2201      	movs	r2, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
9000286e:	f64f 7183 	movw	r1, #65411	@ 0xff83
90002872:	4810      	ldr	r0, [pc, #64]	@ (900028b4 <HAL_SDRAM_MspDeInit+0x50>)
  FMC_DeInitialized = 1;
90002874:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
90002876:	4a10      	ldr	r2, [pc, #64]	@ (900028b8 <HAL_SDRAM_MspDeInit+0x54>)
90002878:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000287a:	f023 0301 	bic.w	r3, r3, #1
9000287e:	6393      	str	r3, [r2, #56]	@ 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
90002880:	f001 fe30 	bl	900044e4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
90002884:	f248 1133 	movw	r1, #33075	@ 0x8133
90002888:	480c      	ldr	r0, [pc, #48]	@ (900028bc <HAL_SDRAM_MspDeInit+0x58>)
9000288a:	f001 fe2b 	bl	900044e4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
9000288e:	f24c 7103 	movw	r1, #50947	@ 0xc703
90002892:	480b      	ldr	r0, [pc, #44]	@ (900028c0 <HAL_SDRAM_MspDeInit+0x5c>)
90002894:	f001 fe26 	bl	900044e4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
90002898:	f64f 013f 	movw	r1, #63551	@ 0xf83f
9000289c:	4809      	ldr	r0, [pc, #36]	@ (900028c4 <HAL_SDRAM_MspDeInit+0x60>)
9000289e:	f001 fe21 	bl	900044e4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_3|GPIO_PIN_2);
900028a2:	212c      	movs	r1, #44	@ 0x2c
900028a4:	4808      	ldr	r0, [pc, #32]	@ (900028c8 <HAL_SDRAM_MspDeInit+0x64>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
900028a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_3|GPIO_PIN_2);
900028aa:	f001 be1b 	b.w	900044e4 <HAL_GPIO_DeInit>
}
900028ae:	bd08      	pop	{r3, pc}
900028b0:	20002ee8 	.word	0x20002ee8
900028b4:	40021000 	.word	0x40021000
900028b8:	40023800 	.word	0x40023800
900028bc:	40021800 	.word	0x40021800
900028c0:	40020c00 	.word	0x40020c00
900028c4:	40021400 	.word	0x40021400
900028c8:	40021c00 	.word	0x40021c00

900028cc <HAL_InitTick>:
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
900028cc:	4b21      	ldr	r3, [pc, #132]	@ (90002954 <HAL_InitTick+0x88>)
900028ce:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
900028d0:	f042 0210 	orr.w	r2, r2, #16
{
900028d4:	b570      	push	{r4, r5, r6, lr}
900028d6:	b088      	sub	sp, #32
  __HAL_RCC_TIM6_CLK_ENABLE();
900028d8:	641a      	str	r2, [r3, #64]	@ 0x40
900028da:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
{
900028dc:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900028de:	a901      	add	r1, sp, #4
900028e0:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
900028e2:	f003 0310 	and.w	r3, r3, #16
900028e6:	9302      	str	r3, [sp, #8]
900028e8:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900028ea:	f003 fbdd 	bl	900060a8 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
900028ee:	9b06      	ldr	r3, [sp, #24]
900028f0:	bb4b      	cbnz	r3, 90002946 <HAL_InitTick+0x7a>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
900028f2:	f003 fbb9 	bl	90006068 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
900028f6:	4e18      	ldr	r6, [pc, #96]	@ (90002958 <HAL_InitTick+0x8c>)
900028f8:	4b18      	ldr	r3, [pc, #96]	@ (9000295c <HAL_InitTick+0x90>)
900028fa:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
900028fc:	f240 33e7 	movw	r3, #999	@ 0x3e7
90002900:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90002902:	4b17      	ldr	r3, [pc, #92]	@ (90002960 <HAL_InitTick+0x94>)
90002904:	fbb0 f3f3 	udiv	r3, r0, r3
90002908:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
9000290a:	4630      	mov	r0, r6
  htim6.Init.Prescaler = uwPrescalerValue;
9000290c:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
9000290e:	2300      	movs	r3, #0
90002910:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
90002912:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
90002914:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
90002916:	f004 f80f 	bl	90006938 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
9000291a:	4604      	mov	r4, r0
9000291c:	b980      	cbnz	r0, 90002940 <HAL_InitTick+0x74>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
9000291e:	4630      	mov	r0, r6
90002920:	f003 fed0 	bl	900066c4 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
90002924:	4604      	mov	r4, r0
90002926:	b958      	cbnz	r0, 90002940 <HAL_InitTick+0x74>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90002928:	2036      	movs	r0, #54	@ 0x36
9000292a:	f001 fa71 	bl	90003e10 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
9000292e:	2d0f      	cmp	r5, #15
90002930:	d80d      	bhi.n	9000294e <HAL_InitTick+0x82>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
90002932:	4622      	mov	r2, r4
90002934:	4629      	mov	r1, r5
90002936:	2036      	movs	r0, #54	@ 0x36
90002938:	f001 fa38 	bl	90003dac <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
9000293c:	4b09      	ldr	r3, [pc, #36]	@ (90002964 <HAL_InitTick+0x98>)
9000293e:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
90002940:	4620      	mov	r0, r4
90002942:	b008      	add	sp, #32
90002944:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90002946:	f003 fb8f 	bl	90006068 <HAL_RCC_GetPCLK1Freq>
9000294a:	0040      	lsls	r0, r0, #1
9000294c:	e7d3      	b.n	900028f6 <HAL_InitTick+0x2a>
        status = HAL_ERROR;
9000294e:	2401      	movs	r4, #1
90002950:	e7f6      	b.n	90002940 <HAL_InitTick+0x74>
90002952:	bf00      	nop
90002954:	40023800 	.word	0x40023800
90002958:	20002ef0 	.word	0x20002ef0
9000295c:	40001000 	.word	0x40001000
90002960:	000f4240 	.word	0x000f4240
90002964:	20000098 	.word	0x20000098

90002968 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90002968:	4770      	bx	lr

9000296a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
9000296a:	e7fe      	b.n	9000296a <HardFault_Handler>

9000296c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
9000296c:	e7fe      	b.n	9000296c <MemManage_Handler>

9000296e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
9000296e:	e7fe      	b.n	9000296e <BusFault_Handler>

90002970 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90002970:	e7fe      	b.n	90002970 <UsageFault_Handler>

90002972 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
90002972:	4770      	bx	lr

90002974 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90002974:	4801      	ldr	r0, [pc, #4]	@ (9000297c <TIM6_DAC_IRQHandler+0x8>)
90002976:	f003 bee7 	b.w	90006748 <HAL_TIM_IRQHandler>
9000297a:	bf00      	nop
9000297c:	20002ef0 	.word	0x20002ef0

90002980 <OTG_FS_IRQHandler>:
void OTG_FS_IRQHandler(void)
{
  /* USER CODE BEGIN OTG_FS_IRQn 0 */

  /* USER CODE END OTG_FS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_FS);
90002980:	4801      	ldr	r0, [pc, #4]	@ (90002988 <OTG_FS_IRQHandler+0x8>)
90002982:	f002 bd0d 	b.w	900053a0 <HAL_PCD_IRQHandler>
90002986:	bf00      	nop
90002988:	20002520 	.word	0x20002520

9000298c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
9000298c:	4801      	ldr	r0, [pc, #4]	@ (90002994 <LTDC_IRQHandler+0x8>)
9000298e:	f002 baa3 	b.w	90004ed8 <HAL_LTDC_IRQHandler>
90002992:	bf00      	nop
90002994:	20002ac4 	.word	0x20002ac4

90002998 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
90002998:	4801      	ldr	r0, [pc, #4]	@ (900029a0 <DMA2D_IRQHandler+0x8>)
9000299a:	f001 bbef 	b.w	9000417c <HAL_DMA2D_IRQHandler>
9000299e:	bf00      	nop
900029a0:	20002b6c 	.word	0x20002b6c

900029a4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
900029a4:	2001      	movs	r0, #1
900029a6:	4770      	bx	lr

900029a8 <_kill>:

int _kill(int pid, int sig)
{
900029a8:	b508      	push	{r3, lr}
	errno = EINVAL;
900029aa:	f026 f81d 	bl	900289e8 <__errno>
900029ae:	2316      	movs	r3, #22
900029b0:	6003      	str	r3, [r0, #0]
	return -1;
}
900029b2:	f04f 30ff 	mov.w	r0, #4294967295
900029b6:	bd08      	pop	{r3, pc}

900029b8 <_exit>:

void _exit (int status)
{
900029b8:	b508      	push	{r3, lr}
	errno = EINVAL;
900029ba:	f026 f815 	bl	900289e8 <__errno>
900029be:	2316      	movs	r3, #22
900029c0:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
900029c2:	e7fe      	b.n	900029c2 <_exit+0xa>

900029c4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
900029c4:	b570      	push	{r4, r5, r6, lr}
900029c6:	460d      	mov	r5, r1
900029c8:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
900029ca:	460e      	mov	r6, r1
900029cc:	1b73      	subs	r3, r6, r5
900029ce:	429c      	cmp	r4, r3
900029d0:	dc01      	bgt.n	900029d6 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
900029d2:	4620      	mov	r0, r4
900029d4:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
900029d6:	f3af 8000 	nop.w
900029da:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
900029de:	e7f5      	b.n	900029cc <_read+0x8>

900029e0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
900029e0:	b570      	push	{r4, r5, r6, lr}
900029e2:	460d      	mov	r5, r1
900029e4:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
900029e6:	460e      	mov	r6, r1
900029e8:	1b73      	subs	r3, r6, r5
900029ea:	429c      	cmp	r4, r3
900029ec:	dc01      	bgt.n	900029f2 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
900029ee:	4620      	mov	r0, r4
900029f0:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
900029f2:	f816 0b01 	ldrb.w	r0, [r6], #1
900029f6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
900029fa:	e7f5      	b.n	900029e8 <_write+0x8>

900029fc <_close>:

int _close(int file)
{
	return -1;
}
900029fc:	f04f 30ff 	mov.w	r0, #4294967295
90002a00:	4770      	bx	lr

90002a02 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90002a02:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
90002a06:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90002a08:	604b      	str	r3, [r1, #4]
}
90002a0a:	4770      	bx	lr

90002a0c <_isatty>:

int _isatty(int file)
{
	return 1;
}
90002a0c:	2001      	movs	r0, #1
90002a0e:	4770      	bx	lr

90002a10 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90002a10:	2000      	movs	r0, #0
90002a12:	4770      	bx	lr

90002a14 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
90002a14:	4a0a      	ldr	r2, [pc, #40]	@ (90002a40 <_sbrk+0x2c>)
90002a16:	6811      	ldr	r1, [r2, #0]
{
90002a18:	b508      	push	{r3, lr}
90002a1a:	4603      	mov	r3, r0
	if (heap_end == 0)
90002a1c:	b909      	cbnz	r1, 90002a22 <_sbrk+0xe>
		heap_end = &end;
90002a1e:	4909      	ldr	r1, [pc, #36]	@ (90002a44 <_sbrk+0x30>)
90002a20:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
90002a22:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
90002a24:	4669      	mov	r1, sp
90002a26:	4403      	add	r3, r0
90002a28:	428b      	cmp	r3, r1
90002a2a:	d906      	bls.n	90002a3a <_sbrk+0x26>
	{
		errno = ENOMEM;
90002a2c:	f025 ffdc 	bl	900289e8 <__errno>
90002a30:	230c      	movs	r3, #12
90002a32:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
90002a34:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
90002a38:	bd08      	pop	{r3, pc}
	heap_end += incr;
90002a3a:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
90002a3c:	e7fc      	b.n	90002a38 <_sbrk+0x24>
90002a3e:	bf00      	nop
90002a40:	20002f3c 	.word	0x20002f3c
90002a44:	2001b780 	.word	0x2001b780

90002a48 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
90002a48:	4770      	bx	lr

90002a4a <_ZN23ApplicationFontProviderD0Ev>:
90002a4a:	b510      	push	{r4, lr}
90002a4c:	4604      	mov	r4, r0
90002a4e:	2104      	movs	r1, #4
90002a50:	f024 fd66 	bl	90027520 <_ZdlPvj>
90002a54:	4620      	mov	r0, r4
90002a56:	bd10      	pop	{r4, pc}

90002a58 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
90002a58:	2901      	cmp	r1, #1
{
90002a5a:	b508      	push	{r3, lr}
    switch (typography)
90002a5c:	d006      	beq.n	90002a6c <_ZN23ApplicationFontProvider7getFontEt+0x14>
90002a5e:	2902      	cmp	r1, #2
90002a60:	d008      	beq.n	90002a74 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
90002a62:	b959      	cbnz	r1, 90002a7c <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90002a64:	f000 fc0c 	bl	90003280 <_ZN17TypedTextDatabase8getFontsEv>
90002a68:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
90002a6a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90002a6c:	f000 fc08 	bl	90003280 <_ZN17TypedTextDatabase8getFontsEv>
90002a70:	6840      	ldr	r0, [r0, #4]
90002a72:	e7fa      	b.n	90002a6a <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90002a74:	f000 fc04 	bl	90003280 <_ZN17TypedTextDatabase8getFontsEv>
90002a78:	6880      	ldr	r0, [r0, #8]
90002a7a:	e7f6      	b.n	90002a6a <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
90002a7c:	2000      	movs	r0, #0
90002a7e:	e7f4      	b.n	90002a6a <_ZN23ApplicationFontProvider7getFontEt+0x12>

90002a80 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90002a80:	4800      	ldr	r0, [pc, #0]	@ (90002a84 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
90002a82:	4770      	bx	lr
90002a84:	9002a99c 	.word	0x9002a99c

90002a88 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90002a88:	2002      	movs	r0, #2
90002a8a:	4770      	bx	lr

90002a8c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90002a8c:	b513      	push	{r0, r1, r4, lr}
90002a8e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
90002a90:	b151      	cbz	r1, 90002aa8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90002a92:	6803      	ldr	r3, [r0, #0]
90002a94:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
90002a96:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90002a98:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90002a9c:	689c      	ldr	r4, [r3, #8]
90002a9e:	f10d 0303 	add.w	r3, sp, #3
90002aa2:	47a0      	blx	r4
        return glyph;
    }
90002aa4:	b002      	add	sp, #8
90002aa6:	bd10      	pop	{r4, pc}
            return 0;
90002aa8:	4608      	mov	r0, r1
90002aaa:	e7fb      	b.n	90002aa4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

90002aac <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90002aac:	89c0      	ldrh	r0, [r0, #14]
90002aae:	4770      	bx	lr

90002ab0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
90002ab0:	8a00      	ldrh	r0, [r0, #16]
90002ab2:	4770      	bx	lr

90002ab4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90002ab4:	88c0      	ldrh	r0, [r0, #6]
90002ab6:	4770      	bx	lr

90002ab8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
90002ab8:	8880      	ldrh	r0, [r0, #4]
90002aba:	4770      	bx	lr

90002abc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90002abc:	7a80      	ldrb	r0, [r0, #10]
    }
90002abe:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
90002ac2:	4770      	bx	lr

90002ac4 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90002ac4:	7a80      	ldrb	r0, [r0, #10]
    }
90002ac6:	09c0      	lsrs	r0, r0, #7
90002ac8:	4770      	bx	lr

90002aca <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90002aca:	2000      	movs	r0, #0
90002acc:	4770      	bx	lr
	...

90002ad0 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
90002ad0:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 90002ad8 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90002ad4:	4770      	bx	lr
90002ad6:	bf00      	nop
90002ad8:	00000000 	.word	0x00000000

90002adc <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
90002adc:	4770      	bx	lr

90002ade <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90002ade:	4770      	bx	lr

90002ae0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90002ae0:	f500 7398 	add.w	r3, r0, #304	@ 0x130
90002ae4:	6808      	ldr	r0, [r1, #0]
90002ae6:	6849      	ldr	r1, [r1, #4]
90002ae8:	c303      	stmia	r3!, {r0, r1}
    }
90002aea:	4770      	bx	lr

90002aec <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90002aec:	4770      	bx	lr

90002aee <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90002aee:	4770      	bx	lr

90002af0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90002af0:	6041      	str	r1, [r0, #4]
    }
90002af2:	4770      	bx	lr

90002af4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90002af4:	4770      	bx	lr

90002af6 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90002af6:	4770      	bx	lr

90002af8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
90002af8:	4b06      	ldr	r3, [pc, #24]	@ (90002b14 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
90002afa:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
90002afe:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
90002b02:	2300      	movs	r3, #0
90002b04:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90002b08:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90002b0c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
90002b10:	4770      	bx	lr
90002b12:	bf00      	nop
90002b14:	90002bb9 	.word	0x90002bb9

90002b18 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90002b18:	2301      	movs	r3, #1
90002b1a:	7203      	strb	r3, [r0, #8]
    }
90002b1c:	4770      	bx	lr

90002b1e <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90002b1e:	4770      	bx	lr

90002b20 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
90002b20:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
90002b22:	6841      	ldr	r1, [r0, #4]
    virtual void execute()
90002b24:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
90002b26:	68c2      	ldr	r2, [r0, #12]
90002b28:	689b      	ldr	r3, [r3, #8]
90002b2a:	1054      	asrs	r4, r2, #1
90002b2c:	eb01 0062 	add.w	r0, r1, r2, asr #1
90002b30:	07d2      	lsls	r2, r2, #31
90002b32:	bf48      	it	mi
90002b34:	590a      	ldrmi	r2, [r1, r4]
    }
90002b36:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
90002b3a:	bf48      	it	mi
90002b3c:	58d3      	ldrmi	r3, [r2, r3]
90002b3e:	4718      	bx	r3

90002b40 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
90002b40:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
90002b42:	6840      	ldr	r0, [r0, #4]
90002b44:	b130      	cbz	r0, 90002b54 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90002b46:	689a      	ldr	r2, [r3, #8]
90002b48:	b91a      	cbnz	r2, 90002b52 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
90002b4a:	68d8      	ldr	r0, [r3, #12]
90002b4c:	f000 0001 	and.w	r0, r0, #1
90002b50:	4770      	bx	lr
90002b52:	2001      	movs	r0, #1
    }
90002b54:	4770      	bx	lr

90002b56 <_ZN8touchgfx12NoTransitionD0Ev>:
90002b56:	b510      	push	{r4, lr}
90002b58:	4604      	mov	r4, r0
90002b5a:	210c      	movs	r1, #12
90002b5c:	f024 fce0 	bl	90027520 <_ZdlPvj>
90002b60:	4620      	mov	r0, r4
90002b62:	bd10      	pop	{r4, pc}

90002b64 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90002b64:	b510      	push	{r4, lr}
90002b66:	4604      	mov	r4, r0
90002b68:	2110      	movs	r1, #16
90002b6a:	f024 fcd9 	bl	90027520 <_ZdlPvj>
90002b6e:	4620      	mov	r0, r4
90002b70:	bd10      	pop	{r4, pc}

90002b72 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90002b72:	b510      	push	{r4, lr}
90002b74:	4604      	mov	r4, r0
90002b76:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90002b7a:	f024 fcd1 	bl	90027520 <_ZdlPvj>
90002b7e:	4620      	mov	r0, r4
90002b80:	bd10      	pop	{r4, pc}

90002b82 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90002b82:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90002b84:	f012 fa84 	bl	90015090 <_ZN8touchgfx11Application11getInstanceEv>
90002b88:	6803      	ldr	r3, [r0, #0]
    }
90002b8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90002b8e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90002b90:	4718      	bx	r3

90002b92 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
90002b92:	b510      	push	{r4, lr}
90002b94:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90002b96:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
90002b9a:	b158      	cbz	r0, 90002bb4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
90002b9c:	6803      	ldr	r3, [r0, #0]
90002b9e:	68db      	ldr	r3, [r3, #12]
90002ba0:	4798      	blx	r3
90002ba2:	b138      	cbz	r0, 90002bb4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
90002ba4:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
90002ba8:	6803      	ldr	r3, [r0, #0]
90002baa:	689b      	ldr	r3, [r3, #8]
90002bac:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90002bae:	2300      	movs	r3, #0
90002bb0:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
90002bb4:	bd10      	pop	{r4, pc}
	...

90002bb8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
90002bb8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90002bbc:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90002bc0:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90002bc2:	68b0      	ldr	r0, [r6, #8]
90002bc4:	6803      	ldr	r3, [r0, #0]
90002bc6:	6a1b      	ldr	r3, [r3, #32]
90002bc8:	4798      	blx	r3
90002bca:	28cf      	cmp	r0, #207	@ 0xcf
90002bcc:	d805      	bhi.n	90002bda <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x22>
90002bce:	4b44      	ldr	r3, [pc, #272]	@ (90002ce0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x128>)
90002bd0:	21a3      	movs	r1, #163	@ 0xa3
90002bd2:	4a44      	ldr	r2, [pc, #272]	@ (90002ce4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90002bd4:	4844      	ldr	r0, [pc, #272]	@ (90002ce8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
90002bd6:	f025 fbdf 	bl	90028398 <__assert_func>
90002bda:	6870      	ldr	r0, [r6, #4]
90002bdc:	6803      	ldr	r3, [r0, #0]
90002bde:	6a1b      	ldr	r3, [r3, #32]
90002be0:	4798      	blx	r3
90002be2:	280f      	cmp	r0, #15
90002be4:	d803      	bhi.n	90002bee <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x36>
90002be6:	4b41      	ldr	r3, [pc, #260]	@ (90002cec <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
90002be8:	21a4      	movs	r1, #164	@ 0xa4
90002bea:	4a3e      	ldr	r2, [pc, #248]	@ (90002ce4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
90002bec:	e7f2      	b.n	90002bd4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90002bee:	68f0      	ldr	r0, [r6, #12]
90002bf0:	6803      	ldr	r3, [r0, #0]
90002bf2:	6a1b      	ldr	r3, [r3, #32]
90002bf4:	4798      	blx	r3
90002bf6:	280b      	cmp	r0, #11
90002bf8:	d803      	bhi.n	90002c02 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4a>
90002bfa:	4b3d      	ldr	r3, [pc, #244]	@ (90002cf0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
90002bfc:	21a5      	movs	r1, #165	@ 0xa5
90002bfe:	4a39      	ldr	r2, [pc, #228]	@ (90002ce4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
90002c00:	e7e8      	b.n	90002bd4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1c>
    if (*currentTrans)
90002c02:	f8df 90f4 	ldr.w	r9, [pc, #244]	@ 90002cf8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>
    Application::getInstance()->clearAllTimerWidgets();
90002c06:	f012 fa43 	bl	90015090 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90002c0a:	3004      	adds	r0, #4
90002c0c:	f012 fa65 	bl	900150da <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90002c10:	f8d9 0000 	ldr.w	r0, [r9]
90002c14:	b110      	cbz	r0, 90002c1c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
90002c16:	6803      	ldr	r3, [r0, #0]
90002c18:	68db      	ldr	r3, [r3, #12]
90002c1a:	4798      	blx	r3
    if (*currentTrans)
90002c1c:	f8d9 0000 	ldr.w	r0, [r9]
90002c20:	b110      	cbz	r0, 90002c28 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
90002c22:	6803      	ldr	r3, [r0, #0]
90002c24:	681b      	ldr	r3, [r3, #0]
90002c26:	4798      	blx	r3
    if (*currentScreen)
90002c28:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 90002cfc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>
90002c2c:	f8d8 0000 	ldr.w	r0, [r8]
90002c30:	b110      	cbz	r0, 90002c38 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
90002c32:	6803      	ldr	r3, [r0, #0]
90002c34:	695b      	ldr	r3, [r3, #20]
90002c36:	4798      	blx	r3
    if (*currentPresenter)
90002c38:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90002c3c:	b110      	cbz	r0, 90002c44 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
90002c3e:	6803      	ldr	r3, [r0, #0]
90002c40:	685b      	ldr	r3, [r3, #4]
90002c42:	4798      	blx	r3
    if (*currentScreen)
90002c44:	f8d8 0000 	ldr.w	r0, [r8]
90002c48:	b110      	cbz	r0, 90002c50 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
90002c4a:	6803      	ldr	r3, [r0, #0]
90002c4c:	681b      	ldr	r3, [r3, #0]
90002c4e:	4798      	blx	r3
    if (*currentPresenter)
90002c50:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90002c54:	b110      	cbz	r0, 90002c5c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
90002c56:	6803      	ldr	r3, [r0, #0]
90002c58:	689b      	ldr	r3, [r3, #8]
90002c5a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90002c5c:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90002c5e:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
90002c60:	f04f 0b00 	mov.w	fp, #0
90002c64:	6803      	ldr	r3, [r0, #0]
90002c66:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90002c68:	4798      	blx	r3
90002c6a:	4b22      	ldr	r3, [pc, #136]	@ (90002cf4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
90002c6c:	4604      	mov	r4, r0
90002c6e:	f8c0 b004 	str.w	fp, [r0, #4]
90002c72:	f880 b008 	strb.w	fp, [r0, #8]
90002c76:	4659      	mov	r1, fp
90002c78:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90002c7a:	68b0      	ldr	r0, [r6, #8]
90002c7c:	6803      	ldr	r3, [r0, #0]
90002c7e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90002c80:	4798      	blx	r3
90002c82:	4605      	mov	r5, r0
90002c84:	f000 fb66 	bl	90003354 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90002c88:	6870      	ldr	r0, [r6, #4]
90002c8a:	4659      	mov	r1, fp
90002c8c:	6803      	ldr	r3, [r0, #0]
90002c8e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90002c90:	4798      	blx	r3
90002c92:	4606      	mov	r6, r0
90002c94:	4629      	mov	r1, r5
90002c96:	f000 fb3d 	bl	90003314 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
90002c9a:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90002c9c:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90002ca0:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90002ca2:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90002ca6:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90002caa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90002cae:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
90002cb0:	f8c6 a008 	str.w	sl, [r6, #8]
90002cb4:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90002cb6:	63ee      	str	r6, [r5, #60]	@ 0x3c
90002cb8:	4798      	blx	r3
    newPresenter->activate();
90002cba:	6833      	ldr	r3, [r6, #0]
90002cbc:	4630      	mov	r0, r6
90002cbe:	681b      	ldr	r3, [r3, #0]
90002cc0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90002cc2:	4621      	mov	r1, r4
90002cc4:	4628      	mov	r0, r5
90002cc6:	f014 fb99 	bl	900173fc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90002cca:	6823      	ldr	r3, [r4, #0]
90002ccc:	4620      	mov	r0, r4
90002cce:	691b      	ldr	r3, [r3, #16]
90002cd0:	4798      	blx	r3
    newTransition->invalidate();
90002cd2:	6823      	ldr	r3, [r4, #0]
90002cd4:	4620      	mov	r0, r4
90002cd6:	695b      	ldr	r3, [r3, #20]
}
90002cd8:	b001      	add	sp, #4
90002cda:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90002cde:	4718      	bx	r3
90002ce0:	90029bba 	.word	0x90029bba
90002ce4:	90029c48 	.word	0x90029c48
90002ce8:	90029d1a 	.word	0x90029d1a
90002cec:	90029d61 	.word	0x90029d61
90002cf0:	90029e04 	.word	0x90029e04
90002cf4:	9002aa38 	.word	0x9002aa38
90002cf8:	2001aa88 	.word	0x2001aa88
90002cfc:	2001aa84 	.word	0x2001aa84

90002d00 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90002d00:	4b04      	ldr	r3, [pc, #16]	@ (90002d14 <_ZN8touchgfx3HAL3lcdEv+0x14>)
90002d02:	681b      	ldr	r3, [r3, #0]
90002d04:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90002d08:	b10a      	cbz	r2, 90002d0e <_ZN8touchgfx3HAL3lcdEv+0xe>
90002d0a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90002d0c:	b900      	cbnz	r0, 90002d10 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
90002d0e:	6898      	ldr	r0, [r3, #8]
    }
90002d10:	4770      	bx	lr
90002d12:	bf00      	nop
90002d14:	2001aa40 	.word	0x2001aa40

90002d18 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90002d18:	b570      	push	{r4, r5, r6, lr}
90002d1a:	4616      	mov	r6, r2
90002d1c:	4604      	mov	r4, r0
90002d1e:	460d      	mov	r5, r1
          pendingScreenTransitionCallback(0)
90002d20:	f012 fa7c 	bl	9001521c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90002d24:	4b10      	ldr	r3, [pc, #64]	@ (90002d68 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
        : currentPresenter(0),
90002d26:	2100      	movs	r1, #0
        instance = this;
90002d28:	601c      	str	r4, [r3, #0]
      model(m)
90002d2a:	4b10      	ldr	r3, [pc, #64]	@ (90002d6c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
90002d2c:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
90002d2e:	4b10      	ldr	r3, [pc, #64]	@ (90002d70 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
90002d30:	e9c4 3151 	strd	r3, r1, [r4, #324]	@ 0x144
        return instance;
90002d34:	4b0f      	ldr	r3, [pc, #60]	@ (90002d74 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
90002d36:	6818      	ldr	r0, [r3, #0]
90002d38:	e9c4 1153 	strd	r1, r1, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90002d3c:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
90002d3e:	e9c4 114f 	strd	r1, r1, [r4, #316]	@ 0x13c
90002d42:	689b      	ldr	r3, [r3, #8]
      model(m)
90002d44:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90002d48:	4798      	blx	r3
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90002d4a:	f7ff ffd9 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
90002d4e:	f01c fae0 	bl	9001f312 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90002d52:	f7ff ffd5 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
90002d56:	f01c fb57 	bl	9001f408 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90002d5a:	f7ff ffd1 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
90002d5e:	f01c fb5f 	bl	9001f420 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90002d62:	4620      	mov	r0, r4
90002d64:	bd70      	pop	{r4, r5, r6, pc}
90002d66:	bf00      	nop
90002d68:	2001aa94 	.word	0x2001aa94
90002d6c:	9002a9e4 	.word	0x9002a9e4
90002d70:	9002a9cc 	.word	0x9002a9cc
90002d74:	2001aa40 	.word	0x2001aa40

90002d78 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90002d78:	4b06      	ldr	r3, [pc, #24]	@ (90002d94 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
90002d7a:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
90002d7e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
90002d82:	2300      	movs	r3, #0
90002d84:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
90002d88:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90002d8c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
90002d90:	4770      	bx	lr
90002d92:	bf00      	nop
90002d94:	90002bb9 	.word	0x90002bb9

90002d98 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90002d98:	6a40      	ldr	r0, [r0, #36]	@ 0x24
90002d9a:	4770      	bx	lr

90002d9c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90002d9c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90002d9e:	4770      	bx	lr

90002da0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90002da0:	4770      	bx	lr

90002da2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    // Read dataOffset as 16bit, as it may be unaligned
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
90002da2:	880b      	ldrh	r3, [r1, #0]
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
90002da4:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
90002da6:	b29b      	uxth	r3, r3
    const uint8_t* pixels = table[glyph->unicode / 2048];
90002da8:	0ad2      	lsrs	r2, r2, #11
{
90002daa:	b510      	push	{r4, lr}
    offset |= dataOffset[1] << 16;
90002dac:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
90002dae:	69c1      	ldr	r1, [r0, #28]
    offset |= dataOffset[1] << 16;
90002db0:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
    return pixels + offset;
90002db4:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
}
90002db8:	4418      	add	r0, r3
90002dba:	bd10      	pop	{r4, pc}

90002dbc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
90002dbc:	b510      	push	{r4, lr}
90002dbe:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
90002dc0:	b1ba      	cbz	r2, 90002df2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
90002dc2:	7b10      	ldrb	r0, [r2, #12]
90002dc4:	b168      	cbz	r0, 90002de2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90002dc6:	7b53      	ldrb	r3, [r2, #13]
90002dc8:	7ad2      	ldrb	r2, [r2, #11]
90002dca:	021b      	lsls	r3, r3, #8
90002dcc:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90002dd0:	431a      	orrs	r2, r3
90002dd2:	6a23      	ldr	r3, [r4, #32]
90002dd4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
90002dd8:	881a      	ldrh	r2, [r3, #0]
90002dda:	428a      	cmp	r2, r1
90002ddc:	d102      	bne.n	90002de4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
90002dde:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
90002de2:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
90002de4:	d805      	bhi.n	90002df2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90002de6:	3801      	subs	r0, #1
90002de8:	3304      	adds	r3, #4
90002dea:	b280      	uxth	r0, r0
90002dec:	2800      	cmp	r0, #0
90002dee:	d1f3      	bne.n	90002dd8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
90002df0:	e7f7      	b.n	90002de2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
90002df2:	2000      	movs	r0, #0
90002df4:	e7f5      	b.n	90002de2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

90002df6 <_ZN8touchgfx13GeneratedFontD0Ev>:
90002df6:	b510      	push	{r4, lr}
90002df8:	4604      	mov	r4, r0
90002dfa:	212c      	movs	r1, #44	@ 0x2c
90002dfc:	f024 fb90 	bl	90027520 <_ZdlPvj>
90002e00:	4620      	mov	r0, r4
90002e02:	bd10      	pop	{r4, pc}

90002e04 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90002e04:	b530      	push	{r4, r5, lr}
90002e06:	b08b      	sub	sp, #44	@ 0x2c
90002e08:	4604      	mov	r4, r0
      arabicTable(formsTable)
90002e0a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
90002e0e:	9508      	str	r5, [sp, #32]
90002e10:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
90002e14:	9507      	str	r5, [sp, #28]
90002e16:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
90002e1a:	9506      	str	r5, [sp, #24]
90002e1c:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
90002e20:	9505      	str	r5, [sp, #20]
90002e22:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
90002e26:	9504      	str	r5, [sp, #16]
90002e28:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
90002e2c:	9503      	str	r5, [sp, #12]
90002e2e:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
90002e32:	9502      	str	r5, [sp, #8]
90002e34:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
90002e38:	9501      	str	r5, [sp, #4]
90002e3a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
90002e3e:	9500      	str	r5, [sp, #0]
90002e40:	f013 ff36 	bl	90016cb0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
90002e44:	4b06      	ldr	r3, [pc, #24]	@ (90002e60 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
}
90002e46:	4620      	mov	r0, r4
      arabicTable(formsTable)
90002e48:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
90002e4a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
90002e4c:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
90002e4e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90002e50:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90002e52:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90002e54:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
90002e56:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90002e58:	62a3      	str	r3, [r4, #40]	@ 0x28
}
90002e5a:	b00b      	add	sp, #44	@ 0x2c
90002e5c:	bd30      	pop	{r4, r5, pc}
90002e5e:	bf00      	nop
90002e60:	9002aa5c 	.word	0x9002aa5c

90002e64 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
90002e64:	4770      	bx	lr

90002e66 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90002e66:	4770      	bx	lr

90002e68 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90002e68:	4770      	bx	lr

90002e6a <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90002e6a:	4770      	bx	lr

90002e6c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90002e6c:	4770      	bx	lr

90002e6e <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
90002e6e:	4770      	bx	lr

90002e70 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
90002e70:	4770      	bx	lr

90002e72 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
90002e72:	b510      	push	{r4, lr}
90002e74:	4604      	mov	r4, r0
}
90002e76:	21d0      	movs	r1, #208	@ 0xd0
90002e78:	f024 fb52 	bl	90027520 <_ZdlPvj>
90002e7c:	4620      	mov	r0, r4
90002e7e:	bd10      	pop	{r4, pc}

90002e80 <_ZN8touchgfx8Drawable5setXYEss>:
        setX(x);
90002e80:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
90002e82:	b570      	push	{r4, r5, r6, lr}
90002e84:	4604      	mov	r4, r0
        setX(x);
90002e86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
90002e88:	4615      	mov	r5, r2
        setX(x);
90002e8a:	4798      	blx	r3
        setY(y);
90002e8c:	6823      	ldr	r3, [r4, #0]
90002e8e:	4620      	mov	r0, r4
90002e90:	4629      	mov	r1, r5
90002e92:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
90002e94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
90002e98:	4718      	bx	r3

90002e9a <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
90002e9a:	b570      	push	{r4, r5, r6, lr}
90002e9c:	4604      	mov	r4, r0
90002e9e:	461d      	mov	r5, r3
90002ea0:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
90002ea4:	f7ff ffec 	bl	90002e80 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
90002ea8:	6823      	ldr	r3, [r4, #0]
90002eaa:	4629      	mov	r1, r5
90002eac:	4620      	mov	r0, r4
90002eae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90002eb0:	4798      	blx	r3
        setHeight(height);
90002eb2:	6823      	ldr	r3, [r4, #0]
90002eb4:	4631      	mov	r1, r6
90002eb6:	4620      	mov	r0, r4
90002eb8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
90002eba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
90002ebe:	4718      	bx	r3

90002ec0 <_ZN8touchgfx3BoxC1Ev>:
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
90002ec0:	4a09      	ldr	r2, [pc, #36]	@ (90002ee8 <_ZN8touchgfx3BoxC1Ev+0x28>)
          touchable(false),
90002ec2:	f44f 7180 	mov.w	r1, #256	@ 0x100
90002ec6:	6002      	str	r2, [r0, #0]
90002ec8:	2200      	movs	r2, #0
90002eca:	8481      	strh	r1, [r0, #36]	@ 0x24
90002ecc:	21ff      	movs	r1, #255	@ 0xff
        : color(col)
90002ece:	6282      	str	r2, [r0, #40]	@ 0x28
90002ed0:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
        : x(0), y(0), width(0), height(0)
90002ed4:	e9c0 2201 	strd	r2, r2, [r0, #4]
90002ed8:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
90002edc:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
90002ee0:	e9c0 2207 	strd	r2, r2, [r0, #28]
    {
    }
90002ee4:	4770      	bx	lr
90002ee6:	bf00      	nop
90002ee8:	90035a60 	.word	0x90035a60

90002eec <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase()
90002eec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90002ef0:	4604      	mov	r4, r0
90002ef2:	b085      	sub	sp, #20
        : presenter(0)
90002ef4:	2500      	movs	r5, #0
90002ef6:	f014 f8d5 	bl	900170a4 <_ZN8touchgfx6ScreenC1Ev>
90002efa:	4626      	mov	r6, r4
90002efc:	4b33      	ldr	r3, [pc, #204]	@ (90002fcc <_ZN15Screen1ViewBaseC1Ev+0xe0>)
90002efe:	f104 086c 	add.w	r8, r4, #108	@ 0x6c
90002f02:	63e5      	str	r5, [r4, #60]	@ 0x3c
90002f04:	f846 3b40 	str.w	r3, [r6], #64
90002f08:	4630      	mov	r0, r6
90002f0a:	f7ff ffd9 	bl	90002ec0 <_ZN8touchgfx3BoxC1Ev>
90002f0e:	4640      	mov	r0, r8
90002f10:	f7ff ffd6 	bl	90002ec0 <_ZN8touchgfx3BoxC1Ev>
        touchable = touch;
90002f14:	f240 1301 	movw	r3, #257	@ 0x101
    __background.setPosition(0, 0, 480, 272);
90002f18:	f44f 7988 	mov.w	r9, #272	@ 0x110
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
90002f1c:	4a2c      	ldr	r2, [pc, #176]	@ (90002fd0 <_ZN15Screen1ViewBaseC1Ev+0xe4>)
90002f1e:	f8a4 30bc 	strh.w	r3, [r4, #188]	@ 0xbc
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90002f22:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90002f26:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
90002f2a:	4629      	mov	r1, r5
90002f2c:	462a      	mov	r2, r5
90002f2e:	f8a4 30c6 	strh.w	r3, [r4, #198]	@ 0xc6
90002f32:	f8a4 30c8 	strh.w	r3, [r4, #200]	@ 0xc8
90002f36:	4630      	mov	r0, r6
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
90002f38:	f884 30ca 	strb.w	r3, [r4, #202]	@ 0xca
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
90002f3c:	1d27      	adds	r7, r4, #4
90002f3e:	f8a4 30cc 	strh.w	r3, [r4, #204]	@ 0xcc
90002f42:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
90002f46:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
90002f4a:	f884 50c4 	strb.w	r5, [r4, #196]	@ 0xc4
90002f4e:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
90002f52:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
          nextSibling(0),
90002f56:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          cachedAbsX(0),
90002f5a:	e9c4 552d 	strd	r5, r5, [r4, #180]	@ 0xb4
90002f5e:	f8cd 9000 	str.w	r9, [sp]
90002f62:	f7ff ff9a 	bl	90002e9a <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90002f66:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
90002f6a:	4631      	mov	r1, r6
90002f6c:	4638      	mov	r0, r7
90002f6e:	66a3      	str	r3, [r4, #104]	@ 0x68
    toggleButton1.setXY(185, 111);
90002f70:	f104 0698 	add.w	r6, r4, #152	@ 0x98
90002f74:	f00d fa02 	bl	9001037c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 480, 272);
90002f78:	462a      	mov	r2, r5
90002f7a:	4629      	mov	r1, r5
90002f7c:	4640      	mov	r0, r8
90002f7e:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
90002f82:	f8cd 9000 	str.w	r9, [sp]
90002f86:	f7ff ff88 	bl	90002e9a <_ZN8touchgfx8Drawable11setPositionEssss>
90002f8a:	f04f 33ff 	mov.w	r3, #4294967295
90002f8e:	4641      	mov	r1, r8
90002f90:	4638      	mov	r0, r7
90002f92:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
90002f96:	f00d f9f1 	bl	9001037c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    toggleButton1.setXY(185, 111);
90002f9a:	4630      	mov	r0, r6
90002f9c:	226f      	movs	r2, #111	@ 0x6f
90002f9e:	21b9      	movs	r1, #185	@ 0xb9
90002fa0:	f7ff ff6e 	bl	90002e80 <_ZN8touchgfx8Drawable5setXYEss>
90002fa4:	2301      	movs	r3, #1
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
90002fa6:	aa03      	add	r2, sp, #12
90002fa8:	a902      	add	r1, sp, #8
90002faa:	4630      	mov	r0, r6
        originalPressed = bitmapPressed;
90002fac:	f8a4 30cc 	strh.w	r3, [r4, #204]	@ 0xcc
90002fb0:	f8ad 300c 	strh.w	r3, [sp, #12]
90002fb4:	f8ad 5008 	strh.w	r5, [sp, #8]
        Button::setBitmaps(bitmapReleased, bitmapPressed);
90002fb8:	f010 f8fe 	bl	900131b8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
90002fbc:	4638      	mov	r0, r7
90002fbe:	4631      	mov	r1, r6
90002fc0:	f00d f9dc 	bl	9001037c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90002fc4:	4620      	mov	r0, r4
90002fc6:	b005      	add	sp, #20
90002fc8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90002fcc:	9002aac4 	.word	0x9002aac4
90002fd0:	900359ec 	.word	0x900359ec

90002fd4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90002fd4:	4770      	bx	lr
	...

90002fd8 <_Z23getFont_verdana_10_4bppv>:
{
90002fd8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90002fda:	4d16      	ldr	r5, [pc, #88]	@ (90003034 <_Z23getFont_verdana_10_4bppv+0x5c>)
{
90002fdc:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90002fde:	682c      	ldr	r4, [r5, #0]
90002fe0:	f3bf 8f5b 	dmb	ish
90002fe4:	f014 0401 	ands.w	r4, r4, #1
90002fe8:	d120      	bne.n	9000302c <_Z23getFont_verdana_10_4bppv+0x54>
90002fea:	4628      	mov	r0, r5
90002fec:	f024 fa9a 	bl	90027524 <__cxa_guard_acquire>
90002ff0:	b1e0      	cbz	r0, 9000302c <_Z23getFont_verdana_10_4bppv+0x54>
90002ff2:	233f      	movs	r3, #63	@ 0x3f
90002ff4:	2201      	movs	r2, #1
90002ff6:	4910      	ldr	r1, [pc, #64]	@ (90003038 <_Z23getFont_verdana_10_4bppv+0x60>)
90002ff8:	9309      	str	r3, [sp, #36]	@ 0x24
90002ffa:	4b10      	ldr	r3, [pc, #64]	@ (9000303c <_Z23getFont_verdana_10_4bppv+0x64>)
90002ffc:	4810      	ldr	r0, [pc, #64]	@ (90003040 <_Z23getFont_verdana_10_4bppv+0x68>)
90002ffe:	9308      	str	r3, [sp, #32]
90003000:	4b10      	ldr	r3, [pc, #64]	@ (90003044 <_Z23getFont_verdana_10_4bppv+0x6c>)
90003002:	940a      	str	r4, [sp, #40]	@ 0x28
90003004:	9405      	str	r4, [sp, #20]
90003006:	e9cd 4306 	strd	r4, r3, [sp, #24]
9000300a:	2304      	movs	r3, #4
9000300c:	e9cd 3203 	strd	r3, r2, [sp, #12]
90003010:	230a      	movs	r3, #10
90003012:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90003016:	9300      	str	r3, [sp, #0]
90003018:	e9cd 4401 	strd	r4, r4, [sp, #4]
9000301c:	f7ff fef2 	bl	90002e04 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90003020:	4809      	ldr	r0, [pc, #36]	@ (90003048 <_Z23getFont_verdana_10_4bppv+0x70>)
90003022:	f025 f9d7 	bl	900283d4 <atexit>
90003026:	4628      	mov	r0, r5
90003028:	f024 fa88 	bl	9002753c <__cxa_guard_release>
    return verdana_10_4bpp;
}
9000302c:	4804      	ldr	r0, [pc, #16]	@ (90003040 <_Z23getFont_verdana_10_4bppv+0x68>)
9000302e:	b00f      	add	sp, #60	@ 0x3c
90003030:	bd30      	pop	{r4, r5, pc}
90003032:	bf00      	nop
90003034:	20002f40 	.word	0x20002f40
90003038:	90100178 	.word	0x90100178
9000303c:	90036324 	.word	0x90036324
90003040:	20002f44 	.word	0x20002f44
90003044:	90036330 	.word	0x90036330
90003048:	90002fd5 	.word	0x90002fd5

9000304c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000304c:	4770      	bx	lr
	...

90003050 <_Z23getFont_verdana_20_4bppv>:
{
90003050:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90003052:	4d16      	ldr	r5, [pc, #88]	@ (900030ac <_Z23getFont_verdana_20_4bppv+0x5c>)
{
90003054:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90003056:	682c      	ldr	r4, [r5, #0]
90003058:	f3bf 8f5b 	dmb	ish
9000305c:	f014 0401 	ands.w	r4, r4, #1
90003060:	d120      	bne.n	900030a4 <_Z23getFont_verdana_20_4bppv+0x54>
90003062:	4628      	mov	r0, r5
90003064:	f024 fa5e 	bl	90027524 <__cxa_guard_acquire>
90003068:	b1e0      	cbz	r0, 900030a4 <_Z23getFont_verdana_20_4bppv+0x54>
9000306a:	233f      	movs	r3, #63	@ 0x3f
9000306c:	2201      	movs	r2, #1
9000306e:	4910      	ldr	r1, [pc, #64]	@ (900030b0 <_Z23getFont_verdana_20_4bppv+0x60>)
90003070:	9309      	str	r3, [sp, #36]	@ 0x24
90003072:	4b10      	ldr	r3, [pc, #64]	@ (900030b4 <_Z23getFont_verdana_20_4bppv+0x64>)
90003074:	4810      	ldr	r0, [pc, #64]	@ (900030b8 <_Z23getFont_verdana_20_4bppv+0x68>)
90003076:	9308      	str	r3, [sp, #32]
90003078:	4b10      	ldr	r3, [pc, #64]	@ (900030bc <_Z23getFont_verdana_20_4bppv+0x6c>)
9000307a:	940a      	str	r4, [sp, #40]	@ 0x28
9000307c:	9405      	str	r4, [sp, #20]
9000307e:	e9cd 4306 	strd	r4, r3, [sp, #24]
90003082:	2304      	movs	r3, #4
90003084:	e9cd 3203 	strd	r3, r2, [sp, #12]
90003088:	2314      	movs	r3, #20
9000308a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
9000308e:	9300      	str	r3, [sp, #0]
90003090:	e9cd 4401 	strd	r4, r4, [sp, #4]
90003094:	f7ff feb6 	bl	90002e04 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90003098:	4809      	ldr	r0, [pc, #36]	@ (900030c0 <_Z23getFont_verdana_20_4bppv+0x70>)
9000309a:	f025 f99b 	bl	900283d4 <atexit>
9000309e:	4628      	mov	r0, r5
900030a0:	f024 fa4c 	bl	9002753c <__cxa_guard_release>
    return verdana_20_4bpp;
}
900030a4:	4804      	ldr	r0, [pc, #16]	@ (900030b8 <_Z23getFont_verdana_20_4bppv+0x68>)
900030a6:	b00f      	add	sp, #60	@ 0x3c
900030a8:	bd30      	pop	{r4, r5, pc}
900030aa:	bf00      	nop
900030ac:	20002f70 	.word	0x20002f70
900030b0:	90100188 	.word	0x90100188
900030b4:	90036328 	.word	0x90036328
900030b8:	20002f74 	.word	0x20002f74
900030bc:	90036334 	.word	0x90036334
900030c0:	9000304d 	.word	0x9000304d

900030c4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900030c4:	4770      	bx	lr
	...

900030c8 <_Z23getFont_verdana_40_4bppv>:
{
900030c8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900030ca:	4d16      	ldr	r5, [pc, #88]	@ (90003124 <_Z23getFont_verdana_40_4bppv+0x5c>)
{
900030cc:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900030ce:	682c      	ldr	r4, [r5, #0]
900030d0:	f3bf 8f5b 	dmb	ish
900030d4:	f014 0401 	ands.w	r4, r4, #1
900030d8:	d120      	bne.n	9000311c <_Z23getFont_verdana_40_4bppv+0x54>
900030da:	4628      	mov	r0, r5
900030dc:	f024 fa22 	bl	90027524 <__cxa_guard_acquire>
900030e0:	b1e0      	cbz	r0, 9000311c <_Z23getFont_verdana_40_4bppv+0x54>
900030e2:	233f      	movs	r3, #63	@ 0x3f
900030e4:	2201      	movs	r2, #1
900030e6:	4910      	ldr	r1, [pc, #64]	@ (90003128 <_Z23getFont_verdana_40_4bppv+0x60>)
900030e8:	9309      	str	r3, [sp, #36]	@ 0x24
900030ea:	4b10      	ldr	r3, [pc, #64]	@ (9000312c <_Z23getFont_verdana_40_4bppv+0x64>)
900030ec:	4810      	ldr	r0, [pc, #64]	@ (90003130 <_Z23getFont_verdana_40_4bppv+0x68>)
900030ee:	9308      	str	r3, [sp, #32]
900030f0:	4b10      	ldr	r3, [pc, #64]	@ (90003134 <_Z23getFont_verdana_40_4bppv+0x6c>)
900030f2:	940a      	str	r4, [sp, #40]	@ 0x28
900030f4:	9405      	str	r4, [sp, #20]
900030f6:	e9cd 4306 	strd	r4, r3, [sp, #24]
900030fa:	2304      	movs	r3, #4
900030fc:	e9cd 3203 	strd	r3, r2, [sp, #12]
90003100:	2328      	movs	r3, #40	@ 0x28
90003102:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90003106:	9300      	str	r3, [sp, #0]
90003108:	e9cd 4401 	strd	r4, r4, [sp, #4]
9000310c:	f7ff fe7a 	bl	90002e04 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90003110:	4809      	ldr	r0, [pc, #36]	@ (90003138 <_Z23getFont_verdana_40_4bppv+0x70>)
90003112:	f025 f95f 	bl	900283d4 <atexit>
90003116:	4628      	mov	r0, r5
90003118:	f024 fa10 	bl	9002753c <__cxa_guard_release>
    return verdana_40_4bpp;
}
9000311c:	4804      	ldr	r0, [pc, #16]	@ (90003130 <_Z23getFont_verdana_40_4bppv+0x68>)
9000311e:	b00f      	add	sp, #60	@ 0x3c
90003120:	bd30      	pop	{r4, r5, pc}
90003122:	bf00      	nop
90003124:	20002fa0 	.word	0x20002fa0
90003128:	90100198 	.word	0x90100198
9000312c:	9003632c 	.word	0x9003632c
90003130:	20002fa4 	.word	0x20002fa4
90003134:	90036338 	.word	0x90036338
90003138:	900030c5 	.word	0x900030c5

9000313c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
9000313c:	2000      	movs	r0, #0
9000313e:	4770      	bx	lr

90003140 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
90003140:	2000      	movs	r0, #0
90003142:	4770      	bx	lr

90003144 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90003144:	b40e      	push	{r1, r2, r3}
90003146:	b503      	push	{r0, r1, lr}
90003148:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
9000314a:	2100      	movs	r1, #0
{
9000314c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
90003150:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90003152:	f013 f82b 	bl	900161ac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90003156:	b002      	add	sp, #8
90003158:	f85d eb04 	ldr.w	lr, [sp], #4
9000315c:	b003      	add	sp, #12
9000315e:	4770      	bx	lr

90003160 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90003160:	b40c      	push	{r2, r3}
90003162:	b507      	push	{r0, r1, r2, lr}
90003164:	ab04      	add	r3, sp, #16
90003166:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
9000316a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
9000316c:	f013 f81e 	bl	900161ac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90003170:	b003      	add	sp, #12
90003172:	f85d eb04 	ldr.w	lr, [sp], #4
90003176:	b002      	add	sp, #8
90003178:	4770      	bx	lr
	...

9000317c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
9000317c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
9000317e:	b510      	push	{r4, lr}
90003180:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
90003182:	b373      	cbz	r3, 900031e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
90003184:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
90003186:	b92b      	cbnz	r3, 90003194 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
90003188:	4b18      	ldr	r3, [pc, #96]	@ (900031ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
9000318a:	21c5      	movs	r1, #197	@ 0xc5
9000318c:	4a18      	ldr	r2, [pc, #96]	@ (900031f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
9000318e:	4819      	ldr	r0, [pc, #100]	@ (900031f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
90003190:	f025 f902 	bl	90028398 <__assert_func>
            return buffer[pos];
90003194:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90003196:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9000319a:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
9000319c:	b30b      	cbz	r3, 900031e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
9000319e:	f014 fe27 	bl	90017df0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
900031a2:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
900031a4:	2b01      	cmp	r3, #1
900031a6:	d803      	bhi.n	900031b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
900031a8:	4b13      	ldr	r3, [pc, #76]	@ (900031f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
900031aa:	21cb      	movs	r1, #203	@ 0xcb
900031ac:	4a13      	ldr	r2, [pc, #76]	@ (900031fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
900031ae:	e7ee      	b.n	9000318e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
900031b0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
900031b2:	f640 103f 	movw	r0, #2367	@ 0x93f
900031b6:	1c53      	adds	r3, r2, #1
900031b8:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
900031ba:	2b09      	cmp	r3, #9
900031bc:	4619      	mov	r1, r3
900031be:	bf88      	it	hi
900031c0:	f1a3 010a 	subhi.w	r1, r3, #10
900031c4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
900031c8:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
900031ca:	4281      	cmp	r1, r0
900031cc:	d109      	bne.n	900031e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
900031ce:	2b0a      	cmp	r3, #10
900031d0:	eb04 0242 	add.w	r2, r4, r2, lsl #1
900031d4:	bf28      	it	cs
900031d6:	2300      	movcs	r3, #0
            return buffer[pos];
900031d8:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
900031da:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900031de:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
900031e0:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
900031e2:	4620      	mov	r0, r4
}
900031e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
900031e8:	f014 bd04 	b.w	90017bf4 <_ZN8touchgfx12TextProvider11getNextCharEv>
900031ec:	90029ea7 	.word	0x90029ea7
900031f0:	90029eb0 	.word	0x90029eb0
900031f4:	90029f5b 	.word	0x90029f5b
900031f8:	90029fa5 	.word	0x90029fa5
900031fc:	90029fb3 	.word	0x90029fb3

90003200 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90003200:	f014 bcc1 	b.w	90017b86 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90003204 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
90003204:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90003206:	bb18      	cbnz	r0, 90003250 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
90003208:	4b12      	ldr	r3, [pc, #72]	@ (90003254 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
9000320a:	4813      	ldr	r0, [pc, #76]	@ (90003258 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
9000320c:	681c      	ldr	r4, [r3, #0]
9000320e:	4913      	ldr	r1, [pc, #76]	@ (9000325c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
90003210:	b1b4      	cbz	r4, 90003240 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90003212:	6822      	ldr	r2, [r4, #0]
90003214:	4422      	add	r2, r4
90003216:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90003218:	6862      	ldr	r2, [r4, #4]
9000321a:	4422      	add	r2, r4
9000321c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
9000321e:	68a2      	ldr	r2, [r4, #8]
90003220:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
90003222:	4b0f      	ldr	r3, [pc, #60]	@ (90003260 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90003224:	2200      	movs	r2, #0
90003226:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90003228:	f000 f82a 	bl	90003280 <_ZN17TypedTextDatabase8getFontsEv>
9000322c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
9000322e:	f000 f825 	bl	9000327c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
90003232:	4b0c      	ldr	r3, [pc, #48]	@ (90003264 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90003234:	601c      	str	r4, [r3, #0]
        fonts = f;
90003236:	4b0c      	ldr	r3, [pc, #48]	@ (90003268 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
90003238:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
9000323a:	4b0c      	ldr	r3, [pc, #48]	@ (9000326c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
9000323c:	8018      	strh	r0, [r3, #0]
    }
}
9000323e:	e007      	b.n	90003250 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
90003240:	4b0b      	ldr	r3, [pc, #44]	@ (90003270 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
90003242:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90003244:	4b0b      	ldr	r3, [pc, #44]	@ (90003274 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
90003246:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
90003248:	4b0b      	ldr	r3, [pc, #44]	@ (90003278 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
9000324a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
9000324c:	2c00      	cmp	r4, #0
9000324e:	d1e8      	bne.n	90003222 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90003250:	bd38      	pop	{r3, r4, r5, pc}
90003252:	bf00      	nop
90003254:	20002fdc 	.word	0x20002fdc
90003258:	20002fd4 	.word	0x20002fd4
9000325c:	20002fd0 	.word	0x20002fd0
90003260:	20002fd8 	.word	0x20002fd8
90003264:	2001aa98 	.word	0x2001aa98
90003268:	2001aaa0 	.word	0x2001aaa0
9000326c:	2001aa9c 	.word	0x2001aa9c
90003270:	901001ac 	.word	0x901001ac
90003274:	901001a8 	.word	0x901001a8
90003278:	901001b0 	.word	0x901001b0

9000327c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
9000327c:	2000      	movs	r0, #0
9000327e:	4770      	bx	lr

90003280 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90003280:	4800      	ldr	r0, [pc, #0]	@ (90003284 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
90003282:	4770      	bx	lr
90003284:	20002fe0 	.word	0x20002fe0

90003288 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90003288:	b510      	push	{r4, lr}
};
9000328a:	4c05      	ldr	r4, [pc, #20]	@ (900032a0 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
9000328c:	f7ff fee0 	bl	90003050 <_Z23getFont_verdana_20_4bppv>
};
90003290:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
90003292:	f7ff ff19 	bl	900030c8 <_Z23getFont_verdana_40_4bppv>
};
90003296:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
90003298:	f7ff fe9e 	bl	90002fd8 <_Z23getFont_verdana_10_4bppv>
};
9000329c:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
9000329e:	bd10      	pop	{r4, pc}
900032a0:	20002fe0 	.word	0x20002fe0

900032a4 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
900032a4:	b510      	push	{r4, lr}
    pointArray = 0;
900032a6:	2400      	movs	r4, #0
900032a8:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
900032aa:	600c      	str	r4, [r1, #0]
    commandArray = 0;
900032ac:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
900032ae:	601c      	str	r4, [r3, #0]
}
900032b0:	bd10      	pop	{r4, pc}

900032b2 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
900032b2:	4770      	bx	lr

900032b4 <_ZN19FrontendApplicationD0Ev>:
900032b4:	b510      	push	{r4, lr}
900032b6:	4604      	mov	r4, r0
900032b8:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
900032bc:	f024 f930 	bl	90027520 <_ZdlPvj>
900032c0:	4620      	mov	r0, r4
900032c2:	bd10      	pop	{r4, pc}

900032c4 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
900032c4:	b510      	push	{r4, lr}
900032c6:	4604      	mov	r4, r0
    {
        model.tick();
900032c8:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
900032cc:	f000 f813 	bl	900032f6 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
900032d0:	4620      	mov	r0, r4
    }
900032d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
900032d6:	f011 bf5d 	b.w	90015194 <_ZN8touchgfx11Application15handleTickEventEv>
	...

900032dc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
900032dc:	b510      	push	{r4, lr}
900032de:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
900032e0:	f7ff fd1a 	bl	90002d18 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
900032e4:	4b01      	ldr	r3, [pc, #4]	@ (900032ec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
900032e6:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
900032e8:	6023      	str	r3, [r4, #0]
}
900032ea:	bd10      	pop	{r4, pc}
900032ec:	9002aaf8 	.word	0x9002aaf8

900032f0 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
900032f0:	2200      	movs	r2, #0
900032f2:	6002      	str	r2, [r0, #0]
{

}
900032f4:	4770      	bx	lr

900032f6 <_ZN5Model4tickEv>:

void Model::tick()
{

}
900032f6:	4770      	bx	lr

900032f8 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
900032f8:	4770      	bx	lr

900032fa <_ZThn4_N16Screen1PresenterD1Ev>:
900032fa:	3804      	subs	r0, #4
900032fc:	4770      	bx	lr

900032fe <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
900032fe:	4770      	bx	lr

90003300 <_ZN16Screen1PresenterD0Ev>:
90003300:	b510      	push	{r4, lr}
90003302:	4604      	mov	r4, r0
90003304:	2110      	movs	r1, #16
90003306:	f024 f90b 	bl	90027520 <_ZdlPvj>
9000330a:	4620      	mov	r0, r4
9000330c:	bd10      	pop	{r4, pc}

9000330e <_ZThn4_N16Screen1PresenterD0Ev>:
9000330e:	f1a0 0004 	sub.w	r0, r0, #4
90003312:	e7f5      	b.n	90003300 <_ZN16Screen1PresenterD0Ev>

90003314 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
90003314:	2200      	movs	r2, #0
    : view(v)
90003316:	60c1      	str	r1, [r0, #12]
90003318:	6082      	str	r2, [r0, #8]
9000331a:	4a02      	ldr	r2, [pc, #8]	@ (90003324 <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
9000331c:	6002      	str	r2, [r0, #0]
9000331e:	3218      	adds	r2, #24
90003320:	6042      	str	r2, [r0, #4]
}
90003322:	4770      	bx	lr
90003324:	9002ab4c 	.word	0x9002ab4c

90003328 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
90003328:	4770      	bx	lr
	...

9000332c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
9000332c:	4b03      	ldr	r3, [pc, #12]	@ (9000333c <_ZN11Screen1ViewD1Ev+0x10>)
9000332e:	b510      	push	{r4, lr}
90003330:	4604      	mov	r4, r0
90003332:	6003      	str	r3, [r0, #0]
90003334:	f7ff fd9b 	bl	90002e6e <_ZN15Screen1ViewBaseD1Ev>
90003338:	4620      	mov	r0, r4
9000333a:	bd10      	pop	{r4, pc}
9000333c:	9002ab74 	.word	0x9002ab74

90003340 <_ZN11Screen1ViewD0Ev>:
90003340:	b510      	push	{r4, lr}
90003342:	4604      	mov	r4, r0
90003344:	f7ff fff2 	bl	9000332c <_ZN11Screen1ViewD1Ev>
90003348:	21d0      	movs	r1, #208	@ 0xd0
9000334a:	4620      	mov	r0, r4
9000334c:	f024 f8e8 	bl	90027520 <_ZdlPvj>
90003350:	4620      	mov	r0, r4
90003352:	bd10      	pop	{r4, pc}

90003354 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
90003354:	b510      	push	{r4, lr}
90003356:	4604      	mov	r4, r0
90003358:	f7ff fdc8 	bl	90002eec <_ZN15Screen1ViewBaseC1Ev>
9000335c:	4b01      	ldr	r3, [pc, #4]	@ (90003364 <_ZN11Screen1ViewC1Ev+0x10>)
}
9000335e:	4620      	mov	r0, r4
Screen1View::Screen1View()
90003360:	6023      	str	r3, [r4, #0]
}
90003362:	bd10      	pop	{r4, pc}
90003364:	9002ab74 	.word	0x9002ab74

90003368 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
90003368:	f7ff bd82 	b.w	90002e70 <_ZN15Screen1ViewBase11setupScreenEv>

9000336c <ft5336_Reset>:
  */
void ft5336_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT5336 IC */
}
9000336c:	4770      	bx	lr

9000336e <ft5336_TS_ITStatus>:
  */
uint8_t ft5336_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT5336 */
  return 0;
}
9000336e:	2000      	movs	r0, #0
90003370:	4770      	bx	lr
	...

90003374 <ft5336_TS_DetectTouch>:
{
90003374:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
90003376:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
90003378:	2102      	movs	r1, #2
9000337a:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
9000337c:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
90003380:	f000 fa08 	bl	90003794 <TS_IO_Read>
90003384:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT5336_TD_STAT_MASK;
90003388:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000338c:	f003 030f 	and.w	r3, r3, #15
90003390:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT5336_MAX_DETECTABLE_TOUCH)
90003394:	f89d 3007 	ldrb.w	r3, [sp, #7]
90003398:	2b05      	cmp	r3, #5
9000339a:	d901      	bls.n	900033a0 <ft5336_TS_DetectTouch+0x2c>
    nbTouch = 0;
9000339c:	f88d 4007 	strb.w	r4, [sp, #7]
  ft5336_handle.currActiveTouchNb = nbTouch;
900033a0:	f89d 2007 	ldrb.w	r2, [sp, #7]
900033a4:	4b03      	ldr	r3, [pc, #12]	@ (900033b4 <ft5336_TS_DetectTouch+0x40>)
  return(nbTouch);
900033a6:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft5336_handle.currActiveTouchNb = nbTouch;
900033aa:	705a      	strb	r2, [r3, #1]
  ft5336_handle.currActiveTouchIdx = 0;
900033ac:	2200      	movs	r2, #0
900033ae:	709a      	strb	r2, [r3, #2]
}
900033b0:	b002      	add	sp, #8
900033b2:	bd10      	pop	{r4, pc}
900033b4:	20002fee 	.word	0x20002fee

900033b8 <ft5336_TS_GetXY>:
{
900033b8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
900033bc:	4c2f      	ldr	r4, [pc, #188]	@ (9000347c <ft5336_TS_GetXY+0xc4>)
{
900033be:	4615      	mov	r5, r2
  volatile uint8_t ucReadData = 0;
900033c0:	f04f 0800 	mov.w	r8, #0
{
900033c4:	460f      	mov	r7, r1
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
900033c6:	78a3      	ldrb	r3, [r4, #2]
900033c8:	7862      	ldrb	r2, [r4, #1]
  volatile uint8_t ucReadData = 0;
900033ca:	f88d 8007 	strb.w	r8, [sp, #7]
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
900033ce:	429a      	cmp	r2, r3
900033d0:	d94d      	bls.n	9000346e <ft5336_TS_GetXY+0xb6>
    switch(ft5336_handle.currActiveTouchIdx)
900033d2:	2b09      	cmp	r3, #9
900033d4:	d84e      	bhi.n	90003474 <ft5336_TS_GetXY+0xbc>
900033d6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
900033da:	005b      	lsls	r3, r3, #1
900033dc:	b2db      	uxtb	r3, r3
900033de:	1d19      	adds	r1, r3, #4
900033e0:	f103 0b03 	add.w	fp, r3, #3
900033e4:	f103 0a06 	add.w	sl, r3, #6
900033e8:	3305      	adds	r3, #5
900033ea:	b2c9      	uxtb	r1, r1
900033ec:	fa5f fb8b 	uxtb.w	fp, fp
900033f0:	fa5f fa8a 	uxtb.w	sl, sl
900033f4:	fa5f f883 	uxtb.w	r8, r3
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
900033f8:	b2c6      	uxtb	r6, r0
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
900033fa:	f8df 9084 	ldr.w	r9, [pc, #132]	@ 90003480 <ft5336_TS_GetXY+0xc8>
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
900033fe:	4630      	mov	r0, r6
90003400:	f000 f9c8 	bl	90003794 <TS_IO_Read>
90003404:	f88d 0007 	strb.w	r0, [sp, #7]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
90003408:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
9000340c:	4659      	mov	r1, fp
9000340e:	4630      	mov	r0, r6
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
90003410:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
90003414:	f000 f9be 	bl	90003794 <TS_IO_Read>
90003418:	f88d 0007 	strb.w	r0, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
9000341c:	4651      	mov	r1, sl
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
9000341e:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
90003422:	4630      	mov	r0, r6
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
90003424:	f8b9 2000 	ldrh.w	r2, [r9]
90003428:	021b      	lsls	r3, r3, #8
9000342a:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
9000342e:	4313      	orrs	r3, r2
    *X = coord;
90003430:	803b      	strh	r3, [r7, #0]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
90003432:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
90003436:	f000 f9ad 	bl	90003794 <TS_IO_Read>
9000343a:	f88d 0007 	strb.w	r0, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
9000343e:	4641      	mov	r1, r8
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
90003440:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
90003444:	4630      	mov	r0, r6
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
90003446:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
9000344a:	f000 f9a3 	bl	90003794 <TS_IO_Read>
9000344e:	f88d 0007 	strb.w	r0, [sp, #7]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
90003452:	f89d 3007 	ldrb.w	r3, [sp, #7]
90003456:	f8b9 2000 	ldrh.w	r2, [r9]
9000345a:	021b      	lsls	r3, r3, #8
9000345c:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
90003460:	4313      	orrs	r3, r2
90003462:	f8a9 3000 	strh.w	r3, [r9]
    *Y = coord;
90003466:	802b      	strh	r3, [r5, #0]
    ft5336_handle.currActiveTouchIdx++; /* next call will work on next touch */
90003468:	78a3      	ldrb	r3, [r4, #2]
9000346a:	3301      	adds	r3, #1
9000346c:	70a3      	strb	r3, [r4, #2]
}
9000346e:	b003      	add	sp, #12
90003470:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
90003474:	46c2      	mov	sl, r8
90003476:	46c3      	mov	fp, r8
90003478:	4641      	mov	r1, r8
9000347a:	e7bd      	b.n	900033f8 <ft5336_TS_GetXY+0x40>
9000347c:	20002fee 	.word	0x20002fee
90003480:	20002fec 	.word	0x20002fec

90003484 <ft5336_TS_EnableIT>:
   TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
90003484:	2201      	movs	r2, #1
90003486:	21a4      	movs	r1, #164	@ 0xa4
90003488:	b2c0      	uxtb	r0, r0
9000348a:	f000 b971 	b.w	90003770 <TS_IO_Write>

9000348e <ft5336_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
9000348e:	2200      	movs	r2, #0
90003490:	21a4      	movs	r1, #164	@ 0xa4
90003492:	b2c0      	uxtb	r0, r0
90003494:	f000 b96c 	b.w	90003770 <TS_IO_Write>

90003498 <ft5336_TS_Start>:
  ft5336_TS_DisableIT(DeviceAddr);
90003498:	f7ff bff9 	b.w	9000348e <ft5336_TS_DisableIT>

9000349c <ft5336_Init>:
{
9000349c:	b510      	push	{r4, lr}
  * @param  None.
  * @retval : I2C initialization status.
  */
static uint8_t ft5336_Get_I2C_InitializedStatus(void)
{
  return(ft5336_handle.i2cInitialized);
9000349e:	4c05      	ldr	r4, [pc, #20]	@ (900034b4 <ft5336_Init+0x18>)
  TS_IO_Delay(200);
900034a0:	20c8      	movs	r0, #200	@ 0xc8
900034a2:	f000 f98d 	bl	900037c0 <TS_IO_Delay>
  * @param  None.
  * @retval : None.
  */
static void ft5336_I2C_InitializeIfRequired(void)
{
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
900034a6:	7823      	ldrb	r3, [r4, #0]
900034a8:	b91b      	cbnz	r3, 900034b2 <ft5336_Init+0x16>
  {
    /* Initialize TS IO BUS layer (I2C) */
    TS_IO_Init();
900034aa:	f000 f95f 	bl	9000376c <TS_IO_Init>

    /* Set state to initialized */
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
900034ae:	2301      	movs	r3, #1
900034b0:	7023      	strb	r3, [r4, #0]
}
900034b2:	bd10      	pop	{r4, pc}
900034b4:	20002fee 	.word	0x20002fee

900034b8 <ft5336_TS_ClearIT>:
void ft5336_TS_ClearIT(uint16_t DeviceAddr)
900034b8:	4770      	bx	lr
	...

900034bc <ft5336_ReadID>:
{
900034bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
  volatile uint8_t ucReadId = 0;
900034be:	2300      	movs	r3, #0
  return(ft5336_handle.i2cInitialized);
900034c0:	4c0f      	ldr	r4, [pc, #60]	@ (90003500 <ft5336_ReadID+0x44>)
{
900034c2:	4605      	mov	r5, r0
  volatile uint8_t ucReadId = 0;
900034c4:	f88d 3007 	strb.w	r3, [sp, #7]
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
900034c8:	7823      	ldrb	r3, [r4, #0]
900034ca:	b91b      	cbnz	r3, 900034d4 <ft5336_ReadID+0x18>
    TS_IO_Init();
900034cc:	f000 f94e 	bl	9000376c <TS_IO_Init>
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
900034d0:	2301      	movs	r3, #1
900034d2:	7023      	strb	r3, [r4, #0]
{
900034d4:	2403      	movs	r4, #3
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
900034d6:	b2ed      	uxtb	r5, r5
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
900034d8:	3c01      	subs	r4, #1
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
900034da:	21a8      	movs	r1, #168	@ 0xa8
900034dc:	4628      	mov	r0, r5
900034de:	f000 f959 	bl	90003794 <TS_IO_Read>
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
900034e2:	f014 04ff 	ands.w	r4, r4, #255	@ 0xff
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
900034e6:	f88d 0007 	strb.w	r0, [sp, #7]
    if(ucReadId == FT5336_ID_VALUE)
900034ea:	f89d 3007 	ldrb.w	r3, [sp, #7]
900034ee:	b2db      	uxtb	r3, r3
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
900034f0:	d001      	beq.n	900034f6 <ft5336_ReadID+0x3a>
900034f2:	2b51      	cmp	r3, #81	@ 0x51
900034f4:	d1f0      	bne.n	900034d8 <ft5336_ReadID+0x1c>
  return (ucReadId);
900034f6:	f89d 0007 	ldrb.w	r0, [sp, #7]
}
900034fa:	b003      	add	sp, #12
900034fc:	bd30      	pop	{r4, r5, pc}
900034fe:	bf00      	nop
90003500:	20002fee 	.word	0x20002fee

90003504 <ft5336_TS_GetGestureID>:
  volatile uint8_t ucReadData = 0;
90003504:	2300      	movs	r3, #0
{
90003506:	b513      	push	{r0, r1, r4, lr}
90003508:	460c      	mov	r4, r1
  ucReadData = TS_IO_Read(DeviceAddr, FT5336_GEST_ID_REG);
9000350a:	b2c0      	uxtb	r0, r0
9000350c:	2101      	movs	r1, #1
  volatile uint8_t ucReadData = 0;
9000350e:	f88d 3007 	strb.w	r3, [sp, #7]
  ucReadData = TS_IO_Read(DeviceAddr, FT5336_GEST_ID_REG);
90003512:	f000 f93f 	bl	90003794 <TS_IO_Read>
90003516:	f88d 0007 	strb.w	r0, [sp, #7]
  * pGestureId = ucReadData;
9000351a:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000351e:	6023      	str	r3, [r4, #0]
}
90003520:	b002      	add	sp, #8
90003522:	bd10      	pop	{r4, pc}

90003524 <ft5336_TS_GetTouchInfo>:
{
90003524:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90003528:	461d      	mov	r5, r3
  if(touchIdx < ft5336_handle.currActiveTouchNb)
9000352a:	4b1d      	ldr	r3, [pc, #116]	@ (900035a0 <ft5336_TS_GetTouchInfo+0x7c>)
  volatile uint8_t ucReadData = 0;
9000352c:	2400      	movs	r4, #0
{
9000352e:	4616      	mov	r6, r2
  if(touchIdx < ft5336_handle.currActiveTouchNb)
90003530:	785b      	ldrb	r3, [r3, #1]
  volatile uint8_t ucReadData = 0;
90003532:	f88d 4007 	strb.w	r4, [sp, #7]
  if(touchIdx < ft5336_handle.currActiveTouchNb)
90003536:	428b      	cmp	r3, r1
90003538:	d92c      	bls.n	90003594 <ft5336_TS_GetTouchInfo+0x70>
    switch(touchIdx)
9000353a:	2909      	cmp	r1, #9
9000353c:	d82d      	bhi.n	9000359a <ft5336_TS_GetTouchInfo+0x76>
9000353e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90003542:	004c      	lsls	r4, r1, #1
90003544:	b2e4      	uxtb	r4, r4
90003546:	1ce1      	adds	r1, r4, #3
90003548:	1de7      	adds	r7, r4, #7
9000354a:	3408      	adds	r4, #8
9000354c:	b2c9      	uxtb	r1, r1
9000354e:	b2ff      	uxtb	r7, r7
90003550:	b2e4      	uxtb	r4, r4
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
90003552:	fa5f f880 	uxtb.w	r8, r0
90003556:	4640      	mov	r0, r8
90003558:	f000 f91c 	bl	90003794 <TS_IO_Read>
9000355c:	f88d 0007 	strb.w	r0, [sp, #7]
    * pEvent = (ucReadData & FT5336_TOUCH_EVT_FLAG_MASK) >> FT5336_TOUCH_EVT_FLAG_SHIFT;
90003560:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressPWeight);
90003564:	4639      	mov	r1, r7
    * pEvent = (ucReadData & FT5336_TOUCH_EVT_FLAG_MASK) >> FT5336_TOUCH_EVT_FLAG_SHIFT;
90003566:	9a08      	ldr	r2, [sp, #32]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressPWeight);
90003568:	4640      	mov	r0, r8
    * pEvent = (ucReadData & FT5336_TOUCH_EVT_FLAG_MASK) >> FT5336_TOUCH_EVT_FLAG_SHIFT;
9000356a:	099b      	lsrs	r3, r3, #6
9000356c:	6013      	str	r3, [r2, #0]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressPWeight);
9000356e:	f000 f911 	bl	90003794 <TS_IO_Read>
90003572:	f88d 0007 	strb.w	r0, [sp, #7]
    * pWeight = (ucReadData & FT5336_TOUCH_WEIGHT_MASK) >> FT5336_TOUCH_WEIGHT_SHIFT;
90003576:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressPMisc);
9000357a:	4621      	mov	r1, r4
9000357c:	4640      	mov	r0, r8
    * pWeight = (ucReadData & FT5336_TOUCH_WEIGHT_MASK) >> FT5336_TOUCH_WEIGHT_SHIFT;
9000357e:	6033      	str	r3, [r6, #0]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressPMisc);
90003580:	f000 f908 	bl	90003794 <TS_IO_Read>
90003584:	f88d 0007 	strb.w	r0, [sp, #7]
    * pArea = (ucReadData & FT5336_TOUCH_AREA_MASK) >> FT5336_TOUCH_AREA_SHIFT;
90003588:	f89d 2007 	ldrb.w	r2, [sp, #7]
9000358c:	0912      	lsrs	r2, r2, #4
9000358e:	f002 0204 	and.w	r2, r2, #4
90003592:	602a      	str	r2, [r5, #0]
}
90003594:	b002      	add	sp, #8
90003596:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(touchIdx < ft5336_handle.currActiveTouchNb)
9000359a:	4627      	mov	r7, r4
9000359c:	4621      	mov	r1, r4
9000359e:	e7d8      	b.n	90003552 <ft5336_TS_GetTouchInfo+0x2e>
900035a0:	20002fee 	.word	0x20002fee

900035a4 <I2Cx_Init>:
  * @brief  Initializes I2C HAL.
  * @param  i2c_handler : I2C handler
  * @retval None
  */
static void I2Cx_Init(I2C_HandleTypeDef *i2c_handler)
{
900035a4:	b570      	push	{r4, r5, r6, lr}
900035a6:	b08a      	sub	sp, #40	@ 0x28
900035a8:	4605      	mov	r5, r0
  if(HAL_I2C_GetState(i2c_handler) == HAL_I2C_STATE_RESET)
900035aa:	f001 fba5 	bl	90004cf8 <HAL_I2C_GetState>
900035ae:	2800      	cmp	r0, #0
900035b0:	f040 8096 	bne.w	900036e0 <I2Cx_Init+0x13c>
  {
    if (i2c_handler == (I2C_HandleTypeDef*)(&hI2cAudioHandler))
900035b4:	4b4b      	ldr	r3, [pc, #300]	@ (900036e4 <I2Cx_Init+0x140>)
    {
      /* External, camera and Arduino connector  I2C configuration */
      i2c_handler->Instance = DISCOVERY_EXT_I2Cx;
    }
    i2c_handler->Init.Timing           = DISCOVERY_I2Cx_TIMING;
    i2c_handler->Init.OwnAddress1      = 0;
900035b6:	2600      	movs	r6, #0
900035b8:	4c4b      	ldr	r4, [pc, #300]	@ (900036e8 <I2Cx_Init+0x144>)
    if (i2c_handler == (I2C_HandleTypeDef*)(&hI2cAudioHandler))
900035ba:	429d      	cmp	r5, r3
    i2c_handler->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
    i2c_handler->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
    i2c_handler->Init.OwnAddress2      = 0;
900035bc:	616e      	str	r6, [r5, #20]
      i2c_handler->Instance = DISCOVERY_AUDIO_I2Cx;
900035be:	bf0c      	ite	eq
900035c0:	4a4a      	ldreq	r2, [pc, #296]	@ (900036ec <I2Cx_Init+0x148>)
      i2c_handler->Instance = DISCOVERY_EXT_I2Cx;
900035c2:	4a4b      	ldrne	r2, [pc, #300]	@ (900036f0 <I2Cx_Init+0x14c>)
  if (i2c_handler == (I2C_HandleTypeDef*)(&hI2cAudioHandler))
900035c4:	429d      	cmp	r5, r3
      i2c_handler->Instance = DISCOVERY_EXT_I2Cx;
900035c6:	602a      	str	r2, [r5, #0]
    i2c_handler->Init.OwnAddress1      = 0;
900035c8:	4a4a      	ldr	r2, [pc, #296]	@ (900036f4 <I2Cx_Init+0x150>)
900035ca:	e9c5 2601 	strd	r2, r6, [r5, #4]
    i2c_handler->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
900035ce:	f04f 0201 	mov.w	r2, #1
    i2c_handler->Init.GeneralCallMode  = I2C_GENERALCALL_DISABLE;
    i2c_handler->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
900035d2:	e9c5 6607 	strd	r6, r6, [r5, #28]
    i2c_handler->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
900035d6:	e9c5 2603 	strd	r2, r6, [r5, #12]
    DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
900035da:	6b23      	ldr	r3, [r4, #48]	@ 0x30
  if (i2c_handler == (I2C_HandleTypeDef*)(&hI2cAudioHandler))
900035dc:	d143      	bne.n	90003666 <I2Cx_Init+0xc2>
    DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
900035de:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
    gpio_init_structure.Mode = GPIO_MODE_AF_OD;
900035e2:	2080      	movs	r0, #128	@ 0x80
    gpio_init_structure.Alternate = DISCOVERY_AUDIO_I2Cx_SCL_SDA_AF;
900035e4:	f04f 0c02 	mov.w	ip, #2
    HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
900035e8:	a905      	add	r1, sp, #20
    DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
900035ea:	6323      	str	r3, [r4, #48]	@ 0x30
900035ec:	6b23      	ldr	r3, [r4, #48]	@ 0x30
    gpio_init_structure.Pull = GPIO_NOPULL;
900035ee:	9607      	str	r6, [sp, #28]
    DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
900035f0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
900035f4:	9301      	str	r3, [sp, #4]
900035f6:	9b01      	ldr	r3, [sp, #4]
    gpio_init_structure.Mode = GPIO_MODE_AF_OD;
900035f8:	2312      	movs	r3, #18
900035fa:	e9cd 0305 	strd	r0, r3, [sp, #20]
    gpio_init_structure.Alternate = DISCOVERY_AUDIO_I2Cx_SCL_SDA_AF;
900035fe:	2304      	movs	r3, #4
    HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
90003600:	483d      	ldr	r0, [pc, #244]	@ (900036f8 <I2Cx_Init+0x154>)
    gpio_init_structure.Alternate = DISCOVERY_AUDIO_I2Cx_SCL_SDA_AF;
90003602:	e9cd c308 	strd	ip, r3, [sp, #32]
    HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
90003606:	f000 fe89 	bl	9000431c <HAL_GPIO_Init>
    gpio_init_structure.Pin = DISCOVERY_AUDIO_I2Cx_SDA_PIN;
9000360a:	f44f 7380 	mov.w	r3, #256	@ 0x100
    HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
9000360e:	a905      	add	r1, sp, #20
90003610:	4839      	ldr	r0, [pc, #228]	@ (900036f8 <I2Cx_Init+0x154>)
    gpio_init_structure.Pin = DISCOVERY_AUDIO_I2Cx_SDA_PIN;
90003612:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
90003614:	f000 fe82 	bl	9000431c <HAL_GPIO_Init>
    DISCOVERY_AUDIO_I2Cx_CLK_ENABLE();
90003618:	6c23      	ldr	r3, [r4, #64]	@ 0x40
    HAL_NVIC_SetPriority(DISCOVERY_AUDIO_I2Cx_EV_IRQn, 0x0F, 0);
9000361a:	4632      	mov	r2, r6
9000361c:	210f      	movs	r1, #15
9000361e:	2048      	movs	r0, #72	@ 0x48
    DISCOVERY_AUDIO_I2Cx_CLK_ENABLE();
90003620:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
90003624:	6423      	str	r3, [r4, #64]	@ 0x40
90003626:	6c23      	ldr	r3, [r4, #64]	@ 0x40
90003628:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
9000362c:	9302      	str	r3, [sp, #8]
9000362e:	9b02      	ldr	r3, [sp, #8]
    DISCOVERY_AUDIO_I2Cx_FORCE_RESET();
90003630:	6a23      	ldr	r3, [r4, #32]
90003632:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
90003636:	6223      	str	r3, [r4, #32]
    DISCOVERY_AUDIO_I2Cx_RELEASE_RESET();
90003638:	6a23      	ldr	r3, [r4, #32]
9000363a:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
9000363e:	6223      	str	r3, [r4, #32]
    HAL_NVIC_SetPriority(DISCOVERY_AUDIO_I2Cx_EV_IRQn, 0x0F, 0);
90003640:	f000 fbb4 	bl	90003dac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DISCOVERY_AUDIO_I2Cx_EV_IRQn);
90003644:	2048      	movs	r0, #72	@ 0x48
90003646:	f000 fbe3 	bl	90003e10 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(DISCOVERY_AUDIO_I2Cx_ER_IRQn, 0x0F, 0);
9000364a:	2049      	movs	r0, #73	@ 0x49
9000364c:	4632      	mov	r2, r6
9000364e:	210f      	movs	r1, #15
90003650:	f000 fbac 	bl	90003dac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DISCOVERY_AUDIO_I2Cx_ER_IRQn);
90003654:	2049      	movs	r0, #73	@ 0x49
    HAL_NVIC_EnableIRQ(DISCOVERY_EXT_I2Cx_ER_IRQn);
90003656:	f000 fbdb 	bl	90003e10 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2Cx_MspInit(i2c_handler);
    HAL_I2C_Init(i2c_handler);
9000365a:	4628      	mov	r0, r5
  }
}
9000365c:	b00a      	add	sp, #40	@ 0x28
9000365e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(i2c_handler);
90003662:	f001 b921 	b.w	900048a8 <HAL_I2C_Init>
    DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
90003666:	f043 0302 	orr.w	r3, r3, #2
    gpio_init_structure.Mode = GPIO_MODE_AF_OD;
9000366a:	f44f 7280 	mov.w	r2, #256	@ 0x100
    gpio_init_structure.Alternate = DISCOVERY_EXT_I2Cx_SCL_SDA_AF;
9000366e:	2102      	movs	r1, #2
    HAL_GPIO_Init(DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
90003670:	4822      	ldr	r0, [pc, #136]	@ (900036fc <I2Cx_Init+0x158>)
    DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
90003672:	6323      	str	r3, [r4, #48]	@ 0x30
90003674:	6b23      	ldr	r3, [r4, #48]	@ 0x30
    gpio_init_structure.Pull = GPIO_NOPULL;
90003676:	9607      	str	r6, [sp, #28]
    DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
90003678:	f003 0302 	and.w	r3, r3, #2
9000367c:	9303      	str	r3, [sp, #12]
9000367e:	9b03      	ldr	r3, [sp, #12]
    gpio_init_structure.Mode = GPIO_MODE_AF_OD;
90003680:	2312      	movs	r3, #18
90003682:	e9cd 2305 	strd	r2, r3, [sp, #20]
    gpio_init_structure.Alternate = DISCOVERY_EXT_I2Cx_SCL_SDA_AF;
90003686:	2304      	movs	r3, #4
90003688:	e9cd 1308 	strd	r1, r3, [sp, #32]
    HAL_GPIO_Init(DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
9000368c:	a905      	add	r1, sp, #20
9000368e:	f000 fe45 	bl	9000431c <HAL_GPIO_Init>
    gpio_init_structure.Pin = DISCOVERY_EXT_I2Cx_SDA_PIN;
90003692:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
90003696:	a905      	add	r1, sp, #20
90003698:	4818      	ldr	r0, [pc, #96]	@ (900036fc <I2Cx_Init+0x158>)
    gpio_init_structure.Pin = DISCOVERY_EXT_I2Cx_SDA_PIN;
9000369a:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
9000369c:	f000 fe3e 	bl	9000431c <HAL_GPIO_Init>
    DISCOVERY_EXT_I2Cx_CLK_ENABLE();
900036a0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
    HAL_NVIC_SetPriority(DISCOVERY_EXT_I2Cx_EV_IRQn, 0x0F, 0);
900036a2:	4632      	mov	r2, r6
900036a4:	210f      	movs	r1, #15
900036a6:	201f      	movs	r0, #31
    DISCOVERY_EXT_I2Cx_CLK_ENABLE();
900036a8:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
900036ac:	6423      	str	r3, [r4, #64]	@ 0x40
900036ae:	6c23      	ldr	r3, [r4, #64]	@ 0x40
900036b0:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
900036b4:	9304      	str	r3, [sp, #16]
900036b6:	9b04      	ldr	r3, [sp, #16]
    DISCOVERY_EXT_I2Cx_FORCE_RESET();
900036b8:	6a23      	ldr	r3, [r4, #32]
900036ba:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
900036be:	6223      	str	r3, [r4, #32]
    DISCOVERY_EXT_I2Cx_RELEASE_RESET();
900036c0:	6a23      	ldr	r3, [r4, #32]
900036c2:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
900036c6:	6223      	str	r3, [r4, #32]
    HAL_NVIC_SetPriority(DISCOVERY_EXT_I2Cx_EV_IRQn, 0x0F, 0);
900036c8:	f000 fb70 	bl	90003dac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DISCOVERY_EXT_I2Cx_EV_IRQn);
900036cc:	201f      	movs	r0, #31
900036ce:	f000 fb9f 	bl	90003e10 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(DISCOVERY_EXT_I2Cx_ER_IRQn, 0x0F, 0);
900036d2:	2020      	movs	r0, #32
900036d4:	4632      	mov	r2, r6
900036d6:	210f      	movs	r1, #15
900036d8:	f000 fb68 	bl	90003dac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DISCOVERY_EXT_I2Cx_ER_IRQn);
900036dc:	2020      	movs	r0, #32
900036de:	e7ba      	b.n	90003656 <I2Cx_Init+0xb2>
}
900036e0:	b00a      	add	sp, #40	@ 0x28
900036e2:	bd70      	pop	{r4, r5, r6, pc}
900036e4:	20002ff4 	.word	0x20002ff4
900036e8:	40023800 	.word	0x40023800
900036ec:	40005c00 	.word	0x40005c00
900036f0:	40005400 	.word	0x40005400
900036f4:	40912732 	.word	0x40912732
900036f8:	40021c00 	.word	0x40021c00
900036fc:	40020400 	.word	0x40020400

90003700 <I2Cx_WriteMultiple>:
                                            uint8_t Addr,
                                            uint16_t Reg,
                                            uint16_t MemAddress,
                                            uint8_t *Buffer,
                                            uint16_t Length)
{
90003700:	b530      	push	{r4, r5, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
90003702:	f44f 747a 	mov.w	r4, #1000	@ 0x3e8
{
90003706:	b085      	sub	sp, #20
90003708:	4605      	mov	r5, r0
  status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
9000370a:	9402      	str	r4, [sp, #8]
9000370c:	f8bd 4024 	ldrh.w	r4, [sp, #36]	@ 0x24
90003710:	9401      	str	r4, [sp, #4]
90003712:	9c08      	ldr	r4, [sp, #32]
90003714:	9400      	str	r4, [sp, #0]
90003716:	f001 f937 	bl	90004988 <HAL_I2C_Mem_Write>
  
  /* Check the communication status */
  if(status != HAL_OK)
9000371a:	4604      	mov	r4, r0
9000371c:	b128      	cbz	r0, 9000372a <I2Cx_WriteMultiple+0x2a>
  * @retval None
  */
static void I2Cx_Error(I2C_HandleTypeDef *i2c_handler, uint8_t Addr)
{
  /* De-initialize the I2C communication bus */
  HAL_I2C_DeInit(i2c_handler);
9000371e:	4628      	mov	r0, r5
90003720:	f001 f918 	bl	90004954 <HAL_I2C_DeInit>
  
  /* Re-Initialize the I2C communication bus */
  I2Cx_Init(i2c_handler);
90003724:	4628      	mov	r0, r5
90003726:	f7ff ff3d 	bl	900035a4 <I2Cx_Init>
}
9000372a:	4620      	mov	r0, r4
9000372c:	b005      	add	sp, #20
9000372e:	bd30      	pop	{r4, r5, pc}

90003730 <I2Cx_ReadMultiple>:
{
90003730:	b530      	push	{r4, r5, lr}
  status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
90003732:	f44f 747a 	mov.w	r4, #1000	@ 0x3e8
{
90003736:	b085      	sub	sp, #20
90003738:	4605      	mov	r5, r0
  status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
9000373a:	9402      	str	r4, [sp, #8]
9000373c:	f8bd 4024 	ldrh.w	r4, [sp, #36]	@ 0x24
90003740:	9401      	str	r4, [sp, #4]
90003742:	9c08      	ldr	r4, [sp, #32]
90003744:	9400      	str	r4, [sp, #0]
90003746:	f001 f9f9 	bl	90004b3c <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
9000374a:	4604      	mov	r4, r0
9000374c:	b128      	cbz	r0, 9000375a <I2Cx_ReadMultiple+0x2a>
  HAL_I2C_DeInit(i2c_handler);
9000374e:	4628      	mov	r0, r5
90003750:	f001 f900 	bl	90004954 <HAL_I2C_DeInit>
  I2Cx_Init(i2c_handler);
90003754:	4628      	mov	r0, r5
90003756:	f7ff ff25 	bl	900035a4 <I2Cx_Init>
}
9000375a:	4620      	mov	r0, r4
9000375c:	b005      	add	sp, #20
9000375e:	bd30      	pop	{r4, r5, pc}

90003760 <AUDIO_IO_Init>:
  * @brief  Initializes Audio low level.
  * @retval None
  */
void AUDIO_IO_Init(void) 
{
  I2Cx_Init(&hI2cAudioHandler);
90003760:	4801      	ldr	r0, [pc, #4]	@ (90003768 <AUDIO_IO_Init+0x8>)
90003762:	f7ff bf1f 	b.w	900035a4 <I2Cx_Init>
90003766:	bf00      	nop
90003768:	20002ff4 	.word	0x20002ff4

9000376c <TS_IO_Init>:

/**
  * @brief  Initializes Touchscreen low level.
  * @retval None
  */
void TS_IO_Init(void)
9000376c:	f7ff bff8 	b.w	90003760 <AUDIO_IO_Init>

90003770 <TS_IO_Write>:
  * @param  Reg: Reg address
  * @param  Value: Data to be written
  * @retval None
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
90003770:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90003772:	f88d 200f 	strb.w	r2, [sp, #15]
  I2Cx_WriteMultiple(&hI2cAudioHandler, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT,(uint8_t*)&Value, 1);
90003776:	f10d 020f 	add.w	r2, sp, #15
9000377a:	2301      	movs	r3, #1
9000377c:	9200      	str	r2, [sp, #0]
9000377e:	460a      	mov	r2, r1
90003780:	4601      	mov	r1, r0
90003782:	9301      	str	r3, [sp, #4]
90003784:	4802      	ldr	r0, [pc, #8]	@ (90003790 <TS_IO_Write+0x20>)
90003786:	f7ff ffbb 	bl	90003700 <I2Cx_WriteMultiple>
}
9000378a:	b005      	add	sp, #20
9000378c:	f85d fb04 	ldr.w	pc, [sp], #4
90003790:	20002ff4 	.word	0x20002ff4

90003794 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Reg address
  * @retval Data to be read
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
90003794:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  uint8_t read_value = 0;
90003796:	2300      	movs	r3, #0
{
90003798:	460a      	mov	r2, r1

  I2Cx_ReadMultiple(&hI2cAudioHandler, Addr, Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&read_value, 1);
9000379a:	f10d 010f 	add.w	r1, sp, #15
  uint8_t read_value = 0;
9000379e:	f88d 300f 	strb.w	r3, [sp, #15]
  I2Cx_ReadMultiple(&hI2cAudioHandler, Addr, Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&read_value, 1);
900037a2:	2301      	movs	r3, #1
900037a4:	9100      	str	r1, [sp, #0]
900037a6:	4601      	mov	r1, r0
900037a8:	9301      	str	r3, [sp, #4]
900037aa:	4804      	ldr	r0, [pc, #16]	@ (900037bc <TS_IO_Read+0x28>)
900037ac:	f7ff ffc0 	bl	90003730 <I2Cx_ReadMultiple>

  return read_value;
}
900037b0:	f89d 000f 	ldrb.w	r0, [sp, #15]
900037b4:	b005      	add	sp, #20
900037b6:	f85d fb04 	ldr.w	pc, [sp], #4
900037ba:	bf00      	nop
900037bc:	20002ff4 	.word	0x20002ff4

900037c0 <TS_IO_Delay>:
/**
  * @brief  TS delay
  * @param  Delay: Delay in ms
  * @retval None
  */
void TS_IO_Delay(uint32_t Delay)
900037c0:	f000 bad0 	b.w	90003d64 <HAL_Delay>

900037c4 <BSP_SDRAM_Initialization_sequence>:
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value 
  * @retval None
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
900037c4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;
  
  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
900037c8:	4c21      	ldr	r4, [pc, #132]	@ (90003850 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
900037ca:	2601      	movs	r6, #1
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
900037cc:	4d21      	ldr	r5, [pc, #132]	@ (90003854 <BSP_SDRAM_Initialization_sequence+0x90>)
  __IO uint32_t tmpmrd = 0;
900037ce:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
900037d2:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
900037d4:	4621      	mov	r1, r4
{
900037d6:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
900037d8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
900037dc:	4628      	mov	r0, r5
  __IO uint32_t tmpmrd = 0;
900037de:	f8cd 8004 	str.w	r8, [sp, #4]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
900037e2:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
900037e6:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
900037ea:	f002 ff33 	bl	90006654 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */ 
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
900037ee:	4630      	mov	r0, r6
900037f0:	f000 fab8 	bl	90003d64 <HAL_Delay>
    
  /* Step 3: Configure a PALL (precharge all) command */ 
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
900037f4:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);  
900037f6:	4621      	mov	r1, r4
900037f8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
900037fc:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
900037fe:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
90003802:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);  
90003806:	f002 ff25 	bl	90006654 <HAL_SDRAM_SendCommand>
  
  /* Step 4: Configure an Auto Refresh command */ 
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
9000380a:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
9000380c:	4621      	mov	r1, r4
9000380e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
90003812:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
90003814:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
90003818:	2308      	movs	r3, #8
  Command.ModeRegisterDefinition = 0;
9000381a:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
9000381e:	f002 ff19 	bl	90006654 <HAL_SDRAM_SendCommand>
  
  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
90003822:	f44f 7308 	mov.w	r3, #544	@ 0x220
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
90003826:	4621      	mov	r1, r4
90003828:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
9000382c:	9301      	str	r3, [sp, #4]
  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
9000382e:	2304      	movs	r3, #4
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
90003830:	4628      	mov	r0, r5
  Command.AutoRefreshNumber      = 1;
90003832:	60a6      	str	r6, [r4, #8]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
90003834:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = tmpmrd;
90003838:	9b01      	ldr	r3, [sp, #4]
9000383a:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
9000383c:	f002 ff0a 	bl	90006654 <HAL_SDRAM_SendCommand>
  
  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount); 
90003840:	4649      	mov	r1, r9
90003842:	4628      	mov	r0, r5
}
90003844:	b003      	add	sp, #12
90003846:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount); 
9000384a:	f002 bf22 	b.w	90006692 <HAL_SDRAM_ProgramRefreshRate>
9000384e:	bf00      	nop
90003850:	20003108 	.word	0x20003108
90003854:	20003134 	.word	0x20003134

90003858 <BSP_SDRAM_MspInit>:
{  
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;
  
  /* Enable FMC clock */
  __HAL_RCC_FMC_CLK_ENABLE();
90003858:	4b54      	ldr	r3, [pc, #336]	@ (900039ac <BSP_SDRAM_MspInit+0x154>)
9000385a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000385c:	f042 0201 	orr.w	r2, r2, #1
{  
90003860:	b570      	push	{r4, r5, r6, lr}
90003862:	b08e      	sub	sp, #56	@ 0x38
  __HAL_RCC_FMC_CLK_ENABLE();
90003864:	639a      	str	r2, [r3, #56]	@ 0x38
90003866:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
{  
90003868:	4606      	mov	r6, r0
  gpio_init_structure.Speed     = GPIO_SPEED_FAST;
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
  
  /* GPIOC configuration */
  gpio_init_structure.Pin   = GPIO_PIN_3;
  HAL_GPIO_Init(GPIOC, &gpio_init_structure);
9000386a:	a909      	add	r1, sp, #36	@ 0x24
9000386c:	4850      	ldr	r0, [pc, #320]	@ (900039b0 <BSP_SDRAM_MspInit+0x158>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000386e:	f002 0201 	and.w	r2, r2, #1
  /* GPIOH configuration */  
  gpio_init_structure.Pin   = GPIO_PIN_3 | GPIO_PIN_5;
  HAL_GPIO_Init(GPIOH, &gpio_init_structure); 
  
  /* Configure common DMA parameters */
  dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
90003872:	4c50      	ldr	r4, [pc, #320]	@ (900039b4 <BSP_SDRAM_MspInit+0x15c>)
  dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
90003874:	2500      	movs	r5, #0
  __HAL_RCC_FMC_CLK_ENABLE();
90003876:	9201      	str	r2, [sp, #4]
90003878:	9a01      	ldr	r2, [sp, #4]
  __DMAx_CLK_ENABLE();
9000387a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000387c:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
90003880:	631a      	str	r2, [r3, #48]	@ 0x30
90003882:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90003884:	f402 0280 	and.w	r2, r2, #4194304	@ 0x400000
90003888:	9202      	str	r2, [sp, #8]
9000388a:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
9000388c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000388e:	f042 0204 	orr.w	r2, r2, #4
90003892:	631a      	str	r2, [r3, #48]	@ 0x30
90003894:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90003896:	f002 0204 	and.w	r2, r2, #4
9000389a:	9203      	str	r2, [sp, #12]
9000389c:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
9000389e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900038a0:	f042 0208 	orr.w	r2, r2, #8
900038a4:	631a      	str	r2, [r3, #48]	@ 0x30
900038a6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900038a8:	f002 0208 	and.w	r2, r2, #8
900038ac:	9204      	str	r2, [sp, #16]
900038ae:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOE_CLK_ENABLE();
900038b0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900038b2:	f042 0210 	orr.w	r2, r2, #16
900038b6:	631a      	str	r2, [r3, #48]	@ 0x30
900038b8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900038ba:	f002 0210 	and.w	r2, r2, #16
900038be:	9205      	str	r2, [sp, #20]
900038c0:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOF_CLK_ENABLE();
900038c2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900038c4:	f042 0220 	orr.w	r2, r2, #32
900038c8:	631a      	str	r2, [r3, #48]	@ 0x30
900038ca:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900038cc:	f002 0220 	and.w	r2, r2, #32
900038d0:	9206      	str	r2, [sp, #24]
900038d2:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOG_CLK_ENABLE();
900038d4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900038d6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
900038da:	631a      	str	r2, [r3, #48]	@ 0x30
900038dc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900038de:	f002 0240 	and.w	r2, r2, #64	@ 0x40
900038e2:	9207      	str	r2, [sp, #28]
900038e4:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOH_CLK_ENABLE();
900038e6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900038e8:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
900038ec:	631a      	str	r2, [r3, #48]	@ 0x30
  gpio_init_structure.Pull      = GPIO_PULLUP;
900038ee:	2201      	movs	r2, #1
  __HAL_RCC_GPIOH_CLK_ENABLE();
900038f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900038f2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
900038f6:	9308      	str	r3, [sp, #32]
900038f8:	9b08      	ldr	r3, [sp, #32]
  gpio_init_structure.Pull      = GPIO_PULLUP;
900038fa:	2302      	movs	r3, #2
900038fc:	e9cd 320a 	strd	r3, r2, [sp, #40]	@ 0x28
  gpio_init_structure.Speed     = GPIO_SPEED_FAST;
90003900:	930c      	str	r3, [sp, #48]	@ 0x30
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90003902:	230c      	movs	r3, #12
90003904:	930d      	str	r3, [sp, #52]	@ 0x34
  gpio_init_structure.Pin   = GPIO_PIN_3;
90003906:	2308      	movs	r3, #8
90003908:	9309      	str	r3, [sp, #36]	@ 0x24
  HAL_GPIO_Init(GPIOC, &gpio_init_structure);
9000390a:	f000 fd07 	bl	9000431c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8 | GPIO_PIN_9 |
9000390e:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90003912:	a909      	add	r1, sp, #36	@ 0x24
90003914:	4828      	ldr	r0, [pc, #160]	@ (900039b8 <BSP_SDRAM_MspInit+0x160>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8 | GPIO_PIN_9 |
90003916:	9309      	str	r3, [sp, #36]	@ 0x24
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90003918:	f000 fd00 	bl	9000431c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
9000391c:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90003920:	a909      	add	r1, sp, #36	@ 0x24
90003922:	4826      	ldr	r0, [pc, #152]	@ (900039bc <BSP_SDRAM_MspInit+0x164>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90003924:	9309      	str	r3, [sp, #36]	@ 0x24
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90003926:	f000 fcf9 	bl	9000431c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000392a:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
9000392e:	a909      	add	r1, sp, #36	@ 0x24
90003930:	4823      	ldr	r0, [pc, #140]	@ (900039c0 <BSP_SDRAM_MspInit+0x168>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90003932:	9309      	str	r3, [sp, #36]	@ 0x24
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90003934:	f000 fcf2 	bl	9000431c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
90003938:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
9000393c:	a909      	add	r1, sp, #36	@ 0x24
9000393e:	4821      	ldr	r0, [pc, #132]	@ (900039c4 <BSP_SDRAM_MspInit+0x16c>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
90003940:	9309      	str	r3, [sp, #36]	@ 0x24
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90003942:	f000 fceb 	bl	9000431c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_3 | GPIO_PIN_5;
90003946:	2328      	movs	r3, #40	@ 0x28
  HAL_GPIO_Init(GPIOH, &gpio_init_structure); 
90003948:	a909      	add	r1, sp, #36	@ 0x24
9000394a:	481f      	ldr	r0, [pc, #124]	@ (900039c8 <BSP_SDRAM_MspInit+0x170>)
  gpio_init_structure.Pin   = GPIO_PIN_3 | GPIO_PIN_5;
9000394c:	9309      	str	r3, [sp, #36]	@ 0x24
  HAL_GPIO_Init(GPIOH, &gpio_init_structure); 
9000394e:	f000 fce5 	bl	9000431c <HAL_GPIO_Init>
  dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
90003952:	2380      	movs	r3, #128	@ 0x80
  dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
  dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
90003954:	f44f 7100 	mov.w	r1, #512	@ 0x200
  dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
  dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
90003958:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
  dma_handle.Init.Mode                = DMA_NORMAL;
  dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
  dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;         
  dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
  dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
  dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE; 
9000395c:	6325      	str	r5, [r4, #48]	@ 0x30
  
  dma_handle.Instance = SDRAM_DMAx_STREAM;
  
   /* Associate the DMA handle */
  __HAL_LINKDMA(hsdram, hdma, dma_handle);
9000395e:	6334      	str	r4, [r6, #48]	@ 0x30
  dma_handle.Init.Mode                = DMA_NORMAL;
90003960:	61e5      	str	r5, [r4, #28]
  __HAL_LINKDMA(hsdram, hdma, dma_handle);
90003962:	63a6      	str	r6, [r4, #56]	@ 0x38
  dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
90003964:	e9c4 5301 	strd	r5, r3, [r4, #4]
  dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
90003968:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9000396c:	e9c4 1303 	strd	r1, r3, [r4, #12]
  dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
90003970:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
90003974:	e9c4 0305 	strd	r0, r3, [r4, #20]
  dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
90003978:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
  
  /* Deinitialize the stream for new transfer */
  HAL_DMA_DeInit(&dma_handle);
9000397c:	4620      	mov	r0, r4
  dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;         
9000397e:	e9c4 3508 	strd	r3, r5, [r4, #32]
  dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
90003982:	2303      	movs	r3, #3
  dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
90003984:	e9c4 350a 	strd	r3, r5, [r4, #40]	@ 0x28
  dma_handle.Instance = SDRAM_DMAx_STREAM;
90003988:	4b10      	ldr	r3, [pc, #64]	@ (900039cc <BSP_SDRAM_MspInit+0x174>)
9000398a:	6023      	str	r3, [r4, #0]
  HAL_DMA_DeInit(&dma_handle);
9000398c:	f000 fba0 	bl	900040d0 <HAL_DMA_DeInit>
  
  /* Configure the DMA stream */
  HAL_DMA_Init(&dma_handle); 
90003990:	4620      	mov	r0, r4
90003992:	f000 fb1f 	bl	90003fd4 <HAL_DMA_Init>
  
  /* NVIC configuration for DMA transfer complete interrupt */
  HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 0x0F, 0);
90003996:	462a      	mov	r2, r5
90003998:	210f      	movs	r1, #15
9000399a:	2038      	movs	r0, #56	@ 0x38
9000399c:	f000 fa06 	bl	90003dac <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
900039a0:	2038      	movs	r0, #56	@ 0x38
900039a2:	f000 fa35 	bl	90003e10 <HAL_NVIC_EnableIRQ>
}
900039a6:	b00e      	add	sp, #56	@ 0x38
900039a8:	bd70      	pop	{r4, r5, r6, pc}
900039aa:	bf00      	nop
900039ac:	40023800 	.word	0x40023800
900039b0:	40020800 	.word	0x40020800
900039b4:	200030a8 	.word	0x200030a8
900039b8:	40020c00 	.word	0x40020c00
900039bc:	40021000 	.word	0x40021000
900039c0:	40021400 	.word	0x40021400
900039c4:	40021800 	.word	0x40021800
900039c8:	40021c00 	.word	0x40021c00
900039cc:	40026410 	.word	0x40026410

900039d0 <BSP_SDRAM_Init>:
{ 
900039d0:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
900039d2:	4c19      	ldr	r4, [pc, #100]	@ (90003a38 <BSP_SDRAM_Init+0x68>)
  Timing.ExitSelfRefreshDelay = 7;
900039d4:	2107      	movs	r1, #7
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
900039d6:	4b19      	ldr	r3, [pc, #100]	@ (90003a3c <BSP_SDRAM_Init+0x6c>)
  Timing.SelfRefreshTime      = 4;
900039d8:	2204      	movs	r2, #4
  Timing.LoadToActiveDelay    = 2;
900039da:	4d19      	ldr	r5, [pc, #100]	@ (90003a40 <BSP_SDRAM_Init+0x70>)
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900039dc:	f44f 6000 	mov.w	r0, #2048	@ 0x800
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
900039e0:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
900039e2:	2302      	movs	r3, #2
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
900039e4:	60e2      	str	r2, [r4, #12]
  Timing.RCDDelay             = 2;
900039e6:	61ab      	str	r3, [r5, #24]
  Timing.ExitSelfRefreshDelay = 7;
900039e8:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
900039ec:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
900039f0:	e9c5 3304 	strd	r3, r3, [r5, #16]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900039f4:	2210      	movs	r2, #16
900039f6:	2340      	movs	r3, #64	@ 0x40
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
900039f8:	2100      	movs	r1, #0
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900039fa:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_2;
900039fe:	f44f 7380 	mov.w	r3, #256	@ 0x100
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90003a02:	62a1      	str	r1, [r4, #40]	@ 0x28
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90003a04:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90003a08:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
90003a0c:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, NULL); /* __weak function can be rewritten by the application */
90003a10:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
90003a12:	e9c4 1101 	strd	r1, r1, [r4, #4]
  BSP_SDRAM_MspInit(&sdramHandle, NULL); /* __weak function can be rewritten by the application */
90003a16:	f7ff ff1f 	bl	90003858 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
90003a1a:	4629      	mov	r1, r5
90003a1c:	4620      	mov	r0, r4
90003a1e:	4c09      	ldr	r4, [pc, #36]	@ (90003a44 <BSP_SDRAM_Init+0x74>)
90003a20:	f002 fdea 	bl	900065f8 <HAL_SDRAM_Init>
90003a24:	3800      	subs	r0, #0
90003a26:	bf18      	it	ne
90003a28:	2001      	movne	r0, #1
90003a2a:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
90003a2c:	f240 6003 	movw	r0, #1539	@ 0x603
90003a30:	f7ff fec8 	bl	900037c4 <BSP_SDRAM_Initialization_sequence>
}
90003a34:	7820      	ldrb	r0, [r4, #0]
90003a36:	bd38      	pop	{r3, r4, r5, pc}
90003a38:	20003134 	.word	0x20003134
90003a3c:	a0000140 	.word	0xa0000140
90003a40:	20003118 	.word	0x20003118
90003a44:	2000008d 	.word	0x2000008d

90003a48 <BSP_SDRAM_MspDeInit>:
  * @param  hsdram: SDRAM handle
  * @param  Params
  * @retval None
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{  
90003a48:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;
  
    /* Disable NVIC configuration for DMA interrupt */
    HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
90003a4a:	2038      	movs	r0, #56	@ 0x38
90003a4c:	f000 f9ee 	bl	90003e2c <HAL_NVIC_DisableIRQ>

    /* Deinitialize the stream for new transfer */
    dma_handle.Instance = SDRAM_DMAx_STREAM;
90003a50:	4b03      	ldr	r3, [pc, #12]	@ (90003a60 <BSP_SDRAM_MspDeInit+0x18>)
90003a52:	4804      	ldr	r0, [pc, #16]	@ (90003a64 <BSP_SDRAM_MspDeInit+0x1c>)
90003a54:	6003      	str	r3, [r0, #0]
    HAL_DMA_DeInit(&dma_handle);

    /* GPIO pins clock, FMC clock and DMA clock can be shut down in the applications
       by surcharging this __weak function */ 
}
90003a56:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_DMA_DeInit(&dma_handle);
90003a5a:	f000 bb39 	b.w	900040d0 <HAL_DMA_DeInit>
90003a5e:	bf00      	nop
90003a60:	40026410 	.word	0x40026410
90003a64:	20003048 	.word	0x20003048

90003a68 <BSP_SDRAM_DeInit>:
{ 
90003a68:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
90003a6a:	4c09      	ldr	r4, [pc, #36]	@ (90003a90 <BSP_SDRAM_DeInit+0x28>)
90003a6c:	4b09      	ldr	r3, [pc, #36]	@ (90003a94 <BSP_SDRAM_DeInit+0x2c>)
  if(HAL_SDRAM_DeInit(&sdramHandle) != HAL_OK)
90003a6e:	4620      	mov	r0, r4
90003a70:	4d09      	ldr	r5, [pc, #36]	@ (90003a98 <BSP_SDRAM_DeInit+0x30>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
90003a72:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) != HAL_OK)
90003a74:	f002 fde0 	bl	90006638 <HAL_SDRAM_DeInit>
90003a78:	3800      	subs	r0, #0
  BSP_SDRAM_MspDeInit(&sdramHandle, NULL);
90003a7a:	f04f 0100 	mov.w	r1, #0
  if(HAL_SDRAM_DeInit(&sdramHandle) != HAL_OK)
90003a7e:	bf18      	it	ne
90003a80:	2001      	movne	r0, #1
90003a82:	7028      	strb	r0, [r5, #0]
  BSP_SDRAM_MspDeInit(&sdramHandle, NULL);
90003a84:	4620      	mov	r0, r4
90003a86:	f7ff ffdf 	bl	90003a48 <BSP_SDRAM_MspDeInit>
}
90003a8a:	7828      	ldrb	r0, [r5, #0]
90003a8c:	bd38      	pop	{r3, r4, r5, pc}
90003a8e:	bf00      	nop
90003a90:	20003134 	.word	0x20003134
90003a94:	a0000140 	.word	0xa0000140
90003a98:	2000008c 	.word	0x2000008c

90003a9c <BSP_TS_Init>:
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
  uint8_t status = TS_OK;
  tsXBoundary = ts_SizeX;
90003a9c:	4b0d      	ldr	r3, [pc, #52]	@ (90003ad4 <BSP_TS_Init+0x38>)
{
90003a9e:	b510      	push	{r4, lr}
  tsXBoundary = ts_SizeX;
90003aa0:	8018      	strh	r0, [r3, #0]
  tsYBoundary = ts_SizeY;
  
  /* Read ID and verify if the touch screen driver is ready */
  ft5336_ts_drv.Init(TS_I2C_ADDRESS);
90003aa2:	2070      	movs	r0, #112	@ 0x70
  tsYBoundary = ts_SizeY;
90003aa4:	4b0c      	ldr	r3, [pc, #48]	@ (90003ad8 <BSP_TS_Init+0x3c>)
  ft5336_ts_drv.Init(TS_I2C_ADDRESS);
90003aa6:	4c0d      	ldr	r4, [pc, #52]	@ (90003adc <BSP_TS_Init+0x40>)
  tsYBoundary = ts_SizeY;
90003aa8:	8019      	strh	r1, [r3, #0]
  ft5336_ts_drv.Init(TS_I2C_ADDRESS);
90003aaa:	6823      	ldr	r3, [r4, #0]
90003aac:	4798      	blx	r3
  if(ft5336_ts_drv.ReadID(TS_I2C_ADDRESS) == FT5336_ID_VALUE)
90003aae:	6863      	ldr	r3, [r4, #4]
90003ab0:	2070      	movs	r0, #112	@ 0x70
90003ab2:	4798      	blx	r3
90003ab4:	2851      	cmp	r0, #81	@ 0x51
90003ab6:	d10b      	bne.n	90003ad0 <BSP_TS_Init+0x34>
  { 
    /* Initialize the TS driver structure */
    tsDriver = &ft5336_ts_drv;
90003ab8:	4b09      	ldr	r3, [pc, #36]	@ (90003ae0 <BSP_TS_Init+0x44>)
    I2cAddress = TS_I2C_ADDRESS;
90003aba:	2070      	movs	r0, #112	@ 0x70
    tsOrientation = TS_SWAP_XY;
90003abc:	2208      	movs	r2, #8
    tsDriver = &ft5336_ts_drv;
90003abe:	601c      	str	r4, [r3, #0]
    I2cAddress = TS_I2C_ADDRESS;
90003ac0:	4b08      	ldr	r3, [pc, #32]	@ (90003ae4 <BSP_TS_Init+0x48>)
90003ac2:	7018      	strb	r0, [r3, #0]
    tsOrientation = TS_SWAP_XY;
90003ac4:	4b08      	ldr	r3, [pc, #32]	@ (90003ae8 <BSP_TS_Init+0x4c>)
90003ac6:	701a      	strb	r2, [r3, #0]

    /* Initialize the TS driver */
    tsDriver->Start(I2cAddress);
90003ac8:	68e3      	ldr	r3, [r4, #12]
90003aca:	4798      	blx	r3
  uint8_t status = TS_OK;
90003acc:	2000      	movs	r0, #0
  {
    status = TS_DEVICE_NOT_FOUND;
  }

  return status;
}
90003ace:	bd10      	pop	{r4, pc}
    status = TS_DEVICE_NOT_FOUND;
90003ad0:	2003      	movs	r0, #3
90003ad2:	e7fc      	b.n	90003ace <BSP_TS_Init+0x32>
90003ad4:	20003194 	.word	0x20003194
90003ad8:	20003192 	.word	0x20003192
90003adc:	20000064 	.word	0x20000064
90003ae0:	20003198 	.word	0x20003198
90003ae4:	20003190 	.word	0x20003190
90003ae8:	20003191 	.word	0x20003191

90003aec <BSP_TS_Get_GestureId>:
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Get_GestureId(TS_StateTypeDef *TS_State)
{
  uint32_t gestureId = 0;
90003aec:	2300      	movs	r3, #0
{
90003aee:	b513      	push	{r0, r1, r4, lr}
  uint32_t gestureId = 0;
90003af0:	9301      	str	r3, [sp, #4]
{
90003af2:	4604      	mov	r4, r0
  uint8_t  ts_status = TS_OK;

  /* Get gesture Id */
  ft5336_TS_GetGestureID(I2cAddress, &gestureId);
90003af4:	4b12      	ldr	r3, [pc, #72]	@ (90003b40 <BSP_TS_Get_GestureId+0x54>)
90003af6:	a901      	add	r1, sp, #4
90003af8:	7818      	ldrb	r0, [r3, #0]
90003afa:	f7ff fd03 	bl	90003504 <ft5336_TS_GetGestureID>

  /* Remap gesture Id to a TS_GestureIdTypeDef value */
  switch(gestureId)
90003afe:	9b01      	ldr	r3, [sp, #4]
90003b00:	2b18      	cmp	r3, #24
90003b02:	d016      	beq.n	90003b32 <BSP_TS_Get_GestureId+0x46>
90003b04:	d807      	bhi.n	90003b16 <BSP_TS_Get_GestureId+0x2a>
90003b06:	2b10      	cmp	r3, #16
90003b08:	d00d      	beq.n	90003b26 <BSP_TS_Get_GestureId+0x3a>
90003b0a:	2b14      	cmp	r3, #20
90003b0c:	d00f      	beq.n	90003b2e <BSP_TS_Get_GestureId+0x42>
90003b0e:	b15b      	cbz	r3, 90003b28 <BSP_TS_Get_GestureId+0x3c>
90003b10:	2001      	movs	r0, #1
      ts_status = TS_ERROR;
      break;
  } /* of switch(gestureId) */

  return(ts_status);
}
90003b12:	b002      	add	sp, #8
90003b14:	bd10      	pop	{r4, pc}
  switch(gestureId)
90003b16:	2b40      	cmp	r3, #64	@ 0x40
90003b18:	d00d      	beq.n	90003b36 <BSP_TS_Get_GestureId+0x4a>
90003b1a:	2b49      	cmp	r3, #73	@ 0x49
90003b1c:	d00d      	beq.n	90003b3a <BSP_TS_Get_GestureId+0x4e>
90003b1e:	2b1c      	cmp	r3, #28
90003b20:	d1f6      	bne.n	90003b10 <BSP_TS_Get_GestureId+0x24>
      TS_State->gestureId = GEST_ID_MOVE_LEFT;
90003b22:	2304      	movs	r3, #4
90003b24:	e000      	b.n	90003b28 <BSP_TS_Get_GestureId+0x3c>
      TS_State->gestureId = GEST_ID_MOVE_UP;
90003b26:	2301      	movs	r3, #1
  uint8_t  ts_status = TS_OK;
90003b28:	2000      	movs	r0, #0
      TS_State->gestureId = GEST_ID_MOVE_UP;
90003b2a:	62a3      	str	r3, [r4, #40]	@ 0x28
      break;
90003b2c:	e7f1      	b.n	90003b12 <BSP_TS_Get_GestureId+0x26>
      TS_State->gestureId = GEST_ID_MOVE_RIGHT;
90003b2e:	2302      	movs	r3, #2
90003b30:	e7fa      	b.n	90003b28 <BSP_TS_Get_GestureId+0x3c>
      TS_State->gestureId = GEST_ID_MOVE_DOWN;
90003b32:	2303      	movs	r3, #3
90003b34:	e7f8      	b.n	90003b28 <BSP_TS_Get_GestureId+0x3c>
      TS_State->gestureId = GEST_ID_ZOOM_IN;
90003b36:	2305      	movs	r3, #5
90003b38:	e7f6      	b.n	90003b28 <BSP_TS_Get_GestureId+0x3c>
      TS_State->gestureId = GEST_ID_ZOOM_OUT;
90003b3a:	2306      	movs	r3, #6
90003b3c:	e7f4      	b.n	90003b28 <BSP_TS_Get_GestureId+0x3c>
90003b3e:	bf00      	nop
90003b40:	20003190 	.word	0x20003190

90003b44 <BSP_TS_GetState>:
{
90003b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t weight = 0;
90003b48:	2300      	movs	r3, #0
{
90003b4a:	b095      	sub	sp, #84	@ 0x54
  uint32_t area = 0;
90003b4c:	e9cd 3305 	strd	r3, r3, [sp, #20]
  uint32_t event = 0;
90003b50:	9307      	str	r3, [sp, #28]
  TS_State->touchDetected = tsDriver->DetectTouch(I2cAddress);
90003b52:	4b53      	ldr	r3, [pc, #332]	@ (90003ca0 <BSP_TS_GetState+0x15c>)
{
90003b54:	9002      	str	r0, [sp, #8]
  TS_State->touchDetected = tsDriver->DetectTouch(I2cAddress);
90003b56:	681a      	ldr	r2, [r3, #0]
90003b58:	4b52      	ldr	r3, [pc, #328]	@ (90003ca4 <BSP_TS_GetState+0x160>)
90003b5a:	6912      	ldr	r2, [r2, #16]
90003b5c:	7818      	ldrb	r0, [r3, #0]
90003b5e:	4790      	blx	r2
90003b60:	9b02      	ldr	r3, [sp, #8]
90003b62:	7018      	strb	r0, [r3, #0]
  if(TS_State->touchDetected)
90003b64:	b1b0      	cbz	r0, 90003b94 <BSP_TS_GetState+0x50>
90003b66:	f103 0515 	add.w	r5, r3, #21
90003b6a:	1c9c      	adds	r4, r3, #2
90003b6c:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90003cb4 <BSP_TS_GetState+0x170>
    for(index=0; index < TS_State->touchDetected; index++)
90003b70:	2300      	movs	r3, #0
90003b72:	f8df 9144 	ldr.w	r9, [pc, #324]	@ 90003cb8 <BSP_TS_GetState+0x174>
90003b76:	f10d 0a2c 	add.w	sl, sp, #44	@ 0x2c
90003b7a:	f10d 0b20 	add.w	fp, sp, #32
90003b7e:	ae0e      	add	r6, sp, #56	@ 0x38
90003b80:	af11      	add	r7, sp, #68	@ 0x44
90003b82:	9303      	str	r3, [sp, #12]
90003b84:	9b02      	ldr	r3, [sp, #8]
90003b86:	9a03      	ldr	r2, [sp, #12]
90003b88:	781b      	ldrb	r3, [r3, #0]
90003b8a:	4293      	cmp	r3, r2
90003b8c:	d805      	bhi.n	90003b9a <BSP_TS_GetState+0x56>
    ts_status = BSP_TS_Get_GestureId(TS_State);
90003b8e:	9802      	ldr	r0, [sp, #8]
90003b90:	f7ff ffac 	bl	90003aec <BSP_TS_Get_GestureId>
}
90003b94:	b015      	add	sp, #84	@ 0x54
90003b96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      tsDriver->GetXY(I2cAddress, &(brute_x[index]), &(brute_y[index]));
90003b9a:	4b41      	ldr	r3, [pc, #260]	@ (90003ca0 <BSP_TS_GetState+0x15c>)
90003b9c:	463a      	mov	r2, r7
90003b9e:	4841      	ldr	r0, [pc, #260]	@ (90003ca4 <BSP_TS_GetState+0x160>)
90003ba0:	4631      	mov	r1, r6
90003ba2:	681b      	ldr	r3, [r3, #0]
90003ba4:	7800      	ldrb	r0, [r0, #0]
90003ba6:	695b      	ldr	r3, [r3, #20]
90003ba8:	4798      	blx	r3
      if(tsOrientation == TS_SWAP_NONE)
90003baa:	4b3f      	ldr	r3, [pc, #252]	@ (90003ca8 <BSP_TS_GetState+0x164>)
90003bac:	781b      	ldrb	r3, [r3, #0]
90003bae:	2b01      	cmp	r3, #1
90003bb0:	d13c      	bne.n	90003c2c <BSP_TS_GetState+0xe8>
        x[index] = brute_x[index];
90003bb2:	8833      	ldrh	r3, [r6, #0]
90003bb4:	f8ab 3000 	strh.w	r3, [fp]
        y[index] = brute_y[index];
90003bb8:	883b      	ldrh	r3, [r7, #0]
90003bba:	f8aa 3000 	strh.w	r3, [sl]
      x_diff = x[index] > _x[index]? (x[index] - _x[index]): (_x[index] - x[index]);
90003bbe:	f83b cb02 	ldrh.w	ip, [fp], #2
90003bc2:	f8d8 2000 	ldr.w	r2, [r8]
      y_diff = y[index] > _y[index]? (y[index] - _y[index]): (_y[index] - y[index]);
90003bc6:	f8d9 0000 	ldr.w	r0, [r9]
      x_diff = x[index] > _x[index]? (x[index] - _x[index]): (_x[index] - x[index]);
90003bca:	b293      	uxth	r3, r2
90003bcc:	4594      	cmp	ip, r2
      y_diff = y[index] > _y[index]? (y[index] - _y[index]): (_y[index] - y[index]);
90003bce:	f83a 2b02 	ldrh.w	r2, [sl], #2
90003bd2:	b281      	uxth	r1, r0
      x_diff = x[index] > _x[index]? (x[index] - _x[index]): (_x[index] - x[index]);
90003bd4:	bf8c      	ite	hi
90003bd6:	ebac 0303 	subhi.w	r3, ip, r3
90003bda:	eba3 030c 	subls.w	r3, r3, ip
      y_diff = y[index] > _y[index]? (y[index] - _y[index]): (_y[index] - y[index]);
90003bde:	4282      	cmp	r2, r0
      x_diff = x[index] > _x[index]? (x[index] - _x[index]): (_x[index] - x[index]);
90003be0:	b29b      	uxth	r3, r3
      y_diff = y[index] > _y[index]? (y[index] - _y[index]): (_y[index] - y[index]);
90003be2:	bf8c      	ite	hi
90003be4:	1a51      	subhi	r1, r2, r1
90003be6:	1a89      	subls	r1, r1, r2
90003be8:	b289      	uxth	r1, r1
      if ((x_diff + y_diff) > 5)
90003bea:	440b      	add	r3, r1
90003bec:	2b05      	cmp	r3, #5
      if(I2cAddress == FT5336_I2C_SLAVE_ADDRESS)
90003bee:	4b2d      	ldr	r3, [pc, #180]	@ (90003ca4 <BSP_TS_GetState+0x160>)
90003bf0:	7818      	ldrb	r0, [r3, #0]
        _x[index] = x[index];
90003bf2:	bfc4      	itt	gt
90003bf4:	f8c8 c000 	strgt.w	ip, [r8]
        _y[index] = y[index];
90003bf8:	f8c9 2000 	strgt.w	r2, [r9]
      if(I2cAddress == FT5336_I2C_SLAVE_ADDRESS)
90003bfc:	2870      	cmp	r0, #112	@ 0x70
90003bfe:	d12c      	bne.n	90003c5a <BSP_TS_GetState+0x116>
        TS_State->touchX[index] = x[index];
90003c00:	f8a4 c000 	strh.w	ip, [r4]
      ft5336_TS_GetTouchInfo(I2cAddress, index, &weight, &area, &event);
90003c04:	ab07      	add	r3, sp, #28
        TS_State->touchY[index] = y[index];
90003c06:	8162      	strh	r2, [r4, #10]
      ft5336_TS_GetTouchInfo(I2cAddress, index, &weight, &area, &event);
90003c08:	9903      	ldr	r1, [sp, #12]
90003c0a:	aa05      	add	r2, sp, #20
90003c0c:	9300      	str	r3, [sp, #0]
90003c0e:	ab06      	add	r3, sp, #24
90003c10:	f7ff fc88 	bl	90003524 <ft5336_TS_GetTouchInfo>
      TS_State->touchWeight[index] = weight;
90003c14:	9b05      	ldr	r3, [sp, #20]
90003c16:	f805 3f01 	strb.w	r3, [r5, #1]!
      TS_State->touchArea[index]   = area;
90003c1a:	9b06      	ldr	r3, [sp, #24]
90003c1c:	72ab      	strb	r3, [r5, #10]
      switch(event)
90003c1e:	9b07      	ldr	r3, [sp, #28]
90003c20:	2b03      	cmp	r3, #3
90003c22:	d82b      	bhi.n	90003c7c <BSP_TS_GetState+0x138>
90003c24:	e8df f003 	tbb	[pc, r3]
90003c28:	39373528 	.word	0x39373528
      if(tsOrientation & TS_SWAP_X)
90003c2c:	0799      	lsls	r1, r3, #30
        x[index] = 4096 - brute_x[index];
90003c2e:	bf42      	ittt	mi
90003c30:	8832      	ldrhmi	r2, [r6, #0]
90003c32:	f5c2 5280 	rsbmi	r2, r2, #4096	@ 0x1000
90003c36:	f8ab 2000 	strhmi.w	r2, [fp]
      if(tsOrientation & TS_SWAP_Y)
90003c3a:	075a      	lsls	r2, r3, #29
        y[index] = 4096 - brute_y[index];
90003c3c:	bf42      	ittt	mi
90003c3e:	883a      	ldrhmi	r2, [r7, #0]
90003c40:	f5c2 5280 	rsbmi	r2, r2, #4096	@ 0x1000
90003c44:	f8aa 2000 	strhmi.w	r2, [sl]
      if(tsOrientation & TS_SWAP_XY)
90003c48:	071b      	lsls	r3, r3, #28
        y[index] = brute_x[index];
90003c4a:	bf41      	itttt	mi
90003c4c:	8833      	ldrhmi	r3, [r6, #0]
90003c4e:	f8aa 3000 	strhmi.w	r3, [sl]
        x[index] = brute_y[index];
90003c52:	883b      	ldrhmi	r3, [r7, #0]
90003c54:	f8ab 3000 	strhmi.w	r3, [fp]
90003c58:	e7b1      	b.n	90003bbe <BSP_TS_GetState+0x7a>
        TS_State->touchX[index] = (tsXBoundary * _x[index]) >> 12;
90003c5a:	4b14      	ldr	r3, [pc, #80]	@ (90003cac <BSP_TS_GetState+0x168>)
90003c5c:	f8d8 2000 	ldr.w	r2, [r8]
90003c60:	881b      	ldrh	r3, [r3, #0]
90003c62:	4353      	muls	r3, r2
90003c64:	0b1b      	lsrs	r3, r3, #12
90003c66:	8023      	strh	r3, [r4, #0]
        TS_State->touchY[index] = (tsYBoundary * _y[index]) >> 12;
90003c68:	4b11      	ldr	r3, [pc, #68]	@ (90003cb0 <BSP_TS_GetState+0x16c>)
90003c6a:	881a      	ldrh	r2, [r3, #0]
90003c6c:	f8d9 3000 	ldr.w	r3, [r9]
90003c70:	435a      	muls	r2, r3
90003c72:	f3c2 320f 	ubfx	r2, r2, #12, #16
90003c76:	e7c5      	b.n	90003c04 <BSP_TS_GetState+0xc0>
          TS_State->touchEventId[index] = TOUCH_EVENT_PRESS_DOWN;
90003c78:	2301      	movs	r3, #1
          TS_State->touchEventId[index] = TOUCH_EVENT_NO_EVT;
90003c7a:	716b      	strb	r3, [r5, #5]
    for(index=0; index < TS_State->touchDetected; index++)
90003c7c:	9b03      	ldr	r3, [sp, #12]
90003c7e:	3402      	adds	r4, #2
90003c80:	f108 0804 	add.w	r8, r8, #4
90003c84:	f109 0904 	add.w	r9, r9, #4
90003c88:	3301      	adds	r3, #1
90003c8a:	3602      	adds	r6, #2
90003c8c:	3702      	adds	r7, #2
90003c8e:	9303      	str	r3, [sp, #12]
90003c90:	e778      	b.n	90003b84 <BSP_TS_GetState+0x40>
          TS_State->touchEventId[index] = TOUCH_EVENT_LIFT_UP;
90003c92:	2302      	movs	r3, #2
90003c94:	e7f1      	b.n	90003c7a <BSP_TS_GetState+0x136>
          TS_State->touchEventId[index] = TOUCH_EVENT_CONTACT;
90003c96:	2303      	movs	r3, #3
90003c98:	e7ef      	b.n	90003c7a <BSP_TS_GetState+0x136>
          TS_State->touchEventId[index] = TOUCH_EVENT_NO_EVT;
90003c9a:	2300      	movs	r3, #0
90003c9c:	e7ed      	b.n	90003c7a <BSP_TS_GetState+0x136>
90003c9e:	bf00      	nop
90003ca0:	20003198 	.word	0x20003198
90003ca4:	20003190 	.word	0x20003190
90003ca8:	20003191 	.word	0x20003191
90003cac:	20003194 	.word	0x20003194
90003cb0:	20003192 	.word	0x20003192
90003cb4:	2000317c 	.word	0x2000317c
90003cb8:	20003168 	.word	0x20003168

90003cbc <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
90003cbc:	4914      	ldr	r1, [pc, #80]	@ (90003d10 <SystemInit+0x54>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90003cbe:	2000      	movs	r0, #0
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
90003cc0:	f8d1 3088 	ldr.w	r3, [r1, #136]	@ 0x88
90003cc4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
90003cc8:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
  RCC->CR |= (uint32_t)0x00000001;
90003ccc:	4b11      	ldr	r3, [pc, #68]	@ (90003d14 <SystemInit+0x58>)
90003cce:	681a      	ldr	r2, [r3, #0]
90003cd0:	f042 0201 	orr.w	r2, r2, #1
90003cd4:	601a      	str	r2, [r3, #0]
  RCC->CFGR = 0x00000000;
90003cd6:	6098      	str	r0, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
90003cd8:	681a      	ldr	r2, [r3, #0]
90003cda:	f022 7284 	bic.w	r2, r2, #17301504	@ 0x1080000
90003cde:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
90003ce2:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
90003ce4:	4a0c      	ldr	r2, [pc, #48]	@ (90003d18 <SystemInit+0x5c>)
90003ce6:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
90003ce8:	681a      	ldr	r2, [r3, #0]
90003cea:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
90003cee:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
90003cf0:	60d8      	str	r0, [r3, #12]

  /*Enable FMC clock */
  RCC->AHB3ENR |= 0x00000001;
90003cf2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90003cf4:	f042 0201 	orr.w	r2, r2, #1
90003cf8:	639a      	str	r2, [r3, #56]	@ 0x38
  /*Disable FMC Bank1 to disable unwanted Speculation  */
  FMC_Bank1->BTCR[0] &= ~1 ;
90003cfa:	f04f 4220 	mov.w	r2, #2684354560	@ 0xa0000000
90003cfe:	6813      	ldr	r3, [r2, #0]
90003d00:	f023 0301 	bic.w	r3, r3, #1
90003d04:	6013      	str	r3, [r2, #0]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = QSPI_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation to QSPI_BASE in preprocessor defines */
90003d06:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
90003d0a:	608b      	str	r3, [r1, #8]
#endif
}
90003d0c:	4770      	bx	lr
90003d0e:	bf00      	nop
90003d10:	e000ed00 	.word	0xe000ed00
90003d14:	40023800 	.word	0x40023800
90003d18:	24003010 	.word	0x24003010

90003d1c <HAL_Init>:
  __HAL_FLASH_ART_ENABLE();
#endif /* ART_ACCELERATOR_ENABLE */

  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
90003d1c:	4a07      	ldr	r2, [pc, #28]	@ (90003d3c <HAL_Init+0x20>)
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90003d1e:	2003      	movs	r0, #3
{
90003d20:	b508      	push	{r3, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
90003d22:	6813      	ldr	r3, [r2, #0]
90003d24:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90003d28:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90003d2a:	f000 f82d 	bl	90003d88 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
90003d2e:	2000      	movs	r0, #0
90003d30:	f7fe fdcc 	bl	900028cc <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
90003d34:	f7fe fc04 	bl	90002540 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
90003d38:	2000      	movs	r0, #0
90003d3a:	bd08      	pop	{r3, pc}
90003d3c:	40023c00 	.word	0x40023c00

90003d40 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
90003d40:	4a03      	ldr	r2, [pc, #12]	@ (90003d50 <HAL_IncTick+0x10>)
90003d42:	4b04      	ldr	r3, [pc, #16]	@ (90003d54 <HAL_IncTick+0x14>)
90003d44:	6811      	ldr	r1, [r2, #0]
90003d46:	781b      	ldrb	r3, [r3, #0]
90003d48:	440b      	add	r3, r1
90003d4a:	6013      	str	r3, [r2, #0]
}
90003d4c:	4770      	bx	lr
90003d4e:	bf00      	nop
90003d50:	2000319c 	.word	0x2000319c
90003d54:	20000094 	.word	0x20000094

90003d58 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90003d58:	4b01      	ldr	r3, [pc, #4]	@ (90003d60 <HAL_GetTick+0x8>)
90003d5a:	6818      	ldr	r0, [r3, #0]
}
90003d5c:	4770      	bx	lr
90003d5e:	bf00      	nop
90003d60:	2000319c 	.word	0x2000319c

90003d64 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
90003d64:	b538      	push	{r3, r4, r5, lr}
90003d66:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
90003d68:	f7ff fff6 	bl	90003d58 <HAL_GetTick>
90003d6c:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
90003d6e:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
90003d70:	bf1e      	ittt	ne
90003d72:	4b04      	ldrne	r3, [pc, #16]	@ (90003d84 <HAL_Delay+0x20>)
90003d74:	781b      	ldrbne	r3, [r3, #0]
90003d76:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
90003d78:	f7ff ffee 	bl	90003d58 <HAL_GetTick>
90003d7c:	1b43      	subs	r3, r0, r5
90003d7e:	42a3      	cmp	r3, r4
90003d80:	d3fa      	bcc.n	90003d78 <HAL_Delay+0x14>
  {
  }
}
90003d82:	bd38      	pop	{r3, r4, r5, pc}
90003d84:	20000094 	.word	0x20000094

90003d88 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90003d88:	4907      	ldr	r1, [pc, #28]	@ (90003da8 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90003d8a:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90003d8c:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90003d8e:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90003d92:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
90003d96:	0412      	lsls	r2, r2, #16
90003d98:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90003d9a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
90003d9c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
90003da0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
90003da4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90003da6:	4770      	bx	lr
90003da8:	e000ed00 	.word	0xe000ed00

90003dac <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90003dac:	4b16      	ldr	r3, [pc, #88]	@ (90003e08 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
90003dae:	b530      	push	{r4, r5, lr}
90003db0:	68dc      	ldr	r4, [r3, #12]
90003db2:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90003db6:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90003dba:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90003dbc:	2b04      	cmp	r3, #4
90003dbe:	bf28      	it	cs
90003dc0:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90003dc2:	2d06      	cmp	r5, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90003dc4:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90003dc8:	bf8c      	ite	hi
90003dca:	3c03      	subhi	r4, #3
90003dcc:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90003dce:	fa05 f303 	lsl.w	r3, r5, r3
  if ((int32_t)(IRQn) >= 0)
90003dd2:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90003dd4:	fa05 f504 	lsl.w	r5, r5, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90003dd8:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90003ddc:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90003de0:	fa03 f304 	lsl.w	r3, r3, r4
90003de4:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90003de8:	ea4f 1303 	mov.w	r3, r3, lsl #4
90003dec:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
90003dee:	db06      	blt.n	90003dfe <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90003df0:	f100 4060 	add.w	r0, r0, #3758096384	@ 0xe0000000
90003df4:	f500 4061 	add.w	r0, r0, #57600	@ 0xe100
90003df8:	f880 3300 	strb.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90003dfc:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90003dfe:	f000 000f 	and.w	r0, r0, #15
90003e02:	4a02      	ldr	r2, [pc, #8]	@ (90003e0c <HAL_NVIC_SetPriority+0x60>)
90003e04:	5413      	strb	r3, [r2, r0]
90003e06:	e7f9      	b.n	90003dfc <HAL_NVIC_SetPriority+0x50>
90003e08:	e000ed00 	.word	0xe000ed00
90003e0c:	e000ed14 	.word	0xe000ed14

90003e10 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90003e10:	2800      	cmp	r0, #0
90003e12:	db07      	blt.n	90003e24 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003e14:	0941      	lsrs	r1, r0, #5
90003e16:	2301      	movs	r3, #1
90003e18:	f000 001f 	and.w	r0, r0, #31
90003e1c:	4a02      	ldr	r2, [pc, #8]	@ (90003e28 <HAL_NVIC_EnableIRQ+0x18>)
90003e1e:	4083      	lsls	r3, r0
90003e20:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90003e24:	4770      	bx	lr
90003e26:	bf00      	nop
90003e28:	e000e100 	.word	0xe000e100

90003e2c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90003e2c:	2800      	cmp	r0, #0
90003e2e:	db0c      	blt.n	90003e4a <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003e30:	0943      	lsrs	r3, r0, #5
90003e32:	2201      	movs	r2, #1
90003e34:	f000 001f 	and.w	r0, r0, #31
90003e38:	4904      	ldr	r1, [pc, #16]	@ (90003e4c <HAL_NVIC_DisableIRQ+0x20>)
90003e3a:	3320      	adds	r3, #32
90003e3c:	4082      	lsls	r2, r0
90003e3e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90003e42:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003e46:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90003e4a:	4770      	bx	lr
90003e4c:	e000e100 	.word	0xe000e100

90003e50 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90003e50:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90003e54:	4b04      	ldr	r3, [pc, #16]	@ (90003e68 <HAL_MPU_Disable+0x18>)
90003e56:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90003e58:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
90003e5c:	625a      	str	r2, [r3, #36]	@ 0x24
  
  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
90003e5e:	2200      	movs	r2, #0
90003e60:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
}
90003e64:	4770      	bx	lr
90003e66:	bf00      	nop
90003e68:	e000ed00 	.word	0xe000ed00

90003e6c <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90003e6c:	4b06      	ldr	r3, [pc, #24]	@ (90003e88 <HAL_MPU_Enable+0x1c>)
90003e6e:	f040 0001 	orr.w	r0, r0, #1
90003e72:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94
  
  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90003e76:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90003e78:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
90003e7c:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90003e7e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003e82:	f3bf 8f6f 	isb	sy
  
  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
90003e86:	4770      	bx	lr
90003e88:	e000ed00 	.word	0xe000ed00

90003e8c <HAL_MPU_ConfigRegion>:
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90003e8c:	7843      	ldrb	r3, [r0, #1]
90003e8e:	4a14      	ldr	r2, [pc, #80]	@ (90003ee0 <HAL_MPU_ConfigRegion+0x54>)
90003e90:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
90003e94:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
90003e98:	f023 0301 	bic.w	r3, r3, #1
90003e9c:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
90003ea0:	6843      	ldr	r3, [r0, #4]
90003ea2:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90003ea6:	7ac3      	ldrb	r3, [r0, #11]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90003ea8:	7b01      	ldrb	r1, [r0, #12]
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90003eaa:	061b      	lsls	r3, r3, #24
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90003eac:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
90003eb0:	7801      	ldrb	r1, [r0, #0]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90003eb2:	430b      	orrs	r3, r1
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90003eb4:	7a81      	ldrb	r1, [r0, #10]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90003eb6:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
90003eba:	7b41      	ldrb	r1, [r0, #13]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90003ebc:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90003ec0:	7b81      	ldrb	r1, [r0, #14]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90003ec2:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90003ec6:	7bc1      	ldrb	r1, [r0, #15]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90003ec8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90003ecc:	7a41      	ldrb	r1, [r0, #9]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90003ece:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90003ed2:	7a01      	ldrb	r1, [r0, #8]
90003ed4:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90003ed8:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
}
90003edc:	4770      	bx	lr
90003ede:	bf00      	nop
90003ee0:	e000ed00 	.word	0xe000ed00

90003ee4 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
90003ee4:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90003ee6:	4604      	mov	r4, r0
90003ee8:	b908      	cbnz	r0, 90003eee <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
90003eea:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
90003eec:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
90003eee:	7f43      	ldrb	r3, [r0, #29]
90003ef0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90003ef4:	b913      	cbnz	r3, 90003efc <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
90003ef6:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90003ef8:	f7fe fb40 	bl	9000257c <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
90003efc:	2302      	movs	r3, #2
90003efe:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90003f00:	7923      	ldrb	r3, [r4, #4]
90003f02:	b9e3      	cbnz	r3, 90003f3e <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90003f04:	6823      	ldr	r3, [r4, #0]
90003f06:	4a13      	ldr	r2, [pc, #76]	@ (90003f54 <HAL_CRC_Init+0x70>)
90003f08:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90003f0a:	689a      	ldr	r2, [r3, #8]
90003f0c:	f022 0218 	bic.w	r2, r2, #24
90003f10:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
90003f12:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90003f14:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
90003f16:	b9d2      	cbnz	r2, 90003f4e <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90003f18:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90003f1c:	611a      	str	r2, [r3, #16]
  return HAL_OK;
90003f1e:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90003f20:	689a      	ldr	r2, [r3, #8]
90003f22:	6961      	ldr	r1, [r4, #20]
90003f24:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90003f28:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90003f2a:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90003f2c:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90003f2e:	689a      	ldr	r2, [r3, #8]
90003f30:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90003f34:	430a      	orrs	r2, r1
90003f36:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90003f38:	2301      	movs	r3, #1
90003f3a:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
90003f3c:	e7d6      	b.n	90003eec <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
90003f3e:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90003f42:	4620      	mov	r0, r4
90003f44:	f000 f808 	bl	90003f58 <HAL_CRCEx_Polynomial_Set>
90003f48:	2800      	cmp	r0, #0
90003f4a:	d0e2      	beq.n	90003f12 <HAL_CRC_Init+0x2e>
90003f4c:	e7cd      	b.n	90003eea <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90003f4e:	6922      	ldr	r2, [r4, #16]
90003f50:	e7e4      	b.n	90003f1c <HAL_CRC_Init+0x38>
90003f52:	bf00      	nop
90003f54:	04c11db7 	.word	0x04c11db7

90003f58 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90003f58:	07cb      	lsls	r3, r1, #31
{
90003f5a:	b510      	push	{r4, lr}
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90003f5c:	d50d      	bpl.n	90003f7a <HAL_CRCEx_Polynomial_Set+0x22>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
90003f5e:	231f      	movs	r3, #31
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90003f60:	3b01      	subs	r3, #1
90003f62:	d31d      	bcc.n	90003fa0 <HAL_CRCEx_Polynomial_Set+0x48>
90003f64:	fa21 f403 	lsr.w	r4, r1, r3
90003f68:	07e4      	lsls	r4, r4, #31
90003f6a:	d5f9      	bpl.n	90003f60 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
90003f6c:	2a10      	cmp	r2, #16
90003f6e:	d013      	beq.n	90003f98 <HAL_CRCEx_Polynomial_Set+0x40>
90003f70:	2a10      	cmp	r2, #16
90003f72:	d804      	bhi.n	90003f7e <HAL_CRCEx_Polynomial_Set+0x26>
90003f74:	b13a      	cbz	r2, 90003f86 <HAL_CRCEx_Polynomial_Set+0x2e>
90003f76:	2a08      	cmp	r2, #8
90003f78:	d010      	beq.n	90003f9c <HAL_CRCEx_Polynomial_Set+0x44>
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
        {
          status =   HAL_ERROR;
90003f7a:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
90003f7c:	e00b      	b.n	90003f96 <HAL_CRCEx_Polynomial_Set+0x3e>
    switch (PolyLength)
90003f7e:	2a18      	cmp	r2, #24
90003f80:	d1fb      	bne.n	90003f7a <HAL_CRCEx_Polynomial_Set+0x22>
        if (msb >= HAL_CRC_LENGTH_7B)
90003f82:	2b06      	cmp	r3, #6
        if (msb >= HAL_CRC_LENGTH_16B)
90003f84:	d8f9      	bhi.n	90003f7a <HAL_CRCEx_Polynomial_Set+0x22>
    WRITE_REG(hcrc->Instance->POL, Pol);
90003f86:	6800      	ldr	r0, [r0, #0]
90003f88:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90003f8a:	6883      	ldr	r3, [r0, #8]
90003f8c:	f023 0318 	bic.w	r3, r3, #24
90003f90:	4313      	orrs	r3, r2
90003f92:	6083      	str	r3, [r0, #8]
90003f94:	2000      	movs	r0, #0
}
90003f96:	bd10      	pop	{r4, pc}
        if (msb >= HAL_CRC_LENGTH_8B)
90003f98:	2b07      	cmp	r3, #7
90003f9a:	e7f3      	b.n	90003f84 <HAL_CRCEx_Polynomial_Set+0x2c>
        if (msb >= HAL_CRC_LENGTH_16B)
90003f9c:	2b0f      	cmp	r3, #15
90003f9e:	e7f1      	b.n	90003f84 <HAL_CRCEx_Polynomial_Set+0x2c>
    switch (PolyLength)
90003fa0:	2a10      	cmp	r2, #16
90003fa2:	d1e5      	bne.n	90003f70 <HAL_CRCEx_Polynomial_Set+0x18>
90003fa4:	e7e9      	b.n	90003f7a <HAL_CRCEx_Polynomial_Set+0x22>
	...

90003fa8 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
90003fa8:	6803      	ldr	r3, [r0, #0]
{
90003faa:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
90003fac:	2018      	movs	r0, #24
90003fae:	b2d9      	uxtb	r1, r3
90003fb0:	3910      	subs	r1, #16
90003fb2:	fbb1 f0f0 	udiv	r0, r1, r0
{
90003fb6:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
90003fb8:	4c05      	ldr	r4, [pc, #20]	@ (90003fd0 <DMA_CalcBaseAndBitshift+0x28>)
  
  if (stream_number > 3U)
90003fba:	295f      	cmp	r1, #95	@ 0x5f
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
90003fbc:	5c20      	ldrb	r0, [r4, r0]
90003fbe:	65d0      	str	r0, [r2, #92]	@ 0x5c
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
90003fc0:	f423 707f 	bic.w	r0, r3, #1020	@ 0x3fc
90003fc4:	f020 0003 	bic.w	r0, r0, #3
90003fc8:	bf88      	it	hi
90003fca:	3004      	addhi	r0, #4
90003fcc:	6590      	str	r0, [r2, #88]	@ 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
90003fce:	bd10      	pop	{r4, pc}
90003fd0:	9002abb8 	.word	0x9002abb8

90003fd4 <HAL_DMA_Init>:
{
90003fd4:	b570      	push	{r4, r5, r6, lr}
90003fd6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
90003fd8:	f7ff febe 	bl	90003d58 <HAL_GetTick>
90003fdc:	4605      	mov	r5, r0
  if(hdma == NULL)
90003fde:	2c00      	cmp	r4, #0
90003fe0:	d060      	beq.n	900040a4 <HAL_DMA_Init+0xd0>
  hdma->State = HAL_DMA_STATE_BUSY;
90003fe2:	2302      	movs	r3, #2
  __HAL_DMA_DISABLE(hdma);
90003fe4:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
90003fe6:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
  __HAL_UNLOCK(hdma);
90003fea:	2300      	movs	r3, #0
90003fec:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
  __HAL_DMA_DISABLE(hdma);
90003ff0:	6813      	ldr	r3, [r2, #0]
90003ff2:	f023 0301 	bic.w	r3, r3, #1
90003ff6:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
90003ff8:	6822      	ldr	r2, [r4, #0]
90003ffa:	6813      	ldr	r3, [r2, #0]
90003ffc:	07d8      	lsls	r0, r3, #31
90003ffe:	d42e      	bmi.n	9000405e <HAL_DMA_Init+0x8a>
  tmp = hdma->Instance->CR;
90004000:	6813      	ldr	r3, [r2, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
90004002:	4832      	ldr	r0, [pc, #200]	@ (900040cc <HAL_DMA_Init+0xf8>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
90004004:	69a1      	ldr	r1, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
90004006:	4018      	ands	r0, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
90004008:	e9d4 3501 	ldrd	r3, r5, [r4, #4]
9000400c:	432b      	orrs	r3, r5
9000400e:	68e5      	ldr	r5, [r4, #12]
90004010:	432b      	orrs	r3, r5
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
90004012:	6925      	ldr	r5, [r4, #16]
90004014:	432b      	orrs	r3, r5
90004016:	6965      	ldr	r5, [r4, #20]
90004018:	432b      	orrs	r3, r5
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
9000401a:	69e5      	ldr	r5, [r4, #28]
9000401c:	430b      	orrs	r3, r1
9000401e:	432b      	orrs	r3, r5
          hdma->Init.Mode                | hdma->Init.Priority;
90004020:	6a25      	ldr	r5, [r4, #32]
90004022:	432b      	orrs	r3, r5
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
90004024:	4303      	orrs	r3, r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
90004026:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90004028:	2804      	cmp	r0, #4
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
9000402a:	bf02      	ittt	eq
9000402c:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	@ 0x2c
90004030:	4335      	orreq	r5, r6
90004032:	432b      	orreq	r3, r5
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
90004034:	2804      	cmp	r0, #4
  hdma->Instance->CR = tmp;  
90004036:	6013      	str	r3, [r2, #0]
  tmp = hdma->Instance->FCR;
90004038:	6953      	ldr	r3, [r2, #20]
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
9000403a:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
9000403e:	ea43 0300 	orr.w	r3, r3, r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
90004042:	d135      	bne.n	900040b0 <HAL_DMA_Init+0xdc>
    tmp |= hdma->Init.FIFOThreshold;
90004044:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
90004046:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
    tmp |= hdma->Init.FIFOThreshold;
90004048:	4303      	orrs	r3, r0
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
9000404a:	b38d      	cbz	r5, 900040b0 <HAL_DMA_Init+0xdc>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
9000404c:	b991      	cbnz	r1, 90004074 <HAL_DMA_Init+0xa0>
  {
    switch (tmp)
9000404e:	2801      	cmp	r0, #1
90004050:	d020      	beq.n	90004094 <HAL_DMA_Init+0xc0>
90004052:	f030 0102 	bics.w	r1, r0, #2
90004056:	d12b      	bne.n	900040b0 <HAL_DMA_Init+0xdc>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
90004058:	01e9      	lsls	r1, r5, #7
9000405a:	d529      	bpl.n	900040b0 <HAL_DMA_Init+0xdc>
9000405c:	e01d      	b.n	9000409a <HAL_DMA_Init+0xc6>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
9000405e:	f7ff fe7b 	bl	90003d58 <HAL_GetTick>
90004062:	1b40      	subs	r0, r0, r5
90004064:	2805      	cmp	r0, #5
90004066:	d9c7      	bls.n	90003ff8 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
90004068:	2320      	movs	r3, #32
      hdma->State = HAL_DMA_STATE_TIMEOUT;
9000406a:	2003      	movs	r0, #3
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
9000406c:	6563      	str	r3, [r4, #84]	@ 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
9000406e:	f884 0035 	strb.w	r0, [r4, #53]	@ 0x35
}
90004072:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
90004074:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
90004078:	d116      	bne.n	900040a8 <HAL_DMA_Init+0xd4>
    switch (tmp)
9000407a:	2803      	cmp	r0, #3
9000407c:	d818      	bhi.n	900040b0 <HAL_DMA_Init+0xdc>
9000407e:	a101      	add	r1, pc, #4	@ (adr r1, 90004084 <HAL_DMA_Init+0xb0>)
90004080:	f851 f020 	ldr.w	pc, [r1, r0, lsl #2]
90004084:	9000409b 	.word	0x9000409b
90004088:	90004059 	.word	0x90004059
9000408c:	9000409b 	.word	0x9000409b
90004090:	90004095 	.word	0x90004095
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
90004094:	f1b5 7fc0 	cmp.w	r5, #25165824	@ 0x1800000
90004098:	d10a      	bne.n	900040b0 <HAL_DMA_Init+0xdc>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
9000409a:	2340      	movs	r3, #64	@ 0x40
9000409c:	6563      	str	r3, [r4, #84]	@ 0x54
        hdma->State = HAL_DMA_STATE_RESET;
9000409e:	2300      	movs	r3, #0
900040a0:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
    return HAL_ERROR;
900040a4:	2001      	movs	r0, #1
900040a6:	e7e4      	b.n	90004072 <HAL_DMA_Init+0x9e>
    switch (tmp)
900040a8:	2802      	cmp	r0, #2
900040aa:	d9f6      	bls.n	9000409a <HAL_DMA_Init+0xc6>
900040ac:	2803      	cmp	r0, #3
900040ae:	d0d3      	beq.n	90004058 <HAL_DMA_Init+0x84>
  hdma->Instance->FCR = tmp;
900040b0:	6153      	str	r3, [r2, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
900040b2:	4620      	mov	r0, r4
900040b4:	f7ff ff78 	bl	90003fa8 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
900040b8:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
900040ba:	233f      	movs	r3, #63	@ 0x3f
900040bc:	4093      	lsls	r3, r2
900040be:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
900040c0:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
900040c2:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
900040c4:	6560      	str	r0, [r4, #84]	@ 0x54
  hdma->State = HAL_DMA_STATE_READY;
900040c6:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
  return HAL_OK;
900040ca:	e7d2      	b.n	90004072 <HAL_DMA_Init+0x9e>
900040cc:	f010803f 	.word	0xf010803f

900040d0 <HAL_DMA_DeInit>:
{
900040d0:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
900040d2:	4605      	mov	r5, r0
900040d4:	b320      	cbz	r0, 90004120 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
900040d6:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
900040da:	2b02      	cmp	r3, #2
900040dc:	b2dc      	uxtb	r4, r3
900040de:	d01d      	beq.n	9000411c <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
900040e0:	6803      	ldr	r3, [r0, #0]
  hdma->Instance->CR   = 0U;
900040e2:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
900040e4:	681a      	ldr	r2, [r3, #0]
900040e6:	f022 0201 	bic.w	r2, r2, #1
900040ea:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = (uint32_t)0x00000021U;
900040ec:	2221      	movs	r2, #33	@ 0x21
  hdma->Instance->CR   = 0U;
900040ee:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
900040f0:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
900040f2:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
900040f4:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
900040f6:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = (uint32_t)0x00000021U;
900040f8:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
900040fa:	f7ff ff55 	bl	90003fa8 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
900040fe:	6dea      	ldr	r2, [r5, #92]	@ 0x5c
90004100:	233f      	movs	r3, #63	@ 0x3f
90004102:	4093      	lsls	r3, r2
90004104:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
90004106:	656c      	str	r4, [r5, #84]	@ 0x54
  __HAL_UNLOCK(hdma);
90004108:	f885 4034 	strb.w	r4, [r5, #52]	@ 0x34
  hdma->State = HAL_DMA_STATE_RESET;
9000410c:	f885 4035 	strb.w	r4, [r5, #53]	@ 0x35
  hdma->XferHalfCpltCallback = NULL;
90004110:	e9c5 440f 	strd	r4, r4, [r5, #60]	@ 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
90004114:	e9c5 4411 	strd	r4, r4, [r5, #68]	@ 0x44
  hdma->XferAbortCallback = NULL;  
90004118:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
}
9000411c:	4620      	mov	r0, r4
9000411e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90004120:	2401      	movs	r4, #1
90004122:	e7fb      	b.n	9000411c <HAL_DMA_DeInit+0x4c>

90004124 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
90004124:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
90004126:	4604      	mov	r4, r0
90004128:	b320      	cbz	r0, 90004174 <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
9000412a:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
9000412e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90004132:	b91b      	cbnz	r3, 9000413c <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
90004134:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
90004138:	f7fe fa36 	bl	900025a8 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000413c:	2302      	movs	r3, #2

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
9000413e:	6861      	ldr	r1, [r4, #4]
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90004140:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90004142:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
90004146:	6823      	ldr	r3, [r4, #0]
90004148:	681a      	ldr	r2, [r3, #0]
9000414a:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
9000414e:	430a      	orrs	r2, r1
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
90004150:	68a1      	ldr	r1, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
90004152:	601a      	str	r2, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
90004154:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90004156:	f022 0207 	bic.w	r2, r2, #7
9000415a:	430a      	orrs	r2, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000415c:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
9000415e:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90004160:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
90004162:	f36f 020d 	bfc	r2, #0, #14
90004166:	430a      	orrs	r2, r1
90004168:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000416a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000416c:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000416e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
90004172:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90004174:	2001      	movs	r0, #1
90004176:	e7fc      	b.n	90004172 <HAL_DMA2D_Init+0x4e>

90004178 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
90004178:	4770      	bx	lr

9000417a <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
9000417a:	4770      	bx	lr

9000417c <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000417c:	6803      	ldr	r3, [r0, #0]
{
9000417e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90004180:	685e      	ldr	r6, [r3, #4]
{
90004182:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90004184:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90004186:	07f2      	lsls	r2, r6, #31
90004188:	d514      	bpl.n	900041b4 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
9000418a:	05e9      	lsls	r1, r5, #23
9000418c:	d512      	bpl.n	900041b4 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
9000418e:	681a      	ldr	r2, [r3, #0]
90004190:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
90004194:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90004196:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
90004198:	f042 0201 	orr.w	r2, r2, #1
9000419c:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
9000419e:	2201      	movs	r2, #1
900041a0:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900041a2:	2304      	movs	r3, #4
900041a4:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
900041a8:	2300      	movs	r3, #0
900041aa:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
900041ae:	6943      	ldr	r3, [r0, #20]
900041b0:	b103      	cbz	r3, 900041b4 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
900041b2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
900041b4:	06b2      	lsls	r2, r6, #26
900041b6:	d516      	bpl.n	900041e6 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
900041b8:	04ab      	lsls	r3, r5, #18
900041ba:	d514      	bpl.n	900041e6 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
900041bc:	6823      	ldr	r3, [r4, #0]
900041be:	681a      	ldr	r2, [r3, #0]
900041c0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
900041c4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
900041c6:	2220      	movs	r2, #32
900041c8:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
900041ca:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900041cc:	f043 0302 	orr.w	r3, r3, #2
900041d0:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900041d2:	2304      	movs	r3, #4
900041d4:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
900041d8:	2300      	movs	r3, #0
900041da:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
900041de:	6963      	ldr	r3, [r4, #20]
900041e0:	b10b      	cbz	r3, 900041e6 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
900041e2:	4620      	mov	r0, r4
900041e4:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
900041e6:	0730      	lsls	r0, r6, #28
900041e8:	d516      	bpl.n	90004218 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
900041ea:	0529      	lsls	r1, r5, #20
900041ec:	d514      	bpl.n	90004218 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
900041ee:	6823      	ldr	r3, [r4, #0]
900041f0:	681a      	ldr	r2, [r3, #0]
900041f2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
900041f6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
900041f8:	2208      	movs	r2, #8
900041fa:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
900041fc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900041fe:	f043 0304 	orr.w	r3, r3, #4
90004202:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90004204:	2304      	movs	r3, #4
90004206:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
9000420a:	2300      	movs	r3, #0
9000420c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
90004210:	6963      	ldr	r3, [r4, #20]
90004212:	b10b      	cbz	r3, 90004218 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
90004214:	4620      	mov	r0, r4
90004216:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
90004218:	0772      	lsls	r2, r6, #29
9000421a:	d50b      	bpl.n	90004234 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
9000421c:	056b      	lsls	r3, r5, #21
9000421e:	d509      	bpl.n	90004234 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90004220:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
90004222:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90004224:	681a      	ldr	r2, [r3, #0]
90004226:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
9000422a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
9000422c:	2204      	movs	r2, #4
9000422e:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90004230:	f7ff ffa2 	bl	90004178 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90004234:	07b0      	lsls	r0, r6, #30
90004236:	d514      	bpl.n	90004262 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
90004238:	05a9      	lsls	r1, r5, #22
9000423a:	d512      	bpl.n	90004262 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
9000423c:	6823      	ldr	r3, [r4, #0]
9000423e:	681a      	ldr	r2, [r3, #0]
90004240:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
90004244:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90004246:	2202      	movs	r2, #2
90004248:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000424a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000424c:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000424e:	2301      	movs	r3, #1
90004250:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
90004254:	2300      	movs	r3, #0
90004256:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
9000425a:	6923      	ldr	r3, [r4, #16]
9000425c:	b10b      	cbz	r3, 90004262 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
9000425e:	4620      	mov	r0, r4
90004260:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90004262:	06f2      	lsls	r2, r6, #27
90004264:	d513      	bpl.n	9000428e <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
90004266:	04eb      	lsls	r3, r5, #19
90004268:	d511      	bpl.n	9000428e <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000426a:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000426c:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000426e:	681a      	ldr	r2, [r3, #0]
90004270:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
90004274:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90004276:	2210      	movs	r2, #16
90004278:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000427a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000427c:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000427e:	2301      	movs	r3, #1
90004280:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
90004284:	2300      	movs	r3, #0
90004286:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000428a:	f7ff ff76 	bl	9000417a <HAL_DMA2D_CLUTLoadingCpltCallback>
}
9000428e:	bd70      	pop	{r4, r5, r6, pc}

90004290 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
90004290:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
  assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */

  /* Process locked */
  __HAL_LOCK(hdma2d);
90004292:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
{
90004296:	4603      	mov	r3, r0
90004298:	2002      	movs	r0, #2
  __HAL_LOCK(hdma2d);
9000429a:	2a01      	cmp	r2, #1
9000429c:	d02b      	beq.n	900042f6 <HAL_DMA2D_ConfigLayer+0x66>
9000429e:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900042a0:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39
#if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);
#else
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
900042a4:	010e      	lsls	r6, r1, #4
900042a6:	4f1c      	ldr	r7, [pc, #112]	@ (90004318 <HAL_DMA2D_ConfigLayer+0x88>)
  __HAL_LOCK(hdma2d);
900042a8:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
900042ac:	eb03 1201 	add.w	r2, r3, r1, lsl #4
900042b0:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
900042b4:	6a55      	ldr	r5, [r2, #36]	@ 0x24
900042b6:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900042ba:	3c09      	subs	r4, #9
900042bc:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
900042be:	bf96      	itet	ls
900042c0:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
900042c4:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
900042c8:	4310      	orrls	r0, r2

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900042ca:	681a      	ldr	r2, [r3, #0]
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
900042cc:	b9a1      	cbnz	r1, 900042f8 <HAL_DMA2D_ConfigLayer+0x68>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900042ce:	6a51      	ldr	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900042d0:	2c01      	cmp	r4, #1
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900042d2:	ea01 0107 	and.w	r1, r1, r7
900042d6:	ea41 0100 	orr.w	r1, r1, r0
900042da:	6251      	str	r1, [r2, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900042dc:	6999      	ldr	r1, [r3, #24]
900042de:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900042e0:	d803      	bhi.n	900042ea <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
900042e2:	6a59      	ldr	r1, [r3, #36]	@ 0x24
900042e4:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
900042e8:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
900042ea:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
900042ec:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
900042ee:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
900042f2:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
900042f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900042f8:	69d1      	ldr	r1, [r2, #28]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900042fa:	2c01      	cmp	r4, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900042fc:	ea01 0107 	and.w	r1, r1, r7
90004300:	ea41 0100 	orr.w	r1, r1, r0
90004304:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90004306:	eb03 0106 	add.w	r1, r3, r6
9000430a:	6989      	ldr	r1, [r1, #24]
9000430c:	6111      	str	r1, [r2, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000430e:	d8ec      	bhi.n	900042ea <HAL_DMA2D_ConfigLayer+0x5a>
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90004310:	f025 457f 	bic.w	r5, r5, #4278190080	@ 0xff000000
90004314:	6215      	str	r5, [r2, #32]
90004316:	e7e8      	b.n	900042ea <HAL_DMA2D_ConfigLayer+0x5a>
90004318:	00fcfff0 	.word	0x00fcfff0

9000431c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
9000431c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for (position = 0; position < GPIO_NUMBER; position++)
90004320:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90004322:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 900044e0 <HAL_GPIO_Init+0x1c4>
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
90004326:	4a6c      	ldr	r2, [pc, #432]	@ (900044d8 <HAL_GPIO_Init+0x1bc>)
    ioposition = ((uint32_t)0x01) << position;
90004328:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
9000432a:	680d      	ldr	r5, [r1, #0]
    ioposition = ((uint32_t)0x01) << position;
9000432c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
9000432e:	ea04 0605 	and.w	r6, r4, r5
    if (iocurrent == ioposition)
90004332:	43ac      	bics	r4, r5
90004334:	f040 80b7 	bne.w	900044a6 <HAL_GPIO_Init+0x18a>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90004338:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
9000433a:	2703      	movs	r7, #3
9000433c:	ea4f 0e43 	mov.w	lr, r3, lsl #1
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90004340:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
90004344:	fa07 fc0e 	lsl.w	ip, r7, lr
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90004348:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
9000434a:	ea6f 0c0c 	mvn.w	ip, ip
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000434e:	2f01      	cmp	r7, #1
90004350:	d834      	bhi.n	900043bc <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR;
90004352:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
90004354:	ea07 080c 	and.w	r8, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2));
90004358:	68cf      	ldr	r7, [r1, #12]
9000435a:	fa07 f70e 	lsl.w	r7, r7, lr
9000435e:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->OSPEEDR = temp;
90004362:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
90004364:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
90004366:	ea27 0806 	bic.w	r8, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000436a:	f3c5 1700 	ubfx	r7, r5, #4, #1
9000436e:	409f      	lsls	r7, r3
90004370:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->OTYPER = temp;
90004374:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
90004376:	68c7      	ldr	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90004378:	2c02      	cmp	r4, #2
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
9000437a:	ea07 080c 	and.w	r8, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2));
9000437e:	688f      	ldr	r7, [r1, #8]
90004380:	fa07 f70e 	lsl.w	r7, r7, lr
90004384:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->PUPDR = temp;
90004388:	60c7      	str	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000438a:	d119      	bne.n	900043c0 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3];
9000438c:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
90004390:	f003 0a07 	and.w	sl, r3, #7
90004394:	f04f 0b0f 	mov.w	fp, #15
90004398:	eb00 0888 	add.w	r8, r0, r8, lsl #2
9000439c:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
        temp = GPIOx->AFR[position >> 3];
900043a0:	f8d8 7020 	ldr.w	r7, [r8, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
900043a4:	fa0b fb0a 	lsl.w	fp, fp, sl
900043a8:	ea27 0b0b 	bic.w	fp, r7, fp
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
900043ac:	690f      	ldr	r7, [r1, #16]
900043ae:	fa07 f70a 	lsl.w	r7, r7, sl
900043b2:	ea47 070b 	orr.w	r7, r7, fp
        GPIOx->AFR[position >> 3] = temp;
900043b6:	f8c8 7020 	str.w	r7, [r8, #32]
900043ba:	e001      	b.n	900043c0 <HAL_GPIO_Init+0xa4>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
900043bc:	2c03      	cmp	r4, #3
900043be:	d1da      	bne.n	90004376 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
900043c0:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
900043c2:	fa04 f40e 	lsl.w	r4, r4, lr
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
900043c6:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
900043ca:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
900043ce:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
900043d2:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
900043d4:	d067      	beq.n	900044a6 <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900043d6:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
900043da:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
900043de:	f003 0c03 	and.w	ip, r3, #3
900043e2:	f04f 0e0f 	mov.w	lr, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900043e6:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
900043ea:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
900043ee:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900043f2:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
900043f6:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
900043fa:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
900043fe:	fa0e fe0c 	lsl.w	lr, lr, ip
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90004402:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
90004406:	9401      	str	r4, [sp, #4]
90004408:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2];
9000440a:	68bc      	ldr	r4, [r7, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
9000440c:	ea24 0e0e 	bic.w	lr, r4, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
90004410:	4c32      	ldr	r4, [pc, #200]	@ (900044dc <HAL_GPIO_Init+0x1c0>)
90004412:	42a0      	cmp	r0, r4
90004414:	d04e      	beq.n	900044b4 <HAL_GPIO_Init+0x198>
90004416:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
9000441a:	42a0      	cmp	r0, r4
9000441c:	d04c      	beq.n	900044b8 <HAL_GPIO_Init+0x19c>
9000441e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
90004422:	42a0      	cmp	r0, r4
90004424:	d04a      	beq.n	900044bc <HAL_GPIO_Init+0x1a0>
90004426:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
9000442a:	42a0      	cmp	r0, r4
9000442c:	d048      	beq.n	900044c0 <HAL_GPIO_Init+0x1a4>
9000442e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
90004432:	42a0      	cmp	r0, r4
90004434:	d046      	beq.n	900044c4 <HAL_GPIO_Init+0x1a8>
90004436:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
9000443a:	42a0      	cmp	r0, r4
9000443c:	d044      	beq.n	900044c8 <HAL_GPIO_Init+0x1ac>
9000443e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
90004442:	42a0      	cmp	r0, r4
90004444:	d042      	beq.n	900044cc <HAL_GPIO_Init+0x1b0>
90004446:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
9000444a:	42a0      	cmp	r0, r4
9000444c:	d040      	beq.n	900044d0 <HAL_GPIO_Init+0x1b4>
9000444e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
90004452:	42a0      	cmp	r0, r4
90004454:	d03e      	beq.n	900044d4 <HAL_GPIO_Init+0x1b8>
90004456:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
9000445a:	42a0      	cmp	r0, r4
9000445c:	bf14      	ite	ne
9000445e:	240a      	movne	r4, #10
90004460:	2409      	moveq	r4, #9
90004462:	fa04 f40c 	lsl.w	r4, r4, ip
        temp &= ~((uint32_t)iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
90004466:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
9000446a:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2] = temp;
9000446e:	60bc      	str	r4, [r7, #8]
        temp &= ~((uint32_t)iocurrent);
90004470:	ea6f 0706 	mvn.w	r7, r6
        temp = EXTI->RTSR;
90004474:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
90004476:	bf0c      	ite	eq
90004478:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
9000447a:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
9000447c:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        EXTI->RTSR = temp;
90004480:	6094      	str	r4, [r2, #8]
        temp = EXTI->FTSR;
90004482:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
90004484:	bf0c      	ite	eq
90004486:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
90004488:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
9000448a:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        EXTI->FTSR = temp;
9000448e:	60d4      	str	r4, [r2, #12]
        temp = EXTI->EMR;
90004490:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
90004492:	bf0c      	ite	eq
90004494:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
90004496:	4334      	orrne	r4, r6
        EXTI->EMR = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
        temp &= ~((uint32_t)iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
90004498:	03ed      	lsls	r5, r5, #15
        EXTI->EMR = temp;
9000449a:	6054      	str	r4, [r2, #4]
        temp = EXTI->IMR;
9000449c:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
9000449e:	bf54      	ite	pl
900044a0:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
900044a2:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
900044a4:	6014      	str	r4, [r2, #0]
  for (position = 0; position < GPIO_NUMBER; position++)
900044a6:	3301      	adds	r3, #1
900044a8:	2b10      	cmp	r3, #16
900044aa:	f47f af3d 	bne.w	90004328 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
900044ae:	b003      	add	sp, #12
900044b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
900044b4:	2400      	movs	r4, #0
900044b6:	e7d4      	b.n	90004462 <HAL_GPIO_Init+0x146>
900044b8:	2401      	movs	r4, #1
900044ba:	e7d2      	b.n	90004462 <HAL_GPIO_Init+0x146>
900044bc:	2402      	movs	r4, #2
900044be:	e7d0      	b.n	90004462 <HAL_GPIO_Init+0x146>
900044c0:	2403      	movs	r4, #3
900044c2:	e7ce      	b.n	90004462 <HAL_GPIO_Init+0x146>
900044c4:	2404      	movs	r4, #4
900044c6:	e7cc      	b.n	90004462 <HAL_GPIO_Init+0x146>
900044c8:	2405      	movs	r4, #5
900044ca:	e7ca      	b.n	90004462 <HAL_GPIO_Init+0x146>
900044cc:	2406      	movs	r4, #6
900044ce:	e7c8      	b.n	90004462 <HAL_GPIO_Init+0x146>
900044d0:	2407      	movs	r4, #7
900044d2:	e7c6      	b.n	90004462 <HAL_GPIO_Init+0x146>
900044d4:	2408      	movs	r4, #8
900044d6:	e7c4      	b.n	90004462 <HAL_GPIO_Init+0x146>
900044d8:	40013c00 	.word	0x40013c00
900044dc:	40020000 	.word	0x40020000
900044e0:	40023800 	.word	0x40023800

900044e4 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
900044e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));

  /* Configure the port pins */
  for (position = 0; position < GPIO_NUMBER; position++)
900044e8:	2200      	movs	r2, #0
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
900044ea:	f04f 0a01 	mov.w	sl, #1

    if (iocurrent == ioposition)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2];
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
900044ee:	f04f 080f 	mov.w	r8, #15
        tmp = ((uint32_t)0x0F) << (4 * (position & 0x03));
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
      }
      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
900044f2:	f04f 0b03 	mov.w	fp, #3
        EXTI->IMR &= ~((uint32_t)iocurrent);
900044f6:	4c46      	ldr	r4, [pc, #280]	@ (90004610 <HAL_GPIO_DeInit+0x12c>)
    ioposition = ((uint32_t)0x01) << position;
900044f8:	fa0a fc02 	lsl.w	ip, sl, r2
    if (iocurrent == ioposition)
900044fc:	ea3c 0301 	bics.w	r3, ip, r1
    iocurrent = (GPIO_Pin) & ioposition;
90004500:	ea0c 0601 	and.w	r6, ip, r1
    if (iocurrent == ioposition)
90004504:	d16c      	bne.n	900045e0 <HAL_GPIO_DeInit+0xfc>
      tmp = SYSCFG->EXTICR[position >> 2];
90004506:	f022 0503 	bic.w	r5, r2, #3
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
9000450a:	f002 0703 	and.w	r7, r2, #3
9000450e:	f105 4580 	add.w	r5, r5, #1073741824	@ 0x40000000
90004512:	00bf      	lsls	r7, r7, #2
90004514:	f505 359c 	add.w	r5, r5, #79872	@ 0x13800
90004518:	fa08 f907 	lsl.w	r9, r8, r7
      tmp = SYSCFG->EXTICR[position >> 2];
9000451c:	68ab      	ldr	r3, [r5, #8]
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
9000451e:	ea09 0e03 	and.w	lr, r9, r3
      if (tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
90004522:	4b3c      	ldr	r3, [pc, #240]	@ (90004614 <HAL_GPIO_DeInit+0x130>)
90004524:	4298      	cmp	r0, r3
90004526:	d060      	beq.n	900045ea <HAL_GPIO_DeInit+0x106>
90004528:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
9000452c:	4298      	cmp	r0, r3
9000452e:	d05e      	beq.n	900045ee <HAL_GPIO_DeInit+0x10a>
90004530:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
90004534:	4298      	cmp	r0, r3
90004536:	d05c      	beq.n	900045f2 <HAL_GPIO_DeInit+0x10e>
90004538:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
9000453c:	4298      	cmp	r0, r3
9000453e:	d05a      	beq.n	900045f6 <HAL_GPIO_DeInit+0x112>
90004540:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
90004544:	4298      	cmp	r0, r3
90004546:	d058      	beq.n	900045fa <HAL_GPIO_DeInit+0x116>
90004548:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
9000454c:	4298      	cmp	r0, r3
9000454e:	d056      	beq.n	900045fe <HAL_GPIO_DeInit+0x11a>
90004550:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
90004554:	4298      	cmp	r0, r3
90004556:	d054      	beq.n	90004602 <HAL_GPIO_DeInit+0x11e>
90004558:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
9000455c:	4298      	cmp	r0, r3
9000455e:	d052      	beq.n	90004606 <HAL_GPIO_DeInit+0x122>
90004560:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
90004564:	4298      	cmp	r0, r3
90004566:	d050      	beq.n	9000460a <HAL_GPIO_DeInit+0x126>
90004568:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
9000456c:	4298      	cmp	r0, r3
9000456e:	bf14      	ite	ne
90004570:	230a      	movne	r3, #10
90004572:	2309      	moveq	r3, #9
90004574:	40bb      	lsls	r3, r7
90004576:	4573      	cmp	r3, lr
90004578:	d113      	bne.n	900045a2 <HAL_GPIO_DeInit+0xbe>
        EXTI->IMR &= ~((uint32_t)iocurrent);
9000457a:	6823      	ldr	r3, [r4, #0]
9000457c:	ea23 0306 	bic.w	r3, r3, r6
90004580:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
90004582:	6863      	ldr	r3, [r4, #4]
90004584:	ea23 0306 	bic.w	r3, r3, r6
90004588:	6063      	str	r3, [r4, #4]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
9000458a:	68e3      	ldr	r3, [r4, #12]
9000458c:	ea23 0306 	bic.w	r3, r3, r6
90004590:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
90004592:	68a3      	ldr	r3, [r4, #8]
90004594:	ea23 0306 	bic.w	r3, r3, r6
90004598:	60a3      	str	r3, [r4, #8]
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
9000459a:	68ab      	ldr	r3, [r5, #8]
9000459c:	ea23 0309 	bic.w	r3, r3, r9
900045a0:	60ab      	str	r3, [r5, #8]
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
900045a2:	0053      	lsls	r3, r2, #1
900045a4:	6805      	ldr	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
900045a6:	08d6      	lsrs	r6, r2, #3
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
900045a8:	fa0b f303 	lsl.w	r3, fp, r3
900045ac:	eb00 0686 	add.w	r6, r0, r6, lsl #2
900045b0:	ea25 0503 	bic.w	r5, r5, r3
900045b4:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
900045b6:	f002 0507 	and.w	r5, r2, #7
900045ba:	6a37      	ldr	r7, [r6, #32]
900045bc:	00ad      	lsls	r5, r5, #2
900045be:	fa08 f505 	lsl.w	r5, r8, r5
900045c2:	ea27 0705 	bic.w	r7, r7, r5
900045c6:	6237      	str	r7, [r6, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
900045c8:	68c5      	ldr	r5, [r0, #12]
900045ca:	ea25 0503 	bic.w	r5, r5, r3
900045ce:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
900045d0:	6845      	ldr	r5, [r0, #4]
900045d2:	ea25 050c 	bic.w	r5, r5, ip
900045d6:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
900045d8:	6885      	ldr	r5, [r0, #8]
900045da:	ea25 0303 	bic.w	r3, r5, r3
900045de:	6083      	str	r3, [r0, #8]
  for (position = 0; position < GPIO_NUMBER; position++)
900045e0:	3201      	adds	r2, #1
900045e2:	2a10      	cmp	r2, #16
900045e4:	d188      	bne.n	900044f8 <HAL_GPIO_DeInit+0x14>
    }
  }
}
900045e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
900045ea:	2300      	movs	r3, #0
900045ec:	e7c2      	b.n	90004574 <HAL_GPIO_DeInit+0x90>
900045ee:	2301      	movs	r3, #1
900045f0:	e7c0      	b.n	90004574 <HAL_GPIO_DeInit+0x90>
900045f2:	2302      	movs	r3, #2
900045f4:	e7be      	b.n	90004574 <HAL_GPIO_DeInit+0x90>
900045f6:	2303      	movs	r3, #3
900045f8:	e7bc      	b.n	90004574 <HAL_GPIO_DeInit+0x90>
900045fa:	2304      	movs	r3, #4
900045fc:	e7ba      	b.n	90004574 <HAL_GPIO_DeInit+0x90>
900045fe:	2305      	movs	r3, #5
90004600:	e7b8      	b.n	90004574 <HAL_GPIO_DeInit+0x90>
90004602:	2306      	movs	r3, #6
90004604:	e7b6      	b.n	90004574 <HAL_GPIO_DeInit+0x90>
90004606:	2307      	movs	r3, #7
90004608:	e7b4      	b.n	90004574 <HAL_GPIO_DeInit+0x90>
9000460a:	2308      	movs	r3, #8
9000460c:	e7b2      	b.n	90004574 <HAL_GPIO_DeInit+0x90>
9000460e:	bf00      	nop
90004610:	40013c00 	.word	0x40013c00
90004614:	40020000 	.word	0x40020000

90004618 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
90004618:	6903      	ldr	r3, [r0, #16]
9000461a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
9000461c:	bf14      	ite	ne
9000461e:	2001      	movne	r0, #1
90004620:	2000      	moveq	r0, #0
90004622:	4770      	bx	lr

90004624 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
90004624:	b10a      	cbz	r2, 9000462a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
90004626:	6181      	str	r1, [r0, #24]
  }
}
90004628:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
9000462a:	0409      	lsls	r1, r1, #16
9000462c:	e7fb      	b.n	90004626 <HAL_GPIO_WritePin+0x2>

9000462e <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
9000462e:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
90004630:	ea01 0203 	and.w	r2, r1, r3
90004634:	ea21 0103 	bic.w	r1, r1, r3
90004638:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000463c:	6181      	str	r1, [r0, #24]
}
9000463e:	4770      	bx	lr

90004640 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90004640:	6803      	ldr	r3, [r0, #0]
90004642:	699a      	ldr	r2, [r3, #24]
90004644:	0791      	lsls	r1, r2, #30
90004646:	d501      	bpl.n	9000464c <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
90004648:	2200      	movs	r2, #0
9000464a:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000464c:	699a      	ldr	r2, [r3, #24]
9000464e:	07d2      	lsls	r2, r2, #31
90004650:	d403      	bmi.n	9000465a <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90004652:	699a      	ldr	r2, [r3, #24]
90004654:	f042 0201 	orr.w	r2, r2, #1
90004658:	619a      	str	r2, [r3, #24]
  }
}
9000465a:	4770      	bx	lr

9000465c <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
9000465c:	b530      	push	{r4, r5, lr}
9000465e:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90004660:	f3c1 0109 	ubfx	r1, r1, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
90004664:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90004666:	432b      	orrs	r3, r5
  MODIFY_REG(hi2c->Instance->CR2, \
90004668:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000466a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
9000466e:	4a05      	ldr	r2, [pc, #20]	@ (90004684 <I2C_TransferConfig+0x28>)
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90004670:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
90004672:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90004676:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
9000467a:	ea20 0002 	bic.w	r0, r0, r2
9000467e:	4303      	orrs	r3, r0
90004680:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
90004682:	bd30      	pop	{r4, r5, pc}
90004684:	03ff63ff 	.word	0x03ff63ff

90004688 <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
90004688:	6803      	ldr	r3, [r0, #0]
{
9000468a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
9000468e:	699c      	ldr	r4, [r3, #24]
{
90004690:	4605      	mov	r5, r0
90004692:	460f      	mov	r7, r1
90004694:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90004696:	f014 0410 	ands.w	r4, r4, #16
9000469a:	d06f      	beq.n	9000477c <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
9000469c:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000469e:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
900046a0:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900046a2:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900046a4:	682b      	ldr	r3, [r5, #0]
900046a6:	699a      	ldr	r2, [r3, #24]
900046a8:	0690      	lsls	r0, r2, #26
900046aa:	d461      	bmi.n	90004770 <I2C_IsErrorOccurred+0xe8>
900046ac:	f1b8 0f00 	cmp.w	r8, #0
900046b0:	d035      	beq.n	9000471e <I2C_IsErrorOccurred+0x96>
    error_code |= HAL_I2C_ERROR_AF;
900046b2:	f044 0404 	orr.w	r4, r4, #4
    status = HAL_ERROR;
900046b6:	2001      	movs	r0, #1
  itflag = hi2c->Instance->ISR;
900046b8:	682e      	ldr	r6, [r5, #0]
900046ba:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900046bc:	05d9      	lsls	r1, r3, #23
900046be:	d505      	bpl.n	900046cc <I2C_IsErrorOccurred+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900046c0:	f44f 7280 	mov.w	r2, #256	@ 0x100
    error_code |= HAL_I2C_ERROR_BERR;
900046c4:	f044 0401 	orr.w	r4, r4, #1
    status = HAL_ERROR;
900046c8:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900046ca:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900046cc:	055a      	lsls	r2, r3, #21
900046ce:	d505      	bpl.n	900046dc <I2C_IsErrorOccurred+0x54>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900046d0:	f44f 6280 	mov.w	r2, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
900046d4:	f044 0408 	orr.w	r4, r4, #8
    status = HAL_ERROR;
900046d8:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900046da:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900046dc:	059b      	lsls	r3, r3, #22
900046de:	d54f      	bpl.n	90004780 <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900046e0:	f44f 7300 	mov.w	r3, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
900046e4:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900046e8:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
900046ea:	4628      	mov	r0, r5
900046ec:	f7ff ffa8 	bl	90004640 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
900046f0:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
900046f2:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
900046f4:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
900046f8:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
900046fc:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
90004700:	f023 0301 	bic.w	r3, r3, #1
90004704:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
90004706:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90004708:	4323      	orrs	r3, r4
9000470a:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000470c:	2320      	movs	r3, #32
9000470e:	f885 3041 	strb.w	r3, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90004712:	2300      	movs	r3, #0
90004714:	f885 3042 	strb.w	r3, [r5, #66]	@ 0x42
    __HAL_UNLOCK(hi2c);
90004718:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
9000471c:	e032      	b.n	90004784 <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
9000471e:	1c7a      	adds	r2, r7, #1
90004720:	d0c1      	beq.n	900046a6 <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90004722:	f7ff fb19 	bl	90003d58 <HAL_GetTick>
90004726:	1b80      	subs	r0, r0, r6
90004728:	42b8      	cmp	r0, r7
9000472a:	d801      	bhi.n	90004730 <I2C_IsErrorOccurred+0xa8>
9000472c:	2f00      	cmp	r7, #0
9000472e:	d1b9      	bne.n	900046a4 <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90004730:	682b      	ldr	r3, [r5, #0]
90004732:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
90004734:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90004738:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
9000473a:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000473c:	0400      	lsls	r0, r0, #16
9000473e:	d50a      	bpl.n	90004756 <I2C_IsErrorOccurred+0xce>
90004740:	0449      	lsls	r1, r1, #17
90004742:	d408      	bmi.n	90004756 <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
90004744:	2a20      	cmp	r2, #32
90004746:	d006      	beq.n	90004756 <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90004748:	685a      	ldr	r2, [r3, #4]
9000474a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000474e:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90004750:	f7ff fb02 	bl	90003d58 <HAL_GetTick>
90004754:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90004756:	682b      	ldr	r3, [r5, #0]
90004758:	699b      	ldr	r3, [r3, #24]
9000475a:	069b      	lsls	r3, r3, #26
9000475c:	d4a2      	bmi.n	900046a4 <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000475e:	f7ff fafb 	bl	90003d58 <HAL_GetTick>
90004762:	1b80      	subs	r0, r0, r6
90004764:	2819      	cmp	r0, #25
90004766:	d9f6      	bls.n	90004756 <I2C_IsErrorOccurred+0xce>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90004768:	2420      	movs	r4, #32
              status = HAL_ERROR;
9000476a:	f04f 0801 	mov.w	r8, #1
9000476e:	e799      	b.n	900046a4 <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
90004770:	f1b8 0f00 	cmp.w	r8, #0
90004774:	d19d      	bne.n	900046b2 <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90004776:	2220      	movs	r2, #32
90004778:	61da      	str	r2, [r3, #28]
9000477a:	e79a      	b.n	900046b2 <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
9000477c:	4620      	mov	r0, r4
9000477e:	e79b      	b.n	900046b8 <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
90004780:	2800      	cmp	r0, #0
90004782:	d1b2      	bne.n	900046ea <I2C_IsErrorOccurred+0x62>
}
90004784:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90004788 <I2C_WaitOnTXISFlagUntilTimeout>:
{
90004788:	b570      	push	{r4, r5, r6, lr}
9000478a:	4604      	mov	r4, r0
9000478c:	460d      	mov	r5, r1
9000478e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90004790:	6823      	ldr	r3, [r4, #0]
90004792:	699b      	ldr	r3, [r3, #24]
90004794:	079b      	lsls	r3, r3, #30
90004796:	d501      	bpl.n	9000479c <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
90004798:	2000      	movs	r0, #0
9000479a:	e01f      	b.n	900047dc <I2C_WaitOnTXISFlagUntilTimeout+0x54>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
9000479c:	4632      	mov	r2, r6
9000479e:	4629      	mov	r1, r5
900047a0:	4620      	mov	r0, r4
900047a2:	f7ff ff71 	bl	90004688 <I2C_IsErrorOccurred>
900047a6:	b9c0      	cbnz	r0, 900047da <I2C_WaitOnTXISFlagUntilTimeout+0x52>
    if (Timeout != HAL_MAX_DELAY)
900047a8:	1c6a      	adds	r2, r5, #1
900047aa:	d0f1      	beq.n	90004790 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900047ac:	f7ff fad4 	bl	90003d58 <HAL_GetTick>
900047b0:	1b80      	subs	r0, r0, r6
900047b2:	42a8      	cmp	r0, r5
900047b4:	d801      	bhi.n	900047ba <I2C_WaitOnTXISFlagUntilTimeout+0x32>
900047b6:	2d00      	cmp	r5, #0
900047b8:	d1ea      	bne.n	90004790 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
900047ba:	6823      	ldr	r3, [r4, #0]
900047bc:	699b      	ldr	r3, [r3, #24]
900047be:	f013 0302 	ands.w	r3, r3, #2
900047c2:	d1e5      	bne.n	90004790 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900047c4:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          __HAL_UNLOCK(hi2c);
900047c6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900047ca:	f042 0220 	orr.w	r2, r2, #32
900047ce:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900047d0:	2220      	movs	r2, #32
900047d2:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900047d6:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      return HAL_ERROR;
900047da:	2001      	movs	r0, #1
}
900047dc:	bd70      	pop	{r4, r5, r6, pc}

900047de <I2C_WaitOnFlagUntilTimeout>:
{
900047de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900047e2:	f8dd 8018 	ldr.w	r8, [sp, #24]
900047e6:	4604      	mov	r4, r0
900047e8:	460f      	mov	r7, r1
900047ea:	4616      	mov	r6, r2
900047ec:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900047ee:	6823      	ldr	r3, [r4, #0]
900047f0:	699b      	ldr	r3, [r3, #24]
900047f2:	ea37 0303 	bics.w	r3, r7, r3
900047f6:	bf0c      	ite	eq
900047f8:	2301      	moveq	r3, #1
900047fa:	2300      	movne	r3, #0
900047fc:	42b3      	cmp	r3, r6
900047fe:	d001      	beq.n	90004804 <I2C_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
90004800:	2000      	movs	r0, #0
90004802:	e025      	b.n	90004850 <I2C_WaitOnFlagUntilTimeout+0x72>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
90004804:	4642      	mov	r2, r8
90004806:	4629      	mov	r1, r5
90004808:	4620      	mov	r0, r4
9000480a:	f7ff ff3d 	bl	90004688 <I2C_IsErrorOccurred>
9000480e:	b9f0      	cbnz	r0, 9000484e <I2C_WaitOnFlagUntilTimeout+0x70>
    if (Timeout != HAL_MAX_DELAY)
90004810:	1c6b      	adds	r3, r5, #1
90004812:	d0ec      	beq.n	900047ee <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90004814:	f7ff faa0 	bl	90003d58 <HAL_GetTick>
90004818:	eba0 0008 	sub.w	r0, r0, r8
9000481c:	42a8      	cmp	r0, r5
9000481e:	d801      	bhi.n	90004824 <I2C_WaitOnFlagUntilTimeout+0x46>
90004820:	2d00      	cmp	r5, #0
90004822:	d1e4      	bne.n	900047ee <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90004824:	6823      	ldr	r3, [r4, #0]
90004826:	699b      	ldr	r3, [r3, #24]
90004828:	ea37 0303 	bics.w	r3, r7, r3
9000482c:	bf0c      	ite	eq
9000482e:	2301      	moveq	r3, #1
90004830:	2300      	movne	r3, #0
90004832:	42b3      	cmp	r3, r6
90004834:	d1db      	bne.n	900047ee <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90004836:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90004838:	f043 0320 	orr.w	r3, r3, #32
9000483c:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000483e:	2320      	movs	r3, #32
90004840:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90004844:	2300      	movs	r3, #0
90004846:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
9000484a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
9000484e:	2001      	movs	r0, #1
}
90004850:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90004854 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
90004854:	b570      	push	{r4, r5, r6, lr}
90004856:	4604      	mov	r4, r0
90004858:	460d      	mov	r5, r1
9000485a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000485c:	6823      	ldr	r3, [r4, #0]
9000485e:	699b      	ldr	r3, [r3, #24]
90004860:	069b      	lsls	r3, r3, #26
90004862:	d501      	bpl.n	90004868 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
90004864:	2000      	movs	r0, #0
90004866:	e01d      	b.n	900048a4 <I2C_WaitOnSTOPFlagUntilTimeout+0x50>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
90004868:	4632      	mov	r2, r6
9000486a:	4629      	mov	r1, r5
9000486c:	4620      	mov	r0, r4
9000486e:	f7ff ff0b 	bl	90004688 <I2C_IsErrorOccurred>
90004872:	b9b0      	cbnz	r0, 900048a2 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90004874:	f7ff fa70 	bl	90003d58 <HAL_GetTick>
90004878:	1b80      	subs	r0, r0, r6
9000487a:	42a8      	cmp	r0, r5
9000487c:	d801      	bhi.n	90004882 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
9000487e:	2d00      	cmp	r5, #0
90004880:	d1ec      	bne.n	9000485c <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90004882:	6823      	ldr	r3, [r4, #0]
90004884:	699b      	ldr	r3, [r3, #24]
90004886:	f013 0320 	ands.w	r3, r3, #32
9000488a:	d1e7      	bne.n	9000485c <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000488c:	6c62      	ldr	r2, [r4, #68]	@ 0x44
        __HAL_UNLOCK(hi2c);
9000488e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90004892:	f042 0220 	orr.w	r2, r2, #32
90004896:	6462      	str	r2, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90004898:	2220      	movs	r2, #32
9000489a:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
9000489e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      return HAL_ERROR;
900048a2:	2001      	movs	r0, #1
}
900048a4:	bd70      	pop	{r4, r5, r6, pc}

900048a6 <HAL_I2C_MspInit>:
}
900048a6:	4770      	bx	lr

900048a8 <HAL_I2C_Init>:
{
900048a8:	b510      	push	{r4, lr}
  if (hi2c == NULL)
900048aa:	4604      	mov	r4, r0
900048ac:	2800      	cmp	r0, #0
900048ae:	d04e      	beq.n	9000494e <HAL_I2C_Init+0xa6>
  if (hi2c->State == HAL_I2C_STATE_RESET)
900048b0:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
900048b4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900048b8:	b91b      	cbnz	r3, 900048c2 <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
900048ba:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
900048be:	f7ff fff2 	bl	900048a6 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
900048c2:	2324      	movs	r3, #36	@ 0x24
900048c4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
900048c8:	6823      	ldr	r3, [r4, #0]
900048ca:	681a      	ldr	r2, [r3, #0]
900048cc:	f022 0201 	bic.w	r2, r2, #1
900048d0:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900048d2:	6862      	ldr	r2, [r4, #4]
900048d4:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
900048d8:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
900048da:	689a      	ldr	r2, [r3, #8]
900048dc:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
900048e0:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
900048e2:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900048e6:	2901      	cmp	r1, #1
900048e8:	d106      	bne.n	900048f8 <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
900048ea:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
900048ee:	609a      	str	r2, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
900048f0:	685a      	ldr	r2, [r3, #4]
900048f2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
900048f6:	e007      	b.n	90004908 <HAL_I2C_Init+0x60>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
900048f8:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
900048fc:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
900048fe:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90004900:	d1f6      	bne.n	900048f0 <HAL_I2C_Init+0x48>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90004902:	685a      	ldr	r2, [r3, #4]
90004904:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90004908:	605a      	str	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000490a:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000490c:	685a      	ldr	r2, [r3, #4]
9000490e:	f042 7200 	orr.w	r2, r2, #33554432	@ 0x2000000
90004912:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
90004916:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90004918:	68da      	ldr	r2, [r3, #12]
9000491a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
9000491e:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90004920:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
90004924:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
90004926:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90004928:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000492c:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000492e:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
90004932:	430a      	orrs	r2, r1
90004934:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90004936:	681a      	ldr	r2, [r3, #0]
90004938:	f042 0201 	orr.w	r2, r2, #1
9000493c:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
9000493e:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90004940:	6460      	str	r0, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90004942:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90004946:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90004948:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
9000494c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
9000494e:	2001      	movs	r0, #1
90004950:	e7fc      	b.n	9000494c <HAL_I2C_Init+0xa4>

90004952 <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
90004952:	4770      	bx	lr

90004954 <HAL_I2C_DeInit>:
{
90004954:	b510      	push	{r4, lr}
  if (hi2c == NULL)
90004956:	4604      	mov	r4, r0
90004958:	b198      	cbz	r0, 90004982 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
9000495a:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000495c:	2324      	movs	r3, #36	@ 0x24
9000495e:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
90004962:	6813      	ldr	r3, [r2, #0]
90004964:	f023 0301 	bic.w	r3, r3, #1
90004968:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
9000496a:	f7ff fff2 	bl	90004952 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000496e:	2000      	movs	r0, #0
90004970:	6460      	str	r0, [r4, #68]	@ 0x44
  __HAL_UNLOCK(hi2c);
90004972:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
90004976:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
9000497a:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000497c:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
90004980:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90004982:	2001      	movs	r0, #1
90004984:	e7fc      	b.n	90004980 <HAL_I2C_DeInit+0x2c>
	...

90004988 <HAL_I2C_Mem_Write>:
{
90004988:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000498c:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000498e:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
90004992:	4604      	mov	r4, r0
90004994:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
90004996:	2b20      	cmp	r3, #32
{
90004998:	4616      	mov	r6, r2
9000499a:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
9000499e:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
900049a2:	f040 80c6 	bne.w	90004b32 <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
900049a6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900049a8:	b113      	cbz	r3, 900049b0 <HAL_I2C_Mem_Write+0x28>
900049aa:	f1ba 0f00 	cmp.w	sl, #0
900049ae:	d106      	bne.n	900049be <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900049b0:	f44f 7300 	mov.w	r3, #512	@ 0x200
900049b4:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
900049b6:	2001      	movs	r0, #1
}
900049b8:	b003      	add	sp, #12
900049ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
900049be:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
900049c2:	2b01      	cmp	r3, #1
900049c4:	f000 80b5 	beq.w	90004b32 <HAL_I2C_Mem_Write+0x1aa>
900049c8:	f04f 0b01 	mov.w	fp, #1
900049cc:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
900049d0:	f7ff f9c2 	bl	90003d58 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
900049d4:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
900049d6:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
900049d8:	9000      	str	r0, [sp, #0]
900049da:	465a      	mov	r2, fp
900049dc:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
900049e0:	4620      	mov	r0, r4
900049e2:	f7ff fefc 	bl	900047de <I2C_WaitOnFlagUntilTimeout>
900049e6:	2800      	cmp	r0, #0
900049e8:	d1e5      	bne.n	900049b6 <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900049ea:	2321      	movs	r3, #33	@ 0x21
    hi2c->XferISR   = NULL;
900049ec:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
900049ee:	fa5f f289 	uxtb.w	r2, r9
900049f2:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900049f4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900049f8:	2340      	movs	r3, #64	@ 0x40
900049fa:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
900049fe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90004a00:	6460      	str	r0, [r4, #68]	@ 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
90004a02:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
90004a04:	6263      	str	r3, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
90004a06:	4b4c      	ldr	r3, [pc, #304]	@ (90004b38 <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferCount = Size;
90004a08:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
90004a0c:	9300      	str	r3, [sp, #0]
90004a0e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
90004a12:	f7ff fe23 	bl	9000465c <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90004a16:	462a      	mov	r2, r5
90004a18:	4641      	mov	r1, r8
90004a1a:	4620      	mov	r0, r4
90004a1c:	f7ff feb4 	bl	90004788 <I2C_WaitOnTXISFlagUntilTimeout>
90004a20:	bb18      	cbnz	r0, 90004a6a <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90004a22:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90004a26:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90004a28:	d115      	bne.n	90004a56 <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90004a2a:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
90004a2c:	2200      	movs	r2, #0
90004a2e:	2180      	movs	r1, #128	@ 0x80
90004a30:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90004a32:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
90004a34:	4643      	mov	r3, r8
90004a36:	9500      	str	r5, [sp, #0]
90004a38:	f7ff fed1 	bl	900047de <I2C_WaitOnFlagUntilTimeout>
90004a3c:	b9a8      	cbnz	r0, 90004a6a <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90004a3e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90004a40:	b29b      	uxth	r3, r3
90004a42:	2bff      	cmp	r3, #255	@ 0xff
90004a44:	d815      	bhi.n	90004a72 <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
90004a46:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
90004a48:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
      hi2c->XferSize = hi2c->XferCount;
90004a4c:	b292      	uxth	r2, r2
90004a4e:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
90004a50:	b2d2      	uxtb	r2, r2
90004a52:	9000      	str	r0, [sp, #0]
90004a54:	e012      	b.n	90004a7c <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90004a56:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90004a58:	4641      	mov	r1, r8
90004a5a:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90004a5c:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90004a5e:	462a      	mov	r2, r5
90004a60:	f7ff fe92 	bl	90004788 <I2C_WaitOnTXISFlagUntilTimeout>
90004a64:	b908      	cbnz	r0, 90004a6a <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90004a66:	6823      	ldr	r3, [r4, #0]
90004a68:	e7df      	b.n	90004a2a <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
90004a6a:	2300      	movs	r3, #0
90004a6c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90004a70:	e7a1      	b.n	900049b6 <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
90004a72:	22ff      	movs	r2, #255	@ 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
90004a74:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
90004a78:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
90004a7a:	9000      	str	r0, [sp, #0]
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
90004a7c:	4639      	mov	r1, r7
90004a7e:	4620      	mov	r0, r4
90004a80:	f7ff fdec 	bl	9000465c <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90004a84:	462a      	mov	r2, r5
90004a86:	4641      	mov	r1, r8
90004a88:	4620      	mov	r0, r4
90004a8a:	f7ff fe7d 	bl	90004788 <I2C_WaitOnTXISFlagUntilTimeout>
90004a8e:	2800      	cmp	r0, #0
90004a90:	d191      	bne.n	900049b6 <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90004a92:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90004a94:	6822      	ldr	r2, [r4, #0]
90004a96:	f813 1b01 	ldrb.w	r1, [r3], #1
90004a9a:	6291      	str	r1, [r2, #40]	@ 0x28
      hi2c->pBuffPtr++;
90004a9c:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90004a9e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90004aa0:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
90004aa2:	3b01      	subs	r3, #1
      hi2c->XferSize--;
90004aa4:	3a01      	subs	r2, #1
      hi2c->XferCount--;
90004aa6:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
90004aa8:	b292      	uxth	r2, r2
      hi2c->XferCount--;
90004aaa:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90004aac:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90004aae:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90004ab0:	b29b      	uxth	r3, r3
90004ab2:	b1b3      	cbz	r3, 90004ae2 <HAL_I2C_Mem_Write+0x15a>
90004ab4:	b9aa      	cbnz	r2, 90004ae2 <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90004ab6:	4643      	mov	r3, r8
90004ab8:	2180      	movs	r1, #128	@ 0x80
90004aba:	4620      	mov	r0, r4
90004abc:	9500      	str	r5, [sp, #0]
90004abe:	f7ff fe8e 	bl	900047de <I2C_WaitOnFlagUntilTimeout>
90004ac2:	2800      	cmp	r0, #0
90004ac4:	f47f af77 	bne.w	900049b6 <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90004ac8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90004aca:	b29b      	uxth	r3, r3
90004acc:	2bff      	cmp	r3, #255	@ 0xff
90004ace:	d928      	bls.n	90004b22 <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90004ad0:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
90004ad2:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
90004ad6:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
90004ad8:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
90004ada:	4639      	mov	r1, r7
90004adc:	4620      	mov	r0, r4
90004ade:	f7ff fdbd 	bl	9000465c <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
90004ae2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90004ae4:	b29b      	uxth	r3, r3
90004ae6:	2b00      	cmp	r3, #0
90004ae8:	d1cc      	bne.n	90004a84 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90004aea:	462a      	mov	r2, r5
90004aec:	4641      	mov	r1, r8
90004aee:	4620      	mov	r0, r4
90004af0:	f7ff feb0 	bl	90004854 <I2C_WaitOnSTOPFlagUntilTimeout>
90004af4:	2800      	cmp	r0, #0
90004af6:	f47f af5e 	bne.w	900049b6 <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90004afa:	6823      	ldr	r3, [r4, #0]
90004afc:	2120      	movs	r1, #32
90004afe:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90004b00:	685a      	ldr	r2, [r3, #4]
90004b02:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
90004b06:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
90004b0a:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
90004b0e:	f022 0201 	bic.w	r2, r2, #1
90004b12:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90004b14:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90004b18:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90004b1c:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
90004b20:	e74a      	b.n	900049b8 <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
90004b22:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
90004b24:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
90004b28:	b292      	uxth	r2, r2
90004b2a:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
90004b2c:	b2d2      	uxtb	r2, r2
90004b2e:	9000      	str	r0, [sp, #0]
90004b30:	e7d3      	b.n	90004ada <HAL_I2C_Mem_Write+0x152>
    __HAL_LOCK(hi2c);
90004b32:	2002      	movs	r0, #2
90004b34:	e740      	b.n	900049b8 <HAL_I2C_Mem_Write+0x30>
90004b36:	bf00      	nop
90004b38:	80002000 	.word	0x80002000

90004b3c <HAL_I2C_Mem_Read>:
{
90004b3c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004b40:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
90004b42:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
90004b46:	4604      	mov	r4, r0
90004b48:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
90004b4a:	2b20      	cmp	r3, #32
{
90004b4c:	4616      	mov	r6, r2
90004b4e:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
90004b52:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
90004b56:	f040 80c9 	bne.w	90004cec <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
90004b5a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90004b5c:	b113      	cbz	r3, 90004b64 <HAL_I2C_Mem_Read+0x28>
90004b5e:	f1ba 0f00 	cmp.w	sl, #0
90004b62:	d106      	bne.n	90004b72 <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90004b64:	f44f 7300 	mov.w	r3, #512	@ 0x200
90004b68:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
90004b6a:	2001      	movs	r0, #1
}
90004b6c:	b003      	add	sp, #12
90004b6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
90004b72:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
90004b76:	2b01      	cmp	r3, #1
90004b78:	f000 80b8 	beq.w	90004cec <HAL_I2C_Mem_Read+0x1b0>
90004b7c:	f04f 0b01 	mov.w	fp, #1
90004b80:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
90004b84:	f7ff f8e8 	bl	90003d58 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90004b88:	2319      	movs	r3, #25
90004b8a:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
90004b8c:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90004b8e:	465a      	mov	r2, fp
90004b90:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
90004b94:	4620      	mov	r0, r4
90004b96:	f7ff fe22 	bl	900047de <I2C_WaitOnFlagUntilTimeout>
90004b9a:	4603      	mov	r3, r0
90004b9c:	2800      	cmp	r0, #0
90004b9e:	d1e4      	bne.n	90004b6a <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90004ba0:	2222      	movs	r2, #34	@ 0x22
    hi2c->XferISR   = NULL;
90004ba2:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
90004ba4:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90004ba6:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90004baa:	2240      	movs	r2, #64	@ 0x40
90004bac:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
90004bb0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90004bb2:	6460      	str	r0, [r4, #68]	@ 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
90004bb4:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
90004bb6:	6262      	str	r2, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
90004bb8:	4a4d      	ldr	r2, [pc, #308]	@ (90004cf0 <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferCount = Size;
90004bba:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
90004bbe:	9200      	str	r2, [sp, #0]
90004bc0:	fa5f f289 	uxtb.w	r2, r9
90004bc4:	f7ff fd4a 	bl	9000465c <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90004bc8:	462a      	mov	r2, r5
90004bca:	4641      	mov	r1, r8
90004bcc:	4620      	mov	r0, r4
90004bce:	f7ff fddb 	bl	90004788 <I2C_WaitOnTXISFlagUntilTimeout>
90004bd2:	bb20      	cbnz	r0, 90004c1e <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90004bd4:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90004bd8:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90004bda:	d116      	bne.n	90004c0a <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90004bdc:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
90004bde:	2200      	movs	r2, #0
90004be0:	2140      	movs	r1, #64	@ 0x40
90004be2:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90004be4:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
90004be6:	4643      	mov	r3, r8
90004be8:	9500      	str	r5, [sp, #0]
90004bea:	f7ff fdf8 	bl	900047de <I2C_WaitOnFlagUntilTimeout>
90004bee:	b9b0      	cbnz	r0, 90004c1e <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90004bf0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90004bf2:	b29b      	uxth	r3, r3
90004bf4:	2bff      	cmp	r3, #255	@ 0xff
90004bf6:	4b3f      	ldr	r3, [pc, #252]	@ (90004cf4 <HAL_I2C_Mem_Read+0x1b8>)
90004bf8:	d815      	bhi.n	90004c26 <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
90004bfa:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
90004bfc:	b292      	uxth	r2, r2
90004bfe:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
90004c00:	b2d2      	uxtb	r2, r2
90004c02:	9300      	str	r3, [sp, #0]
90004c04:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
90004c08:	e012      	b.n	90004c30 <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90004c0a:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90004c0c:	4641      	mov	r1, r8
90004c0e:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90004c10:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90004c12:	462a      	mov	r2, r5
90004c14:	f7ff fdb8 	bl	90004788 <I2C_WaitOnTXISFlagUntilTimeout>
90004c18:	b908      	cbnz	r0, 90004c1e <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90004c1a:	6823      	ldr	r3, [r4, #0]
90004c1c:	e7de      	b.n	90004bdc <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
90004c1e:	2300      	movs	r3, #0
90004c20:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90004c24:	e7a1      	b.n	90004b6a <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = 1U;
90004c26:	2201      	movs	r2, #1
90004c28:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
90004c2a:	9300      	str	r3, [sp, #0]
90004c2c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
90004c30:	4639      	mov	r1, r7
90004c32:	4620      	mov	r0, r4
90004c34:	f7ff fd12 	bl	9000465c <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
90004c38:	4643      	mov	r3, r8
90004c3a:	2200      	movs	r2, #0
90004c3c:	2104      	movs	r1, #4
90004c3e:	4620      	mov	r0, r4
90004c40:	9500      	str	r5, [sp, #0]
90004c42:	f7ff fdcc 	bl	900047de <I2C_WaitOnFlagUntilTimeout>
90004c46:	2800      	cmp	r0, #0
90004c48:	d18f      	bne.n	90004b6a <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90004c4a:	6823      	ldr	r3, [r4, #0]
90004c4c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90004c4e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90004c50:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
90004c52:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      hi2c->XferSize--;
90004c54:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
90004c56:	3301      	adds	r3, #1
      hi2c->XferSize--;
90004c58:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
90004c5a:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90004c5c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90004c5e:	b292      	uxth	r2, r2
      hi2c->XferCount--;
90004c60:	3b01      	subs	r3, #1
      hi2c->XferSize--;
90004c62:	8522      	strh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
90004c64:	b29b      	uxth	r3, r3
90004c66:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90004c68:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90004c6a:	b29b      	uxth	r3, r3
90004c6c:	b1b3      	cbz	r3, 90004c9c <HAL_I2C_Mem_Read+0x160>
90004c6e:	b9aa      	cbnz	r2, 90004c9c <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90004c70:	4643      	mov	r3, r8
90004c72:	2180      	movs	r1, #128	@ 0x80
90004c74:	4620      	mov	r0, r4
90004c76:	9500      	str	r5, [sp, #0]
90004c78:	f7ff fdb1 	bl	900047de <I2C_WaitOnFlagUntilTimeout>
90004c7c:	2800      	cmp	r0, #0
90004c7e:	f47f af74 	bne.w	90004b6a <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90004c82:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90004c84:	b29b      	uxth	r3, r3
90004c86:	2bff      	cmp	r3, #255	@ 0xff
90004c88:	d928      	bls.n	90004cdc <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = 1U;
90004c8a:	2201      	movs	r2, #1
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
90004c8c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = 1U;
90004c90:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
90004c92:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
90004c94:	4639      	mov	r1, r7
90004c96:	4620      	mov	r0, r4
90004c98:	f7ff fce0 	bl	9000465c <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
90004c9c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90004c9e:	b29b      	uxth	r3, r3
90004ca0:	2b00      	cmp	r3, #0
90004ca2:	d1c9      	bne.n	90004c38 <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90004ca4:	462a      	mov	r2, r5
90004ca6:	4641      	mov	r1, r8
90004ca8:	4620      	mov	r0, r4
90004caa:	f7ff fdd3 	bl	90004854 <I2C_WaitOnSTOPFlagUntilTimeout>
90004cae:	2800      	cmp	r0, #0
90004cb0:	f47f af5b 	bne.w	90004b6a <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90004cb4:	6823      	ldr	r3, [r4, #0]
90004cb6:	2120      	movs	r1, #32
90004cb8:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90004cba:	685a      	ldr	r2, [r3, #4]
90004cbc:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
90004cc0:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
90004cc4:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
90004cc8:	f022 0201 	bic.w	r2, r2, #1
90004ccc:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90004cce:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90004cd2:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90004cd6:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
90004cda:	e747      	b.n	90004b6c <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
90004cdc:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
90004cde:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
90004ce2:	b292      	uxth	r2, r2
90004ce4:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
90004ce6:	b2d2      	uxtb	r2, r2
90004ce8:	9000      	str	r0, [sp, #0]
90004cea:	e7d3      	b.n	90004c94 <HAL_I2C_Mem_Read+0x158>
    __HAL_LOCK(hi2c);
90004cec:	2002      	movs	r0, #2
90004cee:	e73d      	b.n	90004b6c <HAL_I2C_Mem_Read+0x30>
90004cf0:	80002000 	.word	0x80002000
90004cf4:	80002400 	.word	0x80002400

90004cf8 <HAL_I2C_GetState>:
  return hi2c->State;
90004cf8:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
90004cfc:	4770      	bx	lr
	...

90004d00 <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90004d00:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90004d02:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
90004d04:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90004d08:	3284      	adds	r2, #132	@ 0x84
90004d0a:	1883      	adds	r3, r0, r2
{
90004d0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90004d10:	68c6      	ldr	r6, [r0, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90004d12:	f10c 0701 	add.w	r7, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90004d16:	685d      	ldr	r5, [r3, #4]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
90004d18:	f04f 0e00 	mov.w	lr, #0
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90004d1c:	684c      	ldr	r4, [r1, #4]
90004d1e:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90004d22:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
  tmp2 = (pLayerCfg->Alpha0 << 24U);
90004d26:	f8d1 9018 	ldr.w	r9, [r1, #24]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90004d2a:	4426      	add	r6, r4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
90004d2c:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90004d30:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90004d32:	68c5      	ldr	r5, [r0, #12]
90004d34:	f3c5 450b 	ubfx	r5, r5, #16, #12
90004d38:	443d      	add	r5, r7
90004d3a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
90004d3e:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90004d40:	68c6      	ldr	r6, [r0, #12]
90004d42:	68cd      	ldr	r5, [r1, #12]
90004d44:	f3c6 060a 	ubfx	r6, r6, #0, #11
90004d48:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90004d4a:	689d      	ldr	r5, [r3, #8]
90004d4c:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
90004d50:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90004d52:	688d      	ldr	r5, [r1, #8]
90004d54:	68c7      	ldr	r7, [r0, #12]
90004d56:	3501      	adds	r5, #1
90004d58:	f3c7 070a 	ubfx	r7, r7, #0, #11
90004d5c:	443d      	add	r5, r7
90004d5e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90004d62:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90004d64:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
90004d66:	2e07      	cmp	r6, #7
90004d68:	691d      	ldr	r5, [r3, #16]
90004d6a:	f025 0507 	bic.w	r5, r5, #7
90004d6e:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90004d70:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
90004d72:	bf88      	it	hi
90004d74:	2601      	movhi	r6, #1
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
90004d76:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
90004d7a:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
90004d7c:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
90004d80:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
90004d84:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
90004d88:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
90004d8c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90004d90:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
90004d94:	619d      	str	r5, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
90004d96:	695d      	ldr	r5, [r3, #20]
90004d98:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
90004d9c:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
90004d9e:	694d      	ldr	r5, [r1, #20]
90004da0:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90004da2:	69dd      	ldr	r5, [r3, #28]
90004da4:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
90004da8:	f025 0507 	bic.w	r5, r5, #7
90004dac:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90004dae:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
90004db2:	ea45 0507 	orr.w	r5, r5, r7
90004db6:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
90004db8:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
90004dba:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
90004dbc:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
90004dc0:	629d      	str	r5, [r3, #40]	@ 0x28
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
90004dc2:	bf9c      	itt	ls
90004dc4:	4d0c      	ldrls	r5, [pc, #48]	@ (90004df8 <LTDC_SetConfig+0xf8>)
90004dc6:	5dae      	ldrbls	r6, [r5, r6]
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
90004dc8:	6add      	ldr	r5, [r3, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
90004dca:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
90004dcc:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
90004dd0:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
90004dd2:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
90004dd4:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
90004dd6:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
90004dd8:	4375      	muls	r5, r6
90004dda:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
90004dde:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
90004de0:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
90004de2:	f36f 040a 	bfc	r4, #0, #11
90004de6:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
90004de8:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
90004dea:	5883      	ldr	r3, [r0, r2]
90004dec:	f043 0301 	orr.w	r3, r3, #1
90004df0:	5083      	str	r3, [r0, r2]
}
90004df2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90004df6:	bf00      	nop
90004df8:	9002abc0 	.word	0x9002abc0

90004dfc <HAL_LTDC_Init>:
{
90004dfc:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
90004dfe:	4604      	mov	r4, r0
90004e00:	2800      	cmp	r0, #0
90004e02:	d063      	beq.n	90004ecc <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
90004e04:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
90004e08:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90004e0c:	b91b      	cbnz	r3, 90004e16 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
90004e0e:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
90004e12:	f7fd fbe9 	bl	900025e8 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
90004e16:	2302      	movs	r3, #2
90004e18:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90004e1c:	6823      	ldr	r3, [r4, #0]
90004e1e:	699a      	ldr	r2, [r3, #24]
90004e20:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
90004e24:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90004e26:	6999      	ldr	r1, [r3, #24]
90004e28:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
90004e2c:	4302      	orrs	r2, r0
90004e2e:	68e0      	ldr	r0, [r4, #12]
90004e30:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
90004e32:	6920      	ldr	r0, [r4, #16]
90004e34:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
90004e36:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90004e38:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
90004e3a:	4925      	ldr	r1, [pc, #148]	@ (90004ed0 <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90004e3c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
90004e3e:	689a      	ldr	r2, [r3, #8]
90004e40:	400a      	ands	r2, r1
90004e42:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
90004e44:	689a      	ldr	r2, [r3, #8]
90004e46:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90004e4a:	69a0      	ldr	r0, [r4, #24]
90004e4c:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
90004e4e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
90004e50:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
90004e52:	68da      	ldr	r2, [r3, #12]
90004e54:	400a      	ands	r2, r1
90004e56:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
90004e58:	68da      	ldr	r2, [r3, #12]
90004e5a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90004e5e:	6a20      	ldr	r0, [r4, #32]
90004e60:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
90004e62:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
90004e64:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
90004e66:	691a      	ldr	r2, [r3, #16]
90004e68:	400a      	ands	r2, r1
90004e6a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
90004e6c:	691a      	ldr	r2, [r3, #16]
90004e6e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90004e72:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90004e74:	4302      	orrs	r2, r0
90004e76:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
90004e78:	695a      	ldr	r2, [r3, #20]
90004e7a:	400a      	ands	r2, r1
  tmp = (hltdc->Init.TotalWidth << 16U);
90004e7c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
90004e7e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
90004e80:	695a      	ldr	r2, [r3, #20]
90004e82:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90004e86:	6b21      	ldr	r1, [r4, #48]	@ 0x30
90004e88:	430a      	orrs	r2, r1
90004e8a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90004e8c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
90004e8e:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90004e92:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
90004e96:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90004e9a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
90004e9c:	6add      	ldr	r5, [r3, #44]	@ 0x2c
90004e9e:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
90004ea2:	432a      	orrs	r2, r5
90004ea4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
90004ea8:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
90004eaa:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90004eae:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
90004eb0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90004eb2:	f042 0206 	orr.w	r2, r2, #6
90004eb6:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
90004eb8:	699a      	ldr	r2, [r3, #24]
90004eba:	f042 0201 	orr.w	r2, r2, #1
90004ebe:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
90004ec0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
90004ec2:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
90004ec6:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
90004eca:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90004ecc:	2001      	movs	r0, #1
90004ece:	e7fc      	b.n	90004eca <HAL_LTDC_Init+0xce>
90004ed0:	f000f800 	.word	0xf000f800

90004ed4 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
90004ed4:	4770      	bx	lr

90004ed6 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
90004ed6:	4770      	bx	lr

90004ed8 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
90004ed8:	6803      	ldr	r3, [r0, #0]
{
90004eda:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
90004edc:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
{
90004ede:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
90004ee0:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
90004ee2:	0772      	lsls	r2, r6, #29
90004ee4:	d514      	bpl.n	90004f10 <HAL_LTDC_IRQHandler+0x38>
90004ee6:	0769      	lsls	r1, r5, #29
90004ee8:	d512      	bpl.n	90004f10 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
90004eea:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90004eec:	f022 0204 	bic.w	r2, r2, #4
90004ef0:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
90004ef2:	2204      	movs	r2, #4
90004ef4:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
90004ef6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
90004efa:	f043 0301 	orr.w	r3, r3, #1
90004efe:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
90004f02:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
90004f04:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90004f08:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
90004f0c:	f7ff ffe2 	bl	90004ed4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
90004f10:	07b2      	lsls	r2, r6, #30
90004f12:	d516      	bpl.n	90004f42 <HAL_LTDC_IRQHandler+0x6a>
90004f14:	07ab      	lsls	r3, r5, #30
90004f16:	d514      	bpl.n	90004f42 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
90004f18:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
90004f1a:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
90004f1c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90004f1e:	f022 0202 	bic.w	r2, r2, #2
90004f22:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
90004f24:	2202      	movs	r2, #2
90004f26:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
90004f28:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
90004f2c:	4313      	orrs	r3, r2
90004f2e:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
90004f32:	2304      	movs	r3, #4
90004f34:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90004f38:	2300      	movs	r3, #0
90004f3a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
90004f3e:	f7ff ffc9 	bl	90004ed4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
90004f42:	07f0      	lsls	r0, r6, #31
90004f44:	d510      	bpl.n	90004f68 <HAL_LTDC_IRQHandler+0x90>
90004f46:	07e9      	lsls	r1, r5, #31
90004f48:	d50e      	bpl.n	90004f68 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90004f4a:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
90004f4c:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90004f4e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90004f50:	f022 0201 	bic.w	r2, r2, #1
90004f54:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
90004f56:	2201      	movs	r2, #1
90004f58:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
90004f5a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
90004f5c:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90004f60:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
90004f64:	f7fc fd08 	bl	90001978 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
90004f68:	0732      	lsls	r2, r6, #28
90004f6a:	d511      	bpl.n	90004f90 <HAL_LTDC_IRQHandler+0xb8>
90004f6c:	072b      	lsls	r3, r5, #28
90004f6e:	d50f      	bpl.n	90004f90 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90004f70:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
90004f72:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90004f74:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90004f76:	f022 0208 	bic.w	r2, r2, #8
90004f7a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
90004f7c:	2208      	movs	r2, #8
90004f7e:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
90004f80:	2301      	movs	r3, #1
90004f82:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90004f86:	2300      	movs	r3, #0
90004f88:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
90004f8c:	f7ff ffa3 	bl	90004ed6 <HAL_LTDC_ReloadEventCallback>
}
90004f90:	bd70      	pop	{r4, r5, r6, pc}

90004f92 <HAL_LTDC_ConfigLayer>:
{
90004f92:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
90004f96:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
{
90004f9a:	4606      	mov	r6, r0
90004f9c:	460f      	mov	r7, r1
90004f9e:	4694      	mov	ip, r2
  __HAL_LOCK(hltdc);
90004fa0:	2b01      	cmp	r3, #1
90004fa2:	f04f 0002 	mov.w	r0, #2
90004fa6:	d01f      	beq.n	90004fe8 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90004fa8:	2434      	movs	r4, #52	@ 0x34
  __HAL_LOCK(hltdc);
90004faa:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90004fae:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
90004fb0:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90004fb4:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
90004fb8:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90004fbc:	3438      	adds	r4, #56	@ 0x38
90004fbe:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90004fc0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90004fc2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90004fc4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90004fc6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90004fc8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90004fca:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
90004fcc:	4630      	mov	r0, r6
90004fce:	4662      	mov	r2, ip
90004fd0:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90004fd2:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
90004fd4:	f7ff fe94 	bl	90004d00 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
90004fd8:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
90004fda:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
90004fdc:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
90004fe0:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
90004fe4:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
90004fe8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90004fec <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
90004fec:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
{
90004ff0:	4603      	mov	r3, r0
90004ff2:	2002      	movs	r0, #2
  __HAL_LOCK(hltdc);
90004ff4:	2a01      	cmp	r2, #1
90004ff6:	d012      	beq.n	9000501e <HAL_LTDC_ProgramLineEvent+0x32>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90004ff8:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
90004ffa:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90004ffe:	6b50      	ldr	r0, [r2, #52]	@ 0x34
90005000:	f020 0001 	bic.w	r0, r0, #1
90005004:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
90005006:	4806      	ldr	r0, [pc, #24]	@ (90005020 <HAL_LTDC_ProgramLineEvent+0x34>)
90005008:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_UNLOCK(hltdc);
9000500a:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000500c:	6b51      	ldr	r1, [r2, #52]	@ 0x34
9000500e:	f041 0101 	orr.w	r1, r1, #1
90005012:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
90005014:	2201      	movs	r2, #1
  __HAL_UNLOCK(hltdc);
90005016:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_READY;
9000501a:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
}
9000501e:	4770      	bx	lr
90005020:	40016800 	.word	0x40016800

90005024 <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
90005024:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  const USB_OTG_GlobalTypeDef *USBx;
#endif /* defined (USB_OTG_FS) */
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
90005026:	4604      	mov	r4, r0
90005028:	b318      	cbz	r0, 90005072 <HAL_PCD_Init+0x4e>

#if defined (USB_OTG_FS)
  USBx = hpcd->Instance;
#endif /* defined (USB_OTG_FS) */

  if (hpcd->State == HAL_PCD_STATE_RESET)
9000502a:	f890 3495 	ldrb.w	r3, [r0, #1173]	@ 0x495
  USBx = hpcd->Instance;
9000502e:	6805      	ldr	r5, [r0, #0]
  if (hpcd->State == HAL_PCD_STATE_RESET)
90005030:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90005034:	b91b      	cbnz	r3, 9000503e <HAL_PCD_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hpcd->Lock = HAL_UNLOCKED;
90005036:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494

    /* Init the low level hardware */
    hpcd->MspInitCallback(hpcd);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
9000503a:	f7fc fe1d 	bl	90001c78 <HAL_PCD_MspInit>
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
9000503e:	2303      	movs	r3, #3

#if defined (USB_OTG_FS)
  /* Disable DMA mode for FS instance */
  if (USBx == USB_OTG_FS)
90005040:	f1b5 4fa0 	cmp.w	r5, #1342177280	@ 0x50000000
    hpcd->Init.dma_enable = 0U;
  }
#endif /* defined (USB_OTG_FS) */

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
90005044:	6820      	ldr	r0, [r4, #0]

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
90005046:	f104 0504 	add.w	r5, r4, #4
  hpcd->State = HAL_PCD_STATE_BUSY;
9000504a:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
    hpcd->Init.dma_enable = 0U;
9000504e:	bf04      	itt	eq
90005050:	2300      	moveq	r3, #0
90005052:	71a3      	strbeq	r3, [r4, #6]
  __HAL_PCD_DISABLE(hpcd);
90005054:	f002 f830 	bl	900070b8 <USB_DisableGlobalInt>
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
90005058:	7c23      	ldrb	r3, [r4, #16]
9000505a:	f88d 3000 	strb.w	r3, [sp]
9000505e:	6820      	ldr	r0, [r4, #0]
90005060:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
90005064:	f001 ff74 	bl	90006f50 <USB_CoreInit>
90005068:	4601      	mov	r1, r0
9000506a:	b130      	cbz	r0, 9000507a <HAL_PCD_Init+0x56>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
9000506c:	2302      	movs	r3, #2
9000506e:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
    return HAL_ERROR;
90005072:	2501      	movs	r5, #1
  }

  (void)USB_DevDisconnect(hpcd->Instance);

  return HAL_OK;
}
90005074:	4628      	mov	r0, r5
90005076:	b003      	add	sp, #12
90005078:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE) != HAL_OK)
9000507a:	6820      	ldr	r0, [r4, #0]
9000507c:	f002 f822 	bl	900070c4 <USB_SetCurrentMode>
90005080:	2800      	cmp	r0, #0
90005082:	d1f3      	bne.n	9000506c <HAL_PCD_Init+0x48>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
90005084:	7926      	ldrb	r6, [r4, #4]
90005086:	f104 0314 	add.w	r3, r4, #20
    hpcd->IN_ep[i].is_in = 1U;
9000508a:	2701      	movs	r7, #1
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000508c:	4602      	mov	r2, r0
9000508e:	b2c1      	uxtb	r1, r0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
90005090:	3324      	adds	r3, #36	@ 0x24
90005092:	428e      	cmp	r6, r1
90005094:	d820      	bhi.n	900050d8 <HAL_PCD_Init+0xb4>
90005096:	2100      	movs	r1, #0
90005098:	f504 7315 	add.w	r3, r4, #596	@ 0x254
    hpcd->OUT_ep[i].is_in = 0U;
9000509c:	460a      	mov	r2, r1
9000509e:	b2c8      	uxtb	r0, r1
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
900050a0:	3324      	adds	r3, #36	@ 0x24
900050a2:	4286      	cmp	r6, r0
900050a4:	d826      	bhi.n	900050f4 <HAL_PCD_Init+0xd0>
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
900050a6:	7c23      	ldrb	r3, [r4, #16]
900050a8:	f88d 3000 	strb.w	r3, [sp]
900050ac:	6820      	ldr	r0, [r4, #0]
900050ae:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
900050b2:	f002 f881 	bl	900071b8 <USB_DevInit>
900050b6:	4605      	mov	r5, r0
900050b8:	2800      	cmp	r0, #0
900050ba:	d1d7      	bne.n	9000506c <HAL_PCD_Init+0x48>
  hpcd->State = HAL_PCD_STATE_READY;
900050bc:	2301      	movs	r3, #1
  hpcd->USB_Address = 0U;
900050be:	7460      	strb	r0, [r4, #17]
  hpcd->State = HAL_PCD_STATE_READY;
900050c0:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  if (hpcd->Init.lpm_enable == 1U)
900050c4:	7b23      	ldrb	r3, [r4, #12]
900050c6:	2b01      	cmp	r3, #1
900050c8:	d102      	bne.n	900050d0 <HAL_PCD_Init+0xac>
    (void)HAL_PCDEx_ActivateLPM(hpcd);
900050ca:	4620      	mov	r0, r4
900050cc:	f000 fcf3 	bl	90005ab6 <HAL_PCDEx_ActivateLPM>
  (void)USB_DevDisconnect(hpcd->Instance);
900050d0:	6820      	ldr	r0, [r4, #0]
900050d2:	f002 fb93 	bl	900077fc <USB_DevDisconnect>
  return HAL_OK;
900050d6:	e7cd      	b.n	90005074 <HAL_PCD_Init+0x50>
    hpcd->IN_ep[i].tx_fifo_num = i;
900050d8:	f823 0c0a 	strh.w	r0, [r3, #-10]
900050dc:	3001      	adds	r0, #1
    hpcd->IN_ep[i].is_in = 1U;
900050de:	f803 7c23 	strb.w	r7, [r3, #-35]
    hpcd->IN_ep[i].num = i;
900050e2:	f803 1c24 	strb.w	r1, [r3, #-36]
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
900050e6:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->IN_ep[i].xfer_len = 0U;
900050ea:	f843 2c14 	str.w	r2, [r3, #-20]
    hpcd->IN_ep[i].xfer_buff = 0U;
900050ee:	e943 2207 	strd	r2, r2, [r3, #-28]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
900050f2:	e7cc      	b.n	9000508e <HAL_PCD_Init+0x6a>
    hpcd->OUT_ep[i].is_in = 0U;
900050f4:	3101      	adds	r1, #1
900050f6:	f803 2c23 	strb.w	r2, [r3, #-35]
    hpcd->OUT_ep[i].num = i;
900050fa:	f803 0c24 	strb.w	r0, [r3, #-36]
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
900050fe:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->OUT_ep[i].xfer_len = 0U;
90005102:	f843 2c14 	str.w	r2, [r3, #-20]
    hpcd->OUT_ep[i].xfer_buff = 0U;
90005106:	e943 2207 	strd	r2, r2, [r3, #-28]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000510a:	e7c8      	b.n	9000509e <HAL_PCD_Init+0x7a>

9000510c <HAL_PCD_Start>:
  * @brief  Start the USB device
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
{
9000510c:	b510      	push	{r4, lr}
  __HAL_LOCK(hpcd);
9000510e:	f890 3494 	ldrb.w	r3, [r0, #1172]	@ 0x494
{
90005112:	4604      	mov	r4, r0
  __HAL_LOCK(hpcd);
90005114:	2b01      	cmp	r3, #1
90005116:	d00c      	beq.n	90005132 <HAL_PCD_Start+0x26>
90005118:	2301      	movs	r3, #1
9000511a:	f880 3494 	strb.w	r3, [r0, #1172]	@ 0x494
  __HAL_PCD_ENABLE(hpcd);
9000511e:	6800      	ldr	r0, [r0, #0]
90005120:	f001 ffc4 	bl	900070ac <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
90005124:	6820      	ldr	r0, [r4, #0]
90005126:	f002 fb5b 	bl	900077e0 <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
9000512a:	2000      	movs	r0, #0
9000512c:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
90005130:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
90005132:	2002      	movs	r0, #2
90005134:	e7fc      	b.n	90005130 <HAL_PCD_Start+0x24>

90005136 <HAL_PCD_SetAddress>:
  * @param  hpcd PCD handle
  * @param  address new device address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_SetAddress(PCD_HandleTypeDef *hpcd, uint8_t address)
{
90005136:	b510      	push	{r4, lr}
  __HAL_LOCK(hpcd);
90005138:	f890 2494 	ldrb.w	r2, [r0, #1172]	@ 0x494
{
9000513c:	4604      	mov	r4, r0
  __HAL_LOCK(hpcd);
9000513e:	2a01      	cmp	r2, #1
90005140:	d00a      	beq.n	90005158 <HAL_PCD_SetAddress+0x22>
90005142:	2201      	movs	r2, #1
  hpcd->USB_Address = address;
90005144:	7441      	strb	r1, [r0, #17]
  __HAL_LOCK(hpcd);
90005146:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494
  (void)USB_SetDevAddress(hpcd->Instance, address);
9000514a:	6800      	ldr	r0, [r0, #0]
9000514c:	f002 fb38 	bl	900077c0 <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
90005150:	2000      	movs	r0, #0
90005152:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
90005156:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
90005158:	2002      	movs	r0, #2
9000515a:	e7fc      	b.n	90005156 <HAL_PCD_SetAddress+0x20>

9000515c <HAL_PCD_EP_Open>:
  * @param  ep_type endpoint type
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Open(PCD_HandleTypeDef *hpcd, uint8_t ep_addr,
                                  uint16_t ep_mps, uint8_t ep_type)
{
9000515c:	b570      	push	{r4, r5, r6, lr}
9000515e:	f001 060f 	and.w	r6, r1, #15
  HAL_StatusTypeDef  ret = HAL_OK;
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
90005162:	f011 0f80 	tst.w	r1, #128	@ 0x80
{
90005166:	4605      	mov	r5, r0
90005168:	f04f 0024 	mov.w	r0, #36	@ 0x24
9000516c:	eb06 04c6 	add.w	r4, r6, r6, lsl #3
90005170:	ea4f 0484 	mov.w	r4, r4, lsl #2
  if ((ep_addr & 0x80U) == 0x80U)
90005174:	d01e      	beq.n	900051b4 <HAL_PCD_EP_Open+0x58>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
90005176:	f104 0114 	add.w	r1, r4, #20
    ep->is_in = 1U;
9000517a:	fb00 5006 	mla	r0, r0, r6, r5
9000517e:	2401      	movs	r4, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
90005180:	4429      	add	r1, r5
    ep->is_in = 1U;
90005182:	7544      	strb	r4, [r0, #21]
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->num = ep_addr & EP_ADDR_MSK;
  ep->maxpacket = ep_mps;
90005184:	608a      	str	r2, [r1, #8]
  ep->type = ep_type;

  if (ep->is_in != 0U)
90005186:	784a      	ldrb	r2, [r1, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
90005188:	700e      	strb	r6, [r1, #0]
  ep->type = ep_type;
9000518a:	710b      	strb	r3, [r1, #4]
  if (ep->is_in != 0U)
9000518c:	b102      	cbz	r2, 90005190 <HAL_PCD_EP_Open+0x34>
  {
    /* Assign a Tx FIFO */
    ep->tx_fifo_num = ep->num;
9000518e:	834e      	strh	r6, [r1, #26]
  }

  /* Set initial data PID. */
  if (ep_type == EP_TYPE_BULK)
90005190:	2b02      	cmp	r3, #2
  {
    ep->data_pid_start = 0U;
90005192:	bf04      	itt	eq
90005194:	2300      	moveq	r3, #0
90005196:	714b      	strbeq	r3, [r1, #5]
  }

  __HAL_LOCK(hpcd);
90005198:	f895 3494 	ldrb.w	r3, [r5, #1172]	@ 0x494
9000519c:	2b01      	cmp	r3, #1
9000519e:	d012      	beq.n	900051c6 <HAL_PCD_EP_Open+0x6a>
900051a0:	2301      	movs	r3, #1
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
900051a2:	6828      	ldr	r0, [r5, #0]
  __HAL_LOCK(hpcd);
900051a4:	f885 3494 	strb.w	r3, [r5, #1172]	@ 0x494
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
900051a8:	f002 f8c9 	bl	9000733e <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
900051ac:	2000      	movs	r0, #0
900051ae:	f885 0494 	strb.w	r0, [r5, #1172]	@ 0x494

  return ret;
}
900051b2:	bd70      	pop	{r4, r5, r6, pc}
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
900051b4:	f504 7115 	add.w	r1, r4, #596	@ 0x254
    ep->is_in = 0U;
900051b8:	fb00 5006 	mla	r0, r0, r6, r5
900051bc:	2400      	movs	r4, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
900051be:	4429      	add	r1, r5
    ep->is_in = 0U;
900051c0:	f880 4255 	strb.w	r4, [r0, #597]	@ 0x255
900051c4:	e7de      	b.n	90005184 <HAL_PCD_EP_Open+0x28>
  __HAL_LOCK(hpcd);
900051c6:	2002      	movs	r0, #2
900051c8:	e7f3      	b.n	900051b2 <HAL_PCD_EP_Open+0x56>

900051ca <HAL_PCD_EP_Close>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Close(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
900051ca:	b510      	push	{r4, lr}
900051cc:	4604      	mov	r4, r0
900051ce:	f001 000f 	and.w	r0, r1, #15
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
900051d2:	f011 0f80 	tst.w	r1, #128	@ 0x80
900051d6:	f04f 0224 	mov.w	r2, #36	@ 0x24
900051da:	eb00 03c0 	add.w	r3, r0, r0, lsl #3
900051de:	ea4f 0383 	mov.w	r3, r3, lsl #2
900051e2:	d015      	beq.n	90005210 <HAL_PCD_EP_Close+0x46>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
900051e4:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
900051e8:	fb02 4200 	mla	r2, r2, r0, r4
900051ec:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
900051ee:	4421      	add	r1, r4
    ep->is_in = 1U;
900051f0:	7553      	strb	r3, [r2, #21]
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }
  ep->num = ep_addr & EP_ADDR_MSK;
900051f2:	7008      	strb	r0, [r1, #0]

  __HAL_LOCK(hpcd);
900051f4:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
900051f8:	2b01      	cmp	r3, #1
900051fa:	d012      	beq.n	90005222 <HAL_PCD_EP_Close+0x58>
900051fc:	2301      	movs	r3, #1
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
900051fe:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
90005200:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
90005204:	f002 f8da 	bl	900073bc <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
90005208:	2000      	movs	r0, #0
9000520a:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494
  return HAL_OK;
}
9000520e:	bd10      	pop	{r4, pc}
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
90005210:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
90005214:	fb02 4200 	mla	r2, r2, r0, r4
90005218:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000521a:	4421      	add	r1, r4
    ep->is_in = 0U;
9000521c:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
90005220:	e7e7      	b.n	900051f2 <HAL_PCD_EP_Close+0x28>
  __HAL_LOCK(hpcd);
90005222:	2002      	movs	r0, #2
90005224:	e7f3      	b.n	9000520e <HAL_PCD_EP_Close+0x44>

90005226 <HAL_PCD_EP_Receive>:
  * @param  pBuf pointer to the reception buffer
  * @param  len amount of data to be received
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Receive(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
90005226:	b570      	push	{r4, r5, r6, lr}
90005228:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000522c:	2424      	movs	r4, #36	@ 0x24
{
9000522e:	4616      	mov	r6, r2
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
90005230:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
90005234:	fb04 0405 	mla	r4, r4, r5, r0
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
90005238:	f501 7115 	add.w	r1, r1, #596	@ 0x254
  ep->xfer_len = len;
  ep->xfer_count = 0U;
  ep->is_in = 0U;
  ep->num = ep_addr & EP_ADDR_MSK;
9000523c:	f884 5254 	strb.w	r5, [r4, #596]	@ 0x254
  ep->xfer_len = len;
90005240:	e9c4 2398 	strd	r2, r3, [r4, #608]	@ 0x260
  ep->xfer_count = 0U;
90005244:	2300      	movs	r3, #0
90005246:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
  ep->is_in = 0U;
9000524a:	f884 3255 	strb.w	r3, [r4, #597]	@ 0x255

  if (hpcd->Init.dma_enable == 1U)
9000524e:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
90005250:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
90005252:	2a01      	cmp	r2, #1
    ep->dma_addr = (uint32_t)pBuf;
90005254:	bf08      	it	eq
90005256:	f8c4 6270 	streq.w	r6, [r4, #624]	@ 0x270
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
9000525a:	f002 f95b 	bl	90007514 <USB_EPStartXfer>

  return HAL_OK;
}
9000525e:	2000      	movs	r0, #0
90005260:	bd70      	pop	{r4, r5, r6, pc}

90005262 <HAL_PCD_EP_GetRxCount>:
  * @param  ep_addr endpoint address
  * @retval Data Size
  */
uint32_t HAL_PCD_EP_GetRxCount(PCD_HandleTypeDef const *hpcd, uint8_t ep_addr)
{
  return hpcd->OUT_ep[ep_addr & EP_ADDR_MSK].xfer_count;
90005262:	f001 010f 	and.w	r1, r1, #15
90005266:	2324      	movs	r3, #36	@ 0x24
90005268:	fb03 0001 	mla	r0, r3, r1, r0
}
9000526c:	f8d0 0268 	ldr.w	r0, [r0, #616]	@ 0x268
90005270:	4770      	bx	lr

90005272 <HAL_PCD_EP_Transmit>:
  * @param  pBuf pointer to the transmission buffer
  * @param  len amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Transmit(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
90005272:	b570      	push	{r4, r5, r6, lr}
90005274:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
90005278:	2424      	movs	r4, #36	@ 0x24
{
9000527a:	4616      	mov	r6, r2
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000527c:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
90005280:	fb04 0405 	mla	r4, r4, r5, r0
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
90005284:	3114      	adds	r1, #20
  ep->xfer_len = len;
  ep->xfer_count = 0U;
  ep->is_in = 1U;
  ep->num = ep_addr & EP_ADDR_MSK;
90005286:	7525      	strb	r5, [r4, #20]
  ep->xfer_len = len;
90005288:	e9c4 2308 	strd	r2, r3, [r4, #32]
  ep->xfer_count = 0U;
9000528c:	2300      	movs	r3, #0
9000528e:	62a3      	str	r3, [r4, #40]	@ 0x28
  ep->is_in = 1U;
90005290:	2301      	movs	r3, #1
90005292:	7563      	strb	r3, [r4, #21]

  if (hpcd->Init.dma_enable == 1U)
90005294:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
90005296:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
90005298:	429a      	cmp	r2, r3
    ep->dma_addr = (uint32_t)pBuf;
9000529a:	bf08      	it	eq
9000529c:	6326      	streq	r6, [r4, #48]	@ 0x30
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
9000529e:	f002 f939 	bl	90007514 <USB_EPStartXfer>

  return HAL_OK;
}
900052a2:	2000      	movs	r0, #0
900052a4:	bd70      	pop	{r4, r5, r6, pc}

900052a6 <HAL_PCD_EP_SetStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_SetStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
900052a6:	b538      	push	{r3, r4, r5, lr}
900052a8:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
900052ac:	7903      	ldrb	r3, [r0, #4]
{
900052ae:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
900052b0:	42ab      	cmp	r3, r5
900052b2:	d32b      	bcc.n	9000530c <HAL_PCD_EP_SetStall+0x66>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
900052b4:	f011 0f80 	tst.w	r1, #128	@ 0x80
900052b8:	f04f 0024 	mov.w	r0, #36	@ 0x24
900052bc:	d01d      	beq.n	900052fa <HAL_PCD_EP_SetStall+0x54>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
900052be:	fb00 4105 	mla	r1, r0, r5, r4
    ep->is_in = 1U;
900052c2:	2301      	movs	r3, #1
900052c4:	fb00 4005 	mla	r0, r0, r5, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
900052c8:	3114      	adds	r1, #20
    ep->is_in = 1U;
900052ca:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr];
    ep->is_in = 0U;
  }

  ep->is_stall = 1U;
900052cc:	2301      	movs	r3, #1
  ep->num = ep_addr & EP_ADDR_MSK;
900052ce:	700d      	strb	r5, [r1, #0]
  ep->is_stall = 1U;
900052d0:	708b      	strb	r3, [r1, #2]

  __HAL_LOCK(hpcd);
900052d2:	f894 2494 	ldrb.w	r2, [r4, #1172]	@ 0x494
900052d6:	429a      	cmp	r2, r3
900052d8:	d01a      	beq.n	90005310 <HAL_PCD_EP_SetStall+0x6a>

  (void)USB_EPSetStall(hpcd->Instance, ep);
900052da:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
900052dc:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPSetStall(hpcd->Instance, ep);
900052e0:	f002 fa1a 	bl	90007718 <USB_EPSetStall>

  if ((ep_addr & EP_ADDR_MSK) == 0U)
900052e4:	b92d      	cbnz	r5, 900052f2 <HAL_PCD_EP_SetStall+0x4c>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
900052e6:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
900052ea:	79a1      	ldrb	r1, [r4, #6]
900052ec:	6820      	ldr	r0, [r4, #0]
900052ee:	f002 fad3 	bl	90007898 <USB_EP0_OutStart>
  }

  __HAL_UNLOCK(hpcd);
900052f2:	2000      	movs	r0, #0
900052f4:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
900052f8:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->OUT_ep[ep_addr];
900052fa:	fb00 4301 	mla	r3, r0, r1, r4
    ep->is_in = 0U;
900052fe:	461a      	mov	r2, r3
    ep = &hpcd->OUT_ep[ep_addr];
90005300:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
90005304:	2300      	movs	r3, #0
90005306:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
9000530a:	e7df      	b.n	900052cc <HAL_PCD_EP_SetStall+0x26>
    return HAL_ERROR;
9000530c:	2001      	movs	r0, #1
9000530e:	e7f3      	b.n	900052f8 <HAL_PCD_EP_SetStall+0x52>
  __HAL_LOCK(hpcd);
90005310:	2002      	movs	r0, #2
90005312:	e7f1      	b.n	900052f8 <HAL_PCD_EP_SetStall+0x52>

90005314 <HAL_PCD_EP_ClrStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_ClrStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
90005314:	b538      	push	{r3, r4, r5, lr}
90005316:	f001 020f 	and.w	r2, r1, #15
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
9000531a:	7903      	ldrb	r3, [r0, #4]
{
9000531c:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
9000531e:	4293      	cmp	r3, r2
90005320:	d329      	bcc.n	90005376 <HAL_PCD_EP_ClrStall+0x62>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
90005322:	eb02 03c2 	add.w	r3, r2, r2, lsl #3
90005326:	f011 0f80 	tst.w	r1, #128	@ 0x80
9000532a:	f04f 0024 	mov.w	r0, #36	@ 0x24
9000532e:	ea4f 0383 	mov.w	r3, r3, lsl #2
90005332:	d017      	beq.n	90005364 <HAL_PCD_EP_ClrStall+0x50>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
90005334:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
90005338:	fb00 4002 	mla	r0, r0, r2, r4
9000533c:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000533e:	4421      	add	r1, r4
    ep->is_in = 1U;
90005340:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->is_stall = 0U;
90005342:	2500      	movs	r5, #0
  ep->num = ep_addr & EP_ADDR_MSK;
90005344:	700a      	strb	r2, [r1, #0]
  ep->is_stall = 0U;
90005346:	708d      	strb	r5, [r1, #2]

  __HAL_LOCK(hpcd);
90005348:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
9000534c:	2b01      	cmp	r3, #1
9000534e:	d014      	beq.n	9000537a <HAL_PCD_EP_ClrStall+0x66>
90005350:	2301      	movs	r3, #1
  (void)USB_EPClearStall(hpcd->Instance, ep);
90005352:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
90005354:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPClearStall(hpcd->Instance, ep);
90005358:	f002 fa09 	bl	9000776e <USB_EPClearStall>
  __HAL_UNLOCK(hpcd);

  return HAL_OK;
9000535c:	4628      	mov	r0, r5
  __HAL_UNLOCK(hpcd);
9000535e:	f884 5494 	strb.w	r5, [r4, #1172]	@ 0x494
}
90005362:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
90005364:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
90005368:	fb00 4002 	mla	r0, r0, r2, r4
9000536c:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000536e:	4421      	add	r1, r4
    ep->is_in = 0U;
90005370:	f880 3255 	strb.w	r3, [r0, #597]	@ 0x255
90005374:	e7e5      	b.n	90005342 <HAL_PCD_EP_ClrStall+0x2e>
    return HAL_ERROR;
90005376:	2001      	movs	r0, #1
90005378:	e7f3      	b.n	90005362 <HAL_PCD_EP_ClrStall+0x4e>
  __HAL_LOCK(hpcd);
9000537a:	2002      	movs	r0, #2
9000537c:	e7f1      	b.n	90005362 <HAL_PCD_EP_ClrStall+0x4e>

9000537e <HAL_PCD_EP_Abort>:
HAL_StatusTypeDef HAL_PCD_EP_Abort(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
  HAL_StatusTypeDef ret;
  PCD_EPTypeDef *ep;

  if ((0x80U & ep_addr) == 0x80U)
9000537e:	f001 030f 	and.w	r3, r1, #15
90005382:	060a      	lsls	r2, r1, #24
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
90005384:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
90005388:	ea4f 0383 	mov.w	r3, r3, lsl #2
9000538c:	bf4c      	ite	mi
9000538e:	f103 0114 	addmi.w	r1, r3, #20
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
90005392:	f503 7115 	addpl.w	r1, r3, #596	@ 0x254
90005396:	4401      	add	r1, r0
  }

  /* Stop Xfer */
  ret = USB_EPStopXfer(hpcd->Instance, ep);
90005398:	6800      	ldr	r0, [r0, #0]
9000539a:	f002 b865 	b.w	90007468 <USB_EPStopXfer>
	...

900053a0 <HAL_PCD_IRQHandler>:
{
900053a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
900053a4:	6806      	ldr	r6, [r0, #0]
{
900053a6:	b089      	sub	sp, #36	@ 0x24
900053a8:	4604      	mov	r4, r0
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
900053aa:	4630      	mov	r0, r6
900053ac:	f002 fa62 	bl	90007874 <USB_GetMode>
900053b0:	9003      	str	r0, [sp, #12]
900053b2:	2800      	cmp	r0, #0
900053b4:	f040 8171 	bne.w	9000569a <HAL_PCD_IRQHandler+0x2fa>
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
900053b8:	6820      	ldr	r0, [r4, #0]
900053ba:	f002 fa2d 	bl	90007818 <USB_ReadInterrupts>
900053be:	2800      	cmp	r0, #0
900053c0:	f000 816b 	beq.w	9000569a <HAL_PCD_IRQHandler+0x2fa>
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
900053c4:	f8d6 3808 	ldr.w	r3, [r6, #2056]	@ 0x808
900053c8:	f506 6500 	add.w	r5, r6, #2048	@ 0x800
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
900053cc:	6820      	ldr	r0, [r4, #0]
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
900053ce:	f3c3 230d 	ubfx	r3, r3, #8, #14
900053d2:	f8c4 34d4 	str.w	r3, [r4, #1236]	@ 0x4d4
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
900053d6:	f002 fa1f 	bl	90007818 <USB_ReadInterrupts>
900053da:	0787      	lsls	r7, r0, #30
900053dc:	d504      	bpl.n	900053e8 <HAL_PCD_IRQHandler+0x48>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
900053de:	6822      	ldr	r2, [r4, #0]
900053e0:	6953      	ldr	r3, [r2, #20]
900053e2:	f003 0302 	and.w	r3, r3, #2
900053e6:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
900053e8:	6820      	ldr	r0, [r4, #0]
900053ea:	f002 fa15 	bl	90007818 <USB_ReadInterrupts>
900053ee:	06c0      	lsls	r0, r0, #27
900053f0:	d52d      	bpl.n	9000544e <HAL_PCD_IRQHandler+0xae>
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
900053f2:	6822      	ldr	r2, [r4, #0]
900053f4:	6993      	ldr	r3, [r2, #24]
900053f6:	f023 0310 	bic.w	r3, r3, #16
900053fa:	6193      	str	r3, [r2, #24]
      RegVal = USBx->GRXSTSP;
900053fc:	f8d6 8020 	ldr.w	r8, [r6, #32]
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
90005400:	f408 13f0 	and.w	r3, r8, #1966080	@ 0x1e0000
      ep = &hpcd->OUT_ep[RegVal & USB_OTG_GRXSTSP_EPNUM];
90005404:	f008 070f 	and.w	r7, r8, #15
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
90005408:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
9000540c:	f040 8148 	bne.w	900056a0 <HAL_PCD_IRQHandler+0x300>
        if ((RegVal & USB_OTG_GRXSTSP_BCNT) != 0U)
90005410:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
90005414:	ea18 0f03 	tst.w	r8, r3
90005418:	d014      	beq.n	90005444 <HAL_PCD_IRQHandler+0xa4>
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
9000541a:	2324      	movs	r3, #36	@ 0x24
9000541c:	f3c8 190a 	ubfx	r9, r8, #4, #11
90005420:	4630      	mov	r0, r6
90005422:	fb03 4707 	mla	r7, r3, r7, r4
90005426:	464a      	mov	r2, r9
90005428:	f8d7 1260 	ldr.w	r1, [r7, #608]	@ 0x260
9000542c:	f002 f954 	bl	900076d8 <USB_ReadPacket>
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
90005430:	f8d7 3260 	ldr.w	r3, [r7, #608]	@ 0x260
90005434:	444b      	add	r3, r9
90005436:	f8c7 3260 	str.w	r3, [r7, #608]	@ 0x260
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
9000543a:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
9000543e:	444b      	add	r3, r9
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
90005440:	f8c7 3268 	str.w	r3, [r7, #616]	@ 0x268
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
90005444:	6822      	ldr	r2, [r4, #0]
90005446:	6993      	ldr	r3, [r2, #24]
90005448:	f043 0310 	orr.w	r3, r3, #16
9000544c:	6193      	str	r3, [r2, #24]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
9000544e:	6820      	ldr	r0, [r4, #0]
90005450:	f002 f9e2 	bl	90007818 <USB_ReadInterrupts>
90005454:	0301      	lsls	r1, r0, #12
90005456:	f100 8136 	bmi.w	900056c6 <HAL_PCD_IRQHandler+0x326>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
9000545a:	6820      	ldr	r0, [r4, #0]
9000545c:	f002 f9dc 	bl	90007818 <USB_ReadInterrupts>
90005460:	0342      	lsls	r2, r0, #13
90005462:	d50d      	bpl.n	90005480 <HAL_PCD_IRQHandler+0xe0>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
90005464:	4627      	mov	r7, r4
90005466:	f506 6b10 	add.w	fp, r6, #2304	@ 0x900
      epnum = 0U;
9000546a:	f04f 0a00 	mov.w	sl, #0
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
9000546e:	6820      	ldr	r0, [r4, #0]
90005470:	f002 f9de 	bl	90007830 <USB_ReadDevAllInEpInterrupt>
90005474:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
90005476:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
90005478:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
9000547a:	2b00      	cmp	r3, #0
9000547c:	f040 81ed 	bne.w	9000585a <HAL_PCD_IRQHandler+0x4ba>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
90005480:	6820      	ldr	r0, [r4, #0]
90005482:	f002 f9c9 	bl	90007818 <USB_ReadInterrupts>
90005486:	2800      	cmp	r0, #0
90005488:	da13      	bge.n	900054b2 <HAL_PCD_IRQHandler+0x112>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
9000548a:	686b      	ldr	r3, [r5, #4]
9000548c:	f023 0301 	bic.w	r3, r3, #1
90005490:	606b      	str	r3, [r5, #4]
      if (hpcd->LPM_State == LPM_L1)
90005492:	f894 34cc 	ldrb.w	r3, [r4, #1228]	@ 0x4cc
90005496:	2b01      	cmp	r3, #1
90005498:	f040 8285 	bne.w	900059a6 <HAL_PCD_IRQHandler+0x606>
        hpcd->LPM_State = LPM_L0;
9000549c:	2100      	movs	r1, #0
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
9000549e:	4620      	mov	r0, r4
        hpcd->LPM_State = LPM_L0;
900054a0:	f884 14cc 	strb.w	r1, [r4, #1228]	@ 0x4cc
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
900054a4:	f000 fb1a 	bl	90005adc <HAL_PCDEx_LPM_Callback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
900054a8:	6822      	ldr	r2, [r4, #0]
900054aa:	6953      	ldr	r3, [r2, #20]
900054ac:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
900054b0:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
900054b2:	6820      	ldr	r0, [r4, #0]
900054b4:	f002 f9b0 	bl	90007818 <USB_ReadInterrupts>
900054b8:	0500      	lsls	r0, r0, #20
900054ba:	d50a      	bpl.n	900054d2 <HAL_PCD_IRQHandler+0x132>
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
900054bc:	68ab      	ldr	r3, [r5, #8]
900054be:	07d9      	lsls	r1, r3, #31
900054c0:	d502      	bpl.n	900054c8 <HAL_PCD_IRQHandler+0x128>
        HAL_PCD_SuspendCallback(hpcd);
900054c2:	4620      	mov	r0, r4
900054c4:	f7fc fce8 	bl	90001e98 <HAL_PCD_SuspendCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
900054c8:	6822      	ldr	r2, [r4, #0]
900054ca:	6953      	ldr	r3, [r2, #20]
900054cc:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
900054d0:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_LPMINT))
900054d2:	6820      	ldr	r0, [r4, #0]
900054d4:	f002 f9a0 	bl	90007818 <USB_ReadInterrupts>
900054d8:	0102      	lsls	r2, r0, #4
900054da:	d514      	bpl.n	90005506 <HAL_PCD_IRQHandler+0x166>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_LPMINT);
900054dc:	6823      	ldr	r3, [r4, #0]
900054de:	695a      	ldr	r2, [r3, #20]
900054e0:	f002 6200 	and.w	r2, r2, #134217728	@ 0x8000000
900054e4:	615a      	str	r2, [r3, #20]
      if (hpcd->LPM_State == LPM_L0)
900054e6:	f894 24cc 	ldrb.w	r2, [r4, #1228]	@ 0x4cc
900054ea:	2a00      	cmp	r2, #0
900054ec:	f040 825f 	bne.w	900059ae <HAL_PCD_IRQHandler+0x60e>
        hpcd->LPM_State = LPM_L1;
900054f0:	2101      	movs	r1, #1
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L1_ACTIVE);
900054f2:	4620      	mov	r0, r4
        hpcd->LPM_State = LPM_L1;
900054f4:	f884 14cc 	strb.w	r1, [r4, #1228]	@ 0x4cc
        hpcd->BESL = (hpcd->Instance->GLPMCFG & USB_OTG_GLPMCFG_BESL) >> 2U;
900054f8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900054fa:	f3c3 0383 	ubfx	r3, r3, #2, #4
900054fe:	f8c4 34d0 	str.w	r3, [r4, #1232]	@ 0x4d0
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L1_ACTIVE);
90005502:	f000 faeb 	bl	90005adc <HAL_PCDEx_LPM_Callback>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
90005506:	6820      	ldr	r0, [r4, #0]
90005508:	f002 f986 	bl	90007818 <USB_ReadInterrupts>
9000550c:	04c3      	lsls	r3, r0, #19
9000550e:	d533      	bpl.n	90005578 <HAL_PCD_IRQHandler+0x1d8>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
90005510:	686b      	ldr	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
90005512:	2110      	movs	r1, #16
90005514:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
90005516:	f023 0301 	bic.w	r3, r3, #1
9000551a:	606b      	str	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
9000551c:	f001 fe00 	bl	90007120 <USB_FlushTxFifo>
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
90005520:	7920      	ldrb	r0, [r4, #4]
90005522:	f506 6310 	add.w	r3, r6, #2304	@ 0x900
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
90005526:	f64f 317f 	movw	r1, #64383	@ 0xfb7f
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000552a:	9a03      	ldr	r2, [sp, #12]
9000552c:	4290      	cmp	r0, r2
9000552e:	f200 8242 	bhi.w	900059b6 <HAL_PCD_IRQHandler+0x616>
      USBx_DEVICE->DAINTMSK |= 0x10001U;
90005532:	69eb      	ldr	r3, [r5, #28]
90005534:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
90005538:	61eb      	str	r3, [r5, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
9000553a:	7be3      	ldrb	r3, [r4, #15]
9000553c:	2b00      	cmp	r3, #0
9000553e:	f000 8259 	beq.w	900059f4 <HAL_PCD_IRQHandler+0x654>
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
90005542:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
90005546:	f043 030b 	orr.w	r3, r3, #11
9000554a:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
9000554e:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90005550:	f043 030b 	orr.w	r3, r3, #11
90005554:	646b      	str	r3, [r5, #68]	@ 0x44
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
90005556:	f8d6 3800 	ldr.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
9000555a:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
9000555e:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
90005560:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
90005564:	f8c6 3800 	str.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
90005568:	79a1      	ldrb	r1, [r4, #6]
9000556a:	f002 f995 	bl	90007898 <USB_EP0_OutStart>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
9000556e:	6822      	ldr	r2, [r4, #0]
90005570:	6953      	ldr	r3, [r2, #20]
90005572:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
90005576:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
90005578:	6820      	ldr	r0, [r4, #0]
9000557a:	f002 f94d 	bl	90007818 <USB_ReadInterrupts>
9000557e:	0487      	lsls	r7, r0, #18
90005580:	d516      	bpl.n	900055b0 <HAL_PCD_IRQHandler+0x210>
      (void)USB_ActivateSetup(hpcd->Instance);
90005582:	6820      	ldr	r0, [r4, #0]
90005584:	f002 f97a 	bl	9000787c <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
90005588:	6820      	ldr	r0, [r4, #0]
9000558a:	f001 fecd 	bl	90007328 <USB_GetDevSpeed>
      (void)USB_SetTurnaroundTime(hpcd->Instance,
9000558e:	6827      	ldr	r7, [r4, #0]
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
90005590:	71e0      	strb	r0, [r4, #7]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
90005592:	f000 fd63 	bl	9000605c <HAL_RCC_GetHCLKFreq>
90005596:	79e2      	ldrb	r2, [r4, #7]
90005598:	4601      	mov	r1, r0
9000559a:	4638      	mov	r0, r7
9000559c:	f001 fd16 	bl	90006fcc <USB_SetTurnaroundTime>
      HAL_PCD_ResetCallback(hpcd);
900055a0:	4620      	mov	r0, r4
900055a2:	f7fc fc68 	bl	90001e76 <HAL_PCD_ResetCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
900055a6:	6822      	ldr	r2, [r4, #0]
900055a8:	6953      	ldr	r3, [r2, #20]
900055aa:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
900055ae:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
900055b0:	6820      	ldr	r0, [r4, #0]
900055b2:	f002 f931 	bl	90007818 <USB_ReadInterrupts>
900055b6:	0700      	lsls	r0, r0, #28
900055b8:	d507      	bpl.n	900055ca <HAL_PCD_IRQHandler+0x22a>
      HAL_PCD_SOFCallback(hpcd);
900055ba:	4620      	mov	r0, r4
900055bc:	f7fc fc57 	bl	90001e6e <HAL_PCD_SOFCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
900055c0:	6822      	ldr	r2, [r4, #0]
900055c2:	6953      	ldr	r3, [r2, #20]
900055c4:	f003 0308 	and.w	r3, r3, #8
900055c8:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_BOUTNAKEFF))
900055ca:	6820      	ldr	r0, [r4, #0]
900055cc:	f002 f924 	bl	90007818 <USB_ReadInterrupts>
900055d0:	0601      	lsls	r1, r0, #24
900055d2:	f100 821a 	bmi.w	90005a0a <HAL_PCD_IRQHandler+0x66a>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
900055d6:	6820      	ldr	r0, [r4, #0]
900055d8:	f002 f91e 	bl	90007818 <USB_ReadInterrupts>
900055dc:	02c2      	lsls	r2, r0, #11
900055de:	d50c      	bpl.n	900055fa <HAL_PCD_IRQHandler+0x25a>
900055e0:	46a0      	mov	r8, r4
900055e2:	f506 6912 	add.w	r9, r6, #2336	@ 0x920
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
900055e6:	2701      	movs	r7, #1
900055e8:	7923      	ldrb	r3, [r4, #4]
900055ea:	42bb      	cmp	r3, r7
900055ec:	f200 8226 	bhi.w	90005a3c <HAL_PCD_IRQHandler+0x69c>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
900055f0:	6822      	ldr	r2, [r4, #0]
900055f2:	6953      	ldr	r3, [r2, #20]
900055f4:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
900055f8:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
900055fa:	6820      	ldr	r0, [r4, #0]
900055fc:	f002 f90c 	bl	90007818 <USB_ReadInterrupts>
90005600:	0283      	lsls	r3, r0, #10
90005602:	d52d      	bpl.n	90005660 <HAL_PCD_IRQHandler+0x2c0>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
90005604:	f894 e004 	ldrb.w	lr, [r4, #4]
90005608:	4623      	mov	r3, r4
9000560a:	f506 6032 	add.w	r0, r6, #2848	@ 0xb20
9000560e:	2101      	movs	r1, #1
90005610:	458e      	cmp	lr, r1
90005612:	d920      	bls.n	90005656 <HAL_PCD_IRQHandler+0x2b6>
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
90005614:	f893 c27c 	ldrb.w	ip, [r3, #636]	@ 0x27c
        RegVal = USBx_OUTEP(epnum)->DOEPCTL;
90005618:	6802      	ldr	r2, [r0, #0]
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
9000561a:	f1bc 0f01 	cmp.w	ip, #1
9000561e:	f040 8223 	bne.w	90005a68 <HAL_PCD_IRQHandler+0x6c8>
90005622:	2a00      	cmp	r2, #0
90005624:	f280 8220 	bge.w	90005a68 <HAL_PCD_IRQHandler+0x6c8>
            ((RegVal & (0x1U << 16)) == (hpcd->FrameNumber & 0x1U)))
90005628:	f8d4 74d4 	ldr.w	r7, [r4, #1236]	@ 0x4d4
9000562c:	f402 3280 	and.w	r2, r2, #65536	@ 0x10000
90005630:	f007 0701 	and.w	r7, r7, #1
            ((RegVal & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA) &&
90005634:	42ba      	cmp	r2, r7
90005636:	f040 8217 	bne.w	90005a68 <HAL_PCD_IRQHandler+0x6c8>
          hpcd->OUT_ep[epnum].is_iso_incomplete = 1U;
9000563a:	f883 c27b 	strb.w	ip, [r3, #635]	@ 0x27b
          USBx->GINTMSK |= USB_OTG_GINTMSK_GONAKEFFM;
9000563e:	69b2      	ldr	r2, [r6, #24]
90005640:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90005644:	61b2      	str	r2, [r6, #24]
          if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == 0U)
90005646:	6972      	ldr	r2, [r6, #20]
90005648:	0617      	lsls	r7, r2, #24
9000564a:	f100 820d 	bmi.w	90005a68 <HAL_PCD_IRQHandler+0x6c8>
            USBx_DEVICE->DCTL |= USB_OTG_DCTL_SGONAK;
9000564e:	686b      	ldr	r3, [r5, #4]
90005650:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90005654:	606b      	str	r3, [r5, #4]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
90005656:	6822      	ldr	r2, [r4, #0]
90005658:	6953      	ldr	r3, [r2, #20]
9000565a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
9000565e:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
90005660:	6820      	ldr	r0, [r4, #0]
90005662:	f002 f8d9 	bl	90007818 <USB_ReadInterrupts>
90005666:	0041      	lsls	r1, r0, #1
90005668:	d507      	bpl.n	9000567a <HAL_PCD_IRQHandler+0x2da>
      HAL_PCD_ConnectCallback(hpcd);
9000566a:	4620      	mov	r0, r4
9000566c:	f7fc fc24 	bl	90001eb8 <HAL_PCD_ConnectCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
90005670:	6822      	ldr	r2, [r4, #0]
90005672:	6953      	ldr	r3, [r2, #20]
90005674:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
90005678:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
9000567a:	6820      	ldr	r0, [r4, #0]
9000567c:	f002 f8cc 	bl	90007818 <USB_ReadInterrupts>
90005680:	0742      	lsls	r2, r0, #29
90005682:	d50a      	bpl.n	9000569a <HAL_PCD_IRQHandler+0x2fa>
      RegVal = hpcd->Instance->GOTGINT;
90005684:	6823      	ldr	r3, [r4, #0]
90005686:	685d      	ldr	r5, [r3, #4]
      if ((RegVal & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
90005688:	076b      	lsls	r3, r5, #29
9000568a:	d502      	bpl.n	90005692 <HAL_PCD_IRQHandler+0x2f2>
        HAL_PCD_DisconnectCallback(hpcd);
9000568c:	4620      	mov	r0, r4
9000568e:	f7fc fc17 	bl	90001ec0 <HAL_PCD_DisconnectCallback>
      hpcd->Instance->GOTGINT |= RegVal;
90005692:	6822      	ldr	r2, [r4, #0]
90005694:	6853      	ldr	r3, [r2, #4]
90005696:	432b      	orrs	r3, r5
90005698:	6053      	str	r3, [r2, #4]
}
9000569a:	b009      	add	sp, #36	@ 0x24
9000569c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      else if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) == STS_SETUP_UPDT)
900056a0:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
900056a4:	f47f aece 	bne.w	90005444 <HAL_PCD_IRQHandler+0xa4>
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
900056a8:	2208      	movs	r2, #8
900056aa:	f204 419c 	addw	r1, r4, #1180	@ 0x49c
900056ae:	4630      	mov	r0, r6
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
900056b0:	f3c8 180a 	ubfx	r8, r8, #4, #11
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
900056b4:	f002 f810 	bl	900076d8 <USB_ReadPacket>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
900056b8:	2324      	movs	r3, #36	@ 0x24
900056ba:	fb03 4707 	mla	r7, r3, r7, r4
900056be:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
900056c2:	4443      	add	r3, r8
900056c4:	e6bc      	b.n	90005440 <HAL_PCD_IRQHandler+0xa0>
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
900056c6:	f506 6830 	add.w	r8, r6, #2816	@ 0xb00
900056ca:	46a2      	mov	sl, r4
      epnum = 0U;
900056cc:	2700      	movs	r7, #0
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
900056ce:	6820      	ldr	r0, [r4, #0]
900056d0:	f002 f8a6 	bl	90007820 <USB_ReadDevAllOutEpInterrupt>
900056d4:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
900056d6:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
900056d8:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
900056da:	2b00      	cmp	r3, #0
900056dc:	f43f aebd 	beq.w	9000545a <HAL_PCD_IRQHandler+0xba>
        if ((ep_intr & 0x1U) != 0U)
900056e0:	9b04      	ldr	r3, [sp, #16]
900056e2:	07db      	lsls	r3, r3, #31
900056e4:	d578      	bpl.n	900057d8 <HAL_PCD_IRQHandler+0x438>
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
900056e6:	fa5f fb87 	uxtb.w	fp, r7
900056ea:	4659      	mov	r1, fp
900056ec:	f002 f8a8 	bl	90007840 <USB_ReadDevOutEPInterrupt>
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
900056f0:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
900056f4:	4681      	mov	r9, r0
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
900056f6:	d01f      	beq.n	90005738 <HAL_PCD_IRQHandler+0x398>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
900056f8:	2301      	movs	r3, #1
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  USB_OTG_EPTypeDef *ep;
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
900056fa:	6820      	ldr	r0, [r4, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
900056fc:	f8c8 3008 	str.w	r3, [r8, #8]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
90005700:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00

  if (hpcd->Init.dma_enable == 1U)
90005704:	f894 c006 	ldrb.w	ip, [r4, #6]
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
90005708:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
9000570c:	6c01      	ldr	r1, [r0, #64]	@ 0x40
  if (hpcd->Init.dma_enable == 1U)
9000570e:	f1bc 0f01 	cmp.w	ip, #1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
90005712:	689a      	ldr	r2, [r3, #8]
  if (hpcd->Init.dma_enable == 1U)
90005714:	f040 808b 	bne.w	9000582e <HAL_PCD_IRQHandler+0x48e>
  {
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
90005718:	f012 0f08 	tst.w	r2, #8
9000571c:	d007      	beq.n	9000572e <HAL_PCD_IRQHandler+0x38e>
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
9000571e:	48b3      	ldr	r0, [pc, #716]	@ (900059ec <HAL_PCD_IRQHandler+0x64c>)
90005720:	4281      	cmp	r1, r0
90005722:	d909      	bls.n	90005738 <HAL_PCD_IRQHandler+0x398>
90005724:	0412      	lsls	r2, r2, #16
90005726:	d507      	bpl.n	90005738 <HAL_PCD_IRQHandler+0x398>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
      {
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
90005728:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
9000572c:	e003      	b.n	90005736 <HAL_PCD_IRQHandler+0x396>
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
9000572e:	f012 0f20 	tst.w	r2, #32
90005732:	d05a      	beq.n	900057ea <HAL_PCD_IRQHandler+0x44a>
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
90005734:	2220      	movs	r2, #32
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
90005736:	609a      	str	r2, [r3, #8]
          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
90005738:	f019 0f08 	tst.w	r9, #8
9000573c:	d021      	beq.n	90005782 <HAL_PCD_IRQHandler+0x3e2>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
9000573e:	2308      	movs	r3, #8
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
90005740:	49aa      	ldr	r1, [pc, #680]	@ (900059ec <HAL_PCD_IRQHandler+0x64c>)
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
90005742:	f8c8 3008 	str.w	r3, [r8, #8]
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
90005746:	6823      	ldr	r3, [r4, #0]
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
90005748:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
9000574a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
9000574e:	428a      	cmp	r2, r1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
90005750:	eb03 1347 	add.w	r3, r3, r7, lsl #5
90005754:	6898      	ldr	r0, [r3, #8]
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
90005756:	d904      	bls.n	90005762 <HAL_PCD_IRQHandler+0x3c2>
90005758:	0401      	lsls	r1, r0, #16
9000575a:	d502      	bpl.n	90005762 <HAL_PCD_IRQHandler+0x3c2>
      ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
  {
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
9000575c:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
90005760:	6098      	str	r0, [r3, #8]

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
90005762:	4620      	mov	r0, r4
90005764:	9205      	str	r2, [sp, #20]
90005766:	f7fc fb6b 	bl	90001e40 <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
9000576a:	9a05      	ldr	r2, [sp, #20]
9000576c:	499f      	ldr	r1, [pc, #636]	@ (900059ec <HAL_PCD_IRQHandler+0x64c>)
9000576e:	428a      	cmp	r2, r1
90005770:	d907      	bls.n	90005782 <HAL_PCD_IRQHandler+0x3e2>
90005772:	79a1      	ldrb	r1, [r4, #6]
90005774:	2901      	cmp	r1, #1
90005776:	d104      	bne.n	90005782 <HAL_PCD_IRQHandler+0x3e2>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
90005778:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
9000577c:	6820      	ldr	r0, [r4, #0]
9000577e:	f002 f88b 	bl	90007898 <USB_EP0_OutStart>
          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
90005782:	f019 0f10 	tst.w	r9, #16
90005786:	d002      	beq.n	9000578e <HAL_PCD_IRQHandler+0x3ee>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
90005788:	2310      	movs	r3, #16
9000578a:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_EPDISD) == USB_OTG_DOEPINT_EPDISD)
9000578e:	f019 0f02 	tst.w	r9, #2
90005792:	d014      	beq.n	900057be <HAL_PCD_IRQHandler+0x41e>
            if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == USB_OTG_GINTSTS_BOUTNAKEFF)
90005794:	6973      	ldr	r3, [r6, #20]
90005796:	061a      	lsls	r2, r3, #24
90005798:	d503      	bpl.n	900057a2 <HAL_PCD_IRQHandler+0x402>
              USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGONAK;
9000579a:	686b      	ldr	r3, [r5, #4]
9000579c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
900057a0:	606b      	str	r3, [r5, #4]
            if (ep->is_iso_incomplete == 1U)
900057a2:	f89a 3257 	ldrb.w	r3, [sl, #599]	@ 0x257
900057a6:	2b01      	cmp	r3, #1
900057a8:	d106      	bne.n	900057b8 <HAL_PCD_IRQHandler+0x418>
              ep->is_iso_incomplete = 0U;
900057aa:	2300      	movs	r3, #0
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
900057ac:	4659      	mov	r1, fp
900057ae:	4620      	mov	r0, r4
              ep->is_iso_incomplete = 0U;
900057b0:	f88a 3257 	strb.w	r3, [sl, #599]	@ 0x257
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
900057b4:	f7fc fb78 	bl	90001ea8 <HAL_PCD_ISOOUTIncompleteCallback>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
900057b8:	2302      	movs	r3, #2
900057ba:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
900057be:	f019 0f20 	tst.w	r9, #32
900057c2:	d002      	beq.n	900057ca <HAL_PCD_IRQHandler+0x42a>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
900057c4:	2320      	movs	r3, #32
900057c6:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
900057ca:	f419 5f00 	tst.w	r9, #8192	@ 0x2000
900057ce:	d003      	beq.n	900057d8 <HAL_PCD_IRQHandler+0x438>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
900057d0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
900057d4:	f8c8 3008 	str.w	r3, [r8, #8]
        ep_intr >>= 1U;
900057d8:	9b04      	ldr	r3, [sp, #16]
        epnum++;
900057da:	3701      	adds	r7, #1
        ep_intr >>= 1U;
900057dc:	f108 0820 	add.w	r8, r8, #32
900057e0:	f10a 0a24 	add.w	sl, sl, #36	@ 0x24
900057e4:	085b      	lsrs	r3, r3, #1
900057e6:	9304      	str	r3, [sp, #16]
900057e8:	e775      	b.n	900056d6 <HAL_PCD_IRQHandler+0x336>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
900057ea:	f8df c200 	ldr.w	ip, [pc, #512]	@ 900059ec <HAL_PCD_IRQHandler+0x64c>
900057ee:	4561      	cmp	r1, ip
900057f0:	d901      	bls.n	900057f6 <HAL_PCD_IRQHandler+0x456>
900057f2:	0412      	lsls	r2, r2, #16
900057f4:	d498      	bmi.n	90005728 <HAL_PCD_IRQHandler+0x388>
        ep->xfer_count = ep->xfer_size - (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
900057f6:	691a      	ldr	r2, [r3, #16]
900057f8:	f8da 3274 	ldr.w	r3, [sl, #628]	@ 0x274
900057fc:	f3c2 0212 	ubfx	r2, r2, #0, #19
90005800:	1a9b      	subs	r3, r3, r2
90005802:	f8ca 3268 	str.w	r3, [sl, #616]	@ 0x268
        if (epnum == 0U)
90005806:	b96f      	cbnz	r7, 90005824 <HAL_PCD_IRQHandler+0x484>
          if (ep->xfer_len == 0U)
90005808:	f8d4 2264 	ldr.w	r2, [r4, #612]	@ 0x264
9000580c:	b92a      	cbnz	r2, 9000581a <HAL_PCD_IRQHandler+0x47a>
            (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
9000580e:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
90005812:	2101      	movs	r1, #1
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
90005814:	f002 f840 	bl	90007898 <USB_EP0_OutStart>
90005818:	e004      	b.n	90005824 <HAL_PCD_IRQHandler+0x484>
            ep->xfer_buff += ep->xfer_count;
9000581a:	f8d4 2260 	ldr.w	r2, [r4, #608]	@ 0x260
9000581e:	441a      	add	r2, r3
90005820:	f8c4 2260 	str.w	r2, [r4, #608]	@ 0x260
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
90005824:	4659      	mov	r1, fp
90005826:	4620      	mov	r0, r4
90005828:	f7fc fb10 	bl	90001e4c <HAL_PCD_DataOutStageCallback>
9000582c:	e784      	b.n	90005738 <HAL_PCD_IRQHandler+0x398>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
9000582e:	f8df c1c0 	ldr.w	ip, [pc, #448]	@ 900059f0 <HAL_PCD_IRQHandler+0x650>
90005832:	4561      	cmp	r1, ip
90005834:	d107      	bne.n	90005846 <HAL_PCD_IRQHandler+0x4a6>
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
90005836:	0411      	lsls	r1, r2, #16
90005838:	f53f af76 	bmi.w	90005728 <HAL_PCD_IRQHandler+0x388>
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
9000583c:	0690      	lsls	r0, r2, #26
9000583e:	d5f1      	bpl.n	90005824 <HAL_PCD_IRQHandler+0x484>
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
90005840:	2220      	movs	r2, #32
90005842:	609a      	str	r2, [r3, #8]
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
90005844:	e7ee      	b.n	90005824 <HAL_PCD_IRQHandler+0x484>
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
90005846:	2f00      	cmp	r7, #0
90005848:	d1ec      	bne.n	90005824 <HAL_PCD_IRQHandler+0x484>
9000584a:	f8d4 3264 	ldr.w	r3, [r4, #612]	@ 0x264
9000584e:	2b00      	cmp	r3, #0
90005850:	d1e8      	bne.n	90005824 <HAL_PCD_IRQHandler+0x484>
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
90005852:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
90005856:	4639      	mov	r1, r7
90005858:	e7dc      	b.n	90005814 <HAL_PCD_IRQHandler+0x474>
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
9000585a:	9b04      	ldr	r3, [sp, #16]
9000585c:	07db      	lsls	r3, r3, #31
9000585e:	f140 8099 	bpl.w	90005994 <HAL_PCD_IRQHandler+0x5f4>
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
90005862:	fa5f f38a 	uxtb.w	r3, sl
90005866:	4619      	mov	r1, r3
90005868:	9305      	str	r3, [sp, #20]
9000586a:	f001 fff2 	bl	90007852 <USB_ReadDevInEPInterrupt>
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
9000586e:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
90005872:	4680      	mov	r8, r0
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
90005874:	d01f      	beq.n	900058b6 <HAL_PCD_IRQHandler+0x516>
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
90005876:	2101      	movs	r1, #1
90005878:	f00a 020f 	and.w	r2, sl, #15
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
9000587c:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
9000587e:	fa01 f202 	lsl.w	r2, r1, r2
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
90005882:	ea23 0302 	bic.w	r3, r3, r2
90005886:	636b      	str	r3, [r5, #52]	@ 0x34
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
90005888:	f8cb 1008 	str.w	r1, [fp, #8]
            if (hpcd->Init.dma_enable == 1U)
9000588c:	79a1      	ldrb	r1, [r4, #6]
9000588e:	2901      	cmp	r1, #1
90005890:	d10d      	bne.n	900058ae <HAL_PCD_IRQHandler+0x50e>
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
90005892:	e9d7 2307 	ldrd	r2, r3, [r7, #28]
90005896:	4413      	add	r3, r2
90005898:	623b      	str	r3, [r7, #32]
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
9000589a:	f1ba 0f00 	cmp.w	sl, #0
9000589e:	d106      	bne.n	900058ae <HAL_PCD_IRQHandler+0x50e>
900058a0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900058a2:	b923      	cbnz	r3, 900058ae <HAL_PCD_IRQHandler+0x50e>
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
900058a4:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
900058a8:	6820      	ldr	r0, [r4, #0]
900058aa:	f001 fff5 	bl	90007898 <USB_EP0_OutStart>
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
900058ae:	9905      	ldr	r1, [sp, #20]
900058b0:	4620      	mov	r0, r4
900058b2:	f7fc fad4 	bl	90001e5e <HAL_PCD_DataInStageCallback>
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
900058b6:	f018 0f08 	tst.w	r8, #8
900058ba:	d002      	beq.n	900058c2 <HAL_PCD_IRQHandler+0x522>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
900058bc:	2308      	movs	r3, #8
900058be:	f8cb 3008 	str.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
900058c2:	f018 0f10 	tst.w	r8, #16
900058c6:	d002      	beq.n	900058ce <HAL_PCD_IRQHandler+0x52e>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
900058c8:	2310      	movs	r3, #16
900058ca:	f8cb 3008 	str.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
900058ce:	f018 0f40 	tst.w	r8, #64	@ 0x40
900058d2:	d002      	beq.n	900058da <HAL_PCD_IRQHandler+0x53a>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
900058d4:	2340      	movs	r3, #64	@ 0x40
900058d6:	f8cb 3008 	str.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
900058da:	f018 0f02 	tst.w	r8, #2
900058de:	d00f      	beq.n	90005900 <HAL_PCD_IRQHandler+0x560>
            (void)USB_FlushTxFifo(USBx, epnum);
900058e0:	4651      	mov	r1, sl
900058e2:	4630      	mov	r0, r6
900058e4:	f001 fc1c 	bl	90007120 <USB_FlushTxFifo>
            if (ep->is_iso_incomplete == 1U)
900058e8:	7dfb      	ldrb	r3, [r7, #23]
900058ea:	2b01      	cmp	r3, #1
900058ec:	d105      	bne.n	900058fa <HAL_PCD_IRQHandler+0x55a>
              ep->is_iso_incomplete = 0U;
900058ee:	2300      	movs	r3, #0
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
900058f0:	9905      	ldr	r1, [sp, #20]
900058f2:	4620      	mov	r0, r4
              ep->is_iso_incomplete = 0U;
900058f4:	75fb      	strb	r3, [r7, #23]
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
900058f6:	f7fc fadb 	bl	90001eb0 <HAL_PCD_ISOINIncompleteCallback>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
900058fa:	2302      	movs	r3, #2
900058fc:	f8cb 3008 	str.w	r3, [fp, #8]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
90005900:	6823      	ldr	r3, [r4, #0]
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
90005902:	f018 0f80 	tst.w	r8, #128	@ 0x80
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
90005906:	9306      	str	r3, [sp, #24]
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
90005908:	d044      	beq.n	90005994 <HAL_PCD_IRQHandler+0x5f4>
  if (ep->xfer_count > ep->xfer_len)
9000590a:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
9000590e:	429a      	cmp	r2, r3
90005910:	d840      	bhi.n	90005994 <HAL_PCD_IRQHandler+0x5f4>
  len = ep->xfer_len - ep->xfer_count;
90005912:	eba3 0802 	sub.w	r8, r3, r2
  if (len > ep->maxpacket)
90005916:	69fb      	ldr	r3, [r7, #28]
90005918:	4598      	cmp	r8, r3
9000591a:	bf28      	it	cs
9000591c:	4698      	movcs	r8, r3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000591e:	9b06      	ldr	r3, [sp, #24]
  len32b = (len + 3U) / 4U;
90005920:	f108 0803 	add.w	r8, r8, #3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
90005924:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
  len32b = (len + 3U) / 4U;
90005928:	ea4f 0898 	mov.w	r8, r8, lsr #2
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000592c:	eb03 134a 	add.w	r3, r3, sl, lsl #5
90005930:	9307      	str	r3, [sp, #28]
90005932:	9b07      	ldr	r3, [sp, #28]
90005934:	6999      	ldr	r1, [r3, #24]
90005936:	b289      	uxth	r1, r1
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
90005938:	4541      	cmp	r1, r8
9000593a:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
9000593e:	d327      	bcc.n	90005990 <HAL_PCD_IRQHandler+0x5f0>
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
90005940:	4293      	cmp	r3, r2
90005942:	d80b      	bhi.n	9000595c <HAL_PCD_IRQHandler+0x5bc>
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
90005944:	9b06      	ldr	r3, [sp, #24]
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
90005946:	f00a 000f 	and.w	r0, sl, #15
9000594a:	2101      	movs	r1, #1
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
9000594c:	f8d3 2834 	ldr.w	r2, [r3, #2100]	@ 0x834
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
90005950:	4081      	lsls	r1, r0
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
90005952:	ea22 0201 	bic.w	r2, r2, r1
90005956:	f8c3 2834 	str.w	r2, [r3, #2100]	@ 0x834
9000595a:	e01b      	b.n	90005994 <HAL_PCD_IRQHandler+0x5f4>
    len = ep->xfer_len - ep->xfer_count;
9000595c:	eba3 0902 	sub.w	r9, r3, r2
    if (len > ep->maxpacket)
90005960:	69fb      	ldr	r3, [r7, #28]
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
90005962:	9a05      	ldr	r2, [sp, #20]
    if (len > ep->maxpacket)
90005964:	4599      	cmp	r9, r3
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
90005966:	9806      	ldr	r0, [sp, #24]
    if (len > ep->maxpacket)
90005968:	bf28      	it	cs
9000596a:	4699      	movcs	r9, r3
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
9000596c:	79a3      	ldrb	r3, [r4, #6]
9000596e:	9300      	str	r3, [sp, #0]
90005970:	fa1f f389 	uxth.w	r3, r9
90005974:	6a39      	ldr	r1, [r7, #32]
    len32b = (len + 3U) / 4U;
90005976:	f109 0803 	add.w	r8, r9, #3
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
9000597a:	f001 fdb7 	bl	900074ec <USB_WritePacket>
    ep->xfer_buff  += len;
9000597e:	6a3b      	ldr	r3, [r7, #32]
    len32b = (len + 3U) / 4U;
90005980:	ea4f 0898 	mov.w	r8, r8, lsr #2
    ep->xfer_buff  += len;
90005984:	444b      	add	r3, r9
90005986:	623b      	str	r3, [r7, #32]
    ep->xfer_count += len;
90005988:	6abb      	ldr	r3, [r7, #40]	@ 0x28
9000598a:	444b      	add	r3, r9
9000598c:	62bb      	str	r3, [r7, #40]	@ 0x28
9000598e:	e7d0      	b.n	90005932 <HAL_PCD_IRQHandler+0x592>
  if (ep->xfer_len <= ep->xfer_count)
90005990:	4293      	cmp	r3, r2
90005992:	d9d7      	bls.n	90005944 <HAL_PCD_IRQHandler+0x5a4>
        ep_intr >>= 1U;
90005994:	9b04      	ldr	r3, [sp, #16]
        epnum++;
90005996:	f10a 0a01 	add.w	sl, sl, #1
        ep_intr >>= 1U;
9000599a:	3724      	adds	r7, #36	@ 0x24
9000599c:	f10b 0b20 	add.w	fp, fp, #32
900059a0:	085b      	lsrs	r3, r3, #1
900059a2:	9304      	str	r3, [sp, #16]
900059a4:	e567      	b.n	90005476 <HAL_PCD_IRQHandler+0xd6>
        HAL_PCD_ResumeCallback(hpcd);
900059a6:	4620      	mov	r0, r4
900059a8:	f7fc fa7a 	bl	90001ea0 <HAL_PCD_ResumeCallback>
900059ac:	e57c      	b.n	900054a8 <HAL_PCD_IRQHandler+0x108>
        HAL_PCD_SuspendCallback(hpcd);
900059ae:	4620      	mov	r0, r4
900059b0:	f7fc fa72 	bl	90001e98 <HAL_PCD_SuspendCallback>
900059b4:	e5a7      	b.n	90005506 <HAL_PCD_IRQHandler+0x166>
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
900059b6:	6099      	str	r1, [r3, #8]
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
900059b8:	3320      	adds	r3, #32
900059ba:	f853 2c20 	ldr.w	r2, [r3, #-32]
900059be:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
900059c2:	f843 2c20 	str.w	r2, [r3, #-32]
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
900059c6:	f8c3 11e8 	str.w	r1, [r3, #488]	@ 0x1e8
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
900059ca:	f8d3 21e0 	ldr.w	r2, [r3, #480]	@ 0x1e0
900059ce:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
900059d2:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
900059d6:	f8d3 21e0 	ldr.w	r2, [r3, #480]	@ 0x1e0
900059da:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
900059de:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
900059e2:	9a03      	ldr	r2, [sp, #12]
900059e4:	3201      	adds	r2, #1
900059e6:	9203      	str	r2, [sp, #12]
900059e8:	e59f      	b.n	9000552a <HAL_PCD_IRQHandler+0x18a>
900059ea:	bf00      	nop
900059ec:	4f54300a 	.word	0x4f54300a
900059f0:	4f54310a 	.word	0x4f54310a
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
900059f4:	696b      	ldr	r3, [r5, #20]
900059f6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
900059fa:	f043 032b 	orr.w	r3, r3, #43	@ 0x2b
900059fe:	616b      	str	r3, [r5, #20]
        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
90005a00:	692b      	ldr	r3, [r5, #16]
90005a02:	f043 030b 	orr.w	r3, r3, #11
90005a06:	612b      	str	r3, [r5, #16]
90005a08:	e5a5      	b.n	90005556 <HAL_PCD_IRQHandler+0x1b6>
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
90005a0a:	69b3      	ldr	r3, [r6, #24]
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
90005a0c:	2701      	movs	r7, #1
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
90005a0e:	f204 2857 	addw	r8, r4, #599	@ 0x257
90005a12:	f04f 0924 	mov.w	r9, #36	@ 0x24
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
90005a16:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90005a1a:	61b3      	str	r3, [r6, #24]
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
90005a1c:	7923      	ldrb	r3, [r4, #4]
90005a1e:	42bb      	cmp	r3, r7
90005a20:	f67f add9 	bls.w	900055d6 <HAL_PCD_IRQHandler+0x236>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
90005a24:	fb09 f307 	mul.w	r3, r9, r7
90005a28:	f818 3003 	ldrb.w	r3, [r8, r3]
90005a2c:	2b01      	cmp	r3, #1
90005a2e:	d103      	bne.n	90005a38 <HAL_PCD_IRQHandler+0x698>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)epnum);
90005a30:	b2f9      	uxtb	r1, r7
90005a32:	4620      	mov	r0, r4
90005a34:	f7ff fca3 	bl	9000537e <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
90005a38:	3701      	adds	r7, #1
90005a3a:	e7ef      	b.n	90005a1c <HAL_PCD_IRQHandler+0x67c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
90005a3c:	f898 303c 	ldrb.w	r3, [r8, #60]	@ 0x3c
        RegVal = USBx_INEP(epnum)->DIEPCTL;
90005a40:	f8d9 2000 	ldr.w	r2, [r9]
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
90005a44:	2b01      	cmp	r3, #1
90005a46:	d109      	bne.n	90005a5c <HAL_PCD_IRQHandler+0x6bc>
90005a48:	2a00      	cmp	r2, #0
90005a4a:	da07      	bge.n	90005a5c <HAL_PCD_IRQHandler+0x6bc>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
90005a4c:	f067 017f 	orn	r1, r7, #127	@ 0x7f
90005a50:	4620      	mov	r0, r4
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
90005a52:	f888 303b 	strb.w	r3, [r8, #59]	@ 0x3b
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
90005a56:	b2c9      	uxtb	r1, r1
90005a58:	f7ff fc91 	bl	9000537e <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
90005a5c:	3701      	adds	r7, #1
90005a5e:	f108 0824 	add.w	r8, r8, #36	@ 0x24
90005a62:	f109 0920 	add.w	r9, r9, #32
90005a66:	e5bf      	b.n	900055e8 <HAL_PCD_IRQHandler+0x248>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
90005a68:	3101      	adds	r1, #1
90005a6a:	3324      	adds	r3, #36	@ 0x24
90005a6c:	3020      	adds	r0, #32
90005a6e:	e5cf      	b.n	90005610 <HAL_PCD_IRQHandler+0x270>

90005a70 <HAL_PCDEx_SetTxFiFo>:
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
90005a70:	6800      	ldr	r0, [r0, #0]

  if (fifo == 0U)
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
90005a72:	0412      	lsls	r2, r2, #16
  Tx_Offset = hpcd->Instance->GRXFSIZ;
90005a74:	6a43      	ldr	r3, [r0, #36]	@ 0x24
{
90005a76:	b570      	push	{r4, r5, r6, lr}
  if (fifo == 0U)
90005a78:	b919      	cbnz	r1, 90005a82 <HAL_PCDEx_SetTxFiFo+0x12>
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
90005a7a:	4313      	orrs	r3, r2
90005a7c:	6283      	str	r3, [r0, #40]	@ 0x28
    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
  }

  return HAL_OK;
}
90005a7e:	2000      	movs	r0, #0
90005a80:	bd70      	pop	{r4, r5, r6, pc}
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
90005a82:	6a84      	ldr	r4, [r0, #40]	@ 0x28
    for (i = 0U; i < (fifo - 1U); i++)
90005a84:	1e4e      	subs	r6, r1, #1
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
90005a86:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
90005a8a:	2400      	movs	r4, #0
90005a8c:	42b4      	cmp	r4, r6
90005a8e:	d305      	bcc.n	90005a9c <HAL_PCDEx_SetTxFiFo+0x2c>
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
90005a90:	313f      	adds	r1, #63	@ 0x3f
90005a92:	4313      	orrs	r3, r2
90005a94:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90005a98:	6043      	str	r3, [r0, #4]
90005a9a:	e7f0      	b.n	90005a7e <HAL_PCDEx_SetTxFiFo+0xe>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
90005a9c:	f104 0540 	add.w	r5, r4, #64	@ 0x40
90005aa0:	3401      	adds	r4, #1
90005aa2:	eb00 0585 	add.w	r5, r0, r5, lsl #2
90005aa6:	686d      	ldr	r5, [r5, #4]
90005aa8:	eb03 4315 	add.w	r3, r3, r5, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
90005aac:	e7ee      	b.n	90005a8c <HAL_PCDEx_SetTxFiFo+0x1c>

90005aae <HAL_PCDEx_SetRxFiFo>:
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
  hpcd->Instance->GRXFSIZ = size;
90005aae:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
90005ab0:	2000      	movs	r0, #0
  hpcd->Instance->GRXFSIZ = size;
90005ab2:	6259      	str	r1, [r3, #36]	@ 0x24
}
90005ab4:	4770      	bx	lr

90005ab6 <HAL_PCDEx_ActivateLPM>:
  */
HAL_StatusTypeDef HAL_PCDEx_ActivateLPM(PCD_HandleTypeDef *hpcd)
{
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;

  hpcd->lpm_active = 1U;
90005ab6:	2101      	movs	r1, #1
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
90005ab8:	6802      	ldr	r2, [r0, #0]
{
90005aba:	4603      	mov	r3, r0
  hpcd->lpm_active = 1U;
90005abc:	f8c0 14d8 	str.w	r1, [r0, #1240]	@ 0x4d8
  hpcd->LPM_State = LPM_L0;
90005ac0:	2000      	movs	r0, #0
90005ac2:	f883 04cc 	strb.w	r0, [r3, #1228]	@ 0x4cc
  USBx->GINTMSK |= USB_OTG_GINTMSK_LPMINTM;
90005ac6:	6993      	ldr	r3, [r2, #24]
90005ac8:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
90005acc:	6193      	str	r3, [r2, #24]
  USBx->GLPMCFG |= (USB_OTG_GLPMCFG_LPMEN | USB_OTG_GLPMCFG_LPMACK | USB_OTG_GLPMCFG_ENBESL);
90005ace:	6d53      	ldr	r3, [r2, #84]	@ 0x54
90005ad0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
90005ad4:	f043 0303 	orr.w	r3, r3, #3
90005ad8:	6553      	str	r3, [r2, #84]	@ 0x54

  return HAL_OK;
}
90005ada:	4770      	bx	lr

90005adc <HAL_PCDEx_LPM_Callback>:
  UNUSED(msg);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_PCDEx_LPM_Callback could be implemented in the user file
   */
}
90005adc:	4770      	bx	lr
	...

90005ae0 <HAL_PWREx_EnableOverDrive>:
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
90005ae0:	4b19      	ldr	r3, [pc, #100]	@ (90005b48 <HAL_PWREx_EnableOverDrive+0x68>)
{
90005ae2:	b537      	push	{r0, r1, r2, r4, r5, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
90005ae4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
90005ae6:	4c19      	ldr	r4, [pc, #100]	@ (90005b4c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
90005ae8:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
90005aec:	641a      	str	r2, [r3, #64]	@ 0x40
90005aee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90005af0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
90005af4:	9301      	str	r3, [sp, #4]
90005af6:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
90005af8:	6823      	ldr	r3, [r4, #0]
90005afa:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
90005afe:	6023      	str	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
90005b00:	f7fe f92a 	bl	90003d58 <HAL_GetTick>
90005b04:	4605      	mov	r5, r0

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
90005b06:	6863      	ldr	r3, [r4, #4]
90005b08:	03da      	lsls	r2, r3, #15
90005b0a:	d50c      	bpl.n	90005b26 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
90005b0c:	6823      	ldr	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
90005b0e:	4d0f      	ldr	r5, [pc, #60]	@ (90005b4c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
90005b10:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
90005b14:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
90005b16:	f7fe f91f 	bl	90003d58 <HAL_GetTick>
90005b1a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
90005b1c:	686b      	ldr	r3, [r5, #4]
90005b1e:	039b      	lsls	r3, r3, #14
90005b20:	d50a      	bpl.n	90005b38 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
90005b22:	2000      	movs	r0, #0
90005b24:	e006      	b.n	90005b34 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
90005b26:	f7fe f917 	bl	90003d58 <HAL_GetTick>
90005b2a:	1b40      	subs	r0, r0, r5
90005b2c:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
90005b30:	d9e9      	bls.n	90005b06 <HAL_PWREx_EnableOverDrive+0x26>
      return HAL_TIMEOUT;
90005b32:	2003      	movs	r0, #3
}
90005b34:	b003      	add	sp, #12
90005b36:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
90005b38:	f7fe f90e 	bl	90003d58 <HAL_GetTick>
90005b3c:	1b00      	subs	r0, r0, r4
90005b3e:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
90005b42:	d9eb      	bls.n	90005b1c <HAL_PWREx_EnableOverDrive+0x3c>
90005b44:	e7f5      	b.n	90005b32 <HAL_PWREx_EnableOverDrive+0x52>
90005b46:	bf00      	nop
90005b48:	40023800 	.word	0x40023800
90005b4c:	40007000 	.word	0x40007000

90005b50 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
90005b50:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
90005b54:	4604      	mov	r4, r0
90005b56:	b340      	cbz	r0, 90005baa <HAL_RCC_OscConfig+0x5a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
90005b58:	6803      	ldr	r3, [r0, #0]
90005b5a:	07de      	lsls	r6, r3, #31
90005b5c:	d410      	bmi.n	90005b80 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
90005b5e:	6823      	ldr	r3, [r4, #0]
90005b60:	079d      	lsls	r5, r3, #30
90005b62:	d461      	bmi.n	90005c28 <HAL_RCC_OscConfig+0xd8>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
90005b64:	6823      	ldr	r3, [r4, #0]
90005b66:	0719      	lsls	r1, r3, #28
90005b68:	f100 80a6 	bmi.w	90005cb8 <HAL_RCC_OscConfig+0x168>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
90005b6c:	6823      	ldr	r3, [r4, #0]
90005b6e:	075a      	lsls	r2, r3, #29
90005b70:	f100 80c7 	bmi.w	90005d02 <HAL_RCC_OscConfig+0x1b2>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
90005b74:	69a2      	ldr	r2, [r4, #24]
90005b76:	2a00      	cmp	r2, #0
90005b78:	f040 8130 	bne.w	90005ddc <HAL_RCC_OscConfig+0x28c>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
90005b7c:	2000      	movs	r0, #0
90005b7e:	e02c      	b.n	90005bda <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
90005b80:	4b94      	ldr	r3, [pc, #592]	@ (90005dd4 <HAL_RCC_OscConfig+0x284>)
90005b82:	689a      	ldr	r2, [r3, #8]
90005b84:	f002 020c 	and.w	r2, r2, #12
90005b88:	2a04      	cmp	r2, #4
90005b8a:	d007      	beq.n	90005b9c <HAL_RCC_OscConfig+0x4c>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
90005b8c:	689a      	ldr	r2, [r3, #8]
90005b8e:	f002 020c 	and.w	r2, r2, #12
90005b92:	2a08      	cmp	r2, #8
90005b94:	d10b      	bne.n	90005bae <HAL_RCC_OscConfig+0x5e>
90005b96:	685b      	ldr	r3, [r3, #4]
90005b98:	0259      	lsls	r1, r3, #9
90005b9a:	d508      	bpl.n	90005bae <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
90005b9c:	4b8d      	ldr	r3, [pc, #564]	@ (90005dd4 <HAL_RCC_OscConfig+0x284>)
90005b9e:	681b      	ldr	r3, [r3, #0]
90005ba0:	039a      	lsls	r2, r3, #14
90005ba2:	d5dc      	bpl.n	90005b5e <HAL_RCC_OscConfig+0xe>
90005ba4:	6863      	ldr	r3, [r4, #4]
90005ba6:	2b00      	cmp	r3, #0
90005ba8:	d1d9      	bne.n	90005b5e <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
90005baa:	2001      	movs	r0, #1
90005bac:	e015      	b.n	90005bda <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
90005bae:	6863      	ldr	r3, [r4, #4]
90005bb0:	4d88      	ldr	r5, [pc, #544]	@ (90005dd4 <HAL_RCC_OscConfig+0x284>)
90005bb2:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
90005bb6:	d113      	bne.n	90005be0 <HAL_RCC_OscConfig+0x90>
90005bb8:	682b      	ldr	r3, [r5, #0]
90005bba:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
90005bbe:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
90005bc0:	f7fe f8ca 	bl	90003d58 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
90005bc4:	4e83      	ldr	r6, [pc, #524]	@ (90005dd4 <HAL_RCC_OscConfig+0x284>)
        tickstart = HAL_GetTick();
90005bc6:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
90005bc8:	6833      	ldr	r3, [r6, #0]
90005bca:	039b      	lsls	r3, r3, #14
90005bcc:	d4c7      	bmi.n	90005b5e <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
90005bce:	f7fe f8c3 	bl	90003d58 <HAL_GetTick>
90005bd2:	1b40      	subs	r0, r0, r5
90005bd4:	2864      	cmp	r0, #100	@ 0x64
90005bd6:	d9f7      	bls.n	90005bc8 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
90005bd8:	2003      	movs	r0, #3
}
90005bda:	b002      	add	sp, #8
90005bdc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
90005be0:	b99b      	cbnz	r3, 90005c0a <HAL_RCC_OscConfig+0xba>
90005be2:	682b      	ldr	r3, [r5, #0]
90005be4:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
90005be8:	602b      	str	r3, [r5, #0]
90005bea:	682b      	ldr	r3, [r5, #0]
90005bec:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
90005bf0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
90005bf2:	f7fe f8b1 	bl	90003d58 <HAL_GetTick>
90005bf6:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
90005bf8:	682b      	ldr	r3, [r5, #0]
90005bfa:	039f      	lsls	r7, r3, #14
90005bfc:	d5af      	bpl.n	90005b5e <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
90005bfe:	f7fe f8ab 	bl	90003d58 <HAL_GetTick>
90005c02:	1b80      	subs	r0, r0, r6
90005c04:	2864      	cmp	r0, #100	@ 0x64
90005c06:	d9f7      	bls.n	90005bf8 <HAL_RCC_OscConfig+0xa8>
90005c08:	e7e6      	b.n	90005bd8 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
90005c0a:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
90005c0e:	682b      	ldr	r3, [r5, #0]
90005c10:	d103      	bne.n	90005c1a <HAL_RCC_OscConfig+0xca>
90005c12:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
90005c16:	602b      	str	r3, [r5, #0]
90005c18:	e7ce      	b.n	90005bb8 <HAL_RCC_OscConfig+0x68>
90005c1a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
90005c1e:	602b      	str	r3, [r5, #0]
90005c20:	682b      	ldr	r3, [r5, #0]
90005c22:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
90005c26:	e7ca      	b.n	90005bbe <HAL_RCC_OscConfig+0x6e>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
90005c28:	4b6a      	ldr	r3, [pc, #424]	@ (90005dd4 <HAL_RCC_OscConfig+0x284>)
90005c2a:	689a      	ldr	r2, [r3, #8]
90005c2c:	f012 0f0c 	tst.w	r2, #12
90005c30:	d007      	beq.n	90005c42 <HAL_RCC_OscConfig+0xf2>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
90005c32:	689a      	ldr	r2, [r3, #8]
90005c34:	f002 020c 	and.w	r2, r2, #12
90005c38:	2a08      	cmp	r2, #8
90005c3a:	d111      	bne.n	90005c60 <HAL_RCC_OscConfig+0x110>
90005c3c:	685b      	ldr	r3, [r3, #4]
90005c3e:	025d      	lsls	r5, r3, #9
90005c40:	d40e      	bmi.n	90005c60 <HAL_RCC_OscConfig+0x110>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
90005c42:	4a64      	ldr	r2, [pc, #400]	@ (90005dd4 <HAL_RCC_OscConfig+0x284>)
90005c44:	6813      	ldr	r3, [r2, #0]
90005c46:	0799      	lsls	r1, r3, #30
90005c48:	d502      	bpl.n	90005c50 <HAL_RCC_OscConfig+0x100>
90005c4a:	68e3      	ldr	r3, [r4, #12]
90005c4c:	2b01      	cmp	r3, #1
90005c4e:	d1ac      	bne.n	90005baa <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
90005c50:	6813      	ldr	r3, [r2, #0]
90005c52:	6921      	ldr	r1, [r4, #16]
90005c54:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
90005c58:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
90005c5c:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
90005c5e:	e781      	b.n	90005b64 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
90005c60:	68e3      	ldr	r3, [r4, #12]
90005c62:	4d5c      	ldr	r5, [pc, #368]	@ (90005dd4 <HAL_RCC_OscConfig+0x284>)
90005c64:	b1bb      	cbz	r3, 90005c96 <HAL_RCC_OscConfig+0x146>
        __HAL_RCC_HSI_ENABLE();
90005c66:	682b      	ldr	r3, [r5, #0]
90005c68:	f043 0301 	orr.w	r3, r3, #1
90005c6c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
90005c6e:	f7fe f873 	bl	90003d58 <HAL_GetTick>
90005c72:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
90005c74:	682b      	ldr	r3, [r5, #0]
90005c76:	079b      	lsls	r3, r3, #30
90005c78:	d507      	bpl.n	90005c8a <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
90005c7a:	682b      	ldr	r3, [r5, #0]
90005c7c:	6922      	ldr	r2, [r4, #16]
90005c7e:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
90005c82:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
90005c86:	602b      	str	r3, [r5, #0]
90005c88:	e76c      	b.n	90005b64 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
90005c8a:	f7fe f865 	bl	90003d58 <HAL_GetTick>
90005c8e:	1b80      	subs	r0, r0, r6
90005c90:	2802      	cmp	r0, #2
90005c92:	d9ef      	bls.n	90005c74 <HAL_RCC_OscConfig+0x124>
90005c94:	e7a0      	b.n	90005bd8 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
90005c96:	682b      	ldr	r3, [r5, #0]
90005c98:	f023 0301 	bic.w	r3, r3, #1
90005c9c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
90005c9e:	f7fe f85b 	bl	90003d58 <HAL_GetTick>
90005ca2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
90005ca4:	682b      	ldr	r3, [r5, #0]
90005ca6:	079f      	lsls	r7, r3, #30
90005ca8:	f57f af5c 	bpl.w	90005b64 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
90005cac:	f7fe f854 	bl	90003d58 <HAL_GetTick>
90005cb0:	1b80      	subs	r0, r0, r6
90005cb2:	2802      	cmp	r0, #2
90005cb4:	d9f6      	bls.n	90005ca4 <HAL_RCC_OscConfig+0x154>
90005cb6:	e78f      	b.n	90005bd8 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
90005cb8:	6963      	ldr	r3, [r4, #20]
90005cba:	4d46      	ldr	r5, [pc, #280]	@ (90005dd4 <HAL_RCC_OscConfig+0x284>)
90005cbc:	b183      	cbz	r3, 90005ce0 <HAL_RCC_OscConfig+0x190>
      __HAL_RCC_LSI_ENABLE();
90005cbe:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
90005cc0:	f043 0301 	orr.w	r3, r3, #1
90005cc4:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
90005cc6:	f7fe f847 	bl	90003d58 <HAL_GetTick>
90005cca:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
90005ccc:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
90005cce:	079b      	lsls	r3, r3, #30
90005cd0:	f53f af4c 	bmi.w	90005b6c <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
90005cd4:	f7fe f840 	bl	90003d58 <HAL_GetTick>
90005cd8:	1b80      	subs	r0, r0, r6
90005cda:	2802      	cmp	r0, #2
90005cdc:	d9f6      	bls.n	90005ccc <HAL_RCC_OscConfig+0x17c>
90005cde:	e77b      	b.n	90005bd8 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
90005ce0:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
90005ce2:	f023 0301 	bic.w	r3, r3, #1
90005ce6:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
90005ce8:	f7fe f836 	bl	90003d58 <HAL_GetTick>
90005cec:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
90005cee:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
90005cf0:	079f      	lsls	r7, r3, #30
90005cf2:	f57f af3b 	bpl.w	90005b6c <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
90005cf6:	f7fe f82f 	bl	90003d58 <HAL_GetTick>
90005cfa:	1b80      	subs	r0, r0, r6
90005cfc:	2802      	cmp	r0, #2
90005cfe:	d9f6      	bls.n	90005cee <HAL_RCC_OscConfig+0x19e>
90005d00:	e76a      	b.n	90005bd8 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
90005d02:	4b34      	ldr	r3, [pc, #208]	@ (90005dd4 <HAL_RCC_OscConfig+0x284>)
90005d04:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
90005d06:	00d5      	lsls	r5, r2, #3
90005d08:	d427      	bmi.n	90005d5a <HAL_RCC_OscConfig+0x20a>
      __HAL_RCC_PWR_CLK_ENABLE();
90005d0a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
      pwrclkchanged = SET;
90005d0c:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
90005d0e:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
90005d12:	641a      	str	r2, [r3, #64]	@ 0x40
90005d14:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90005d16:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
90005d1a:	9301      	str	r3, [sp, #4]
90005d1c:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
90005d1e:	4d2e      	ldr	r5, [pc, #184]	@ (90005dd8 <HAL_RCC_OscConfig+0x288>)
90005d20:	682b      	ldr	r3, [r5, #0]
90005d22:	05d8      	lsls	r0, r3, #23
90005d24:	d51b      	bpl.n	90005d5e <HAL_RCC_OscConfig+0x20e>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
90005d26:	68a3      	ldr	r3, [r4, #8]
90005d28:	4d2a      	ldr	r5, [pc, #168]	@ (90005dd4 <HAL_RCC_OscConfig+0x284>)
90005d2a:	2b01      	cmp	r3, #1
90005d2c:	d127      	bne.n	90005d7e <HAL_RCC_OscConfig+0x22e>
90005d2e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
90005d30:	f043 0301 	orr.w	r3, r3, #1
90005d34:	672b      	str	r3, [r5, #112]	@ 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
90005d36:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
90005d3a:	f7fe f80d 	bl	90003d58 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
90005d3e:	4e25      	ldr	r6, [pc, #148]	@ (90005dd4 <HAL_RCC_OscConfig+0x284>)
      tickstart = HAL_GetTick();
90005d40:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
90005d42:	6f33      	ldr	r3, [r6, #112]	@ 0x70
90005d44:	079a      	lsls	r2, r3, #30
90005d46:	d53f      	bpl.n	90005dc8 <HAL_RCC_OscConfig+0x278>
    if (pwrclkchanged == SET)
90005d48:	2f00      	cmp	r7, #0
90005d4a:	f43f af13 	beq.w	90005b74 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
90005d4e:	4a21      	ldr	r2, [pc, #132]	@ (90005dd4 <HAL_RCC_OscConfig+0x284>)
90005d50:	6c13      	ldr	r3, [r2, #64]	@ 0x40
90005d52:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
90005d56:	6413      	str	r3, [r2, #64]	@ 0x40
90005d58:	e70c      	b.n	90005b74 <HAL_RCC_OscConfig+0x24>
  FlagStatus pwrclkchanged = RESET;
90005d5a:	2700      	movs	r7, #0
90005d5c:	e7df      	b.n	90005d1e <HAL_RCC_OscConfig+0x1ce>
      PWR->CR1 |= PWR_CR1_DBP;
90005d5e:	682b      	ldr	r3, [r5, #0]
90005d60:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90005d64:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
90005d66:	f7fd fff7 	bl	90003d58 <HAL_GetTick>
90005d6a:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
90005d6c:	682b      	ldr	r3, [r5, #0]
90005d6e:	05d9      	lsls	r1, r3, #23
90005d70:	d4d9      	bmi.n	90005d26 <HAL_RCC_OscConfig+0x1d6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
90005d72:	f7fd fff1 	bl	90003d58 <HAL_GetTick>
90005d76:	1b80      	subs	r0, r0, r6
90005d78:	2864      	cmp	r0, #100	@ 0x64
90005d7a:	d9f7      	bls.n	90005d6c <HAL_RCC_OscConfig+0x21c>
90005d7c:	e72c      	b.n	90005bd8 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
90005d7e:	b9ab      	cbnz	r3, 90005dac <HAL_RCC_OscConfig+0x25c>
90005d80:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
90005d82:	f241 3888 	movw	r8, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
90005d86:	f023 0301 	bic.w	r3, r3, #1
90005d8a:	672b      	str	r3, [r5, #112]	@ 0x70
90005d8c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
90005d8e:	f023 0304 	bic.w	r3, r3, #4
90005d92:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
90005d94:	f7fd ffe0 	bl	90003d58 <HAL_GetTick>
90005d98:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
90005d9a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
90005d9c:	079b      	lsls	r3, r3, #30
90005d9e:	d5d3      	bpl.n	90005d48 <HAL_RCC_OscConfig+0x1f8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
90005da0:	f7fd ffda 	bl	90003d58 <HAL_GetTick>
90005da4:	1b80      	subs	r0, r0, r6
90005da6:	4540      	cmp	r0, r8
90005da8:	d9f7      	bls.n	90005d9a <HAL_RCC_OscConfig+0x24a>
90005daa:	e715      	b.n	90005bd8 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
90005dac:	2b05      	cmp	r3, #5
90005dae:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
90005db0:	d103      	bne.n	90005dba <HAL_RCC_OscConfig+0x26a>
90005db2:	f043 0304 	orr.w	r3, r3, #4
90005db6:	672b      	str	r3, [r5, #112]	@ 0x70
90005db8:	e7b9      	b.n	90005d2e <HAL_RCC_OscConfig+0x1de>
90005dba:	f023 0301 	bic.w	r3, r3, #1
90005dbe:	672b      	str	r3, [r5, #112]	@ 0x70
90005dc0:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
90005dc2:	f023 0304 	bic.w	r3, r3, #4
90005dc6:	e7b5      	b.n	90005d34 <HAL_RCC_OscConfig+0x1e4>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
90005dc8:	f7fd ffc6 	bl	90003d58 <HAL_GetTick>
90005dcc:	1b40      	subs	r0, r0, r5
90005dce:	4540      	cmp	r0, r8
90005dd0:	d9b7      	bls.n	90005d42 <HAL_RCC_OscConfig+0x1f2>
90005dd2:	e701      	b.n	90005bd8 <HAL_RCC_OscConfig+0x88>
90005dd4:	40023800 	.word	0x40023800
90005dd8:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
90005ddc:	4d38      	ldr	r5, [pc, #224]	@ (90005ec0 <HAL_RCC_OscConfig+0x370>)
90005dde:	68ab      	ldr	r3, [r5, #8]
90005de0:	f003 030c 	and.w	r3, r3, #12
90005de4:	2b08      	cmp	r3, #8
90005de6:	d041      	beq.n	90005e6c <HAL_RCC_OscConfig+0x31c>
        __HAL_RCC_PLL_DISABLE();
90005de8:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
90005dea:	2a02      	cmp	r2, #2
        __HAL_RCC_PLL_DISABLE();
90005dec:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
90005df0:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
90005df2:	d12e      	bne.n	90005e52 <HAL_RCC_OscConfig+0x302>
        tickstart = HAL_GetTick();
90005df4:	f7fd ffb0 	bl	90003d58 <HAL_GetTick>
90005df8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
90005dfa:	682b      	ldr	r3, [r5, #0]
90005dfc:	0199      	lsls	r1, r3, #6
90005dfe:	d422      	bmi.n	90005e46 <HAL_RCC_OscConfig+0x2f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
90005e00:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90005e02:	085b      	lsrs	r3, r3, #1
90005e04:	1e5a      	subs	r2, r3, #1
90005e06:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
90005e0a:	430b      	orrs	r3, r1
90005e0c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90005e10:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90005e12:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
90005e16:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90005e18:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
90005e1c:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
90005e20:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
90005e22:	682b      	ldr	r3, [r5, #0]
90005e24:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
90005e28:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
90005e2a:	f7fd ff95 	bl	90003d58 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
90005e2e:	4d24      	ldr	r5, [pc, #144]	@ (90005ec0 <HAL_RCC_OscConfig+0x370>)
        tickstart = HAL_GetTick();
90005e30:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
90005e32:	682b      	ldr	r3, [r5, #0]
90005e34:	019a      	lsls	r2, r3, #6
90005e36:	f53f aea1 	bmi.w	90005b7c <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
90005e3a:	f7fd ff8d 	bl	90003d58 <HAL_GetTick>
90005e3e:	1b00      	subs	r0, r0, r4
90005e40:	2802      	cmp	r0, #2
90005e42:	d9f6      	bls.n	90005e32 <HAL_RCC_OscConfig+0x2e2>
90005e44:	e6c8      	b.n	90005bd8 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
90005e46:	f7fd ff87 	bl	90003d58 <HAL_GetTick>
90005e4a:	1b80      	subs	r0, r0, r6
90005e4c:	2802      	cmp	r0, #2
90005e4e:	d9d4      	bls.n	90005dfa <HAL_RCC_OscConfig+0x2aa>
90005e50:	e6c2      	b.n	90005bd8 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
90005e52:	f7fd ff81 	bl	90003d58 <HAL_GetTick>
90005e56:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
90005e58:	682b      	ldr	r3, [r5, #0]
90005e5a:	019b      	lsls	r3, r3, #6
90005e5c:	f57f ae8e 	bpl.w	90005b7c <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
90005e60:	f7fd ff7a 	bl	90003d58 <HAL_GetTick>
90005e64:	1b00      	subs	r0, r0, r4
90005e66:	2802      	cmp	r0, #2
90005e68:	d9f6      	bls.n	90005e58 <HAL_RCC_OscConfig+0x308>
90005e6a:	e6b5      	b.n	90005bd8 <HAL_RCC_OscConfig+0x88>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
90005e6c:	2a01      	cmp	r2, #1
      pll_config = RCC->PLLCFGR;
90005e6e:	686b      	ldr	r3, [r5, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
90005e70:	f43f ae9b 	beq.w	90005baa <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
90005e74:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
90005e78:	69e1      	ldr	r1, [r4, #28]
90005e7a:	428a      	cmp	r2, r1
90005e7c:	f47f ae95 	bne.w	90005baa <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
90005e80:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
90005e84:	6a21      	ldr	r1, [r4, #32]
90005e86:	428a      	cmp	r2, r1
90005e88:	f47f ae8f 	bne.w	90005baa <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
90005e8c:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
90005e90:	6a61      	ldr	r1, [r4, #36]	@ 0x24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
90005e92:	401a      	ands	r2, r3
90005e94:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
90005e98:	f47f ae87 	bne.w	90005baa <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
90005e9c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90005e9e:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
90005ea2:	0852      	lsrs	r2, r2, #1
90005ea4:	3a01      	subs	r2, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
90005ea6:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
90005eaa:	f47f ae7e 	bne.w	90005baa <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
90005eae:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90005eb0:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
90005eb4:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
90005eb8:	bf14      	ite	ne
90005eba:	2001      	movne	r0, #1
90005ebc:	2000      	moveq	r0, #0
90005ebe:	e68c      	b.n	90005bda <HAL_RCC_OscConfig+0x8a>
90005ec0:	40023800 	.word	0x40023800

90005ec4 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
90005ec4:	4913      	ldr	r1, [pc, #76]	@ (90005f14 <HAL_RCC_GetSysClockFreq+0x50>)
{
90005ec6:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
90005ec8:	688b      	ldr	r3, [r1, #8]
90005eca:	f003 030c 	and.w	r3, r3, #12
90005ece:	2b04      	cmp	r3, #4
90005ed0:	d01b      	beq.n	90005f0a <HAL_RCC_GetSysClockFreq+0x46>
90005ed2:	2b08      	cmp	r3, #8
90005ed4:	d11b      	bne.n	90005f0e <HAL_RCC_GetSysClockFreq+0x4a>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
90005ed6:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
90005ed8:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
90005eda:	6849      	ldr	r1, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
90005edc:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
90005ee0:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
90005ee4:	f3c1 1188 	ubfx	r1, r1, #6, #9
90005ee8:	bf1a      	itte	ne
90005eea:	480b      	ldrne	r0, [pc, #44]	@ (90005f18 <HAL_RCC_GetSysClockFreq+0x54>)
90005eec:	2300      	movne	r3, #0
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
90005eee:	480b      	ldreq	r0, [pc, #44]	@ (90005f1c <HAL_RCC_GetSysClockFreq+0x58>)
90005ef0:	fba1 0100 	umull	r0, r1, r1, r0
90005ef4:	f7fa fa44 	bl	90000380 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
90005ef8:	4b06      	ldr	r3, [pc, #24]	@ (90005f14 <HAL_RCC_GetSysClockFreq+0x50>)
90005efa:	685b      	ldr	r3, [r3, #4]
90005efc:	f3c3 4301 	ubfx	r3, r3, #16, #2
90005f00:	3301      	adds	r3, #1
90005f02:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
90005f04:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
90005f08:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
90005f0a:	4803      	ldr	r0, [pc, #12]	@ (90005f18 <HAL_RCC_GetSysClockFreq+0x54>)
90005f0c:	e7fc      	b.n	90005f08 <HAL_RCC_GetSysClockFreq+0x44>
      sysclockfreq = HSI_VALUE;
90005f0e:	4803      	ldr	r0, [pc, #12]	@ (90005f1c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
90005f10:	e7fa      	b.n	90005f08 <HAL_RCC_GetSysClockFreq+0x44>
90005f12:	bf00      	nop
90005f14:	40023800 	.word	0x40023800
90005f18:	017d7840 	.word	0x017d7840
90005f1c:	00f42400 	.word	0x00f42400

90005f20 <HAL_RCC_ClockConfig>:
{
90005f20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90005f24:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
90005f26:	4604      	mov	r4, r0
90005f28:	b910      	cbnz	r0, 90005f30 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
90005f2a:	2001      	movs	r0, #1
}
90005f2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
90005f30:	4a45      	ldr	r2, [pc, #276]	@ (90006048 <HAL_RCC_ClockConfig+0x128>)
90005f32:	6813      	ldr	r3, [r2, #0]
90005f34:	f003 030f 	and.w	r3, r3, #15
90005f38:	428b      	cmp	r3, r1
90005f3a:	d328      	bcc.n	90005f8e <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
90005f3c:	6821      	ldr	r1, [r4, #0]
90005f3e:	078f      	lsls	r7, r1, #30
90005f40:	d430      	bmi.n	90005fa4 <HAL_RCC_ClockConfig+0x84>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
90005f42:	07c8      	lsls	r0, r1, #31
90005f44:	d443      	bmi.n	90005fce <HAL_RCC_ClockConfig+0xae>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
90005f46:	4a40      	ldr	r2, [pc, #256]	@ (90006048 <HAL_RCC_ClockConfig+0x128>)
90005f48:	6813      	ldr	r3, [r2, #0]
90005f4a:	f003 030f 	and.w	r3, r3, #15
90005f4e:	42ab      	cmp	r3, r5
90005f50:	d866      	bhi.n	90006020 <HAL_RCC_ClockConfig+0x100>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
90005f52:	6822      	ldr	r2, [r4, #0]
90005f54:	0751      	lsls	r1, r2, #29
90005f56:	d46f      	bmi.n	90006038 <HAL_RCC_ClockConfig+0x118>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
90005f58:	0713      	lsls	r3, r2, #28
90005f5a:	d507      	bpl.n	90005f6c <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
90005f5c:	4a3b      	ldr	r2, [pc, #236]	@ (9000604c <HAL_RCC_ClockConfig+0x12c>)
90005f5e:	6921      	ldr	r1, [r4, #16]
90005f60:	6893      	ldr	r3, [r2, #8]
90005f62:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
90005f66:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
90005f6a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
90005f6c:	f7ff ffaa 	bl	90005ec4 <HAL_RCC_GetSysClockFreq>
90005f70:	4b36      	ldr	r3, [pc, #216]	@ (9000604c <HAL_RCC_ClockConfig+0x12c>)
90005f72:	4a37      	ldr	r2, [pc, #220]	@ (90006050 <HAL_RCC_ClockConfig+0x130>)
90005f74:	689b      	ldr	r3, [r3, #8]
90005f76:	f3c3 1303 	ubfx	r3, r3, #4, #4
90005f7a:	5cd3      	ldrb	r3, [r2, r3]
90005f7c:	40d8      	lsrs	r0, r3
90005f7e:	4b35      	ldr	r3, [pc, #212]	@ (90006054 <HAL_RCC_ClockConfig+0x134>)
90005f80:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
90005f82:	4b35      	ldr	r3, [pc, #212]	@ (90006058 <HAL_RCC_ClockConfig+0x138>)
90005f84:	6818      	ldr	r0, [r3, #0]
90005f86:	f7fc fca1 	bl	900028cc <HAL_InitTick>
  return HAL_OK;
90005f8a:	2000      	movs	r0, #0
90005f8c:	e7ce      	b.n	90005f2c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
90005f8e:	6813      	ldr	r3, [r2, #0]
90005f90:	f023 030f 	bic.w	r3, r3, #15
90005f94:	430b      	orrs	r3, r1
90005f96:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
90005f98:	6813      	ldr	r3, [r2, #0]
90005f9a:	f003 030f 	and.w	r3, r3, #15
90005f9e:	428b      	cmp	r3, r1
90005fa0:	d1c3      	bne.n	90005f2a <HAL_RCC_ClockConfig+0xa>
90005fa2:	e7cb      	b.n	90005f3c <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
90005fa4:	f011 0f04 	tst.w	r1, #4
90005fa8:	4b28      	ldr	r3, [pc, #160]	@ (9000604c <HAL_RCC_ClockConfig+0x12c>)
90005faa:	d003      	beq.n	90005fb4 <HAL_RCC_ClockConfig+0x94>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
90005fac:	689a      	ldr	r2, [r3, #8]
90005fae:	f442 52e0 	orr.w	r2, r2, #7168	@ 0x1c00
90005fb2:	609a      	str	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
90005fb4:	070e      	lsls	r6, r1, #28
90005fb6:	d503      	bpl.n	90005fc0 <HAL_RCC_ClockConfig+0xa0>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
90005fb8:	689a      	ldr	r2, [r3, #8]
90005fba:	f442 4260 	orr.w	r2, r2, #57344	@ 0xe000
90005fbe:	609a      	str	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
90005fc0:	689a      	ldr	r2, [r3, #8]
90005fc2:	68a0      	ldr	r0, [r4, #8]
90005fc4:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
90005fc8:	4302      	orrs	r2, r0
90005fca:	609a      	str	r2, [r3, #8]
90005fcc:	e7b9      	b.n	90005f42 <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
90005fce:	6861      	ldr	r1, [r4, #4]
90005fd0:	4b1e      	ldr	r3, [pc, #120]	@ (9000604c <HAL_RCC_ClockConfig+0x12c>)
90005fd2:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
90005fd4:	681a      	ldr	r2, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
90005fd6:	d11b      	bne.n	90006010 <HAL_RCC_ClockConfig+0xf0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
90005fd8:	f412 3f00 	tst.w	r2, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
90005fdc:	d0a5      	beq.n	90005f2a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
90005fde:	689a      	ldr	r2, [r3, #8]
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
90005fe0:	f241 3888 	movw	r8, #5000	@ 0x1388
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
90005fe4:	4f19      	ldr	r7, [pc, #100]	@ (9000604c <HAL_RCC_ClockConfig+0x12c>)
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
90005fe6:	f022 0203 	bic.w	r2, r2, #3
90005fea:	430a      	orrs	r2, r1
90005fec:	609a      	str	r2, [r3, #8]
    tickstart = HAL_GetTick();
90005fee:	f7fd feb3 	bl	90003d58 <HAL_GetTick>
90005ff2:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
90005ff4:	68bb      	ldr	r3, [r7, #8]
90005ff6:	6862      	ldr	r2, [r4, #4]
90005ff8:	f003 030c 	and.w	r3, r3, #12
90005ffc:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
90006000:	d0a1      	beq.n	90005f46 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
90006002:	f7fd fea9 	bl	90003d58 <HAL_GetTick>
90006006:	1b80      	subs	r0, r0, r6
90006008:	4540      	cmp	r0, r8
9000600a:	d9f3      	bls.n	90005ff4 <HAL_RCC_ClockConfig+0xd4>
        return HAL_TIMEOUT;
9000600c:	2003      	movs	r0, #3
9000600e:	e78d      	b.n	90005f2c <HAL_RCC_ClockConfig+0xc>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
90006010:	2902      	cmp	r1, #2
90006012:	d102      	bne.n	9000601a <HAL_RCC_ClockConfig+0xfa>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
90006014:	f012 7f00 	tst.w	r2, #33554432	@ 0x2000000
90006018:	e7e0      	b.n	90005fdc <HAL_RCC_ClockConfig+0xbc>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
9000601a:	f012 0f02 	tst.w	r2, #2
9000601e:	e7dd      	b.n	90005fdc <HAL_RCC_ClockConfig+0xbc>
    __HAL_FLASH_SET_LATENCY(FLatency);
90006020:	6813      	ldr	r3, [r2, #0]
90006022:	f023 030f 	bic.w	r3, r3, #15
90006026:	432b      	orrs	r3, r5
90006028:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000602a:	6813      	ldr	r3, [r2, #0]
9000602c:	f003 030f 	and.w	r3, r3, #15
90006030:	42ab      	cmp	r3, r5
90006032:	f47f af7a 	bne.w	90005f2a <HAL_RCC_ClockConfig+0xa>
90006036:	e78c      	b.n	90005f52 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
90006038:	4904      	ldr	r1, [pc, #16]	@ (9000604c <HAL_RCC_ClockConfig+0x12c>)
9000603a:	68e0      	ldr	r0, [r4, #12]
9000603c:	688b      	ldr	r3, [r1, #8]
9000603e:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
90006042:	4303      	orrs	r3, r0
90006044:	608b      	str	r3, [r1, #8]
90006046:	e787      	b.n	90005f58 <HAL_RCC_ClockConfig+0x38>
90006048:	40023c00 	.word	0x40023c00
9000604c:	40023800 	.word	0x40023800
90006050:	9002aba8 	.word	0x9002aba8
90006054:	20000090 	.word	0x20000090
90006058:	20000098 	.word	0x20000098

9000605c <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
9000605c:	4b01      	ldr	r3, [pc, #4]	@ (90006064 <HAL_RCC_GetHCLKFreq+0x8>)
9000605e:	6818      	ldr	r0, [r3, #0]
90006060:	4770      	bx	lr
90006062:	bf00      	nop
90006064:	20000090 	.word	0x20000090

90006068 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
90006068:	4b04      	ldr	r3, [pc, #16]	@ (9000607c <HAL_RCC_GetPCLK1Freq+0x14>)
9000606a:	4a05      	ldr	r2, [pc, #20]	@ (90006080 <HAL_RCC_GetPCLK1Freq+0x18>)
9000606c:	689b      	ldr	r3, [r3, #8]
9000606e:	f3c3 2382 	ubfx	r3, r3, #10, #3
90006072:	5cd3      	ldrb	r3, [r2, r3]
90006074:	4a03      	ldr	r2, [pc, #12]	@ (90006084 <HAL_RCC_GetPCLK1Freq+0x1c>)
90006076:	6810      	ldr	r0, [r2, #0]
}
90006078:	40d8      	lsrs	r0, r3
9000607a:	4770      	bx	lr
9000607c:	40023800 	.word	0x40023800
90006080:	9002aba0 	.word	0x9002aba0
90006084:	20000090 	.word	0x20000090

90006088 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
90006088:	4b04      	ldr	r3, [pc, #16]	@ (9000609c <HAL_RCC_GetPCLK2Freq+0x14>)
9000608a:	4a05      	ldr	r2, [pc, #20]	@ (900060a0 <HAL_RCC_GetPCLK2Freq+0x18>)
9000608c:	689b      	ldr	r3, [r3, #8]
9000608e:	f3c3 3342 	ubfx	r3, r3, #13, #3
90006092:	5cd3      	ldrb	r3, [r2, r3]
90006094:	4a03      	ldr	r2, [pc, #12]	@ (900060a4 <HAL_RCC_GetPCLK2Freq+0x1c>)
90006096:	6810      	ldr	r0, [r2, #0]
}
90006098:	40d8      	lsrs	r0, r3
9000609a:	4770      	bx	lr
9000609c:	40023800 	.word	0x40023800
900060a0:	9002aba0 	.word	0x9002aba0
900060a4:	20000090 	.word	0x20000090

900060a8 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
900060a8:	230f      	movs	r3, #15
900060aa:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
900060ac:	4b0b      	ldr	r3, [pc, #44]	@ (900060dc <HAL_RCC_GetClockConfig+0x34>)
900060ae:	689a      	ldr	r2, [r3, #8]
900060b0:	f002 0203 	and.w	r2, r2, #3
900060b4:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
900060b6:	689a      	ldr	r2, [r3, #8]
900060b8:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
900060bc:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
900060be:	689a      	ldr	r2, [r3, #8]
900060c0:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
900060c4:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
900060c6:	689b      	ldr	r3, [r3, #8]
900060c8:	08db      	lsrs	r3, r3, #3
900060ca:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
900060ce:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
900060d0:	4b03      	ldr	r3, [pc, #12]	@ (900060e0 <HAL_RCC_GetClockConfig+0x38>)
900060d2:	681b      	ldr	r3, [r3, #0]
900060d4:	f003 030f 	and.w	r3, r3, #15
900060d8:	600b      	str	r3, [r1, #0]
}
900060da:	4770      	bx	lr
900060dc:	40023800 	.word	0x40023800
900060e0:	40023c00 	.word	0x40023c00

900060e4 <HAL_RCCEx_PeriphCLKConfig>:

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
900060e4:	6803      	ldr	r3, [r0, #0]
{
900060e6:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
900060ea:	f013 0601 	ands.w	r6, r3, #1
{
900060ee:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
900060f0:	d00b      	beq.n	9000610a <HAL_RCCEx_PeriphCLKConfig+0x26>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
900060f2:	4aad      	ldr	r2, [pc, #692]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
900060f4:	6891      	ldr	r1, [r2, #8]
900060f6:	f421 0100 	bic.w	r1, r1, #8388608	@ 0x800000
900060fa:	6091      	str	r1, [r2, #8]
900060fc:	6b46      	ldr	r6, [r0, #52]	@ 0x34
900060fe:	6891      	ldr	r1, [r2, #8]
90006100:	4331      	orrs	r1, r6

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
90006102:	fab6 f686 	clz	r6, r6
90006106:	0976      	lsrs	r6, r6, #5
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
90006108:	6091      	str	r1, [r2, #8]
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
9000610a:	f413 2500 	ands.w	r5, r3, #524288	@ 0x80000
9000610e:	d012      	beq.n	90006136 <HAL_RCCEx_PeriphCLKConfig+0x52>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
90006110:	49a5      	ldr	r1, [pc, #660]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
90006112:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
90006114:	f8d1 208c 	ldr.w	r2, [r1, #140]	@ 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
90006118:	f5b5 1f80 	cmp.w	r5, #1048576	@ 0x100000
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000611c:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
    {
      plli2sused = 1;
90006120:	bf08      	it	eq
90006122:	2601      	moveq	r6, #1
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
90006124:	ea42 0205 	orr.w	r2, r2, r5
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
90006128:	bf16      	itet	ne
9000612a:	fab5 f585 	clzne	r5, r5
  uint32_t pllsaiused = 0;
9000612e:	2500      	moveq	r5, #0
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
90006130:	096d      	lsrne	r5, r5, #5
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
90006132:	f8c1 208c 	str.w	r2, [r1, #140]	@ 0x8c
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
90006136:	02d8      	lsls	r0, r3, #11
90006138:	d510      	bpl.n	9000615c <HAL_RCCEx_PeriphCLKConfig+0x78>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
9000613a:	489b      	ldr	r0, [pc, #620]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
9000613c:	6c21      	ldr	r1, [r4, #64]	@ 0x40
9000613e:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
90006142:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
90006146:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
9000614a:	ea42 0201 	orr.w	r2, r2, r1
9000614e:	f8c0 208c 	str.w	r2, [r0, #140]	@ 0x8c
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
90006152:	f000 8186 	beq.w	90006462 <HAL_RCCEx_PeriphCLKConfig+0x37e>
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
    {
      pllsaiused = 1;
90006156:	2900      	cmp	r1, #0
90006158:	bf08      	it	eq
9000615a:	2501      	moveq	r5, #1
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
  {
      plli2sused = 1;
9000615c:	f013 7f80 	tst.w	r3, #16777216	@ 0x1000000
90006160:	bf18      	it	ne
90006162:	2601      	movne	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
90006164:	0699      	lsls	r1, r3, #26
90006166:	d532      	bpl.n	900061ce <HAL_RCCEx_PeriphCLKConfig+0xea>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
90006168:	4b8f      	ldr	r3, [pc, #572]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
9000616a:	4f90      	ldr	r7, [pc, #576]	@ (900063ac <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
    __HAL_RCC_PWR_CLK_ENABLE();
9000616c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
9000616e:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
90006172:	641a      	str	r2, [r3, #64]	@ 0x40
90006174:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90006176:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
9000617a:	9301      	str	r3, [sp, #4]
9000617c:	9b01      	ldr	r3, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
9000617e:	683b      	ldr	r3, [r7, #0]
90006180:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90006184:	603b      	str	r3, [r7, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
90006186:	f7fd fde7 	bl	90003d58 <HAL_GetTick>
9000618a:	4680      	mov	r8, r0

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
9000618c:	683b      	ldr	r3, [r7, #0]
9000618e:	05da      	lsls	r2, r3, #23
90006190:	f140 8169 	bpl.w	90006466 <HAL_RCCEx_PeriphCLKConfig+0x382>
        return HAL_TIMEOUT;
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
90006194:	4f84      	ldr	r7, [pc, #528]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
90006196:	6b22      	ldr	r2, [r4, #48]	@ 0x30
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
90006198:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
9000619a:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
9000619e:	f040 816d 	bne.w	9000647c <HAL_RCCEx_PeriphCLKConfig+0x398>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
900061a2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
900061a4:	f403 7240 	and.w	r2, r3, #768	@ 0x300
900061a8:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
900061ac:	4a7e      	ldr	r2, [pc, #504]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
900061ae:	f040 818a 	bne.w	900064c6 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
900061b2:	6891      	ldr	r1, [r2, #8]
900061b4:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
900061b8:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
900061bc:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
900061c0:	4301      	orrs	r1, r0
900061c2:	6091      	str	r1, [r2, #8]
900061c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
900061c8:	6f11      	ldr	r1, [r2, #112]	@ 0x70
900061ca:	430b      	orrs	r3, r1
900061cc:	6713      	str	r3, [r2, #112]	@ 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
900061ce:	6823      	ldr	r3, [r4, #0]
900061d0:	06d9      	lsls	r1, r3, #27
900061d2:	d50c      	bpl.n	900061ee <HAL_RCCEx_PeriphCLKConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
900061d4:	4a74      	ldr	r2, [pc, #464]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
900061d6:	f8d2 108c 	ldr.w	r1, [r2, #140]	@ 0x8c
900061da:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
900061de:	f8c2 108c 	str.w	r1, [r2, #140]	@ 0x8c
900061e2:	f8d2 108c 	ldr.w	r1, [r2, #140]	@ 0x8c
900061e6:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
900061e8:	4301      	orrs	r1, r0
900061ea:	f8c2 108c 	str.w	r1, [r2, #140]	@ 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
900061ee:	045a      	lsls	r2, r3, #17
900061f0:	d508      	bpl.n	90006204 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
900061f2:	496d      	ldr	r1, [pc, #436]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
900061f4:	6e60      	ldr	r0, [r4, #100]	@ 0x64
900061f6:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
900061fa:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
900061fe:	4302      	orrs	r2, r0
90006200:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
90006204:	041f      	lsls	r7, r3, #16
90006206:	d508      	bpl.n	9000621a <HAL_RCCEx_PeriphCLKConfig+0x136>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
90006208:	4967      	ldr	r1, [pc, #412]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
9000620a:	6ea0      	ldr	r0, [r4, #104]	@ 0x68
9000620c:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90006210:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
90006214:	4302      	orrs	r2, r0
90006216:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
9000621a:	03d8      	lsls	r0, r3, #15
9000621c:	d508      	bpl.n	90006230 <HAL_RCCEx_PeriphCLKConfig+0x14c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
9000621e:	4962      	ldr	r1, [pc, #392]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
90006220:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
90006222:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90006226:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
9000622a:	4302      	orrs	r2, r0
9000622c:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
90006230:	0399      	lsls	r1, r3, #14
90006232:	d508      	bpl.n	90006246 <HAL_RCCEx_PeriphCLKConfig+0x162>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
90006234:	495c      	ldr	r1, [pc, #368]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
90006236:	6f20      	ldr	r0, [r4, #112]	@ 0x70
90006238:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
9000623c:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
90006240:	4302      	orrs	r2, r0
90006242:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
90006246:	065a      	lsls	r2, r3, #25
90006248:	d508      	bpl.n	9000625c <HAL_RCCEx_PeriphCLKConfig+0x178>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
9000624a:	4957      	ldr	r1, [pc, #348]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
9000624c:	6c60      	ldr	r0, [r4, #68]	@ 0x44
9000624e:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90006252:	f022 0203 	bic.w	r2, r2, #3
90006256:	4302      	orrs	r2, r0
90006258:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
9000625c:	061f      	lsls	r7, r3, #24
9000625e:	d508      	bpl.n	90006272 <HAL_RCCEx_PeriphCLKConfig+0x18e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
90006260:	4951      	ldr	r1, [pc, #324]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
90006262:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
90006264:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90006268:	f022 020c 	bic.w	r2, r2, #12
9000626c:	4302      	orrs	r2, r0
9000626e:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
90006272:	05d8      	lsls	r0, r3, #23
90006274:	d508      	bpl.n	90006288 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
90006276:	494c      	ldr	r1, [pc, #304]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
90006278:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000627a:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
9000627e:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
90006282:	4302      	orrs	r2, r0
90006284:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
90006288:	0599      	lsls	r1, r3, #22
9000628a:	d508      	bpl.n	9000629e <HAL_RCCEx_PeriphCLKConfig+0x1ba>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
9000628c:	4946      	ldr	r1, [pc, #280]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
9000628e:	6d20      	ldr	r0, [r4, #80]	@ 0x50
90006290:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90006294:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
90006298:	4302      	orrs	r2, r0
9000629a:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
9000629e:	055a      	lsls	r2, r3, #21
900062a0:	d508      	bpl.n	900062b4 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
900062a2:	4941      	ldr	r1, [pc, #260]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
900062a4:	6d60      	ldr	r0, [r4, #84]	@ 0x54
900062a6:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
900062aa:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
900062ae:	4302      	orrs	r2, r0
900062b0:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
900062b4:	051f      	lsls	r7, r3, #20
900062b6:	d508      	bpl.n	900062ca <HAL_RCCEx_PeriphCLKConfig+0x1e6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
900062b8:	493b      	ldr	r1, [pc, #236]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
900062ba:	6da0      	ldr	r0, [r4, #88]	@ 0x58
900062bc:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
900062c0:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
900062c4:	4302      	orrs	r2, r0
900062c6:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
900062ca:	04d8      	lsls	r0, r3, #19
900062cc:	d508      	bpl.n	900062e0 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
900062ce:	4936      	ldr	r1, [pc, #216]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
900062d0:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
900062d2:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
900062d6:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
900062da:	4302      	orrs	r2, r0
900062dc:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
900062e0:	0499      	lsls	r1, r3, #18
900062e2:	d508      	bpl.n	900062f6 <HAL_RCCEx_PeriphCLKConfig+0x212>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
900062e4:	4930      	ldr	r1, [pc, #192]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
900062e6:	6e20      	ldr	r0, [r4, #96]	@ 0x60
900062e8:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
900062ec:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
900062f0:	4302      	orrs	r2, r0
900062f2:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
900062f6:	025a      	lsls	r2, r3, #9
900062f8:	d508      	bpl.n	9000630c <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
900062fa:	492b      	ldr	r1, [pc, #172]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
900062fc:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
900062fe:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90006302:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
90006306:	4302      	orrs	r2, r0
90006308:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
9000630c:	029f      	lsls	r7, r3, #10
9000630e:	d50c      	bpl.n	9000632a <HAL_RCCEx_PeriphCLKConfig+0x246>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
90006310:	4825      	ldr	r0, [pc, #148]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
90006312:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
90006314:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
    {
      pllsaiused = 1;
90006318:	f1b1 6f00 	cmp.w	r1, #134217728	@ 0x8000000
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
9000631c:	f022 6200 	bic.w	r2, r2, #134217728	@ 0x8000000
      pllsaiused = 1;
90006320:	bf08      	it	eq
90006322:	2501      	moveq	r5, #1
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
90006324:	430a      	orrs	r2, r1
90006326:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
  {
    pllsaiused = 1;
9000632a:	f013 0f08 	tst.w	r3, #8
9000632e:	bf18      	it	ne
90006330:	2501      	movne	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
90006332:	0358      	lsls	r0, r3, #13
90006334:	d508      	bpl.n	90006348 <HAL_RCCEx_PeriphCLKConfig+0x264>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
90006336:	491c      	ldr	r1, [pc, #112]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
90006338:	6f60      	ldr	r0, [r4, #116]	@ 0x74
9000633a:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
9000633e:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
90006342:	4302      	orrs	r2, r0
90006344:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
90006348:	0219      	lsls	r1, r3, #8
9000634a:	d509      	bpl.n	90006360 <HAL_RCCEx_PeriphCLKConfig+0x27c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
9000634c:	4916      	ldr	r1, [pc, #88]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
9000634e:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
90006352:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90006356:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
9000635a:	4302      	orrs	r2, r0
9000635c:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
90006360:	2e01      	cmp	r6, #1
90006362:	f000 80b4 	beq.w	900064ce <HAL_RCCEx_PeriphCLKConfig+0x3ea>
90006366:	019a      	lsls	r2, r3, #6
90006368:	f100 80b1 	bmi.w	900064ce <HAL_RCCEx_PeriphCLKConfig+0x3ea>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
9000636c:	2d01      	cmp	r5, #1
9000636e:	d176      	bne.n	9000645e <HAL_RCCEx_PeriphCLKConfig+0x37a>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
90006370:	4d0d      	ldr	r5, [pc, #52]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
90006372:	682b      	ldr	r3, [r5, #0]
90006374:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
90006378:	602b      	str	r3, [r5, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000637a:	f7fd fced 	bl	90003d58 <HAL_GetTick>
9000637e:	4606      	mov	r6, r0

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
90006380:	682b      	ldr	r3, [r5, #0]
90006382:	009f      	lsls	r7, r3, #2
90006384:	f100 8127 	bmi.w	900065d6 <HAL_RCCEx_PeriphCLKConfig+0x4f2>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
90006388:	6821      	ldr	r1, [r4, #0]
9000638a:	030e      	lsls	r6, r1, #12
9000638c:	d501      	bpl.n	90006392 <HAL_RCCEx_PeriphCLKConfig+0x2ae>
9000638e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90006390:	b11b      	cbz	r3, 9000639a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
90006392:	02cd      	lsls	r5, r1, #11
90006394:	d523      	bpl.n	900063de <HAL_RCCEx_PeriphCLKConfig+0x2fa>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
90006396:	6c23      	ldr	r3, [r4, #64]	@ 0x40
90006398:	bb0b      	cbnz	r3, 900063de <HAL_RCCEx_PeriphCLKConfig+0x2fa>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
9000639a:	4a03      	ldr	r2, [pc, #12]	@ (900063a8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
9000639c:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
900063a0:	f8d2 0088 	ldr.w	r0, [r2, #136]	@ 0x88
900063a4:	e004      	b.n	900063b0 <HAL_RCCEx_PeriphCLKConfig+0x2cc>
900063a6:	bf00      	nop
900063a8:	40023800 	.word	0x40023800
900063ac:	40007000 	.word	0x40007000
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
900063b0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
900063b4:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
900063b8:	4303      	orrs	r3, r0
900063ba:	6960      	ldr	r0, [r4, #20]
900063bc:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
900063c0:	69a0      	ldr	r0, [r4, #24]
900063c2:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
900063c6:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
900063ca:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
900063ce:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
900063d0:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
900063d4:	3801      	subs	r0, #1
900063d6:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900063da:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
900063de:	0288      	lsls	r0, r1, #10
900063e0:	d515      	bpl.n	9000640e <HAL_RCCEx_PeriphCLKConfig+0x32a>
900063e2:	6fe3      	ldr	r3, [r4, #124]	@ 0x7c
900063e4:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
900063e8:	d111      	bne.n	9000640e <HAL_RCCEx_PeriphCLKConfig+0x32a>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
900063ea:	4a82      	ldr	r2, [pc, #520]	@ (900065f4 <HAL_RCCEx_PeriphCLKConfig+0x510>)
900063ec:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
900063f0:	f8d2 0088 	ldr.w	r0, [r2, #136]	@ 0x88

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
900063f4:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
900063f8:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
900063fc:	4303      	orrs	r3, r0
900063fe:	6960      	ldr	r0, [r4, #20]
90006400:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
90006404:	6a20      	ldr	r0, [r4, #32]
90006406:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000640a:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
9000640e:	070a      	lsls	r2, r1, #28
90006410:	d519      	bpl.n	90006446 <HAL_RCCEx_PeriphCLKConfig+0x362>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
90006412:	4a78      	ldr	r2, [pc, #480]	@ (900065f4 <HAL_RCCEx_PeriphCLKConfig+0x510>)
90006414:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
90006418:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
9000641c:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
90006420:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
90006424:	430b      	orrs	r3, r1
90006426:	6961      	ldr	r1, [r4, #20]
90006428:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
9000642c:	69e1      	ldr	r1, [r4, #28]
9000642e:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
90006432:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
90006436:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
9000643a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9000643c:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
90006440:	430b      	orrs	r3, r1
90006442:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
90006446:	4c6b      	ldr	r4, [pc, #428]	@ (900065f4 <HAL_RCCEx_PeriphCLKConfig+0x510>)
90006448:	6823      	ldr	r3, [r4, #0]
9000644a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000644e:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
90006450:	f7fd fc82 	bl	90003d58 <HAL_GetTick>
90006454:	4605      	mov	r5, r0

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
90006456:	6823      	ldr	r3, [r4, #0]
90006458:	009b      	lsls	r3, r3, #2
9000645a:	f140 80c3 	bpl.w	900065e4 <HAL_RCCEx_PeriphCLKConfig+0x500>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
9000645e:	2000      	movs	r0, #0
90006460:	e009      	b.n	90006476 <HAL_RCCEx_PeriphCLKConfig+0x392>
      plli2sused = 1;
90006462:	2601      	movs	r6, #1
90006464:	e67a      	b.n	9000615c <HAL_RCCEx_PeriphCLKConfig+0x78>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
90006466:	f7fd fc77 	bl	90003d58 <HAL_GetTick>
9000646a:	eba0 0008 	sub.w	r0, r0, r8
9000646e:	2864      	cmp	r0, #100	@ 0x64
90006470:	f67f ae8c 	bls.w	9000618c <HAL_RCCEx_PeriphCLKConfig+0xa8>
        return HAL_TIMEOUT;
90006474:	2003      	movs	r0, #3
}
90006476:	b003      	add	sp, #12
90006478:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
9000647c:	f402 7240 	and.w	r2, r2, #768	@ 0x300
90006480:	4293      	cmp	r3, r2
90006482:	f43f ae8e 	beq.w	900061a2 <HAL_RCCEx_PeriphCLKConfig+0xbe>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
90006486:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
90006488:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000648a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
9000648e:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
90006492:	673a      	str	r2, [r7, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
90006494:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
90006496:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000649a:	673a      	str	r2, [r7, #112]	@ 0x70
      RCC->BDCR = tmpreg0;
9000649c:	673b      	str	r3, [r7, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
9000649e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
900064a0:	07db      	lsls	r3, r3, #31
900064a2:	f57f ae7e 	bpl.w	900061a2 <HAL_RCCEx_PeriphCLKConfig+0xbe>
        tickstart = HAL_GetTick();
900064a6:	f7fd fc57 	bl	90003d58 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
900064aa:	f241 3988 	movw	r9, #5000	@ 0x1388
        tickstart = HAL_GetTick();
900064ae:	4680      	mov	r8, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
900064b0:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
900064b2:	0798      	lsls	r0, r3, #30
900064b4:	f53f ae75 	bmi.w	900061a2 <HAL_RCCEx_PeriphCLKConfig+0xbe>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
900064b8:	f7fd fc4e 	bl	90003d58 <HAL_GetTick>
900064bc:	eba0 0008 	sub.w	r0, r0, r8
900064c0:	4548      	cmp	r0, r9
900064c2:	d9f5      	bls.n	900064b0 <HAL_RCCEx_PeriphCLKConfig+0x3cc>
900064c4:	e7d6      	b.n	90006474 <HAL_RCCEx_PeriphCLKConfig+0x390>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
900064c6:	6891      	ldr	r1, [r2, #8]
900064c8:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
900064cc:	e679      	b.n	900061c2 <HAL_RCCEx_PeriphCLKConfig+0xde>
    __HAL_RCC_PLLI2S_DISABLE();
900064ce:	4e49      	ldr	r6, [pc, #292]	@ (900065f4 <HAL_RCCEx_PeriphCLKConfig+0x510>)
900064d0:	6833      	ldr	r3, [r6, #0]
900064d2:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
900064d6:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
900064d8:	f7fd fc3e 	bl	90003d58 <HAL_GetTick>
900064dc:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
900064de:	6833      	ldr	r3, [r6, #0]
900064e0:	011b      	lsls	r3, r3, #4
900064e2:	d472      	bmi.n	900065ca <HAL_RCCEx_PeriphCLKConfig+0x4e6>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
900064e4:	6822      	ldr	r2, [r4, #0]
900064e6:	07d7      	lsls	r7, r2, #31
900064e8:	d512      	bpl.n	90006510 <HAL_RCCEx_PeriphCLKConfig+0x42c>
900064ea:	6b63      	ldr	r3, [r4, #52]	@ 0x34
900064ec:	b983      	cbnz	r3, 90006510 <HAL_RCCEx_PeriphCLKConfig+0x42c>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
900064ee:	f8d6 3084 	ldr.w	r3, [r6, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
900064f2:	f8d6 1084 	ldr.w	r1, [r6, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
900064f6:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
900064fa:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
900064fe:	430b      	orrs	r3, r1
90006500:	6861      	ldr	r1, [r4, #4]
90006502:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
90006506:	68a1      	ldr	r1, [r4, #8]
90006508:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
9000650c:	f8c6 3084 	str.w	r3, [r6, #132]	@ 0x84
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
90006510:	0316      	lsls	r6, r2, #12
90006512:	d503      	bpl.n	9000651c <HAL_RCCEx_PeriphCLKConfig+0x438>
90006514:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90006516:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
9000651a:	d005      	beq.n	90006528 <HAL_RCCEx_PeriphCLKConfig+0x444>
9000651c:	02d0      	lsls	r0, r2, #11
9000651e:	d51e      	bpl.n	9000655e <HAL_RCCEx_PeriphCLKConfig+0x47a>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
90006520:	6c23      	ldr	r3, [r4, #64]	@ 0x40
90006522:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
90006526:	d11a      	bne.n	9000655e <HAL_RCCEx_PeriphCLKConfig+0x47a>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
90006528:	4932      	ldr	r1, [pc, #200]	@ (900065f4 <HAL_RCCEx_PeriphCLKConfig+0x510>)
9000652a:	f8d1 3084 	ldr.w	r3, [r1, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
9000652e:	f8d1 0084 	ldr.w	r0, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
90006532:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
90006536:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
9000653a:	4303      	orrs	r3, r0
9000653c:	6860      	ldr	r0, [r4, #4]
9000653e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
90006542:	68e0      	ldr	r0, [r4, #12]
90006544:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
90006548:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
9000654c:	f8d1 008c 	ldr.w	r0, [r1, #140]	@ 0x8c
90006550:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90006552:	f020 001f 	bic.w	r0, r0, #31
90006556:	3b01      	subs	r3, #1
90006558:	4303      	orrs	r3, r0
9000655a:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000655e:	01d1      	lsls	r1, r2, #7
90006560:	d511      	bpl.n	90006586 <HAL_RCCEx_PeriphCLKConfig+0x4a2>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
90006562:	4924      	ldr	r1, [pc, #144]	@ (900065f4 <HAL_RCCEx_PeriphCLKConfig+0x510>)
90006564:	f8d1 3084 	ldr.w	r3, [r1, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
90006568:	f8d1 0084 	ldr.w	r0, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
9000656c:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
90006570:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
90006574:	4303      	orrs	r3, r0
90006576:	6860      	ldr	r0, [r4, #4]
90006578:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
9000657c:	6920      	ldr	r0, [r4, #16]
9000657e:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
90006582:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
90006586:	0192      	lsls	r2, r2, #6
90006588:	d50d      	bpl.n	900065a6 <HAL_RCCEx_PeriphCLKConfig+0x4c2>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
9000658a:	6923      	ldr	r3, [r4, #16]
9000658c:	6862      	ldr	r2, [r4, #4]
9000658e:	041b      	lsls	r3, r3, #16
90006590:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
90006594:	68e2      	ldr	r2, [r4, #12]
90006596:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000659a:	68a2      	ldr	r2, [r4, #8]
9000659c:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
900065a0:	4a14      	ldr	r2, [pc, #80]	@ (900065f4 <HAL_RCCEx_PeriphCLKConfig+0x510>)
900065a2:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
900065a6:	4e13      	ldr	r6, [pc, #76]	@ (900065f4 <HAL_RCCEx_PeriphCLKConfig+0x510>)
900065a8:	6833      	ldr	r3, [r6, #0]
900065aa:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
900065ae:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
900065b0:	f7fd fbd2 	bl	90003d58 <HAL_GetTick>
900065b4:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
900065b6:	6833      	ldr	r3, [r6, #0]
900065b8:	011b      	lsls	r3, r3, #4
900065ba:	f53f aed7 	bmi.w	9000636c <HAL_RCCEx_PeriphCLKConfig+0x288>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
900065be:	f7fd fbcb 	bl	90003d58 <HAL_GetTick>
900065c2:	1bc0      	subs	r0, r0, r7
900065c4:	2864      	cmp	r0, #100	@ 0x64
900065c6:	d9f6      	bls.n	900065b6 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
900065c8:	e754      	b.n	90006474 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
900065ca:	f7fd fbc5 	bl	90003d58 <HAL_GetTick>
900065ce:	1bc0      	subs	r0, r0, r7
900065d0:	2864      	cmp	r0, #100	@ 0x64
900065d2:	d984      	bls.n	900064de <HAL_RCCEx_PeriphCLKConfig+0x3fa>
900065d4:	e74e      	b.n	90006474 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
900065d6:	f7fd fbbf 	bl	90003d58 <HAL_GetTick>
900065da:	1b80      	subs	r0, r0, r6
900065dc:	2864      	cmp	r0, #100	@ 0x64
900065de:	f67f aecf 	bls.w	90006380 <HAL_RCCEx_PeriphCLKConfig+0x29c>
900065e2:	e747      	b.n	90006474 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
900065e4:	f7fd fbb8 	bl	90003d58 <HAL_GetTick>
900065e8:	1b40      	subs	r0, r0, r5
900065ea:	2864      	cmp	r0, #100	@ 0x64
900065ec:	f67f af33 	bls.w	90006456 <HAL_RCCEx_PeriphCLKConfig+0x372>
900065f0:	e740      	b.n	90006474 <HAL_RCCEx_PeriphCLKConfig+0x390>
900065f2:	bf00      	nop
900065f4:	40023800 	.word	0x40023800

900065f8 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
900065f8:	b538      	push	{r3, r4, r5, lr}
900065fa:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
900065fc:	4604      	mov	r4, r0
900065fe:	b1c8      	cbz	r0, 90006634 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
90006600:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
90006604:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90006608:	b91b      	cbnz	r3, 90006612 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
9000660a:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
9000660e:	f7fc f8cd 	bl	900027ac <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
90006612:	2302      	movs	r3, #2

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
90006614:	1d21      	adds	r1, r4, #4
90006616:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
90006618:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000661c:	f000 fbe0 	bl	90006de0 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
90006620:	6862      	ldr	r2, [r4, #4]
90006622:	4629      	mov	r1, r5
90006624:	6820      	ldr	r0, [r4, #0]
90006626:	f000 fc11 	bl	90006e4c <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000662a:	2301      	movs	r3, #1

  return HAL_OK;
9000662c:	2000      	movs	r0, #0
  hsdram->State = HAL_SDRAM_STATE_READY;
9000662e:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
}
90006632:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90006634:	2001      	movs	r0, #1
90006636:	e7fc      	b.n	90006632 <HAL_SDRAM_Init+0x3a>

90006638 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
90006638:	b510      	push	{r4, lr}
9000663a:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000663c:	f7fc f912 	bl	90002864 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
90006640:	e9d4 0100 	ldrd	r0, r1, [r4]
90006644:	f000 fc38 	bl	90006eb8 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
90006648:	2000      	movs	r0, #0
9000664a:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000664e:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
90006652:	bd10      	pop	{r4, pc}

90006654 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
90006654:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
90006656:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000665a:	4605      	mov	r5, r0
9000665c:	460e      	mov	r6, r1

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000665e:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
90006660:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
90006662:	d010      	beq.n	90006686 <HAL_SDRAM_SendCommand+0x32>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
90006664:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
90006668:	2c01      	cmp	r4, #1
9000666a:	d110      	bne.n	9000668e <HAL_SDRAM_SendCommand+0x3a>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000666c:	2302      	movs	r3, #2

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000666e:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
90006670:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
90006674:	f000 fc2f 	bl	90006ed6 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
90006678:	6833      	ldr	r3, [r6, #0]
9000667a:	2b02      	cmp	r3, #2
9000667c:	d104      	bne.n	90006688 <HAL_SDRAM_SendCommand+0x34>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000667e:	2305      	movs	r3, #5
90006680:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
90006684:	2000      	movs	r0, #0
}
90006686:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_READY;
90006688:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
9000668c:	e7fa      	b.n	90006684 <HAL_SDRAM_SendCommand+0x30>
    return HAL_ERROR;
9000668e:	2001      	movs	r0, #1
90006690:	e7f9      	b.n	90006686 <HAL_SDRAM_SendCommand+0x32>

90006692 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
90006692:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
90006694:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
90006698:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000669a:	2b02      	cmp	r3, #2
9000669c:	b2d8      	uxtb	r0, r3
9000669e:	d00d      	beq.n	900066bc <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
900066a0:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
900066a4:	2b01      	cmp	r3, #1
900066a6:	b2dd      	uxtb	r5, r3
900066a8:	d109      	bne.n	900066be <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
900066aa:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
900066ac:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
900066ae:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
900066b2:	f000 fc22 	bl	90006efa <FMC_SDRAM_ProgramRefreshRate>
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
900066b6:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
900066b8:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
900066bc:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
900066be:	2001      	movs	r0, #1
900066c0:	e7fc      	b.n	900066bc <HAL_SDRAM_ProgramRefreshRate+0x2a>

900066c2 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
900066c2:	4770      	bx	lr

900066c4 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
900066c4:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
900066c8:	2b01      	cmp	r3, #1
900066ca:	d133      	bne.n	90006734 <HAL_TIM_Base_Start_IT+0x70>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
900066cc:	2302      	movs	r3, #2
900066ce:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
900066d2:	6803      	ldr	r3, [r0, #0]
900066d4:	68da      	ldr	r2, [r3, #12]
900066d6:	f042 0201 	orr.w	r2, r2, #1
900066da:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
900066dc:	4a16      	ldr	r2, [pc, #88]	@ (90006738 <HAL_TIM_Base_Start_IT+0x74>)
900066de:	4293      	cmp	r3, r2
900066e0:	d01a      	beq.n	90006718 <HAL_TIM_Base_Start_IT+0x54>
900066e2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
900066e6:	d017      	beq.n	90006718 <HAL_TIM_Base_Start_IT+0x54>
900066e8:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
900066ec:	4293      	cmp	r3, r2
900066ee:	d013      	beq.n	90006718 <HAL_TIM_Base_Start_IT+0x54>
900066f0:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
900066f4:	4293      	cmp	r3, r2
900066f6:	d00f      	beq.n	90006718 <HAL_TIM_Base_Start_IT+0x54>
900066f8:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
900066fc:	4293      	cmp	r3, r2
900066fe:	d00b      	beq.n	90006718 <HAL_TIM_Base_Start_IT+0x54>
90006700:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
90006704:	4293      	cmp	r3, r2
90006706:	d007      	beq.n	90006718 <HAL_TIM_Base_Start_IT+0x54>
90006708:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
9000670c:	4293      	cmp	r3, r2
9000670e:	d003      	beq.n	90006718 <HAL_TIM_Base_Start_IT+0x54>
90006710:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
90006714:	4293      	cmp	r3, r2
90006716:	d107      	bne.n	90006728 <HAL_TIM_Base_Start_IT+0x64>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
90006718:	6899      	ldr	r1, [r3, #8]
9000671a:	4a08      	ldr	r2, [pc, #32]	@ (9000673c <HAL_TIM_Base_Start_IT+0x78>)
9000671c:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000671e:	2a06      	cmp	r2, #6
90006720:	d006      	beq.n	90006730 <HAL_TIM_Base_Start_IT+0x6c>
90006722:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
90006726:	d003      	beq.n	90006730 <HAL_TIM_Base_Start_IT+0x6c>
    {
      __HAL_TIM_ENABLE(htim);
90006728:	681a      	ldr	r2, [r3, #0]
9000672a:	f042 0201 	orr.w	r2, r2, #1
9000672e:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
90006730:	2000      	movs	r0, #0
90006732:	4770      	bx	lr
    return HAL_ERROR;
90006734:	2001      	movs	r0, #1
}
90006736:	4770      	bx	lr
90006738:	40010000 	.word	0x40010000
9000673c:	00010007 	.word	0x00010007

90006740 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
90006740:	4770      	bx	lr

90006742 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
90006742:	4770      	bx	lr

90006744 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
90006744:	4770      	bx	lr

90006746 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
90006746:	4770      	bx	lr

90006748 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
90006748:	6803      	ldr	r3, [r0, #0]
{
9000674a:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
9000674c:	68dd      	ldr	r5, [r3, #12]
{
9000674e:	4604      	mov	r4, r0
  uint32_t itflag   = htim->Instance->SR;
90006750:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
90006752:	07b2      	lsls	r2, r6, #30
90006754:	d50d      	bpl.n	90006772 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
90006756:	07a9      	lsls	r1, r5, #30
90006758:	d50b      	bpl.n	90006772 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
9000675a:	f06f 0202 	mvn.w	r2, #2
9000675e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
90006760:	2201      	movs	r2, #1
90006762:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
90006764:	699b      	ldr	r3, [r3, #24]
90006766:	079a      	lsls	r2, r3, #30
90006768:	d075      	beq.n	90006856 <HAL_TIM_IRQHandler+0x10e>
          HAL_TIM_IC_CaptureCallback(htim);
9000676a:	f7ff ffea 	bl	90006742 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000676e:	2300      	movs	r3, #0
90006770:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
90006772:	0773      	lsls	r3, r6, #29
90006774:	d510      	bpl.n	90006798 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
90006776:	0768      	lsls	r0, r5, #29
90006778:	d50e      	bpl.n	90006798 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000677a:	6823      	ldr	r3, [r4, #0]
9000677c:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
90006780:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
90006782:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
90006784:	2202      	movs	r2, #2
90006786:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
90006788:	699b      	ldr	r3, [r3, #24]
9000678a:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000678e:	d068      	beq.n	90006862 <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
90006790:	f7ff ffd7 	bl	90006742 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
90006794:	2300      	movs	r3, #0
90006796:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
90006798:	0731      	lsls	r1, r6, #28
9000679a:	d50f      	bpl.n	900067bc <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
9000679c:	072a      	lsls	r2, r5, #28
9000679e:	d50d      	bpl.n	900067bc <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
900067a0:	6823      	ldr	r3, [r4, #0]
900067a2:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
900067a6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
900067a8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
900067aa:	2204      	movs	r2, #4
900067ac:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
900067ae:	69db      	ldr	r3, [r3, #28]
900067b0:	079b      	lsls	r3, r3, #30
900067b2:	d05c      	beq.n	9000686e <HAL_TIM_IRQHandler+0x126>
        HAL_TIM_IC_CaptureCallback(htim);
900067b4:	f7ff ffc5 	bl	90006742 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
900067b8:	2300      	movs	r3, #0
900067ba:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
900067bc:	06f1      	lsls	r1, r6, #27
900067be:	d510      	bpl.n	900067e2 <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
900067c0:	06ea      	lsls	r2, r5, #27
900067c2:	d50e      	bpl.n	900067e2 <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
900067c4:	6823      	ldr	r3, [r4, #0]
900067c6:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
900067ca:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
900067cc:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
900067ce:	2208      	movs	r2, #8
900067d0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
900067d2:	69db      	ldr	r3, [r3, #28]
900067d4:	f413 7f40 	tst.w	r3, #768	@ 0x300
900067d8:	d04f      	beq.n	9000687a <HAL_TIM_IRQHandler+0x132>
        HAL_TIM_IC_CaptureCallback(htim);
900067da:	f7ff ffb2 	bl	90006742 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
900067de:	2300      	movs	r3, #0
900067e0:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
900067e2:	07f3      	lsls	r3, r6, #31
900067e4:	d508      	bpl.n	900067f8 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
900067e6:	07e8      	lsls	r0, r5, #31
900067e8:	d506      	bpl.n	900067f8 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
900067ea:	6823      	ldr	r3, [r4, #0]
900067ec:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
900067f0:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
900067f2:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
900067f4:	f7fb fe98 	bl	90002528 <HAL_TIM_PeriodElapsedCallback>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
900067f8:	f416 5f02 	tst.w	r6, #8320	@ 0x2080
900067fc:	d008      	beq.n	90006810 <HAL_TIM_IRQHandler+0xc8>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
900067fe:	0629      	lsls	r1, r5, #24
90006800:	d506      	bpl.n	90006810 <HAL_TIM_IRQHandler+0xc8>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
90006802:	6823      	ldr	r3, [r4, #0]
90006804:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
      HAL_TIMEx_BreakCallback(htim);
90006808:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000680a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000680c:	f000 f8c5 	bl	9000699a <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
90006810:	05f2      	lsls	r2, r6, #23
90006812:	d508      	bpl.n	90006826 <HAL_TIM_IRQHandler+0xde>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
90006814:	062b      	lsls	r3, r5, #24
90006816:	d506      	bpl.n	90006826 <HAL_TIM_IRQHandler+0xde>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
90006818:	6823      	ldr	r3, [r4, #0]
9000681a:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000681e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
90006820:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
90006822:	f000 f8bb 	bl	9000699c <HAL_TIMEx_Break2Callback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
90006826:	0670      	lsls	r0, r6, #25
90006828:	d508      	bpl.n	9000683c <HAL_TIM_IRQHandler+0xf4>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
9000682a:	0669      	lsls	r1, r5, #25
9000682c:	d506      	bpl.n	9000683c <HAL_TIM_IRQHandler+0xf4>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000682e:	6823      	ldr	r3, [r4, #0]
90006830:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
90006834:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
90006836:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
90006838:	f7ff ff85 	bl	90006746 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
9000683c:	06b2      	lsls	r2, r6, #26
9000683e:	d522      	bpl.n	90006886 <HAL_TIM_IRQHandler+0x13e>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
90006840:	06ab      	lsls	r3, r5, #26
90006842:	d520      	bpl.n	90006886 <HAL_TIM_IRQHandler+0x13e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
90006844:	6823      	ldr	r3, [r4, #0]
90006846:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000684a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000684c:	611a      	str	r2, [r3, #16]
}
9000684e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
90006852:	f000 b8a1 	b.w	90006998 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
90006856:	f7ff ff73 	bl	90006740 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000685a:	4620      	mov	r0, r4
9000685c:	f7ff ff72 	bl	90006744 <HAL_TIM_PWM_PulseFinishedCallback>
90006860:	e785      	b.n	9000676e <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
90006862:	f7ff ff6d 	bl	90006740 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
90006866:	4620      	mov	r0, r4
90006868:	f7ff ff6c 	bl	90006744 <HAL_TIM_PWM_PulseFinishedCallback>
9000686c:	e792      	b.n	90006794 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000686e:	f7ff ff67 	bl	90006740 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
90006872:	4620      	mov	r0, r4
90006874:	f7ff ff66 	bl	90006744 <HAL_TIM_PWM_PulseFinishedCallback>
90006878:	e79e      	b.n	900067b8 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000687a:	f7ff ff61 	bl	90006740 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000687e:	4620      	mov	r0, r4
90006880:	f7ff ff60 	bl	90006744 <HAL_TIM_PWM_PulseFinishedCallback>
90006884:	e7ab      	b.n	900067de <HAL_TIM_IRQHandler+0x96>
}
90006886:	bd70      	pop	{r4, r5, r6, pc}

90006888 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
90006888:	4a29      	ldr	r2, [pc, #164]	@ (90006930 <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
9000688a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000688c:	4290      	cmp	r0, r2
9000688e:	d012      	beq.n	900068b6 <TIM_Base_SetConfig+0x2e>
90006890:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
90006894:	d00f      	beq.n	900068b6 <TIM_Base_SetConfig+0x2e>
90006896:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
9000689a:	4290      	cmp	r0, r2
9000689c:	d00b      	beq.n	900068b6 <TIM_Base_SetConfig+0x2e>
9000689e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
900068a2:	4290      	cmp	r0, r2
900068a4:	d007      	beq.n	900068b6 <TIM_Base_SetConfig+0x2e>
900068a6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
900068aa:	4290      	cmp	r0, r2
900068ac:	d003      	beq.n	900068b6 <TIM_Base_SetConfig+0x2e>
900068ae:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
900068b2:	4290      	cmp	r0, r2
900068b4:	d108      	bne.n	900068c8 <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
900068b6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
900068ba:	684a      	ldr	r2, [r1, #4]
900068bc:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
900068be:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
900068c2:	68ca      	ldr	r2, [r1, #12]
900068c4:	4313      	orrs	r3, r2
900068c6:	e016      	b.n	900068f6 <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
900068c8:	4a1a      	ldr	r2, [pc, #104]	@ (90006934 <TIM_Base_SetConfig+0xac>)
900068ca:	4290      	cmp	r0, r2
900068cc:	d0f7      	beq.n	900068be <TIM_Base_SetConfig+0x36>
900068ce:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
900068d2:	4290      	cmp	r0, r2
900068d4:	d0f3      	beq.n	900068be <TIM_Base_SetConfig+0x36>
900068d6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
900068da:	4290      	cmp	r0, r2
900068dc:	d0ef      	beq.n	900068be <TIM_Base_SetConfig+0x36>
900068de:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
900068e2:	4290      	cmp	r0, r2
900068e4:	d0eb      	beq.n	900068be <TIM_Base_SetConfig+0x36>
900068e6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
900068ea:	4290      	cmp	r0, r2
900068ec:	d0e7      	beq.n	900068be <TIM_Base_SetConfig+0x36>
900068ee:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
900068f2:	4290      	cmp	r0, r2
900068f4:	d0e3      	beq.n	900068be <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
900068f6:	694a      	ldr	r2, [r1, #20]
900068f8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
900068fc:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
900068fe:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
90006900:	688b      	ldr	r3, [r1, #8]
90006902:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
90006904:	680b      	ldr	r3, [r1, #0]
90006906:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
90006908:	4b09      	ldr	r3, [pc, #36]	@ (90006930 <TIM_Base_SetConfig+0xa8>)
9000690a:	4298      	cmp	r0, r3
9000690c:	d003      	beq.n	90006916 <TIM_Base_SetConfig+0x8e>
9000690e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
90006912:	4298      	cmp	r0, r3
90006914:	d101      	bne.n	9000691a <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
90006916:	690b      	ldr	r3, [r1, #16]
90006918:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000691a:	2301      	movs	r3, #1
9000691c:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
9000691e:	6903      	ldr	r3, [r0, #16]
90006920:	07db      	lsls	r3, r3, #31
90006922:	d503      	bpl.n	9000692c <TIM_Base_SetConfig+0xa4>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
90006924:	6903      	ldr	r3, [r0, #16]
90006926:	f023 0301 	bic.w	r3, r3, #1
9000692a:	6103      	str	r3, [r0, #16]
  }
}
9000692c:	4770      	bx	lr
9000692e:	bf00      	nop
90006930:	40010000 	.word	0x40010000
90006934:	40014000 	.word	0x40014000

90006938 <HAL_TIM_Base_Init>:
{
90006938:	b510      	push	{r4, lr}
  if (htim == NULL)
9000693a:	4604      	mov	r4, r0
9000693c:	b350      	cbz	r0, 90006994 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
9000693e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
90006942:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90006946:	b91b      	cbnz	r3, 90006950 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
90006948:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000694c:	f7ff feb9 	bl	900066c2 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
90006950:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
90006952:	6820      	ldr	r0, [r4, #0]
90006954:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
90006956:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000695a:	f7ff ff95 	bl	90006888 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000695e:	2301      	movs	r3, #1
  return HAL_OK;
90006960:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
90006962:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
90006966:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
9000696a:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
9000696e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90006972:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
90006976:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9000697a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000697e:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
90006982:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
90006986:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
9000698a:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000698e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
90006992:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90006994:	2001      	movs	r0, #1
90006996:	e7fc      	b.n	90006992 <HAL_TIM_Base_Init+0x5a>

90006998 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
90006998:	4770      	bx	lr

9000699a <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000699a:	4770      	bx	lr

9000699c <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000699c:	4770      	bx	lr

9000699e <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
9000699e:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900069a0:	e852 3f00 	ldrex	r3, [r2]
900069a4:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900069a8:	e842 3100 	strex	r1, r3, [r2]
   return(result);
900069ac:	6802      	ldr	r2, [r0, #0]
900069ae:	2900      	cmp	r1, #0
900069b0:	d1f5      	bne.n	9000699e <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900069b2:	f102 0308 	add.w	r3, r2, #8
900069b6:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
900069ba:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900069be:	f102 0c08 	add.w	ip, r2, #8
900069c2:	e84c 3100 	strex	r1, r3, [ip]
900069c6:	2900      	cmp	r1, #0
900069c8:	d1f3      	bne.n	900069b2 <UART_EndRxTransfer+0x14>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
900069ca:	6e03      	ldr	r3, [r0, #96]	@ 0x60
900069cc:	2b01      	cmp	r3, #1
900069ce:	d107      	bne.n	900069e0 <UART_EndRxTransfer+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900069d0:	e852 3f00 	ldrex	r3, [r2]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
900069d4:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900069d8:	e842 3100 	strex	r1, r3, [r2]
900069dc:	2900      	cmp	r1, #0
900069de:	d1f7      	bne.n	900069d0 <UART_EndRxTransfer+0x32>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
900069e0:	2320      	movs	r3, #32
900069e2:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
900069e6:	2300      	movs	r3, #0
900069e8:	6603      	str	r3, [r0, #96]	@ 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
900069ea:	6683      	str	r3, [r0, #104]	@ 0x68
}
900069ec:	4770      	bx	lr
	...

900069f0 <UART_SetConfig>:
{
900069f0:	b538      	push	{r3, r4, r5, lr}
900069f2:	4604      	mov	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
900069f4:	69c0      	ldr	r0, [r0, #28]
900069f6:	6921      	ldr	r1, [r4, #16]
900069f8:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
900069fa:	6823      	ldr	r3, [r4, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
900069fc:	430a      	orrs	r2, r1
900069fe:	6961      	ldr	r1, [r4, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
90006a00:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
90006a02:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
90006a04:	496e      	ldr	r1, [pc, #440]	@ (90006bc0 <UART_SetConfig+0x1d0>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
90006a06:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
90006a08:	4029      	ands	r1, r5
  tmpreg |= huart->Init.OneBitSampling;
90006a0a:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
90006a0c:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
90006a0e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
90006a10:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
90006a12:	685a      	ldr	r2, [r3, #4]
90006a14:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
90006a18:	430a      	orrs	r2, r1
90006a1a:	605a      	str	r2, [r3, #4]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
90006a1c:	69a2      	ldr	r2, [r4, #24]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
90006a1e:	6899      	ldr	r1, [r3, #8]
  tmpreg |= huart->Init.OneBitSampling;
90006a20:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
90006a22:	f421 6130 	bic.w	r1, r1, #2816	@ 0xb00
90006a26:	430a      	orrs	r2, r1
90006a28:	609a      	str	r2, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
90006a2a:	4a66      	ldr	r2, [pc, #408]	@ (90006bc4 <UART_SetConfig+0x1d4>)
90006a2c:	4293      	cmp	r3, r2
90006a2e:	d113      	bne.n	90006a58 <UART_SetConfig+0x68>
90006a30:	4b65      	ldr	r3, [pc, #404]	@ (90006bc8 <UART_SetConfig+0x1d8>)
90006a32:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90006a36:	f003 0303 	and.w	r3, r3, #3
90006a3a:	2b02      	cmp	r3, #2
90006a3c:	f000 80a5 	beq.w	90006b8a <UART_SetConfig+0x19a>
90006a40:	2b03      	cmp	r3, #3
90006a42:	f000 809c 	beq.w	90006b7e <UART_SetConfig+0x18e>
90006a46:	2b01      	cmp	r3, #1
90006a48:	d067      	beq.n	90006b1a <UART_SetConfig+0x12a>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90006a4a:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
90006a4e:	f000 8090 	beq.w	90006b72 <UART_SetConfig+0x182>
        pclk = HAL_RCC_GetPCLK2Freq();
90006a52:	f7ff fb19 	bl	90006088 <HAL_RCC_GetPCLK2Freq>
        break;
90006a56:	e012      	b.n	90006a7e <UART_SetConfig+0x8e>
  UART_GETCLOCKSOURCE(huart, clocksource);
90006a58:	4a5c      	ldr	r2, [pc, #368]	@ (90006bcc <UART_SetConfig+0x1dc>)
90006a5a:	4293      	cmp	r3, r2
90006a5c:	d126      	bne.n	90006aac <UART_SetConfig+0xbc>
90006a5e:	4b5a      	ldr	r3, [pc, #360]	@ (90006bc8 <UART_SetConfig+0x1d8>)
90006a60:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90006a64:	f003 030c 	and.w	r3, r3, #12
90006a68:	2b08      	cmp	r3, #8
90006a6a:	f000 808e 	beq.w	90006b8a <UART_SetConfig+0x19a>
90006a6e:	d816      	bhi.n	90006a9e <UART_SetConfig+0xae>
90006a70:	2b00      	cmp	r3, #0
90006a72:	d152      	bne.n	90006b1a <UART_SetConfig+0x12a>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90006a74:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
90006a78:	d076      	beq.n	90006b68 <UART_SetConfig+0x178>
        pclk = HAL_RCC_GetPCLK1Freq();
90006a7a:	f7ff faf5 	bl	90006068 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
90006a7e:	2800      	cmp	r0, #0
90006a80:	d075      	beq.n	90006b6e <UART_SetConfig+0x17e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
90006a82:	6862      	ldr	r2, [r4, #4]
90006a84:	eb00 0352 	add.w	r3, r0, r2, lsr #1
90006a88:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
90006a8c:	f64f 72ef 	movw	r2, #65519	@ 0xffef
90006a90:	f1a3 0110 	sub.w	r1, r3, #16
90006a94:	4291      	cmp	r1, r2
90006a96:	d804      	bhi.n	90006aa2 <UART_SetConfig+0xb2>
        huart->Instance->BRR = (uint16_t)usartdiv;
90006a98:	6822      	ldr	r2, [r4, #0]
90006a9a:	60d3      	str	r3, [r2, #12]
90006a9c:	e067      	b.n	90006b6e <UART_SetConfig+0x17e>
  UART_GETCLOCKSOURCE(huart, clocksource);
90006a9e:	2b0c      	cmp	r3, #12
90006aa0:	d06d      	beq.n	90006b7e <UART_SetConfig+0x18e>
        ret = HAL_ERROR;
90006aa2:	2001      	movs	r0, #1
  huart->RxISR = NULL;
90006aa4:	2300      	movs	r3, #0
  huart->TxISR = NULL;
90006aa6:	e9c4 331a 	strd	r3, r3, [r4, #104]	@ 0x68
}
90006aaa:	bd38      	pop	{r3, r4, r5, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
90006aac:	4a48      	ldr	r2, [pc, #288]	@ (90006bd0 <UART_SetConfig+0x1e0>)
90006aae:	4293      	cmp	r3, r2
90006ab0:	d109      	bne.n	90006ac6 <UART_SetConfig+0xd6>
90006ab2:	4b45      	ldr	r3, [pc, #276]	@ (90006bc8 <UART_SetConfig+0x1d8>)
90006ab4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90006ab8:	f003 0330 	and.w	r3, r3, #48	@ 0x30
90006abc:	2b20      	cmp	r3, #32
90006abe:	d064      	beq.n	90006b8a <UART_SetConfig+0x19a>
90006ac0:	d9d6      	bls.n	90006a70 <UART_SetConfig+0x80>
90006ac2:	2b30      	cmp	r3, #48	@ 0x30
90006ac4:	e7ec      	b.n	90006aa0 <UART_SetConfig+0xb0>
90006ac6:	4a43      	ldr	r2, [pc, #268]	@ (90006bd4 <UART_SetConfig+0x1e4>)
90006ac8:	4293      	cmp	r3, r2
90006aca:	d109      	bne.n	90006ae0 <UART_SetConfig+0xf0>
90006acc:	4b3e      	ldr	r3, [pc, #248]	@ (90006bc8 <UART_SetConfig+0x1d8>)
90006ace:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90006ad2:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
90006ad6:	2b80      	cmp	r3, #128	@ 0x80
90006ad8:	d057      	beq.n	90006b8a <UART_SetConfig+0x19a>
90006ada:	d9c9      	bls.n	90006a70 <UART_SetConfig+0x80>
90006adc:	2bc0      	cmp	r3, #192	@ 0xc0
90006ade:	e7df      	b.n	90006aa0 <UART_SetConfig+0xb0>
90006ae0:	4a3d      	ldr	r2, [pc, #244]	@ (90006bd8 <UART_SetConfig+0x1e8>)
90006ae2:	4293      	cmp	r3, r2
90006ae4:	d10b      	bne.n	90006afe <UART_SetConfig+0x10e>
90006ae6:	4b38      	ldr	r3, [pc, #224]	@ (90006bc8 <UART_SetConfig+0x1d8>)
90006ae8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90006aec:	f403 7340 	and.w	r3, r3, #768	@ 0x300
90006af0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
90006af4:	d049      	beq.n	90006b8a <UART_SetConfig+0x19a>
90006af6:	d9bb      	bls.n	90006a70 <UART_SetConfig+0x80>
90006af8:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90006afc:	e7d0      	b.n	90006aa0 <UART_SetConfig+0xb0>
90006afe:	4a37      	ldr	r2, [pc, #220]	@ (90006bdc <UART_SetConfig+0x1ec>)
90006b00:	4293      	cmp	r3, r2
90006b02:	d113      	bne.n	90006b2c <UART_SetConfig+0x13c>
90006b04:	4b30      	ldr	r3, [pc, #192]	@ (90006bc8 <UART_SetConfig+0x1d8>)
90006b06:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90006b0a:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
90006b0e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
90006b12:	d03a      	beq.n	90006b8a <UART_SetConfig+0x19a>
90006b14:	d807      	bhi.n	90006b26 <UART_SetConfig+0x136>
90006b16:	2b00      	cmp	r3, #0
90006b18:	d097      	beq.n	90006a4a <UART_SetConfig+0x5a>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90006b1a:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
90006b1e:	d12b      	bne.n	90006b78 <UART_SetConfig+0x188>
        pclk = HAL_RCC_GetSysClockFreq();
90006b20:	f7ff f9d0 	bl	90005ec4 <HAL_RCC_GetSysClockFreq>
        break;
90006b24:	e022      	b.n	90006b6c <UART_SetConfig+0x17c>
  UART_GETCLOCKSOURCE(huart, clocksource);
90006b26:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
90006b2a:	e7b9      	b.n	90006aa0 <UART_SetConfig+0xb0>
90006b2c:	4a2c      	ldr	r2, [pc, #176]	@ (90006be0 <UART_SetConfig+0x1f0>)
90006b2e:	4293      	cmp	r3, r2
90006b30:	d10b      	bne.n	90006b4a <UART_SetConfig+0x15a>
90006b32:	4b25      	ldr	r3, [pc, #148]	@ (90006bc8 <UART_SetConfig+0x1d8>)
90006b34:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90006b38:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
90006b3c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
90006b40:	d023      	beq.n	90006b8a <UART_SetConfig+0x19a>
90006b42:	d995      	bls.n	90006a70 <UART_SetConfig+0x80>
90006b44:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
90006b48:	e7aa      	b.n	90006aa0 <UART_SetConfig+0xb0>
90006b4a:	4a26      	ldr	r2, [pc, #152]	@ (90006be4 <UART_SetConfig+0x1f4>)
90006b4c:	4293      	cmp	r3, r2
90006b4e:	d1a8      	bne.n	90006aa2 <UART_SetConfig+0xb2>
90006b50:	4b1d      	ldr	r3, [pc, #116]	@ (90006bc8 <UART_SetConfig+0x1d8>)
90006b52:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90006b56:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
90006b5a:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
90006b5e:	d014      	beq.n	90006b8a <UART_SetConfig+0x19a>
90006b60:	d986      	bls.n	90006a70 <UART_SetConfig+0x80>
90006b62:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
90006b66:	e79b      	b.n	90006aa0 <UART_SetConfig+0xb0>
        pclk = HAL_RCC_GetPCLK1Freq();
90006b68:	f7ff fa7e 	bl	90006068 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
90006b6c:	b990      	cbnz	r0, 90006b94 <UART_SetConfig+0x1a4>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90006b6e:	2000      	movs	r0, #0
90006b70:	e798      	b.n	90006aa4 <UART_SetConfig+0xb4>
        pclk = HAL_RCC_GetPCLK2Freq();
90006b72:	f7ff fa89 	bl	90006088 <HAL_RCC_GetPCLK2Freq>
        break;
90006b76:	e7f9      	b.n	90006b6c <UART_SetConfig+0x17c>
        pclk = HAL_RCC_GetSysClockFreq();
90006b78:	f7ff f9a4 	bl	90005ec4 <HAL_RCC_GetSysClockFreq>
        break;
90006b7c:	e77f      	b.n	90006a7e <UART_SetConfig+0x8e>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90006b7e:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
90006b82:	d007      	beq.n	90006b94 <UART_SetConfig+0x1a4>
        pclk = (uint32_t) LSE_VALUE;
90006b84:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
90006b88:	e77b      	b.n	90006a82 <UART_SetConfig+0x92>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90006b8a:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) HSI_VALUE;
90006b8e:	4816      	ldr	r0, [pc, #88]	@ (90006be8 <UART_SetConfig+0x1f8>)
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90006b90:	f47f af77 	bne.w	90006a82 <UART_SetConfig+0x92>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
90006b94:	6862      	ldr	r2, [r4, #4]
90006b96:	0853      	lsrs	r3, r2, #1
90006b98:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90006b9c:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
90006ba0:	f64f 72ef 	movw	r2, #65519	@ 0xffef
90006ba4:	f1a3 0110 	sub.w	r1, r3, #16
90006ba8:	4291      	cmp	r1, r2
90006baa:	f63f af7a 	bhi.w	90006aa2 <UART_SetConfig+0xb2>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
90006bae:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
90006bb2:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
90006bb6:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
90006bb8:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
90006bba:	4313      	orrs	r3, r2
90006bbc:	60cb      	str	r3, [r1, #12]
90006bbe:	e7d6      	b.n	90006b6e <UART_SetConfig+0x17e>
90006bc0:	efff69f3 	.word	0xefff69f3
90006bc4:	40011000 	.word	0x40011000
90006bc8:	40023800 	.word	0x40023800
90006bcc:	40004400 	.word	0x40004400
90006bd0:	40004800 	.word	0x40004800
90006bd4:	40004c00 	.word	0x40004c00
90006bd8:	40005000 	.word	0x40005000
90006bdc:	40011400 	.word	0x40011400
90006be0:	40007800 	.word	0x40007800
90006be4:	40007c00 	.word	0x40007c00
90006be8:	00f42400 	.word	0x00f42400

90006bec <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
90006bec:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90006bee:	071a      	lsls	r2, r3, #28
{
90006bf0:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
90006bf2:	d506      	bpl.n	90006c02 <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
90006bf4:	6801      	ldr	r1, [r0, #0]
90006bf6:	6b44      	ldr	r4, [r0, #52]	@ 0x34
90006bf8:	684a      	ldr	r2, [r1, #4]
90006bfa:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
90006bfe:	4322      	orrs	r2, r4
90006c00:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
90006c02:	07dc      	lsls	r4, r3, #31
90006c04:	d506      	bpl.n	90006c14 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
90006c06:	6801      	ldr	r1, [r0, #0]
90006c08:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90006c0a:	684a      	ldr	r2, [r1, #4]
90006c0c:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
90006c10:	4322      	orrs	r2, r4
90006c12:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
90006c14:	0799      	lsls	r1, r3, #30
90006c16:	d506      	bpl.n	90006c26 <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
90006c18:	6801      	ldr	r1, [r0, #0]
90006c1a:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
90006c1c:	684a      	ldr	r2, [r1, #4]
90006c1e:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
90006c22:	4322      	orrs	r2, r4
90006c24:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
90006c26:	075a      	lsls	r2, r3, #29
90006c28:	d506      	bpl.n	90006c38 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
90006c2a:	6801      	ldr	r1, [r0, #0]
90006c2c:	6b04      	ldr	r4, [r0, #48]	@ 0x30
90006c2e:	684a      	ldr	r2, [r1, #4]
90006c30:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
90006c34:	4322      	orrs	r2, r4
90006c36:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
90006c38:	06dc      	lsls	r4, r3, #27
90006c3a:	d506      	bpl.n	90006c4a <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
90006c3c:	6801      	ldr	r1, [r0, #0]
90006c3e:	6b84      	ldr	r4, [r0, #56]	@ 0x38
90006c40:	688a      	ldr	r2, [r1, #8]
90006c42:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
90006c46:	4322      	orrs	r2, r4
90006c48:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
90006c4a:	0699      	lsls	r1, r3, #26
90006c4c:	d506      	bpl.n	90006c5c <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
90006c4e:	6801      	ldr	r1, [r0, #0]
90006c50:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
90006c52:	688a      	ldr	r2, [r1, #8]
90006c54:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
90006c58:	4322      	orrs	r2, r4
90006c5a:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
90006c5c:	065a      	lsls	r2, r3, #25
90006c5e:	d510      	bpl.n	90006c82 <UART_AdvFeatureConfig+0x96>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
90006c60:	6801      	ldr	r1, [r0, #0]
90006c62:	6c04      	ldr	r4, [r0, #64]	@ 0x40
90006c64:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
90006c66:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
90006c6a:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
90006c6e:	ea42 0204 	orr.w	r2, r2, r4
90006c72:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
90006c74:	d105      	bne.n	90006c82 <UART_AdvFeatureConfig+0x96>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
90006c76:	684a      	ldr	r2, [r1, #4]
90006c78:	6c44      	ldr	r4, [r0, #68]	@ 0x44
90006c7a:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
90006c7e:	4322      	orrs	r2, r4
90006c80:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
90006c82:	061b      	lsls	r3, r3, #24
90006c84:	d506      	bpl.n	90006c94 <UART_AdvFeatureConfig+0xa8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
90006c86:	6802      	ldr	r2, [r0, #0]
90006c88:	6c81      	ldr	r1, [r0, #72]	@ 0x48
90006c8a:	6853      	ldr	r3, [r2, #4]
90006c8c:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
90006c90:	430b      	orrs	r3, r1
90006c92:	6053      	str	r3, [r2, #4]
}
90006c94:	bd10      	pop	{r4, pc}

90006c96 <UART_WaitOnFlagUntilTimeout>:
{
90006c96:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90006c9a:	f8dd 9020 	ldr.w	r9, [sp, #32]
90006c9e:	4604      	mov	r4, r0
90006ca0:	460d      	mov	r5, r1
90006ca2:	4617      	mov	r7, r2
90006ca4:	4698      	mov	r8, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
90006ca6:	6822      	ldr	r2, [r4, #0]
90006ca8:	69d3      	ldr	r3, [r2, #28]
90006caa:	ea35 0303 	bics.w	r3, r5, r3
90006cae:	bf0c      	ite	eq
90006cb0:	2301      	moveq	r3, #1
90006cb2:	2300      	movne	r3, #0
90006cb4:	42bb      	cmp	r3, r7
90006cb6:	d001      	beq.n	90006cbc <UART_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
90006cb8:	2000      	movs	r0, #0
90006cba:	e022      	b.n	90006d02 <UART_WaitOnFlagUntilTimeout+0x6c>
    if (Timeout != HAL_MAX_DELAY)
90006cbc:	f1b9 3fff 	cmp.w	r9, #4294967295
90006cc0:	d0f2      	beq.n	90006ca8 <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90006cc2:	f7fd f849 	bl	90003d58 <HAL_GetTick>
90006cc6:	eba0 0008 	sub.w	r0, r0, r8
90006cca:	4548      	cmp	r0, r9
90006ccc:	d829      	bhi.n	90006d22 <UART_WaitOnFlagUntilTimeout+0x8c>
90006cce:	f1b9 0f00 	cmp.w	r9, #0
90006cd2:	d026      	beq.n	90006d22 <UART_WaitOnFlagUntilTimeout+0x8c>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
90006cd4:	6821      	ldr	r1, [r4, #0]
90006cd6:	680b      	ldr	r3, [r1, #0]
90006cd8:	075a      	lsls	r2, r3, #29
90006cda:	d5e4      	bpl.n	90006ca6 <UART_WaitOnFlagUntilTimeout+0x10>
90006cdc:	2d80      	cmp	r5, #128	@ 0x80
90006cde:	d0e2      	beq.n	90006ca6 <UART_WaitOnFlagUntilTimeout+0x10>
90006ce0:	2d40      	cmp	r5, #64	@ 0x40
90006ce2:	d0e0      	beq.n	90006ca6 <UART_WaitOnFlagUntilTimeout+0x10>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
90006ce4:	69ce      	ldr	r6, [r1, #28]
90006ce6:	f016 0608 	ands.w	r6, r6, #8
90006cea:	d00c      	beq.n	90006d06 <UART_WaitOnFlagUntilTimeout+0x70>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
90006cec:	2508      	movs	r5, #8
          UART_EndRxTransfer(huart);
90006cee:	4620      	mov	r0, r4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
90006cf0:	620d      	str	r5, [r1, #32]
          UART_EndRxTransfer(huart);
90006cf2:	f7ff fe54 	bl	9000699e <UART_EndRxTransfer>
          __HAL_UNLOCK(huart);
90006cf6:	2300      	movs	r3, #0
          return HAL_ERROR;
90006cf8:	2001      	movs	r0, #1
          huart->ErrorCode = HAL_UART_ERROR_ORE;
90006cfa:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
          __HAL_UNLOCK(huart);
90006cfe:	f884 3078 	strb.w	r3, [r4, #120]	@ 0x78
}
90006d02:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
90006d06:	69cb      	ldr	r3, [r1, #28]
90006d08:	051b      	lsls	r3, r3, #20
90006d0a:	d5cc      	bpl.n	90006ca6 <UART_WaitOnFlagUntilTimeout+0x10>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
90006d0c:	f44f 6300 	mov.w	r3, #2048	@ 0x800
          UART_EndRxTransfer(huart);
90006d10:	4620      	mov	r0, r4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
90006d12:	620b      	str	r3, [r1, #32]
          UART_EndRxTransfer(huart);
90006d14:	f7ff fe43 	bl	9000699e <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_RTO;
90006d18:	2320      	movs	r3, #32
          __HAL_UNLOCK(huart);
90006d1a:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
          huart->ErrorCode = HAL_UART_ERROR_RTO;
90006d1e:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
        return HAL_TIMEOUT;
90006d22:	2003      	movs	r0, #3
90006d24:	e7ed      	b.n	90006d02 <UART_WaitOnFlagUntilTimeout+0x6c>

90006d26 <UART_CheckIdleState>:
{
90006d26:	b537      	push	{r0, r1, r2, r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
90006d28:	2500      	movs	r5, #0
{
90006d2a:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
90006d2c:	f8c0 5084 	str.w	r5, [r0, #132]	@ 0x84
  tickstart = HAL_GetTick();
90006d30:	f7fd f812 	bl	90003d58 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
90006d34:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
90006d36:	4603      	mov	r3, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
90006d38:	6812      	ldr	r2, [r2, #0]
90006d3a:	0712      	lsls	r2, r2, #28
90006d3c:	d51a      	bpl.n	90006d74 <UART_CheckIdleState+0x4e>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
90006d3e:	f06f 427e 	mvn.w	r2, #4261412864	@ 0xfe000000
90006d42:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
90006d46:	4620      	mov	r0, r4
90006d48:	9200      	str	r2, [sp, #0]
90006d4a:	462a      	mov	r2, r5
90006d4c:	f7ff ffa3 	bl	90006c96 <UART_WaitOnFlagUntilTimeout>
90006d50:	b180      	cbz	r0, 90006d74 <UART_CheckIdleState+0x4e>
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE));
90006d52:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90006d54:	e852 3f00 	ldrex	r3, [r2]
90006d58:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90006d5c:	e842 3100 	strex	r1, r3, [r2]
90006d60:	2900      	cmp	r1, #0
90006d62:	d1f6      	bne.n	90006d52 <UART_CheckIdleState+0x2c>
      huart->gState = HAL_UART_STATE_READY;
90006d64:	2320      	movs	r3, #32
      return HAL_TIMEOUT;
90006d66:	2003      	movs	r0, #3
      huart->gState = HAL_UART_STATE_READY;
90006d68:	67e3      	str	r3, [r4, #124]	@ 0x7c
      __HAL_UNLOCK(huart);
90006d6a:	2300      	movs	r3, #0
90006d6c:	f884 3078 	strb.w	r3, [r4, #120]	@ 0x78
}
90006d70:	b003      	add	sp, #12
90006d72:	bd30      	pop	{r4, r5, pc}
  huart->gState = HAL_UART_STATE_READY;
90006d74:	2320      	movs	r3, #32
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90006d76:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
90006d78:	67e3      	str	r3, [r4, #124]	@ 0x7c
  huart->RxState = HAL_UART_STATE_READY;
90006d7a:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90006d7e:	6620      	str	r0, [r4, #96]	@ 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
90006d80:	6660      	str	r0, [r4, #100]	@ 0x64
  return HAL_OK;
90006d82:	e7f2      	b.n	90006d6a <UART_CheckIdleState+0x44>

90006d84 <HAL_UART_Init>:
{
90006d84:	b510      	push	{r4, lr}
  if (huart == NULL)
90006d86:	4604      	mov	r4, r0
90006d88:	b340      	cbz	r0, 90006ddc <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
90006d8a:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
90006d8c:	b91b      	cbnz	r3, 90006d96 <HAL_UART_Init+0x12>
    huart->Lock = HAL_UNLOCKED;
90006d8e:	f880 3078 	strb.w	r3, [r0, #120]	@ 0x78
    HAL_UART_MspInit(huart);
90006d92:	f7fb fcc9 	bl	90002728 <HAL_UART_MspInit>
  huart->gState = HAL_UART_STATE_BUSY;
90006d96:	2324      	movs	r3, #36	@ 0x24
  __HAL_UART_DISABLE(huart);
90006d98:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
90006d9a:	67e3      	str	r3, [r4, #124]	@ 0x7c
  __HAL_UART_DISABLE(huart);
90006d9c:	6813      	ldr	r3, [r2, #0]
90006d9e:	f023 0301 	bic.w	r3, r3, #1
90006da2:	6013      	str	r3, [r2, #0]
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
90006da4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90006da6:	b113      	cbz	r3, 90006dae <HAL_UART_Init+0x2a>
    UART_AdvFeatureConfig(huart);
90006da8:	4620      	mov	r0, r4
90006daa:	f7ff ff1f 	bl	90006bec <UART_AdvFeatureConfig>
  if (UART_SetConfig(huart) == HAL_ERROR)
90006dae:	4620      	mov	r0, r4
90006db0:	f7ff fe1e 	bl	900069f0 <UART_SetConfig>
90006db4:	2801      	cmp	r0, #1
90006db6:	d011      	beq.n	90006ddc <HAL_UART_Init+0x58>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
90006db8:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
90006dba:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
90006dbc:	685a      	ldr	r2, [r3, #4]
90006dbe:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
90006dc2:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
90006dc4:	689a      	ldr	r2, [r3, #8]
90006dc6:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
90006dca:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
90006dcc:	681a      	ldr	r2, [r3, #0]
90006dce:	f042 0201 	orr.w	r2, r2, #1
}
90006dd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
90006dd6:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
90006dd8:	f7ff bfa5 	b.w	90006d26 <UART_CheckIdleState>
}
90006ddc:	2001      	movs	r0, #1
90006dde:	bd10      	pop	{r4, pc}

90006de0 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
90006de0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
90006de4:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
90006de8:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
90006dec:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
90006df0:	ea43 0308 	orr.w	r3, r3, r8
90006df4:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
90006df8:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
  if (Init->SDBank == FMC_SDRAM_BANK1)
90006dfc:	6809      	ldr	r1, [r1, #0]
90006dfe:	b981      	cbnz	r1, 90006e22 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
90006e00:	ea43 030e 	orr.w	r3, r3, lr
90006e04:	6801      	ldr	r1, [r0, #0]
90006e06:	4313      	orrs	r3, r2
90006e08:	f36f 010e 	bfc	r1, #0, #15
90006e0c:	ea43 030c 	orr.w	r3, r3, ip
90006e10:	433b      	orrs	r3, r7
90006e12:	4333      	orrs	r3, r6
90006e14:	432b      	orrs	r3, r5
90006e16:	4323      	orrs	r3, r4
90006e18:	430b      	orrs	r3, r1
90006e1a:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
90006e1c:	2000      	movs	r0, #0
90006e1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
90006e22:	6801      	ldr	r1, [r0, #0]
90006e24:	ea43 030e 	orr.w	r3, r3, lr
90006e28:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
90006e2c:	430b      	orrs	r3, r1
90006e2e:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
90006e30:	ea42 030c 	orr.w	r3, r2, ip
90006e34:	6841      	ldr	r1, [r0, #4]
90006e36:	433b      	orrs	r3, r7
90006e38:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
90006e3c:	4333      	orrs	r3, r6
90006e3e:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
90006e42:	432b      	orrs	r3, r5
90006e44:	4323      	orrs	r3, r4
90006e46:	4313      	orrs	r3, r2
90006e48:	6043      	str	r3, [r0, #4]
90006e4a:	e7e7      	b.n	90006e1c <FMC_SDRAM_Init+0x3c>

90006e4c <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
90006e4c:	68cb      	ldr	r3, [r1, #12]
90006e4e:	f103 3cff 	add.w	ip, r3, #4294967295
90006e52:	694b      	ldr	r3, [r1, #20]
{
90006e54:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
90006e56:	3b01      	subs	r3, #1
90006e58:	684c      	ldr	r4, [r1, #4]
90006e5a:	688f      	ldr	r7, [r1, #8]
90006e5c:	690e      	ldr	r6, [r1, #16]
90006e5e:	051b      	lsls	r3, r3, #20
90006e60:	698d      	ldr	r5, [r1, #24]
90006e62:	3c01      	subs	r4, #1
90006e64:	3f01      	subs	r7, #1
90006e66:	3e01      	subs	r6, #1
90006e68:	3d01      	subs	r5, #1
90006e6a:	6809      	ldr	r1, [r1, #0]
90006e6c:	0124      	lsls	r4, r4, #4
90006e6e:	023f      	lsls	r7, r7, #8
90006e70:	3901      	subs	r1, #1
90006e72:	0436      	lsls	r6, r6, #16
90006e74:	062d      	lsls	r5, r5, #24
90006e76:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
90006e7a:	b95a      	cbnz	r2, 90006e94 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
90006e7c:	430b      	orrs	r3, r1
90006e7e:	6882      	ldr	r2, [r0, #8]
90006e80:	4323      	orrs	r3, r4
90006e82:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
90006e86:	433b      	orrs	r3, r7
90006e88:	4333      	orrs	r3, r6
90006e8a:	432b      	orrs	r3, r5
90006e8c:	4313      	orrs	r3, r2
90006e8e:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
90006e90:	2000      	movs	r0, #0
90006e92:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
90006e94:	6882      	ldr	r2, [r0, #8]
90006e96:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
90006e9a:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
90006e9e:	4313      	orrs	r3, r2
90006ea0:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
90006ea2:	ea44 0307 	orr.w	r3, r4, r7
90006ea6:	68c2      	ldr	r2, [r0, #12]
90006ea8:	430b      	orrs	r3, r1
90006eaa:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
90006eae:	4333      	orrs	r3, r6
90006eb0:	432b      	orrs	r3, r5
90006eb2:	4313      	orrs	r3, r2
90006eb4:	60c3      	str	r3, [r0, #12]
90006eb6:	e7eb      	b.n	90006e90 <FMC_SDRAM_Timing_Init+0x44>

90006eb8 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
90006eb8:	4603      	mov	r3, r0
90006eba:	eb00 0281 	add.w	r2, r0, r1, lsl #2
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
90006ebe:	f44f 7034 	mov.w	r0, #720	@ 0x2d0
90006ec2:	f843 0021 	str.w	r0, [r3, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
90006ec6:	2000      	movs	r0, #0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
90006ec8:	f06f 4170 	mvn.w	r1, #4026531840	@ 0xf0000000
90006ecc:	6091      	str	r1, [r2, #8]
  Device->SDCMR      = 0x00000000U;
90006ece:	6118      	str	r0, [r3, #16]
  Device->SDRTR      = 0x00000000U;
90006ed0:	6158      	str	r0, [r3, #20]
  Device->SDSR       = 0x00000000U;
90006ed2:	6198      	str	r0, [r3, #24]

  return HAL_OK;
}
90006ed4:	4770      	bx	lr

90006ed6 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
90006ed6:	b510      	push	{r4, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
90006ed8:	e9d1 3400 	ldrd	r3, r4, [r1]
90006edc:	6902      	ldr	r2, [r0, #16]
90006ede:	4323      	orrs	r3, r4
90006ee0:	68cc      	ldr	r4, [r1, #12]
90006ee2:	f36f 0215 	bfc	r2, #0, #22
90006ee6:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
90006eea:	4313      	orrs	r3, r2
90006eec:	688a      	ldr	r2, [r1, #8]
90006eee:	3a01      	subs	r2, #1
90006ef0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
90006ef4:	6103      	str	r3, [r0, #16]
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
90006ef6:	2000      	movs	r0, #0
90006ef8:	bd10      	pop	{r4, pc}

90006efa <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
90006efa:	6943      	ldr	r3, [r0, #20]
90006efc:	f36f 034d 	bfc	r3, #1, #13
90006f00:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
90006f04:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
90006f06:	2000      	movs	r0, #0
90006f08:	4770      	bx	lr

90006f0a <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
90006f0a:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
90006f0c:	2300      	movs	r3, #0
{
90006f0e:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
90006f10:	9301      	str	r3, [sp, #4]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
90006f12:	9b01      	ldr	r3, [sp, #4]
90006f14:	3301      	adds	r3, #1
90006f16:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
90006f18:	9b01      	ldr	r3, [sp, #4]
90006f1a:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
90006f1e:	d815      	bhi.n	90006f4c <USB_CoreReset+0x42>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
90006f20:	6913      	ldr	r3, [r2, #16]
90006f22:	2b00      	cmp	r3, #0
90006f24:	daf5      	bge.n	90006f12 <USB_CoreReset+0x8>

  /* Core Soft Reset */
  count = 0U;
90006f26:	2300      	movs	r3, #0
90006f28:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
90006f2a:	6913      	ldr	r3, [r2, #16]
90006f2c:	f043 0301 	orr.w	r3, r3, #1
90006f30:	6113      	str	r3, [r2, #16]

  do
  {
    count++;
90006f32:	9b01      	ldr	r3, [sp, #4]
90006f34:	3301      	adds	r3, #1
90006f36:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
90006f38:	9b01      	ldr	r3, [sp, #4]
90006f3a:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
90006f3e:	d805      	bhi.n	90006f4c <USB_CoreReset+0x42>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
90006f40:	6910      	ldr	r0, [r2, #16]
90006f42:	f010 0001 	ands.w	r0, r0, #1
90006f46:	d1f4      	bne.n	90006f32 <USB_CoreReset+0x28>

  return HAL_OK;
}
90006f48:	b002      	add	sp, #8
90006f4a:	4770      	bx	lr
      return HAL_TIMEOUT;
90006f4c:	2003      	movs	r0, #3
90006f4e:	e7fb      	b.n	90006f48 <USB_CoreReset+0x3e>

90006f50 <USB_CoreInit>:
{
90006f50:	b084      	sub	sp, #16
90006f52:	b538      	push	{r3, r4, r5, lr}
90006f54:	ad05      	add	r5, sp, #20
90006f56:	4604      	mov	r4, r0
90006f58:	e885 000e 	stmia.w	r5, {r1, r2, r3}
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
90006f5c:	f89d 3019 	ldrb.w	r3, [sp, #25]
90006f60:	2b01      	cmp	r3, #1
90006f62:	d128      	bne.n	90006fb6 <USB_CoreInit+0x66>
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
90006f64:	6b83      	ldr	r3, [r0, #56]	@ 0x38
90006f66:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
90006f6a:	6383      	str	r3, [r0, #56]	@ 0x38
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
90006f6c:	68c3      	ldr	r3, [r0, #12]
90006f6e:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
90006f72:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
90006f76:	60c3      	str	r3, [r0, #12]
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
90006f78:	68c3      	ldr	r3, [r0, #12]
90006f7a:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
90006f7e:	60c3      	str	r3, [r0, #12]
    if (cfg.use_external_vbus == 1U)
90006f80:	f89d 3020 	ldrb.w	r3, [sp, #32]
90006f84:	2b01      	cmp	r3, #1
90006f86:	d103      	bne.n	90006f90 <USB_CoreInit+0x40>
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
90006f88:	68c3      	ldr	r3, [r0, #12]
90006f8a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
90006f8e:	60c3      	str	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
90006f90:	4620      	mov	r0, r4
90006f92:	f7ff ffba 	bl	90006f0a <USB_CoreReset>
  if (cfg.dma_enable == 1U)
90006f96:	f89d 3016 	ldrb.w	r3, [sp, #22]
90006f9a:	2b01      	cmp	r3, #1
90006f9c:	d107      	bne.n	90006fae <USB_CoreInit+0x5e>
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
90006f9e:	68a3      	ldr	r3, [r4, #8]
90006fa0:	f043 0306 	orr.w	r3, r3, #6
90006fa4:	60a3      	str	r3, [r4, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
90006fa6:	68a3      	ldr	r3, [r4, #8]
90006fa8:	f043 0320 	orr.w	r3, r3, #32
90006fac:	60a3      	str	r3, [r4, #8]
}
90006fae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90006fb2:	b004      	add	sp, #16
90006fb4:	4770      	bx	lr
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
90006fb6:	68c3      	ldr	r3, [r0, #12]
90006fb8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90006fbc:	60c3      	str	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
90006fbe:	f7ff ffa4 	bl	90006f0a <USB_CoreReset>
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
90006fc2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90006fc4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
90006fc8:	63a3      	str	r3, [r4, #56]	@ 0x38
90006fca:	e7e4      	b.n	90006f96 <USB_CoreInit+0x46>

90006fcc <USB_SetTurnaroundTime>:
  if (speed == USBD_FS_SPEED)
90006fcc:	2a02      	cmp	r2, #2
90006fce:	d14a      	bne.n	90007066 <USB_SetTurnaroundTime+0x9a>
    if ((hclk >= 14200000U) && (hclk < 15000000U))
90006fd0:	4b27      	ldr	r3, [pc, #156]	@ (90007070 <USB_SetTurnaroundTime+0xa4>)
90006fd2:	4a28      	ldr	r2, [pc, #160]	@ (90007074 <USB_SetTurnaroundTime+0xa8>)
90006fd4:	440b      	add	r3, r1
90006fd6:	4293      	cmp	r3, r2
90006fd8:	d939      	bls.n	9000704e <USB_SetTurnaroundTime+0x82>
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
90006fda:	4b27      	ldr	r3, [pc, #156]	@ (90007078 <USB_SetTurnaroundTime+0xac>)
90006fdc:	4a27      	ldr	r2, [pc, #156]	@ (9000707c <USB_SetTurnaroundTime+0xb0>)
90006fde:	440b      	add	r3, r1
90006fe0:	4293      	cmp	r3, r2
90006fe2:	d936      	bls.n	90007052 <USB_SetTurnaroundTime+0x86>
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
90006fe4:	f5a1 0374 	sub.w	r3, r1, #15990784	@ 0xf40000
90006fe8:	4a25      	ldr	r2, [pc, #148]	@ (90007080 <USB_SetTurnaroundTime+0xb4>)
90006fea:	f5a3 5310 	sub.w	r3, r3, #9216	@ 0x2400
90006fee:	4293      	cmp	r3, r2
90006ff0:	d931      	bls.n	90007056 <USB_SetTurnaroundTime+0x8a>
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
90006ff2:	f1a1 7383 	sub.w	r3, r1, #17170432	@ 0x1060000
90006ff6:	4a23      	ldr	r2, [pc, #140]	@ (90007084 <USB_SetTurnaroundTime+0xb8>)
90006ff8:	f5a3 43e7 	sub.w	r3, r3, #29568	@ 0x7380
90006ffc:	4293      	cmp	r3, r2
90006ffe:	d32c      	bcc.n	9000705a <USB_SetTurnaroundTime+0x8e>
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
90007000:	4b21      	ldr	r3, [pc, #132]	@ (90007088 <USB_SetTurnaroundTime+0xbc>)
90007002:	4a22      	ldr	r2, [pc, #136]	@ (9000708c <USB_SetTurnaroundTime+0xc0>)
90007004:	440b      	add	r3, r1
90007006:	4293      	cmp	r3, r2
90007008:	d929      	bls.n	9000705e <USB_SetTurnaroundTime+0x92>
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
9000700a:	4b21      	ldr	r3, [pc, #132]	@ (90007090 <USB_SetTurnaroundTime+0xc4>)
9000700c:	4a21      	ldr	r2, [pc, #132]	@ (90007094 <USB_SetTurnaroundTime+0xc8>)
9000700e:	440b      	add	r3, r1
90007010:	4293      	cmp	r3, r2
90007012:	d326      	bcc.n	90007062 <USB_SetTurnaroundTime+0x96>
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
90007014:	4b20      	ldr	r3, [pc, #128]	@ (90007098 <USB_SetTurnaroundTime+0xcc>)
90007016:	4a21      	ldr	r2, [pc, #132]	@ (9000709c <USB_SetTurnaroundTime+0xd0>)
90007018:	440b      	add	r3, r1
9000701a:	4293      	cmp	r3, r2
9000701c:	d323      	bcc.n	90007066 <USB_SetTurnaroundTime+0x9a>
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
9000701e:	f1a1 73b7 	sub.w	r3, r1, #23986176	@ 0x16e0000
90007022:	4a1f      	ldr	r2, [pc, #124]	@ (900070a0 <USB_SetTurnaroundTime+0xd4>)
90007024:	f5a3 5358 	sub.w	r3, r3, #13824	@ 0x3600
90007028:	4293      	cmp	r3, r2
9000702a:	d31e      	bcc.n	9000706a <USB_SetTurnaroundTime+0x9e>
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
9000702c:	4b1d      	ldr	r3, [pc, #116]	@ (900070a4 <USB_SetTurnaroundTime+0xd8>)
      UsbTrd = 0x7U;
9000702e:	4a1e      	ldr	r2, [pc, #120]	@ (900070a8 <USB_SetTurnaroundTime+0xdc>)
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
90007030:	440b      	add	r3, r1
      UsbTrd = 0x7U;
90007032:	4293      	cmp	r3, r2
90007034:	bf2c      	ite	cs
90007036:	2306      	movcs	r3, #6
90007038:	2307      	movcc	r3, #7
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
9000703a:	68c2      	ldr	r2, [r0, #12]
9000703c:	f422 5270 	bic.w	r2, r2, #15360	@ 0x3c00
90007040:	60c2      	str	r2, [r0, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
90007042:	68c2      	ldr	r2, [r0, #12]
90007044:	ea42 2383 	orr.w	r3, r2, r3, lsl #10
90007048:	60c3      	str	r3, [r0, #12]
}
9000704a:	2000      	movs	r0, #0
9000704c:	4770      	bx	lr
      UsbTrd = 0xFU;
9000704e:	230f      	movs	r3, #15
90007050:	e7f3      	b.n	9000703a <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xEU;
90007052:	230e      	movs	r3, #14
90007054:	e7f1      	b.n	9000703a <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xDU;
90007056:	230d      	movs	r3, #13
90007058:	e7ef      	b.n	9000703a <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xCU;
9000705a:	230c      	movs	r3, #12
9000705c:	e7ed      	b.n	9000703a <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xBU;
9000705e:	230b      	movs	r3, #11
90007060:	e7eb      	b.n	9000703a <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xAU;
90007062:	230a      	movs	r3, #10
90007064:	e7e9      	b.n	9000703a <USB_SetTurnaroundTime+0x6e>
    UsbTrd = USBD_HS_TRDT_VALUE;
90007066:	2309      	movs	r3, #9
90007068:	e7e7      	b.n	9000703a <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0x8U;
9000706a:	2308      	movs	r3, #8
9000706c:	e7e5      	b.n	9000703a <USB_SetTurnaroundTime+0x6e>
9000706e:	bf00      	nop
90007070:	ff275340 	.word	0xff275340
90007074:	000c34ff 	.word	0x000c34ff
90007078:	ff1b1e40 	.word	0xff1b1e40
9000707c:	000f423f 	.word	0x000f423f
90007080:	00124f7f 	.word	0x00124f7f
90007084:	0013d620 	.word	0x0013d620
90007088:	fee5b660 	.word	0xfee5b660
9000708c:	0016e35f 	.word	0x0016e35f
90007090:	feced300 	.word	0xfeced300
90007094:	001b7740 	.word	0x001b7740
90007098:	feb35bc0 	.word	0xfeb35bc0
9000709c:	002191c0 	.word	0x002191c0
900070a0:	00387520 	.word	0x00387520
900070a4:	fe5954e0 	.word	0xfe5954e0
900070a8:	00419ce0 	.word	0x00419ce0

900070ac <USB_EnableGlobalInt>:
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
900070ac:	6883      	ldr	r3, [r0, #8]
900070ae:	f043 0301 	orr.w	r3, r3, #1
900070b2:	6083      	str	r3, [r0, #8]
}
900070b4:	2000      	movs	r0, #0
900070b6:	4770      	bx	lr

900070b8 <USB_DisableGlobalInt>:
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
900070b8:	6883      	ldr	r3, [r0, #8]
900070ba:	f023 0301 	bic.w	r3, r3, #1
900070be:	6083      	str	r3, [r0, #8]
}
900070c0:	2000      	movs	r0, #0
900070c2:	4770      	bx	lr

900070c4 <USB_SetCurrentMode>:
{
900070c4:	b538      	push	{r3, r4, r5, lr}
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
900070c6:	68c3      	ldr	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
900070c8:	2901      	cmp	r1, #1
{
900070ca:	4605      	mov	r5, r0
900070cc:	460c      	mov	r4, r1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
900070ce:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
900070d2:	60c3      	str	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
900070d4:	d113      	bne.n	900070fe <USB_SetCurrentMode+0x3a>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
900070d6:	68c3      	ldr	r3, [r0, #12]
  uint32_t ms = 0U;
900070d8:	2400      	movs	r4, #0
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
900070da:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
900070de:	60c3      	str	r3, [r0, #12]
      HAL_Delay(10U);
900070e0:	200a      	movs	r0, #10
      ms += 10U;
900070e2:	340a      	adds	r4, #10
      HAL_Delay(10U);
900070e4:	f7fc fe3e 	bl	90003d64 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
900070e8:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
900070ea:	07d9      	lsls	r1, r3, #31
900070ec:	d402      	bmi.n	900070f4 <USB_SetCurrentMode+0x30>
900070ee:	2cc8      	cmp	r4, #200	@ 0xc8
900070f0:	d1f6      	bne.n	900070e0 <USB_SetCurrentMode+0x1c>
      ms += 10U;
900070f2:	24c8      	movs	r4, #200	@ 0xc8
  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
900070f4:	f1a4 03c8 	sub.w	r3, r4, #200	@ 0xc8
900070f8:	4258      	negs	r0, r3
900070fa:	4158      	adcs	r0, r3
}
900070fc:	bd38      	pop	{r3, r4, r5, pc}
  else if (mode == USB_DEVICE_MODE)
900070fe:	b969      	cbnz	r1, 9000711c <USB_SetCurrentMode+0x58>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
90007100:	68c3      	ldr	r3, [r0, #12]
90007102:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
90007106:	60c3      	str	r3, [r0, #12]
      HAL_Delay(10U);
90007108:	200a      	movs	r0, #10
      ms += 10U;
9000710a:	340a      	adds	r4, #10
      HAL_Delay(10U);
9000710c:	f7fc fe2a 	bl	90003d64 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
90007110:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
90007112:	07da      	lsls	r2, r3, #31
90007114:	d5ee      	bpl.n	900070f4 <USB_SetCurrentMode+0x30>
90007116:	2cc8      	cmp	r4, #200	@ 0xc8
90007118:	d1f6      	bne.n	90007108 <USB_SetCurrentMode+0x44>
9000711a:	e7ea      	b.n	900070f2 <USB_SetCurrentMode+0x2e>
    return HAL_ERROR;
9000711c:	2001      	movs	r0, #1
9000711e:	e7ed      	b.n	900070fc <USB_SetCurrentMode+0x38>

90007120 <USB_FlushTxFifo>:
{
90007120:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
90007122:	2300      	movs	r3, #0
{
90007124:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
90007126:	9301      	str	r3, [sp, #4]
    count++;
90007128:	9b01      	ldr	r3, [sp, #4]
9000712a:	3301      	adds	r3, #1
9000712c:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000712e:	9b01      	ldr	r3, [sp, #4]
90007130:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
90007134:	d815      	bhi.n	90007162 <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
90007136:	6913      	ldr	r3, [r2, #16]
90007138:	2b00      	cmp	r3, #0
9000713a:	daf5      	bge.n	90007128 <USB_FlushTxFifo+0x8>
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
9000713c:	0189      	lsls	r1, r1, #6
  count = 0U;
9000713e:	2300      	movs	r3, #0
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
90007140:	f041 0120 	orr.w	r1, r1, #32
  count = 0U;
90007144:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
90007146:	6111      	str	r1, [r2, #16]
    count++;
90007148:	9b01      	ldr	r3, [sp, #4]
9000714a:	3301      	adds	r3, #1
9000714c:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000714e:	9b01      	ldr	r3, [sp, #4]
90007150:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
90007154:	d805      	bhi.n	90007162 <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
90007156:	6910      	ldr	r0, [r2, #16]
90007158:	f010 0020 	ands.w	r0, r0, #32
9000715c:	d1f4      	bne.n	90007148 <USB_FlushTxFifo+0x28>
}
9000715e:	b002      	add	sp, #8
90007160:	4770      	bx	lr
      return HAL_TIMEOUT;
90007162:	2003      	movs	r0, #3
90007164:	e7fb      	b.n	9000715e <USB_FlushTxFifo+0x3e>

90007166 <USB_FlushRxFifo>:
{
90007166:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
90007168:	2300      	movs	r3, #0
{
9000716a:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
9000716c:	9301      	str	r3, [sp, #4]
    count++;
9000716e:	9b01      	ldr	r3, [sp, #4]
90007170:	3301      	adds	r3, #1
90007172:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
90007174:	9b01      	ldr	r3, [sp, #4]
90007176:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000717a:	d813      	bhi.n	900071a4 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
9000717c:	6913      	ldr	r3, [r2, #16]
9000717e:	2b00      	cmp	r3, #0
90007180:	daf5      	bge.n	9000716e <USB_FlushRxFifo+0x8>
  count = 0U;
90007182:	2300      	movs	r3, #0
90007184:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
90007186:	2310      	movs	r3, #16
90007188:	6113      	str	r3, [r2, #16]
    count++;
9000718a:	9b01      	ldr	r3, [sp, #4]
9000718c:	3301      	adds	r3, #1
9000718e:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
90007190:	9b01      	ldr	r3, [sp, #4]
90007192:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
90007196:	d805      	bhi.n	900071a4 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
90007198:	6910      	ldr	r0, [r2, #16]
9000719a:	f010 0010 	ands.w	r0, r0, #16
9000719e:	d1f4      	bne.n	9000718a <USB_FlushRxFifo+0x24>
}
900071a0:	b002      	add	sp, #8
900071a2:	4770      	bx	lr
      return HAL_TIMEOUT;
900071a4:	2003      	movs	r0, #3
900071a6:	e7fb      	b.n	900071a0 <USB_FlushRxFifo+0x3a>

900071a8 <USB_SetDevSpeed>:
  USBx_DEVICE->DCFG |= speed;
900071a8:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
900071ac:	4319      	orrs	r1, r3
900071ae:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
900071b2:	2000      	movs	r0, #0
900071b4:	4770      	bx	lr
	...

900071b8 <USB_DevInit>:
{
900071b8:	b084      	sub	sp, #16
900071ba:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900071be:	4604      	mov	r4, r0
900071c0:	a809      	add	r0, sp, #36	@ 0x24
900071c2:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  for (i = 0U; i < 15U; i++)
900071c6:	2300      	movs	r3, #0
900071c8:	f89d 6024 	ldrb.w	r6, [sp, #36]	@ 0x24
900071cc:	f89d 502e 	ldrb.w	r5, [sp, #46]	@ 0x2e
    USBx->DIEPTXF[i] = 0U;
900071d0:	4619      	mov	r1, r3
900071d2:	f103 0240 	add.w	r2, r3, #64	@ 0x40
  for (i = 0U; i < 15U; i++)
900071d6:	3301      	adds	r3, #1
    USBx->DIEPTXF[i] = 0U;
900071d8:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  for (i = 0U; i < 15U; i++)
900071dc:	2b0f      	cmp	r3, #15
    USBx->DIEPTXF[i] = 0U;
900071de:	6051      	str	r1, [r2, #4]
  for (i = 0U; i < 15U; i++)
900071e0:	d1f7      	bne.n	900071d2 <USB_DevInit+0x1a>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
900071e2:	f504 6700 	add.w	r7, r4, #2048	@ 0x800
  if (cfg.vbus_sensing_enable == 0U)
900071e6:	2d00      	cmp	r5, #0
900071e8:	d16c      	bne.n	900072c4 <USB_DevInit+0x10c>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
900071ea:	687b      	ldr	r3, [r7, #4]
900071ec:	f043 0302 	orr.w	r3, r3, #2
900071f0:	607b      	str	r3, [r7, #4]
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBDEN;
900071f2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
900071f4:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
900071f8:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GOTGCTL |= USB_OTG_GOTGCTL_BVALOEN;
900071fa:	6823      	ldr	r3, [r4, #0]
900071fc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90007200:	6023      	str	r3, [r4, #0]
    USBx->GOTGCTL |= USB_OTG_GOTGCTL_BVALOVAL;
90007202:	6823      	ldr	r3, [r4, #0]
90007204:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90007208:	6023      	str	r3, [r4, #0]
  USBx_PCGCCTL = 0U;
9000720a:	2300      	movs	r3, #0
9000720c:	f8c4 3e00 	str.w	r3, [r4, #3584]	@ 0xe00
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
90007210:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
90007214:	2b01      	cmp	r3, #1
90007216:	d15c      	bne.n	900072d2 <USB_DevInit+0x11a>
    if (cfg.speed == USBD_HS_SPEED)
90007218:	f89d 1027 	ldrb.w	r1, [sp, #39]	@ 0x27
9000721c:	2900      	cmp	r1, #0
9000721e:	d156      	bne.n	900072ce <USB_DevInit+0x116>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
90007220:	4620      	mov	r0, r4
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
90007222:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
90007226:	f7ff ffbf 	bl	900071a8 <USB_SetDevSpeed>
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
9000722a:	2110      	movs	r1, #16
9000722c:	4620      	mov	r0, r4
9000722e:	f7ff ff77 	bl	90007120 <USB_FlushTxFifo>
90007232:	4601      	mov	r1, r0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
90007234:	4620      	mov	r0, r4
90007236:	f7ff ff96 	bl	90007166 <USB_FlushRxFifo>
9000723a:	4308      	orrs	r0, r1
  USBx_DEVICE->DIEPMSK = 0U;
9000723c:	2300      	movs	r3, #0
9000723e:	f504 6210 	add.w	r2, r4, #2304	@ 0x900
  if (USB_FlushRxFifo(USBx) != HAL_OK)
90007242:	b2c0      	uxtb	r0, r0
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
90007244:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
      USBx_INEP(i)->DIEPCTL = 0U;
90007248:	4619      	mov	r1, r3
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
9000724a:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
  if (USB_FlushRxFifo(USBx) != HAL_OK)
9000724e:	3800      	subs	r0, #0
  USBx_DEVICE->DIEPMSK = 0U;
90007250:	613b      	str	r3, [r7, #16]
  USBx_DEVICE->DOEPMSK = 0U;
90007252:	617b      	str	r3, [r7, #20]
  if (USB_FlushRxFifo(USBx) != HAL_OK)
90007254:	bf18      	it	ne
90007256:	2001      	movne	r0, #1
  USBx_DEVICE->DAINTMSK = 0U;
90007258:	61fb      	str	r3, [r7, #28]
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000725a:	429e      	cmp	r6, r3
9000725c:	d83b      	bhi.n	900072d6 <USB_DevInit+0x11e>
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000725e:	2200      	movs	r2, #0
90007260:	f504 6330 	add.w	r3, r4, #2816	@ 0xb00
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
90007264:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
90007268:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
      USBx_OUTEP(i)->DOEPCTL = 0U;
9000726c:	4611      	mov	r1, r2
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
9000726e:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
90007272:	4296      	cmp	r6, r2
90007274:	d842      	bhi.n	900072fc <USB_DevInit+0x144>
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
90007276:	693b      	ldr	r3, [r7, #16]
90007278:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000727c:	613b      	str	r3, [r7, #16]
  USBx->GINTMSK = 0U;
9000727e:	2300      	movs	r3, #0
90007280:	61a3      	str	r3, [r4, #24]
  USBx->GINTSTS = 0xBFFFFFFFU;
90007282:	f06f 4380 	mvn.w	r3, #1073741824	@ 0x40000000
90007286:	6163      	str	r3, [r4, #20]
  if (cfg.dma_enable == 0U)
90007288:	f89d 3026 	ldrb.w	r3, [sp, #38]	@ 0x26
9000728c:	b91b      	cbnz	r3, 90007296 <USB_DevInit+0xde>
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
9000728e:	69a3      	ldr	r3, [r4, #24]
90007290:	f043 0310 	orr.w	r3, r3, #16
90007294:	61a3      	str	r3, [r4, #24]
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
90007296:	69a2      	ldr	r2, [r4, #24]
90007298:	4b22      	ldr	r3, [pc, #136]	@ (90007324 <USB_DevInit+0x16c>)
9000729a:	4313      	orrs	r3, r2
9000729c:	61a3      	str	r3, [r4, #24]
  if (cfg.Sof_enable != 0U)
9000729e:	f89d 302a 	ldrb.w	r3, [sp, #42]	@ 0x2a
900072a2:	b11b      	cbz	r3, 900072ac <USB_DevInit+0xf4>
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
900072a4:	69a3      	ldr	r3, [r4, #24]
900072a6:	f043 0308 	orr.w	r3, r3, #8
900072aa:	61a3      	str	r3, [r4, #24]
  if (cfg.vbus_sensing_enable == 1U)
900072ac:	2d01      	cmp	r5, #1
900072ae:	d105      	bne.n	900072bc <USB_DevInit+0x104>
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
900072b0:	69a3      	ldr	r3, [r4, #24]
900072b2:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
900072b6:	f043 0304 	orr.w	r3, r3, #4
900072ba:	61a3      	str	r3, [r4, #24]
}
900072bc:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900072c0:	b004      	add	sp, #16
900072c2:	4770      	bx	lr
    USBx->GCCFG |= USB_OTG_GCCFG_VBDEN;
900072c4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
900072c6:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
900072ca:	63a3      	str	r3, [r4, #56]	@ 0x38
900072cc:	e79d      	b.n	9000720a <USB_DevInit+0x52>
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH_IN_FULL);
900072ce:	4619      	mov	r1, r3
900072d0:	e7a6      	b.n	90007220 <USB_DevInit+0x68>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
900072d2:	2103      	movs	r1, #3
900072d4:	e7a4      	b.n	90007220 <USB_DevInit+0x68>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
900072d6:	f8d2 9000 	ldr.w	r9, [r2]
900072da:	f1b9 0f00 	cmp.w	r9, #0
900072de:	da0b      	bge.n	900072f8 <USB_DevInit+0x140>
      if (i == 0U)
900072e0:	b93b      	cbnz	r3, 900072f2 <USB_DevInit+0x13a>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
900072e2:	f8c2 e000 	str.w	lr, [r2]
    USBx_INEP(i)->DIEPTSIZ = 0U;
900072e6:	6111      	str	r1, [r2, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
900072e8:	3301      	adds	r3, #1
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
900072ea:	f8c2 8008 	str.w	r8, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
900072ee:	3220      	adds	r2, #32
900072f0:	e7b3      	b.n	9000725a <USB_DevInit+0xa2>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
900072f2:	f8c2 c000 	str.w	ip, [r2]
900072f6:	e7f6      	b.n	900072e6 <USB_DevInit+0x12e>
      USBx_INEP(i)->DIEPCTL = 0U;
900072f8:	6011      	str	r1, [r2, #0]
900072fa:	e7f4      	b.n	900072e6 <USB_DevInit+0x12e>
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
900072fc:	f8d3 9000 	ldr.w	r9, [r3]
90007300:	f1b9 0f00 	cmp.w	r9, #0
90007304:	da0b      	bge.n	9000731e <USB_DevInit+0x166>
      if (i == 0U)
90007306:	b93a      	cbnz	r2, 90007318 <USB_DevInit+0x160>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
90007308:	f8c3 e000 	str.w	lr, [r3]
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
9000730c:	6119      	str	r1, [r3, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000730e:	3201      	adds	r2, #1
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
90007310:	f8c3 8008 	str.w	r8, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
90007314:	3320      	adds	r3, #32
90007316:	e7ac      	b.n	90007272 <USB_DevInit+0xba>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
90007318:	f8c3 c000 	str.w	ip, [r3]
9000731c:	e7f6      	b.n	9000730c <USB_DevInit+0x154>
      USBx_OUTEP(i)->DOEPCTL = 0U;
9000731e:	6019      	str	r1, [r3, #0]
90007320:	e7f4      	b.n	9000730c <USB_DevInit+0x154>
90007322:	bf00      	nop
90007324:	803c3800 	.word	0x803c3800

90007328 <USB_GetDevSpeed>:
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
90007328:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
9000732c:	f013 0006 	ands.w	r0, r3, #6
90007330:	d004      	beq.n	9000733c <USB_GetDevSpeed+0x14>
    speed = 0xFU;
90007332:	f013 0f02 	tst.w	r3, #2
90007336:	bf14      	ite	ne
90007338:	2002      	movne	r0, #2
9000733a:	200f      	moveq	r0, #15
}
9000733c:	4770      	bx	lr

9000733e <USB_ActivateEndpoint>:
{
9000733e:	b530      	push	{r4, r5, lr}
  uint32_t epnum = (uint32_t)ep->num;
90007340:	780c      	ldrb	r4, [r1, #0]
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
90007342:	2201      	movs	r2, #1
90007344:	f500 6300 	add.w	r3, r0, #2048	@ 0x800
90007348:	f004 050f 	and.w	r5, r4, #15
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
9000734c:	eb00 1044 	add.w	r0, r0, r4, lsl #5
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
90007350:	40aa      	lsls	r2, r5
  if (ep->is_in == 1U)
90007352:	784d      	ldrb	r5, [r1, #1]
90007354:	2d01      	cmp	r5, #1
90007356:	d119      	bne.n	9000738c <USB_ActivateEndpoint+0x4e>
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
90007358:	69dd      	ldr	r5, [r3, #28]
9000735a:	432a      	orrs	r2, r5
9000735c:	61da      	str	r2, [r3, #28]
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
9000735e:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
90007362:	041a      	lsls	r2, r3, #16
90007364:	d410      	bmi.n	90007388 <USB_ActivateEndpoint+0x4a>
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
90007366:	688a      	ldr	r2, [r1, #8]
90007368:	f8d0 5900 	ldr.w	r5, [r0, #2304]	@ 0x900
9000736c:	f3c2 030a 	ubfx	r3, r2, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
90007370:	790a      	ldrb	r2, [r1, #4]
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
90007372:	432b      	orrs	r3, r5
90007374:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
90007378:	ea43 5384 	orr.w	r3, r3, r4, lsl #22
9000737c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
90007380:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
90007384:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
90007388:	2000      	movs	r0, #0
9000738a:	bd30      	pop	{r4, r5, pc}
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
9000738c:	69dc      	ldr	r4, [r3, #28]
9000738e:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
90007392:	61da      	str	r2, [r3, #28]
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
90007394:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
90007398:	041b      	lsls	r3, r3, #16
9000739a:	d4f5      	bmi.n	90007388 <USB_ActivateEndpoint+0x4a>
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
9000739c:	688b      	ldr	r3, [r1, #8]
9000739e:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
900073a2:	f3c3 030a 	ubfx	r3, r3, #0, #11
900073a6:	4313      	orrs	r3, r2
                                    ((uint32_t)ep->type << 18) |
900073a8:	790a      	ldrb	r2, [r1, #4]
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
900073aa:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
900073ae:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
900073b2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
900073b6:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
900073ba:	e7e5      	b.n	90007388 <USB_ActivateEndpoint+0x4a>

900073bc <USB_DeactivateEndpoint>:
{
900073bc:	b510      	push	{r4, lr}
  uint32_t epnum = (uint32_t)ep->num;
900073be:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
900073c0:	7849      	ldrb	r1, [r1, #1]
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
900073c2:	eb00 1342 	add.w	r3, r0, r2, lsl #5
900073c6:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  if (ep->is_in == 1U)
900073ca:	2901      	cmp	r1, #1
900073cc:	f002 020f 	and.w	r2, r2, #15
900073d0:	d122      	bne.n	90007418 <USB_DeactivateEndpoint+0x5c>
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
900073d2:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
900073d6:	2900      	cmp	r1, #0
900073d8:	da0b      	bge.n	900073f2 <USB_DeactivateEndpoint+0x36>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
900073da:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
900073de:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
900073e2:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
900073e6:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
900073ea:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
900073ee:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
900073f2:	2101      	movs	r1, #1
900073f4:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
900073f6:	fa01 f202 	lsl.w	r2, r1, r2
900073fa:	ea24 0402 	bic.w	r4, r4, r2
900073fe:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
90007400:	69c1      	ldr	r1, [r0, #28]
90007402:	ea21 0202 	bic.w	r2, r1, r2
90007406:	61c2      	str	r2, [r0, #28]
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
90007408:	4a15      	ldr	r2, [pc, #84]	@ (90007460 <USB_DeactivateEndpoint+0xa4>)
9000740a:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
9000740e:	400a      	ands	r2, r1
90007410:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
}
90007414:	2000      	movs	r0, #0
90007416:	bd10      	pop	{r4, pc}
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
90007418:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
9000741c:	2900      	cmp	r1, #0
9000741e:	da0b      	bge.n	90007438 <USB_DeactivateEndpoint+0x7c>
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
90007420:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
90007424:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
90007428:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
9000742c:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
90007430:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
90007434:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
90007438:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
9000743c:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
9000743e:	fa01 f202 	lsl.w	r2, r1, r2
90007442:	ea24 0402 	bic.w	r4, r4, r2
90007446:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
90007448:	69c1      	ldr	r1, [r0, #28]
9000744a:	ea21 0202 	bic.w	r2, r1, r2
9000744e:	61c2      	str	r2, [r0, #28]
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
90007450:	4a04      	ldr	r2, [pc, #16]	@ (90007464 <USB_DeactivateEndpoint+0xa8>)
90007452:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
90007456:	400a      	ands	r2, r1
90007458:	f8c3 2b00 	str.w	r2, [r3, #2816]	@ 0xb00
9000745c:	e7da      	b.n	90007414 <USB_DeactivateEndpoint+0x58>
9000745e:	bf00      	nop
90007460:	ec337800 	.word	0xec337800
90007464:	eff37800 	.word	0xeff37800

90007468 <USB_EPStopXfer>:
  __IO uint32_t count = 0U;
90007468:	2300      	movs	r3, #0
{
9000746a:	b082      	sub	sp, #8
  if (ep->is_in == 1U)
9000746c:	784a      	ldrb	r2, [r1, #1]
  __IO uint32_t count = 0U;
9000746e:	9301      	str	r3, [sp, #4]
  if (ep->is_in == 1U)
90007470:	2a01      	cmp	r2, #1
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
90007472:	780b      	ldrb	r3, [r1, #0]
90007474:	ea4f 1343 	mov.w	r3, r3, lsl #5
  if (ep->is_in == 1U)
90007478:	d11e      	bne.n	900074b8 <USB_EPStopXfer+0x50>
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
9000747a:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
9000747e:	58c2      	ldr	r2, [r0, r3]
90007480:	18c1      	adds	r1, r0, r3
90007482:	2a00      	cmp	r2, #0
90007484:	db02      	blt.n	9000748c <USB_EPStopXfer+0x24>
  HAL_StatusTypeDef ret = HAL_OK;
90007486:	2000      	movs	r0, #0
}
90007488:	b002      	add	sp, #8
9000748a:	4770      	bx	lr
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
9000748c:	58c2      	ldr	r2, [r0, r3]
9000748e:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
90007492:	50c2      	str	r2, [r0, r3]
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_EPDIS);
90007494:	58c2      	ldr	r2, [r0, r3]
90007496:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
9000749a:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
9000749c:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
900074a0:	9b01      	ldr	r3, [sp, #4]
900074a2:	3301      	adds	r3, #1
900074a4:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
900074a6:	9b01      	ldr	r3, [sp, #4]
900074a8:	4293      	cmp	r3, r2
900074aa:	d901      	bls.n	900074b0 <USB_EPStopXfer+0x48>
          ret = HAL_ERROR;
900074ac:	2001      	movs	r0, #1
900074ae:	e7eb      	b.n	90007488 <USB_EPStopXfer+0x20>
      } while (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) ==  USB_OTG_DIEPCTL_EPENA);
900074b0:	680b      	ldr	r3, [r1, #0]
900074b2:	2b00      	cmp	r3, #0
900074b4:	dbf4      	blt.n	900074a0 <USB_EPStopXfer+0x38>
900074b6:	e7e6      	b.n	90007486 <USB_EPStopXfer+0x1e>
    if (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
900074b8:	f500 6030 	add.w	r0, r0, #2816	@ 0xb00
900074bc:	58c2      	ldr	r2, [r0, r3]
900074be:	18c1      	adds	r1, r0, r3
900074c0:	2a00      	cmp	r2, #0
900074c2:	dae0      	bge.n	90007486 <USB_EPStopXfer+0x1e>
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
900074c4:	58c2      	ldr	r2, [r0, r3]
900074c6:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
900074ca:	50c2      	str	r2, [r0, r3]
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_EPDIS);
900074cc:	58c2      	ldr	r2, [r0, r3]
900074ce:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
900074d2:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
900074d4:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
900074d8:	9b01      	ldr	r3, [sp, #4]
900074da:	3301      	adds	r3, #1
900074dc:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
900074de:	9b01      	ldr	r3, [sp, #4]
900074e0:	4293      	cmp	r3, r2
900074e2:	d8e3      	bhi.n	900074ac <USB_EPStopXfer+0x44>
      } while (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) ==  USB_OTG_DOEPCTL_EPENA);
900074e4:	680b      	ldr	r3, [r1, #0]
900074e6:	2b00      	cmp	r3, #0
900074e8:	dbf6      	blt.n	900074d8 <USB_EPStopXfer+0x70>
900074ea:	e7cc      	b.n	90007486 <USB_EPStopXfer+0x1e>

900074ec <USB_WritePacket>:
{
900074ec:	b510      	push	{r4, lr}
900074ee:	f89d 4008 	ldrb.w	r4, [sp, #8]
  if (dma == 0U)
900074f2:	b944      	cbnz	r4, 90007506 <USB_WritePacket+0x1a>
    count32b = ((uint32_t)len + 3U) / 4U;
900074f4:	3303      	adds	r3, #3
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
900074f6:	3201      	adds	r2, #1
    count32b = ((uint32_t)len + 3U) / 4U;
900074f8:	089b      	lsrs	r3, r3, #2
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
900074fa:	eb00 3002 	add.w	r0, r0, r2, lsl #12
900074fe:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    for (i = 0U; i < count32b; i++)
90007502:	4299      	cmp	r1, r3
90007504:	d101      	bne.n	9000750a <USB_WritePacket+0x1e>
}
90007506:	2000      	movs	r0, #0
90007508:	bd10      	pop	{r4, pc}
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
9000750a:	f851 2b04 	ldr.w	r2, [r1], #4
9000750e:	6002      	str	r2, [r0, #0]
    for (i = 0U; i < count32b; i++)
90007510:	e7f7      	b.n	90007502 <USB_WritePacket+0x16>
	...

90007514 <USB_EPStartXfer>:
{
90007514:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  if (ep->is_in == 1U)
90007516:	784b      	ldrb	r3, [r1, #1]
{
90007518:	4617      	mov	r7, r2
  uint32_t epnum = (uint32_t)ep->num;
9000751a:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
9000751c:	2b01      	cmp	r3, #1
    if (ep->xfer_len == 0U)
9000751e:	690c      	ldr	r4, [r1, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
90007520:	eb00 1542 	add.w	r5, r0, r2, lsl #5
90007524:	f8df c1a8 	ldr.w	ip, [pc, #424]	@ 900076d0 <USB_EPStartXfer+0x1bc>
90007528:	f8df e1a8 	ldr.w	lr, [pc, #424]	@ 900076d4 <USB_EPStartXfer+0x1c0>
  if (ep->is_in == 1U)
9000752c:	f040 8082 	bne.w	90007634 <USB_EPStartXfer+0x120>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
90007530:	f505 6610 	add.w	r6, r5, #2304	@ 0x900
90007534:	6933      	ldr	r3, [r6, #16]
    if (ep->xfer_len == 0U)
90007536:	bb44      	cbnz	r4, 9000758a <USB_EPStartXfer+0x76>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
90007538:	ea03 030c 	and.w	r3, r3, ip
9000753c:	6133      	str	r3, [r6, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
9000753e:	6933      	ldr	r3, [r6, #16]
90007540:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
90007544:	6133      	str	r3, [r6, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
90007546:	6933      	ldr	r3, [r6, #16]
90007548:	ea03 030e 	and.w	r3, r3, lr
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (1U << 29));
9000754c:	6133      	str	r3, [r6, #16]
    if (dma == 1U)
9000754e:	2f01      	cmp	r7, #1
      if (ep->type == EP_TYPE_ISOC)
90007550:	790c      	ldrb	r4, [r1, #4]
    if (dma == 1U)
90007552:	d147      	bne.n	900075e4 <USB_EPStartXfer+0xd0>
      if ((uint32_t)ep->dma_addr != 0U)
90007554:	69cb      	ldr	r3, [r1, #28]
90007556:	b103      	cbz	r3, 9000755a <USB_EPStartXfer+0x46>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
90007558:	6173      	str	r3, [r6, #20]
      if (ep->type == EP_TYPE_ISOC)
9000755a:	2c01      	cmp	r4, #1
9000755c:	d10c      	bne.n	90007578 <USB_EPStartXfer+0x64>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
9000755e:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
90007562:	f413 7f80 	tst.w	r3, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
90007566:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
9000756a:	bf0c      	ite	eq
9000756c:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
90007570:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
90007574:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
90007578:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
9000757c:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
90007580:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
}
90007584:	2000      	movs	r0, #0
90007586:	b003      	add	sp, #12
90007588:	bdf0      	pop	{r4, r5, r6, r7, pc}
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
9000758a:	ea03 030e 	and.w	r3, r3, lr
9000758e:	6133      	str	r3, [r6, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
90007590:	6933      	ldr	r3, [r6, #16]
90007592:	ea03 030c 	and.w	r3, r3, ip
90007596:	6133      	str	r3, [r6, #16]
        if (ep->xfer_len > ep->maxpacket)
90007598:	688b      	ldr	r3, [r1, #8]
      if (epnum == 0U)
9000759a:	b9ba      	cbnz	r2, 900075cc <USB_EPStartXfer+0xb8>
        if (ep->xfer_len > ep->maxpacket)
9000759c:	42a3      	cmp	r3, r4
          ep->xfer_len = ep->maxpacket;
9000759e:	bf38      	it	cc
900075a0:	610b      	strcc	r3, [r1, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
900075a2:	6933      	ldr	r3, [r6, #16]
900075a4:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT &
900075a8:	6133      	str	r3, [r6, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
900075aa:	690b      	ldr	r3, [r1, #16]
900075ac:	6934      	ldr	r4, [r6, #16]
900075ae:	f3c3 0312 	ubfx	r3, r3, #0, #19
900075b2:	4323      	orrs	r3, r4
900075b4:	6133      	str	r3, [r6, #16]
      if (ep->type == EP_TYPE_ISOC)
900075b6:	790b      	ldrb	r3, [r1, #4]
900075b8:	2b01      	cmp	r3, #1
900075ba:	d1c8      	bne.n	9000754e <USB_EPStartXfer+0x3a>
        USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
900075bc:	6933      	ldr	r3, [r6, #16]
900075be:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
900075c2:	6133      	str	r3, [r6, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (1U << 29));
900075c4:	6933      	ldr	r3, [r6, #16]
900075c6:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
900075ca:	e7bf      	b.n	9000754c <USB_EPStartXfer+0x38>
                                       (((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket) << 19));
900075cc:	441c      	add	r4, r3
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT &
900075ce:	f8d6 c010 	ldr.w	ip, [r6, #16]
                                       (((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket) << 19));
900075d2:	3c01      	subs	r4, #1
900075d4:	fbb4 f4f3 	udiv	r4, r4, r3
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT &
900075d8:	4b3c      	ldr	r3, [pc, #240]	@ (900076cc <USB_EPStartXfer+0x1b8>)
900075da:	ea03 43c4 	and.w	r3, r3, r4, lsl #19
900075de:	ea43 030c 	orr.w	r3, r3, ip
900075e2:	e7e1      	b.n	900075a8 <USB_EPStartXfer+0x94>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
900075e4:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
900075e8:	2c01      	cmp	r4, #1
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
900075ea:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
900075ee:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
        if (ep->xfer_len > 0U)
900075f2:	690b      	ldr	r3, [r1, #16]
      if (ep->type != EP_TYPE_ISOC)
900075f4:	d00b      	beq.n	9000760e <USB_EPStartXfer+0xfa>
        if (ep->xfer_len > 0U)
900075f6:	2b00      	cmp	r3, #0
900075f8:	d0c4      	beq.n	90007584 <USB_EPStartXfer+0x70>
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
900075fa:	f002 020f 	and.w	r2, r2, #15
900075fe:	2301      	movs	r3, #1
90007600:	f8d0 1834 	ldr.w	r1, [r0, #2100]	@ 0x834
90007604:	4093      	lsls	r3, r2
90007606:	430b      	orrs	r3, r1
90007608:	f8c0 3834 	str.w	r3, [r0, #2100]	@ 0x834
9000760c:	e7ba      	b.n	90007584 <USB_EPStartXfer+0x70>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
9000760e:	f8d0 4808 	ldr.w	r4, [r0, #2056]	@ 0x808
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
90007612:	b29b      	uxth	r3, r3
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
90007614:	f414 7f80 	tst.w	r4, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
90007618:	f8d5 4900 	ldr.w	r4, [r5, #2304]	@ 0x900
9000761c:	bf0c      	ite	eq
9000761e:	f044 5400 	orreq.w	r4, r4, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
90007622:	f044 5480 	orrne.w	r4, r4, #268435456	@ 0x10000000
90007626:	f8c5 4900 	str.w	r4, [r5, #2304]	@ 0x900
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
9000762a:	9700      	str	r7, [sp, #0]
9000762c:	68c9      	ldr	r1, [r1, #12]
9000762e:	f7ff ff5d 	bl	900074ec <USB_WritePacket>
90007632:	e7a7      	b.n	90007584 <USB_EPStartXfer+0x70>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
90007634:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
90007638:	f505 6630 	add.w	r6, r5, #2816	@ 0xb00
9000763c:	ea03 030e 	and.w	r3, r3, lr
90007640:	6133      	str	r3, [r6, #16]
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
90007642:	6933      	ldr	r3, [r6, #16]
90007644:	ea03 030c 	and.w	r3, r3, ip
90007648:	6133      	str	r3, [r6, #16]
        ep->xfer_len = ep->maxpacket;
9000764a:	688b      	ldr	r3, [r1, #8]
    if (epnum == 0U)
9000764c:	bb3a      	cbnz	r2, 9000769e <USB_EPStartXfer+0x18a>
      if (ep->xfer_len > 0U)
9000764e:	b104      	cbz	r4, 90007652 <USB_EPStartXfer+0x13e>
        ep->xfer_len = ep->maxpacket;
90007650:	610b      	str	r3, [r1, #16]
      ep->xfer_size = ep->maxpacket;
90007652:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
90007654:	6932      	ldr	r2, [r6, #16]
90007656:	f3c3 0312 	ubfx	r3, r3, #0, #19
9000765a:	4313      	orrs	r3, r2
9000765c:	6133      	str	r3, [r6, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
9000765e:	6933      	ldr	r3, [r6, #16]
90007660:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
    if (dma == 1U)
90007664:	2f01      	cmp	r7, #1
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
90007666:	6133      	str	r3, [r6, #16]
    if (dma == 1U)
90007668:	d102      	bne.n	90007670 <USB_EPStartXfer+0x15c>
      if ((uint32_t)ep->xfer_buff != 0U)
9000766a:	68cb      	ldr	r3, [r1, #12]
9000766c:	b103      	cbz	r3, 90007670 <USB_EPStartXfer+0x15c>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
9000766e:	6173      	str	r3, [r6, #20]
    if (ep->type == EP_TYPE_ISOC)
90007670:	790b      	ldrb	r3, [r1, #4]
90007672:	2b01      	cmp	r3, #1
90007674:	d10c      	bne.n	90007690 <USB_EPStartXfer+0x17c>
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
90007676:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
9000767a:	f413 7f80 	tst.w	r3, #256	@ 0x100
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
9000767e:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
90007682:	bf0c      	ite	eq
90007684:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
90007688:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
9000768c:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
90007690:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
90007694:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
90007698:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
9000769c:	e772      	b.n	90007584 <USB_EPStartXfer+0x70>
      if (ep->xfer_len == 0U)
9000769e:	2c00      	cmp	r4, #0
900076a0:	d0d8      	beq.n	90007654 <USB_EPStartXfer+0x140>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
900076a2:	441c      	add	r4, r3
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
900076a4:	4a09      	ldr	r2, [pc, #36]	@ (900076cc <USB_EPStartXfer+0x1b8>)
900076a6:	f8d6 c010 	ldr.w	ip, [r6, #16]
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
900076aa:	3c01      	subs	r4, #1
900076ac:	fbb4 f4f3 	udiv	r4, r4, r3
900076b0:	b2a4      	uxth	r4, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
900076b2:	ea02 42c4 	and.w	r2, r2, r4, lsl #19
        ep->xfer_size = ep->maxpacket * pktcnt;
900076b6:	4363      	muls	r3, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
900076b8:	ea42 020c 	orr.w	r2, r2, ip
        ep->xfer_size = ep->maxpacket * pktcnt;
900076bc:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
900076be:	f3c3 0312 	ubfx	r3, r3, #0, #19
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
900076c2:	6132      	str	r2, [r6, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
900076c4:	6932      	ldr	r2, [r6, #16]
900076c6:	4313      	orrs	r3, r2
900076c8:	e7cc      	b.n	90007664 <USB_EPStartXfer+0x150>
900076ca:	bf00      	nop
900076cc:	1ff80000 	.word	0x1ff80000
900076d0:	e007ffff 	.word	0xe007ffff
900076d4:	fff80000 	.word	0xfff80000

900076d8 <USB_ReadPacket>:
{
900076d8:	4603      	mov	r3, r0
  for (i = 0U; i < count32b; i++)
900076da:	2000      	movs	r0, #0
{
900076dc:	b570      	push	{r4, r5, r6, lr}
  uint32_t count32b = (uint32_t)len >> 2U;
900076de:	0894      	lsrs	r4, r2, #2
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
900076e0:	f503 5580 	add.w	r5, r3, #4096	@ 0x1000
  uint16_t remaining_bytes = len % 4U;
900076e4:	f002 0203 	and.w	r2, r2, #3
  for (i = 0U; i < count32b; i++)
900076e8:	42a0      	cmp	r0, r4
900076ea:	d310      	bcc.n	9000770e <USB_ReadPacket+0x36>
900076ec:	eb01 0084 	add.w	r0, r1, r4, lsl #2
  if (remaining_bytes != 0U)
900076f0:	b162      	cbz	r2, 9000770c <USB_ReadPacket+0x34>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
900076f2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
900076f6:	681c      	ldr	r4, [r3, #0]
    i = 0U;
900076f8:	2300      	movs	r3, #0
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
900076fa:	00d9      	lsls	r1, r3, #3
900076fc:	fa24 f101 	lsr.w	r1, r4, r1
90007700:	54c1      	strb	r1, [r0, r3]
      i++;
90007702:	3301      	adds	r3, #1
    } while (remaining_bytes != 0U);
90007704:	b299      	uxth	r1, r3
90007706:	428a      	cmp	r2, r1
90007708:	d1f7      	bne.n	900076fa <USB_ReadPacket+0x22>
9000770a:	4410      	add	r0, r2
}
9000770c:	bd70      	pop	{r4, r5, r6, pc}
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
9000770e:	682e      	ldr	r6, [r5, #0]
90007710:	f841 6020 	str.w	r6, [r1, r0, lsl #2]
  for (i = 0U; i < count32b; i++)
90007714:	3001      	adds	r0, #1
90007716:	e7e7      	b.n	900076e8 <USB_ReadPacket+0x10>

90007718 <USB_EPSetStall>:
  if (ep->is_in == 1U)
90007718:	784a      	ldrb	r2, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
9000771a:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
9000771c:	2a01      	cmp	r2, #1
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
9000771e:	eb00 1043 	add.w	r0, r0, r3, lsl #5
  if (ep->is_in == 1U)
90007722:	d112      	bne.n	9000774a <USB_EPSetStall+0x32>
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
90007724:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
90007728:	2a00      	cmp	r2, #0
9000772a:	db06      	blt.n	9000773a <USB_EPSetStall+0x22>
9000772c:	b12b      	cbz	r3, 9000773a <USB_EPSetStall+0x22>
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
9000772e:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
90007732:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
90007736:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
9000773a:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
9000773e:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
90007742:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
90007746:	2000      	movs	r0, #0
90007748:	4770      	bx	lr
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
9000774a:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
9000774e:	2a00      	cmp	r2, #0
90007750:	db06      	blt.n	90007760 <USB_EPSetStall+0x48>
90007752:	b12b      	cbz	r3, 90007760 <USB_EPSetStall+0x48>
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
90007754:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
90007758:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
9000775c:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
90007760:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
90007764:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
90007768:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
9000776c:	e7eb      	b.n	90007746 <USB_EPSetStall+0x2e>

9000776e <USB_EPClearStall>:
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
9000776e:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
90007770:	784a      	ldrb	r2, [r1, #1]
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
90007772:	eb00 1043 	add.w	r0, r0, r3, lsl #5
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
90007776:	790b      	ldrb	r3, [r1, #4]
  if (ep->is_in == 1U)
90007778:	2a01      	cmp	r2, #1
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
9000777a:	f1a3 0302 	sub.w	r3, r3, #2
9000777e:	b2db      	uxtb	r3, r3
  if (ep->is_in == 1U)
90007780:	d10f      	bne.n	900077a2 <USB_EPClearStall+0x34>
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
90007782:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
90007786:	2b01      	cmp	r3, #1
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
90007788:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
9000778c:	f8c0 2900 	str.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
90007790:	d805      	bhi.n	9000779e <USB_EPClearStall+0x30>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
90007792:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
90007796:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000779a:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
9000779e:	2000      	movs	r0, #0
900077a0:	4770      	bx	lr
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
900077a2:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
900077a6:	2b01      	cmp	r3, #1
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
900077a8:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
900077ac:	f8c0 2b00 	str.w	r2, [r0, #2816]	@ 0xb00
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
900077b0:	d8f5      	bhi.n	9000779e <USB_EPClearStall+0x30>
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
900077b2:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
900077b6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
900077ba:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
900077be:	e7ee      	b.n	9000779e <USB_EPClearStall+0x30>

900077c0 <USB_SetDevAddress>:
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
900077c0:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
900077c4:	0109      	lsls	r1, r1, #4
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
900077c6:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
900077ca:	f401 61fe 	and.w	r1, r1, #2032	@ 0x7f0
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
900077ce:	f8c0 3800 	str.w	r3, [r0, #2048]	@ 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
900077d2:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
900077d6:	4319      	orrs	r1, r3
900077d8:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
900077dc:	2000      	movs	r0, #0
900077de:	4770      	bx	lr

900077e0 <USB_DevConnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
900077e0:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
900077e4:	f023 0303 	bic.w	r3, r3, #3
900077e8:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
900077ec:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
900077f0:	f023 0302 	bic.w	r3, r3, #2
900077f4:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
900077f8:	2000      	movs	r0, #0
900077fa:	4770      	bx	lr

900077fc <USB_DevDisconnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
900077fc:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
90007800:	f023 0303 	bic.w	r3, r3, #3
90007804:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
90007808:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
9000780c:	f043 0302 	orr.w	r3, r3, #2
90007810:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
90007814:	2000      	movs	r0, #0
90007816:	4770      	bx	lr

90007818 <USB_ReadInterrupts>:
  tmpreg = USBx->GINTSTS;
90007818:	6942      	ldr	r2, [r0, #20]
  tmpreg &= USBx->GINTMSK;
9000781a:	6980      	ldr	r0, [r0, #24]
}
9000781c:	4010      	ands	r0, r2
9000781e:	4770      	bx	lr

90007820 <USB_ReadDevAllOutEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
90007820:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
90007824:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
90007828:	69c0      	ldr	r0, [r0, #28]
9000782a:	4018      	ands	r0, r3
}
9000782c:	0c00      	lsrs	r0, r0, #16
9000782e:	4770      	bx	lr

90007830 <USB_ReadDevAllInEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
90007830:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
90007834:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
90007838:	69c0      	ldr	r0, [r0, #28]
9000783a:	4018      	ands	r0, r3
}
9000783c:	b280      	uxth	r0, r0
9000783e:	4770      	bx	lr

90007840 <USB_ReadDevOutEPInterrupt>:
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
90007840:	eb00 1141 	add.w	r1, r0, r1, lsl #5
  tmpreg &= USBx_DEVICE->DOEPMSK;
90007844:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
90007848:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	@ 0xb08
  tmpreg &= USBx_DEVICE->DOEPMSK;
9000784c:	6940      	ldr	r0, [r0, #20]
}
9000784e:	4010      	ands	r0, r2
90007850:	4770      	bx	lr

90007852 <USB_ReadDevInEPInterrupt>:
  msk = USBx_DEVICE->DIEPMSK;
90007852:	f8d0 2810 	ldr.w	r2, [r0, #2064]	@ 0x810
  emp = USBx_DEVICE->DIEPEMPMSK;
90007856:	f8d0 3834 	ldr.w	r3, [r0, #2100]	@ 0x834
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
9000785a:	eb00 1041 	add.w	r0, r0, r1, lsl #5
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
9000785e:	f001 010f 	and.w	r1, r1, #15
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
90007862:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
90007866:	40cb      	lsrs	r3, r1
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
90007868:	6880      	ldr	r0, [r0, #8]
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
9000786a:	01db      	lsls	r3, r3, #7
9000786c:	b2db      	uxtb	r3, r3
9000786e:	4313      	orrs	r3, r2
}
90007870:	4018      	ands	r0, r3
90007872:	4770      	bx	lr

90007874 <USB_GetMode>:
  return ((USBx->GINTSTS) & 0x1U);
90007874:	6940      	ldr	r0, [r0, #20]
}
90007876:	f000 0001 	and.w	r0, r0, #1
9000787a:	4770      	bx	lr

9000787c <USB_ActivateSetup>:
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
9000787c:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
90007880:	f36f 030a 	bfc	r3, #0, #11
90007884:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
90007888:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
9000788c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90007890:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
90007894:	2000      	movs	r0, #0
90007896:	4770      	bx	lr

90007898 <USB_EP0_OutStart>:
{
90007898:	b530      	push	{r4, r5, lr}
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
9000789a:	6c05      	ldr	r5, [r0, #64]	@ 0x40
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
9000789c:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
900078a0:	4c0f      	ldr	r4, [pc, #60]	@ (900078e0 <USB_EP0_OutStart+0x48>)
900078a2:	42a5      	cmp	r5, r4
900078a4:	d903      	bls.n	900078ae <USB_EP0_OutStart+0x16>
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
900078a6:	f8d0 4b00 	ldr.w	r4, [r0, #2816]	@ 0xb00
900078aa:	2c00      	cmp	r4, #0
900078ac:	db16      	blt.n	900078dc <USB_EP0_OutStart+0x44>
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
900078ae:	2400      	movs	r4, #0
  if (dma == 1U)
900078b0:	2901      	cmp	r1, #1
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
900078b2:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
900078b4:	691c      	ldr	r4, [r3, #16]
900078b6:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
900078ba:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
900078bc:	691c      	ldr	r4, [r3, #16]
900078be:	f044 0418 	orr.w	r4, r4, #24
900078c2:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
900078c4:	691c      	ldr	r4, [r3, #16]
900078c6:	f044 44c0 	orr.w	r4, r4, #1610612736	@ 0x60000000
900078ca:	611c      	str	r4, [r3, #16]
  if (dma == 1U)
900078cc:	d106      	bne.n	900078dc <USB_EP0_OutStart+0x44>
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
900078ce:	615a      	str	r2, [r3, #20]
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
900078d0:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
900078d4:	f043 2380 	orr.w	r3, r3, #2147516416	@ 0x80008000
900078d8:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
}
900078dc:	2000      	movs	r0, #0
900078de:	bd30      	pop	{r4, r5, pc}
900078e0:	4f54300a 	.word	0x4f54300a

900078e4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
900078e4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
900078e8:	b113      	cbz	r3, 900078f0 <osKernelInitialize+0xc>
    stat = osErrorISR;
900078ea:	f06f 0005 	mvn.w	r0, #5
900078ee:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
900078f0:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
900078f4:	4b07      	ldr	r3, [pc, #28]	@ (90007914 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
900078f6:	b912      	cbnz	r2, 900078fe <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
900078f8:	f3ef 8211 	mrs	r2, BASEPRI
900078fc:	b112      	cbz	r2, 90007904 <osKernelInitialize+0x20>
900078fe:	681a      	ldr	r2, [r3, #0]
90007900:	2a02      	cmp	r2, #2
90007902:	d0f2      	beq.n	900078ea <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
90007904:	6818      	ldr	r0, [r3, #0]
90007906:	b910      	cbnz	r0, 9000790e <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
90007908:	2201      	movs	r2, #1
9000790a:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000790c:	4770      	bx	lr
    } else {
      stat = osError;
9000790e:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
90007912:	4770      	bx	lr
90007914:	20003860 	.word	0x20003860

90007918 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
90007918:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000791a:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000791e:	b113      	cbz	r3, 90007926 <osKernelStart+0xe>
    stat = osErrorISR;
90007920:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
90007924:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
90007926:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
9000792a:	4b0a      	ldr	r3, [pc, #40]	@ (90007954 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
9000792c:	b912      	cbnz	r2, 90007934 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
9000792e:	f3ef 8211 	mrs	r2, BASEPRI
90007932:	b112      	cbz	r2, 9000793a <osKernelStart+0x22>
90007934:	681a      	ldr	r2, [r3, #0]
90007936:	2a02      	cmp	r2, #2
90007938:	d0f2      	beq.n	90007920 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
9000793a:	681a      	ldr	r2, [r3, #0]
9000793c:	2a01      	cmp	r2, #1
9000793e:	d105      	bne.n	9000794c <osKernelStart+0x34>
      KernelState = osKernelRunning;
90007940:	2202      	movs	r2, #2
90007942:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
90007944:	f001 fd46 	bl	900093d4 <vTaskStartScheduler>
      stat = osOK;
90007948:	2000      	movs	r0, #0
9000794a:	e7eb      	b.n	90007924 <osKernelStart+0xc>
      stat = osError;
9000794c:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
90007950:	e7e8      	b.n	90007924 <osKernelStart+0xc>
90007952:	bf00      	nop
90007954:	20003860 	.word	0x20003860

90007958 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
90007958:	b5f0      	push	{r4, r5, r6, r7, lr}
9000795a:	4614      	mov	r4, r2
9000795c:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000795e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
90007960:	460b      	mov	r3, r1
  hTask = NULL;
90007962:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
90007964:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
90007968:	bb4a      	cbnz	r2, 900079be <osThreadNew+0x66>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
9000796a:	f3ef 8210 	mrs	r2, PRIMASK
9000796e:	b912      	cbnz	r2, 90007976 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
90007970:	f3ef 8211 	mrs	r2, BASEPRI
90007974:	b11a      	cbz	r2, 9000797e <osThreadNew+0x26>
90007976:	4a1f      	ldr	r2, [pc, #124]	@ (900079f4 <osThreadNew+0x9c>)
90007978:	6812      	ldr	r2, [r2, #0]
9000797a:	2a02      	cmp	r2, #2
9000797c:	d01f      	beq.n	900079be <osThreadNew+0x66>
9000797e:	b1f0      	cbz	r0, 900079be <osThreadNew+0x66>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
90007980:	b354      	cbz	r4, 900079d8 <osThreadNew+0x80>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
90007982:	69a5      	ldr	r5, [r4, #24]
90007984:	b125      	cbz	r5, 90007990 <osThreadNew+0x38>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
90007986:	1e6a      	subs	r2, r5, #1
90007988:	2a37      	cmp	r2, #55	@ 0x37
9000798a:	d902      	bls.n	90007992 <osThreadNew+0x3a>
        return (NULL);
9000798c:	2000      	movs	r0, #0
9000798e:	e017      	b.n	900079c0 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;
90007990:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
90007992:	6862      	ldr	r2, [r4, #4]
90007994:	07d2      	lsls	r2, r2, #31
90007996:	d4f9      	bmi.n	9000798c <osThreadNew+0x34>
      }

      if (attr->stack_size > 0U) {
90007998:	6966      	ldr	r6, [r4, #20]
9000799a:	b19e      	cbz	r6, 900079c4 <osThreadNew+0x6c>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000799c:	08b2      	lsrs	r2, r6, #2
      if (attr->name != NULL) {
9000799e:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
900079a0:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
900079a4:	b187      	cbz	r7, 900079c8 <osThreadNew+0x70>
900079a6:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
900079aa:	d908      	bls.n	900079be <osThreadNew+0x66>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
900079ac:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
900079ae:	b134      	cbz	r4, 900079be <osThreadNew+0x66>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
900079b0:	b12e      	cbz	r6, 900079be <osThreadNew+0x66>
    else {
      mem = 0;
    }

    if (mem == 1) {
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
900079b2:	9500      	str	r5, [sp, #0]
900079b4:	e9cd 4701 	strd	r4, r7, [sp, #4]
900079b8:	f001 fb41 	bl	9000903e <xTaskCreateStatic>
900079bc:	9005      	str	r0, [sp, #20]
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
900079be:	9805      	ldr	r0, [sp, #20]
}
900079c0:	b007      	add	sp, #28
900079c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
900079c4:	2280      	movs	r2, #128	@ 0x80
900079c6:	e7ea      	b.n	9000799e <osThreadNew+0x46>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
900079c8:	f1bc 0f00 	cmp.w	ip, #0
900079cc:	d1f7      	bne.n	900079be <osThreadNew+0x66>
900079ce:	6924      	ldr	r4, [r4, #16]
900079d0:	2c00      	cmp	r4, #0
900079d2:	d1f4      	bne.n	900079be <osThreadNew+0x66>
900079d4:	460c      	mov	r4, r1
900079d6:	e001      	b.n	900079dc <osThreadNew+0x84>
    prio  = (UBaseType_t)osPriorityNormal;
900079d8:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
900079da:	2280      	movs	r2, #128	@ 0x80
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
900079dc:	a905      	add	r1, sp, #20
900079de:	b292      	uxth	r2, r2
900079e0:	e9cd 5100 	strd	r5, r1, [sp]
900079e4:	4621      	mov	r1, r4
900079e6:	f001 fb68 	bl	900090ba <xTaskCreate>
900079ea:	2801      	cmp	r0, #1
          hTask = NULL;
900079ec:	bf1c      	itt	ne
900079ee:	2300      	movne	r3, #0
900079f0:	9305      	strne	r3, [sp, #20]
900079f2:	e7e4      	b.n	900079be <osThreadNew+0x66>
900079f4:	20003860 	.word	0x20003860

900079f8 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
900079f8:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
900079fa:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
900079fe:	b113      	cbz	r3, 90007a06 <osDelay+0xe>
    stat = osErrorISR;
90007a00:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
90007a04:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
90007a06:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
90007a0a:	b913      	cbnz	r3, 90007a12 <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
90007a0c:	f3ef 8311 	mrs	r3, BASEPRI
90007a10:	b11b      	cbz	r3, 90007a1a <osDelay+0x22>
90007a12:	4b04      	ldr	r3, [pc, #16]	@ (90007a24 <osDelay+0x2c>)
90007a14:	681b      	ldr	r3, [r3, #0]
90007a16:	2b02      	cmp	r3, #2
90007a18:	d0f2      	beq.n	90007a00 <osDelay+0x8>
    if (ticks != 0U) {
90007a1a:	b108      	cbz	r0, 90007a20 <osDelay+0x28>
      vTaskDelay(ticks);
90007a1c:	f001 fc98 	bl	90009350 <vTaskDelay>
    stat = osOK;
90007a20:	2000      	movs	r0, #0
  return (stat);
90007a22:	e7ef      	b.n	90007a04 <osDelay+0xc>
90007a24:	20003860 	.word	0x20003860

90007a28 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
90007a28:	b573      	push	{r0, r1, r4, r5, r6, lr}
90007a2a:	460e      	mov	r6, r1
90007a2c:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
90007a2e:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
90007a32:	b993      	cbnz	r3, 90007a5a <osSemaphoreNew+0x32>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
90007a34:	f3ef 8310 	mrs	r3, PRIMASK
90007a38:	b913      	cbnz	r3, 90007a40 <osSemaphoreNew+0x18>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
90007a3a:	f3ef 8311 	mrs	r3, BASEPRI
90007a3e:	b11b      	cbz	r3, 90007a48 <osSemaphoreNew+0x20>
90007a40:	4b24      	ldr	r3, [pc, #144]	@ (90007ad4 <osSemaphoreNew+0xac>)
90007a42:	681b      	ldr	r3, [r3, #0]
90007a44:	2b02      	cmp	r3, #2
90007a46:	d008      	beq.n	90007a5a <osSemaphoreNew+0x32>
90007a48:	b138      	cbz	r0, 90007a5a <osSemaphoreNew+0x32>
90007a4a:	42b0      	cmp	r0, r6
90007a4c:	d305      	bcc.n	90007a5a <osSemaphoreNew+0x32>
    mem = -1;

    if (attr != NULL) {
90007a4e:	b155      	cbz	r5, 90007a66 <osSemaphoreNew+0x3e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
90007a50:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
90007a54:	b12b      	cbz	r3, 90007a62 <osSemaphoreNew+0x3a>
90007a56:	2a4f      	cmp	r2, #79	@ 0x4f
90007a58:	d823      	bhi.n	90007aa2 <osSemaphoreNew+0x7a>
  hSemaphore = NULL;
90007a5a:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
90007a5c:	4620      	mov	r0, r4
90007a5e:	b002      	add	sp, #8
90007a60:	bd70      	pop	{r4, r5, r6, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
90007a62:	2a00      	cmp	r2, #0
90007a64:	d1f9      	bne.n	90007a5a <osSemaphoreNew+0x32>
      if (max_count == 1U) {
90007a66:	2801      	cmp	r0, #1
90007a68:	d10e      	bne.n	90007a88 <osSemaphoreNew+0x60>
          hSemaphore = xSemaphoreCreateBinary();
90007a6a:	2203      	movs	r2, #3
90007a6c:	2100      	movs	r1, #0
90007a6e:	2001      	movs	r0, #1
90007a70:	f000 fd78 	bl	90008564 <xQueueGenericCreate>
90007a74:	e01d      	b.n	90007ab2 <osSemaphoreNew+0x8a>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
90007a76:	461a      	mov	r2, r3
90007a78:	4631      	mov	r1, r6
90007a7a:	f000 fd9c 	bl	900085b6 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
90007a7e:	4604      	mov	r4, r0
90007a80:	2800      	cmp	r0, #0
90007a82:	d0ea      	beq.n	90007a5a <osSemaphoreNew+0x32>
          name = attr->name;
90007a84:	682d      	ldr	r5, [r5, #0]
90007a86:	e007      	b.n	90007a98 <osSemaphoreNew+0x70>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
90007a88:	4631      	mov	r1, r6
90007a8a:	f000 fdba 	bl	90008602 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
90007a8e:	4604      	mov	r4, r0
90007a90:	2800      	cmp	r0, #0
90007a92:	d0e2      	beq.n	90007a5a <osSemaphoreNew+0x32>
        if (attr != NULL) {
90007a94:	2d00      	cmp	r5, #0
90007a96:	d1f5      	bne.n	90007a84 <osSemaphoreNew+0x5c>
        vQueueAddToRegistry (hSemaphore, name);
90007a98:	4629      	mov	r1, r5
90007a9a:	4620      	mov	r0, r4
90007a9c:	f001 f906 	bl	90008cac <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
90007aa0:	e7dc      	b.n	90007a5c <osSemaphoreNew+0x34>
      if (max_count == 1U) {
90007aa2:	2801      	cmp	r0, #1
90007aa4:	d1e7      	bne.n	90007a76 <osSemaphoreNew+0x4e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
90007aa6:	2203      	movs	r2, #3
90007aa8:	9200      	str	r2, [sp, #0]
90007aaa:	2200      	movs	r2, #0
90007aac:	4611      	mov	r1, r2
90007aae:	f000 fd45 	bl	9000853c <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
90007ab2:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
90007ab4:	2800      	cmp	r0, #0
90007ab6:	d0d0      	beq.n	90007a5a <osSemaphoreNew+0x32>
90007ab8:	2e00      	cmp	r6, #0
90007aba:	d0eb      	beq.n	90007a94 <osSemaphoreNew+0x6c>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
90007abc:	2300      	movs	r3, #0
90007abe:	461a      	mov	r2, r3
90007ac0:	4619      	mov	r1, r3
90007ac2:	f000 fdc0 	bl	90008646 <xQueueGenericSend>
90007ac6:	2801      	cmp	r0, #1
90007ac8:	d0e4      	beq.n	90007a94 <osSemaphoreNew+0x6c>
            vSemaphoreDelete (hSemaphore);
90007aca:	4620      	mov	r0, r4
90007acc:	f001 f918 	bl	90008d00 <vQueueDelete>
      if (hSemaphore != NULL) {
90007ad0:	e7c3      	b.n	90007a5a <osSemaphoreNew+0x32>
90007ad2:	bf00      	nop
90007ad4:	20003860 	.word	0x20003860

90007ad8 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
90007ad8:	b513      	push	{r0, r1, r4, lr}
90007ada:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
90007adc:	b918      	cbnz	r0, 90007ae6 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
90007ade:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
90007ae2:	b002      	add	sp, #8
90007ae4:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
90007ae6:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
90007aea:	b15b      	cbz	r3, 90007b04 <osSemaphoreAcquire+0x2c>
    if (timeout != 0U) {
90007aec:	2c00      	cmp	r4, #0
90007aee:	d1f6      	bne.n	90007ade <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
90007af0:	aa01      	add	r2, sp, #4
90007af2:	4621      	mov	r1, r4
      yield = pdFALSE;
90007af4:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
90007af6:	f001 f886 	bl	90008c06 <xQueueReceiveFromISR>
90007afa:	2801      	cmp	r0, #1
90007afc:	d016      	beq.n	90007b2c <osSemaphoreAcquire+0x54>
        stat = osErrorResource;
90007afe:	f06f 0002 	mvn.w	r0, #2
90007b02:	e7ee      	b.n	90007ae2 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
90007b04:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
90007b08:	b913      	cbnz	r3, 90007b10 <osSemaphoreAcquire+0x38>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
90007b0a:	f3ef 8311 	mrs	r3, BASEPRI
90007b0e:	b11b      	cbz	r3, 90007b18 <osSemaphoreAcquire+0x40>
90007b10:	4b0e      	ldr	r3, [pc, #56]	@ (90007b4c <osSemaphoreAcquire+0x74>)
90007b12:	681b      	ldr	r3, [r3, #0]
90007b14:	2b02      	cmp	r3, #2
90007b16:	d0e9      	beq.n	90007aec <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
90007b18:	4621      	mov	r1, r4
90007b1a:	f000 ffaf 	bl	90008a7c <xQueueSemaphoreTake>
90007b1e:	2801      	cmp	r0, #1
90007b20:	d006      	beq.n	90007b30 <osSemaphoreAcquire+0x58>
      if (timeout != 0U) {
90007b22:	2c00      	cmp	r4, #0
90007b24:	d0eb      	beq.n	90007afe <osSemaphoreAcquire+0x26>
        stat = osErrorTimeout;
90007b26:	f06f 0001 	mvn.w	r0, #1
  return (stat);
90007b2a:	e7da      	b.n	90007ae2 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
90007b2c:	9b01      	ldr	r3, [sp, #4]
90007b2e:	b90b      	cbnz	r3, 90007b34 <osSemaphoreAcquire+0x5c>
  stat = osOK;
90007b30:	2000      	movs	r0, #0
90007b32:	e7d6      	b.n	90007ae2 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
90007b34:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90007b38:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90007b3c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90007b40:	f3bf 8f4f 	dsb	sy
90007b44:	f3bf 8f6f 	isb	sy
90007b48:	e7f2      	b.n	90007b30 <osSemaphoreAcquire+0x58>
90007b4a:	bf00      	nop
90007b4c:	20003860 	.word	0x20003860

90007b50 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
90007b50:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
90007b52:	b370      	cbz	r0, 90007bb2 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
90007b54:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
90007b58:	b15b      	cbz	r3, 90007b72 <osSemaphoreRelease+0x22>
    yield = pdFALSE;
90007b5a:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
90007b5c:	a901      	add	r1, sp, #4
    yield = pdFALSE;
90007b5e:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
90007b60:	f000 fe8f 	bl	90008882 <xQueueGiveFromISR>
90007b64:	2801      	cmp	r0, #1
90007b66:	d016      	beq.n	90007b96 <osSemaphoreRelease+0x46>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
90007b68:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
90007b6c:	b003      	add	sp, #12
90007b6e:	f85d fb04 	ldr.w	pc, [sp], #4
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
90007b72:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
90007b76:	b913      	cbnz	r3, 90007b7e <osSemaphoreRelease+0x2e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
90007b78:	f3ef 8311 	mrs	r3, BASEPRI
90007b7c:	b11b      	cbz	r3, 90007b86 <osSemaphoreRelease+0x36>
90007b7e:	4b0e      	ldr	r3, [pc, #56]	@ (90007bb8 <osSemaphoreRelease+0x68>)
90007b80:	681b      	ldr	r3, [r3, #0]
90007b82:	2b02      	cmp	r3, #2
90007b84:	d0e9      	beq.n	90007b5a <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
90007b86:	2300      	movs	r3, #0
90007b88:	461a      	mov	r2, r3
90007b8a:	4619      	mov	r1, r3
90007b8c:	f000 fd5b 	bl	90008646 <xQueueGenericSend>
90007b90:	2801      	cmp	r0, #1
90007b92:	d00c      	beq.n	90007bae <osSemaphoreRelease+0x5e>
90007b94:	e7e8      	b.n	90007b68 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
90007b96:	9b01      	ldr	r3, [sp, #4]
90007b98:	b14b      	cbz	r3, 90007bae <osSemaphoreRelease+0x5e>
90007b9a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90007b9e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90007ba2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90007ba6:	f3bf 8f4f 	dsb	sy
90007baa:	f3bf 8f6f 	isb	sy
  stat = osOK;
90007bae:	2000      	movs	r0, #0
90007bb0:	e7dc      	b.n	90007b6c <osSemaphoreRelease+0x1c>
    stat = osErrorParameter;
90007bb2:	f06f 0003 	mvn.w	r0, #3
  return (stat);
90007bb6:	e7d9      	b.n	90007b6c <osSemaphoreRelease+0x1c>
90007bb8:	20003860 	.word	0x20003860

90007bbc <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
90007bbc:	b573      	push	{r0, r1, r4, r5, r6, lr}
90007bbe:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
90007bc0:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
90007bc4:	b11b      	cbz	r3, 90007bce <osMessageQueueNew+0x12>
  hQueue = NULL;
90007bc6:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
90007bc8:	4628      	mov	r0, r5
90007bca:	b002      	add	sp, #8
90007bcc:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
90007bce:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
90007bd2:	b913      	cbnz	r3, 90007bda <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
90007bd4:	f3ef 8311 	mrs	r3, BASEPRI
90007bd8:	b11b      	cbz	r3, 90007be2 <osMessageQueueNew+0x26>
90007bda:	4b1a      	ldr	r3, [pc, #104]	@ (90007c44 <osMessageQueueNew+0x88>)
90007bdc:	681b      	ldr	r3, [r3, #0]
90007bde:	2b02      	cmp	r3, #2
90007be0:	d0f1      	beq.n	90007bc6 <osMessageQueueNew+0xa>
90007be2:	2800      	cmp	r0, #0
90007be4:	d0ef      	beq.n	90007bc6 <osMessageQueueNew+0xa>
90007be6:	2900      	cmp	r1, #0
90007be8:	d0ed      	beq.n	90007bc6 <osMessageQueueNew+0xa>
    if (attr != NULL) {
90007bea:	b1ec      	cbz	r4, 90007c28 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
90007bec:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
90007bf0:	b193      	cbz	r3, 90007c18 <osMessageQueueNew+0x5c>
90007bf2:	2a4f      	cmp	r2, #79	@ 0x4f
90007bf4:	d9e7      	bls.n	90007bc6 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
90007bf6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
90007bf8:	2a00      	cmp	r2, #0
90007bfa:	d0e4      	beq.n	90007bc6 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
90007bfc:	fb01 f500 	mul.w	r5, r1, r0
90007c00:	6966      	ldr	r6, [r4, #20]
90007c02:	42ae      	cmp	r6, r5
90007c04:	d3df      	bcc.n	90007bc6 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
90007c06:	2500      	movs	r5, #0
90007c08:	9500      	str	r5, [sp, #0]
90007c0a:	f000 fc97 	bl	9000853c <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
90007c0e:	4605      	mov	r5, r0
90007c10:	2800      	cmp	r0, #0
90007c12:	d0d8      	beq.n	90007bc6 <osMessageQueueNew+0xa>
        name = attr->name;
90007c14:	6824      	ldr	r4, [r4, #0]
90007c16:	e00f      	b.n	90007c38 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
90007c18:	2a00      	cmp	r2, #0
90007c1a:	d1d4      	bne.n	90007bc6 <osMessageQueueNew+0xa>
90007c1c:	6923      	ldr	r3, [r4, #16]
90007c1e:	2b00      	cmp	r3, #0
90007c20:	d1d1      	bne.n	90007bc6 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
90007c22:	6963      	ldr	r3, [r4, #20]
90007c24:	2b00      	cmp	r3, #0
90007c26:	d1ce      	bne.n	90007bc6 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
90007c28:	2200      	movs	r2, #0
90007c2a:	f000 fc9b 	bl	90008564 <xQueueGenericCreate>
    if (hQueue != NULL) {
90007c2e:	4605      	mov	r5, r0
90007c30:	2800      	cmp	r0, #0
90007c32:	d0c8      	beq.n	90007bc6 <osMessageQueueNew+0xa>
      if (attr != NULL) {
90007c34:	2c00      	cmp	r4, #0
90007c36:	d1ed      	bne.n	90007c14 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
90007c38:	4621      	mov	r1, r4
90007c3a:	4628      	mov	r0, r5
90007c3c:	f001 f836 	bl	90008cac <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
90007c40:	e7c2      	b.n	90007bc8 <osMessageQueueNew+0xc>
90007c42:	bf00      	nop
90007c44:	20003860 	.word	0x20003860

90007c48 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
90007c48:	b513      	push	{r0, r1, r4, lr}
90007c4a:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
90007c4c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
90007c50:	b123      	cbz	r3, 90007c5c <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
90007c52:	b9d8      	cbnz	r0, 90007c8c <osMessageQueuePut+0x44>
      }
    }
  }
  else {
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
      stat = osErrorParameter;
90007c54:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
90007c58:	b002      	add	sp, #8
90007c5a:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
90007c5c:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
90007c60:	b913      	cbnz	r3, 90007c68 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
90007c62:	f3ef 8311 	mrs	r3, BASEPRI
90007c66:	b11b      	cbz	r3, 90007c70 <osMessageQueuePut+0x28>
90007c68:	4b17      	ldr	r3, [pc, #92]	@ (90007cc8 <osMessageQueuePut+0x80>)
90007c6a:	681b      	ldr	r3, [r3, #0]
90007c6c:	2b02      	cmp	r3, #2
90007c6e:	d0f0      	beq.n	90007c52 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
90007c70:	2800      	cmp	r0, #0
90007c72:	d0ef      	beq.n	90007c54 <osMessageQueuePut+0xc>
90007c74:	2900      	cmp	r1, #0
90007c76:	d0ed      	beq.n	90007c54 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
90007c78:	2300      	movs	r3, #0
90007c7a:	4622      	mov	r2, r4
90007c7c:	f000 fce3 	bl	90008646 <xQueueGenericSend>
90007c80:	2801      	cmp	r0, #1
90007c82:	d013      	beq.n	90007cac <osMessageQueuePut+0x64>
        if (timeout != 0U) {
90007c84:	b16c      	cbz	r4, 90007ca2 <osMessageQueuePut+0x5a>
          stat = osErrorTimeout;
90007c86:	f06f 0001 	mvn.w	r0, #1
  return (stat);
90007c8a:	e7e5      	b.n	90007c58 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
90007c8c:	2900      	cmp	r1, #0
90007c8e:	d0e1      	beq.n	90007c54 <osMessageQueuePut+0xc>
90007c90:	2c00      	cmp	r4, #0
90007c92:	d1df      	bne.n	90007c54 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
90007c94:	4623      	mov	r3, r4
90007c96:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
90007c98:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
90007c9a:	f000 fd8e 	bl	900087ba <xQueueGenericSendFromISR>
90007c9e:	2801      	cmp	r0, #1
90007ca0:	d002      	beq.n	90007ca8 <osMessageQueuePut+0x60>
        stat = osErrorResource;
90007ca2:	f06f 0002 	mvn.w	r0, #2
90007ca6:	e7d7      	b.n	90007c58 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
90007ca8:	9b01      	ldr	r3, [sp, #4]
90007caa:	b90b      	cbnz	r3, 90007cb0 <osMessageQueuePut+0x68>
  stat = osOK;
90007cac:	2000      	movs	r0, #0
90007cae:	e7d3      	b.n	90007c58 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
90007cb0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90007cb4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90007cb8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90007cbc:	f3bf 8f4f 	dsb	sy
90007cc0:	f3bf 8f6f 	isb	sy
90007cc4:	e7f2      	b.n	90007cac <osMessageQueuePut+0x64>
90007cc6:	bf00      	nop
90007cc8:	20003860 	.word	0x20003860

90007ccc <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
90007ccc:	b513      	push	{r0, r1, r4, lr}
90007cce:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
90007cd0:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
90007cd4:	b123      	cbz	r3, 90007ce0 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
90007cd6:	b9d0      	cbnz	r0, 90007d0e <osMessageQueueGet+0x42>
      }
    }
  }
  else {
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
      stat = osErrorParameter;
90007cd8:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
90007cdc:	b002      	add	sp, #8
90007cde:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
90007ce0:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
90007ce4:	b913      	cbnz	r3, 90007cec <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
90007ce6:	f3ef 8311 	mrs	r3, BASEPRI
90007cea:	b11b      	cbz	r3, 90007cf4 <osMessageQueueGet+0x28>
90007cec:	4b16      	ldr	r3, [pc, #88]	@ (90007d48 <osMessageQueueGet+0x7c>)
90007cee:	681b      	ldr	r3, [r3, #0]
90007cf0:	2b02      	cmp	r3, #2
90007cf2:	d0f0      	beq.n	90007cd6 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
90007cf4:	2800      	cmp	r0, #0
90007cf6:	d0ef      	beq.n	90007cd8 <osMessageQueueGet+0xc>
90007cf8:	2900      	cmp	r1, #0
90007cfa:	d0ed      	beq.n	90007cd8 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
90007cfc:	4622      	mov	r2, r4
90007cfe:	f000 fe19 	bl	90008934 <xQueueReceive>
90007d02:	2801      	cmp	r0, #1
90007d04:	d012      	beq.n	90007d2c <osMessageQueueGet+0x60>
        if (timeout != 0U) {
90007d06:	b164      	cbz	r4, 90007d22 <osMessageQueueGet+0x56>
          stat = osErrorTimeout;
90007d08:	f06f 0001 	mvn.w	r0, #1
  return (stat);
90007d0c:	e7e6      	b.n	90007cdc <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
90007d0e:	2900      	cmp	r1, #0
90007d10:	d0e2      	beq.n	90007cd8 <osMessageQueueGet+0xc>
90007d12:	2c00      	cmp	r4, #0
90007d14:	d1e0      	bne.n	90007cd8 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
90007d16:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
90007d18:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
90007d1a:	f000 ff74 	bl	90008c06 <xQueueReceiveFromISR>
90007d1e:	2801      	cmp	r0, #1
90007d20:	d002      	beq.n	90007d28 <osMessageQueueGet+0x5c>
        stat = osErrorResource;
90007d22:	f06f 0002 	mvn.w	r0, #2
90007d26:	e7d9      	b.n	90007cdc <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
90007d28:	9b01      	ldr	r3, [sp, #4]
90007d2a:	b90b      	cbnz	r3, 90007d30 <osMessageQueueGet+0x64>
  stat = osOK;
90007d2c:	2000      	movs	r0, #0
90007d2e:	e7d5      	b.n	90007cdc <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
90007d30:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90007d34:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90007d38:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90007d3c:	f3bf 8f4f 	dsb	sy
90007d40:	f3bf 8f6f 	isb	sy
90007d44:	e7f2      	b.n	90007d2c <osMessageQueueGet+0x60>
90007d46:	bf00      	nop
90007d48:	20003860 	.word	0x20003860

90007d4c <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
90007d4c:	4b03      	ldr	r3, [pc, #12]	@ (90007d5c <vApplicationGetIdleTaskMemory+0x10>)
90007d4e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
90007d50:	4b03      	ldr	r3, [pc, #12]	@ (90007d60 <vApplicationGetIdleTaskMemory+0x14>)
90007d52:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
90007d54:	2380      	movs	r3, #128	@ 0x80
90007d56:	6013      	str	r3, [r2, #0]
}
90007d58:	4770      	bx	lr
90007d5a:	bf00      	nop
90007d5c:	20003800 	.word	0x20003800
90007d60:	20003600 	.word	0x20003600

90007d64 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
90007d64:	4b03      	ldr	r3, [pc, #12]	@ (90007d74 <vApplicationGetTimerTaskMemory+0x10>)
90007d66:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
90007d68:	4b03      	ldr	r3, [pc, #12]	@ (90007d78 <vApplicationGetTimerTaskMemory+0x14>)
90007d6a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
90007d6c:	f44f 7380 	mov.w	r3, #256	@ 0x100
90007d70:	6013      	str	r3, [r2, #0]
}
90007d72:	4770      	bx	lr
90007d74:	200035a0 	.word	0x200035a0
90007d78:	200031a0 	.word	0x200031a0

90007d7c <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
90007d7c:	4b10      	ldr	r3, [pc, #64]	@ (90007dc0 <prvInsertBlockIntoFreeList+0x44>)
{
90007d7e:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
90007d80:	461a      	mov	r2, r3
90007d82:	681b      	ldr	r3, [r3, #0]
90007d84:	4283      	cmp	r3, r0
90007d86:	d3fb      	bcc.n	90007d80 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
90007d88:	6854      	ldr	r4, [r2, #4]
90007d8a:	1911      	adds	r1, r2, r4
90007d8c:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90007d8e:	bf01      	itttt	eq
90007d90:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
90007d92:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90007d94:	1909      	addeq	r1, r1, r4
90007d96:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90007d98:	6844      	ldr	r4, [r0, #4]
90007d9a:	1901      	adds	r1, r0, r4
90007d9c:	428b      	cmp	r3, r1
90007d9e:	d10c      	bne.n	90007dba <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
90007da0:	4908      	ldr	r1, [pc, #32]	@ (90007dc4 <prvInsertBlockIntoFreeList+0x48>)
90007da2:	6809      	ldr	r1, [r1, #0]
90007da4:	428b      	cmp	r3, r1
90007da6:	d003      	beq.n	90007db0 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
90007da8:	6859      	ldr	r1, [r3, #4]
90007daa:	4421      	add	r1, r4
90007dac:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90007dae:	6819      	ldr	r1, [r3, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
90007db0:	4290      	cmp	r0, r2
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
90007db2:	6001      	str	r1, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
90007db4:	bf18      	it	ne
90007db6:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
90007db8:	bd10      	pop	{r4, pc}
90007dba:	4619      	mov	r1, r3
90007dbc:	e7f8      	b.n	90007db0 <prvInsertBlockIntoFreeList+0x34>
90007dbe:	bf00      	nop
90007dc0:	20003874 	.word	0x20003874
90007dc4:	20003870 	.word	0x20003870

90007dc8 <pvPortMalloc>:
{
90007dc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007dcc:	4604      	mov	r4, r0
	vTaskSuspendAll();
90007dce:	f001 f9a3 	bl	90009118 <vTaskSuspendAll>
		if( pxEnd == NULL )
90007dd2:	4941      	ldr	r1, [pc, #260]	@ (90007ed8 <pvPortMalloc+0x110>)
90007dd4:	4d41      	ldr	r5, [pc, #260]	@ (90007edc <pvPortMalloc+0x114>)
90007dd6:	680b      	ldr	r3, [r1, #0]
90007dd8:	bb0b      	cbnz	r3, 90007e1e <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
90007dda:	4a41      	ldr	r2, [pc, #260]	@ (90007ee0 <pvPortMalloc+0x118>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
90007ddc:	0756      	lsls	r6, r2, #29
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
90007dde:	4e41      	ldr	r6, [pc, #260]	@ (90007ee4 <pvPortMalloc+0x11c>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
90007de0:	bf1b      	ittet	ne
90007de2:	1dd0      	addne	r0, r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
90007de4:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
90007de8:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
90007dec:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
90007df0:	bf1c      	itt	ne
90007df2:	1a13      	subne	r3, r2, r0
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
90007df4:	4602      	movne	r2, r0
	xStart.xBlockSize = ( size_t ) 0;
90007df6:	2000      	movs	r0, #0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
90007df8:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
90007dfa:	6032      	str	r2, [r6, #0]
	xStart.xBlockSize = ( size_t ) 0;
90007dfc:	6070      	str	r0, [r6, #4]
	uxAddress -= xHeapStructSize;
90007dfe:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
90007e00:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
90007e04:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
90007e08:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
90007e0a:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
90007e0c:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
90007e10:	4b35      	ldr	r3, [pc, #212]	@ (90007ee8 <pvPortMalloc+0x120>)
90007e12:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
90007e14:	4b35      	ldr	r3, [pc, #212]	@ (90007eec <pvPortMalloc+0x124>)
90007e16:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
90007e18:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
90007e1c:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
90007e1e:	682e      	ldr	r6, [r5, #0]
90007e20:	4226      	tst	r6, r4
90007e22:	d154      	bne.n	90007ece <pvPortMalloc+0x106>
			if( xWantedSize > 0 )
90007e24:	2c00      	cmp	r4, #0
90007e26:	d043      	beq.n	90007eb0 <pvPortMalloc+0xe8>
				xWantedSize += xHeapStructSize;
90007e28:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
90007e2c:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
90007e2e:	bf1c      	itt	ne
90007e30:	f023 0307 	bicne.w	r3, r3, #7
90007e34:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
90007e36:	2b00      	cmp	r3, #0
90007e38:	d049      	beq.n	90007ece <pvPortMalloc+0x106>
90007e3a:	4f2c      	ldr	r7, [pc, #176]	@ (90007eec <pvPortMalloc+0x124>)
90007e3c:	683c      	ldr	r4, [r7, #0]
90007e3e:	429c      	cmp	r4, r3
90007e40:	d345      	bcc.n	90007ece <pvPortMalloc+0x106>
				pxBlock = xStart.pxNextFreeBlock;
90007e42:	4a28      	ldr	r2, [pc, #160]	@ (90007ee4 <pvPortMalloc+0x11c>)
90007e44:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
90007e46:	6868      	ldr	r0, [r5, #4]
90007e48:	4298      	cmp	r0, r3
90007e4a:	d204      	bcs.n	90007e56 <pvPortMalloc+0x8e>
90007e4c:	f8d5 c000 	ldr.w	ip, [r5]
90007e50:	f1bc 0f00 	cmp.w	ip, #0
90007e54:	d117      	bne.n	90007e86 <pvPortMalloc+0xbe>
				if( pxBlock != pxEnd )
90007e56:	6809      	ldr	r1, [r1, #0]
90007e58:	42a9      	cmp	r1, r5
90007e5a:	d038      	beq.n	90007ece <pvPortMalloc+0x106>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
90007e5c:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
90007e5e:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
90007e62:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
90007e64:	1ac2      	subs	r2, r0, r3
90007e66:	2a10      	cmp	r2, #16
90007e68:	d914      	bls.n	90007e94 <pvPortMalloc+0xcc>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
90007e6a:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
90007e6c:	0741      	lsls	r1, r0, #29
90007e6e:	d00d      	beq.n	90007e8c <pvPortMalloc+0xc4>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
90007e70:	f04f 0350 	mov.w	r3, #80	@ 0x50
90007e74:	b672      	cpsid	i
90007e76:	f383 8811 	msr	BASEPRI, r3
90007e7a:	f3bf 8f6f 	isb	sy
90007e7e:	f3bf 8f4f 	dsb	sy
90007e82:	b662      	cpsie	i
90007e84:	e7fe      	b.n	90007e84 <pvPortMalloc+0xbc>
					pxPreviousBlock = pxBlock;
90007e86:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
90007e88:	4665      	mov	r5, ip
90007e8a:	e7dc      	b.n	90007e46 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
90007e8c:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
90007e8e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
90007e90:	f7ff ff74 	bl	90007d7c <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
90007e94:	686a      	ldr	r2, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
90007e96:	2300      	movs	r3, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
90007e98:	4913      	ldr	r1, [pc, #76]	@ (90007ee8 <pvPortMalloc+0x120>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
90007e9a:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
90007e9c:	4316      	orrs	r6, r2
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
90007e9e:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
90007ea0:	603c      	str	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
90007ea2:	4284      	cmp	r4, r0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
90007ea4:	606e      	str	r6, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
90007ea6:	602b      	str	r3, [r5, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
90007ea8:	bf38      	it	cc
90007eaa:	600c      	strcc	r4, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
90007eac:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
90007eb0:	f001 f9d8 	bl	90009264 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
90007eb4:	0763      	lsls	r3, r4, #29
90007eb6:	d00c      	beq.n	90007ed2 <pvPortMalloc+0x10a>
90007eb8:	f04f 0350 	mov.w	r3, #80	@ 0x50
90007ebc:	b672      	cpsid	i
90007ebe:	f383 8811 	msr	BASEPRI, r3
90007ec2:	f3bf 8f6f 	isb	sy
90007ec6:	f3bf 8f4f 	dsb	sy
90007eca:	b662      	cpsie	i
90007ecc:	e7fe      	b.n	90007ecc <pvPortMalloc+0x104>
void *pvReturn = NULL;
90007ece:	2400      	movs	r4, #0
90007ed0:	e7ee      	b.n	90007eb0 <pvPortMalloc+0xe8>
}
90007ed2:	4620      	mov	r0, r4
90007ed4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90007ed8:	20003870 	.word	0x20003870
90007edc:	20003864 	.word	0x20003864
90007ee0:	2000387c 	.word	0x2000387c
90007ee4:	20003874 	.word	0x20003874
90007ee8:	20003868 	.word	0x20003868
90007eec:	2000386c 	.word	0x2000386c

90007ef0 <vPortFree>:
{
90007ef0:	b510      	push	{r4, lr}
	if( pv != NULL )
90007ef2:	4604      	mov	r4, r0
90007ef4:	2800      	cmp	r0, #0
90007ef6:	d032      	beq.n	90007f5e <vPortFree+0x6e>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
90007ef8:	4a19      	ldr	r2, [pc, #100]	@ (90007f60 <vPortFree+0x70>)
90007efa:	f850 3c04 	ldr.w	r3, [r0, #-4]
90007efe:	6812      	ldr	r2, [r2, #0]
90007f00:	4213      	tst	r3, r2
90007f02:	d10a      	bne.n	90007f1a <vPortFree+0x2a>
90007f04:	f04f 0350 	mov.w	r3, #80	@ 0x50
90007f08:	b672      	cpsid	i
90007f0a:	f383 8811 	msr	BASEPRI, r3
90007f0e:	f3bf 8f6f 	isb	sy
90007f12:	f3bf 8f4f 	dsb	sy
90007f16:	b662      	cpsie	i
90007f18:	e7fe      	b.n	90007f18 <vPortFree+0x28>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
90007f1a:	f850 1c08 	ldr.w	r1, [r0, #-8]
90007f1e:	b151      	cbz	r1, 90007f36 <vPortFree+0x46>
90007f20:	f04f 0350 	mov.w	r3, #80	@ 0x50
90007f24:	b672      	cpsid	i
90007f26:	f383 8811 	msr	BASEPRI, r3
90007f2a:	f3bf 8f6f 	isb	sy
90007f2e:	f3bf 8f4f 	dsb	sy
90007f32:	b662      	cpsie	i
90007f34:	e7fe      	b.n	90007f34 <vPortFree+0x44>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
90007f36:	ea23 0302 	bic.w	r3, r3, r2
90007f3a:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
90007f3e:	f001 f8eb 	bl	90009118 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
90007f42:	4a08      	ldr	r2, [pc, #32]	@ (90007f64 <vPortFree+0x74>)
90007f44:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
90007f48:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
90007f4c:	6811      	ldr	r1, [r2, #0]
90007f4e:	440b      	add	r3, r1
90007f50:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
90007f52:	f7ff ff13 	bl	90007d7c <prvInsertBlockIntoFreeList>
}
90007f56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
90007f5a:	f001 b983 	b.w	90009264 <xTaskResumeAll>
}
90007f5e:	bd10      	pop	{r4, pc}
90007f60:	20003864 	.word	0x20003864
90007f64:	2000386c 	.word	0x2000386c

90007f68 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90007f68:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
90007f6c:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90007f70:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90007f72:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90007f74:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
90007f78:	2300      	movs	r3, #0
90007f7a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
90007f7c:	4770      	bx	lr

90007f7e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
90007f7e:	2300      	movs	r3, #0
90007f80:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
90007f82:	4770      	bx	lr

90007f84 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
90007f84:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
90007f86:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
90007f88:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
90007f8a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
90007f8c:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
90007f8e:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
90007f90:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
90007f92:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
90007f94:	3301      	adds	r3, #1
90007f96:	6003      	str	r3, [r0, #0]
}
90007f98:	4770      	bx	lr

90007f9a <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
90007f9a:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
90007f9c:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
90007f9e:	1c63      	adds	r3, r4, #1
90007fa0:	d10a      	bne.n	90007fb8 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
90007fa2:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
90007fa4:	685a      	ldr	r2, [r3, #4]
90007fa6:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
90007fa8:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
90007faa:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
90007fac:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
90007fae:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
90007fb0:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
90007fb2:	3301      	adds	r3, #1
90007fb4:	6003      	str	r3, [r0, #0]
}
90007fb6:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
90007fb8:	f100 0208 	add.w	r2, r0, #8
90007fbc:	4613      	mov	r3, r2
90007fbe:	6852      	ldr	r2, [r2, #4]
90007fc0:	6815      	ldr	r5, [r2, #0]
90007fc2:	42a5      	cmp	r5, r4
90007fc4:	d9fa      	bls.n	90007fbc <vListInsert+0x22>
90007fc6:	e7ed      	b.n	90007fa4 <vListInsert+0xa>

90007fc8 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
90007fc8:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
90007fca:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
90007fce:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
90007fd0:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
90007fd2:	6859      	ldr	r1, [r3, #4]
90007fd4:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
90007fd6:	bf08      	it	eq
90007fd8:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
90007fda:	2200      	movs	r2, #0
90007fdc:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
90007fde:	681a      	ldr	r2, [r3, #0]
90007fe0:	3a01      	subs	r2, #1
90007fe2:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
90007fe4:	6818      	ldr	r0, [r3, #0]
}
90007fe6:	4770      	bx	lr

90007fe8 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
90007fe8:	4808      	ldr	r0, [pc, #32]	@ (9000800c <prvPortStartFirstTask+0x24>)
90007fea:	6800      	ldr	r0, [r0, #0]
90007fec:	6800      	ldr	r0, [r0, #0]
90007fee:	f380 8808 	msr	MSP, r0
90007ff2:	f04f 0000 	mov.w	r0, #0
90007ff6:	f380 8814 	msr	CONTROL, r0
90007ffa:	b662      	cpsie	i
90007ffc:	b661      	cpsie	f
90007ffe:	f3bf 8f4f 	dsb	sy
90008002:	f3bf 8f6f 	isb	sy
90008006:	df00      	svc	0
90008008:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000800a:	0000      	.short	0x0000
9000800c:	e000ed08 	.word	0xe000ed08

90008010 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
90008010:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 90008020 <vPortEnableVFP+0x10>
90008014:	6801      	ldr	r1, [r0, #0]
90008016:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000801a:	6001      	str	r1, [r0, #0]
9000801c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000801e:	0000      	.short	0x0000
90008020:	e000ed88 	.word	0xe000ed88

90008024 <prvTaskExitError>:
volatile uint32_t ulDummy = 0;
90008024:	2300      	movs	r3, #0
{
90008026:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
90008028:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000802a:	4b0f      	ldr	r3, [pc, #60]	@ (90008068 <prvTaskExitError+0x44>)
9000802c:	681b      	ldr	r3, [r3, #0]
9000802e:	3301      	adds	r3, #1
90008030:	d00a      	beq.n	90008048 <prvTaskExitError+0x24>
90008032:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008036:	b672      	cpsid	i
90008038:	f383 8811 	msr	BASEPRI, r3
9000803c:	f3bf 8f6f 	isb	sy
90008040:	f3bf 8f4f 	dsb	sy
90008044:	b662      	cpsie	i
90008046:	e7fe      	b.n	90008046 <prvTaskExitError+0x22>
90008048:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000804c:	b672      	cpsid	i
9000804e:	f383 8811 	msr	BASEPRI, r3
90008052:	f3bf 8f6f 	isb	sy
90008056:	f3bf 8f4f 	dsb	sy
9000805a:	b662      	cpsie	i
	while( ulDummy == 0 )
9000805c:	9b01      	ldr	r3, [sp, #4]
9000805e:	2b00      	cmp	r3, #0
90008060:	d0fc      	beq.n	9000805c <prvTaskExitError+0x38>
}
90008062:	b002      	add	sp, #8
90008064:	4770      	bx	lr
90008066:	bf00      	nop
90008068:	2000009c 	.word	0x2000009c

9000806c <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000806c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
90008070:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
90008074:	f840 2c20 	str.w	r2, [r0, #-32]
}
90008078:	3844      	subs	r0, #68	@ 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000807a:	6403      	str	r3, [r0, #64]	@ 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000807c:	4b03      	ldr	r3, [pc, #12]	@ (9000808c <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000807e:	63c1      	str	r1, [r0, #60]	@ 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
90008080:	6383      	str	r3, [r0, #56]	@ 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
90008082:	f06f 0302 	mvn.w	r3, #2
90008086:	6203      	str	r3, [r0, #32]
}
90008088:	4770      	bx	lr
9000808a:	bf00      	nop
9000808c:	90008025 	.word	0x90008025

90008090 <SVC_Handler>:
	__asm volatile (
90008090:	4b07      	ldr	r3, [pc, #28]	@ (900080b0 <pxCurrentTCBConst2>)
90008092:	6819      	ldr	r1, [r3, #0]
90008094:	6808      	ldr	r0, [r1, #0]
90008096:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000809a:	f380 8809 	msr	PSP, r0
9000809e:	f3bf 8f6f 	isb	sy
900080a2:	f04f 0000 	mov.w	r0, #0
900080a6:	f380 8811 	msr	BASEPRI, r0
900080aa:	4770      	bx	lr
900080ac:	f3af 8000 	nop.w

900080b0 <pxCurrentTCBConst2>:
900080b0:	20013dbc 	.word	0x20013dbc

900080b4 <vPortEnterCritical>:
900080b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900080b8:	b672      	cpsid	i
900080ba:	f383 8811 	msr	BASEPRI, r3
900080be:	f3bf 8f6f 	isb	sy
900080c2:	f3bf 8f4f 	dsb	sy
900080c6:	b662      	cpsie	i
	uxCriticalNesting++;
900080c8:	4a0b      	ldr	r2, [pc, #44]	@ (900080f8 <vPortEnterCritical+0x44>)
900080ca:	6813      	ldr	r3, [r2, #0]
900080cc:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
900080ce:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
900080d0:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
900080d2:	d110      	bne.n	900080f6 <vPortEnterCritical+0x42>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
900080d4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900080d8:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
900080dc:	b2db      	uxtb	r3, r3
900080de:	b153      	cbz	r3, 900080f6 <vPortEnterCritical+0x42>
900080e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900080e4:	b672      	cpsid	i
900080e6:	f383 8811 	msr	BASEPRI, r3
900080ea:	f3bf 8f6f 	isb	sy
900080ee:	f3bf 8f4f 	dsb	sy
900080f2:	b662      	cpsie	i
900080f4:	e7fe      	b.n	900080f4 <vPortEnterCritical+0x40>
}
900080f6:	4770      	bx	lr
900080f8:	2000009c 	.word	0x2000009c

900080fc <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
900080fc:	4a09      	ldr	r2, [pc, #36]	@ (90008124 <vPortExitCritical+0x28>)
900080fe:	6813      	ldr	r3, [r2, #0]
90008100:	b953      	cbnz	r3, 90008118 <vPortExitCritical+0x1c>
90008102:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008106:	b672      	cpsid	i
90008108:	f383 8811 	msr	BASEPRI, r3
9000810c:	f3bf 8f6f 	isb	sy
90008110:	f3bf 8f4f 	dsb	sy
90008114:	b662      	cpsie	i
90008116:	e7fe      	b.n	90008116 <vPortExitCritical+0x1a>
	uxCriticalNesting--;
90008118:	3b01      	subs	r3, #1
9000811a:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000811c:	b90b      	cbnz	r3, 90008122 <vPortExitCritical+0x26>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000811e:	f383 8811 	msr	BASEPRI, r3
}
90008122:	4770      	bx	lr
90008124:	2000009c 	.word	0x2000009c
	...

90008130 <PendSV_Handler>:
	__asm volatile
90008130:	f3ef 8009 	mrs	r0, PSP
90008134:	f3bf 8f6f 	isb	sy
90008138:	4b15      	ldr	r3, [pc, #84]	@ (90008190 <pxCurrentTCBConst>)
9000813a:	681a      	ldr	r2, [r3, #0]
9000813c:	f01e 0f10 	tst.w	lr, #16
90008140:	bf08      	it	eq
90008142:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
90008146:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000814a:	6010      	str	r0, [r2, #0]
9000814c:	e92d 0009 	stmdb	sp!, {r0, r3}
90008150:	f04f 0050 	mov.w	r0, #80	@ 0x50
90008154:	b672      	cpsid	i
90008156:	f380 8811 	msr	BASEPRI, r0
9000815a:	f3bf 8f4f 	dsb	sy
9000815e:	f3bf 8f6f 	isb	sy
90008162:	b662      	cpsie	i
90008164:	f001 f988 	bl	90009478 <vTaskSwitchContext>
90008168:	f04f 0000 	mov.w	r0, #0
9000816c:	f380 8811 	msr	BASEPRI, r0
90008170:	bc09      	pop	{r0, r3}
90008172:	6819      	ldr	r1, [r3, #0]
90008174:	6808      	ldr	r0, [r1, #0]
90008176:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000817a:	f01e 0f10 	tst.w	lr, #16
9000817e:	bf08      	it	eq
90008180:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
90008184:	f380 8809 	msr	PSP, r0
90008188:	f3bf 8f6f 	isb	sy
9000818c:	4770      	bx	lr
9000818e:	bf00      	nop

90008190 <pxCurrentTCBConst>:
90008190:	20013dbc 	.word	0x20013dbc

90008194 <SysTick_Handler>:
{
90008194:	b508      	push	{r3, lr}
	__asm volatile
90008196:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000819a:	b672      	cpsid	i
9000819c:	f383 8811 	msr	BASEPRI, r3
900081a0:	f3bf 8f6f 	isb	sy
900081a4:	f3bf 8f4f 	dsb	sy
900081a8:	b662      	cpsie	i
		if( xTaskIncrementTick() != pdFALSE )
900081aa:	f000 ffc3 	bl	90009134 <xTaskIncrementTick>
900081ae:	b128      	cbz	r0, 900081bc <SysTick_Handler+0x28>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
900081b0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900081b4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900081b8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
900081bc:	2300      	movs	r3, #0
900081be:	f383 8811 	msr	BASEPRI, r3
}
900081c2:	bd08      	pop	{r3, pc}

900081c4 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
900081c4:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
900081c8:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
900081ca:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
	portNVIC_SYSTICK_CTRL_REG = 0UL;
900081ce:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
900081d0:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
900081d2:	4b04      	ldr	r3, [pc, #16]	@ (900081e4 <vPortSetupTimerInterrupt+0x20>)
900081d4:	681b      	ldr	r3, [r3, #0]
900081d6:	fbb3 f3f1 	udiv	r3, r3, r1
900081da:	3b01      	subs	r3, #1
900081dc:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
900081de:	2307      	movs	r3, #7
900081e0:	6113      	str	r3, [r2, #16]
}
900081e2:	4770      	bx	lr
900081e4:	20000090 	.word	0x20000090

900081e8 <xPortStartScheduler>:
		ulOriginalPriority = *pucFirstUserPriorityRegister;
900081e8:	4b2c      	ldr	r3, [pc, #176]	@ (9000829c <xPortStartScheduler+0xb4>)
{
900081ea:	b537      	push	{r0, r1, r2, r4, r5, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
900081ec:	781a      	ldrb	r2, [r3, #0]
900081ee:	b2d2      	uxtb	r2, r2
900081f0:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
900081f2:	22ff      	movs	r2, #255	@ 0xff
900081f4:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
900081f6:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
900081f8:	4a29      	ldr	r2, [pc, #164]	@ (900082a0 <xPortStartScheduler+0xb8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
900081fa:	b2db      	uxtb	r3, r3
900081fc:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90008200:	f89d 3003 	ldrb.w	r3, [sp, #3]
90008204:	f003 0350 	and.w	r3, r3, #80	@ 0x50
90008208:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000820a:	2307      	movs	r3, #7
9000820c:	4a25      	ldr	r2, [pc, #148]	@ (900082a4 <xPortStartScheduler+0xbc>)
9000820e:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90008210:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
90008214:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90008216:	0609      	lsls	r1, r1, #24
90008218:	d40c      	bmi.n	90008234 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000821a:	2b03      	cmp	r3, #3
9000821c:	d013      	beq.n	90008246 <xPortStartScheduler+0x5e>
	__asm volatile
9000821e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008222:	b672      	cpsid	i
90008224:	f383 8811 	msr	BASEPRI, r3
90008228:	f3bf 8f6f 	isb	sy
9000822c:	f3bf 8f4f 	dsb	sy
90008230:	b662      	cpsie	i
90008232:	e7fe      	b.n	90008232 <xPortStartScheduler+0x4a>
			ulMaxPRIGROUPValue--;
90008234:	3b01      	subs	r3, #1
90008236:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
90008238:	f89d 3003 	ldrb.w	r3, [sp, #3]
9000823c:	005b      	lsls	r3, r3, #1
9000823e:	b2db      	uxtb	r3, r3
90008240:	f88d 3003 	strb.w	r3, [sp, #3]
90008244:	e7e4      	b.n	90008210 <xPortStartScheduler+0x28>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
90008246:	f44f 7340 	mov.w	r3, #768	@ 0x300
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000824a:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
	uxCriticalNesting = 0;
9000824e:	2500      	movs	r5, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
90008250:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
90008252:	9b01      	ldr	r3, [sp, #4]
90008254:	4a11      	ldr	r2, [pc, #68]	@ (9000829c <xPortStartScheduler+0xb4>)
90008256:	b2db      	uxtb	r3, r3
90008258:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000825a:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000825e:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
90008262:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
90008266:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000826a:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
9000826e:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
90008272:	f7ff ffa7 	bl	900081c4 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
90008276:	4b0c      	ldr	r3, [pc, #48]	@ (900082a8 <xPortStartScheduler+0xc0>)
90008278:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
9000827a:	f7ff fec9 	bl	90008010 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000827e:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
90008282:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
90008286:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
9000828a:	f7ff fead 	bl	90007fe8 <prvPortStartFirstTask>
	vTaskSwitchContext();
9000828e:	f001 f8f3 	bl	90009478 <vTaskSwitchContext>
}
90008292:	4628      	mov	r0, r5
	prvTaskExitError();
90008294:	f7ff fec6 	bl	90008024 <prvTaskExitError>
}
90008298:	b003      	add	sp, #12
9000829a:	bd30      	pop	{r4, r5, pc}
9000829c:	e000e400 	.word	0xe000e400
900082a0:	20013880 	.word	0x20013880
900082a4:	2001387c 	.word	0x2001387c
900082a8:	2000009c 	.word	0x2000009c

900082ac <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
900082ac:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
900082b0:	2b0f      	cmp	r3, #15
900082b2:	d910      	bls.n	900082d6 <vPortValidateInterruptPriority+0x2a>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
900082b4:	4a13      	ldr	r2, [pc, #76]	@ (90008304 <vPortValidateInterruptPriority+0x58>)
900082b6:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
900082b8:	4a13      	ldr	r2, [pc, #76]	@ (90008308 <vPortValidateInterruptPriority+0x5c>)
900082ba:	7812      	ldrb	r2, [r2, #0]
900082bc:	429a      	cmp	r2, r3
900082be:	d90a      	bls.n	900082d6 <vPortValidateInterruptPriority+0x2a>
900082c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900082c4:	b672      	cpsid	i
900082c6:	f383 8811 	msr	BASEPRI, r3
900082ca:	f3bf 8f6f 	isb	sy
900082ce:	f3bf 8f4f 	dsb	sy
900082d2:	b662      	cpsie	i
900082d4:	e7fe      	b.n	900082d4 <vPortValidateInterruptPriority+0x28>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
900082d6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900082da:	4a0c      	ldr	r2, [pc, #48]	@ (9000830c <vPortValidateInterruptPriority+0x60>)
900082dc:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
900082e0:	6812      	ldr	r2, [r2, #0]
900082e2:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
900082e6:	4293      	cmp	r3, r2
900082e8:	d90a      	bls.n	90008300 <vPortValidateInterruptPriority+0x54>
900082ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
900082ee:	b672      	cpsid	i
900082f0:	f383 8811 	msr	BASEPRI, r3
900082f4:	f3bf 8f6f 	isb	sy
900082f8:	f3bf 8f4f 	dsb	sy
900082fc:	b662      	cpsie	i
900082fe:	e7fe      	b.n	900082fe <vPortValidateInterruptPriority+0x52>
	}
90008300:	4770      	bx	lr
90008302:	bf00      	nop
90008304:	e000e3f0 	.word	0xe000e3f0
90008308:	20013880 	.word	0x20013880
9000830c:	2001387c 	.word	0x2001387c

90008310 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
90008310:	b510      	push	{r4, lr}
90008312:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
90008314:	f7ff fece 	bl	900080b4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90008318:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000831a:	f7ff feef 	bl	900080fc <vPortExitCritical>

	return xReturn;
}
9000831e:	fab4 f084 	clz	r0, r4
90008322:	0940      	lsrs	r0, r0, #5
90008324:	bd10      	pop	{r4, pc}

90008326 <prvCopyDataToQueue>:
{
90008326:	b570      	push	{r4, r5, r6, lr}
90008328:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000832a:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
9000832c:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000832e:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
90008330:	b942      	cbnz	r2, 90008344 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90008332:	6806      	ldr	r6, [r0, #0]
90008334:	b99e      	cbnz	r6, 9000835e <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
90008336:	6880      	ldr	r0, [r0, #8]
90008338:	f001 fa04 	bl	90009744 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000833c:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000833e:	3501      	adds	r5, #1
90008340:	63a5      	str	r5, [r4, #56]	@ 0x38
}
90008342:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
90008344:	b96e      	cbnz	r6, 90008362 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
90008346:	6840      	ldr	r0, [r0, #4]
90008348:	f020 fb83 	bl	90028a52 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000834c:	6863      	ldr	r3, [r4, #4]
9000834e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
90008350:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
90008352:	68a2      	ldr	r2, [r4, #8]
90008354:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90008356:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
90008358:	bf24      	itt	cs
9000835a:	6823      	ldrcs	r3, [r4, #0]
9000835c:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
9000835e:	2000      	movs	r0, #0
90008360:	e7ed      	b.n	9000833e <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
90008362:	68c0      	ldr	r0, [r0, #12]
90008364:	f020 fb75 	bl	90028a52 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
90008368:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000836a:	68e3      	ldr	r3, [r4, #12]
9000836c:	4251      	negs	r1, r2
9000836e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
90008370:	6822      	ldr	r2, [r4, #0]
90008372:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
90008374:	60e3      	str	r3, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
90008376:	bf3e      	ittt	cc
90008378:	68a3      	ldrcc	r3, [r4, #8]
9000837a:	185b      	addcc	r3, r3, r1
9000837c:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000837e:	2e02      	cmp	r6, #2
90008380:	d1ed      	bne.n	9000835e <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90008382:	b10d      	cbz	r5, 90008388 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
90008384:	3d01      	subs	r5, #1
90008386:	e7ea      	b.n	9000835e <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
90008388:	4628      	mov	r0, r5
9000838a:	e7d8      	b.n	9000833e <prvCopyDataToQueue+0x18>

9000838c <prvCopyDataFromQueue>:
{
9000838c:	4603      	mov	r3, r0
9000838e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90008390:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
90008392:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90008394:	b162      	cbz	r2, 900083b0 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90008396:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90008398:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000839a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000839c:	428c      	cmp	r4, r1
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000839e:	60dc      	str	r4, [r3, #12]
}
900083a0:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
900083a4:	bf24      	itt	cs
900083a6:	6819      	ldrcs	r1, [r3, #0]
900083a8:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
900083aa:	68d9      	ldr	r1, [r3, #12]
900083ac:	f020 bb51 	b.w	90028a52 <memcpy>
}
900083b0:	f85d 4b04 	ldr.w	r4, [sp], #4
900083b4:	4770      	bx	lr

900083b6 <prvUnlockQueue>:
{
900083b6:	b570      	push	{r4, r5, r6, lr}
900083b8:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
900083ba:	f7ff fe7b 	bl	900080b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900083be:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900083c2:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
900083c6:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
900083c8:	2d00      	cmp	r5, #0
900083ca:	dd01      	ble.n	900083d0 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900083cc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900083ce:	b9b3      	cbnz	r3, 900083fe <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
900083d0:	23ff      	movs	r3, #255	@ 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900083d2:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
900083d6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
900083da:	f7ff fe8f 	bl	900080fc <vPortExitCritical>
	taskENTER_CRITICAL();
900083de:	f7ff fe69 	bl	900080b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900083e2:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
900083e6:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
900083e8:	2d00      	cmp	r5, #0
900083ea:	dd01      	ble.n	900083f0 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900083ec:	6923      	ldr	r3, [r4, #16]
900083ee:	b97b      	cbnz	r3, 90008410 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
900083f0:	23ff      	movs	r3, #255	@ 0xff
900083f2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
900083f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
900083fa:	f7ff be7f 	b.w	900080fc <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900083fe:	4630      	mov	r0, r6
90008400:	f001 f8bc 	bl	9000957c <xTaskRemoveFromEventList>
90008404:	b108      	cbz	r0, 9000840a <prvUnlockQueue+0x54>
						vTaskMissedYield();
90008406:	f001 f949 	bl	9000969c <vTaskMissedYield>
			--cTxLock;
9000840a:	3d01      	subs	r5, #1
9000840c:	b26d      	sxtb	r5, r5
9000840e:	e7db      	b.n	900083c8 <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90008410:	4630      	mov	r0, r6
90008412:	f001 f8b3 	bl	9000957c <xTaskRemoveFromEventList>
90008416:	b108      	cbz	r0, 9000841c <prvUnlockQueue+0x66>
					vTaskMissedYield();
90008418:	f001 f940 	bl	9000969c <vTaskMissedYield>
				--cRxLock;
9000841c:	3d01      	subs	r5, #1
9000841e:	b26d      	sxtb	r5, r5
90008420:	e7e2      	b.n	900083e8 <prvUnlockQueue+0x32>

90008422 <xQueueGenericReset>:
{
90008422:	b538      	push	{r3, r4, r5, lr}
90008424:	460d      	mov	r5, r1
	configASSERT( pxQueue );
90008426:	4604      	mov	r4, r0
90008428:	b950      	cbnz	r0, 90008440 <xQueueGenericReset+0x1e>
9000842a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000842e:	b672      	cpsid	i
90008430:	f383 8811 	msr	BASEPRI, r3
90008434:	f3bf 8f6f 	isb	sy
90008438:	f3bf 8f4f 	dsb	sy
9000843c:	b662      	cpsie	i
9000843e:	e7fe      	b.n	9000843e <xQueueGenericReset+0x1c>
	taskENTER_CRITICAL();
90008440:	f7ff fe38 	bl	900080b4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90008444:	6822      	ldr	r2, [r4, #0]
90008446:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000844a:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000844c:	434b      	muls	r3, r1
9000844e:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90008450:	1a5b      	subs	r3, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90008452:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90008454:	441a      	add	r2, r3
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90008456:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
90008458:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000845a:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000845c:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000845e:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90008462:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
90008466:	b9a5      	cbnz	r5, 90008492 <xQueueGenericReset+0x70>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90008468:	6923      	ldr	r3, [r4, #16]
9000846a:	b173      	cbz	r3, 9000848a <xQueueGenericReset+0x68>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000846c:	f104 0010 	add.w	r0, r4, #16
90008470:	f001 f884 	bl	9000957c <xTaskRemoveFromEventList>
90008474:	b148      	cbz	r0, 9000848a <xQueueGenericReset+0x68>
					queueYIELD_IF_USING_PREEMPTION();
90008476:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000847a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000847e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90008482:	f3bf 8f4f 	dsb	sy
90008486:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
9000848a:	f7ff fe37 	bl	900080fc <vPortExitCritical>
}
9000848e:	2001      	movs	r0, #1
90008490:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90008492:	f104 0010 	add.w	r0, r4, #16
90008496:	f7ff fd67 	bl	90007f68 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000849a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000849e:	f7ff fd63 	bl	90007f68 <vListInitialise>
900084a2:	e7f2      	b.n	9000848a <xQueueGenericReset+0x68>

900084a4 <xQueueGenericCreateStatic.part.0>:
	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, StaticQueue_t *pxStaticQueue, const uint8_t ucQueueType )
900084a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
900084a6:	460d      	mov	r5, r1
		configASSERT( pxStaticQueue != NULL );
900084a8:	461c      	mov	r4, r3
900084aa:	b953      	cbnz	r3, 900084c2 <xQueueGenericCreateStatic.part.0+0x1e>
900084ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
900084b0:	b672      	cpsid	i
900084b2:	f383 8811 	msr	BASEPRI, r3
900084b6:	f3bf 8f6f 	isb	sy
900084ba:	f3bf 8f4f 	dsb	sy
900084be:	b662      	cpsie	i
900084c0:	e7fe      	b.n	900084c0 <xQueueGenericCreateStatic.part.0+0x1c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
900084c2:	b15a      	cbz	r2, 900084dc <xQueueGenericCreateStatic.part.0+0x38>
900084c4:	b9b1      	cbnz	r1, 900084f4 <xQueueGenericCreateStatic.part.0+0x50>
900084c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
900084ca:	b672      	cpsid	i
900084cc:	f383 8811 	msr	BASEPRI, r3
900084d0:	f3bf 8f6f 	isb	sy
900084d4:	f3bf 8f4f 	dsb	sy
900084d8:	b662      	cpsie	i
900084da:	e7fe      	b.n	900084da <xQueueGenericCreateStatic.part.0+0x36>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
900084dc:	b151      	cbz	r1, 900084f4 <xQueueGenericCreateStatic.part.0+0x50>
900084de:	f04f 0350 	mov.w	r3, #80	@ 0x50
900084e2:	b672      	cpsid	i
900084e4:	f383 8811 	msr	BASEPRI, r3
900084e8:	f3bf 8f6f 	isb	sy
900084ec:	f3bf 8f4f 	dsb	sy
900084f0:	b662      	cpsie	i
900084f2:	e7fe      	b.n	900084f2 <xQueueGenericCreateStatic.part.0+0x4e>
			volatile size_t xSize = sizeof( StaticQueue_t );
900084f4:	2350      	movs	r3, #80	@ 0x50
900084f6:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
900084f8:	9b01      	ldr	r3, [sp, #4]
900084fa:	2b50      	cmp	r3, #80	@ 0x50
900084fc:	d00a      	beq.n	90008514 <xQueueGenericCreateStatic.part.0+0x70>
900084fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008502:	b672      	cpsid	i
90008504:	f383 8811 	msr	BASEPRI, r3
90008508:	f3bf 8f6f 	isb	sy
9000850c:	f3bf 8f4f 	dsb	sy
90008510:	b662      	cpsie	i
90008512:	e7fe      	b.n	90008512 <xQueueGenericCreateStatic.part.0+0x6e>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90008514:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90008516:	2d00      	cmp	r5, #0
90008518:	bf08      	it	eq
9000851a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000851c:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000851e:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
90008522:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
90008524:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
90008528:	4620      	mov	r0, r4
9000852a:	f7ff ff7a 	bl	90008422 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
9000852e:	f89d 3018 	ldrb.w	r3, [sp, #24]
	}
90008532:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90008534:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
90008538:	b003      	add	sp, #12
9000853a:	bd30      	pop	{r4, r5, pc}

9000853c <xQueueGenericCreateStatic>:
	{
9000853c:	b410      	push	{r4}
9000853e:	f89d 4004 	ldrb.w	r4, [sp, #4]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
90008542:	b950      	cbnz	r0, 9000855a <xQueueGenericCreateStatic+0x1e>
90008544:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008548:	b672      	cpsid	i
9000854a:	f383 8811 	msr	BASEPRI, r3
9000854e:	f3bf 8f6f 	isb	sy
90008552:	f3bf 8f4f 	dsb	sy
90008556:	b662      	cpsie	i
90008558:	e7fe      	b.n	90008558 <xQueueGenericCreateStatic+0x1c>
9000855a:	9401      	str	r4, [sp, #4]
	}
9000855c:	f85d 4b04 	ldr.w	r4, [sp], #4
90008560:	f7ff bfa0 	b.w	900084a4 <xQueueGenericCreateStatic.part.0>

90008564 <xQueueGenericCreate>:
	{
90008564:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90008566:	460d      	mov	r5, r1
90008568:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000856a:	4606      	mov	r6, r0
9000856c:	b950      	cbnz	r0, 90008584 <xQueueGenericCreate+0x20>
9000856e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008572:	b672      	cpsid	i
90008574:	f383 8811 	msr	BASEPRI, r3
90008578:	f3bf 8f6f 	isb	sy
9000857c:	f3bf 8f4f 	dsb	sy
90008580:	b662      	cpsie	i
90008582:	e7fe      	b.n	90008582 <xQueueGenericCreate+0x1e>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90008584:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90008586:	3050      	adds	r0, #80	@ 0x50
90008588:	f7ff fc1e 	bl	90007dc8 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000858c:	4604      	mov	r4, r0
9000858e:	b170      	cbz	r0, 900085ae <xQueueGenericCreate+0x4a>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90008590:	2300      	movs	r3, #0
90008592:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
90008596:	b165      	cbz	r5, 900085b2 <xQueueGenericCreate+0x4e>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90008598:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
9000859c:	2101      	movs	r1, #1
9000859e:	4620      	mov	r0, r4
900085a0:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
900085a2:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
900085a6:	f7ff ff3c 	bl	90008422 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
900085aa:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
900085ae:	4620      	mov	r0, r4
900085b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
900085b2:	4603      	mov	r3, r0
900085b4:	e7f2      	b.n	9000859c <xQueueGenericCreate+0x38>

900085b6 <xQueueCreateCountingSemaphoreStatic>:
	{
900085b6:	b513      	push	{r0, r1, r4, lr}
900085b8:	4613      	mov	r3, r2
900085ba:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
900085bc:	b950      	cbnz	r0, 900085d4 <xQueueCreateCountingSemaphoreStatic+0x1e>
900085be:	f04f 0350 	mov.w	r3, #80	@ 0x50
900085c2:	b672      	cpsid	i
900085c4:	f383 8811 	msr	BASEPRI, r3
900085c8:	f3bf 8f6f 	isb	sy
900085cc:	f3bf 8f4f 	dsb	sy
900085d0:	b662      	cpsie	i
900085d2:	e7fe      	b.n	900085d2 <xQueueCreateCountingSemaphoreStatic+0x1c>
		configASSERT( uxInitialCount <= uxMaxCount );
900085d4:	4288      	cmp	r0, r1
900085d6:	d20a      	bcs.n	900085ee <xQueueCreateCountingSemaphoreStatic+0x38>
900085d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900085dc:	b672      	cpsid	i
900085de:	f383 8811 	msr	BASEPRI, r3
900085e2:	f3bf 8f6f 	isb	sy
900085e6:	f3bf 8f4f 	dsb	sy
900085ea:	b662      	cpsie	i
900085ec:	e7fe      	b.n	900085ec <xQueueCreateCountingSemaphoreStatic+0x36>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
900085ee:	2202      	movs	r2, #2
900085f0:	9200      	str	r2, [sp, #0]
900085f2:	2200      	movs	r2, #0
900085f4:	4611      	mov	r1, r2
900085f6:	f7ff ffa1 	bl	9000853c <xQueueGenericCreateStatic>
		if( xHandle != NULL )
900085fa:	b100      	cbz	r0, 900085fe <xQueueCreateCountingSemaphoreStatic+0x48>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
900085fc:	6384      	str	r4, [r0, #56]	@ 0x38
	}
900085fe:	b002      	add	sp, #8
90008600:	bd10      	pop	{r4, pc}

90008602 <xQueueCreateCountingSemaphore>:
	{
90008602:	b510      	push	{r4, lr}
90008604:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
90008606:	b950      	cbnz	r0, 9000861e <xQueueCreateCountingSemaphore+0x1c>
90008608:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000860c:	b672      	cpsid	i
9000860e:	f383 8811 	msr	BASEPRI, r3
90008612:	f3bf 8f6f 	isb	sy
90008616:	f3bf 8f4f 	dsb	sy
9000861a:	b662      	cpsie	i
9000861c:	e7fe      	b.n	9000861c <xQueueCreateCountingSemaphore+0x1a>
		configASSERT( uxInitialCount <= uxMaxCount );
9000861e:	4288      	cmp	r0, r1
90008620:	d20a      	bcs.n	90008638 <xQueueCreateCountingSemaphore+0x36>
90008622:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008626:	b672      	cpsid	i
90008628:	f383 8811 	msr	BASEPRI, r3
9000862c:	f3bf 8f6f 	isb	sy
90008630:	f3bf 8f4f 	dsb	sy
90008634:	b662      	cpsie	i
90008636:	e7fe      	b.n	90008636 <xQueueCreateCountingSemaphore+0x34>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
90008638:	2202      	movs	r2, #2
9000863a:	2100      	movs	r1, #0
9000863c:	f7ff ff92 	bl	90008564 <xQueueGenericCreate>
		if( xHandle != NULL )
90008640:	b100      	cbz	r0, 90008644 <xQueueCreateCountingSemaphore+0x42>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
90008642:	6384      	str	r4, [r0, #56]	@ 0x38
	}
90008644:	bd10      	pop	{r4, pc}

90008646 <xQueueGenericSend>:
{
90008646:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9000864a:	460f      	mov	r7, r1
9000864c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
9000864e:	4604      	mov	r4, r0
{
90008650:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
90008652:	b950      	cbnz	r0, 9000866a <xQueueGenericSend+0x24>
90008654:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008658:	b672      	cpsid	i
9000865a:	f383 8811 	msr	BASEPRI, r3
9000865e:	f3bf 8f6f 	isb	sy
90008662:	f3bf 8f4f 	dsb	sy
90008666:	b662      	cpsie	i
90008668:	e7fe      	b.n	90008668 <xQueueGenericSend+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000866a:	b961      	cbnz	r1, 90008686 <xQueueGenericSend+0x40>
9000866c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000866e:	b153      	cbz	r3, 90008686 <xQueueGenericSend+0x40>
90008670:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008674:	b672      	cpsid	i
90008676:	f383 8811 	msr	BASEPRI, r3
9000867a:	f3bf 8f6f 	isb	sy
9000867e:	f3bf 8f4f 	dsb	sy
90008682:	b662      	cpsie	i
90008684:	e7fe      	b.n	90008684 <xQueueGenericSend+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
90008686:	2e02      	cmp	r6, #2
90008688:	d10d      	bne.n	900086a6 <xQueueGenericSend+0x60>
9000868a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000868c:	2b01      	cmp	r3, #1
9000868e:	d00a      	beq.n	900086a6 <xQueueGenericSend+0x60>
90008690:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008694:	b672      	cpsid	i
90008696:	f383 8811 	msr	BASEPRI, r3
9000869a:	f3bf 8f6f 	isb	sy
9000869e:	f3bf 8f4f 	dsb	sy
900086a2:	b662      	cpsie	i
900086a4:	e7fe      	b.n	900086a4 <xQueueGenericSend+0x5e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900086a6:	f000 ffff 	bl	900096a8 <xTaskGetSchedulerState>
900086aa:	4605      	mov	r5, r0
900086ac:	b320      	cbz	r0, 900086f8 <xQueueGenericSend+0xb2>
900086ae:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
900086b0:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
900086b4:	f7ff fcfe 	bl	900080b4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
900086b8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
900086ba:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900086bc:	429a      	cmp	r2, r3
900086be:	d229      	bcs.n	90008714 <xQueueGenericSend+0xce>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
900086c0:	4632      	mov	r2, r6
900086c2:	4639      	mov	r1, r7
900086c4:	4620      	mov	r0, r4
900086c6:	f7ff fe2e 	bl	90008326 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900086ca:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900086cc:	b11b      	cbz	r3, 900086d6 <xQueueGenericSend+0x90>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900086ce:	f104 0024 	add.w	r0, r4, #36	@ 0x24
900086d2:	f000 ff53 	bl	9000957c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
900086d6:	b148      	cbz	r0, 900086ec <xQueueGenericSend+0xa6>
						queueYIELD_IF_USING_PREEMPTION();
900086d8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900086dc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900086e0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900086e4:	f3bf 8f4f 	dsb	sy
900086e8:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
900086ec:	f7ff fd06 	bl	900080fc <vPortExitCritical>
				return pdPASS;
900086f0:	2001      	movs	r0, #1
}
900086f2:	b004      	add	sp, #16
900086f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900086f8:	9b01      	ldr	r3, [sp, #4]
900086fa:	2b00      	cmp	r3, #0
900086fc:	d0d8      	beq.n	900086b0 <xQueueGenericSend+0x6a>
900086fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008702:	b672      	cpsid	i
90008704:	f383 8811 	msr	BASEPRI, r3
90008708:	f3bf 8f6f 	isb	sy
9000870c:	f3bf 8f4f 	dsb	sy
90008710:	b662      	cpsie	i
90008712:	e7fe      	b.n	90008712 <xQueueGenericSend+0xcc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90008714:	2e02      	cmp	r6, #2
90008716:	d0d3      	beq.n	900086c0 <xQueueGenericSend+0x7a>
				if( xTicksToWait == ( TickType_t ) 0 )
90008718:	9b01      	ldr	r3, [sp, #4]
9000871a:	b91b      	cbnz	r3, 90008724 <xQueueGenericSend+0xde>
					taskEXIT_CRITICAL();
9000871c:	f7ff fcee 	bl	900080fc <vPortExitCritical>
					return errQUEUE_FULL;
90008720:	2000      	movs	r0, #0
90008722:	e7e6      	b.n	900086f2 <xQueueGenericSend+0xac>
				else if( xEntryTimeSet == pdFALSE )
90008724:	b915      	cbnz	r5, 9000872c <xQueueGenericSend+0xe6>
					vTaskInternalSetTimeOutState( &xTimeOut );
90008726:	a802      	add	r0, sp, #8
90008728:	f000 ff6c 	bl	90009604 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000872c:	f7ff fce6 	bl	900080fc <vPortExitCritical>
		vTaskSuspendAll();
90008730:	f000 fcf2 	bl	90009118 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90008734:	f7ff fcbe 	bl	900080b4 <vPortEnterCritical>
90008738:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000873c:	2bff      	cmp	r3, #255	@ 0xff
9000873e:	d101      	bne.n	90008744 <xQueueGenericSend+0xfe>
90008740:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
90008744:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90008748:	2bff      	cmp	r3, #255	@ 0xff
9000874a:	d101      	bne.n	90008750 <xQueueGenericSend+0x10a>
9000874c:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
90008750:	f7ff fcd4 	bl	900080fc <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90008754:	a901      	add	r1, sp, #4
90008756:	a802      	add	r0, sp, #8
90008758:	f000 ff60 	bl	9000961c <xTaskCheckForTimeOut>
9000875c:	bb38      	cbnz	r0, 900087ae <xQueueGenericSend+0x168>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000875e:	f7ff fca9 	bl	900080b4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
90008762:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90008764:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90008766:	429a      	cmp	r2, r3
90008768:	d10e      	bne.n	90008788 <xQueueGenericSend+0x142>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000876a:	f7ff fcc7 	bl	900080fc <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000876e:	9901      	ldr	r1, [sp, #4]
90008770:	f104 0010 	add.w	r0, r4, #16
90008774:	f000 fec6 	bl	90009504 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
90008778:	4620      	mov	r0, r4
9000877a:	f7ff fe1c 	bl	900083b6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
9000877e:	f000 fd71 	bl	90009264 <xTaskResumeAll>
90008782:	b148      	cbz	r0, 90008798 <xQueueGenericSend+0x152>
90008784:	2501      	movs	r5, #1
90008786:	e795      	b.n	900086b4 <xQueueGenericSend+0x6e>
	taskEXIT_CRITICAL();
90008788:	f7ff fcb8 	bl	900080fc <vPortExitCritical>
				prvUnlockQueue( pxQueue );
9000878c:	4620      	mov	r0, r4
9000878e:	f7ff fe12 	bl	900083b6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
90008792:	f000 fd67 	bl	90009264 <xTaskResumeAll>
90008796:	e7f5      	b.n	90008784 <xQueueGenericSend+0x13e>
					portYIELD_WITHIN_API();
90008798:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000879c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900087a0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900087a4:	f3bf 8f4f 	dsb	sy
900087a8:	f3bf 8f6f 	isb	sy
900087ac:	e7ea      	b.n	90008784 <xQueueGenericSend+0x13e>
			prvUnlockQueue( pxQueue );
900087ae:	4620      	mov	r0, r4
900087b0:	f7ff fe01 	bl	900083b6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
900087b4:	f000 fd56 	bl	90009264 <xTaskResumeAll>
			return errQUEUE_FULL;
900087b8:	e7b2      	b.n	90008720 <xQueueGenericSend+0xda>

900087ba <xQueueGenericSendFromISR>:
{
900087ba:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900087be:	4689      	mov	r9, r1
900087c0:	4617      	mov	r7, r2
900087c2:	461e      	mov	r6, r3
	configASSERT( pxQueue );
900087c4:	4604      	mov	r4, r0
900087c6:	b950      	cbnz	r0, 900087de <xQueueGenericSendFromISR+0x24>
900087c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900087cc:	b672      	cpsid	i
900087ce:	f383 8811 	msr	BASEPRI, r3
900087d2:	f3bf 8f6f 	isb	sy
900087d6:	f3bf 8f4f 	dsb	sy
900087da:	b662      	cpsie	i
900087dc:	e7fe      	b.n	900087dc <xQueueGenericSendFromISR+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900087de:	b961      	cbnz	r1, 900087fa <xQueueGenericSendFromISR+0x40>
900087e0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
900087e2:	b153      	cbz	r3, 900087fa <xQueueGenericSendFromISR+0x40>
900087e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900087e8:	b672      	cpsid	i
900087ea:	f383 8811 	msr	BASEPRI, r3
900087ee:	f3bf 8f6f 	isb	sy
900087f2:	f3bf 8f4f 	dsb	sy
900087f6:	b662      	cpsie	i
900087f8:	e7fe      	b.n	900087f8 <xQueueGenericSendFromISR+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
900087fa:	2e02      	cmp	r6, #2
900087fc:	d10d      	bne.n	9000881a <xQueueGenericSendFromISR+0x60>
900087fe:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90008800:	2b01      	cmp	r3, #1
90008802:	d00a      	beq.n	9000881a <xQueueGenericSendFromISR+0x60>
90008804:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008808:	b672      	cpsid	i
9000880a:	f383 8811 	msr	BASEPRI, r3
9000880e:	f3bf 8f6f 	isb	sy
90008812:	f3bf 8f4f 	dsb	sy
90008816:	b662      	cpsie	i
90008818:	e7fe      	b.n	90008818 <xQueueGenericSendFromISR+0x5e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000881a:	f7ff fd47 	bl	900082ac <vPortValidateInterruptPriority>
	__asm volatile
9000881e:	f3ef 8811 	mrs	r8, BASEPRI
90008822:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008826:	b672      	cpsid	i
90008828:	f383 8811 	msr	BASEPRI, r3
9000882c:	f3bf 8f6f 	isb	sy
90008830:	f3bf 8f4f 	dsb	sy
90008834:	b662      	cpsie	i
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90008836:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90008838:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000883a:	429a      	cmp	r2, r3
9000883c:	d301      	bcc.n	90008842 <xQueueGenericSendFromISR+0x88>
9000883e:	2e02      	cmp	r6, #2
90008840:	d11d      	bne.n	9000887e <xQueueGenericSendFromISR+0xc4>
			const int8_t cTxLock = pxQueue->cTxLock;
90008842:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90008846:	4632      	mov	r2, r6
90008848:	4649      	mov	r1, r9
9000884a:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000884c:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000884e:	f7ff fd6a 	bl	90008326 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
90008852:	1c6b      	adds	r3, r5, #1
90008854:	d10e      	bne.n	90008874 <xQueueGenericSendFromISR+0xba>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90008856:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90008858:	b13b      	cbz	r3, 9000886a <xQueueGenericSendFromISR+0xb0>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000885a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000885e:	f000 fe8d 	bl	9000957c <xTaskRemoveFromEventList>
90008862:	b110      	cbz	r0, 9000886a <xQueueGenericSendFromISR+0xb0>
							if( pxHigherPriorityTaskWoken != NULL )
90008864:	b10f      	cbz	r7, 9000886a <xQueueGenericSendFromISR+0xb0>
								*pxHigherPriorityTaskWoken = pdTRUE;
90008866:	2301      	movs	r3, #1
90008868:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
9000886a:	2001      	movs	r0, #1
	__asm volatile
9000886c:	f388 8811 	msr	BASEPRI, r8
}
90008870:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90008874:	3501      	adds	r5, #1
90008876:	b26d      	sxtb	r5, r5
90008878:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
9000887c:	e7f5      	b.n	9000886a <xQueueGenericSendFromISR+0xb0>
			xReturn = errQUEUE_FULL;
9000887e:	2000      	movs	r0, #0
90008880:	e7f4      	b.n	9000886c <xQueueGenericSendFromISR+0xb2>

90008882 <xQueueGiveFromISR>:
{
90008882:	b570      	push	{r4, r5, r6, lr}
90008884:	460d      	mov	r5, r1
	configASSERT( pxQueue );
90008886:	4604      	mov	r4, r0
90008888:	b950      	cbnz	r0, 900088a0 <xQueueGiveFromISR+0x1e>
	__asm volatile
9000888a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000888e:	b672      	cpsid	i
90008890:	f383 8811 	msr	BASEPRI, r3
90008894:	f3bf 8f6f 	isb	sy
90008898:	f3bf 8f4f 	dsb	sy
9000889c:	b662      	cpsie	i
9000889e:	e7fe      	b.n	9000889e <xQueueGiveFromISR+0x1c>
	configASSERT( pxQueue->uxItemSize == 0 );
900088a0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
900088a2:	b153      	cbz	r3, 900088ba <xQueueGiveFromISR+0x38>
900088a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900088a8:	b672      	cpsid	i
900088aa:	f383 8811 	msr	BASEPRI, r3
900088ae:	f3bf 8f6f 	isb	sy
900088b2:	f3bf 8f4f 	dsb	sy
900088b6:	b662      	cpsie	i
900088b8:	e7fe      	b.n	900088b8 <xQueueGiveFromISR+0x36>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
900088ba:	6803      	ldr	r3, [r0, #0]
900088bc:	b963      	cbnz	r3, 900088d8 <xQueueGiveFromISR+0x56>
900088be:	6883      	ldr	r3, [r0, #8]
900088c0:	b153      	cbz	r3, 900088d8 <xQueueGiveFromISR+0x56>
900088c2:	f04f 0350 	mov.w	r3, #80	@ 0x50
900088c6:	b672      	cpsid	i
900088c8:	f383 8811 	msr	BASEPRI, r3
900088cc:	f3bf 8f6f 	isb	sy
900088d0:	f3bf 8f4f 	dsb	sy
900088d4:	b662      	cpsie	i
900088d6:	e7fe      	b.n	900088d6 <xQueueGiveFromISR+0x54>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
900088d8:	f7ff fce8 	bl	900082ac <vPortValidateInterruptPriority>
	__asm volatile
900088dc:	f3ef 8611 	mrs	r6, BASEPRI
900088e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900088e4:	b672      	cpsid	i
900088e6:	f383 8811 	msr	BASEPRI, r3
900088ea:	f3bf 8f6f 	isb	sy
900088ee:	f3bf 8f4f 	dsb	sy
900088f2:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
900088f4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
900088f6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900088f8:	4293      	cmp	r3, r2
900088fa:	d919      	bls.n	90008930 <xQueueGiveFromISR+0xae>
			const int8_t cTxLock = pxQueue->cTxLock;
900088fc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90008900:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
90008902:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
90008904:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90008906:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
90008908:	d10d      	bne.n	90008926 <xQueueGiveFromISR+0xa4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000890a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000890c:	b13b      	cbz	r3, 9000891e <xQueueGiveFromISR+0x9c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000890e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90008912:	f000 fe33 	bl	9000957c <xTaskRemoveFromEventList>
90008916:	b110      	cbz	r0, 9000891e <xQueueGiveFromISR+0x9c>
							if( pxHigherPriorityTaskWoken != NULL )
90008918:	b10d      	cbz	r5, 9000891e <xQueueGiveFromISR+0x9c>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000891a:	2301      	movs	r3, #1
9000891c:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
9000891e:	2001      	movs	r0, #1
	__asm volatile
90008920:	f386 8811 	msr	BASEPRI, r6
}
90008924:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90008926:	3301      	adds	r3, #1
90008928:	b25b      	sxtb	r3, r3
9000892a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000892e:	e7f6      	b.n	9000891e <xQueueGiveFromISR+0x9c>
			xReturn = errQUEUE_FULL;
90008930:	2000      	movs	r0, #0
90008932:	e7f5      	b.n	90008920 <xQueueGiveFromISR+0x9e>

90008934 <xQueueReceive>:
{
90008934:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90008938:	460e      	mov	r6, r1
	configASSERT( ( pxQueue ) );
9000893a:	4604      	mov	r4, r0
{
9000893c:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000893e:	b950      	cbnz	r0, 90008956 <xQueueReceive+0x22>
	__asm volatile
90008940:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008944:	b672      	cpsid	i
90008946:	f383 8811 	msr	BASEPRI, r3
9000894a:	f3bf 8f6f 	isb	sy
9000894e:	f3bf 8f4f 	dsb	sy
90008952:	b662      	cpsie	i
90008954:	e7fe      	b.n	90008954 <xQueueReceive+0x20>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90008956:	b961      	cbnz	r1, 90008972 <xQueueReceive+0x3e>
90008958:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000895a:	b153      	cbz	r3, 90008972 <xQueueReceive+0x3e>
9000895c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008960:	b672      	cpsid	i
90008962:	f383 8811 	msr	BASEPRI, r3
90008966:	f3bf 8f6f 	isb	sy
9000896a:	f3bf 8f4f 	dsb	sy
9000896e:	b662      	cpsie	i
90008970:	e7fe      	b.n	90008970 <xQueueReceive+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90008972:	f000 fe99 	bl	900096a8 <xTaskGetSchedulerState>
90008976:	4605      	mov	r5, r0
90008978:	b318      	cbz	r0, 900089c2 <xQueueReceive+0x8e>
9000897a:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
9000897c:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
90008980:	f7ff fb98 	bl	900080b4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90008984:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90008986:	b357      	cbz	r7, 900089de <xQueueReceive+0xaa>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90008988:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
9000898a:	4631      	mov	r1, r6
9000898c:	4620      	mov	r0, r4
9000898e:	f7ff fcfd 	bl	9000838c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90008992:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90008994:	6923      	ldr	r3, [r4, #16]
90008996:	b173      	cbz	r3, 900089b6 <xQueueReceive+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90008998:	f104 0010 	add.w	r0, r4, #16
9000899c:	f000 fdee 	bl	9000957c <xTaskRemoveFromEventList>
900089a0:	b148      	cbz	r0, 900089b6 <xQueueReceive+0x82>
						queueYIELD_IF_USING_PREEMPTION();
900089a2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900089a6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900089aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900089ae:	f3bf 8f4f 	dsb	sy
900089b2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
900089b6:	f7ff fba1 	bl	900080fc <vPortExitCritical>
				return pdPASS;
900089ba:	2001      	movs	r0, #1
}
900089bc:	b004      	add	sp, #16
900089be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900089c2:	9b01      	ldr	r3, [sp, #4]
900089c4:	2b00      	cmp	r3, #0
900089c6:	d0d9      	beq.n	9000897c <xQueueReceive+0x48>
900089c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900089cc:	b672      	cpsid	i
900089ce:	f383 8811 	msr	BASEPRI, r3
900089d2:	f3bf 8f6f 	isb	sy
900089d6:	f3bf 8f4f 	dsb	sy
900089da:	b662      	cpsie	i
900089dc:	e7fe      	b.n	900089dc <xQueueReceive+0xa8>
				if( xTicksToWait == ( TickType_t ) 0 )
900089de:	9b01      	ldr	r3, [sp, #4]
900089e0:	b91b      	cbnz	r3, 900089ea <xQueueReceive+0xb6>
					taskEXIT_CRITICAL();
900089e2:	f7ff fb8b 	bl	900080fc <vPortExitCritical>
					return errQUEUE_EMPTY;
900089e6:	2000      	movs	r0, #0
900089e8:	e7e8      	b.n	900089bc <xQueueReceive+0x88>
				else if( xEntryTimeSet == pdFALSE )
900089ea:	b915      	cbnz	r5, 900089f2 <xQueueReceive+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
900089ec:	a802      	add	r0, sp, #8
900089ee:	f000 fe09 	bl	90009604 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
900089f2:	f7ff fb83 	bl	900080fc <vPortExitCritical>
		vTaskSuspendAll();
900089f6:	f000 fb8f 	bl	90009118 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
900089fa:	f7ff fb5b 	bl	900080b4 <vPortEnterCritical>
900089fe:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90008a02:	2bff      	cmp	r3, #255	@ 0xff
90008a04:	d101      	bne.n	90008a0a <xQueueReceive+0xd6>
90008a06:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
90008a0a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90008a0e:	2bff      	cmp	r3, #255	@ 0xff
90008a10:	d101      	bne.n	90008a16 <xQueueReceive+0xe2>
90008a12:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
90008a16:	f7ff fb71 	bl	900080fc <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90008a1a:	a901      	add	r1, sp, #4
90008a1c:	a802      	add	r0, sp, #8
90008a1e:	f000 fdfd 	bl	9000961c <xTaskCheckForTimeOut>
90008a22:	bb00      	cbnz	r0, 90008a66 <xQueueReceive+0x132>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
90008a24:	4620      	mov	r0, r4
90008a26:	f7ff fc73 	bl	90008310 <prvIsQueueEmpty>
90008a2a:	b1b0      	cbz	r0, 90008a5a <xQueueReceive+0x126>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90008a2c:	9901      	ldr	r1, [sp, #4]
90008a2e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90008a32:	f000 fd67 	bl	90009504 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
90008a36:	4620      	mov	r0, r4
90008a38:	f7ff fcbd 	bl	900083b6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
90008a3c:	f000 fc12 	bl	90009264 <xTaskResumeAll>
90008a40:	b948      	cbnz	r0, 90008a56 <xQueueReceive+0x122>
					portYIELD_WITHIN_API();
90008a42:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90008a46:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90008a4a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90008a4e:	f3bf 8f4f 	dsb	sy
90008a52:	f3bf 8f6f 	isb	sy
90008a56:	2501      	movs	r5, #1
90008a58:	e792      	b.n	90008980 <xQueueReceive+0x4c>
				prvUnlockQueue( pxQueue );
90008a5a:	4620      	mov	r0, r4
90008a5c:	f7ff fcab 	bl	900083b6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
90008a60:	f000 fc00 	bl	90009264 <xTaskResumeAll>
90008a64:	e7f7      	b.n	90008a56 <xQueueReceive+0x122>
			prvUnlockQueue( pxQueue );
90008a66:	4620      	mov	r0, r4
90008a68:	f7ff fca5 	bl	900083b6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
90008a6c:	f000 fbfa 	bl	90009264 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
90008a70:	4620      	mov	r0, r4
90008a72:	f7ff fc4d 	bl	90008310 <prvIsQueueEmpty>
90008a76:	2800      	cmp	r0, #0
90008a78:	d0ed      	beq.n	90008a56 <xQueueReceive+0x122>
90008a7a:	e7b4      	b.n	900089e6 <xQueueReceive+0xb2>

90008a7c <xQueueSemaphoreTake>:
{
90008a7c:	b5f0      	push	{r4, r5, r6, r7, lr}
90008a7e:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
90008a80:	4604      	mov	r4, r0
{
90008a82:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
90008a84:	b950      	cbnz	r0, 90008a9c <xQueueSemaphoreTake+0x20>
90008a86:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008a8a:	b672      	cpsid	i
90008a8c:	f383 8811 	msr	BASEPRI, r3
90008a90:	f3bf 8f6f 	isb	sy
90008a94:	f3bf 8f4f 	dsb	sy
90008a98:	b662      	cpsie	i
90008a9a:	e7fe      	b.n	90008a9a <xQueueSemaphoreTake+0x1e>
	configASSERT( pxQueue->uxItemSize == 0 );
90008a9c:	6c05      	ldr	r5, [r0, #64]	@ 0x40
90008a9e:	b155      	cbz	r5, 90008ab6 <xQueueSemaphoreTake+0x3a>
90008aa0:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008aa4:	b672      	cpsid	i
90008aa6:	f383 8811 	msr	BASEPRI, r3
90008aaa:	f3bf 8f6f 	isb	sy
90008aae:	f3bf 8f4f 	dsb	sy
90008ab2:	b662      	cpsie	i
90008ab4:	e7fe      	b.n	90008ab4 <xQueueSemaphoreTake+0x38>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90008ab6:	f000 fdf7 	bl	900096a8 <xTaskGetSchedulerState>
90008aba:	4606      	mov	r6, r0
90008abc:	b320      	cbz	r0, 90008b08 <xQueueSemaphoreTake+0x8c>
90008abe:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
90008ac0:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
90008ac2:	f7ff faf7 	bl	900080b4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
90008ac6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
90008ac8:	b363      	cbz	r3, 90008b24 <xQueueSemaphoreTake+0xa8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
90008aca:	3b01      	subs	r3, #1
90008acc:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90008ace:	6823      	ldr	r3, [r4, #0]
90008ad0:	b913      	cbnz	r3, 90008ad8 <xQueueSemaphoreTake+0x5c>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
90008ad2:	f000 fecf 	bl	90009874 <pvTaskIncrementMutexHeldCount>
90008ad6:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90008ad8:	6923      	ldr	r3, [r4, #16]
90008ada:	b173      	cbz	r3, 90008afa <xQueueSemaphoreTake+0x7e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90008adc:	f104 0010 	add.w	r0, r4, #16
90008ae0:	f000 fd4c 	bl	9000957c <xTaskRemoveFromEventList>
90008ae4:	b148      	cbz	r0, 90008afa <xQueueSemaphoreTake+0x7e>
						queueYIELD_IF_USING_PREEMPTION();
90008ae6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90008aea:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90008aee:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90008af2:	f3bf 8f4f 	dsb	sy
90008af6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
90008afa:	f7ff faff 	bl	900080fc <vPortExitCritical>
				return pdPASS;
90008afe:	2001      	movs	r0, #1
}
90008b00:	b005      	add	sp, #20
90008b02:	bdf0      	pop	{r4, r5, r6, r7, pc}
90008b04:	4635      	mov	r5, r6
90008b06:	e7db      	b.n	90008ac0 <xQueueSemaphoreTake+0x44>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90008b08:	9b01      	ldr	r3, [sp, #4]
90008b0a:	2b00      	cmp	r3, #0
90008b0c:	d0fa      	beq.n	90008b04 <xQueueSemaphoreTake+0x88>
90008b0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008b12:	b672      	cpsid	i
90008b14:	f383 8811 	msr	BASEPRI, r3
90008b18:	f3bf 8f6f 	isb	sy
90008b1c:	f3bf 8f4f 	dsb	sy
90008b20:	b662      	cpsie	i
90008b22:	e7fe      	b.n	90008b22 <xQueueSemaphoreTake+0xa6>
				if( xTicksToWait == ( TickType_t ) 0 )
90008b24:	9b01      	ldr	r3, [sp, #4]
90008b26:	b963      	cbnz	r3, 90008b42 <xQueueSemaphoreTake+0xc6>
						configASSERT( xInheritanceOccurred == pdFALSE );
90008b28:	2d00      	cmp	r5, #0
90008b2a:	d068      	beq.n	90008bfe <xQueueSemaphoreTake+0x182>
90008b2c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008b30:	b672      	cpsid	i
90008b32:	f383 8811 	msr	BASEPRI, r3
90008b36:	f3bf 8f6f 	isb	sy
90008b3a:	f3bf 8f4f 	dsb	sy
90008b3e:	b662      	cpsie	i
90008b40:	e7fe      	b.n	90008b40 <xQueueSemaphoreTake+0xc4>
				else if( xEntryTimeSet == pdFALSE )
90008b42:	b916      	cbnz	r6, 90008b4a <xQueueSemaphoreTake+0xce>
					vTaskInternalSetTimeOutState( &xTimeOut );
90008b44:	a802      	add	r0, sp, #8
90008b46:	f000 fd5d 	bl	90009604 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
90008b4a:	f7ff fad7 	bl	900080fc <vPortExitCritical>
		vTaskSuspendAll();
90008b4e:	f000 fae3 	bl	90009118 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90008b52:	f7ff faaf 	bl	900080b4 <vPortEnterCritical>
90008b56:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90008b5a:	2bff      	cmp	r3, #255	@ 0xff
90008b5c:	d101      	bne.n	90008b62 <xQueueSemaphoreTake+0xe6>
90008b5e:	f884 7044 	strb.w	r7, [r4, #68]	@ 0x44
90008b62:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90008b66:	2bff      	cmp	r3, #255	@ 0xff
90008b68:	d101      	bne.n	90008b6e <xQueueSemaphoreTake+0xf2>
90008b6a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
90008b6e:	f7ff fac5 	bl	900080fc <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90008b72:	a901      	add	r1, sp, #4
90008b74:	a802      	add	r0, sp, #8
90008b76:	f000 fd51 	bl	9000961c <xTaskCheckForTimeOut>
90008b7a:	bb50      	cbnz	r0, 90008bd2 <xQueueSemaphoreTake+0x156>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
90008b7c:	4620      	mov	r0, r4
90008b7e:	f7ff fbc7 	bl	90008310 <prvIsQueueEmpty>
90008b82:	b300      	cbz	r0, 90008bc6 <xQueueSemaphoreTake+0x14a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90008b84:	6823      	ldr	r3, [r4, #0]
90008b86:	b93b      	cbnz	r3, 90008b98 <xQueueSemaphoreTake+0x11c>
						taskENTER_CRITICAL();
90008b88:	f7ff fa94 	bl	900080b4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
90008b8c:	68a0      	ldr	r0, [r4, #8]
90008b8e:	f000 fd9b 	bl	900096c8 <xTaskPriorityInherit>
90008b92:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
90008b94:	f7ff fab2 	bl	900080fc <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90008b98:	9901      	ldr	r1, [sp, #4]
90008b9a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90008b9e:	f000 fcb1 	bl	90009504 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
90008ba2:	4620      	mov	r0, r4
90008ba4:	f7ff fc07 	bl	900083b6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
90008ba8:	f000 fb5c 	bl	90009264 <xTaskResumeAll>
90008bac:	b948      	cbnz	r0, 90008bc2 <xQueueSemaphoreTake+0x146>
					portYIELD_WITHIN_API();
90008bae:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90008bb2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90008bb6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90008bba:	f3bf 8f4f 	dsb	sy
90008bbe:	f3bf 8f6f 	isb	sy
90008bc2:	2601      	movs	r6, #1
90008bc4:	e77d      	b.n	90008ac2 <xQueueSemaphoreTake+0x46>
				prvUnlockQueue( pxQueue );
90008bc6:	4620      	mov	r0, r4
90008bc8:	f7ff fbf5 	bl	900083b6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
90008bcc:	f000 fb4a 	bl	90009264 <xTaskResumeAll>
90008bd0:	e7f7      	b.n	90008bc2 <xQueueSemaphoreTake+0x146>
			prvUnlockQueue( pxQueue );
90008bd2:	4620      	mov	r0, r4
90008bd4:	f7ff fbef 	bl	900083b6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
90008bd8:	f000 fb44 	bl	90009264 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
90008bdc:	4620      	mov	r0, r4
90008bde:	f7ff fb97 	bl	90008310 <prvIsQueueEmpty>
90008be2:	2800      	cmp	r0, #0
90008be4:	d0ed      	beq.n	90008bc2 <xQueueSemaphoreTake+0x146>
					if( xInheritanceOccurred != pdFALSE )
90008be6:	b165      	cbz	r5, 90008c02 <xQueueSemaphoreTake+0x186>
						taskENTER_CRITICAL();
90008be8:	f7ff fa64 	bl	900080b4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
90008bec:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90008bee:	b119      	cbz	r1, 90008bf8 <xQueueSemaphoreTake+0x17c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
90008bf0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90008bf2:	6819      	ldr	r1, [r3, #0]
90008bf4:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
90008bf8:	68a0      	ldr	r0, [r4, #8]
90008bfa:	f000 fde9 	bl	900097d0 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
90008bfe:	f7ff fa7d 	bl	900080fc <vPortExitCritical>
					return errQUEUE_EMPTY;
90008c02:	2000      	movs	r0, #0
90008c04:	e77c      	b.n	90008b00 <xQueueSemaphoreTake+0x84>

90008c06 <xQueueReceiveFromISR>:
{
90008c06:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90008c0a:	4689      	mov	r9, r1
90008c0c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
90008c0e:	4604      	mov	r4, r0
90008c10:	b950      	cbnz	r0, 90008c28 <xQueueReceiveFromISR+0x22>
90008c12:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008c16:	b672      	cpsid	i
90008c18:	f383 8811 	msr	BASEPRI, r3
90008c1c:	f3bf 8f6f 	isb	sy
90008c20:	f3bf 8f4f 	dsb	sy
90008c24:	b662      	cpsie	i
90008c26:	e7fe      	b.n	90008c26 <xQueueReceiveFromISR+0x20>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90008c28:	b961      	cbnz	r1, 90008c44 <xQueueReceiveFromISR+0x3e>
90008c2a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
90008c2c:	b153      	cbz	r3, 90008c44 <xQueueReceiveFromISR+0x3e>
90008c2e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008c32:	b672      	cpsid	i
90008c34:	f383 8811 	msr	BASEPRI, r3
90008c38:	f3bf 8f6f 	isb	sy
90008c3c:	f3bf 8f4f 	dsb	sy
90008c40:	b662      	cpsie	i
90008c42:	e7fe      	b.n	90008c42 <xQueueReceiveFromISR+0x3c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90008c44:	f7ff fb32 	bl	900082ac <vPortValidateInterruptPriority>
	__asm volatile
90008c48:	f3ef 8711 	mrs	r7, BASEPRI
90008c4c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008c50:	b672      	cpsid	i
90008c52:	f383 8811 	msr	BASEPRI, r3
90008c56:	f3bf 8f6f 	isb	sy
90008c5a:	f3bf 8f4f 	dsb	sy
90008c5e:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90008c60:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90008c62:	b30d      	cbz	r5, 90008ca8 <xQueueReceiveFromISR+0xa2>
			const int8_t cRxLock = pxQueue->cRxLock;
90008c64:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
90008c68:	4649      	mov	r1, r9
90008c6a:	4620      	mov	r0, r4
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90008c6c:	3d01      	subs	r5, #1
			const int8_t cRxLock = pxQueue->cRxLock;
90008c6e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
90008c70:	f7ff fb8c 	bl	9000838c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90008c74:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
90008c76:	1c73      	adds	r3, r6, #1
90008c78:	d111      	bne.n	90008c9e <xQueueReceiveFromISR+0x98>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90008c7a:	6923      	ldr	r3, [r4, #16]
90008c7c:	b153      	cbz	r3, 90008c94 <xQueueReceiveFromISR+0x8e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90008c7e:	f104 0010 	add.w	r0, r4, #16
90008c82:	f000 fc7b 	bl	9000957c <xTaskRemoveFromEventList>
90008c86:	b128      	cbz	r0, 90008c94 <xQueueReceiveFromISR+0x8e>
						if( pxHigherPriorityTaskWoken != NULL )
90008c88:	f1b8 0f00 	cmp.w	r8, #0
90008c8c:	d002      	beq.n	90008c94 <xQueueReceiveFromISR+0x8e>
							*pxHigherPriorityTaskWoken = pdTRUE;
90008c8e:	2301      	movs	r3, #1
90008c90:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
90008c94:	2001      	movs	r0, #1
	__asm volatile
90008c96:	f387 8811 	msr	BASEPRI, r7
}
90008c9a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
90008c9e:	3601      	adds	r6, #1
90008ca0:	b276      	sxtb	r6, r6
90008ca2:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
90008ca6:	e7f5      	b.n	90008c94 <xQueueReceiveFromISR+0x8e>
			xReturn = pdFAIL;
90008ca8:	4628      	mov	r0, r5
90008caa:	e7f4      	b.n	90008c96 <xQueueReceiveFromISR+0x90>

90008cac <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90008cac:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
90008cae:	4a07      	ldr	r2, [pc, #28]	@ (90008ccc <vQueueAddToRegistry+0x20>)
	{
90008cb0:	b530      	push	{r4, r5, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
90008cb2:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
90008cb6:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
90008cba:	b91d      	cbnz	r5, 90008cc4 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
90008cbc:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
90008cc0:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
90008cc2:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90008cc4:	3301      	adds	r3, #1
90008cc6:	2b08      	cmp	r3, #8
90008cc8:	d1f3      	bne.n	90008cb2 <vQueueAddToRegistry+0x6>
90008cca:	e7fa      	b.n	90008cc2 <vQueueAddToRegistry+0x16>
90008ccc:	20013884 	.word	0x20013884

90008cd0 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90008cd0:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
90008cd2:	4a09      	ldr	r2, [pc, #36]	@ (90008cf8 <vQueueUnregisterQueue+0x28>)
	{
90008cd4:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
90008cd6:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
90008cda:	00dc      	lsls	r4, r3, #3
90008cdc:	4281      	cmp	r1, r0
90008cde:	d106      	bne.n	90008cee <vQueueUnregisterQueue+0x1e>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
90008ce0:	4a06      	ldr	r2, [pc, #24]	@ (90008cfc <vQueueUnregisterQueue+0x2c>)
90008ce2:	2100      	movs	r1, #0
90008ce4:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
90008ce8:	4422      	add	r2, r4
90008cea:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
90008cec:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90008cee:	3301      	adds	r3, #1
90008cf0:	2b08      	cmp	r3, #8
90008cf2:	d1f0      	bne.n	90008cd6 <vQueueUnregisterQueue+0x6>
90008cf4:	e7fa      	b.n	90008cec <vQueueUnregisterQueue+0x1c>
90008cf6:	bf00      	nop
90008cf8:	20013888 	.word	0x20013888
90008cfc:	20013884 	.word	0x20013884

90008d00 <vQueueDelete>:
{
90008d00:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
90008d02:	b950      	cbnz	r0, 90008d1a <vQueueDelete+0x1a>
	__asm volatile
90008d04:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008d08:	b672      	cpsid	i
90008d0a:	f383 8811 	msr	BASEPRI, r3
90008d0e:	f3bf 8f6f 	isb	sy
90008d12:	f3bf 8f4f 	dsb	sy
90008d16:	b662      	cpsie	i
90008d18:	e7fe      	b.n	90008d18 <vQueueDelete+0x18>
		vQueueUnregisterQueue( pxQueue );
90008d1a:	f7ff ffd9 	bl	90008cd0 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
90008d1e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
90008d22:	b91b      	cbnz	r3, 90008d2c <vQueueDelete+0x2c>
}
90008d24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
90008d28:	f7ff b8e2 	b.w	90007ef0 <vPortFree>
}
90008d2c:	bd10      	pop	{r4, pc}

90008d2e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
90008d2e:	b570      	push	{r4, r5, r6, lr}
90008d30:	4604      	mov	r4, r0
90008d32:	460d      	mov	r5, r1
90008d34:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
90008d36:	f7ff f9bd 	bl	900080b4 <vPortEnterCritical>
90008d3a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90008d3e:	2bff      	cmp	r3, #255	@ 0xff
90008d40:	d102      	bne.n	90008d48 <vQueueWaitForMessageRestricted+0x1a>
90008d42:	2300      	movs	r3, #0
90008d44:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
90008d48:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90008d4c:	2bff      	cmp	r3, #255	@ 0xff
90008d4e:	d102      	bne.n	90008d56 <vQueueWaitForMessageRestricted+0x28>
90008d50:	2300      	movs	r3, #0
90008d52:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
90008d56:	f7ff f9d1 	bl	900080fc <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
90008d5a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90008d5c:	b92b      	cbnz	r3, 90008d6a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
90008d5e:	4632      	mov	r2, r6
90008d60:	4629      	mov	r1, r5
90008d62:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90008d66:	f000 fbe9 	bl	9000953c <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
90008d6a:	4620      	mov	r0, r4
	}
90008d6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
90008d70:	f7ff bb21 	b.w	900083b6 <prvUnlockQueue>

90008d74 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
90008d74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90008d78:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
90008d7a:	f7ff f99b 	bl	900080b4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
90008d7e:	4b2f      	ldr	r3, [pc, #188]	@ (90008e3c <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
90008d80:	4e2f      	ldr	r6, [pc, #188]	@ (90008e40 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
90008d82:	681a      	ldr	r2, [r3, #0]
90008d84:	4f2f      	ldr	r7, [pc, #188]	@ (90008e44 <prvAddNewTaskToReadyList+0xd0>)
90008d86:	3201      	adds	r2, #1
90008d88:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
90008d8a:	6835      	ldr	r5, [r6, #0]
90008d8c:	2d00      	cmp	r5, #0
90008d8e:	d14a      	bne.n	90008e26 <prvAddNewTaskToReadyList+0xb2>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
90008d90:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
90008d92:	681b      	ldr	r3, [r3, #0]
90008d94:	2b01      	cmp	r3, #1
90008d96:	d11f      	bne.n	90008dd8 <prvAddNewTaskToReadyList+0x64>
90008d98:	46b8      	mov	r8, r7

static void prvInitialiseTaskLists( void )
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
90008d9a:	3501      	adds	r5, #1
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90008d9c:	4640      	mov	r0, r8
90008d9e:	f7ff f8e3 	bl	90007f68 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
90008da2:	f108 0814 	add.w	r8, r8, #20
90008da6:	2d38      	cmp	r5, #56	@ 0x38
90008da8:	d1f7      	bne.n	90008d9a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
90008daa:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 90008e6c <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
90008dae:	4d26      	ldr	r5, [pc, #152]	@ (90008e48 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
90008db0:	4640      	mov	r0, r8
90008db2:	f7ff f8d9 	bl	90007f68 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
90008db6:	4628      	mov	r0, r5
90008db8:	f7ff f8d6 	bl	90007f68 <vListInitialise>
	vListInitialise( &xPendingReadyList );
90008dbc:	4823      	ldr	r0, [pc, #140]	@ (90008e4c <prvAddNewTaskToReadyList+0xd8>)
90008dbe:	f7ff f8d3 	bl	90007f68 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
90008dc2:	4823      	ldr	r0, [pc, #140]	@ (90008e50 <prvAddNewTaskToReadyList+0xdc>)
90008dc4:	f7ff f8d0 	bl	90007f68 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
90008dc8:	4822      	ldr	r0, [pc, #136]	@ (90008e54 <prvAddNewTaskToReadyList+0xe0>)
90008dca:	f7ff f8cd 	bl	90007f68 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
90008dce:	4b22      	ldr	r3, [pc, #136]	@ (90008e58 <prvAddNewTaskToReadyList+0xe4>)
90008dd0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
90008dd4:	4b21      	ldr	r3, [pc, #132]	@ (90008e5c <prvAddNewTaskToReadyList+0xe8>)
90008dd6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
90008dd8:	4a21      	ldr	r2, [pc, #132]	@ (90008e60 <prvAddNewTaskToReadyList+0xec>)
90008dda:	6813      	ldr	r3, [r2, #0]
90008ddc:	3301      	adds	r3, #1
90008dde:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
90008de0:	4a20      	ldr	r2, [pc, #128]	@ (90008e64 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
90008de2:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
90008de4:	6811      	ldr	r1, [r2, #0]
90008de6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90008de8:	428b      	cmp	r3, r1
90008dea:	d900      	bls.n	90008dee <prvAddNewTaskToReadyList+0x7a>
90008dec:	6013      	str	r3, [r2, #0]
90008dee:	2014      	movs	r0, #20
90008df0:	1d21      	adds	r1, r4, #4
90008df2:	fb00 7003 	mla	r0, r0, r3, r7
90008df6:	f7ff f8c5 	bl	90007f84 <vListInsertEnd>
	taskEXIT_CRITICAL();
90008dfa:	f7ff f97f 	bl	900080fc <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
90008dfe:	4b1a      	ldr	r3, [pc, #104]	@ (90008e68 <prvAddNewTaskToReadyList+0xf4>)
90008e00:	681b      	ldr	r3, [r3, #0]
90008e02:	b173      	cbz	r3, 90008e22 <prvAddNewTaskToReadyList+0xae>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
90008e04:	6833      	ldr	r3, [r6, #0]
90008e06:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90008e08:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90008e0a:	429a      	cmp	r2, r3
90008e0c:	d209      	bcs.n	90008e22 <prvAddNewTaskToReadyList+0xae>
			taskYIELD_IF_USING_PREEMPTION();
90008e0e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90008e12:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90008e16:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90008e1a:	f3bf 8f4f 	dsb	sy
90008e1e:	f3bf 8f6f 	isb	sy
}
90008e22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
90008e26:	4b10      	ldr	r3, [pc, #64]	@ (90008e68 <prvAddNewTaskToReadyList+0xf4>)
90008e28:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
90008e2a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
90008e2c:	2a00      	cmp	r2, #0
90008e2e:	d1d3      	bne.n	90008dd8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
90008e30:	6832      	ldr	r2, [r6, #0]
90008e32:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90008e34:	429a      	cmp	r2, r3
90008e36:	d8cf      	bhi.n	90008dd8 <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
90008e38:	6034      	str	r4, [r6, #0]
90008e3a:	e7cd      	b.n	90008dd8 <prvAddNewTaskToReadyList+0x64>
90008e3c:	200138e8 	.word	0x200138e8
90008e40:	20013dbc 	.word	0x20013dbc
90008e44:	2001395c 	.word	0x2001395c
90008e48:	20013934 	.word	0x20013934
90008e4c:	20013918 	.word	0x20013918
90008e50:	20013904 	.word	0x20013904
90008e54:	200138ec 	.word	0x200138ec
90008e58:	20013930 	.word	0x20013930
90008e5c:	2001392c 	.word	0x2001392c
90008e60:	200138cc 	.word	0x200138cc
90008e64:	200138e0 	.word	0x200138e0
90008e68:	200138dc 	.word	0x200138dc
90008e6c:	20013948 	.word	0x20013948

90008e70 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
90008e70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
90008e72:	4b15      	ldr	r3, [pc, #84]	@ (90008ec8 <prvAddCurrentTaskToDelayedList+0x58>)
{
90008e74:	4606      	mov	r6, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90008e76:	4d15      	ldr	r5, [pc, #84]	@ (90008ecc <prvAddCurrentTaskToDelayedList+0x5c>)
{
90008e78:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
90008e7a:	681c      	ldr	r4, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90008e7c:	6828      	ldr	r0, [r5, #0]
90008e7e:	3004      	adds	r0, #4
90008e80:	f7ff f8a2 	bl	90007fc8 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
90008e84:	1c73      	adds	r3, r6, #1
90008e86:	d107      	bne.n	90008e98 <prvAddCurrentTaskToDelayedList+0x28>
90008e88:	b137      	cbz	r7, 90008e98 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90008e8a:	6829      	ldr	r1, [r5, #0]
90008e8c:	4810      	ldr	r0, [pc, #64]	@ (90008ed0 <prvAddCurrentTaskToDelayedList+0x60>)
90008e8e:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
90008e90:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90008e94:	f7ff b876 	b.w	90007f84 <vListInsertEnd>
			xTimeToWake = xConstTickCount + xTicksToWait;
90008e98:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90008e9a:	682b      	ldr	r3, [r5, #0]
90008e9c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90008e9e:	d307      	bcc.n	90008eb0 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90008ea0:	4b0c      	ldr	r3, [pc, #48]	@ (90008ed4 <prvAddCurrentTaskToDelayedList+0x64>)
90008ea2:	6818      	ldr	r0, [r3, #0]
90008ea4:	6829      	ldr	r1, [r5, #0]
}
90008ea6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90008eaa:	3104      	adds	r1, #4
90008eac:	f7ff b875 	b.w	90007f9a <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90008eb0:	4b09      	ldr	r3, [pc, #36]	@ (90008ed8 <prvAddCurrentTaskToDelayedList+0x68>)
90008eb2:	6818      	ldr	r0, [r3, #0]
90008eb4:	6829      	ldr	r1, [r5, #0]
90008eb6:	3104      	adds	r1, #4
90008eb8:	f7ff f86f 	bl	90007f9a <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90008ebc:	4b07      	ldr	r3, [pc, #28]	@ (90008edc <prvAddCurrentTaskToDelayedList+0x6c>)
90008ebe:	681a      	ldr	r2, [r3, #0]
90008ec0:	42a2      	cmp	r2, r4
90008ec2:	d900      	bls.n	90008ec6 <prvAddCurrentTaskToDelayedList+0x56>
					xNextTaskUnblockTime = xTimeToWake;
90008ec4:	601c      	str	r4, [r3, #0]
}
90008ec6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90008ec8:	200138e4 	.word	0x200138e4
90008ecc:	20013dbc 	.word	0x20013dbc
90008ed0:	200138ec 	.word	0x200138ec
90008ed4:	2001392c 	.word	0x2001392c
90008ed8:	20013930 	.word	0x20013930
90008edc:	200138c8 	.word	0x200138c8

90008ee0 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90008ee0:	4a06      	ldr	r2, [pc, #24]	@ (90008efc <prvResetNextTaskUnblockTime+0x1c>)
90008ee2:	6813      	ldr	r3, [r2, #0]
90008ee4:	6819      	ldr	r1, [r3, #0]
90008ee6:	4b06      	ldr	r3, [pc, #24]	@ (90008f00 <prvResetNextTaskUnblockTime+0x20>)
90008ee8:	b919      	cbnz	r1, 90008ef2 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
90008eea:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90008eee:	601a      	str	r2, [r3, #0]
}
90008ef0:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90008ef2:	6812      	ldr	r2, [r2, #0]
90008ef4:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90008ef6:	68d2      	ldr	r2, [r2, #12]
90008ef8:	6852      	ldr	r2, [r2, #4]
90008efa:	e7f8      	b.n	90008eee <prvResetNextTaskUnblockTime+0xe>
90008efc:	20013930 	.word	0x20013930
90008f00:	200138c8 	.word	0x200138c8

90008f04 <prvDeleteTCB>:
	{
90008f04:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
90008f06:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
90008f0a:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
90008f0c:	b93b      	cbnz	r3, 90008f1e <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
90008f0e:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90008f10:	f7fe ffee 	bl	90007ef0 <vPortFree>
				vPortFree( pxTCB );
90008f14:	4620      	mov	r0, r4
	}
90008f16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
90008f1a:	f7fe bfe9 	b.w	90007ef0 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
90008f1e:	2b01      	cmp	r3, #1
90008f20:	d0f9      	beq.n	90008f16 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
90008f22:	2b02      	cmp	r3, #2
90008f24:	d00a      	beq.n	90008f3c <prvDeleteTCB+0x38>
90008f26:	f04f 0350 	mov.w	r3, #80	@ 0x50
90008f2a:	b672      	cpsid	i
90008f2c:	f383 8811 	msr	BASEPRI, r3
90008f30:	f3bf 8f6f 	isb	sy
90008f34:	f3bf 8f4f 	dsb	sy
90008f38:	b662      	cpsie	i
90008f3a:	e7fe      	b.n	90008f3a <prvDeleteTCB+0x36>
	}
90008f3c:	bd10      	pop	{r4, pc}
	...

90008f40 <prvIdleTask>:
{
90008f40:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
90008f42:	4c14      	ldr	r4, [pc, #80]	@ (90008f94 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90008f44:	4f14      	ldr	r7, [pc, #80]	@ (90008f98 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
90008f46:	4d15      	ldr	r5, [pc, #84]	@ (90008f9c <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
90008f48:	6823      	ldr	r3, [r4, #0]
90008f4a:	b983      	cbnz	r3, 90008f6e <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
90008f4c:	4b14      	ldr	r3, [pc, #80]	@ (90008fa0 <prvIdleTask+0x60>)
90008f4e:	681b      	ldr	r3, [r3, #0]
90008f50:	2b01      	cmp	r3, #1
90008f52:	d909      	bls.n	90008f68 <prvIdleTask+0x28>
				taskYIELD();
90008f54:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90008f58:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90008f5c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90008f60:	f3bf 8f4f 	dsb	sy
90008f64:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
90008f68:	f7f9 f834 	bl	90001fd4 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
90008f6c:	e7eb      	b.n	90008f46 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
90008f6e:	f7ff f8a1 	bl	900080b4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90008f72:	68fb      	ldr	r3, [r7, #12]
90008f74:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90008f76:	1d30      	adds	r0, r6, #4
90008f78:	f7ff f826 	bl	90007fc8 <uxListRemove>
				--uxCurrentNumberOfTasks;
90008f7c:	682b      	ldr	r3, [r5, #0]
90008f7e:	3b01      	subs	r3, #1
90008f80:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
90008f82:	6823      	ldr	r3, [r4, #0]
90008f84:	3b01      	subs	r3, #1
90008f86:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
90008f88:	f7ff f8b8 	bl	900080fc <vPortExitCritical>
			prvDeleteTCB( pxTCB );
90008f8c:	4630      	mov	r0, r6
90008f8e:	f7ff ffb9 	bl	90008f04 <prvDeleteTCB>
90008f92:	e7d9      	b.n	90008f48 <prvIdleTask+0x8>
90008f94:	20013900 	.word	0x20013900
90008f98:	20013904 	.word	0x20013904
90008f9c:	200138e8 	.word	0x200138e8
90008fa0:	2001395c 	.word	0x2001395c

90008fa4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
90008fa4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90008fa8:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
90008faa:	4607      	mov	r7, r0
90008fac:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90008fae:	21a5      	movs	r1, #165	@ 0xa5
90008fb0:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
90008fb2:	4698      	mov	r8, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90008fb4:	3e04      	subs	r6, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
90008fb6:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90008fba:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90008fbc:	f01f fc53 	bl	90028866 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90008fc0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90008fc2:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90008fc4:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
90008fc8:	b3b5      	cbz	r5, 90009038 <prvInitialiseNewTask.constprop.0+0x94>
90008fca:	1e6b      	subs	r3, r5, #1
90008fcc:	f104 0233 	add.w	r2, r4, #51	@ 0x33
90008fd0:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90008fd2:	f813 1f01 	ldrb.w	r1, [r3, #1]!
90008fd6:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
90008fda:	b109      	cbz	r1, 90008fe0 <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
90008fdc:	42ab      	cmp	r3, r5
90008fde:	d1f8      	bne.n	90008fd2 <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90008fe0:	2300      	movs	r3, #0
90008fe2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90008fe6:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
90008fe8:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90008fec:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90008fee:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
90008ff0:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90008ff4:	bf28      	it	cs
90008ff6:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
90008ff8:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
90008ffa:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90008ffc:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90009000:	f7fe ffbd 	bl	90007f7e <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90009004:	f104 0018 	add.w	r0, r4, #24
90009008:	f7fe ffb9 	bl	90007f7e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
9000900c:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90009010:	4642      	mov	r2, r8
90009012:	4639      	mov	r1, r7
90009014:	4630      	mov	r0, r6
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90009016:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90009018:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000901a:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000901c:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90009020:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90009024:	f7ff f822 	bl	9000806c <pxPortInitialiseStack>
90009028:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000902a:	f1b9 0f00 	cmp.w	r9, #0
9000902e:	d001      	beq.n	90009034 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
90009030:	f8c9 4000 	str.w	r4, [r9]
}
90009034:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
90009038:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000903c:	e7d3      	b.n	90008fe6 <prvInitialiseNewTask.constprop.0+0x42>

9000903e <xTaskCreateStatic>:
	{
9000903e:	b570      	push	{r4, r5, r6, lr}
90009040:	b086      	sub	sp, #24
90009042:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
90009046:	b955      	cbnz	r5, 9000905e <xTaskCreateStatic+0x20>
90009048:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000904c:	b672      	cpsid	i
9000904e:	f383 8811 	msr	BASEPRI, r3
90009052:	f3bf 8f6f 	isb	sy
90009056:	f3bf 8f4f 	dsb	sy
9000905a:	b662      	cpsie	i
9000905c:	e7fe      	b.n	9000905c <xTaskCreateStatic+0x1e>
		configASSERT( pxTaskBuffer != NULL );
9000905e:	b954      	cbnz	r4, 90009076 <xTaskCreateStatic+0x38>
90009060:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009064:	b672      	cpsid	i
90009066:	f383 8811 	msr	BASEPRI, r3
9000906a:	f3bf 8f6f 	isb	sy
9000906e:	f3bf 8f4f 	dsb	sy
90009072:	b662      	cpsie	i
90009074:	e7fe      	b.n	90009074 <xTaskCreateStatic+0x36>
			volatile size_t xSize = sizeof( StaticTask_t );
90009076:	2660      	movs	r6, #96	@ 0x60
90009078:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
9000907a:	9e05      	ldr	r6, [sp, #20]
9000907c:	2e60      	cmp	r6, #96	@ 0x60
9000907e:	d00a      	beq.n	90009096 <xTaskCreateStatic+0x58>
90009080:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009084:	b672      	cpsid	i
90009086:	f383 8811 	msr	BASEPRI, r3
9000908a:	f3bf 8f6f 	isb	sy
9000908e:	f3bf 8f4f 	dsb	sy
90009092:	b662      	cpsie	i
90009094:	e7fe      	b.n	90009094 <xTaskCreateStatic+0x56>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90009096:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90009098:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000909a:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000909c:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
900090a0:	ad04      	add	r5, sp, #16
900090a2:	9402      	str	r4, [sp, #8]
900090a4:	9501      	str	r5, [sp, #4]
900090a6:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
900090a8:	9500      	str	r5, [sp, #0]
900090aa:	f7ff ff7b 	bl	90008fa4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
900090ae:	4620      	mov	r0, r4
900090b0:	f7ff fe60 	bl	90008d74 <prvAddNewTaskToReadyList>
	}
900090b4:	9804      	ldr	r0, [sp, #16]
900090b6:	b006      	add	sp, #24
900090b8:	bd70      	pop	{r4, r5, r6, pc}

900090ba <xTaskCreate>:
	{
900090ba:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900090be:	4607      	mov	r7, r0
900090c0:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
900090c2:	0090      	lsls	r0, r2, #2
	{
900090c4:	4688      	mov	r8, r1
900090c6:	4616      	mov	r6, r2
900090c8:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
900090ca:	f7fe fe7d 	bl	90007dc8 <pvPortMalloc>
			if( pxStack != NULL )
900090ce:	4605      	mov	r5, r0
900090d0:	b920      	cbnz	r0, 900090dc <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
900090d2:	f04f 30ff 	mov.w	r0, #4294967295
	}
900090d6:	b005      	add	sp, #20
900090d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
900090dc:	2060      	movs	r0, #96	@ 0x60
900090de:	f7fe fe73 	bl	90007dc8 <pvPortMalloc>
				if( pxNewTCB != NULL )
900090e2:	4604      	mov	r4, r0
900090e4:	b198      	cbz	r0, 9000910e <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
900090e6:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
900090e8:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
900090ea:	4632      	mov	r2, r6
900090ec:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
900090ee:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
900090f2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900090f4:	9002      	str	r0, [sp, #8]
900090f6:	4638      	mov	r0, r7
900090f8:	9301      	str	r3, [sp, #4]
900090fa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900090fc:	9300      	str	r3, [sp, #0]
900090fe:	464b      	mov	r3, r9
90009100:	f7ff ff50 	bl	90008fa4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
90009104:	4620      	mov	r0, r4
90009106:	f7ff fe35 	bl	90008d74 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9000910a:	2001      	movs	r0, #1
9000910c:	e7e3      	b.n	900090d6 <xTaskCreate+0x1c>
					vPortFree( pxStack );
9000910e:	4628      	mov	r0, r5
90009110:	f7fe feee 	bl	90007ef0 <vPortFree>
		if( pxNewTCB != NULL )
90009114:	e7dd      	b.n	900090d2 <xTaskCreate+0x18>
	...

90009118 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
90009118:	4a02      	ldr	r2, [pc, #8]	@ (90009124 <vTaskSuspendAll+0xc>)
9000911a:	6813      	ldr	r3, [r2, #0]
9000911c:	3301      	adds	r3, #1
9000911e:	6013      	str	r3, [r2, #0]
}
90009120:	4770      	bx	lr
90009122:	bf00      	nop
90009124:	200138c4 	.word	0x200138c4

90009128 <xTaskGetTickCount>:
		xTicks = xTickCount;
90009128:	4b01      	ldr	r3, [pc, #4]	@ (90009130 <xTaskGetTickCount+0x8>)
9000912a:	6818      	ldr	r0, [r3, #0]
}
9000912c:	4770      	bx	lr
9000912e:	bf00      	nop
90009130:	200138e4 	.word	0x200138e4

90009134 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90009134:	4b40      	ldr	r3, [pc, #256]	@ (90009238 <xTaskIncrementTick+0x104>)
90009136:	681b      	ldr	r3, [r3, #0]
{
90009138:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000913c:	2b00      	cmp	r3, #0
9000913e:	d173      	bne.n	90009228 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90009140:	4b3e      	ldr	r3, [pc, #248]	@ (9000923c <xTaskIncrementTick+0x108>)
90009142:	681c      	ldr	r4, [r3, #0]
90009144:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
90009146:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
90009148:	b9cc      	cbnz	r4, 9000917e <xTaskIncrementTick+0x4a>
			taskSWITCH_DELAYED_LISTS();
9000914a:	4b3d      	ldr	r3, [pc, #244]	@ (90009240 <xTaskIncrementTick+0x10c>)
9000914c:	681a      	ldr	r2, [r3, #0]
9000914e:	6812      	ldr	r2, [r2, #0]
90009150:	b152      	cbz	r2, 90009168 <xTaskIncrementTick+0x34>
90009152:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009156:	b672      	cpsid	i
90009158:	f383 8811 	msr	BASEPRI, r3
9000915c:	f3bf 8f6f 	isb	sy
90009160:	f3bf 8f4f 	dsb	sy
90009164:	b662      	cpsie	i
90009166:	e7fe      	b.n	90009166 <xTaskIncrementTick+0x32>
90009168:	4a36      	ldr	r2, [pc, #216]	@ (90009244 <xTaskIncrementTick+0x110>)
9000916a:	6819      	ldr	r1, [r3, #0]
9000916c:	6810      	ldr	r0, [r2, #0]
9000916e:	6018      	str	r0, [r3, #0]
90009170:	6011      	str	r1, [r2, #0]
90009172:	4a35      	ldr	r2, [pc, #212]	@ (90009248 <xTaskIncrementTick+0x114>)
90009174:	6813      	ldr	r3, [r2, #0]
90009176:	3301      	adds	r3, #1
90009178:	6013      	str	r3, [r2, #0]
9000917a:	f7ff feb1 	bl	90008ee0 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
9000917e:	4d33      	ldr	r5, [pc, #204]	@ (9000924c <xTaskIncrementTick+0x118>)
BaseType_t xSwitchRequired = pdFALSE;
90009180:	f04f 0b00 	mov.w	fp, #0
90009184:	4e32      	ldr	r6, [pc, #200]	@ (90009250 <xTaskIncrementTick+0x11c>)
		if( xConstTickCount >= xNextTaskUnblockTime )
90009186:	682b      	ldr	r3, [r5, #0]
90009188:	4f32      	ldr	r7, [pc, #200]	@ (90009254 <xTaskIncrementTick+0x120>)
9000918a:	42a3      	cmp	r3, r4
9000918c:	d911      	bls.n	900091b2 <xTaskIncrementTick+0x7e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000918e:	683a      	ldr	r2, [r7, #0]
90009190:	2114      	movs	r1, #20
90009192:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90009194:	434a      	muls	r2, r1
90009196:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
90009198:	2a02      	cmp	r2, #2
9000919a:	bf28      	it	cs
9000919c:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
900091a0:	4a2d      	ldr	r2, [pc, #180]	@ (90009258 <xTaskIncrementTick+0x124>)
900091a2:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
900091a4:	2a00      	cmp	r2, #0
}
900091a6:	bf0c      	ite	eq
900091a8:	4658      	moveq	r0, fp
900091aa:	2001      	movne	r0, #1
900091ac:	b003      	add	sp, #12
900091ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900091b2:	f8df 908c 	ldr.w	r9, [pc, #140]	@ 90009240 <xTaskIncrementTick+0x10c>
					prvAddTaskToReadyList( pxTCB );
900091b6:	f8df a0a8 	ldr.w	sl, [pc, #168]	@ 90009260 <xTaskIncrementTick+0x12c>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900091ba:	f8d9 2000 	ldr.w	r2, [r9]
900091be:	6812      	ldr	r2, [r2, #0]
900091c0:	b91a      	cbnz	r2, 900091ca <xTaskIncrementTick+0x96>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900091c2:	f04f 32ff 	mov.w	r2, #4294967295
900091c6:	602a      	str	r2, [r5, #0]
					break;
900091c8:	e7e1      	b.n	9000918e <xTaskIncrementTick+0x5a>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900091ca:	f8d9 2000 	ldr.w	r2, [r9]
900091ce:	68d2      	ldr	r2, [r2, #12]
900091d0:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
900091d4:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
900091d8:	428c      	cmp	r4, r1
900091da:	d201      	bcs.n	900091e0 <xTaskIncrementTick+0xac>
						xNextTaskUnblockTime = xItemValue;
900091dc:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
900091de:	e7d6      	b.n	9000918e <xTaskIncrementTick+0x5a>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900091e0:	f108 0304 	add.w	r3, r8, #4
900091e4:	4618      	mov	r0, r3
900091e6:	9301      	str	r3, [sp, #4]
900091e8:	f7fe feee 	bl	90007fc8 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
900091ec:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
900091f0:	b119      	cbz	r1, 900091fa <xTaskIncrementTick+0xc6>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900091f2:	f108 0018 	add.w	r0, r8, #24
900091f6:	f7fe fee7 	bl	90007fc8 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
900091fa:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
900091fe:	f8da 1000 	ldr.w	r1, [sl]
90009202:	4288      	cmp	r0, r1
90009204:	d901      	bls.n	9000920a <xTaskIncrementTick+0xd6>
90009206:	f8ca 0000 	str.w	r0, [sl]
9000920a:	2314      	movs	r3, #20
9000920c:	9901      	ldr	r1, [sp, #4]
9000920e:	fb03 6000 	mla	r0, r3, r0, r6
90009212:	f7fe feb7 	bl	90007f84 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90009216:	6838      	ldr	r0, [r7, #0]
90009218:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
9000921c:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
9000921e:	4291      	cmp	r1, r2
90009220:	bf28      	it	cs
90009222:	f04f 0b01 	movcs.w	fp, #1
90009226:	e7c8      	b.n	900091ba <xTaskIncrementTick+0x86>
		++uxPendedTicks;
90009228:	4a0c      	ldr	r2, [pc, #48]	@ (9000925c <xTaskIncrementTick+0x128>)
BaseType_t xSwitchRequired = pdFALSE;
9000922a:	f04f 0b00 	mov.w	fp, #0
		++uxPendedTicks;
9000922e:	6813      	ldr	r3, [r2, #0]
90009230:	3301      	adds	r3, #1
90009232:	6013      	str	r3, [r2, #0]
90009234:	e7b4      	b.n	900091a0 <xTaskIncrementTick+0x6c>
90009236:	bf00      	nop
90009238:	200138c4 	.word	0x200138c4
9000923c:	200138e4 	.word	0x200138e4
90009240:	20013930 	.word	0x20013930
90009244:	2001392c 	.word	0x2001392c
90009248:	200138d0 	.word	0x200138d0
9000924c:	200138c8 	.word	0x200138c8
90009250:	2001395c 	.word	0x2001395c
90009254:	20013dbc 	.word	0x20013dbc
90009258:	200138d4 	.word	0x200138d4
9000925c:	200138d8 	.word	0x200138d8
90009260:	200138e0 	.word	0x200138e0

90009264 <xTaskResumeAll>:
{
90009264:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
90009268:	4c31      	ldr	r4, [pc, #196]	@ (90009330 <xTaskResumeAll+0xcc>)
9000926a:	6823      	ldr	r3, [r4, #0]
9000926c:	b953      	cbnz	r3, 90009284 <xTaskResumeAll+0x20>
9000926e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009272:	b672      	cpsid	i
90009274:	f383 8811 	msr	BASEPRI, r3
90009278:	f3bf 8f6f 	isb	sy
9000927c:	f3bf 8f4f 	dsb	sy
90009280:	b662      	cpsie	i
90009282:	e7fe      	b.n	90009282 <xTaskResumeAll+0x1e>
	taskENTER_CRITICAL();
90009284:	f7fe ff16 	bl	900080b4 <vPortEnterCritical>
		--uxSchedulerSuspended;
90009288:	6823      	ldr	r3, [r4, #0]
9000928a:	3b01      	subs	r3, #1
9000928c:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000928e:	6824      	ldr	r4, [r4, #0]
90009290:	b12c      	cbz	r4, 9000929e <xTaskResumeAll+0x3a>
BaseType_t xAlreadyYielded = pdFALSE;
90009292:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
90009294:	f7fe ff32 	bl	900080fc <vPortExitCritical>
}
90009298:	4620      	mov	r0, r4
9000929a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000929e:	4b25      	ldr	r3, [pc, #148]	@ (90009334 <xTaskResumeAll+0xd0>)
900092a0:	681b      	ldr	r3, [r3, #0]
900092a2:	2b00      	cmp	r3, #0
900092a4:	d0f5      	beq.n	90009292 <xTaskResumeAll+0x2e>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900092a6:	4d24      	ldr	r5, [pc, #144]	@ (90009338 <xTaskResumeAll+0xd4>)
					prvAddTaskToReadyList( pxTCB );
900092a8:	4e24      	ldr	r6, [pc, #144]	@ (9000933c <xTaskResumeAll+0xd8>)
900092aa:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 9000934c <xTaskResumeAll+0xe8>
900092ae:	e01d      	b.n	900092ec <xTaskResumeAll+0x88>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900092b0:	68eb      	ldr	r3, [r5, #12]
900092b2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900092b4:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900092b6:	f104 0018 	add.w	r0, r4, #24
900092ba:	f7fe fe85 	bl	90007fc8 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900092be:	4638      	mov	r0, r7
900092c0:	f7fe fe82 	bl	90007fc8 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
900092c4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900092c6:	6832      	ldr	r2, [r6, #0]
900092c8:	4293      	cmp	r3, r2
900092ca:	d900      	bls.n	900092ce <xTaskResumeAll+0x6a>
900092cc:	6033      	str	r3, [r6, #0]
900092ce:	2014      	movs	r0, #20
900092d0:	4639      	mov	r1, r7
900092d2:	fb00 8003 	mla	r0, r0, r3, r8
900092d6:	f7fe fe55 	bl	90007f84 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900092da:	4b19      	ldr	r3, [pc, #100]	@ (90009340 <xTaskResumeAll+0xdc>)
900092dc:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
900092de:	681b      	ldr	r3, [r3, #0]
900092e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900092e2:	429a      	cmp	r2, r3
900092e4:	d302      	bcc.n	900092ec <xTaskResumeAll+0x88>
						xYieldPending = pdTRUE;
900092e6:	4b17      	ldr	r3, [pc, #92]	@ (90009344 <xTaskResumeAll+0xe0>)
900092e8:	2201      	movs	r2, #1
900092ea:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900092ec:	682b      	ldr	r3, [r5, #0]
900092ee:	2b00      	cmp	r3, #0
900092f0:	d1de      	bne.n	900092b0 <xTaskResumeAll+0x4c>
				if( pxTCB != NULL )
900092f2:	b10c      	cbz	r4, 900092f8 <xTaskResumeAll+0x94>
					prvResetNextTaskUnblockTime();
900092f4:	f7ff fdf4 	bl	90008ee0 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
900092f8:	4d13      	ldr	r5, [pc, #76]	@ (90009348 <xTaskResumeAll+0xe4>)
900092fa:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
900092fc:	b144      	cbz	r4, 90009310 <xTaskResumeAll+0xac>
								xYieldPending = pdTRUE;
900092fe:	4e11      	ldr	r6, [pc, #68]	@ (90009344 <xTaskResumeAll+0xe0>)
90009300:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
90009302:	f7ff ff17 	bl	90009134 <xTaskIncrementTick>
90009306:	b100      	cbz	r0, 9000930a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
90009308:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
9000930a:	3c01      	subs	r4, #1
9000930c:	d1f9      	bne.n	90009302 <xTaskResumeAll+0x9e>
						uxPendedTicks = 0;
9000930e:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
90009310:	4b0c      	ldr	r3, [pc, #48]	@ (90009344 <xTaskResumeAll+0xe0>)
90009312:	681b      	ldr	r3, [r3, #0]
90009314:	2b00      	cmp	r3, #0
90009316:	d0bc      	beq.n	90009292 <xTaskResumeAll+0x2e>
					taskYIELD_IF_USING_PREEMPTION();
90009318:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000931c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90009320:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90009324:	f3bf 8f4f 	dsb	sy
90009328:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000932c:	2401      	movs	r4, #1
9000932e:	e7b1      	b.n	90009294 <xTaskResumeAll+0x30>
90009330:	200138c4 	.word	0x200138c4
90009334:	200138e8 	.word	0x200138e8
90009338:	20013918 	.word	0x20013918
9000933c:	200138e0 	.word	0x200138e0
90009340:	20013dbc 	.word	0x20013dbc
90009344:	200138d4 	.word	0x200138d4
90009348:	200138d8 	.word	0x200138d8
9000934c:	2001395c 	.word	0x2001395c

90009350 <vTaskDelay>:
	{
90009350:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
90009352:	b950      	cbnz	r0, 9000936a <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
90009354:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90009358:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000935c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90009360:	f3bf 8f4f 	dsb	sy
90009364:	f3bf 8f6f 	isb	sy
	}
90009368:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
9000936a:	4b0b      	ldr	r3, [pc, #44]	@ (90009398 <vTaskDelay+0x48>)
9000936c:	6819      	ldr	r1, [r3, #0]
9000936e:	b151      	cbz	r1, 90009386 <vTaskDelay+0x36>
90009370:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009374:	b672      	cpsid	i
90009376:	f383 8811 	msr	BASEPRI, r3
9000937a:	f3bf 8f6f 	isb	sy
9000937e:	f3bf 8f4f 	dsb	sy
90009382:	b662      	cpsie	i
90009384:	e7fe      	b.n	90009384 <vTaskDelay+0x34>
			vTaskSuspendAll();
90009386:	f7ff fec7 	bl	90009118 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
9000938a:	f7ff fd71 	bl	90008e70 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
9000938e:	f7ff ff69 	bl	90009264 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
90009392:	2800      	cmp	r0, #0
90009394:	d0de      	beq.n	90009354 <vTaskDelay+0x4>
90009396:	e7e7      	b.n	90009368 <vTaskDelay+0x18>
90009398:	200138c4 	.word	0x200138c4

9000939c <vTaskSetApplicationTaskTag>:
	{
9000939c:	b538      	push	{r3, r4, r5, lr}
9000939e:	460d      	mov	r5, r1
		if( xTask == NULL )
900093a0:	4604      	mov	r4, r0
900093a2:	b908      	cbnz	r0, 900093a8 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
900093a4:	4b04      	ldr	r3, [pc, #16]	@ (900093b8 <vTaskSetApplicationTaskTag+0x1c>)
900093a6:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
900093a8:	f7fe fe84 	bl	900080b4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
900093ac:	6565      	str	r5, [r4, #84]	@ 0x54
	}
900093ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
900093b2:	f7fe bea3 	b.w	900080fc <vPortExitCritical>
900093b6:	bf00      	nop
900093b8:	20013dbc 	.word	0x20013dbc

900093bc <xTaskCallApplicationTaskHook>:
	{
900093bc:	4603      	mov	r3, r0
900093be:	4608      	mov	r0, r1
		if( xTask == NULL )
900093c0:	b90b      	cbnz	r3, 900093c6 <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
900093c2:	4b03      	ldr	r3, [pc, #12]	@ (900093d0 <xTaskCallApplicationTaskHook+0x14>)
900093c4:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
900093c6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900093c8:	b103      	cbz	r3, 900093cc <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
900093ca:	4718      	bx	r3
	}
900093cc:	4618      	mov	r0, r3
900093ce:	4770      	bx	lr
900093d0:	20013dbc 	.word	0x20013dbc

900093d4 <vTaskStartScheduler>:
{
900093d4:	b510      	push	{r4, lr}
900093d6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
900093d8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
900093da:	aa07      	add	r2, sp, #28
900093dc:	a906      	add	r1, sp, #24
900093de:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
900093e0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
900093e4:	f7fe fcb2 	bl	90007d4c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
900093e8:	9b05      	ldr	r3, [sp, #20]
900093ea:	9a07      	ldr	r2, [sp, #28]
900093ec:	9302      	str	r3, [sp, #8]
900093ee:	9b06      	ldr	r3, [sp, #24]
900093f0:	491b      	ldr	r1, [pc, #108]	@ (90009460 <vTaskStartScheduler+0x8c>)
900093f2:	481c      	ldr	r0, [pc, #112]	@ (90009464 <vTaskStartScheduler+0x90>)
900093f4:	e9cd 4300 	strd	r4, r3, [sp]
900093f8:	4623      	mov	r3, r4
900093fa:	f7ff fe20 	bl	9000903e <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
900093fe:	b360      	cbz	r0, 9000945a <vTaskStartScheduler+0x86>
			xReturn = xTimerCreateTimerTask();
90009400:	f000 fa96 	bl	90009930 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
90009404:	2801      	cmp	r0, #1
90009406:	d11b      	bne.n	90009440 <vTaskStartScheduler+0x6c>
90009408:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000940c:	b672      	cpsid	i
9000940e:	f383 8811 	msr	BASEPRI, r3
90009412:	f3bf 8f6f 	isb	sy
90009416:	f3bf 8f4f 	dsb	sy
9000941a:	b662      	cpsie	i
		xNextTaskUnblockTime = portMAX_DELAY;
9000941c:	f04f 32ff 	mov.w	r2, #4294967295
90009420:	4b11      	ldr	r3, [pc, #68]	@ (90009468 <vTaskStartScheduler+0x94>)
		traceTASK_SWITCHED_IN();
90009422:	4621      	mov	r1, r4
		xNextTaskUnblockTime = portMAX_DELAY;
90009424:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
90009426:	4b11      	ldr	r3, [pc, #68]	@ (9000946c <vTaskStartScheduler+0x98>)
90009428:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000942a:	4b11      	ldr	r3, [pc, #68]	@ (90009470 <vTaskStartScheduler+0x9c>)
9000942c:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
9000942e:	4b11      	ldr	r3, [pc, #68]	@ (90009474 <vTaskStartScheduler+0xa0>)
90009430:	6818      	ldr	r0, [r3, #0]
90009432:	f7ff ffc3 	bl	900093bc <xTaskCallApplicationTaskHook>
}
90009436:	b008      	add	sp, #32
90009438:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
9000943c:	f7fe bed4 	b.w	900081e8 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90009440:	3001      	adds	r0, #1
90009442:	d10a      	bne.n	9000945a <vTaskStartScheduler+0x86>
90009444:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009448:	b672      	cpsid	i
9000944a:	f383 8811 	msr	BASEPRI, r3
9000944e:	f3bf 8f6f 	isb	sy
90009452:	f3bf 8f4f 	dsb	sy
90009456:	b662      	cpsie	i
90009458:	e7fe      	b.n	90009458 <vTaskStartScheduler+0x84>
}
9000945a:	b008      	add	sp, #32
9000945c:	bd10      	pop	{r4, pc}
9000945e:	bf00      	nop
90009460:	9002a085 	.word	0x9002a085
90009464:	90008f41 	.word	0x90008f41
90009468:	200138c8 	.word	0x200138c8
9000946c:	200138dc 	.word	0x200138dc
90009470:	200138e4 	.word	0x200138e4
90009474:	20013dbc 	.word	0x20013dbc

90009478 <vTaskSwitchContext>:
{
90009478:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
9000947a:	4b1d      	ldr	r3, [pc, #116]	@ (900094f0 <vTaskSwitchContext+0x78>)
9000947c:	681a      	ldr	r2, [r3, #0]
9000947e:	4b1d      	ldr	r3, [pc, #116]	@ (900094f4 <vTaskSwitchContext+0x7c>)
90009480:	b112      	cbz	r2, 90009488 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
90009482:	2201      	movs	r2, #1
90009484:	601a      	str	r2, [r3, #0]
}
90009486:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
90009488:	4c1b      	ldr	r4, [pc, #108]	@ (900094f8 <vTaskSwitchContext+0x80>)
9000948a:	2101      	movs	r1, #1
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000948c:	4e1b      	ldr	r6, [pc, #108]	@ (900094fc <vTaskSwitchContext+0x84>)
9000948e:	2714      	movs	r7, #20
		xYieldPending = pdFALSE;
90009490:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
90009492:	6820      	ldr	r0, [r4, #0]
90009494:	f7ff ff92 	bl	900093bc <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90009498:	6832      	ldr	r2, [r6, #0]
9000949a:	4919      	ldr	r1, [pc, #100]	@ (90009500 <vTaskSwitchContext+0x88>)
9000949c:	fb07 f302 	mul.w	r3, r7, r2
900094a0:	58cd      	ldr	r5, [r1, r3]
900094a2:	18c8      	adds	r0, r1, r3
900094a4:	b1ad      	cbz	r5, 900094d2 <vTaskSwitchContext+0x5a>
900094a6:	6845      	ldr	r5, [r0, #4]
900094a8:	3308      	adds	r3, #8
900094aa:	686d      	ldr	r5, [r5, #4]
900094ac:	440b      	add	r3, r1
900094ae:	429d      	cmp	r5, r3
900094b0:	6045      	str	r5, [r0, #4]
900094b2:	bf04      	itt	eq
900094b4:	686b      	ldreq	r3, [r5, #4]
900094b6:	6043      	streq	r3, [r0, #4]
900094b8:	2314      	movs	r3, #20
900094ba:	fb03 1102 	mla	r1, r3, r2, r1
900094be:	684b      	ldr	r3, [r1, #4]
		traceTASK_SWITCHED_IN();
900094c0:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900094c2:	68db      	ldr	r3, [r3, #12]
900094c4:	6023      	str	r3, [r4, #0]
900094c6:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
900094c8:	6820      	ldr	r0, [r4, #0]
}
900094ca:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
900094ce:	f7ff bf75 	b.w	900093bc <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900094d2:	b952      	cbnz	r2, 900094ea <vTaskSwitchContext+0x72>
900094d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900094d8:	b672      	cpsid	i
900094da:	f383 8811 	msr	BASEPRI, r3
900094de:	f3bf 8f6f 	isb	sy
900094e2:	f3bf 8f4f 	dsb	sy
900094e6:	b662      	cpsie	i
900094e8:	e7fe      	b.n	900094e8 <vTaskSwitchContext+0x70>
900094ea:	3a01      	subs	r2, #1
900094ec:	e7d6      	b.n	9000949c <vTaskSwitchContext+0x24>
900094ee:	bf00      	nop
900094f0:	200138c4 	.word	0x200138c4
900094f4:	200138d4 	.word	0x200138d4
900094f8:	20013dbc 	.word	0x20013dbc
900094fc:	200138e0 	.word	0x200138e0
90009500:	2001395c 	.word	0x2001395c

90009504 <vTaskPlaceOnEventList>:
{
90009504:	b510      	push	{r4, lr}
90009506:	460c      	mov	r4, r1
	configASSERT( pxEventList );
90009508:	b950      	cbnz	r0, 90009520 <vTaskPlaceOnEventList+0x1c>
9000950a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000950e:	b672      	cpsid	i
90009510:	f383 8811 	msr	BASEPRI, r3
90009514:	f3bf 8f6f 	isb	sy
90009518:	f3bf 8f4f 	dsb	sy
9000951c:	b662      	cpsie	i
9000951e:	e7fe      	b.n	9000951e <vTaskPlaceOnEventList+0x1a>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90009520:	4b05      	ldr	r3, [pc, #20]	@ (90009538 <vTaskPlaceOnEventList+0x34>)
90009522:	6819      	ldr	r1, [r3, #0]
90009524:	3118      	adds	r1, #24
90009526:	f7fe fd38 	bl	90007f9a <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
9000952a:	4620      	mov	r0, r4
9000952c:	2101      	movs	r1, #1
}
9000952e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
90009532:	f7ff bc9d 	b.w	90008e70 <prvAddCurrentTaskToDelayedList>
90009536:	bf00      	nop
90009538:	20013dbc 	.word	0x20013dbc

9000953c <vTaskPlaceOnEventListRestricted>:
	{
9000953c:	b538      	push	{r3, r4, r5, lr}
9000953e:	460d      	mov	r5, r1
90009540:	4614      	mov	r4, r2
		configASSERT( pxEventList );
90009542:	b950      	cbnz	r0, 9000955a <vTaskPlaceOnEventListRestricted+0x1e>
90009544:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009548:	b672      	cpsid	i
9000954a:	f383 8811 	msr	BASEPRI, r3
9000954e:	f3bf 8f6f 	isb	sy
90009552:	f3bf 8f4f 	dsb	sy
90009556:	b662      	cpsie	i
90009558:	e7fe      	b.n	90009558 <vTaskPlaceOnEventListRestricted+0x1c>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000955a:	4b07      	ldr	r3, [pc, #28]	@ (90009578 <vTaskPlaceOnEventListRestricted+0x3c>)
9000955c:	6819      	ldr	r1, [r3, #0]
9000955e:	3118      	adds	r1, #24
90009560:	f7fe fd10 	bl	90007f84 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
90009564:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
90009566:	4621      	mov	r1, r4
90009568:	bf0c      	ite	eq
9000956a:	4628      	moveq	r0, r5
9000956c:	f04f 30ff 	movne.w	r0, #4294967295
	}
90009570:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
90009574:	f7ff bc7c 	b.w	90008e70 <prvAddCurrentTaskToDelayedList>
90009578:	20013dbc 	.word	0x20013dbc

9000957c <xTaskRemoveFromEventList>:
{
9000957c:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000957e:	68c3      	ldr	r3, [r0, #12]
90009580:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
90009582:	b954      	cbnz	r4, 9000959a <xTaskRemoveFromEventList+0x1e>
90009584:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009588:	b672      	cpsid	i
9000958a:	f383 8811 	msr	BASEPRI, r3
9000958e:	f3bf 8f6f 	isb	sy
90009592:	f3bf 8f4f 	dsb	sy
90009596:	b662      	cpsie	i
90009598:	e7fe      	b.n	90009598 <xTaskRemoveFromEventList+0x1c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9000959a:	f104 0518 	add.w	r5, r4, #24
9000959e:	4628      	mov	r0, r5
900095a0:	f7fe fd12 	bl	90007fc8 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900095a4:	4b11      	ldr	r3, [pc, #68]	@ (900095ec <xTaskRemoveFromEventList+0x70>)
900095a6:	681b      	ldr	r3, [r3, #0]
900095a8:	b9d3      	cbnz	r3, 900095e0 <xTaskRemoveFromEventList+0x64>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
900095aa:	1d25      	adds	r5, r4, #4
900095ac:	4628      	mov	r0, r5
900095ae:	f7fe fd0b 	bl	90007fc8 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
900095b2:	4a0f      	ldr	r2, [pc, #60]	@ (900095f0 <xTaskRemoveFromEventList+0x74>)
900095b4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900095b6:	6811      	ldr	r1, [r2, #0]
900095b8:	428b      	cmp	r3, r1
900095ba:	d900      	bls.n	900095be <xTaskRemoveFromEventList+0x42>
900095bc:	6013      	str	r3, [r2, #0]
900095be:	2014      	movs	r0, #20
900095c0:	4a0c      	ldr	r2, [pc, #48]	@ (900095f4 <xTaskRemoveFromEventList+0x78>)
900095c2:	4629      	mov	r1, r5
900095c4:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
900095c8:	f7fe fcdc 	bl	90007f84 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
900095cc:	4b0a      	ldr	r3, [pc, #40]	@ (900095f8 <xTaskRemoveFromEventList+0x7c>)
900095ce:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
900095d0:	681b      	ldr	r3, [r3, #0]
900095d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900095d4:	429a      	cmp	r2, r3
900095d6:	d906      	bls.n	900095e6 <xTaskRemoveFromEventList+0x6a>
		xYieldPending = pdTRUE;
900095d8:	2001      	movs	r0, #1
900095da:	4b08      	ldr	r3, [pc, #32]	@ (900095fc <xTaskRemoveFromEventList+0x80>)
900095dc:	6018      	str	r0, [r3, #0]
}
900095de:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
900095e0:	4629      	mov	r1, r5
900095e2:	4807      	ldr	r0, [pc, #28]	@ (90009600 <xTaskRemoveFromEventList+0x84>)
900095e4:	e7f0      	b.n	900095c8 <xTaskRemoveFromEventList+0x4c>
		xReturn = pdFALSE;
900095e6:	2000      	movs	r0, #0
	return xReturn;
900095e8:	e7f9      	b.n	900095de <xTaskRemoveFromEventList+0x62>
900095ea:	bf00      	nop
900095ec:	200138c4 	.word	0x200138c4
900095f0:	200138e0 	.word	0x200138e0
900095f4:	2001395c 	.word	0x2001395c
900095f8:	20013dbc 	.word	0x20013dbc
900095fc:	200138d4 	.word	0x200138d4
90009600:	20013918 	.word	0x20013918

90009604 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90009604:	4b03      	ldr	r3, [pc, #12]	@ (90009614 <vTaskInternalSetTimeOutState+0x10>)
90009606:	681b      	ldr	r3, [r3, #0]
90009608:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000960a:	4b03      	ldr	r3, [pc, #12]	@ (90009618 <vTaskInternalSetTimeOutState+0x14>)
9000960c:	681b      	ldr	r3, [r3, #0]
9000960e:	6043      	str	r3, [r0, #4]
}
90009610:	4770      	bx	lr
90009612:	bf00      	nop
90009614:	200138d0 	.word	0x200138d0
90009618:	200138e4 	.word	0x200138e4

9000961c <xTaskCheckForTimeOut>:
{
9000961c:	b570      	push	{r4, r5, r6, lr}
9000961e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
90009620:	4605      	mov	r5, r0
90009622:	b950      	cbnz	r0, 9000963a <xTaskCheckForTimeOut+0x1e>
90009624:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009628:	b672      	cpsid	i
9000962a:	f383 8811 	msr	BASEPRI, r3
9000962e:	f3bf 8f6f 	isb	sy
90009632:	f3bf 8f4f 	dsb	sy
90009636:	b662      	cpsie	i
90009638:	e7fe      	b.n	90009638 <xTaskCheckForTimeOut+0x1c>
	configASSERT( pxTicksToWait );
9000963a:	b951      	cbnz	r1, 90009652 <xTaskCheckForTimeOut+0x36>
9000963c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009640:	b672      	cpsid	i
90009642:	f383 8811 	msr	BASEPRI, r3
90009646:	f3bf 8f6f 	isb	sy
9000964a:	f3bf 8f4f 	dsb	sy
9000964e:	b662      	cpsie	i
90009650:	e7fe      	b.n	90009650 <xTaskCheckForTimeOut+0x34>
	taskENTER_CRITICAL();
90009652:	f7fe fd2f 	bl	900080b4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
90009656:	4b0f      	ldr	r3, [pc, #60]	@ (90009694 <xTaskCheckForTimeOut+0x78>)
90009658:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
9000965a:	6823      	ldr	r3, [r4, #0]
9000965c:	1c5a      	adds	r2, r3, #1
9000965e:	d010      	beq.n	90009682 <xTaskCheckForTimeOut+0x66>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90009660:	480d      	ldr	r0, [pc, #52]	@ (90009698 <xTaskCheckForTimeOut+0x7c>)
90009662:	682e      	ldr	r6, [r5, #0]
90009664:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90009666:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90009668:	4286      	cmp	r6, r0
9000966a:	d001      	beq.n	90009670 <xTaskCheckForTimeOut+0x54>
9000966c:	428a      	cmp	r2, r1
9000966e:	d90f      	bls.n	90009690 <xTaskCheckForTimeOut+0x74>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90009670:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
90009672:	4283      	cmp	r3, r0
90009674:	d90a      	bls.n	9000968c <xTaskCheckForTimeOut+0x70>
			*pxTicksToWait -= xElapsedTime;
90009676:	1a5b      	subs	r3, r3, r1
			vTaskInternalSetTimeOutState( pxTimeOut );
90009678:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
9000967a:	4413      	add	r3, r2
9000967c:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
9000967e:	f7ff ffc1 	bl	90009604 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
90009682:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
90009684:	f7fe fd3a 	bl	900080fc <vPortExitCritical>
}
90009688:	4620      	mov	r0, r4
9000968a:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
9000968c:	2300      	movs	r3, #0
9000968e:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
90009690:	2401      	movs	r4, #1
90009692:	e7f7      	b.n	90009684 <xTaskCheckForTimeOut+0x68>
90009694:	200138e4 	.word	0x200138e4
90009698:	200138d0 	.word	0x200138d0

9000969c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
9000969c:	4b01      	ldr	r3, [pc, #4]	@ (900096a4 <vTaskMissedYield+0x8>)
9000969e:	2201      	movs	r2, #1
900096a0:	601a      	str	r2, [r3, #0]
}
900096a2:	4770      	bx	lr
900096a4:	200138d4 	.word	0x200138d4

900096a8 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
900096a8:	4b05      	ldr	r3, [pc, #20]	@ (900096c0 <xTaskGetSchedulerState+0x18>)
900096aa:	681b      	ldr	r3, [r3, #0]
900096ac:	b133      	cbz	r3, 900096bc <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900096ae:	4b05      	ldr	r3, [pc, #20]	@ (900096c4 <xTaskGetSchedulerState+0x1c>)
900096b0:	6818      	ldr	r0, [r3, #0]
900096b2:	fab0 f080 	clz	r0, r0
900096b6:	0940      	lsrs	r0, r0, #5
900096b8:	0040      	lsls	r0, r0, #1
900096ba:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
900096bc:	2001      	movs	r0, #1
	}
900096be:	4770      	bx	lr
900096c0:	200138dc 	.word	0x200138dc
900096c4:	200138c4 	.word	0x200138c4

900096c8 <xTaskPriorityInherit>:
	{
900096c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
900096ca:	4604      	mov	r4, r0
900096cc:	b338      	cbz	r0, 9000971e <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
900096ce:	4d1a      	ldr	r5, [pc, #104]	@ (90009738 <xTaskPriorityInherit+0x70>)
900096d0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900096d2:	682a      	ldr	r2, [r5, #0]
900096d4:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900096d6:	4293      	cmp	r3, r2
900096d8:	d226      	bcs.n	90009728 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
900096da:	6982      	ldr	r2, [r0, #24]
900096dc:	2a00      	cmp	r2, #0
900096de:	db04      	blt.n	900096ea <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900096e0:	682a      	ldr	r2, [r5, #0]
900096e2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900096e4:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
900096e8:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
900096ea:	2214      	movs	r2, #20
900096ec:	4e13      	ldr	r6, [pc, #76]	@ (9000973c <xTaskPriorityInherit+0x74>)
900096ee:	fb02 6303 	mla	r3, r2, r3, r6
900096f2:	6962      	ldr	r2, [r4, #20]
900096f4:	429a      	cmp	r2, r3
900096f6:	d113      	bne.n	90009720 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900096f8:	1d27      	adds	r7, r4, #4
900096fa:	4638      	mov	r0, r7
900096fc:	f7fe fc64 	bl	90007fc8 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90009700:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
90009702:	4a0f      	ldr	r2, [pc, #60]	@ (90009740 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90009704:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90009706:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90009708:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000970a:	428b      	cmp	r3, r1
9000970c:	d900      	bls.n	90009710 <xTaskPriorityInherit+0x48>
9000970e:	6013      	str	r3, [r2, #0]
90009710:	2014      	movs	r0, #20
90009712:	4639      	mov	r1, r7
90009714:	fb00 6003 	mla	r0, r0, r3, r6
90009718:	f7fe fc34 	bl	90007f84 <vListInsertEnd>
				xReturn = pdTRUE;
9000971c:	2001      	movs	r0, #1
	}
9000971e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90009720:	682b      	ldr	r3, [r5, #0]
90009722:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90009724:	62e3      	str	r3, [r4, #44]	@ 0x2c
90009726:	e7f9      	b.n	9000971c <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
90009728:	682b      	ldr	r3, [r5, #0]
9000972a:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
9000972c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000972e:	4298      	cmp	r0, r3
90009730:	bf2c      	ite	cs
90009732:	2000      	movcs	r0, #0
90009734:	2001      	movcc	r0, #1
90009736:	e7f2      	b.n	9000971e <xTaskPriorityInherit+0x56>
90009738:	20013dbc 	.word	0x20013dbc
9000973c:	2001395c 	.word	0x2001395c
90009740:	200138e0 	.word	0x200138e0

90009744 <xTaskPriorityDisinherit>:
	{
90009744:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
90009746:	b908      	cbnz	r0, 9000974c <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
90009748:	2000      	movs	r0, #0
	}
9000974a:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
9000974c:	4b1d      	ldr	r3, [pc, #116]	@ (900097c4 <xTaskPriorityDisinherit+0x80>)
9000974e:	681c      	ldr	r4, [r3, #0]
90009750:	4284      	cmp	r4, r0
90009752:	d00a      	beq.n	9000976a <xTaskPriorityDisinherit+0x26>
90009754:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009758:	b672      	cpsid	i
9000975a:	f383 8811 	msr	BASEPRI, r3
9000975e:	f3bf 8f6f 	isb	sy
90009762:	f3bf 8f4f 	dsb	sy
90009766:	b662      	cpsie	i
90009768:	e7fe      	b.n	90009768 <xTaskPriorityDisinherit+0x24>
			configASSERT( pxTCB->uxMutexesHeld );
9000976a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000976c:	b953      	cbnz	r3, 90009784 <xTaskPriorityDisinherit+0x40>
9000976e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009772:	b672      	cpsid	i
90009774:	f383 8811 	msr	BASEPRI, r3
90009778:	f3bf 8f6f 	isb	sy
9000977c:	f3bf 8f4f 	dsb	sy
90009780:	b662      	cpsie	i
90009782:	e7fe      	b.n	90009782 <xTaskPriorityDisinherit+0x3e>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90009784:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
90009786:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90009788:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
9000978a:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000978c:	4291      	cmp	r1, r2
9000978e:	d0db      	beq.n	90009748 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
90009790:	2b00      	cmp	r3, #0
90009792:	d1d9      	bne.n	90009748 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90009794:	1d25      	adds	r5, r4, #4
90009796:	4628      	mov	r0, r5
90009798:	f7fe fc16 	bl	90007fc8 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000979c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000979e:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
900097a2:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900097a4:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
900097a6:	4a08      	ldr	r2, [pc, #32]	@ (900097c8 <xTaskPriorityDisinherit+0x84>)
900097a8:	6811      	ldr	r1, [r2, #0]
900097aa:	428b      	cmp	r3, r1
900097ac:	d900      	bls.n	900097b0 <xTaskPriorityDisinherit+0x6c>
900097ae:	6013      	str	r3, [r2, #0]
900097b0:	4a06      	ldr	r2, [pc, #24]	@ (900097cc <xTaskPriorityDisinherit+0x88>)
900097b2:	2014      	movs	r0, #20
900097b4:	4629      	mov	r1, r5
900097b6:	fb00 2003 	mla	r0, r0, r3, r2
900097ba:	f7fe fbe3 	bl	90007f84 <vListInsertEnd>
					xReturn = pdTRUE;
900097be:	2001      	movs	r0, #1
		return xReturn;
900097c0:	e7c3      	b.n	9000974a <xTaskPriorityDisinherit+0x6>
900097c2:	bf00      	nop
900097c4:	20013dbc 	.word	0x20013dbc
900097c8:	200138e0 	.word	0x200138e0
900097cc:	2001395c 	.word	0x2001395c

900097d0 <vTaskPriorityDisinheritAfterTimeout>:
	{
900097d0:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
900097d2:	4604      	mov	r4, r0
900097d4:	2800      	cmp	r0, #0
900097d6:	d046      	beq.n	90009866 <vTaskPriorityDisinheritAfterTimeout+0x96>
			configASSERT( pxTCB->uxMutexesHeld );
900097d8:	6d02      	ldr	r2, [r0, #80]	@ 0x50
900097da:	b952      	cbnz	r2, 900097f2 <vTaskPriorityDisinheritAfterTimeout+0x22>
900097dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
900097e0:	b672      	cpsid	i
900097e2:	f383 8811 	msr	BASEPRI, r3
900097e6:	f3bf 8f6f 	isb	sy
900097ea:	f3bf 8f4f 	dsb	sy
900097ee:	b662      	cpsie	i
900097f0:	e7fe      	b.n	900097f0 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
900097f2:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
900097f4:	4299      	cmp	r1, r3
900097f6:	bf38      	it	cc
900097f8:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
900097fa:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900097fc:	428b      	cmp	r3, r1
900097fe:	d032      	beq.n	90009866 <vTaskPriorityDisinheritAfterTimeout+0x96>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
90009800:	2a01      	cmp	r2, #1
90009802:	d130      	bne.n	90009866 <vTaskPriorityDisinheritAfterTimeout+0x96>
					configASSERT( pxTCB != pxCurrentTCB );
90009804:	4a18      	ldr	r2, [pc, #96]	@ (90009868 <vTaskPriorityDisinheritAfterTimeout+0x98>)
90009806:	6812      	ldr	r2, [r2, #0]
90009808:	4282      	cmp	r2, r0
9000980a:	d10a      	bne.n	90009822 <vTaskPriorityDisinheritAfterTimeout+0x52>
9000980c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009810:	b672      	cpsid	i
90009812:	f383 8811 	msr	BASEPRI, r3
90009816:	f3bf 8f6f 	isb	sy
9000981a:	f3bf 8f4f 	dsb	sy
9000981e:	b662      	cpsie	i
90009820:	e7fe      	b.n	90009820 <vTaskPriorityDisinheritAfterTimeout+0x50>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90009822:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
90009824:	4d11      	ldr	r5, [pc, #68]	@ (9000986c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90009826:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
90009828:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
9000982c:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000982e:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90009832:	bfa8      	it	ge
90009834:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
90009838:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000983a:	bfa8      	it	ge
9000983c:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000983e:	429a      	cmp	r2, r3
90009840:	d111      	bne.n	90009866 <vTaskPriorityDisinheritAfterTimeout+0x96>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90009842:	1d06      	adds	r6, r0, #4
90009844:	4630      	mov	r0, r6
90009846:	f7fe fbbf 	bl	90007fc8 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
9000984a:	4a09      	ldr	r2, [pc, #36]	@ (90009870 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
9000984c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000984e:	6811      	ldr	r1, [r2, #0]
90009850:	428b      	cmp	r3, r1
90009852:	d900      	bls.n	90009856 <vTaskPriorityDisinheritAfterTimeout+0x86>
90009854:	6013      	str	r3, [r2, #0]
90009856:	2014      	movs	r0, #20
90009858:	4631      	mov	r1, r6
9000985a:	fb00 5003 	mla	r0, r0, r3, r5
	}
9000985e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
90009862:	f7fe bb8f 	b.w	90007f84 <vListInsertEnd>
	}
90009866:	bd70      	pop	{r4, r5, r6, pc}
90009868:	20013dbc 	.word	0x20013dbc
9000986c:	2001395c 	.word	0x2001395c
90009870:	200138e0 	.word	0x200138e0

90009874 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
90009874:	4b04      	ldr	r3, [pc, #16]	@ (90009888 <pvTaskIncrementMutexHeldCount+0x14>)
90009876:	681a      	ldr	r2, [r3, #0]
90009878:	b11a      	cbz	r2, 90009882 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9000987a:	6819      	ldr	r1, [r3, #0]
9000987c:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
9000987e:	3201      	adds	r2, #1
90009880:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
90009882:	6818      	ldr	r0, [r3, #0]
	}
90009884:	4770      	bx	lr
90009886:	bf00      	nop
90009888:	20013dbc 	.word	0x20013dbc

9000988c <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
9000988c:	4291      	cmp	r1, r2
{
9000988e:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90009890:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90009892:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
90009894:	d80a      	bhi.n	900098ac <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90009896:	1ad2      	subs	r2, r2, r3
90009898:	6983      	ldr	r3, [r0, #24]
9000989a:	429a      	cmp	r2, r3
9000989c:	d20d      	bcs.n	900098ba <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000989e:	1d01      	adds	r1, r0, #4
900098a0:	4b07      	ldr	r3, [pc, #28]	@ (900098c0 <prvInsertTimerInActiveList+0x34>)
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900098a2:	6818      	ldr	r0, [r3, #0]
900098a4:	f7fe fb79 	bl	90007f9a <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
900098a8:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
900098aa:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
900098ac:	429a      	cmp	r2, r3
900098ae:	d201      	bcs.n	900098b4 <prvInsertTimerInActiveList+0x28>
900098b0:	4299      	cmp	r1, r3
900098b2:	d202      	bcs.n	900098ba <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900098b4:	1d01      	adds	r1, r0, #4
900098b6:	4b03      	ldr	r3, [pc, #12]	@ (900098c4 <prvInsertTimerInActiveList+0x38>)
900098b8:	e7f3      	b.n	900098a2 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
900098ba:	2001      	movs	r0, #1
	return xProcessTimerNow;
900098bc:	e7f5      	b.n	900098aa <prvInsertTimerInActiveList+0x1e>
900098be:	bf00      	nop
900098c0:	20013ebc 	.word	0x20013ebc
900098c4:	20013ec0 	.word	0x20013ec0

900098c8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
900098c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
900098ca:	4c11      	ldr	r4, [pc, #68]	@ (90009910 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
900098cc:	f7fe fbf2 	bl	900080b4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
900098d0:	6825      	ldr	r5, [r4, #0]
900098d2:	b9bd      	cbnz	r5, 90009904 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
900098d4:	4f0f      	ldr	r7, [pc, #60]	@ (90009914 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
900098d6:	4e10      	ldr	r6, [pc, #64]	@ (90009918 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
900098d8:	4638      	mov	r0, r7
900098da:	f7fe fb45 	bl	90007f68 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
900098de:	4630      	mov	r0, r6
900098e0:	f7fe fb42 	bl	90007f68 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
900098e4:	4b0d      	ldr	r3, [pc, #52]	@ (9000991c <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
900098e6:	4a0e      	ldr	r2, [pc, #56]	@ (90009920 <prvCheckForValidListAndQueue+0x58>)
900098e8:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
900098ea:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
900098ec:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
900098ee:	4b0d      	ldr	r3, [pc, #52]	@ (90009924 <prvCheckForValidListAndQueue+0x5c>)
900098f0:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
900098f2:	4b0d      	ldr	r3, [pc, #52]	@ (90009928 <prvCheckForValidListAndQueue+0x60>)
900098f4:	9500      	str	r5, [sp, #0]
900098f6:	f7fe fe21 	bl	9000853c <xQueueGenericCreateStatic>
900098fa:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
900098fc:	b110      	cbz	r0, 90009904 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
900098fe:	490b      	ldr	r1, [pc, #44]	@ (9000992c <prvCheckForValidListAndQueue+0x64>)
90009900:	f7ff f9d4 	bl	90008cac <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
90009904:	b003      	add	sp, #12
90009906:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
9000990a:	f7fe bbf7 	b.w	900080fc <vPortExitCritical>
9000990e:	bf00      	nop
90009910:	20013eb8 	.word	0x20013eb8
90009914:	20013ed8 	.word	0x20013ed8
90009918:	20013ec4 	.word	0x20013ec4
9000991c:	20013ec0 	.word	0x20013ec0
90009920:	20013e10 	.word	0x20013e10
90009924:	20013ebc 	.word	0x20013ebc
90009928:	20013dc0 	.word	0x20013dc0
9000992c:	9002a08a 	.word	0x9002a08a

90009930 <xTimerCreateTimerTask>:
{
90009930:	b510      	push	{r4, lr}
90009932:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
90009934:	f7ff ffc8 	bl	900098c8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
90009938:	4b13      	ldr	r3, [pc, #76]	@ (90009988 <xTimerCreateTimerTask+0x58>)
9000993a:	681b      	ldr	r3, [r3, #0]
9000993c:	b1b3      	cbz	r3, 9000996c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
9000993e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90009940:	aa07      	add	r2, sp, #28
90009942:	a906      	add	r1, sp, #24
90009944:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
90009946:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000994a:	f7fe fa0b 	bl	90007d64 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000994e:	9b05      	ldr	r3, [sp, #20]
90009950:	9a07      	ldr	r2, [sp, #28]
90009952:	9302      	str	r3, [sp, #8]
90009954:	9b06      	ldr	r3, [sp, #24]
90009956:	490d      	ldr	r1, [pc, #52]	@ (9000998c <xTimerCreateTimerTask+0x5c>)
90009958:	9301      	str	r3, [sp, #4]
9000995a:	2302      	movs	r3, #2
9000995c:	480c      	ldr	r0, [pc, #48]	@ (90009990 <xTimerCreateTimerTask+0x60>)
9000995e:	9300      	str	r3, [sp, #0]
90009960:	4623      	mov	r3, r4
90009962:	f7ff fb6c 	bl	9000903e <xTaskCreateStatic>
90009966:	4b0b      	ldr	r3, [pc, #44]	@ (90009994 <xTimerCreateTimerTask+0x64>)
90009968:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
9000996a:	b950      	cbnz	r0, 90009982 <xTimerCreateTimerTask+0x52>
9000996c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009970:	b672      	cpsid	i
90009972:	f383 8811 	msr	BASEPRI, r3
90009976:	f3bf 8f6f 	isb	sy
9000997a:	f3bf 8f4f 	dsb	sy
9000997e:	b662      	cpsie	i
	configASSERT( xReturn );
90009980:	e7fe      	b.n	90009980 <xTimerCreateTimerTask+0x50>
}
90009982:	2001      	movs	r0, #1
90009984:	b008      	add	sp, #32
90009986:	bd10      	pop	{r4, pc}
90009988:	20013eb8 	.word	0x20013eb8
9000998c:	9002a08f 	.word	0x9002a08f
90009990:	90009a99 	.word	0x90009a99
90009994:	20013eb4 	.word	0x20013eb4

90009998 <xTimerGenericCommand>:
{
90009998:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9000999a:	4616      	mov	r6, r2
	configASSERT( xTimer );
9000999c:	4604      	mov	r4, r0
{
9000999e:	461a      	mov	r2, r3
	configASSERT( xTimer );
900099a0:	b950      	cbnz	r0, 900099b8 <xTimerGenericCommand+0x20>
900099a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
900099a6:	b672      	cpsid	i
900099a8:	f383 8811 	msr	BASEPRI, r3
900099ac:	f3bf 8f6f 	isb	sy
900099b0:	f3bf 8f4f 	dsb	sy
900099b4:	b662      	cpsie	i
900099b6:	e7fe      	b.n	900099b6 <xTimerGenericCommand+0x1e>
	if( xTimerQueue != NULL )
900099b8:	4d0c      	ldr	r5, [pc, #48]	@ (900099ec <xTimerGenericCommand+0x54>)
900099ba:	6828      	ldr	r0, [r5, #0]
900099bc:	b178      	cbz	r0, 900099de <xTimerGenericCommand+0x46>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
900099be:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
900099c0:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
900099c2:	e9cd 1600 	strd	r1, r6, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
900099c6:	dc0c      	bgt.n	900099e2 <xTimerGenericCommand+0x4a>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
900099c8:	f7ff fe6e 	bl	900096a8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
900099cc:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
900099ce:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
900099d0:	4669      	mov	r1, sp
900099d2:	6828      	ldr	r0, [r5, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
900099d4:	bf0c      	ite	eq
900099d6:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
900099d8:	461a      	movne	r2, r3
900099da:	f7fe fe34 	bl	90008646 <xQueueGenericSend>
}
900099de:	b004      	add	sp, #16
900099e0:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
900099e2:	2300      	movs	r3, #0
900099e4:	4669      	mov	r1, sp
900099e6:	f7fe fee8 	bl	900087ba <xQueueGenericSendFromISR>
900099ea:	e7f8      	b.n	900099de <xTimerGenericCommand+0x46>
900099ec:	20013eb8 	.word	0x20013eb8

900099f0 <prvSampleTimeNow>:
{
900099f0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
900099f4:	f8df 809c 	ldr.w	r8, [pc, #156]	@ 90009a94 <prvSampleTimeNow+0xa4>
{
900099f8:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
900099fa:	f7ff fb95 	bl	90009128 <xTaskGetTickCount>
900099fe:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
90009a00:	f8d8 3000 	ldr.w	r3, [r8]
90009a04:	4283      	cmp	r3, r0
90009a06:	d909      	bls.n	90009a1c <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90009a08:	4f20      	ldr	r7, [pc, #128]	@ (90009a8c <prvSampleTimeNow+0x9c>)
90009a0a:	683b      	ldr	r3, [r7, #0]
90009a0c:	681a      	ldr	r2, [r3, #0]
90009a0e:	b96a      	cbnz	r2, 90009a2c <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
90009a10:	4a1f      	ldr	r2, [pc, #124]	@ (90009a90 <prvSampleTimeNow+0xa0>)
90009a12:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
90009a14:	6013      	str	r3, [r2, #0]
90009a16:	2301      	movs	r3, #1
	pxCurrentTimerList = pxOverflowTimerList;
90009a18:	6039      	str	r1, [r7, #0]
		*pxTimerListsWereSwitched = pdTRUE;
90009a1a:	e000      	b.n	90009a1e <prvSampleTimeNow+0x2e>
90009a1c:	2300      	movs	r3, #0
}
90009a1e:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
90009a20:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
90009a22:	f8c8 5000 	str.w	r5, [r8]
}
90009a26:	b002      	add	sp, #8
90009a28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90009a2c:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90009a2e:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90009a30:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90009a34:	f104 0a04 	add.w	sl, r4, #4
90009a38:	4650      	mov	r0, sl
90009a3a:	f7fe fac5 	bl	90007fc8 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90009a3e:	6a23      	ldr	r3, [r4, #32]
90009a40:	4620      	mov	r0, r4
90009a42:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90009a44:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90009a48:	075b      	lsls	r3, r3, #29
90009a4a:	d5de      	bpl.n	90009a0a <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90009a4c:	69a3      	ldr	r3, [r4, #24]
90009a4e:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
90009a50:	4599      	cmp	r9, r3
90009a52:	d206      	bcs.n	90009a62 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90009a54:	4651      	mov	r1, sl
90009a56:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
90009a58:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90009a5a:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90009a5c:	f7fe fa9d 	bl	90007f9a <vListInsert>
90009a60:	e7d3      	b.n	90009a0a <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
90009a62:	2300      	movs	r3, #0
90009a64:	464a      	mov	r2, r9
90009a66:	4620      	mov	r0, r4
90009a68:	4619      	mov	r1, r3
90009a6a:	9300      	str	r3, [sp, #0]
90009a6c:	f7ff ff94 	bl	90009998 <xTimerGenericCommand>
				configASSERT( xResult );
90009a70:	2800      	cmp	r0, #0
90009a72:	d1ca      	bne.n	90009a0a <prvSampleTimeNow+0x1a>
90009a74:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009a78:	b672      	cpsid	i
90009a7a:	f383 8811 	msr	BASEPRI, r3
90009a7e:	f3bf 8f6f 	isb	sy
90009a82:	f3bf 8f4f 	dsb	sy
90009a86:	b662      	cpsie	i
90009a88:	e7fe      	b.n	90009a88 <prvSampleTimeNow+0x98>
90009a8a:	bf00      	nop
90009a8c:	20013ec0 	.word	0x20013ec0
90009a90:	20013ebc 	.word	0x20013ebc
90009a94:	20013eb0 	.word	0x20013eb0

90009a98 <prvTimerTask>:
{
90009a98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
90009a9c:	4d71      	ldr	r5, [pc, #452]	@ (90009c64 <prvTimerTask+0x1cc>)
{
90009a9e:	b089      	sub	sp, #36	@ 0x24
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
90009aa0:	4e71      	ldr	r6, [pc, #452]	@ (90009c68 <prvTimerTask+0x1d0>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
90009aa2:	682b      	ldr	r3, [r5, #0]
90009aa4:	f8d3 8000 	ldr.w	r8, [r3]
90009aa8:	f1b8 0f00 	cmp.w	r8, #0
90009aac:	d037      	beq.n	90009b1e <prvTimerTask+0x86>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90009aae:	68db      	ldr	r3, [r3, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
90009ab0:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90009ab2:	f8d3 8000 	ldr.w	r8, [r3]
	vTaskSuspendAll();
90009ab6:	f7ff fb2f 	bl	90009118 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
90009aba:	a804      	add	r0, sp, #16
90009abc:	f7ff ff98 	bl	900099f0 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
90009ac0:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
90009ac2:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
90009ac4:	2b00      	cmp	r3, #0
90009ac6:	d16b      	bne.n	90009ba0 <prvTimerTask+0x108>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90009ac8:	2c00      	cmp	r4, #0
90009aca:	d14e      	bne.n	90009b6a <prvTimerTask+0xd2>
90009acc:	4540      	cmp	r0, r8
90009ace:	d352      	bcc.n	90009b76 <prvTimerTask+0xde>
				( void ) xTaskResumeAll();
90009ad0:	f7ff fbc8 	bl	90009264 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90009ad4:	682b      	ldr	r3, [r5, #0]
90009ad6:	68db      	ldr	r3, [r3, #12]
90009ad8:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90009ada:	1d38      	adds	r0, r7, #4
90009adc:	f7fe fa74 	bl	90007fc8 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90009ae0:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90009ae4:	0758      	lsls	r0, r3, #29
90009ae6:	d51c      	bpl.n	90009b22 <prvTimerTask+0x8a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90009ae8:	69b9      	ldr	r1, [r7, #24]
90009aea:	4643      	mov	r3, r8
90009aec:	464a      	mov	r2, r9
90009aee:	4638      	mov	r0, r7
90009af0:	4441      	add	r1, r8
90009af2:	f7ff fecb 	bl	9000988c <prvInsertTimerInActiveList>
90009af6:	b1c0      	cbz	r0, 90009b2a <prvTimerTask+0x92>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
90009af8:	4623      	mov	r3, r4
90009afa:	4642      	mov	r2, r8
90009afc:	4621      	mov	r1, r4
90009afe:	4638      	mov	r0, r7
90009b00:	9400      	str	r4, [sp, #0]
90009b02:	f7ff ff49 	bl	90009998 <xTimerGenericCommand>
			configASSERT( xResult );
90009b06:	b980      	cbnz	r0, 90009b2a <prvTimerTask+0x92>
90009b08:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009b0c:	b672      	cpsid	i
90009b0e:	f383 8811 	msr	BASEPRI, r3
90009b12:	f3bf 8f6f 	isb	sy
90009b16:	f3bf 8f4f 	dsb	sy
90009b1a:	b662      	cpsie	i
90009b1c:	e7fe      	b.n	90009b1c <prvTimerTask+0x84>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
90009b1e:	2401      	movs	r4, #1
90009b20:	e7c9      	b.n	90009ab6 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90009b22:	f023 0301 	bic.w	r3, r3, #1
90009b26:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90009b2a:	6a3b      	ldr	r3, [r7, #32]
90009b2c:	4638      	mov	r0, r7
90009b2e:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
90009b30:	2200      	movs	r2, #0
90009b32:	a904      	add	r1, sp, #16
90009b34:	6830      	ldr	r0, [r6, #0]
90009b36:	f7fe fefd 	bl	90008934 <xQueueReceive>
90009b3a:	2800      	cmp	r0, #0
90009b3c:	d0b1      	beq.n	90009aa2 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90009b3e:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90009b40:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90009b42:	2b00      	cmp	r3, #0
90009b44:	db2f      	blt.n	90009ba6 <prvTimerTask+0x10e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
90009b46:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
90009b48:	6963      	ldr	r3, [r4, #20]
90009b4a:	2b00      	cmp	r3, #0
90009b4c:	d132      	bne.n	90009bb4 <prvTimerTask+0x11c>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
90009b4e:	a803      	add	r0, sp, #12
90009b50:	f7ff ff4e 	bl	900099f0 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
90009b54:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
90009b56:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
90009b58:	2b09      	cmp	r3, #9
90009b5a:	d8e9      	bhi.n	90009b30 <prvTimerTask+0x98>
90009b5c:	e8df f003 	tbb	[pc, r3]
90009b60:	592e2e2e 	.word	0x592e2e2e
90009b64:	2e2e7a60 	.word	0x2e2e7a60
90009b68:	6059      	.short	0x6059
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90009b6a:	4b40      	ldr	r3, [pc, #256]	@ (90009c6c <prvTimerTask+0x1d4>)
90009b6c:	681b      	ldr	r3, [r3, #0]
90009b6e:	681c      	ldr	r4, [r3, #0]
90009b70:	fab4 f484 	clz	r4, r4
90009b74:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
90009b76:	4622      	mov	r2, r4
90009b78:	eba8 0109 	sub.w	r1, r8, r9
90009b7c:	6830      	ldr	r0, [r6, #0]
90009b7e:	f7ff f8d6 	bl	90008d2e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
90009b82:	f7ff fb6f 	bl	90009264 <xTaskResumeAll>
90009b86:	2800      	cmp	r0, #0
90009b88:	d1d2      	bne.n	90009b30 <prvTimerTask+0x98>
					portYIELD_WITHIN_API();
90009b8a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90009b8e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90009b92:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90009b96:	f3bf 8f4f 	dsb	sy
90009b9a:	f3bf 8f6f 	isb	sy
90009b9e:	e7c7      	b.n	90009b30 <prvTimerTask+0x98>
			( void ) xTaskResumeAll();
90009ba0:	f7ff fb60 	bl	90009264 <xTaskResumeAll>
}
90009ba4:	e7c4      	b.n	90009b30 <prvTimerTask+0x98>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90009ba6:	9b05      	ldr	r3, [sp, #20]
90009ba8:	9907      	ldr	r1, [sp, #28]
90009baa:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
90009bac:	9b04      	ldr	r3, [sp, #16]
90009bae:	2b00      	cmp	r3, #0
90009bb0:	dbbe      	blt.n	90009b30 <prvTimerTask+0x98>
90009bb2:	e7c8      	b.n	90009b46 <prvTimerTask+0xae>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90009bb4:	1d20      	adds	r0, r4, #4
90009bb6:	f7fe fa07 	bl	90007fc8 <uxListRemove>
90009bba:	e7c8      	b.n	90009b4e <prvTimerTask+0xb6>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90009bbc:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90009bc0:	4620      	mov	r0, r4
90009bc2:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90009bc4:	f043 0301 	orr.w	r3, r3, #1
90009bc8:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90009bcc:	9b05      	ldr	r3, [sp, #20]
90009bce:	4419      	add	r1, r3
90009bd0:	f7ff fe5c 	bl	9000988c <prvInsertTimerInActiveList>
90009bd4:	2800      	cmp	r0, #0
90009bd6:	d0ab      	beq.n	90009b30 <prvTimerTask+0x98>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90009bd8:	6a23      	ldr	r3, [r4, #32]
90009bda:	4620      	mov	r0, r4
90009bdc:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90009bde:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90009be2:	0759      	lsls	r1, r3, #29
90009be4:	d5a4      	bpl.n	90009b30 <prvTimerTask+0x98>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90009be6:	69a2      	ldr	r2, [r4, #24]
90009be8:	2300      	movs	r3, #0
90009bea:	9905      	ldr	r1, [sp, #20]
90009bec:	4620      	mov	r0, r4
90009bee:	9300      	str	r3, [sp, #0]
90009bf0:	440a      	add	r2, r1
90009bf2:	4619      	mov	r1, r3
90009bf4:	f7ff fed0 	bl	90009998 <xTimerGenericCommand>
							configASSERT( xResult );
90009bf8:	2800      	cmp	r0, #0
90009bfa:	d199      	bne.n	90009b30 <prvTimerTask+0x98>
90009bfc:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009c00:	b672      	cpsid	i
90009c02:	f383 8811 	msr	BASEPRI, r3
90009c06:	f3bf 8f6f 	isb	sy
90009c0a:	f3bf 8f4f 	dsb	sy
90009c0e:	b662      	cpsie	i
90009c10:	e7fe      	b.n	90009c10 <prvTimerTask+0x178>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90009c12:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90009c16:	f023 0301 	bic.w	r3, r3, #1
90009c1a:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
90009c1e:	e787      	b.n	90009b30 <prvTimerTask+0x98>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90009c20:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90009c24:	f043 0301 	orr.w	r3, r3, #1
90009c28:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90009c2c:	9905      	ldr	r1, [sp, #20]
90009c2e:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90009c30:	b951      	cbnz	r1, 90009c48 <prvTimerTask+0x1b0>
90009c32:	f04f 0350 	mov.w	r3, #80	@ 0x50
90009c36:	b672      	cpsid	i
90009c38:	f383 8811 	msr	BASEPRI, r3
90009c3c:	f3bf 8f6f 	isb	sy
90009c40:	f3bf 8f4f 	dsb	sy
90009c44:	b662      	cpsie	i
90009c46:	e7fe      	b.n	90009c46 <prvTimerTask+0x1ae>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
90009c48:	4603      	mov	r3, r0
90009c4a:	4401      	add	r1, r0
90009c4c:	4620      	mov	r0, r4
90009c4e:	f7ff fe1d 	bl	9000988c <prvInsertTimerInActiveList>
					break;
90009c52:	e76d      	b.n	90009b30 <prvTimerTask+0x98>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
90009c54:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90009c58:	079a      	lsls	r2, r3, #30
90009c5a:	d4dc      	bmi.n	90009c16 <prvTimerTask+0x17e>
							vPortFree( pxTimer );
90009c5c:	4620      	mov	r0, r4
90009c5e:	f7fe f947 	bl	90007ef0 <vPortFree>
90009c62:	e765      	b.n	90009b30 <prvTimerTask+0x98>
90009c64:	20013ec0 	.word	0x20013ec0
90009c68:	20013eb8 	.word	0x20013eb8
90009c6c:	20013ebc 	.word	0x20013ebc

90009c70 <etharp_free_entry>:
#endif /* ARP_QUEUEING */

/** Clean up ARP table entries */
static void
etharp_free_entry(int i)
{
90009c70:	b570      	push	{r4, r5, r6, lr}
  /* remove from SNMP ARP index tree */
  mib2_remove_arp_entry(arp_table[i].netif, &arp_table[i].ipaddr);
  /* and empty packet queue */
  if (arp_table[i].q != NULL) {
90009c72:	2618      	movs	r6, #24
90009c74:	4c0b      	ldr	r4, [pc, #44]	@ (90009ca4 <etharp_free_entry+0x34>)
{
90009c76:	4605      	mov	r5, r0
  if (arp_table[i].q != NULL) {
90009c78:	4346      	muls	r6, r0
90009c7a:	59a0      	ldr	r0, [r4, r6]
90009c7c:	b118      	cbz	r0, 90009c86 <etharp_free_entry+0x16>
    /* remove all queued packets */
    LWIP_DEBUGF(ETHARP_DEBUG, ("etharp_free_entry: freeing entry %"U16_F", packet queue %p.\n", (u16_t)i, (void *)(arp_table[i].q)));
    free_etharp_q(arp_table[i].q);
90009c7e:	f001 fe31 	bl	9000b8e4 <pbuf_free>
    arp_table[i].q = NULL;
90009c82:	2300      	movs	r3, #0
90009c84:	51a3      	str	r3, [r4, r6]
  }
  /* recycle entry for re-use */
  arp_table[i].state = ETHARP_STATE_EMPTY;
90009c86:	2318      	movs	r3, #24
90009c88:	2200      	movs	r2, #0
90009c8a:	fb03 4305 	mla	r3, r3, r5, r4
90009c8e:	751a      	strb	r2, [r3, #20]
#ifdef LWIP_DEBUG
  /* for debugging, clean out the complete entry */
  arp_table[i].ctime = 0;
90009c90:	825a      	strh	r2, [r3, #18]
  arp_table[i].netif = NULL;
  ip4_addr_set_zero(&arp_table[i].ipaddr);
90009c92:	e9c3 2201 	strd	r2, r2, [r3, #4]
  arp_table[i].ethaddr = ethzero;
90009c96:	4a04      	ldr	r2, [pc, #16]	@ (90009ca8 <etharp_free_entry+0x38>)
90009c98:	6810      	ldr	r0, [r2, #0]
90009c9a:	8892      	ldrh	r2, [r2, #4]
90009c9c:	60d8      	str	r0, [r3, #12]
90009c9e:	821a      	strh	r2, [r3, #16]
#endif /* LWIP_DEBUG */
}
90009ca0:	bd70      	pop	{r4, r5, r6, pc}
90009ca2:	bf00      	nop
90009ca4:	20013ef0 	.word	0x20013ef0
90009ca8:	9002acd8 	.word	0x9002acd8

90009cac <etharp_find_entry>:
 * @return The ARP entry index that matched or is created, ERR_MEM if no
 * entry is found or could be recycled.
 */
static s16_t
etharp_find_entry(const ip4_addr_t *ipaddr, u8_t flags, struct netif *netif)
{
90009cac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  s16_t old_pending = ARP_TABLE_SIZE, old_stable = ARP_TABLE_SIZE;
  s16_t empty = ARP_TABLE_SIZE;
  s16_t i = 0;
  /* oldest entry with packets on queue */
  s16_t old_queue = ARP_TABLE_SIZE;
90009cb0:	f04f 0c0a 	mov.w	ip, #10
{
90009cb4:	9101      	str	r1, [sp, #4]
90009cb6:	2100      	movs	r1, #0
90009cb8:	4605      	mov	r5, r0
90009cba:	4690      	mov	r8, r2
90009cbc:	4c30      	ldr	r4, [pc, #192]	@ (90009d80 <etharp_find_entry+0xd4>)
  /* its age */
  u16_t age_queue = 0, age_pending = 0, age_stable = 0;
90009cbe:	4689      	mov	r9, r1
90009cc0:	468b      	mov	fp, r1
  s16_t old_pending = ARP_TABLE_SIZE, old_stable = ARP_TABLE_SIZE;
90009cc2:	46e6      	mov	lr, ip
90009cc4:	4666      	mov	r6, ip
  s16_t empty = ARP_TABLE_SIZE;
90009cc6:	4663      	mov	r3, ip
  u16_t age_queue = 0, age_pending = 0, age_stable = 0;
90009cc8:	9100      	str	r1, [sp, #0]
   */

  for (i = 0; i < ARP_TABLE_SIZE; ++i) {
    u8_t state = arp_table[i].state;
    /* no empty entry found yet and now we do find one? */
    if ((empty == ARP_TABLE_SIZE) && (state == ETHARP_STATE_EMPTY)) {
90009cca:	2b0a      	cmp	r3, #10
90009ccc:	b208      	sxth	r0, r1
    u8_t state = arp_table[i].state;
90009cce:	f894 a014 	ldrb.w	sl, [r4, #20]
    if ((empty == ARP_TABLE_SIZE) && (state == ETHARP_STATE_EMPTY)) {
90009cd2:	d119      	bne.n	90009d08 <etharp_find_entry+0x5c>
90009cd4:	f1ba 0f00 	cmp.w	sl, #0
90009cd8:	d04b      	beq.n	90009d72 <etharp_find_entry+0xc6>
      empty = i;
    } else if (state != ETHARP_STATE_EMPTY) {
      LWIP_ASSERT("state == ETHARP_STATE_PENDING || state >= ETHARP_STATE_STABLE",
                  state == ETHARP_STATE_PENDING || state >= ETHARP_STATE_STABLE);
      /* if given, does IP address match IP address in ARP entry? */
      if (ipaddr && ip4_addr_cmp(ipaddr, &arp_table[i].ipaddr)
90009cda:	b14d      	cbz	r5, 90009cf0 <etharp_find_entry+0x44>
90009cdc:	6867      	ldr	r7, [r4, #4]
90009cde:	682a      	ldr	r2, [r5, #0]
90009ce0:	42ba      	cmp	r2, r7
90009ce2:	d105      	bne.n	90009cf0 <etharp_find_entry+0x44>
#if ETHARP_TABLE_MATCH_NETIF
          && ((netif == NULL) || (netif == arp_table[i].netif))
90009ce4:	f1b8 0f00 	cmp.w	r8, #0
90009ce8:	d036      	beq.n	90009d58 <etharp_find_entry+0xac>
90009cea:	68a7      	ldr	r7, [r4, #8]
90009cec:	4547      	cmp	r7, r8
90009cee:	d033      	beq.n	90009d58 <etharp_find_entry+0xac>
        LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_find_entry: found matching entry %d\n", (int)i));
        /* found exact IP address match, simply bail out */
        return i;
      }
      /* pending entry? */
      if (state == ETHARP_STATE_PENDING) {
90009cf0:	f1ba 0f01 	cmp.w	sl, #1
        /* pending with queued packets? */
        if (arp_table[i].q != NULL) {
          if (arp_table[i].ctime >= age_queue) {
90009cf4:	8a67      	ldrh	r7, [r4, #18]
      if (state == ETHARP_STATE_PENDING) {
90009cf6:	d137      	bne.n	90009d68 <etharp_find_entry+0xbc>
        if (arp_table[i].q != NULL) {
90009cf8:	6822      	ldr	r2, [r4, #0]
90009cfa:	b382      	cbz	r2, 90009d5e <etharp_find_entry+0xb2>
          if (arp_table[i].ctime >= age_queue) {
90009cfc:	9a00      	ldr	r2, [sp, #0]
90009cfe:	4297      	cmp	r7, r2
90009d00:	d305      	bcc.n	90009d0e <etharp_find_entry+0x62>
            old_queue = i;
90009d02:	4684      	mov	ip, r0
            age_queue = arp_table[i].ctime;
90009d04:	9700      	str	r7, [sp, #0]
90009d06:	e002      	b.n	90009d0e <etharp_find_entry+0x62>
    } else if (state != ETHARP_STATE_EMPTY) {
90009d08:	f1ba 0f00 	cmp.w	sl, #0
90009d0c:	d1e5      	bne.n	90009cda <etharp_find_entry+0x2e>
  for (i = 0; i < ARP_TABLE_SIZE; ++i) {
90009d0e:	3101      	adds	r1, #1
90009d10:	3418      	adds	r4, #24
90009d12:	290a      	cmp	r1, #10
90009d14:	d1d9      	bne.n	90009cca <etharp_find_entry+0x1e>
    }
  }
  /* { we have no match } => try to create a new entry */

  /* don't create new entry, only search? */
  if (((flags & ETHARP_FLAG_FIND_ONLY) != 0) ||
90009d16:	9a01      	ldr	r2, [sp, #4]
90009d18:	2a01      	cmp	r2, #1
90009d1a:	d12e      	bne.n	90009d7a <etharp_find_entry+0xce>
   *
   * { ETHARP_FLAG_TRY_HARD is set at this point }
   */

  /* 1) empty entry available? */
  if (empty < ARP_TABLE_SIZE) {
90009d1c:	2b09      	cmp	r3, #9
90009d1e:	dd0c      	ble.n	90009d3a <etharp_find_entry+0x8e>
    i = empty;
    LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_find_entry: selecting empty entry %d\n", (int)i));
  } else {
    /* 2) found recyclable stable entry? */
    if (old_stable < ARP_TABLE_SIZE) {
90009d20:	2e09      	cmp	r6, #9
90009d22:	dd06      	ble.n	90009d32 <etharp_find_entry+0x86>
      i = old_stable;
      LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_find_entry: selecting oldest stable entry %d\n", (int)i));
      /* no queued packets should exist on stable entries */
      LWIP_ASSERT("arp_table[i].q == NULL", arp_table[i].q == NULL);
      /* 3) found recyclable pending entry without queued packets? */
    } else if (old_pending < ARP_TABLE_SIZE) {
90009d24:	f1be 0f09 	cmp.w	lr, #9
90009d28:	dd25      	ble.n	90009d76 <etharp_find_entry+0xca>
      /* recycle oldest pending */
      i = old_pending;
      LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_find_entry: selecting oldest pending entry %d (without queue)\n", (int)i));
      /* 4) found recyclable pending entry with queued packets? */
    } else if (old_queue < ARP_TABLE_SIZE) {
90009d2a:	f1bc 0f09 	cmp.w	ip, #9
90009d2e:	dc24      	bgt.n	90009d7a <etharp_find_entry+0xce>
      /* recycle oldest pending (queued packets are free in etharp_free_entry) */
      i = old_queue;
90009d30:	4666      	mov	r6, ip
      return (s16_t)ERR_MEM;
    }

    /* { empty or recyclable entry found } */
    LWIP_ASSERT("i < ARP_TABLE_SIZE", i < ARP_TABLE_SIZE);
    etharp_free_entry(i);
90009d32:	4630      	mov	r0, r6
90009d34:	f7ff ff9c 	bl	90009c70 <etharp_free_entry>
90009d38:	4633      	mov	r3, r6
  LWIP_ASSERT("i < ARP_TABLE_SIZE", i < ARP_TABLE_SIZE);
  LWIP_ASSERT("arp_table[i].state == ETHARP_STATE_EMPTY",
              arp_table[i].state == ETHARP_STATE_EMPTY);

  /* IP address given? */
  if (ipaddr != NULL) {
90009d3a:	4a11      	ldr	r2, [pc, #68]	@ (90009d80 <etharp_find_entry+0xd4>)
90009d3c:	b125      	cbz	r5, 90009d48 <etharp_find_entry+0x9c>
    /* set IP address */
    ip4_addr_copy(arp_table[i].ipaddr, *ipaddr);
90009d3e:	2118      	movs	r1, #24
90009d40:	6828      	ldr	r0, [r5, #0]
90009d42:	fb01 2103 	mla	r1, r1, r3, r2
90009d46:	6048      	str	r0, [r1, #4]
  }
  arp_table[i].ctime = 0;
90009d48:	2118      	movs	r1, #24
#if ETHARP_TABLE_MATCH_NETIF
  arp_table[i].netif = netif;
#endif /* ETHARP_TABLE_MATCH_NETIF */
  return (s16_t)i;
90009d4a:	4618      	mov	r0, r3
  arp_table[i].ctime = 0;
90009d4c:	fb01 2203 	mla	r2, r1, r3, r2
90009d50:	2100      	movs	r1, #0
  arp_table[i].netif = netif;
90009d52:	f8c2 8008 	str.w	r8, [r2, #8]
  arp_table[i].ctime = 0;
90009d56:	8251      	strh	r1, [r2, #18]
}
90009d58:	b003      	add	sp, #12
90009d5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
          if (arp_table[i].ctime >= age_pending) {
90009d5e:	455f      	cmp	r7, fp
90009d60:	d3d5      	bcc.n	90009d0e <etharp_find_entry+0x62>
            age_pending = arp_table[i].ctime;
90009d62:	46bb      	mov	fp, r7
            old_pending = i;
90009d64:	4686      	mov	lr, r0
90009d66:	e7d2      	b.n	90009d0e <etharp_find_entry+0x62>
          if (arp_table[i].ctime >= age_stable) {
90009d68:	454f      	cmp	r7, r9
90009d6a:	d3d0      	bcc.n	90009d0e <etharp_find_entry+0x62>
            age_stable = arp_table[i].ctime;
90009d6c:	46b9      	mov	r9, r7
            old_stable = i;
90009d6e:	4606      	mov	r6, r0
90009d70:	e7cd      	b.n	90009d0e <etharp_find_entry+0x62>
      empty = i;
90009d72:	4603      	mov	r3, r0
90009d74:	e7cb      	b.n	90009d0e <etharp_find_entry+0x62>
      i = old_pending;
90009d76:	4676      	mov	r6, lr
90009d78:	e7db      	b.n	90009d32 <etharp_find_entry+0x86>
    return (s16_t)ERR_MEM;
90009d7a:	f04f 30ff 	mov.w	r0, #4294967295
90009d7e:	e7eb      	b.n	90009d58 <etharp_find_entry+0xac>
90009d80:	20013ef0 	.word	0x20013ef0

90009d84 <etharp_raw>:
etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,
           const struct eth_addr *ethdst_addr,
           const struct eth_addr *hwsrc_addr, const ip4_addr_t *ipsrc_addr,
           const struct eth_addr *hwdst_addr, const ip4_addr_t *ipdst_addr,
           const u16_t opcode)
{
90009d84:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90009d88:	4607      	mov	r7, r0
90009d8a:	4688      	mov	r8, r1
90009d8c:	4691      	mov	r9, r2
  struct etharp_hdr *hdr;

  LWIP_ASSERT("netif != NULL", netif != NULL);

  /* allocate a pbuf for the outgoing ARP request packet */
  p = pbuf_alloc(PBUF_LINK, SIZEOF_ETHARP_HDR, PBUF_RAM);
90009d8e:	211c      	movs	r1, #28
90009d90:	f44f 7220 	mov.w	r2, #640	@ 0x280
90009d94:	200e      	movs	r0, #14
{
90009d96:	461d      	mov	r5, r3
90009d98:	f8dd a02c 	ldr.w	sl, [sp, #44]	@ 0x2c
  p = pbuf_alloc(PBUF_LINK, SIZEOF_ETHARP_HDR, PBUF_RAM);
90009d9c:	f001 fdce 	bl	9000b93c <pbuf_alloc>
  /* could allocate a pbuf for an ARP request? */
  if (p == NULL) {
90009da0:	4606      	mov	r6, r0
90009da2:	b390      	cbz	r0, 90009e0a <etharp_raw+0x86>
    return ERR_MEM;
  }
  LWIP_ASSERT("check that first pbuf can hold struct etharp_hdr",
              (p->len >= SIZEOF_ETHARP_HDR));

  hdr = (struct etharp_hdr *)p->payload;
90009da4:	6844      	ldr	r4, [r0, #4]
  LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_raw: sending raw ARP packet.\n"));
  hdr->opcode = lwip_htons(opcode);
90009da6:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90009daa:	f001 f983 	bl	9000b0b4 <lwip_htons>
90009dae:	80e0      	strh	r0, [r4, #6]

  LWIP_ASSERT("netif->hwaddr_len must be the same as ETH_HWADDR_LEN for etharp!",
              (netif->hwaddr_len == ETH_HWADDR_LEN));

  /* Write the ARP MAC-Addresses */
  SMEMCPY(&hdr->shwaddr, hwsrc_addr, ETH_HWADDR_LEN);
90009db0:	682b      	ldr	r3, [r5, #0]
  if (ip4_addr_islinklocal(ipsrc_addr)) {
    ethernet_output(netif, p, ethsrc_addr, &ethbroadcast, ETHTYPE_ARP);
  } else
#endif /* LWIP_AUTOIP */
  {
    ethernet_output(netif, p, ethsrc_addr, ethdst_addr, ETHTYPE_ARP);
90009db2:	4642      	mov	r2, r8
90009db4:	4631      	mov	r1, r6
90009db6:	4638      	mov	r0, r7
  SMEMCPY(&hdr->shwaddr, hwsrc_addr, ETH_HWADDR_LEN);
90009db8:	60a3      	str	r3, [r4, #8]
90009dba:	88ab      	ldrh	r3, [r5, #4]
  hdr->hwtype = PP_HTONS(LWIP_IANA_HWTYPE_ETHERNET);
90009dbc:	2500      	movs	r5, #0
  SMEMCPY(&hdr->shwaddr, hwsrc_addr, ETH_HWADDR_LEN);
90009dbe:	81a3      	strh	r3, [r4, #12]
  SMEMCPY(&hdr->dhwaddr, hwdst_addr, ETH_HWADDR_LEN);
90009dc0:	f8da 3000 	ldr.w	r3, [sl]
90009dc4:	f8c4 3012 	str.w	r3, [r4, #18]
90009dc8:	f8ba 3004 	ldrh.w	r3, [sl, #4]
90009dcc:	82e3      	strh	r3, [r4, #22]
  IPADDR_WORDALIGNED_COPY_FROM_IP4_ADDR_T(&hdr->sipaddr, ipsrc_addr);
90009dce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90009dd0:	681b      	ldr	r3, [r3, #0]
90009dd2:	f8c4 300e 	str.w	r3, [r4, #14]
  IPADDR_WORDALIGNED_COPY_FROM_IP4_ADDR_T(&hdr->dipaddr, ipdst_addr);
90009dd6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90009dd8:	681b      	ldr	r3, [r3, #0]
  hdr->hwtype = PP_HTONS(LWIP_IANA_HWTYPE_ETHERNET);
90009dda:	7025      	strb	r5, [r4, #0]
  IPADDR_WORDALIGNED_COPY_FROM_IP4_ADDR_T(&hdr->dipaddr, ipdst_addr);
90009ddc:	61a3      	str	r3, [r4, #24]
  hdr->hwtype = PP_HTONS(LWIP_IANA_HWTYPE_ETHERNET);
90009dde:	2301      	movs	r3, #1
  hdr->proto = PP_HTONS(ETHTYPE_IP);
90009de0:	70e5      	strb	r5, [r4, #3]
  hdr->hwtype = PP_HTONS(LWIP_IANA_HWTYPE_ETHERNET);
90009de2:	7063      	strb	r3, [r4, #1]
  hdr->proto = PP_HTONS(ETHTYPE_IP);
90009de4:	2308      	movs	r3, #8
90009de6:	70a3      	strb	r3, [r4, #2]
  hdr->hwlen = ETH_HWADDR_LEN;
90009de8:	2306      	movs	r3, #6
90009dea:	7123      	strb	r3, [r4, #4]
  hdr->protolen = sizeof(ip4_addr_t);
90009dec:	2304      	movs	r3, #4
90009dee:	7163      	strb	r3, [r4, #5]
    ethernet_output(netif, p, ethsrc_addr, ethdst_addr, ETHTYPE_ARP);
90009df0:	f640 0306 	movw	r3, #2054	@ 0x806
90009df4:	9300      	str	r3, [sp, #0]
90009df6:	464b      	mov	r3, r9
90009df8:	f004 fce8 	bl	9000e7cc <ethernet_output>
  }

  ETHARP_STATS_INC(etharp.xmit);
  /* free ARP query packet */
  pbuf_free(p);
90009dfc:	4630      	mov	r0, r6
90009dfe:	f001 fd71 	bl	9000b8e4 <pbuf_free>
  p = NULL;
  /* could not allocate pbuf for ARP request */

  return result;
90009e02:	4628      	mov	r0, r5
}
90009e04:	b002      	add	sp, #8
90009e06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    return ERR_MEM;
90009e0a:	f04f 30ff 	mov.w	r0, #4294967295
90009e0e:	e7f9      	b.n	90009e04 <etharp_raw+0x80>

90009e10 <etharp_cleanup_netif>:
{
90009e10:	b570      	push	{r4, r5, r6, lr}
90009e12:	4606      	mov	r6, r0
90009e14:	4d07      	ldr	r5, [pc, #28]	@ (90009e34 <etharp_cleanup_netif+0x24>)
  for (i = 0; i < ARP_TABLE_SIZE; ++i) {
90009e16:	2400      	movs	r4, #0
    if ((state != ETHARP_STATE_EMPTY) && (arp_table[i].netif == netif)) {
90009e18:	7d2b      	ldrb	r3, [r5, #20]
90009e1a:	b12b      	cbz	r3, 90009e28 <etharp_cleanup_netif+0x18>
90009e1c:	68ab      	ldr	r3, [r5, #8]
90009e1e:	42b3      	cmp	r3, r6
90009e20:	d102      	bne.n	90009e28 <etharp_cleanup_netif+0x18>
      etharp_free_entry(i);
90009e22:	4620      	mov	r0, r4
90009e24:	f7ff ff24 	bl	90009c70 <etharp_free_entry>
  for (i = 0; i < ARP_TABLE_SIZE; ++i) {
90009e28:	3401      	adds	r4, #1
90009e2a:	3518      	adds	r5, #24
90009e2c:	2c0a      	cmp	r4, #10
90009e2e:	d1f3      	bne.n	90009e18 <etharp_cleanup_netif+0x8>
}
90009e30:	bd70      	pop	{r4, r5, r6, pc}
90009e32:	bf00      	nop
90009e34:	20013ef0 	.word	0x20013ef0

90009e38 <etharp_input>:
{
90009e38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009e3c:	4607      	mov	r7, r0
90009e3e:	b087      	sub	sp, #28
  LWIP_ERROR("netif != NULL", (netif != NULL), return;);
90009e40:	460c      	mov	r4, r1
90009e42:	b929      	cbnz	r1, 90009e50 <etharp_input+0x18>
90009e44:	4842      	ldr	r0, [pc, #264]	@ (90009f50 <etharp_input+0x118>)
}
90009e46:	b007      	add	sp, #28
90009e48:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  LWIP_ERROR("netif != NULL", (netif != NULL), return;);
90009e4c:	f01e bca6 	b.w	9002879c <iprintf>
  hdr = (struct etharp_hdr *)p->payload;
90009e50:	6846      	ldr	r6, [r0, #4]
  if ((hdr->hwtype != PP_HTONS(LWIP_IANA_HWTYPE_ETHERNET)) ||
90009e52:	8833      	ldrh	r3, [r6, #0]
90009e54:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
90009e58:	d108      	bne.n	90009e6c <etharp_input+0x34>
90009e5a:	7933      	ldrb	r3, [r6, #4]
90009e5c:	2b06      	cmp	r3, #6
90009e5e:	d105      	bne.n	90009e6c <etharp_input+0x34>
      (hdr->hwlen != ETH_HWADDR_LEN) ||
90009e60:	7973      	ldrb	r3, [r6, #5]
90009e62:	2b04      	cmp	r3, #4
90009e64:	d102      	bne.n	90009e6c <etharp_input+0x34>
      (hdr->protolen != sizeof(ip4_addr_t)) ||
90009e66:	8873      	ldrh	r3, [r6, #2]
90009e68:	2b08      	cmp	r3, #8
90009e6a:	d005      	beq.n	90009e78 <etharp_input+0x40>
  pbuf_free(p);
90009e6c:	4638      	mov	r0, r7
}
90009e6e:	b007      	add	sp, #28
90009e70:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  pbuf_free(p);
90009e74:	f001 bd36 	b.w	9000b8e4 <pbuf_free>
  IPADDR_WORDALIGNED_COPY_TO_IP4_ADDR_T(&sipaddr, &hdr->sipaddr);
90009e78:	f8d6 a00e 	ldr.w	sl, [r6, #14]
90009e7c:	f106 0808 	add.w	r8, r6, #8
  if (ip4_addr_isany_val(*netif_ip4_addr(netif))) {
90009e80:	684d      	ldr	r5, [r1, #4]
  IPADDR_WORDALIGNED_COPY_TO_IP4_ADDR_T(&dipaddr, &hdr->dipaddr);
90009e82:	69b3      	ldr	r3, [r6, #24]
  IPADDR_WORDALIGNED_COPY_TO_IP4_ADDR_T(&sipaddr, &hdr->sipaddr);
90009e84:	f8cd a014 	str.w	sl, [sp, #20]
  if (ip4_addr_isany_val(*netif_ip4_addr(netif))) {
90009e88:	b915      	cbnz	r5, 90009e90 <etharp_input+0x58>
  etharp_update_arp_entry(netif, &sipaddr, &(hdr->shwaddr),
90009e8a:	f04f 0b02 	mov.w	fp, #2
90009e8e:	e003      	b.n	90009e98 <etharp_input+0x60>
90009e90:	429d      	cmp	r5, r3
90009e92:	d15a      	bne.n	90009f4a <etharp_input+0x112>
90009e94:	2501      	movs	r5, #1
90009e96:	46ab      	mov	fp, r5
  if (ip4_addr_isany(ipaddr) ||
90009e98:	f1ba 0f00 	cmp.w	sl, #0
90009e9c:	d040      	beq.n	90009f20 <etharp_input+0xe8>
      ip4_addr_isbroadcast(ipaddr, netif) ||
90009e9e:	4621      	mov	r1, r4
90009ea0:	4650      	mov	r0, sl
90009ea2:	f000 fde7 	bl	9000aa74 <ip4_addr_isbroadcast_u32>
  if (ip4_addr_isany(ipaddr) ||
90009ea6:	4681      	mov	r9, r0
90009ea8:	bbd0      	cbnz	r0, 90009f20 <etharp_input+0xe8>
      ip4_addr_ismulticast(ipaddr)) {
90009eaa:	f00a 0af0 	and.w	sl, sl, #240	@ 0xf0
      ip4_addr_isbroadcast(ipaddr, netif) ||
90009eae:	f1ba 0fe0 	cmp.w	sl, #224	@ 0xe0
90009eb2:	d035      	beq.n	90009f20 <etharp_input+0xe8>
  i = etharp_find_entry(ipaddr, flags, netif);
90009eb4:	4622      	mov	r2, r4
90009eb6:	4659      	mov	r1, fp
90009eb8:	a805      	add	r0, sp, #20
90009eba:	f7ff fef7 	bl	90009cac <etharp_find_entry>
  if (i < 0) {
90009ebe:	1e03      	subs	r3, r0, #0
90009ec0:	db2e      	blt.n	90009f20 <etharp_input+0xe8>
    arp_table[i].state = ETHARP_STATE_STABLE;
90009ec2:	2018      	movs	r0, #24
90009ec4:	4a23      	ldr	r2, [pc, #140]	@ (90009f54 <etharp_input+0x11c>)
90009ec6:	f04f 0e02 	mov.w	lr, #2
90009eca:	fb00 f103 	mul.w	r1, r0, r3
90009ece:	eb02 0c01 	add.w	ip, r2, r1
90009ed2:	f88c e014 	strb.w	lr, [ip, #20]
  SMEMCPY(&arp_table[i].ethaddr, ethaddr, ETH_HWADDR_LEN);
90009ed6:	f04f 0e0c 	mov.w	lr, #12
  arp_table[i].netif = netif;
90009eda:	f8cc 4008 	str.w	r4, [ip, #8]
  SMEMCPY(&arp_table[i].ethaddr, ethaddr, ETH_HWADDR_LEN);
90009ede:	fb13 e300 	smlabb	r3, r3, r0, lr
90009ee2:	f8d8 0000 	ldr.w	r0, [r8]
90009ee6:	eb03 0e02 	add.w	lr, r3, r2
90009eea:	50d0      	str	r0, [r2, r3]
90009eec:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90009ef0:	f8ae 3004 	strh.w	r3, [lr, #4]
  if (arp_table[i].q != NULL) {
90009ef4:	f852 a001 	ldr.w	sl, [r2, r1]
  arp_table[i].ctime = 0;
90009ef8:	f8ac 9012 	strh.w	r9, [ip, #18]
  if (arp_table[i].q != NULL) {
90009efc:	f1ba 0f00 	cmp.w	sl, #0
90009f00:	d00e      	beq.n	90009f20 <etharp_input+0xe8>
    ethernet_output(netif, p, (struct eth_addr *)(netif->hwaddr), ethaddr, ETHTYPE_IP);
90009f02:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    arp_table[i].q = NULL;
90009f06:	f842 9001 	str.w	r9, [r2, r1]
    ethernet_output(netif, p, (struct eth_addr *)(netif->hwaddr), ethaddr, ETHTYPE_IP);
90009f0a:	4620      	mov	r0, r4
90009f0c:	f104 022a 	add.w	r2, r4, #42	@ 0x2a
90009f10:	9300      	str	r3, [sp, #0]
90009f12:	4651      	mov	r1, sl
90009f14:	4643      	mov	r3, r8
90009f16:	f004 fc59 	bl	9000e7cc <ethernet_output>
    pbuf_free(p);
90009f1a:	4650      	mov	r0, sl
90009f1c:	f001 fce2 	bl	9000b8e4 <pbuf_free>
  switch (hdr->opcode) {
90009f20:	88f3      	ldrh	r3, [r6, #6]
90009f22:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
90009f26:	d1a1      	bne.n	90009e6c <etharp_input+0x34>
      if (for_us) {
90009f28:	2d00      	cmp	r5, #0
90009f2a:	d09f      	beq.n	90009e6c <etharp_input+0x34>
        etharp_raw(netif,
90009f2c:	2202      	movs	r2, #2
                   (struct eth_addr *)netif->hwaddr, &hdr->shwaddr,
90009f2e:	f104 032a 	add.w	r3, r4, #42	@ 0x2a
        etharp_raw(netif,
90009f32:	4620      	mov	r0, r4
90009f34:	9203      	str	r2, [sp, #12]
90009f36:	aa05      	add	r2, sp, #20
90009f38:	4619      	mov	r1, r3
90009f3a:	e9cd 8201 	strd	r8, r2, [sp, #4]
                   (struct eth_addr *)netif->hwaddr, netif_ip4_addr(netif),
90009f3e:	1d22      	adds	r2, r4, #4
        etharp_raw(netif,
90009f40:	9200      	str	r2, [sp, #0]
90009f42:	4642      	mov	r2, r8
90009f44:	f7ff ff1e 	bl	90009d84 <etharp_raw>
90009f48:	e790      	b.n	90009e6c <etharp_input+0x34>
90009f4a:	2500      	movs	r5, #0
90009f4c:	e79d      	b.n	90009e8a <etharp_input+0x52>
90009f4e:	bf00      	nop
90009f50:	9002a097 	.word	0x9002a097
90009f54:	20013ef0 	.word	0x20013ef0

90009f58 <etharp_request>:
 *         ERR_MEM if the ARP packet couldn't be allocated
 *         any other err_t on failure
 */
err_t
etharp_request(struct netif *netif, const ip4_addr_t *ipaddr)
{
90009f58:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90009f5a:	4602      	mov	r2, r0
  return etharp_raw(netif, (struct eth_addr *)netif->hwaddr, hw_dst_addr,
90009f5c:	2401      	movs	r4, #1
90009f5e:	f100 032a 	add.w	r3, r0, #42	@ 0x2a
                    (struct eth_addr *)netif->hwaddr, netif_ip4_addr(netif), &ethzero,
90009f62:	3204      	adds	r2, #4
  return etharp_raw(netif, (struct eth_addr *)netif->hwaddr, hw_dst_addr,
90009f64:	e9cd 1402 	strd	r1, r4, [sp, #8]
90009f68:	4904      	ldr	r1, [pc, #16]	@ (90009f7c <etharp_request+0x24>)
90009f6a:	9200      	str	r2, [sp, #0]
90009f6c:	9101      	str	r1, [sp, #4]
90009f6e:	4619      	mov	r1, r3
90009f70:	4a03      	ldr	r2, [pc, #12]	@ (90009f80 <etharp_request+0x28>)
90009f72:	f7ff ff07 	bl	90009d84 <etharp_raw>
  LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_request: sending ARP request.\n"));
  return etharp_request_dst(netif, ipaddr, &ethbroadcast);
}
90009f76:	b004      	add	sp, #16
90009f78:	bd10      	pop	{r4, pc}
90009f7a:	bf00      	nop
90009f7c:	9002acd8 	.word	0x9002acd8
90009f80:	9002acde 	.word	0x9002acde

90009f84 <etharp_tmr>:
{
90009f84:	b538      	push	{r3, r4, r5, lr}
90009f86:	4c12      	ldr	r4, [pc, #72]	@ (90009fd0 <etharp_tmr+0x4c>)
  for (i = 0; i < ARP_TABLE_SIZE; ++i) {
90009f88:	2500      	movs	r5, #0
    u8_t state = arp_table[i].state;
90009f8a:	7d22      	ldrb	r2, [r4, #20]
    if (state != ETHARP_STATE_EMPTY
90009f8c:	b16a      	cbz	r2, 90009faa <etharp_tmr+0x26>
      arp_table[i].ctime++;
90009f8e:	8a63      	ldrh	r3, [r4, #18]
90009f90:	3301      	adds	r3, #1
90009f92:	b29b      	uxth	r3, r3
      if ((arp_table[i].ctime >= ARP_MAXAGE) ||
90009f94:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
      arp_table[i].ctime++;
90009f98:	8263      	strh	r3, [r4, #18]
      if ((arp_table[i].ctime >= ARP_MAXAGE) ||
90009f9a:	d203      	bcs.n	90009fa4 <etharp_tmr+0x20>
90009f9c:	2a01      	cmp	r2, #1
90009f9e:	d109      	bne.n	90009fb4 <etharp_tmr+0x30>
          ((arp_table[i].state == ETHARP_STATE_PENDING)  &&
90009fa0:	2b04      	cmp	r3, #4
90009fa2:	d90c      	bls.n	90009fbe <etharp_tmr+0x3a>
        etharp_free_entry(i);
90009fa4:	4628      	mov	r0, r5
90009fa6:	f7ff fe63 	bl	90009c70 <etharp_free_entry>
  for (i = 0; i < ARP_TABLE_SIZE; ++i) {
90009faa:	3501      	adds	r5, #1
90009fac:	3418      	adds	r4, #24
90009fae:	2d0a      	cmp	r5, #10
90009fb0:	d1eb      	bne.n	90009f8a <etharp_tmr+0x6>
}
90009fb2:	bd38      	pop	{r3, r4, r5, pc}
      } else if (arp_table[i].state == ETHARP_STATE_STABLE_REREQUESTING_1) {
90009fb4:	2a03      	cmp	r2, #3
90009fb6:	d107      	bne.n	90009fc8 <etharp_tmr+0x44>
        arp_table[i].state = ETHARP_STATE_STABLE_REREQUESTING_2;
90009fb8:	2304      	movs	r3, #4
        arp_table[i].state = ETHARP_STATE_STABLE;
90009fba:	7523      	strb	r3, [r4, #20]
90009fbc:	e7f5      	b.n	90009faa <etharp_tmr+0x26>
        etharp_request(arp_table[i].netif, &arp_table[i].ipaddr);
90009fbe:	1d21      	adds	r1, r4, #4
90009fc0:	68a0      	ldr	r0, [r4, #8]
90009fc2:	f7ff ffc9 	bl	90009f58 <etharp_request>
90009fc6:	e7f0      	b.n	90009faa <etharp_tmr+0x26>
      } else if (arp_table[i].state == ETHARP_STATE_STABLE_REREQUESTING_2) {
90009fc8:	2a04      	cmp	r2, #4
90009fca:	d1ee      	bne.n	90009faa <etharp_tmr+0x26>
        arp_table[i].state = ETHARP_STATE_STABLE;
90009fcc:	2302      	movs	r3, #2
90009fce:	e7f4      	b.n	90009fba <etharp_tmr+0x36>
90009fd0:	20013ef0 	.word	0x20013ef0

90009fd4 <etharp_output_to_arp_index>:
{
90009fd4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  if (arp_table[arp_idx].state == ETHARP_STATE_STABLE) {
90009fd8:	2318      	movs	r3, #24
{
90009fda:	4688      	mov	r8, r1
      if (etharp_request_dst(netif, &arp_table[arp_idx].ipaddr, &arp_table[arp_idx].ethaddr) == ERR_OK) {
90009fdc:	491c      	ldr	r1, [pc, #112]	@ (9000a050 <etharp_output_to_arp_index+0x7c>)
90009fde:	eb02 0442 	add.w	r4, r2, r2, lsl #1
{
90009fe2:	b085      	sub	sp, #20
90009fe4:	4606      	mov	r6, r0
  if (arp_table[arp_idx].state == ETHARP_STATE_STABLE) {
90009fe6:	fb03 1502 	mla	r5, r3, r2, r1
90009fea:	00e4      	lsls	r4, r4, #3
90009fec:	f100 092a 	add.w	r9, r0, #42	@ 0x2a
90009ff0:	7d2b      	ldrb	r3, [r5, #20]
      if (etharp_request_dst(netif, &arp_table[arp_idx].ipaddr, &arp_table[arp_idx].ethaddr) == ERR_OK) {
90009ff2:	f104 070c 	add.w	r7, r4, #12
  if (arp_table[arp_idx].state == ETHARP_STATE_STABLE) {
90009ff6:	2b02      	cmp	r3, #2
      if (etharp_request_dst(netif, &arp_table[arp_idx].ipaddr, &arp_table[arp_idx].ethaddr) == ERR_OK) {
90009ff8:	440f      	add	r7, r1
  if (arp_table[arp_idx].state == ETHARP_STATE_STABLE) {
90009ffa:	d10a      	bne.n	9000a012 <etharp_output_to_arp_index+0x3e>
    if (arp_table[arp_idx].ctime >= ARP_AGE_REREQUEST_USED_BROADCAST) {
90009ffc:	8a6b      	ldrh	r3, [r5, #18]
90009ffe:	f5b3 7f8e 	cmp.w	r3, #284	@ 0x11c
9000a002:	d912      	bls.n	9000a02a <etharp_output_to_arp_index+0x56>
      if (etharp_request(netif, &arp_table[arp_idx].ipaddr) == ERR_OK) {
9000a004:	3404      	adds	r4, #4
9000a006:	4421      	add	r1, r4
9000a008:	f7ff ffa6 	bl	90009f58 <etharp_request>
      if (etharp_request_dst(netif, &arp_table[arp_idx].ipaddr, &arp_table[arp_idx].ethaddr) == ERR_OK) {
9000a00c:	b908      	cbnz	r0, 9000a012 <etharp_output_to_arp_index+0x3e>
        arp_table[arp_idx].state = ETHARP_STATE_STABLE_REREQUESTING_1;
9000a00e:	2303      	movs	r3, #3
9000a010:	752b      	strb	r3, [r5, #20]
  return ethernet_output(netif, q, (struct eth_addr *)(netif->hwaddr), &arp_table[arp_idx].ethaddr, ETHTYPE_IP);
9000a012:	f44f 6300 	mov.w	r3, #2048	@ 0x800
9000a016:	464a      	mov	r2, r9
9000a018:	4641      	mov	r1, r8
9000a01a:	4630      	mov	r0, r6
9000a01c:	9300      	str	r3, [sp, #0]
9000a01e:	463b      	mov	r3, r7
9000a020:	f004 fbd4 	bl	9000e7cc <ethernet_output>
}
9000a024:	b005      	add	sp, #20
9000a026:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    } else if (arp_table[arp_idx].ctime >= ARP_AGE_REREQUEST_USED_UNICAST) {
9000a02a:	f5b3 7f87 	cmp.w	r3, #270	@ 0x10e
9000a02e:	d3f0      	bcc.n	9000a012 <etharp_output_to_arp_index+0x3e>
  return etharp_raw(netif, (struct eth_addr *)netif->hwaddr, hw_dst_addr,
9000a030:	2301      	movs	r3, #1
      if (etharp_request_dst(netif, &arp_table[arp_idx].ipaddr, &arp_table[arp_idx].ethaddr) == ERR_OK) {
9000a032:	3404      	adds	r4, #4
  return etharp_raw(netif, (struct eth_addr *)netif->hwaddr, hw_dst_addr,
9000a034:	463a      	mov	r2, r7
9000a036:	9303      	str	r3, [sp, #12]
      if (etharp_request_dst(netif, &arp_table[arp_idx].ipaddr, &arp_table[arp_idx].ethaddr) == ERR_OK) {
9000a038:	440c      	add	r4, r1
  return etharp_raw(netif, (struct eth_addr *)netif->hwaddr, hw_dst_addr,
9000a03a:	4b06      	ldr	r3, [pc, #24]	@ (9000a054 <etharp_output_to_arp_index+0x80>)
9000a03c:	4649      	mov	r1, r9
9000a03e:	9402      	str	r4, [sp, #8]
9000a040:	9301      	str	r3, [sp, #4]
                    (struct eth_addr *)netif->hwaddr, netif_ip4_addr(netif), &ethzero,
9000a042:	1d03      	adds	r3, r0, #4
  return etharp_raw(netif, (struct eth_addr *)netif->hwaddr, hw_dst_addr,
9000a044:	9300      	str	r3, [sp, #0]
9000a046:	464b      	mov	r3, r9
9000a048:	f7ff fe9c 	bl	90009d84 <etharp_raw>
9000a04c:	e7de      	b.n	9000a00c <etharp_output_to_arp_index+0x38>
9000a04e:	bf00      	nop
9000a050:	20013ef0 	.word	0x20013ef0
9000a054:	9002acd8 	.word	0x9002acd8

9000a058 <etharp_query>:
{
9000a058:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9000a05c:	460f      	mov	r7, r1
9000a05e:	4605      	mov	r5, r0
  if (ip4_addr_isbroadcast(ipaddr, netif) ||
9000a060:	4601      	mov	r1, r0
{
9000a062:	4614      	mov	r4, r2
  if (ip4_addr_isbroadcast(ipaddr, netif) ||
9000a064:	6838      	ldr	r0, [r7, #0]
9000a066:	f000 fd05 	bl	9000aa74 <ip4_addr_isbroadcast_u32>
9000a06a:	2800      	cmp	r0, #0
9000a06c:	d154      	bne.n	9000a118 <etharp_query+0xc0>
      ip4_addr_ismulticast(ipaddr) ||
9000a06e:	683b      	ldr	r3, [r7, #0]
9000a070:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
  if (ip4_addr_isbroadcast(ipaddr, netif) ||
9000a074:	2ae0      	cmp	r2, #224	@ 0xe0
9000a076:	d04f      	beq.n	9000a118 <etharp_query+0xc0>
      ip4_addr_isany(ipaddr)) {
9000a078:	2b00      	cmp	r3, #0
9000a07a:	d04d      	beq.n	9000a118 <etharp_query+0xc0>
  i_err = etharp_find_entry(ipaddr, ETHARP_FLAG_TRY_HARD, netif);
9000a07c:	462a      	mov	r2, r5
9000a07e:	2101      	movs	r1, #1
9000a080:	4638      	mov	r0, r7
9000a082:	f7ff fe13 	bl	90009cac <etharp_find_entry>
  if (i_err < 0) {
9000a086:	1e03      	subs	r3, r0, #0
9000a088:	da03      	bge.n	9000a092 <etharp_query+0x3a>
    return (err_t)i_err;
9000a08a:	b258      	sxtb	r0, r3
}
9000a08c:	b002      	add	sp, #8
9000a08e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  i = (netif_addr_idx_t)i_err;
9000a092:	b2de      	uxtb	r6, r3
  if (arp_table[i].state == ETHARP_STATE_EMPTY) {
9000a094:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 9000a13c <etharp_query+0xe4>
9000a098:	2318      	movs	r3, #24
9000a09a:	fb03 8306 	mla	r3, r3, r6, r8
9000a09e:	7d1a      	ldrb	r2, [r3, #20]
9000a0a0:	b9ea      	cbnz	r2, 9000a0de <etharp_query+0x86>
    arp_table[i].state = ETHARP_STATE_PENDING;
9000a0a2:	2201      	movs	r2, #1
    arp_table[i].netif = netif;
9000a0a4:	609d      	str	r5, [r3, #8]
    arp_table[i].state = ETHARP_STATE_PENDING;
9000a0a6:	751a      	strb	r2, [r3, #20]
    result = etharp_request(netif, ipaddr);
9000a0a8:	4639      	mov	r1, r7
9000a0aa:	4628      	mov	r0, r5
9000a0ac:	f7ff ff54 	bl	90009f58 <etharp_request>
    if (q == NULL) {
9000a0b0:	2c00      	cmp	r4, #0
9000a0b2:	d0eb      	beq.n	9000a08c <etharp_query+0x34>
  if (arp_table[i].state >= ETHARP_STATE_STABLE) {
9000a0b4:	2318      	movs	r3, #24
9000a0b6:	fb03 8206 	mla	r2, r3, r6, r8
9000a0ba:	7d12      	ldrb	r2, [r2, #20]
9000a0bc:	2a01      	cmp	r2, #1
9000a0be:	d913      	bls.n	9000a0e8 <etharp_query+0x90>
    ETHARP_SET_ADDRHINT(netif, i);
9000a0c0:	4a1d      	ldr	r2, [pc, #116]	@ (9000a138 <etharp_query+0xe0>)
    result = ethernet_output(netif, q, srcaddr, &(arp_table[i].ethaddr), ETHTYPE_IP);
9000a0c2:	fb03 8306 	mla	r3, r3, r6, r8
9000a0c6:	4621      	mov	r1, r4
9000a0c8:	4628      	mov	r0, r5
    ETHARP_SET_ADDRHINT(netif, i);
9000a0ca:	7016      	strb	r6, [r2, #0]
    result = ethernet_output(netif, q, srcaddr, &(arp_table[i].ethaddr), ETHTYPE_IP);
9000a0cc:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000a0d0:	330c      	adds	r3, #12
9000a0d2:	9200      	str	r2, [sp, #0]
9000a0d4:	f105 022a 	add.w	r2, r5, #42	@ 0x2a
9000a0d8:	f004 fb78 	bl	9000e7cc <ethernet_output>
9000a0dc:	e7d6      	b.n	9000a08c <etharp_query+0x34>
  if (is_new_entry || (q == NULL)) {
9000a0de:	2c00      	cmp	r4, #0
9000a0e0:	d0e2      	beq.n	9000a0a8 <etharp_query+0x50>
  err_t result = ERR_MEM;
9000a0e2:	f04f 30ff 	mov.w	r0, #4294967295
9000a0e6:	e7e5      	b.n	9000a0b4 <etharp_query+0x5c>
  } else if (arp_table[i].state == ETHARP_STATE_PENDING) {
9000a0e8:	d1d0      	bne.n	9000a08c <etharp_query+0x34>
    p = q;
9000a0ea:	4623      	mov	r3, r4
      if (PBUF_NEEDS_COPY(p)) {
9000a0ec:	7b1a      	ldrb	r2, [r3, #12]
9000a0ee:	0652      	lsls	r2, r2, #25
9000a0f0:	d415      	bmi.n	9000a11e <etharp_query+0xc6>
      p = p->next;
9000a0f2:	681b      	ldr	r3, [r3, #0]
    while (p) {
9000a0f4:	2b00      	cmp	r3, #0
9000a0f6:	d1f9      	bne.n	9000a0ec <etharp_query+0x94>
      pbuf_ref(p);
9000a0f8:	4620      	mov	r0, r4
9000a0fa:	f001 fcbd 	bl	9000ba78 <pbuf_ref>
      if (arp_table[i].q != NULL) {
9000a0fe:	2518      	movs	r5, #24
9000a100:	fb05 f306 	mul.w	r3, r5, r6
9000a104:	f858 0003 	ldr.w	r0, [r8, r3]
9000a108:	b108      	cbz	r0, 9000a10e <etharp_query+0xb6>
        pbuf_free(arp_table[i].q);
9000a10a:	f001 fbeb 	bl	9000b8e4 <pbuf_free>
      arp_table[i].q = p;
9000a10e:	4375      	muls	r5, r6
      result = ERR_OK;
9000a110:	2000      	movs	r0, #0
      arp_table[i].q = p;
9000a112:	f848 4005 	str.w	r4, [r8, r5]
      LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_query: queued packet %p on ARP entry %"U16_F"\n", (void *)q, (u16_t)i));
9000a116:	e7b9      	b.n	9000a08c <etharp_query+0x34>
    return ERR_ARG;
9000a118:	f06f 000f 	mvn.w	r0, #15
9000a11c:	e7b6      	b.n	9000a08c <etharp_query+0x34>
      p = pbuf_clone(PBUF_LINK, PBUF_RAM, q);
9000a11e:	4622      	mov	r2, r4
9000a120:	f44f 7120 	mov.w	r1, #640	@ 0x280
9000a124:	200e      	movs	r0, #14
9000a126:	f001 fd4f 	bl	9000bbc8 <pbuf_clone>
    if (p != NULL) {
9000a12a:	4604      	mov	r4, r0
9000a12c:	2800      	cmp	r0, #0
9000a12e:	d1e6      	bne.n	9000a0fe <etharp_query+0xa6>
      result = ERR_MEM;
9000a130:	f04f 30ff 	mov.w	r0, #4294967295
9000a134:	e7aa      	b.n	9000a08c <etharp_query+0x34>
9000a136:	bf00      	nop
9000a138:	20013eec 	.word	0x20013eec
9000a13c:	20013ef0 	.word	0x20013ef0

9000a140 <etharp_output>:
{
9000a140:	b5f0      	push	{r4, r5, r6, r7, lr}
9000a142:	4604      	mov	r4, r0
9000a144:	b085      	sub	sp, #20
9000a146:	460e      	mov	r6, r1
  if (ip4_addr_isbroadcast(ipaddr, netif)) {
9000a148:	4601      	mov	r1, r0
9000a14a:	6810      	ldr	r0, [r2, #0]
{
9000a14c:	4615      	mov	r5, r2
  if (ip4_addr_isbroadcast(ipaddr, netif)) {
9000a14e:	f000 fc91 	bl	9000aa74 <ip4_addr_isbroadcast_u32>
9000a152:	2800      	cmp	r0, #0
9000a154:	d162      	bne.n	9000a21c <etharp_output+0xdc>
  } else if (ip4_addr_ismulticast(ipaddr)) {
9000a156:	682b      	ldr	r3, [r5, #0]
9000a158:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
9000a15c:	2ae0      	cmp	r2, #224	@ 0xe0
9000a15e:	d11c      	bne.n	9000a19a <etharp_output+0x5a>
    mcastaddr.addr[0] = LL_IP4_MULTICAST_ADDR_0;
9000a160:	2301      	movs	r3, #1
9000a162:	f8ad 3008 	strh.w	r3, [sp, #8]
    mcastaddr.addr[2] = LL_IP4_MULTICAST_ADDR_2;
9000a166:	235e      	movs	r3, #94	@ 0x5e
9000a168:	f88d 300a 	strb.w	r3, [sp, #10]
    mcastaddr.addr[3] = ip4_addr2(ipaddr) & 0x7f;
9000a16c:	786b      	ldrb	r3, [r5, #1]
9000a16e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
9000a172:	f88d 300b 	strb.w	r3, [sp, #11]
    mcastaddr.addr[4] = ip4_addr3(ipaddr);
9000a176:	78ab      	ldrb	r3, [r5, #2]
9000a178:	f88d 300c 	strb.w	r3, [sp, #12]
    mcastaddr.addr[5] = ip4_addr4(ipaddr);
9000a17c:	78eb      	ldrb	r3, [r5, #3]
9000a17e:	f88d 300d 	strb.w	r3, [sp, #13]
    dest = &mcastaddr;
9000a182:	ab02      	add	r3, sp, #8
  return ethernet_output(netif, q, (struct eth_addr *)(netif->hwaddr), dest, ETHTYPE_IP);
9000a184:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000a188:	4631      	mov	r1, r6
9000a18a:	4620      	mov	r0, r4
9000a18c:	9200      	str	r2, [sp, #0]
9000a18e:	f104 022a 	add.w	r2, r4, #42	@ 0x2a
9000a192:	f004 fb1b 	bl	9000e7cc <ethernet_output>
}
9000a196:	b005      	add	sp, #20
9000a198:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if (!ip4_addr_netcmp(ipaddr, netif_ip4_addr(netif), netif_ip4_netmask(netif)) &&
9000a19a:	6862      	ldr	r2, [r4, #4]
9000a19c:	68a1      	ldr	r1, [r4, #8]
9000a19e:	405a      	eors	r2, r3
9000a1a0:	420a      	tst	r2, r1
9000a1a2:	d009      	beq.n	9000a1b8 <etharp_output+0x78>
        !ip4_addr_islinklocal(ipaddr)) {
9000a1a4:	b29b      	uxth	r3, r3
    if (!ip4_addr_netcmp(ipaddr, netif_ip4_addr(netif), netif_ip4_netmask(netif)) &&
9000a1a6:	f64f 62a9 	movw	r2, #65193	@ 0xfea9
9000a1aa:	4293      	cmp	r3, r2
9000a1ac:	d004      	beq.n	9000a1b8 <etharp_output+0x78>
          if (!ip4_addr_isany_val(*netif_ip4_gw(netif))) {
9000a1ae:	68e3      	ldr	r3, [r4, #12]
9000a1b0:	2b00      	cmp	r3, #0
9000a1b2:	d035      	beq.n	9000a220 <etharp_output+0xe0>
            dst_addr = netif_ip4_gw(netif);
9000a1b4:	f104 050c 	add.w	r5, r4, #12
        if ((arp_table[etharp_cached_entry].state >= ETHARP_STATE_STABLE) &&
9000a1b8:	491b      	ldr	r1, [pc, #108]	@ (9000a228 <etharp_output+0xe8>)
9000a1ba:	2018      	movs	r0, #24
9000a1bc:	4b1b      	ldr	r3, [pc, #108]	@ (9000a22c <etharp_output+0xec>)
9000a1be:	780a      	ldrb	r2, [r1, #0]
9000a1c0:	fb00 3302 	mla	r3, r0, r2, r3
9000a1c4:	7d18      	ldrb	r0, [r3, #20]
9000a1c6:	2801      	cmp	r0, #1
9000a1c8:	d90d      	bls.n	9000a1e6 <etharp_output+0xa6>
9000a1ca:	6898      	ldr	r0, [r3, #8]
9000a1cc:	42a0      	cmp	r0, r4
9000a1ce:	d10a      	bne.n	9000a1e6 <etharp_output+0xa6>
            (arp_table[etharp_cached_entry].netif == netif) &&
9000a1d0:	6828      	ldr	r0, [r5, #0]
9000a1d2:	685b      	ldr	r3, [r3, #4]
9000a1d4:	4298      	cmp	r0, r3
9000a1d6:	d106      	bne.n	9000a1e6 <etharp_output+0xa6>
        return etharp_output_to_arp_index(netif, q, i);
9000a1d8:	4631      	mov	r1, r6
9000a1da:	4620      	mov	r0, r4
}
9000a1dc:	b005      	add	sp, #20
9000a1de:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        return etharp_output_to_arp_index(netif, q, i);
9000a1e2:	f7ff bef7 	b.w	90009fd4 <etharp_output_to_arp_index>
    for (i = 0; i < ARP_TABLE_SIZE; i++) {
9000a1e6:	4b11      	ldr	r3, [pc, #68]	@ (9000a22c <etharp_output+0xec>)
{
9000a1e8:	2200      	movs	r2, #0
      if ((arp_table[i].state >= ETHARP_STATE_STABLE) &&
9000a1ea:	7d18      	ldrb	r0, [r3, #20]
9000a1ec:	2801      	cmp	r0, #1
9000a1ee:	d909      	bls.n	9000a204 <etharp_output+0xc4>
9000a1f0:	6898      	ldr	r0, [r3, #8]
9000a1f2:	42a0      	cmp	r0, r4
9000a1f4:	d106      	bne.n	9000a204 <etharp_output+0xc4>
          (arp_table[i].netif == netif) &&
9000a1f6:	682f      	ldr	r7, [r5, #0]
9000a1f8:	6858      	ldr	r0, [r3, #4]
9000a1fa:	4287      	cmp	r7, r0
9000a1fc:	d102      	bne.n	9000a204 <etharp_output+0xc4>
9000a1fe:	b2d2      	uxtb	r2, r2
        ETHARP_SET_ADDRHINT(netif, i);
9000a200:	700a      	strb	r2, [r1, #0]
9000a202:	e7e9      	b.n	9000a1d8 <etharp_output+0x98>
    for (i = 0; i < ARP_TABLE_SIZE; i++) {
9000a204:	3201      	adds	r2, #1
9000a206:	3318      	adds	r3, #24
9000a208:	2a0a      	cmp	r2, #10
9000a20a:	d1ee      	bne.n	9000a1ea <etharp_output+0xaa>
    return etharp_query(netif, dst_addr, q);
9000a20c:	4632      	mov	r2, r6
9000a20e:	4629      	mov	r1, r5
9000a210:	4620      	mov	r0, r4
}
9000a212:	b005      	add	sp, #20
9000a214:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    return etharp_query(netif, dst_addr, q);
9000a218:	f7ff bf1e 	b.w	9000a058 <etharp_query>
    dest = (const struct eth_addr *)&ethbroadcast;
9000a21c:	4b04      	ldr	r3, [pc, #16]	@ (9000a230 <etharp_output+0xf0>)
9000a21e:	e7b1      	b.n	9000a184 <etharp_output+0x44>
            return ERR_RTE;
9000a220:	f06f 0003 	mvn.w	r0, #3
9000a224:	e7b7      	b.n	9000a196 <etharp_output+0x56>
9000a226:	bf00      	nop
9000a228:	20013eec 	.word	0x20013eec
9000a22c:	20013ef0 	.word	0x20013ef0
9000a230:	9002acde 	.word	0x9002acde

9000a234 <icmp_send_response>:
 * @param type Type of the ICMP header
 * @param code Code of the ICMP header
 */
static void
icmp_send_response(struct pbuf *p, u8_t type, u8_t code)
{
9000a234:	b5f0      	push	{r4, r5, r6, r7, lr}
9000a236:	4604      	mov	r4, r0
9000a238:	b087      	sub	sp, #28
9000a23a:	460f      	mov	r7, r1
9000a23c:	4616      	mov	r6, r2

  /* increase number of messages attempted to send */
  MIB2_STATS_INC(mib2.icmpoutmsgs);

  /* ICMP header + IP header + 8 bytes of data */
  q = pbuf_alloc(PBUF_IP, sizeof(struct icmp_echo_hdr) + IP_HLEN + ICMP_DEST_UNREACH_DATASIZE,
9000a23e:	2124      	movs	r1, #36	@ 0x24
9000a240:	f44f 7220 	mov.w	r2, #640	@ 0x280
9000a244:	2022      	movs	r0, #34	@ 0x22
9000a246:	f001 fb79 	bl	9000b93c <pbuf_alloc>
                 PBUF_RAM);
  if (q == NULL) {
9000a24a:	4605      	mov	r5, r0
9000a24c:	b378      	cbz	r0, 9000a2ae <icmp_send_response+0x7a>
    return;
  }
  LWIP_ASSERT("check that first pbuf can hold icmp message",
              (q->len >= (sizeof(struct icmp_echo_hdr) + IP_HLEN + ICMP_DEST_UNREACH_DATASIZE)));

  iphdr = (struct ip_hdr *)p->payload;
9000a24e:	6860      	ldr	r0, [r4, #4]
  LWIP_DEBUGF(ICMP_DEBUG, ("\n"));

  icmphdr = (struct icmp_echo_hdr *)q->payload;
  icmphdr->type = type;
  icmphdr->code = code;
  icmphdr->id = 0;
9000a250:	2300      	movs	r3, #0
  icmphdr = (struct icmp_echo_hdr *)q->payload;
9000a252:	686c      	ldr	r4, [r5, #4]
  icmphdr->seqno = 0;

  /* copy fields from original packet */
  SMEMCPY((u8_t *)q->payload + sizeof(struct icmp_echo_hdr), (u8_t *)p->payload,
9000a254:	f100 011c 	add.w	r1, r0, #28
  icmphdr->id = 0;
9000a258:	7123      	strb	r3, [r4, #4]
  SMEMCPY((u8_t *)q->payload + sizeof(struct icmp_echo_hdr), (u8_t *)p->payload,
9000a25a:	f104 0208 	add.w	r2, r4, #8
  icmphdr->id = 0;
9000a25e:	7163      	strb	r3, [r4, #5]
  icmphdr->seqno = 0;
9000a260:	71a3      	strb	r3, [r4, #6]
9000a262:	71e3      	strb	r3, [r4, #7]
  SMEMCPY((u8_t *)q->payload + sizeof(struct icmp_echo_hdr), (u8_t *)p->payload,
9000a264:	4603      	mov	r3, r0
  icmphdr->type = type;
9000a266:	7027      	strb	r7, [r4, #0]
  icmphdr->code = code;
9000a268:	7066      	strb	r6, [r4, #1]
  SMEMCPY((u8_t *)q->payload + sizeof(struct icmp_echo_hdr), (u8_t *)p->payload,
9000a26a:	f853 6b04 	ldr.w	r6, [r3], #4
9000a26e:	428b      	cmp	r3, r1
9000a270:	f842 6b04 	str.w	r6, [r2], #4
9000a274:	d1f9      	bne.n	9000a26a <icmp_send_response+0x36>
          IP_HLEN + ICMP_DEST_UNREACH_DATASIZE);

  ip4_addr_copy(iphdr_src, iphdr->src);
9000a276:	68c3      	ldr	r3, [r0, #12]
    ip4_addr_t iphdr_dst;
    ip4_addr_copy(iphdr_dst, iphdr->dest);
    netif = ip4_route_src(&iphdr_dst, &iphdr_src);
  }
#else
  netif = ip4_route(&iphdr_src);
9000a278:	a805      	add	r0, sp, #20
  ip4_addr_copy(iphdr_src, iphdr->src);
9000a27a:	9305      	str	r3, [sp, #20]
  netif = ip4_route(&iphdr_src);
9000a27c:	f000 fa12 	bl	9000a6a4 <ip4_route>
#endif
  if (netif != NULL) {
9000a280:	4607      	mov	r7, r0
9000a282:	b188      	cbz	r0, 9000a2a8 <icmp_send_response+0x74>
    /* calculate checksum */
    icmphdr->chksum = 0;
9000a284:	2600      	movs	r6, #0
#if CHECKSUM_GEN_ICMP
    IF__NETIF_CHECKSUM_ENABLED(netif, NETIF_CHECKSUM_GEN_ICMP) {
      icmphdr->chksum = inet_chksum(icmphdr, q->len);
9000a286:	8969      	ldrh	r1, [r5, #10]
9000a288:	4620      	mov	r0, r4
    icmphdr->chksum = 0;
9000a28a:	70a6      	strb	r6, [r4, #2]
9000a28c:	70e6      	strb	r6, [r4, #3]
      icmphdr->chksum = inet_chksum(icmphdr, q->len);
9000a28e:	f000 ffc3 	bl	9000b218 <inet_chksum>
    }
#endif
    ICMP_STATS_INC(icmp.xmit);
    ip4_output_if(q, NULL, &iphdr_src, ICMP_TTL, 0, IP_PROTO_ICMP, netif);
9000a292:	2301      	movs	r3, #1
      icmphdr->chksum = inet_chksum(icmphdr, q->len);
9000a294:	8060      	strh	r0, [r4, #2]
    ip4_output_if(q, NULL, &iphdr_src, ICMP_TTL, 0, IP_PROTO_ICMP, netif);
9000a296:	aa05      	add	r2, sp, #20
9000a298:	4631      	mov	r1, r6
9000a29a:	4628      	mov	r0, r5
9000a29c:	9702      	str	r7, [sp, #8]
9000a29e:	e9cd 6300 	strd	r6, r3, [sp]
9000a2a2:	23ff      	movs	r3, #255	@ 0xff
9000a2a4:	f000 fbd5 	bl	9000aa52 <ip4_output_if>
  }
  pbuf_free(q);
9000a2a8:	4628      	mov	r0, r5
9000a2aa:	f001 fb1b 	bl	9000b8e4 <pbuf_free>
}
9000a2ae:	b007      	add	sp, #28
9000a2b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

9000a2b4 <icmp_input>:
{
9000a2b4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
  iphdr_in = ip4_current_header();
9000a2b8:	f8df a144 	ldr.w	sl, [pc, #324]	@ 9000a400 <icmp_input+0x14c>
{
9000a2bc:	4604      	mov	r4, r0
9000a2be:	460e      	mov	r6, r1
  iphdr_in = ip4_current_header();
9000a2c0:	f8da 9008 	ldr.w	r9, [sl, #8]
  hlen = IPH_HL_BYTES(iphdr_in);
9000a2c4:	f899 5000 	ldrb.w	r5, [r9]
9000a2c8:	f005 050f 	and.w	r5, r5, #15
9000a2cc:	00ad      	lsls	r5, r5, #2
  if (hlen < IP_HLEN) {
9000a2ce:	2d13      	cmp	r5, #19
9000a2d0:	d91c      	bls.n	9000a30c <icmp_input+0x58>
  if (p->len < sizeof(u16_t) * 2) {
9000a2d2:	8943      	ldrh	r3, [r0, #10]
9000a2d4:	2b03      	cmp	r3, #3
9000a2d6:	d919      	bls.n	9000a30c <icmp_input+0x58>
  type = *((u8_t *)p->payload);
9000a2d8:	6843      	ldr	r3, [r0, #4]
  switch (type) {
9000a2da:	781b      	ldrb	r3, [r3, #0]
9000a2dc:	2b08      	cmp	r3, #8
9000a2de:	d115      	bne.n	9000a30c <icmp_input+0x58>
      if (ip4_addr_ismulticast(ip4_current_dest_addr())) {
9000a2e0:	f8da 0014 	ldr.w	r0, [sl, #20]
9000a2e4:	f000 03f0 	and.w	r3, r0, #240	@ 0xf0
9000a2e8:	2be0      	cmp	r3, #224	@ 0xe0
        src = netif_ip4_addr(inp);
9000a2ea:	bf08      	it	eq
9000a2ec:	1d0f      	addeq	r7, r1, #4
      if (ip4_addr_isbroadcast(ip4_current_dest_addr(), ip_current_netif())) {
9000a2ee:	f8da 1000 	ldr.w	r1, [sl]
      src = ip4_current_dest_addr();
9000a2f2:	bf18      	it	ne
9000a2f4:	f10a 0714 	addne.w	r7, sl, #20
      if (ip4_addr_isbroadcast(ip4_current_dest_addr(), ip_current_netif())) {
9000a2f8:	f000 fbbc 	bl	9000aa74 <ip4_addr_isbroadcast_u32>
9000a2fc:	b930      	cbnz	r0, 9000a30c <icmp_input+0x58>
      if (p->tot_len < sizeof(struct icmp_echo_hdr)) {
9000a2fe:	8923      	ldrh	r3, [r4, #8]
9000a300:	2b07      	cmp	r3, #7
9000a302:	d903      	bls.n	9000a30c <icmp_input+0x58>
        if (inet_chksum_pbuf(p) != 0) {
9000a304:	4620      	mov	r0, r4
9000a306:	f000 ff8d 	bl	9000b224 <inet_chksum_pbuf>
9000a30a:	b128      	cbz	r0, 9000a318 <icmp_input+0x64>
  pbuf_free(p);
9000a30c:	4620      	mov	r0, r4
}
9000a30e:	b004      	add	sp, #16
9000a310:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  pbuf_free(p);
9000a314:	f001 bae6 	b.w	9000b8e4 <pbuf_free>
      if (pbuf_add_header(p, hlen + PBUF_LINK_HLEN + PBUF_LINK_ENCAPSULATION_HLEN)) {
9000a318:	f105 080e 	add.w	r8, r5, #14
9000a31c:	4620      	mov	r0, r4
9000a31e:	4641      	mov	r1, r8
9000a320:	f001 fab8 	bl	9000b894 <pbuf_add_header>
9000a324:	2800      	cmp	r0, #0
9000a326:	d063      	beq.n	9000a3f0 <icmp_input+0x13c>
        u16_t alloc_len = (u16_t)(p->tot_len + hlen);
9000a328:	8923      	ldrh	r3, [r4, #8]
9000a32a:	1959      	adds	r1, r3, r5
9000a32c:	b289      	uxth	r1, r1
        if (alloc_len < p->tot_len) {
9000a32e:	428b      	cmp	r3, r1
9000a330:	d8ec      	bhi.n	9000a30c <icmp_input+0x58>
        r = pbuf_alloc(PBUF_LINK, alloc_len, PBUF_RAM);
9000a332:	f44f 7220 	mov.w	r2, #640	@ 0x280
9000a336:	200e      	movs	r0, #14
9000a338:	f001 fb00 	bl	9000b93c <pbuf_alloc>
        if (r == NULL) {
9000a33c:	4680      	mov	r8, r0
9000a33e:	2800      	cmp	r0, #0
9000a340:	d0e4      	beq.n	9000a30c <icmp_input+0x58>
        if (r->len < hlen + sizeof(struct icmp_echo_hdr)) {
9000a342:	8942      	ldrh	r2, [r0, #10]
9000a344:	f105 0308 	add.w	r3, r5, #8
9000a348:	429a      	cmp	r2, r3
9000a34a:	d202      	bcs.n	9000a352 <icmp_input+0x9e>
          pbuf_free(r);
9000a34c:	f001 faca 	bl	9000b8e4 <pbuf_free>
          goto icmperr;
9000a350:	e7dc      	b.n	9000a30c <icmp_input+0x58>
        MEMCPY(r->payload, iphdr_in, hlen);
9000a352:	4649      	mov	r1, r9
9000a354:	462a      	mov	r2, r5
9000a356:	6840      	ldr	r0, [r0, #4]
9000a358:	f01e fb7b 	bl	90028a52 <memcpy>
        if (pbuf_remove_header(r, hlen)) {
9000a35c:	4629      	mov	r1, r5
9000a35e:	4640      	mov	r0, r8
9000a360:	f001 fa9c 	bl	9000b89c <pbuf_remove_header>
9000a364:	b108      	cbz	r0, 9000a36a <icmp_input+0xb6>
          pbuf_free(r);
9000a366:	4640      	mov	r0, r8
9000a368:	e7f0      	b.n	9000a34c <icmp_input+0x98>
        if (pbuf_copy(r, p) != ERR_OK) {
9000a36a:	4621      	mov	r1, r4
9000a36c:	4640      	mov	r0, r8
9000a36e:	f001 fba1 	bl	9000bab4 <pbuf_copy>
9000a372:	2800      	cmp	r0, #0
9000a374:	d1f7      	bne.n	9000a366 <icmp_input+0xb2>
        pbuf_free(p);
9000a376:	4620      	mov	r0, r4
        p = r;
9000a378:	4644      	mov	r4, r8
        pbuf_free(p);
9000a37a:	f001 fab3 	bl	9000b8e4 <pbuf_free>
      if (pbuf_add_header(p, hlen)) {
9000a37e:	4629      	mov	r1, r5
9000a380:	4620      	mov	r0, r4
      iecho = (struct icmp_echo_hdr *)p->payload;
9000a382:	f8d4 9004 	ldr.w	r9, [r4, #4]
      if (pbuf_add_header(p, hlen)) {
9000a386:	f001 fa85 	bl	9000b894 <pbuf_add_header>
9000a38a:	2800      	cmp	r0, #0
9000a38c:	d1be      	bne.n	9000a30c <icmp_input+0x58>
        struct ip_hdr *iphdr = (struct ip_hdr *)p->payload;
9000a38e:	f8d4 8004 	ldr.w	r8, [r4, #4]
          if (iecho->chksum > PP_HTONS(0xffffU - (ICMP_ECHO << 8))) {
9000a392:	f64f 72f7 	movw	r2, #65527	@ 0xfff7
        ip4_addr_copy(iphdr->src, *src);
9000a396:	683b      	ldr	r3, [r7, #0]
          IPH_CHKSUM_SET(iphdr, inet_chksum(iphdr, hlen));
9000a398:	4629      	mov	r1, r5
        ip4_addr_copy(iphdr->src, *src);
9000a39a:	f8c8 300c 	str.w	r3, [r8, #12]
        ip4_addr_copy(iphdr->dest, *ip4_current_src_addr());
9000a39e:	f8da 3010 	ldr.w	r3, [sl, #16]
        IPH_TTL_SET(iphdr, ICMP_TTL);
9000a3a2:	f04f 0aff 	mov.w	sl, #255	@ 0xff
        ip4_addr_copy(iphdr->dest, *ip4_current_src_addr());
9000a3a6:	f8c8 3010 	str.w	r3, [r8, #16]
          if (iecho->chksum > PP_HTONS(0xffffU - (ICMP_ECHO << 8))) {
9000a3aa:	f8b9 3002 	ldrh.w	r3, [r9, #2]
        ICMPH_TYPE_SET(iecho, ICMP_ER);
9000a3ae:	f889 0000 	strb.w	r0, [r9]
          IPH_CHKSUM_SET(iphdr, inet_chksum(iphdr, hlen));
9000a3b2:	4640      	mov	r0, r8
          if (iecho->chksum > PP_HTONS(0xffffU - (ICMP_ECHO << 8))) {
9000a3b4:	4293      	cmp	r3, r2
            iecho->chksum = (u16_t)(iecho->chksum + PP_HTONS((u16_t)(ICMP_ECHO << 8)) + 1);
9000a3b6:	bf8c      	ite	hi
9000a3b8:	3309      	addhi	r3, #9
            iecho->chksum = (u16_t)(iecho->chksum + PP_HTONS(ICMP_ECHO << 8));
9000a3ba:	3308      	addls	r3, #8
9000a3bc:	b29b      	uxth	r3, r3
9000a3be:	f8a9 3002 	strh.w	r3, [r9, #2]
        IPH_CHKSUM_SET(iphdr, 0);
9000a3c2:	f04f 0900 	mov.w	r9, #0
        IPH_TTL_SET(iphdr, ICMP_TTL);
9000a3c6:	f888 a008 	strb.w	sl, [r8, #8]
        IPH_CHKSUM_SET(iphdr, 0);
9000a3ca:	f888 900a 	strb.w	r9, [r8, #10]
9000a3ce:	f888 900b 	strb.w	r9, [r8, #11]
          IPH_CHKSUM_SET(iphdr, inet_chksum(iphdr, hlen));
9000a3d2:	f000 ff21 	bl	9000b218 <inet_chksum>
        ret = ip4_output_if(p, src, LWIP_IP_HDRINCL,
9000a3d6:	2301      	movs	r3, #1
          IPH_CHKSUM_SET(iphdr, inet_chksum(iphdr, hlen));
9000a3d8:	f8a8 000a 	strh.w	r0, [r8, #10]
        ret = ip4_output_if(p, src, LWIP_IP_HDRINCL,
9000a3dc:	464a      	mov	r2, r9
9000a3de:	4639      	mov	r1, r7
9000a3e0:	4620      	mov	r0, r4
9000a3e2:	9602      	str	r6, [sp, #8]
9000a3e4:	e9cd 9300 	strd	r9, r3, [sp]
9000a3e8:	4653      	mov	r3, sl
9000a3ea:	f000 fb32 	bl	9000aa52 <ip4_output_if>
  pbuf_free(p);
9000a3ee:	e78d      	b.n	9000a30c <icmp_input+0x58>
        if (pbuf_remove_header(p, hlen + PBUF_LINK_HLEN + PBUF_LINK_ENCAPSULATION_HLEN)) {
9000a3f0:	4641      	mov	r1, r8
9000a3f2:	4620      	mov	r0, r4
9000a3f4:	f001 fa52 	bl	9000b89c <pbuf_remove_header>
9000a3f8:	2800      	cmp	r0, #0
9000a3fa:	d0c0      	beq.n	9000a37e <icmp_input+0xca>
9000a3fc:	e786      	b.n	9000a30c <icmp_input+0x58>
9000a3fe:	bf00      	nop
9000a400:	20013ff4 	.word	0x20013ff4

9000a404 <icmp_dest_unreach>:
{
9000a404:	460a      	mov	r2, r1
  icmp_send_response(p, ICMP_DUR, t);
9000a406:	2103      	movs	r1, #3
9000a408:	f7ff bf14 	b.w	9000a234 <icmp_send_response>

9000a40c <icmp_time_exceeded>:
{
9000a40c:	460a      	mov	r2, r1
  icmp_send_response(p, ICMP_TE, t);
9000a40e:	210b      	movs	r1, #11
9000a410:	f7ff bf10 	b.w	9000a234 <icmp_send_response>

9000a414 <igmp_send>:
static void
igmp_send(struct netif *netif, struct igmp_group *group, u8_t type)
{
  struct pbuf     *p    = NULL;
  struct igmp_msg *igmp = NULL;
  ip4_addr_t   src  = *IP4_ADDR_ANY4;
9000a414:	4b22      	ldr	r3, [pc, #136]	@ (9000a4a0 <igmp_send+0x8c>)
{
9000a416:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  ip4_addr_t   src  = *IP4_ADDR_ANY4;
9000a41a:	681b      	ldr	r3, [r3, #0]
{
9000a41c:	b089      	sub	sp, #36	@ 0x24
9000a41e:	4607      	mov	r7, r0
9000a420:	460e      	mov	r6, r1
9000a422:	4690      	mov	r8, r2
  ip4_addr_t  *dest = NULL;

  /* IP header + "router alert" option + IGMP header */
  p = pbuf_alloc(PBUF_TRANSPORT, IGMP_MINLEN, PBUF_RAM);
9000a424:	2108      	movs	r1, #8
9000a426:	f44f 7220 	mov.w	r2, #640	@ 0x280
9000a42a:	2036      	movs	r0, #54	@ 0x36
  ip4_addr_t   src  = *IP4_ADDR_ANY4;
9000a42c:	9306      	str	r3, [sp, #24]
  p = pbuf_alloc(PBUF_TRANSPORT, IGMP_MINLEN, PBUF_RAM);
9000a42e:	f001 fa85 	bl	9000b93c <pbuf_alloc>

  if (p) {
9000a432:	4605      	mov	r5, r0
9000a434:	b380      	cbz	r0, 9000a498 <igmp_send+0x84>
    igmp = (struct igmp_msg *)p->payload;
    LWIP_ASSERT("igmp_send: check that first pbuf can hold struct igmp_msg",
                (p->len >= sizeof(struct igmp_msg)));
    ip4_addr_copy(src, *netif_ip4_addr(netif));
9000a436:	687b      	ldr	r3, [r7, #4]

    if (type == IGMP_V2_MEMB_REPORT) {
9000a438:	f1b8 0f16 	cmp.w	r8, #22
    igmp = (struct igmp_msg *)p->payload;
9000a43c:	6844      	ldr	r4, [r0, #4]

    if ((type == IGMP_V2_MEMB_REPORT) || (type == IGMP_LEAVE_GROUP)) {
      igmp->igmp_msgtype  = type;
      igmp->igmp_maxresp  = 0;
      igmp->igmp_checksum = 0;
      igmp->igmp_checksum = inet_chksum(igmp, IGMP_MINLEN);
9000a43e:	f04f 0108 	mov.w	r1, #8
    ip4_addr_copy(src, *netif_ip4_addr(netif));
9000a442:	9306      	str	r3, [sp, #24]
      dest = &(group->group_address);
9000a444:	bf08      	it	eq
9000a446:	f106 0904 	addeq.w	r9, r6, #4
      ip4_addr_copy(igmp->igmp_group_address, group->group_address);
9000a44a:	6873      	ldr	r3, [r6, #4]
      igmp->igmp_checksum = inet_chksum(igmp, IGMP_MINLEN);
9000a44c:	4620      	mov	r0, r4
        dest = &allrouters;
9000a44e:	bf13      	iteet	ne
9000a450:	f8df 9050 	ldrne.w	r9, [pc, #80]	@ 9000a4a4 <igmp_send+0x90>
      ip4_addr_copy(igmp->igmp_group_address, group->group_address);
9000a454:	6063      	streq	r3, [r4, #4]
      group->last_reporter_flag = 1; /* Remember we were the last to report */
9000a456:	2301      	moveq	r3, #1
        ip4_addr_copy(igmp->igmp_group_address, group->group_address);
9000a458:	6063      	strne	r3, [r4, #4]
      group->last_reporter_flag = 1; /* Remember we were the last to report */
9000a45a:	bf08      	it	eq
9000a45c:	7233      	strbeq	r3, [r6, #8]
      igmp->igmp_maxresp  = 0;
9000a45e:	2600      	movs	r6, #0
      igmp->igmp_msgtype  = type;
9000a460:	f884 8000 	strb.w	r8, [r4]
      igmp->igmp_maxresp  = 0;
9000a464:	7066      	strb	r6, [r4, #1]
      igmp->igmp_checksum = 0;
9000a466:	70a6      	strb	r6, [r4, #2]
9000a468:	70e6      	strb	r6, [r4, #3]
      igmp->igmp_checksum = inet_chksum(igmp, IGMP_MINLEN);
9000a46a:	f000 fed5 	bl	9000b218 <inet_chksum>
  ra[0] = PP_HTONS(ROUTER_ALERT);
9000a46e:	f240 4394 	movw	r3, #1172	@ 0x494
      igmp->igmp_checksum = inet_chksum(igmp, IGMP_MINLEN);
9000a472:	8060      	strh	r0, [r4, #2]
  return ip4_output_if_opt(p, src, dest, IGMP_TTL, 0, IP_PROTO_IGMP, netif, ra, ROUTER_ALERTLEN);
9000a474:	464a      	mov	r2, r9
  ra[0] = PP_HTONS(ROUTER_ALERT);
9000a476:	9307      	str	r3, [sp, #28]
  return ip4_output_if_opt(p, src, dest, IGMP_TTL, 0, IP_PROTO_IGMP, netif, ra, ROUTER_ALERTLEN);
9000a478:	2304      	movs	r3, #4
9000a47a:	a906      	add	r1, sp, #24
9000a47c:	4628      	mov	r0, r5
9000a47e:	9304      	str	r3, [sp, #16]
9000a480:	ab07      	add	r3, sp, #28
9000a482:	e9cd 7302 	strd	r7, r3, [sp, #8]
9000a486:	2302      	movs	r3, #2
9000a488:	e9cd 6300 	strd	r6, r3, [sp]
9000a48c:	2301      	movs	r3, #1
9000a48e:	f000 fac7 	bl	9000aa20 <ip4_output_if_opt>

      igmp_ip_output_if(p, &src, dest, netif);
    }

    pbuf_free(p);
9000a492:	4628      	mov	r0, r5
9000a494:	f001 fa26 	bl	9000b8e4 <pbuf_free>
  } else {
    LWIP_DEBUGF(IGMP_DEBUG, ("igmp_send: not enough memory for igmp_send\n"));
    IGMP_STATS_INC(igmp.memerr);
  }
}
9000a498:	b009      	add	sp, #36	@ 0x24
9000a49a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000a49e:	bf00      	nop
9000a4a0:	9002abc8 	.word	0x9002abc8
9000a4a4:	20013fe0 	.word	0x20013fe0

9000a4a8 <igmp_delaying_member>:
{
9000a4a8:	b538      	push	{r3, r4, r5, lr}
  if ((group->group_state == IGMP_GROUP_IDLE_MEMBER) ||
9000a4aa:	7a43      	ldrb	r3, [r0, #9]
{
9000a4ac:	4604      	mov	r4, r0
9000a4ae:	460d      	mov	r5, r1
  if ((group->group_state == IGMP_GROUP_IDLE_MEMBER) ||
9000a4b0:	2b02      	cmp	r3, #2
9000a4b2:	d005      	beq.n	9000a4c0 <igmp_delaying_member+0x18>
9000a4b4:	2b01      	cmp	r3, #1
9000a4b6:	d109      	bne.n	9000a4cc <igmp_delaying_member+0x24>
       ((group->timer == 0) || (maxresp < group->timer)))) {
9000a4b8:	8943      	ldrh	r3, [r0, #10]
      ((group->group_state == IGMP_GROUP_DELAYING_MEMBER) &&
9000a4ba:	b10b      	cbz	r3, 9000a4c0 <igmp_delaying_member+0x18>
       ((group->timer == 0) || (maxresp < group->timer)))) {
9000a4bc:	428b      	cmp	r3, r1
9000a4be:	d905      	bls.n	9000a4cc <igmp_delaying_member+0x24>
  group->timer = (u16_t)(max_time > 2 ? (LWIP_RAND() % max_time) : 1);
9000a4c0:	2d02      	cmp	r5, #2
9000a4c2:	d804      	bhi.n	9000a4ce <igmp_delaying_member+0x26>
9000a4c4:	2301      	movs	r3, #1
9000a4c6:	8163      	strh	r3, [r4, #10]
    group->group_state = IGMP_GROUP_DELAYING_MEMBER;
9000a4c8:	2301      	movs	r3, #1
9000a4ca:	7263      	strb	r3, [r4, #9]
}
9000a4cc:	bd38      	pop	{r3, r4, r5, pc}
  group->timer = (u16_t)(max_time > 2 ? (LWIP_RAND() % max_time) : 1);
9000a4ce:	f01e f845 	bl	9002855c <rand>
9000a4d2:	fbb0 f3f5 	udiv	r3, r0, r5
9000a4d6:	fb03 0015 	mls	r0, r3, r5, r0
9000a4da:	8160      	strh	r0, [r4, #10]
  if (group->timer == 0) {
9000a4dc:	2800      	cmp	r0, #0
9000a4de:	d0f1      	beq.n	9000a4c4 <igmp_delaying_member+0x1c>
9000a4e0:	e7f2      	b.n	9000a4c8 <igmp_delaying_member+0x20>
	...

9000a4e4 <igmp_init>:
  IP4_ADDR(&allsystems, 224, 0, 0, 1);
9000a4e4:	4b03      	ldr	r3, [pc, #12]	@ (9000a4f4 <igmp_init+0x10>)
9000a4e6:	4a04      	ldr	r2, [pc, #16]	@ (9000a4f8 <igmp_init+0x14>)
9000a4e8:	601a      	str	r2, [r3, #0]
  IP4_ADDR(&allrouters, 224, 0, 0, 2);
9000a4ea:	f102 7280 	add.w	r2, r2, #16777216	@ 0x1000000
9000a4ee:	4b03      	ldr	r3, [pc, #12]	@ (9000a4fc <igmp_init+0x18>)
9000a4f0:	601a      	str	r2, [r3, #0]
}
9000a4f2:	4770      	bx	lr
9000a4f4:	20013fe4 	.word	0x20013fe4
9000a4f8:	010000e0 	.word	0x010000e0
9000a4fc:	20013fe0 	.word	0x20013fe0

9000a500 <igmp_report_groups>:
  struct igmp_group *group = netif_igmp_data(netif);
9000a500:	6a43      	ldr	r3, [r0, #36]	@ 0x24
{
9000a502:	b510      	push	{r4, lr}
  if (group != NULL) {
9000a504:	b10b      	cbz	r3, 9000a50a <igmp_report_groups+0xa>
    group = group->next;
9000a506:	681c      	ldr	r4, [r3, #0]
  while (group != NULL) {
9000a508:	b904      	cbnz	r4, 9000a50c <igmp_report_groups+0xc>
}
9000a50a:	bd10      	pop	{r4, pc}
    igmp_delaying_member(group, IGMP_JOIN_DELAYING_MEMBER_TMR);
9000a50c:	4620      	mov	r0, r4
9000a50e:	2105      	movs	r1, #5
9000a510:	f7ff ffca 	bl	9000a4a8 <igmp_delaying_member>
    group = group->next;
9000a514:	6824      	ldr	r4, [r4, #0]
9000a516:	e7f7      	b.n	9000a508 <igmp_report_groups+0x8>

9000a518 <igmp_lookfor_group>:
  struct igmp_group *group = netif_igmp_data(ifp);
9000a518:	6a40      	ldr	r0, [r0, #36]	@ 0x24
  while (group != NULL) {
9000a51a:	b900      	cbnz	r0, 9000a51e <igmp_lookfor_group+0x6>
}
9000a51c:	4770      	bx	lr
    if (ip4_addr_cmp(&(group->group_address), addr)) {
9000a51e:	6842      	ldr	r2, [r0, #4]
9000a520:	680b      	ldr	r3, [r1, #0]
9000a522:	429a      	cmp	r2, r3
9000a524:	d0fa      	beq.n	9000a51c <igmp_lookfor_group+0x4>
    group = group->next;
9000a526:	6800      	ldr	r0, [r0, #0]
9000a528:	e7f7      	b.n	9000a51a <igmp_lookfor_group+0x2>

9000a52a <igmp_lookup_group>:
{
9000a52a:	b570      	push	{r4, r5, r6, lr}
9000a52c:	4605      	mov	r5, r0
9000a52e:	460e      	mov	r6, r1
  group = igmp_lookfor_group(ifp, addr);
9000a530:	f7ff fff2 	bl	9000a518 <igmp_lookfor_group>
  if (group != NULL) {
9000a534:	b968      	cbnz	r0, 9000a552 <igmp_lookup_group+0x28>
  group = (struct igmp_group *)memp_malloc(MEMP_IGMP_GROUP);
9000a536:	2006      	movs	r0, #6
  struct igmp_group *list_head = netif_igmp_data(ifp);
9000a538:	6a6c      	ldr	r4, [r5, #36]	@ 0x24
  group = (struct igmp_group *)memp_malloc(MEMP_IGMP_GROUP);
9000a53a:	f001 f80d 	bl	9000b558 <memp_malloc>
  if (group != NULL) {
9000a53e:	b140      	cbz	r0, 9000a552 <igmp_lookup_group+0x28>
    ip4_addr_set(&(group->group_address), addr);
9000a540:	2300      	movs	r3, #0
9000a542:	b13e      	cbz	r6, 9000a554 <igmp_lookup_group+0x2a>
9000a544:	6832      	ldr	r2, [r6, #0]
    group->use                = 0;
9000a546:	7303      	strb	r3, [r0, #12]
    group->last_reporter_flag = 0;
9000a548:	e9c0 2301 	strd	r2, r3, [r0, #4]
    if (list_head == NULL) {
9000a54c:	b924      	cbnz	r4, 9000a558 <igmp_lookup_group+0x2e>
      group->next = NULL;
9000a54e:	6004      	str	r4, [r0, #0]
      netif_set_client_data(ifp, LWIP_NETIF_CLIENT_DATA_INDEX_IGMP, group);
9000a550:	6268      	str	r0, [r5, #36]	@ 0x24
}
9000a552:	bd70      	pop	{r4, r5, r6, pc}
    ip4_addr_set(&(group->group_address), addr);
9000a554:	461a      	mov	r2, r3
9000a556:	e7f6      	b.n	9000a546 <igmp_lookup_group+0x1c>
      group->next = list_head->next;
9000a558:	6823      	ldr	r3, [r4, #0]
9000a55a:	6003      	str	r3, [r0, #0]
      list_head->next = group;
9000a55c:	6020      	str	r0, [r4, #0]
9000a55e:	e7f8      	b.n	9000a552 <igmp_lookup_group+0x28>

9000a560 <igmp_start>:
{
9000a560:	b510      	push	{r4, lr}
  group = igmp_lookup_group(netif, &allsystems);
9000a562:	490a      	ldr	r1, [pc, #40]	@ (9000a58c <igmp_start+0x2c>)
{
9000a564:	4604      	mov	r4, r0
  group = igmp_lookup_group(netif, &allsystems);
9000a566:	f7ff ffe0 	bl	9000a52a <igmp_lookup_group>
  if (group != NULL) {
9000a56a:	b160      	cbz	r0, 9000a586 <igmp_start+0x26>
    group->group_state = IGMP_GROUP_IDLE_MEMBER;
9000a56c:	2302      	movs	r3, #2
9000a56e:	7243      	strb	r3, [r0, #9]
    group->use++;
9000a570:	7b03      	ldrb	r3, [r0, #12]
9000a572:	3301      	adds	r3, #1
9000a574:	7303      	strb	r3, [r0, #12]
    if (netif->igmp_mac_filter != NULL) {
9000a576:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000a578:	b11b      	cbz	r3, 9000a582 <igmp_start+0x22>
      netif->igmp_mac_filter(netif, &allsystems, NETIF_ADD_MAC_FILTER);
9000a57a:	2201      	movs	r2, #1
9000a57c:	4903      	ldr	r1, [pc, #12]	@ (9000a58c <igmp_start+0x2c>)
9000a57e:	4620      	mov	r0, r4
9000a580:	4798      	blx	r3
    return ERR_OK;
9000a582:	2000      	movs	r0, #0
}
9000a584:	bd10      	pop	{r4, pc}
  return ERR_MEM;
9000a586:	f04f 30ff 	mov.w	r0, #4294967295
9000a58a:	e7fb      	b.n	9000a584 <igmp_start+0x24>
9000a58c:	20013fe4 	.word	0x20013fe4

9000a590 <igmp_input>:
{
9000a590:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9000a592:	460e      	mov	r6, r1
  if (p->len < IGMP_MINLEN) {
9000a594:	8941      	ldrh	r1, [r0, #10]
{
9000a596:	4605      	mov	r5, r0
9000a598:	4617      	mov	r7, r2
  if (p->len < IGMP_MINLEN) {
9000a59a:	2907      	cmp	r1, #7
9000a59c:	d805      	bhi.n	9000a5aa <igmp_input+0x1a>
  pbuf_free(p);
9000a59e:	4628      	mov	r0, r5
}
9000a5a0:	b003      	add	sp, #12
9000a5a2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  pbuf_free(p);
9000a5a6:	f001 b99d 	b.w	9000b8e4 <pbuf_free>
  igmp = (struct igmp_msg *)p->payload;
9000a5aa:	6844      	ldr	r4, [r0, #4]
  if (inet_chksum(igmp, p->len)) {
9000a5ac:	4620      	mov	r0, r4
9000a5ae:	f000 fe33 	bl	9000b218 <inet_chksum>
9000a5b2:	2800      	cmp	r0, #0
9000a5b4:	d1f3      	bne.n	9000a59e <igmp_input+0xe>
  group = igmp_lookfor_group(inp, dest); /* use the destination IP address of incoming packet */
9000a5b6:	4639      	mov	r1, r7
9000a5b8:	4630      	mov	r0, r6
9000a5ba:	f7ff ffad 	bl	9000a518 <igmp_lookfor_group>
  if (!group) {
9000a5be:	2800      	cmp	r0, #0
9000a5c0:	d0ed      	beq.n	9000a59e <igmp_input+0xe>
  switch (igmp->igmp_msgtype) {
9000a5c2:	7823      	ldrb	r3, [r4, #0]
9000a5c4:	2b11      	cmp	r3, #17
9000a5c6:	d008      	beq.n	9000a5da <igmp_input+0x4a>
9000a5c8:	2b16      	cmp	r3, #22
9000a5ca:	d1e8      	bne.n	9000a59e <igmp_input+0xe>
      if (group->group_state == IGMP_GROUP_DELAYING_MEMBER) {
9000a5cc:	7a43      	ldrb	r3, [r0, #9]
9000a5ce:	2b01      	cmp	r3, #1
        group->last_reporter_flag = 0;
9000a5d0:	bf04      	itt	eq
9000a5d2:	f44f 7300 	moveq.w	r3, #512	@ 0x200
9000a5d6:	6083      	streq	r3, [r0, #8]
9000a5d8:	e7e1      	b.n	9000a59e <igmp_input+0xe>
      if ((ip4_addr_cmp(dest, &allsystems)) && ip4_addr_isany(&igmp->igmp_group_address)) {
9000a5da:	4a12      	ldr	r2, [pc, #72]	@ (9000a624 <igmp_input+0x94>)
9000a5dc:	6839      	ldr	r1, [r7, #0]
9000a5de:	6812      	ldr	r2, [r2, #0]
9000a5e0:	6863      	ldr	r3, [r4, #4]
9000a5e2:	4291      	cmp	r1, r2
9000a5e4:	d110      	bne.n	9000a608 <igmp_input+0x78>
9000a5e6:	b9ab      	cbnz	r3, 9000a614 <igmp_input+0x84>
        if (igmp->igmp_maxresp == 0) {
9000a5e8:	7863      	ldrb	r3, [r4, #1]
9000a5ea:	b90b      	cbnz	r3, 9000a5f0 <igmp_input+0x60>
          igmp->igmp_maxresp = IGMP_V1_DELAYING_MEMBER_TMR;
9000a5ec:	230a      	movs	r3, #10
9000a5ee:	7063      	strb	r3, [r4, #1]
        groupref = netif_igmp_data(inp);
9000a5f0:	6a73      	ldr	r3, [r6, #36]	@ 0x24
        if (groupref != NULL) {
9000a5f2:	2b00      	cmp	r3, #0
9000a5f4:	d0d3      	beq.n	9000a59e <igmp_input+0xe>
          groupref = groupref->next;
9000a5f6:	681e      	ldr	r6, [r3, #0]
        while (groupref) {
9000a5f8:	2e00      	cmp	r6, #0
9000a5fa:	d0d0      	beq.n	9000a59e <igmp_input+0xe>
          igmp_delaying_member(groupref, igmp->igmp_maxresp);
9000a5fc:	4630      	mov	r0, r6
9000a5fe:	7861      	ldrb	r1, [r4, #1]
9000a600:	f7ff ff52 	bl	9000a4a8 <igmp_delaying_member>
          groupref = groupref->next;
9000a604:	6836      	ldr	r6, [r6, #0]
9000a606:	e7f7      	b.n	9000a5f8 <igmp_input+0x68>
        if (!ip4_addr_isany(&igmp->igmp_group_address)) {
9000a608:	2b00      	cmp	r3, #0
9000a60a:	d0c8      	beq.n	9000a59e <igmp_input+0xe>
            igmp_delaying_member(group, igmp->igmp_maxresp);
9000a60c:	7861      	ldrb	r1, [r4, #1]
9000a60e:	f7ff ff4b 	bl	9000a4a8 <igmp_delaying_member>
9000a612:	e7c4      	b.n	9000a59e <igmp_input+0xe>
            group = igmp_lookfor_group(inp, &groupaddr);
9000a614:	a901      	add	r1, sp, #4
9000a616:	4630      	mov	r0, r6
            ip4_addr_copy(groupaddr, igmp->igmp_group_address);
9000a618:	9301      	str	r3, [sp, #4]
            group = igmp_lookfor_group(inp, &groupaddr);
9000a61a:	f7ff ff7d 	bl	9000a518 <igmp_lookfor_group>
          if (group != NULL) {
9000a61e:	2800      	cmp	r0, #0
9000a620:	d0bd      	beq.n	9000a59e <igmp_input+0xe>
9000a622:	e7f3      	b.n	9000a60c <igmp_input+0x7c>
9000a624:	20013fe4 	.word	0x20013fe4

9000a628 <igmp_tmr>:
{
9000a628:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  NETIF_FOREACH(netif) {
9000a62a:	4b0f      	ldr	r3, [pc, #60]	@ (9000a668 <igmp_tmr+0x40>)
    group->group_state = IGMP_GROUP_IDLE_MEMBER;
9000a62c:	2702      	movs	r7, #2
      (!(ip4_addr_cmp(&(group->group_address), &allsystems)))) {
9000a62e:	4e0f      	ldr	r6, [pc, #60]	@ (9000a66c <igmp_tmr+0x44>)
  NETIF_FOREACH(netif) {
9000a630:	681d      	ldr	r5, [r3, #0]
9000a632:	b905      	cbnz	r5, 9000a636 <igmp_tmr+0xe>
}
9000a634:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    struct igmp_group *group = netif_igmp_data(netif);
9000a636:	6a6c      	ldr	r4, [r5, #36]	@ 0x24
    while (group != NULL) {
9000a638:	b90c      	cbnz	r4, 9000a63e <igmp_tmr+0x16>
  NETIF_FOREACH(netif) {
9000a63a:	682d      	ldr	r5, [r5, #0]
9000a63c:	e7f9      	b.n	9000a632 <igmp_tmr+0xa>
      if (group->timer > 0) {
9000a63e:	8963      	ldrh	r3, [r4, #10]
9000a640:	b183      	cbz	r3, 9000a664 <igmp_tmr+0x3c>
        group->timer--;
9000a642:	3b01      	subs	r3, #1
9000a644:	b29b      	uxth	r3, r3
9000a646:	8163      	strh	r3, [r4, #10]
        if (group->timer == 0) {
9000a648:	b963      	cbnz	r3, 9000a664 <igmp_tmr+0x3c>
  if ((group->group_state == IGMP_GROUP_DELAYING_MEMBER) &&
9000a64a:	7a63      	ldrb	r3, [r4, #9]
9000a64c:	2b01      	cmp	r3, #1
9000a64e:	d109      	bne.n	9000a664 <igmp_tmr+0x3c>
9000a650:	6862      	ldr	r2, [r4, #4]
9000a652:	6833      	ldr	r3, [r6, #0]
9000a654:	429a      	cmp	r2, r3
9000a656:	d005      	beq.n	9000a664 <igmp_tmr+0x3c>
    igmp_send(netif, group, IGMP_V2_MEMB_REPORT);
9000a658:	2216      	movs	r2, #22
9000a65a:	4621      	mov	r1, r4
9000a65c:	4628      	mov	r0, r5
    group->group_state = IGMP_GROUP_IDLE_MEMBER;
9000a65e:	7267      	strb	r7, [r4, #9]
    igmp_send(netif, group, IGMP_V2_MEMB_REPORT);
9000a660:	f7ff fed8 	bl	9000a414 <igmp_send>
      group = group->next;
9000a664:	6824      	ldr	r4, [r4, #0]
9000a666:	e7e7      	b.n	9000a638 <igmp_tmr+0x10>
9000a668:	2001a474 	.word	0x2001a474
9000a66c:	20013fe4 	.word	0x20013fe4

9000a670 <ip4_input_accept>:
#endif /* IP_FORWARD */

/** Return true if the current input packet should be accepted on this netif */
static int
ip4_input_accept(struct netif *netif)
{
9000a670:	b508      	push	{r3, lr}
                         ip4_addr_get_u32(ip4_current_dest_addr()) & ip4_addr_get_u32(netif_ip4_netmask(netif)),
                         ip4_addr_get_u32(netif_ip4_addr(netif)) & ip4_addr_get_u32(netif_ip4_netmask(netif)),
                         ip4_addr_get_u32(ip4_current_dest_addr()) & ~ip4_addr_get_u32(netif_ip4_netmask(netif))));

  /* interface is up and configured? */
  if ((netif_is_up(netif)) && (!ip4_addr_isany_val(*netif_ip4_addr(netif)))) {
9000a672:	f890 3031 	ldrb.w	r3, [r0, #49]	@ 0x31
{
9000a676:	4601      	mov	r1, r0
  if ((netif_is_up(netif)) && (!ip4_addr_isany_val(*netif_ip4_addr(netif)))) {
9000a678:	f013 0001 	ands.w	r0, r3, #1
9000a67c:	d00a      	beq.n	9000a694 <ip4_input_accept+0x24>
9000a67e:	684b      	ldr	r3, [r1, #4]
9000a680:	b14b      	cbz	r3, 9000a696 <ip4_input_accept+0x26>
    /* unicast to this interface address? */
    if (ip4_addr_cmp(ip4_current_dest_addr(), netif_ip4_addr(netif)) ||
9000a682:	4a07      	ldr	r2, [pc, #28]	@ (9000a6a0 <ip4_input_accept+0x30>)
9000a684:	6950      	ldr	r0, [r2, #20]
9000a686:	4283      	cmp	r3, r0
9000a688:	d007      	beq.n	9000a69a <ip4_input_accept+0x2a>
        /* or broadcast on this interface network address? */
        ip4_addr_isbroadcast(ip4_current_dest_addr(), netif)
9000a68a:	f000 f9f3 	bl	9000aa74 <ip4_addr_isbroadcast_u32>
    if (ip4_addr_cmp(ip4_current_dest_addr(), netif_ip4_addr(netif)) ||
9000a68e:	3800      	subs	r0, #0
9000a690:	bf18      	it	ne
9000a692:	2001      	movne	r0, #1
      return 1;
    }
#endif /* LWIP_AUTOIP */
  }
  return 0;
}
9000a694:	bd08      	pop	{r3, pc}
  return 0;
9000a696:	4618      	mov	r0, r3
9000a698:	e7fc      	b.n	9000a694 <ip4_input_accept+0x24>
      return 1;
9000a69a:	2001      	movs	r0, #1
9000a69c:	e7fa      	b.n	9000a694 <ip4_input_accept+0x24>
9000a69e:	bf00      	nop
9000a6a0:	20013ff4 	.word	0x20013ff4

9000a6a4 <ip4_route>:
  if (ip4_addr_ismulticast(dest) && ip4_default_multicast_netif) {
9000a6a4:	6803      	ldr	r3, [r0, #0]
9000a6a6:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
9000a6aa:	2ae0      	cmp	r2, #224	@ 0xe0
{
9000a6ac:	b510      	push	{r4, lr}
  if (ip4_addr_ismulticast(dest) && ip4_default_multicast_netif) {
9000a6ae:	d102      	bne.n	9000a6b6 <ip4_route+0x12>
9000a6b0:	4a14      	ldr	r2, [pc, #80]	@ (9000a704 <ip4_route+0x60>)
9000a6b2:	6810      	ldr	r0, [r2, #0]
9000a6b4:	b988      	cbnz	r0, 9000a6da <ip4_route+0x36>
  NETIF_FOREACH(netif) {
9000a6b6:	4a14      	ldr	r2, [pc, #80]	@ (9000a708 <ip4_route+0x64>)
9000a6b8:	6810      	ldr	r0, [r2, #0]
9000a6ba:	b978      	cbnz	r0, 9000a6dc <ip4_route+0x38>
  if ((netif_default == NULL) || !netif_is_up(netif_default) || !netif_is_link_up(netif_default) ||
9000a6bc:	4a13      	ldr	r2, [pc, #76]	@ (9000a70c <ip4_route+0x68>)
9000a6be:	6812      	ldr	r2, [r2, #0]
9000a6c0:	b15a      	cbz	r2, 9000a6da <ip4_route+0x36>
9000a6c2:	f892 1031 	ldrb.w	r1, [r2, #49]	@ 0x31
9000a6c6:	f001 0105 	and.w	r1, r1, #5
9000a6ca:	2905      	cmp	r1, #5
9000a6cc:	d105      	bne.n	9000a6da <ip4_route+0x36>
9000a6ce:	6851      	ldr	r1, [r2, #4]
9000a6d0:	b119      	cbz	r1, 9000a6da <ip4_route+0x36>
      ip4_addr_isany_val(*netif_ip4_addr(netif_default)) || ip4_addr_isloopback(dest)) {
9000a6d2:	b2db      	uxtb	r3, r3
  return netif_default;
9000a6d4:	2b7f      	cmp	r3, #127	@ 0x7f
9000a6d6:	bf18      	it	ne
9000a6d8:	4610      	movne	r0, r2
}
9000a6da:	bd10      	pop	{r4, pc}
    if (netif_is_up(netif) && netif_is_link_up(netif) && !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
9000a6dc:	f890 1031 	ldrb.w	r1, [r0, #49]	@ 0x31
9000a6e0:	07ca      	lsls	r2, r1, #31
9000a6e2:	d50c      	bpl.n	9000a6fe <ip4_route+0x5a>
9000a6e4:	074c      	lsls	r4, r1, #29
9000a6e6:	d50a      	bpl.n	9000a6fe <ip4_route+0x5a>
9000a6e8:	6842      	ldr	r2, [r0, #4]
9000a6ea:	b142      	cbz	r2, 9000a6fe <ip4_route+0x5a>
      if (ip4_addr_netcmp(dest, netif_ip4_addr(netif), netif_ip4_netmask(netif))) {
9000a6ec:	405a      	eors	r2, r3
9000a6ee:	6884      	ldr	r4, [r0, #8]
9000a6f0:	4222      	tst	r2, r4
9000a6f2:	d0f2      	beq.n	9000a6da <ip4_route+0x36>
      if (((netif->flags & NETIF_FLAG_BROADCAST) == 0) && ip4_addr_cmp(dest, netif_ip4_gw(netif))) {
9000a6f4:	078a      	lsls	r2, r1, #30
9000a6f6:	d402      	bmi.n	9000a6fe <ip4_route+0x5a>
9000a6f8:	68c2      	ldr	r2, [r0, #12]
9000a6fa:	4293      	cmp	r3, r2
9000a6fc:	d0ed      	beq.n	9000a6da <ip4_route+0x36>
  NETIF_FOREACH(netif) {
9000a6fe:	6800      	ldr	r0, [r0, #0]
9000a700:	e7db      	b.n	9000a6ba <ip4_route+0x16>
9000a702:	bf00      	nop
9000a704:	20013fe8 	.word	0x20013fe8
9000a708:	2001a474 	.word	0x2001a474
9000a70c:	2001a470 	.word	0x2001a470

9000a710 <ip4_input>:
 * @return ERR_OK if the packet was processed (could return ERR_* if it wasn't
 *         processed, but currently always returns ERR_OK)
 */
err_t
ip4_input(struct pbuf *p, struct netif *inp)
{
9000a710:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

  IP_STATS_INC(ip.recv);
  MIB2_STATS_INC(mib2.ipinreceives);

  /* identify the IP header */
  iphdr = (struct ip_hdr *)p->payload;
9000a714:	f8d0 9004 	ldr.w	r9, [r0, #4]
{
9000a718:	4604      	mov	r4, r0
9000a71a:	460e      	mov	r6, r1
  if (IPH_V(iphdr) != 4) {
9000a71c:	f899 8000 	ldrb.w	r8, [r9]
9000a720:	ea4f 1318 	mov.w	r3, r8, lsr #4
9000a724:	2b04      	cmp	r3, #4
9000a726:	d005      	beq.n	9000a734 <ip4_input+0x24>
    LWIP_DEBUGF(IP_DEBUG | LWIP_DBG_LEVEL_WARNING, ("IP packet dropped due to bad version number %"U16_F"\n", (u16_t)IPH_V(iphdr)));
    ip4_debug_print(p);
    pbuf_free(p);
9000a728:	4620      	mov	r0, r4
9000a72a:	f001 f8db 	bl	9000b8e4 <pbuf_free>
  ip_data.current_ip_header_tot_len = 0;
  ip4_addr_set_any(ip4_current_src_addr());
  ip4_addr_set_any(ip4_current_dest_addr());

  return ERR_OK;
}
9000a72e:	2000      	movs	r0, #0
9000a730:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  iphdr_len = lwip_ntohs(IPH_LEN(iphdr));
9000a734:	f8b9 0002 	ldrh.w	r0, [r9, #2]
  iphdr_hlen = IPH_HL_BYTES(iphdr);
9000a738:	f008 080f 	and.w	r8, r8, #15
  iphdr_len = lwip_ntohs(IPH_LEN(iphdr));
9000a73c:	f000 fcba 	bl	9000b0b4 <lwip_htons>
  if (iphdr_len < p->tot_len) {
9000a740:	8923      	ldrh	r3, [r4, #8]
  iphdr_hlen = IPH_HL_BYTES(iphdr);
9000a742:	ea4f 0888 	mov.w	r8, r8, lsl #2
  iphdr_len = lwip_ntohs(IPH_LEN(iphdr));
9000a746:	4605      	mov	r5, r0
  if (iphdr_len < p->tot_len) {
9000a748:	4283      	cmp	r3, r0
9000a74a:	d903      	bls.n	9000a754 <ip4_input+0x44>
    pbuf_realloc(p, iphdr_len);
9000a74c:	4601      	mov	r1, r0
9000a74e:	4620      	mov	r0, r4
9000a750:	f001 f960 	bl	9000ba14 <pbuf_realloc>
  if ((iphdr_hlen > p->len) || (iphdr_len > p->tot_len) || (iphdr_hlen < IP_HLEN)) {
9000a754:	8963      	ldrh	r3, [r4, #10]
9000a756:	4543      	cmp	r3, r8
9000a758:	d3e6      	bcc.n	9000a728 <ip4_input+0x18>
9000a75a:	8923      	ldrh	r3, [r4, #8]
9000a75c:	42ab      	cmp	r3, r5
9000a75e:	d3e3      	bcc.n	9000a728 <ip4_input+0x18>
9000a760:	f1b8 0f13 	cmp.w	r8, #19
9000a764:	d9e0      	bls.n	9000a728 <ip4_input+0x18>
    if (inet_chksum(iphdr, iphdr_hlen) != 0) {
9000a766:	4641      	mov	r1, r8
9000a768:	4648      	mov	r0, r9
9000a76a:	f000 fd55 	bl	9000b218 <inet_chksum>
9000a76e:	2800      	cmp	r0, #0
9000a770:	d1da      	bne.n	9000a728 <ip4_input+0x18>
  ip_addr_copy_from_ip4(ip_data.current_iphdr_dest, iphdr->dest);
9000a772:	f8d9 3010 	ldr.w	r3, [r9, #16]
9000a776:	4d4d      	ldr	r5, [pc, #308]	@ (9000a8ac <ip4_input+0x19c>)
9000a778:	616b      	str	r3, [r5, #20]
  if (ip4_addr_ismulticast(ip4_current_dest_addr())) {
9000a77a:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
  ip_addr_copy_from_ip4(ip_data.current_iphdr_src, iphdr->src);
9000a77e:	f8d9 200c 	ldr.w	r2, [r9, #12]
  if (ip4_addr_ismulticast(ip4_current_dest_addr())) {
9000a782:	2be0      	cmp	r3, #224	@ 0xe0
  ip_addr_copy_from_ip4(ip_data.current_iphdr_src, iphdr->src);
9000a784:	612a      	str	r2, [r5, #16]
  if (ip4_addr_ismulticast(ip4_current_dest_addr())) {
9000a786:	d15d      	bne.n	9000a844 <ip4_input+0x134>
    if ((inp->flags & NETIF_FLAG_IGMP) && (igmp_lookfor_group(inp, ip4_current_dest_addr()))) {
9000a788:	f896 3031 	ldrb.w	r3, [r6, #49]	@ 0x31
9000a78c:	069b      	lsls	r3, r3, #26
9000a78e:	d447      	bmi.n	9000a820 <ip4_input+0x110>
      netif = NULL;
9000a790:	2700      	movs	r7, #0
    if ((ip4_addr_isbroadcast(ip4_current_src_addr(), inp)) ||
9000a792:	4631      	mov	r1, r6
9000a794:	6928      	ldr	r0, [r5, #16]
9000a796:	f000 f96d 	bl	9000aa74 <ip4_addr_isbroadcast_u32>
9000a79a:	2800      	cmp	r0, #0
9000a79c:	d1c4      	bne.n	9000a728 <ip4_input+0x18>
        (ip4_addr_ismulticast(ip4_current_src_addr()))) {
9000a79e:	692b      	ldr	r3, [r5, #16]
9000a7a0:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
    if ((ip4_addr_isbroadcast(ip4_current_src_addr(), inp)) ||
9000a7a4:	2be0      	cmp	r3, #224	@ 0xe0
9000a7a6:	d0bf      	beq.n	9000a728 <ip4_input+0x18>
  if (netif == NULL) {
9000a7a8:	2f00      	cmp	r7, #0
9000a7aa:	d0bd      	beq.n	9000a728 <ip4_input+0x18>
  if ((IPH_OFFSET(iphdr) & PP_HTONS(IP_OFFMASK | IP_MF)) != 0) {
9000a7ac:	f8b9 3006 	ldrh.w	r3, [r9, #6]
9000a7b0:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000a7b4:	b13b      	cbz	r3, 9000a7c6 <ip4_input+0xb6>
    p = ip4_reass(p);
9000a7b6:	4620      	mov	r0, r4
9000a7b8:	f000 fa28 	bl	9000ac0c <ip4_reass>
    if (p == NULL) {
9000a7bc:	4604      	mov	r4, r0
9000a7be:	2800      	cmp	r0, #0
9000a7c0:	d0b5      	beq.n	9000a72e <ip4_input+0x1e>
    iphdr = (const struct ip_hdr *)p->payload;
9000a7c2:	f8d0 9004 	ldr.w	r9, [r0, #4]
  ip_data.current_ip4_header = iphdr;
9000a7c6:	f8c5 9008 	str.w	r9, [r5, #8]
    pbuf_remove_header(p, iphdr_hlen); /* Move to payload, no check necessary. */
9000a7ca:	4641      	mov	r1, r8
9000a7cc:	4620      	mov	r0, r4
  ip_data.current_input_netif = inp;
9000a7ce:	e9c5 7600 	strd	r7, r6, [r5]
  ip_data.current_ip_header_tot_len = IPH_HL_BYTES(iphdr);
9000a7d2:	f899 3000 	ldrb.w	r3, [r9]
9000a7d6:	f003 030f 	and.w	r3, r3, #15
9000a7da:	009b      	lsls	r3, r3, #2
9000a7dc:	81ab      	strh	r3, [r5, #12]
    pbuf_remove_header(p, iphdr_hlen); /* Move to payload, no check necessary. */
9000a7de:	f001 f85d 	bl	9000b89c <pbuf_remove_header>
    switch (IPH_PROTO(iphdr)) {
9000a7e2:	f899 3009 	ldrb.w	r3, [r9, #9]
9000a7e6:	2b06      	cmp	r3, #6
9000a7e8:	d050      	beq.n	9000a88c <ip4_input+0x17c>
9000a7ea:	d841      	bhi.n	9000a870 <ip4_input+0x160>
9000a7ec:	2b01      	cmp	r3, #1
9000a7ee:	d052      	beq.n	9000a896 <ip4_input+0x186>
9000a7f0:	2b02      	cmp	r3, #2
9000a7f2:	d055      	beq.n	9000a8a0 <ip4_input+0x190>
          if (!ip4_addr_isbroadcast(ip4_current_dest_addr(), netif) &&
9000a7f4:	4639      	mov	r1, r7
9000a7f6:	6968      	ldr	r0, [r5, #20]
9000a7f8:	f000 f93c 	bl	9000aa74 <ip4_addr_isbroadcast_u32>
9000a7fc:	b960      	cbnz	r0, 9000a818 <ip4_input+0x108>
              !ip4_addr_ismulticast(ip4_current_dest_addr())) {
9000a7fe:	696b      	ldr	r3, [r5, #20]
9000a800:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
          if (!ip4_addr_isbroadcast(ip4_current_dest_addr(), netif) &&
9000a804:	2be0      	cmp	r3, #224	@ 0xe0
9000a806:	d007      	beq.n	9000a818 <ip4_input+0x108>
            pbuf_header_force(p, (s16_t)iphdr_hlen); /* Move to ip header, no check necessary. */
9000a808:	4641      	mov	r1, r8
9000a80a:	4620      	mov	r0, r4
9000a80c:	f001 f862 	bl	9000b8d4 <pbuf_header_force>
            icmp_dest_unreach(p, ICMP_DUR_PROTO);
9000a810:	2102      	movs	r1, #2
9000a812:	4620      	mov	r0, r4
9000a814:	f7ff fdf6 	bl	9000a404 <icmp_dest_unreach>
        pbuf_free(p);
9000a818:	4620      	mov	r0, r4
9000a81a:	f001 f863 	bl	9000b8e4 <pbuf_free>
        break;
9000a81e:	e02d      	b.n	9000a87c <ip4_input+0x16c>
    if ((inp->flags & NETIF_FLAG_IGMP) && (igmp_lookfor_group(inp, ip4_current_dest_addr()))) {
9000a820:	f105 0114 	add.w	r1, r5, #20
9000a824:	4630      	mov	r0, r6
9000a826:	f7ff fe77 	bl	9000a518 <igmp_lookfor_group>
9000a82a:	2800      	cmp	r0, #0
9000a82c:	d0b0      	beq.n	9000a790 <ip4_input+0x80>
      if (ip4_addr_cmp(ip4_current_dest_addr(), &allsystems) &&
9000a82e:	4a20      	ldr	r2, [pc, #128]	@ (9000a8b0 <ip4_input+0x1a0>)
9000a830:	e9d5 3104 	ldrd	r3, r1, [r5, #16]
9000a834:	4291      	cmp	r1, r2
9000a836:	d001      	beq.n	9000a83c <ip4_input+0x12c>
      netif = inp;
9000a838:	4637      	mov	r7, r6
9000a83a:	e7aa      	b.n	9000a792 <ip4_input+0x82>
          ip4_addr_isany(ip4_current_src_addr())) {
9000a83c:	2b00      	cmp	r3, #0
9000a83e:	d1fb      	bne.n	9000a838 <ip4_input+0x128>
      netif = inp;
9000a840:	4637      	mov	r7, r6
9000a842:	e7b3      	b.n	9000a7ac <ip4_input+0x9c>
    if (ip4_input_accept(inp)) {
9000a844:	4630      	mov	r0, r6
9000a846:	f7ff ff13 	bl	9000a670 <ip4_input_accept>
9000a84a:	2800      	cmp	r0, #0
9000a84c:	d1f4      	bne.n	9000a838 <ip4_input+0x128>
      if (!ip4_addr_isloopback(ip4_current_dest_addr()))
9000a84e:	7d2b      	ldrb	r3, [r5, #20]
9000a850:	2b7f      	cmp	r3, #127	@ 0x7f
9000a852:	d09d      	beq.n	9000a790 <ip4_input+0x80>
        NETIF_FOREACH(netif) {
9000a854:	4b17      	ldr	r3, [pc, #92]	@ (9000a8b4 <ip4_input+0x1a4>)
9000a856:	681f      	ldr	r7, [r3, #0]
9000a858:	2f00      	cmp	r7, #0
9000a85a:	d099      	beq.n	9000a790 <ip4_input+0x80>
          if (netif == inp) {
9000a85c:	42be      	cmp	r6, r7
9000a85e:	d101      	bne.n	9000a864 <ip4_input+0x154>
        NETIF_FOREACH(netif) {
9000a860:	683f      	ldr	r7, [r7, #0]
9000a862:	e7f9      	b.n	9000a858 <ip4_input+0x148>
          if (ip4_input_accept(netif)) {
9000a864:	4638      	mov	r0, r7
9000a866:	f7ff ff03 	bl	9000a670 <ip4_input_accept>
9000a86a:	2800      	cmp	r0, #0
9000a86c:	d0f8      	beq.n	9000a860 <ip4_input+0x150>
9000a86e:	e790      	b.n	9000a792 <ip4_input+0x82>
    switch (IPH_PROTO(iphdr)) {
9000a870:	2b11      	cmp	r3, #17
9000a872:	d1bf      	bne.n	9000a7f4 <ip4_input+0xe4>
        udp_input(p, inp);
9000a874:	4631      	mov	r1, r6
9000a876:	4620      	mov	r0, r4
9000a878:	f003 fe8a 	bl	9000e590 <udp_input>
  ip_data.current_netif = NULL;
9000a87c:	2300      	movs	r3, #0
  ip_data.current_input_netif = NULL;
9000a87e:	e9c5 3300 	strd	r3, r3, [r5]
  ip_data.current_ip4_header = NULL;
9000a882:	60ab      	str	r3, [r5, #8]
  ip_data.current_ip_header_tot_len = 0;
9000a884:	81ab      	strh	r3, [r5, #12]
  ip4_addr_set_any(ip4_current_dest_addr());
9000a886:	e9c5 3304 	strd	r3, r3, [r5, #16]
  return ERR_OK;
9000a88a:	e750      	b.n	9000a72e <ip4_input+0x1e>
        tcp_input(p, inp);
9000a88c:	4631      	mov	r1, r6
9000a88e:	4620      	mov	r0, r4
9000a890:	f002 fa74 	bl	9000cd7c <tcp_input>
        break;
9000a894:	e7f2      	b.n	9000a87c <ip4_input+0x16c>
        icmp_input(p, inp);
9000a896:	4631      	mov	r1, r6
9000a898:	4620      	mov	r0, r4
9000a89a:	f7ff fd0b 	bl	9000a2b4 <icmp_input>
        break;
9000a89e:	e7ed      	b.n	9000a87c <ip4_input+0x16c>
        igmp_input(p, inp, ip4_current_dest_addr());
9000a8a0:	4a05      	ldr	r2, [pc, #20]	@ (9000a8b8 <ip4_input+0x1a8>)
9000a8a2:	4631      	mov	r1, r6
9000a8a4:	4620      	mov	r0, r4
9000a8a6:	f7ff fe73 	bl	9000a590 <igmp_input>
        break;
9000a8aa:	e7e7      	b.n	9000a87c <ip4_input+0x16c>
9000a8ac:	20013ff4 	.word	0x20013ff4
9000a8b0:	010000e0 	.word	0x010000e0
9000a8b4:	2001a474 	.word	0x2001a474
9000a8b8:	20014008 	.word	0x20014008

9000a8bc <ip4_output_if_opt_src>:
 */
err_t
ip4_output_if_opt_src(struct pbuf *p, const ip4_addr_t *src, const ip4_addr_t *dest,
                      u8_t ttl, u8_t tos, u8_t proto, struct netif *netif, void *ip_options,
                      u16_t optlen)
{
9000a8bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000a8c0:	b085      	sub	sp, #20
9000a8c2:	4604      	mov	r4, r0
9000a8c4:	469b      	mov	fp, r3
  LWIP_IP_CHECK_PBUF_REF_COUNT_FOR_TX(p);

  MIB2_STATS_INC(mib2.ipoutrequests);

  /* Should the IP header be generated or is it already included in p? */
  if (dest != LWIP_IP_HDRINCL) {
9000a8c6:	4690      	mov	r8, r2
{
9000a8c8:	f89d 9038 	ldrb.w	r9, [sp, #56]	@ 0x38
9000a8cc:	f89d a03c 	ldrb.w	sl, [sp, #60]	@ 0x3c
9000a8d0:	f8bd 5048 	ldrh.w	r5, [sp, #72]	@ 0x48
9000a8d4:	9100      	str	r1, [sp, #0]
  if (dest != LWIP_IP_HDRINCL) {
9000a8d6:	2a00      	cmp	r2, #0
9000a8d8:	f000 808a 	beq.w	9000a9f0 <ip4_output_if_opt_src+0x134>
    u16_t ip_hlen = IP_HLEN;
#if IP_OPTIONS_SEND
    u16_t optlen_aligned = 0;
    if (optlen != 0) {
9000a8dc:	2d00      	cmp	r5, #0
9000a8de:	f000 8083 	beq.w	9000a9e8 <ip4_output_if_opt_src+0x12c>
#if CHECKSUM_GEN_IP_INLINE
      int i;
#endif /* CHECKSUM_GEN_IP_INLINE */
      if (optlen > (IP_HLEN_MAX - IP_HLEN)) {
9000a8e2:	2d28      	cmp	r5, #40	@ 0x28
9000a8e4:	f200 8094 	bhi.w	9000aa10 <ip4_output_if_opt_src+0x154>
        IP_STATS_INC(ip.err);
        MIB2_STATS_INC(mib2.ipoutdiscards);
        return ERR_VAL;
      }
      /* round up to a multiple of 4 */
      optlen_aligned = (u16_t)((optlen + 3) & ~3);
9000a8e8:	1cee      	adds	r6, r5, #3
9000a8ea:	f026 0603 	bic.w	r6, r6, #3
9000a8ee:	b2b6      	uxth	r6, r6
      ip_hlen = (u16_t)(ip_hlen + optlen_aligned);
9000a8f0:	f106 0714 	add.w	r7, r6, #20
      /* First write in the IP options */
      if (pbuf_add_header(p, optlen_aligned)) {
9000a8f4:	4631      	mov	r1, r6
      ip_hlen = (u16_t)(ip_hlen + optlen_aligned);
9000a8f6:	b2bf      	uxth	r7, r7
      if (pbuf_add_header(p, optlen_aligned)) {
9000a8f8:	f000 ffcc 	bl	9000b894 <pbuf_add_header>
9000a8fc:	b120      	cbz	r0, 9000a908 <ip4_output_if_opt_src+0x4c>
        LWIP_DEBUGF(IP_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("ip4_output_if_opt: not enough room for IP options in pbuf\n"));
        IP_STATS_INC(ip.err);
        MIB2_STATS_INC(mib2.ipoutdiscards);
        return ERR_BUF;
9000a8fe:	f06f 0001 	mvn.w	r0, #1
  }
#endif /* IP_FRAG */

  LWIP_DEBUGF(IP_DEBUG, ("ip4_output_if: call netif->output()\n"));
  return netif->output(netif, p, dest);
}
9000a902:	b005      	add	sp, #20
9000a904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000a908:	9001      	str	r0, [sp, #4]
      MEMCPY(p->payload, ip_options, optlen);
9000a90a:	462a      	mov	r2, r5
9000a90c:	9911      	ldr	r1, [sp, #68]	@ 0x44
9000a90e:	6860      	ldr	r0, [r4, #4]
9000a910:	f01e f89f 	bl	90028a52 <memcpy>
      if (optlen < optlen_aligned) {
9000a914:	42b5      	cmp	r5, r6
9000a916:	9b01      	ldr	r3, [sp, #4]
9000a918:	d205      	bcs.n	9000a926 <ip4_output_if_opt_src+0x6a>
        memset(((char *)p->payload) + optlen, 0, (size_t)(optlen_aligned - optlen));
9000a91a:	6860      	ldr	r0, [r4, #4]
9000a91c:	1b72      	subs	r2, r6, r5
9000a91e:	4619      	mov	r1, r3
9000a920:	4428      	add	r0, r5
9000a922:	f01d ffa0 	bl	90028866 <memset>
      for (i = 0; i < optlen_aligned / 2; i++) {
9000a926:	2300      	movs	r3, #0
        chk_sum += ((u16_t *)p->payload)[i];
9000a928:	6861      	ldr	r1, [r4, #4]
      for (i = 0; i < optlen_aligned / 2; i++) {
9000a92a:	0876      	lsrs	r6, r6, #1
  u32_t chk_sum = 0;
9000a92c:	461d      	mov	r5, r3
        chk_sum += ((u16_t *)p->payload)[i];
9000a92e:	f831 2013 	ldrh.w	r2, [r1, r3, lsl #1]
      for (i = 0; i < optlen_aligned / 2; i++) {
9000a932:	3301      	adds	r3, #1
9000a934:	429e      	cmp	r6, r3
        chk_sum += ((u16_t *)p->payload)[i];
9000a936:	4415      	add	r5, r2
      for (i = 0; i < optlen_aligned / 2; i++) {
9000a938:	dcf9      	bgt.n	9000a92e <ip4_output_if_opt_src+0x72>
    if (pbuf_add_header(p, IP_HLEN)) {
9000a93a:	2114      	movs	r1, #20
9000a93c:	4620      	mov	r0, r4
9000a93e:	f000 ffa9 	bl	9000b894 <pbuf_add_header>
9000a942:	9001      	str	r0, [sp, #4]
9000a944:	2800      	cmp	r0, #0
9000a946:	d1da      	bne.n	9000a8fe <ip4_output_if_opt_src+0x42>
    iphdr = (struct ip_hdr *)p->payload;
9000a948:	6866      	ldr	r6, [r4, #4]
    IPH_VHL_SET(iphdr, 4, ip_hlen / 4);
9000a94a:	f3c7 0787 	ubfx	r7, r7, #2, #8
    IPH_PROTO_SET(iphdr, proto);
9000a94e:	f886 a009 	strb.w	sl, [r6, #9]
    chk_sum += PP_NTOHS(proto | (ttl << 8));
9000a952:	ea4a 2a0b 	orr.w	sl, sl, fp, lsl #8
    IPH_TTL_SET(iphdr, ttl);
9000a956:	f886 b008 	strb.w	fp, [r6, #8]
    IPH_VHL_SET(iphdr, 4, ip_hlen / 4);
9000a95a:	f047 0740 	orr.w	r7, r7, #64	@ 0x40
    ip4_addr_copy(iphdr->dest, *dest);
9000a95e:	f8d8 1000 	ldr.w	r1, [r8]
    chk_sum += PP_NTOHS(proto | (ttl << 8));
9000a962:	ea4f 222a 	mov.w	r2, sl, asr #8
    IPH_TOS_SET(iphdr, tos);
9000a966:	f886 9001 	strb.w	r9, [r6, #1]
    chk_sum += PP_NTOHS(tos | (iphdr->_v_hl << 8));
9000a96a:	ea49 2907 	orr.w	r9, r9, r7, lsl #8
    chk_sum += ip4_addr_get_u32(&iphdr->dest) >> 16;
9000a96e:	0c08      	lsrs	r0, r1, #16
    ip4_addr_copy(iphdr->dest, *dest);
9000a970:	6131      	str	r1, [r6, #16]
    chk_sum += PP_NTOHS(proto | (ttl << 8));
9000a972:	ea42 220a 	orr.w	r2, r2, sl, lsl #8
    IPH_VHL_SET(iphdr, 4, ip_hlen / 4);
9000a976:	7037      	strb	r7, [r6, #0]
    chk_sum += ip4_addr_get_u32(&iphdr->dest) >> 16;
9000a978:	fa10 f181 	uxtah	r1, r0, r1
    IPH_LEN_SET(iphdr, lwip_htons(p->tot_len));
9000a97c:	8920      	ldrh	r0, [r4, #8]
    IPH_ID_SET(iphdr, lwip_htons(ip_id));
9000a97e:	4f26      	ldr	r7, [pc, #152]	@ (9000aa18 <ip4_output_if_opt_src+0x15c>)
    chk_sum += ip4_addr_get_u32(&iphdr->dest) >> 16;
9000a980:	fa11 f282 	uxtah	r2, r1, r2
9000a984:	442a      	add	r2, r5
    chk_sum += PP_NTOHS(tos | (iphdr->_v_hl << 8));
9000a986:	ea4f 2529 	mov.w	r5, r9, asr #8
9000a98a:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
9000a98e:	fa12 f585 	uxtah	r5, r2, r5
    IPH_LEN_SET(iphdr, lwip_htons(p->tot_len));
9000a992:	f000 fb8f 	bl	9000b0b4 <lwip_htons>
    IPH_OFFSET_SET(iphdr, 0);
9000a996:	9b01      	ldr	r3, [sp, #4]
    chk_sum += iphdr->_len;
9000a998:	4405      	add	r5, r0
    IPH_LEN_SET(iphdr, lwip_htons(p->tot_len));
9000a99a:	8070      	strh	r0, [r6, #2]
    IPH_OFFSET_SET(iphdr, 0);
9000a99c:	71b3      	strb	r3, [r6, #6]
9000a99e:	71f3      	strb	r3, [r6, #7]
    IPH_ID_SET(iphdr, lwip_htons(ip_id));
9000a9a0:	8838      	ldrh	r0, [r7, #0]
9000a9a2:	f000 fb87 	bl	9000b0b4 <lwip_htons>
    ++ip_id;
9000a9a6:	883a      	ldrh	r2, [r7, #0]
    chk_sum += iphdr->_id;
9000a9a8:	1943      	adds	r3, r0, r5
    IPH_ID_SET(iphdr, lwip_htons(ip_id));
9000a9aa:	80b0      	strh	r0, [r6, #4]
    ++ip_id;
9000a9ac:	3201      	adds	r2, #1
9000a9ae:	803a      	strh	r2, [r7, #0]
    if (src == NULL) {
9000a9b0:	9a00      	ldr	r2, [sp, #0]
9000a9b2:	b9da      	cbnz	r2, 9000a9ec <ip4_output_if_opt_src+0x130>
      ip4_addr_copy(iphdr->src, *IP4_ADDR_ANY4);
9000a9b4:	4a19      	ldr	r2, [pc, #100]	@ (9000aa1c <ip4_output_if_opt_src+0x160>)
      ip4_addr_copy(iphdr->src, *src);
9000a9b6:	6812      	ldr	r2, [r2, #0]
    chk_sum += ip4_addr_get_u32(&iphdr->src) & 0xFFFF;
9000a9b8:	fa13 f382 	uxtah	r3, r3, r2
9000a9bc:	60f2      	str	r2, [r6, #12]
    chk_sum += ip4_addr_get_u32(&iphdr->src) >> 16;
9000a9be:	eb03 4312 	add.w	r3, r3, r2, lsr #16
    chk_sum = (chk_sum >> 16) + (chk_sum & 0xFFFF);
9000a9c2:	b29a      	uxth	r2, r3
9000a9c4:	eb02 4313 	add.w	r3, r2, r3, lsr #16
    chk_sum = (chk_sum >> 16) + chk_sum;
9000a9c8:	eb03 4313 	add.w	r3, r3, r3, lsr #16
    chk_sum = ~chk_sum;
9000a9cc:	43db      	mvns	r3, r3
      iphdr->_chksum = (u16_t)chk_sum; /* network order */
9000a9ce:	8173      	strh	r3, [r6, #10]
  if (netif->mtu && (p->tot_len > netif->mtu)) {
9000a9d0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9000a9d2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
9000a9d4:	b1ab      	cbz	r3, 9000aa02 <ip4_output_if_opt_src+0x146>
9000a9d6:	8922      	ldrh	r2, [r4, #8]
9000a9d8:	429a      	cmp	r2, r3
9000a9da:	d912      	bls.n	9000aa02 <ip4_output_if_opt_src+0x146>
    return ip4_frag(p, netif, dest);
9000a9dc:	4642      	mov	r2, r8
9000a9de:	9910      	ldr	r1, [sp, #64]	@ 0x40
9000a9e0:	4620      	mov	r0, r4
9000a9e2:	f000 fa99 	bl	9000af18 <ip4_frag>
9000a9e6:	e78c      	b.n	9000a902 <ip4_output_if_opt_src+0x46>
    u16_t ip_hlen = IP_HLEN;
9000a9e8:	2714      	movs	r7, #20
9000a9ea:	e7a6      	b.n	9000a93a <ip4_output_if_opt_src+0x7e>
      ip4_addr_copy(iphdr->src, *src);
9000a9ec:	9a00      	ldr	r2, [sp, #0]
9000a9ee:	e7e2      	b.n	9000a9b6 <ip4_output_if_opt_src+0xfa>
    if (p->len < IP_HLEN) {
9000a9f0:	8943      	ldrh	r3, [r0, #10]
9000a9f2:	2b13      	cmp	r3, #19
9000a9f4:	d983      	bls.n	9000a8fe <ip4_output_if_opt_src+0x42>
    ip4_addr_copy(dest_addr, iphdr->dest);
9000a9f6:	6843      	ldr	r3, [r0, #4]
    dest = &dest_addr;
9000a9f8:	f10d 080c 	add.w	r8, sp, #12
    ip4_addr_copy(dest_addr, iphdr->dest);
9000a9fc:	691b      	ldr	r3, [r3, #16]
9000a9fe:	9303      	str	r3, [sp, #12]
    dest = &dest_addr;
9000aa00:	e7e6      	b.n	9000a9d0 <ip4_output_if_opt_src+0x114>
  return netif->output(netif, p, dest);
9000aa02:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9000aa04:	4642      	mov	r2, r8
9000aa06:	4621      	mov	r1, r4
9000aa08:	9810      	ldr	r0, [sp, #64]	@ 0x40
9000aa0a:	695b      	ldr	r3, [r3, #20]
9000aa0c:	4798      	blx	r3
9000aa0e:	e778      	b.n	9000a902 <ip4_output_if_opt_src+0x46>
        return ERR_VAL;
9000aa10:	f06f 0005 	mvn.w	r0, #5
9000aa14:	e775      	b.n	9000a902 <ip4_output_if_opt_src+0x46>
9000aa16:	bf00      	nop
9000aa18:	20013fec 	.word	0x20013fec
9000aa1c:	9002abc8 	.word	0x9002abc8

9000aa20 <ip4_output_if_opt>:
{
9000aa20:	b5f0      	push	{r4, r5, r6, r7, lr}
9000aa22:	469c      	mov	ip, r3
9000aa24:	f89d 5014 	ldrb.w	r5, [sp, #20]
9000aa28:	f89d 6018 	ldrb.w	r6, [sp, #24]
9000aa2c:	f8bd e024 	ldrh.w	lr, [sp, #36]	@ 0x24
9000aa30:	e9dd 4707 	ldrd	r4, r7, [sp, #28]
  if (dest != LWIP_IP_HDRINCL) {
9000aa34:	b11a      	cbz	r2, 9000aa3e <ip4_output_if_opt+0x1e>
    if (ip4_addr_isany(src)) {
9000aa36:	b109      	cbz	r1, 9000aa3c <ip4_output_if_opt+0x1c>
9000aa38:	680b      	ldr	r3, [r1, #0]
9000aa3a:	b903      	cbnz	r3, 9000aa3e <ip4_output_if_opt+0x1e>
      src_used = netif_ip4_addr(netif);
9000aa3c:	1d21      	adds	r1, r4, #4
  return ip4_output_if_opt_src(p, src_used, dest, ttl, tos, proto, netif,
9000aa3e:	9505      	str	r5, [sp, #20]
9000aa40:	4663      	mov	r3, ip
9000aa42:	e9cd 7e08 	strd	r7, lr, [sp, #32]
9000aa46:	e9cd 6406 	strd	r6, r4, [sp, #24]
}
9000aa4a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  return ip4_output_if_opt_src(p, src_used, dest, ttl, tos, proto, netif,
9000aa4e:	f7ff bf35 	b.w	9000a8bc <ip4_output_if_opt_src>

9000aa52 <ip4_output_if>:
{
9000aa52:	b510      	push	{r4, lr}
  return ip4_output_if_opt(p, src, dest, ttl, tos, proto, netif, NULL, 0);
9000aa54:	2400      	movs	r4, #0
{
9000aa56:	b086      	sub	sp, #24
  return ip4_output_if_opt(p, src, dest, ttl, tos, proto, netif, NULL, 0);
9000aa58:	e9cd 4403 	strd	r4, r4, [sp, #12]
9000aa5c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9000aa5e:	9402      	str	r4, [sp, #8]
9000aa60:	f89d 4024 	ldrb.w	r4, [sp, #36]	@ 0x24
9000aa64:	9401      	str	r4, [sp, #4]
9000aa66:	f89d 4020 	ldrb.w	r4, [sp, #32]
9000aa6a:	9400      	str	r4, [sp, #0]
9000aa6c:	f7ff ffd8 	bl	9000aa20 <ip4_output_if_opt>
}
9000aa70:	b006      	add	sp, #24
9000aa72:	bd10      	pop	{r4, pc}

9000aa74 <ip4_addr_isbroadcast_u32>:
{
  ip4_addr_t ipaddr;
  ip4_addr_set_u32(&ipaddr, addr);

  /* all ones (broadcast) or all zeroes (old skool broadcast) */
  if ((~addr == IPADDR_ANY) ||
9000aa74:	1e43      	subs	r3, r0, #1
{
9000aa76:	4602      	mov	r2, r0
  if ((~addr == IPADDR_ANY) ||
9000aa78:	3303      	adds	r3, #3
9000aa7a:	d812      	bhi.n	9000aaa2 <ip4_addr_isbroadcast_u32+0x2e>
      (addr == IPADDR_ANY)) {
    return 1;
    /* no broadcast support on this network interface? */
  } else if ((netif->flags & NETIF_FLAG_BROADCAST) == 0) {
9000aa7c:	f891 3031 	ldrb.w	r3, [r1, #49]	@ 0x31
9000aa80:	f013 0002 	ands.w	r0, r3, #2
9000aa84:	d010      	beq.n	9000aaa8 <ip4_addr_isbroadcast_u32+0x34>
    /* the given address cannot be a broadcast address
     * nor can we check against any broadcast addresses */
    return 0;
    /* address matches network interface address exactly? => no broadcast */
  } else if (addr == ip4_addr_get_u32(netif_ip4_addr(netif))) {
9000aa86:	684b      	ldr	r3, [r1, #4]
9000aa88:	4293      	cmp	r3, r2
9000aa8a:	d00c      	beq.n	9000aaa6 <ip4_addr_isbroadcast_u32+0x32>
    return 0;
    /*  on the same (sub) network... */
  } else if (ip4_addr_netcmp(&ipaddr, netif_ip4_addr(netif), netif_ip4_netmask(netif))
9000aa8c:	6889      	ldr	r1, [r1, #8]
9000aa8e:	4053      	eors	r3, r2
9000aa90:	420b      	tst	r3, r1
9000aa92:	d108      	bne.n	9000aaa6 <ip4_addr_isbroadcast_u32+0x32>
             /* ...and host identifier bits are all ones? =>... */
             && ((addr & ~ip4_addr_get_u32(netif_ip4_netmask(netif))) ==
9000aa94:	43cb      	mvns	r3, r1
9000aa96:	ea22 0201 	bic.w	r2, r2, r1
9000aa9a:	1ad3      	subs	r3, r2, r3
9000aa9c:	4258      	negs	r0, r3
9000aa9e:	4158      	adcs	r0, r3
9000aaa0:	4770      	bx	lr
    return 1;
9000aaa2:	2001      	movs	r0, #1
9000aaa4:	4770      	bx	lr
    return 0;
9000aaa6:	2000      	movs	r0, #0
    /* => network broadcast address */
    return 1;
  } else {
    return 0;
  }
}
9000aaa8:	4770      	bx	lr
	...

9000aaac <ip_reass_dequeue_datagram>:
 */
static void
ip_reass_dequeue_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)
{
  /* dequeue the reass struct  */
  if (reassdatagrams == ipr) {
9000aaac:	4a07      	ldr	r2, [pc, #28]	@ (9000aacc <ip_reass_dequeue_datagram+0x20>)
    /* it was the first in the list */
    reassdatagrams = ipr->next;
9000aaae:	6803      	ldr	r3, [r0, #0]
{
9000aab0:	b410      	push	{r4}
  if (reassdatagrams == ipr) {
9000aab2:	6814      	ldr	r4, [r2, #0]
9000aab4:	4284      	cmp	r4, r0
    prev->next = ipr->next;
  }

  /* now we can free the ip_reassdata struct */
  memp_free(MEMP_REASSDATA, ipr);
}
9000aab6:	f85d 4b04 	ldr.w	r4, [sp], #4
    prev->next = ipr->next;
9000aaba:	bf18      	it	ne
9000aabc:	600b      	strne	r3, [r1, #0]
  memp_free(MEMP_REASSDATA, ipr);
9000aabe:	4601      	mov	r1, r0
9000aac0:	f04f 0004 	mov.w	r0, #4
    reassdatagrams = ipr->next;
9000aac4:	bf08      	it	eq
9000aac6:	6013      	streq	r3, [r2, #0]
  memp_free(MEMP_REASSDATA, ipr);
9000aac8:	f000 bd5c 	b.w	9000b584 <memp_free>
9000aacc:	20013ff0 	.word	0x20013ff0

9000aad0 <ip_reass_free_complete_datagram>:
{
9000aad0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  iprh = (struct ip_reass_helper *)ipr->p->payload;
9000aad4:	6846      	ldr	r6, [r0, #4]
{
9000aad6:	4604      	mov	r4, r0
9000aad8:	460f      	mov	r7, r1
  iprh = (struct ip_reass_helper *)ipr->p->payload;
9000aada:	6873      	ldr	r3, [r6, #4]
  if (iprh->start == 0) {
9000aadc:	889a      	ldrh	r2, [r3, #4]
9000aade:	bb1a      	cbnz	r2, 9000ab28 <ip_reass_free_complete_datagram+0x58>
    ipr->p = iprh->next_pbuf;
9000aae0:	681a      	ldr	r2, [r3, #0]
    SMEMCPY(p->payload, &ipr->iphdr, IP_HLEN);
9000aae2:	f100 011c 	add.w	r1, r0, #28
    ipr->p = iprh->next_pbuf;
9000aae6:	6042      	str	r2, [r0, #4]
    SMEMCPY(p->payload, &ipr->iphdr, IP_HLEN);
9000aae8:	f100 0208 	add.w	r2, r0, #8
9000aaec:	f852 0b04 	ldr.w	r0, [r2], #4
9000aaf0:	428a      	cmp	r2, r1
9000aaf2:	f843 0b04 	str.w	r0, [r3], #4
9000aaf6:	d1f9      	bne.n	9000aaec <ip_reass_free_complete_datagram+0x1c>
    icmp_time_exceeded(p, ICMP_TE_FRAG);
9000aaf8:	2101      	movs	r1, #1
9000aafa:	4630      	mov	r0, r6
9000aafc:	f7ff fc86 	bl	9000a40c <icmp_time_exceeded>
    clen = pbuf_clen(p);
9000ab00:	4630      	mov	r0, r6
9000ab02:	f000 ffb1 	bl	9000ba68 <pbuf_clen>
9000ab06:	4605      	mov	r5, r0
    pbuf_free(p);
9000ab08:	4630      	mov	r0, r6
9000ab0a:	f000 feeb 	bl	9000b8e4 <pbuf_free>
  p = ipr->p;
9000ab0e:	6866      	ldr	r6, [r4, #4]
  while (p != NULL) {
9000ab10:	b966      	cbnz	r6, 9000ab2c <ip_reass_free_complete_datagram+0x5c>
  ip_reass_dequeue_datagram(ipr, prev);
9000ab12:	4620      	mov	r0, r4
9000ab14:	4639      	mov	r1, r7
9000ab16:	f7ff ffc9 	bl	9000aaac <ip_reass_dequeue_datagram>
  ip_reass_pbufcount = (u16_t)(ip_reass_pbufcount - pbufs_freed);
9000ab1a:	4a0b      	ldr	r2, [pc, #44]	@ (9000ab48 <ip_reass_free_complete_datagram+0x78>)
}
9000ab1c:	4628      	mov	r0, r5
  ip_reass_pbufcount = (u16_t)(ip_reass_pbufcount - pbufs_freed);
9000ab1e:	8813      	ldrh	r3, [r2, #0]
9000ab20:	1b5b      	subs	r3, r3, r5
9000ab22:	8013      	strh	r3, [r2, #0]
}
9000ab24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  u16_t pbufs_freed = 0;
9000ab28:	2500      	movs	r5, #0
9000ab2a:	e7f0      	b.n	9000ab0e <ip_reass_free_complete_datagram+0x3e>
    iprh = (struct ip_reass_helper *)p->payload;
9000ab2c:	6873      	ldr	r3, [r6, #4]
    clen = pbuf_clen(pcur);
9000ab2e:	4630      	mov	r0, r6
    p = iprh->next_pbuf;
9000ab30:	f8d3 8000 	ldr.w	r8, [r3]
    clen = pbuf_clen(pcur);
9000ab34:	f000 ff98 	bl	9000ba68 <pbuf_clen>
    pbufs_freed = (u16_t)(pbufs_freed + clen);
9000ab38:	4428      	add	r0, r5
9000ab3a:	b285      	uxth	r5, r0
    pbuf_free(pcur);
9000ab3c:	4630      	mov	r0, r6
9000ab3e:	f000 fed1 	bl	9000b8e4 <pbuf_free>
    p = iprh->next_pbuf;
9000ab42:	4646      	mov	r6, r8
9000ab44:	e7e4      	b.n	9000ab10 <ip_reass_free_complete_datagram+0x40>
9000ab46:	bf00      	nop
9000ab48:	20013fee 	.word	0x20013fee

9000ab4c <ip_reass_remove_oldest_datagram>:
{
9000ab4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ab50:	4605      	mov	r5, r0
9000ab52:	460f      	mov	r7, r1
  int pbufs_freed = 0, pbufs_freed_current;
9000ab54:	2600      	movs	r6, #0
    r = reassdatagrams;
9000ab56:	f8df 806c 	ldr.w	r8, [pc, #108]	@ 9000abc4 <ip_reass_remove_oldest_datagram+0x78>
9000ab5a:	f8d8 3000 	ldr.w	r3, [r8]
    while (r != NULL) {
9000ab5e:	b373      	cbz	r3, 9000abbe <ip_reass_remove_oldest_datagram+0x72>
9000ab60:	2400      	movs	r4, #0
9000ab62:	4621      	mov	r1, r4
9000ab64:	46a4      	mov	ip, r4
9000ab66:	4620      	mov	r0, r4
      if (!IP_ADDRESSES_AND_ID_MATCH(&r->iphdr, fraghdr)) {
9000ab68:	f8d5 e00c 	ldr.w	lr, [r5, #12]
9000ab6c:	695a      	ldr	r2, [r3, #20]
9000ab6e:	4572      	cmp	r2, lr
9000ab70:	d109      	bne.n	9000ab86 <ip_reass_remove_oldest_datagram+0x3a>
9000ab72:	f8d5 e010 	ldr.w	lr, [r5, #16]
9000ab76:	699a      	ldr	r2, [r3, #24]
9000ab78:	4572      	cmp	r2, lr
9000ab7a:	d104      	bne.n	9000ab86 <ip_reass_remove_oldest_datagram+0x3a>
9000ab7c:	f8b3 e00c 	ldrh.w	lr, [r3, #12]
9000ab80:	88aa      	ldrh	r2, [r5, #4]
9000ab82:	4596      	cmp	lr, r2
9000ab84:	d008      	beq.n	9000ab98 <ip_reass_remove_oldest_datagram+0x4c>
        other_datagrams++;
9000ab86:	3401      	adds	r4, #1
        if (oldest == NULL) {
9000ab88:	b1b0      	cbz	r0, 9000abb8 <ip_reass_remove_oldest_datagram+0x6c>
        } else if (r->timer <= oldest->timer) {
9000ab8a:	7fc2      	ldrb	r2, [r0, #31]
9000ab8c:	f893 e01f 	ldrb.w	lr, [r3, #31]
          oldest = r;
9000ab90:	4596      	cmp	lr, r2
9000ab92:	bf9c      	itt	ls
9000ab94:	4661      	movls	r1, ip
9000ab96:	4618      	movls	r0, r3
      if (r->next != NULL) {
9000ab98:	681a      	ldr	r2, [r3, #0]
        prev = r;
9000ab9a:	469c      	mov	ip, r3
      if (r->next != NULL) {
9000ab9c:	b952      	cbnz	r2, 9000abb4 <ip_reass_remove_oldest_datagram+0x68>
    if (oldest != NULL) {
9000ab9e:	b110      	cbz	r0, 9000aba6 <ip_reass_remove_oldest_datagram+0x5a>
      pbufs_freed_current = ip_reass_free_complete_datagram(oldest, oldest_prev);
9000aba0:	f7ff ff96 	bl	9000aad0 <ip_reass_free_complete_datagram>
      pbufs_freed += pbufs_freed_current;
9000aba4:	4406      	add	r6, r0
  } while ((pbufs_freed < pbufs_needed) && (other_datagrams > 1));
9000aba6:	42be      	cmp	r6, r7
9000aba8:	da01      	bge.n	9000abae <ip_reass_remove_oldest_datagram+0x62>
9000abaa:	2c01      	cmp	r4, #1
9000abac:	dcd5      	bgt.n	9000ab5a <ip_reass_remove_oldest_datagram+0xe>
}
9000abae:	4630      	mov	r0, r6
9000abb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000abb4:	4613      	mov	r3, r2
9000abb6:	e7d7      	b.n	9000ab68 <ip_reass_remove_oldest_datagram+0x1c>
          oldest_prev = prev;
9000abb8:	4661      	mov	r1, ip
          oldest = r;
9000abba:	4618      	mov	r0, r3
9000abbc:	e7ec      	b.n	9000ab98 <ip_reass_remove_oldest_datagram+0x4c>
9000abbe:	461c      	mov	r4, r3
9000abc0:	e7f1      	b.n	9000aba6 <ip_reass_remove_oldest_datagram+0x5a>
9000abc2:	bf00      	nop
9000abc4:	20013ff0 	.word	0x20013ff0

9000abc8 <ipfrag_free_pbuf_custom>:

/** Free-callback function to free a 'struct pbuf_custom_ref', called by
 * pbuf_free. */
static void
ipfrag_free_pbuf_custom(struct pbuf *p)
{
9000abc8:	b510      	push	{r4, lr}
9000abca:	4604      	mov	r4, r0
  struct pbuf_custom_ref *pcr = (struct pbuf_custom_ref *)p;
  LWIP_ASSERT("pcr != NULL", pcr != NULL);
  LWIP_ASSERT("pcr == p", (void *)pcr == (void *)p);
  if (pcr->original != NULL) {
9000abcc:	6940      	ldr	r0, [r0, #20]
9000abce:	b108      	cbz	r0, 9000abd4 <ipfrag_free_pbuf_custom+0xc>
    pbuf_free(pcr->original);
9000abd0:	f000 fe88 	bl	9000b8e4 <pbuf_free>
  memp_free(MEMP_FRAG_PBUF, p);
9000abd4:	4621      	mov	r1, r4
9000abd6:	2005      	movs	r0, #5
  }
  ip_frag_free_pbuf_custom_ref(pcr);
}
9000abd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  memp_free(MEMP_FRAG_PBUF, p);
9000abdc:	f000 bcd2 	b.w	9000b584 <memp_free>

9000abe0 <ip_reass_tmr>:
{
9000abe0:	b538      	push	{r3, r4, r5, lr}
  r = reassdatagrams;
9000abe2:	4b09      	ldr	r3, [pc, #36]	@ (9000ac08 <ip_reass_tmr+0x28>)
  struct ip_reassdata *r, *prev = NULL;
9000abe4:	2400      	movs	r4, #0
  r = reassdatagrams;
9000abe6:	6818      	ldr	r0, [r3, #0]
  while (r != NULL) {
9000abe8:	b900      	cbnz	r0, 9000abec <ip_reass_tmr+0xc>
}
9000abea:	bd38      	pop	{r3, r4, r5, pc}
    if (r->timer > 0) {
9000abec:	7fc3      	ldrb	r3, [r0, #31]
      r = r->next;
9000abee:	6805      	ldr	r5, [r0, #0]
    if (r->timer > 0) {
9000abf0:	b123      	cbz	r3, 9000abfc <ip_reass_tmr+0x1c>
      r->timer--;
9000abf2:	3b01      	subs	r3, #1
9000abf4:	77c3      	strb	r3, [r0, #31]
      ip_reass_free_complete_datagram(tmp, prev);
9000abf6:	4604      	mov	r4, r0
9000abf8:	4628      	mov	r0, r5
9000abfa:	e7f5      	b.n	9000abe8 <ip_reass_tmr+0x8>
9000abfc:	4621      	mov	r1, r4
9000abfe:	f7ff ff67 	bl	9000aad0 <ip_reass_free_complete_datagram>
9000ac02:	4620      	mov	r0, r4
9000ac04:	e7f7      	b.n	9000abf6 <ip_reass_tmr+0x16>
9000ac06:	bf00      	nop
9000ac08:	20013ff0 	.word	0x20013ff0

9000ac0c <ip4_reass>:
{
9000ac0c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  fraghdr = (struct ip_hdr *)p->payload;
9000ac10:	f8d0 9004 	ldr.w	r9, [r0, #4]
{
9000ac14:	4606      	mov	r6, r0
  if (IPH_HL_BYTES(fraghdr) != IP_HLEN) {
9000ac16:	f899 3000 	ldrb.w	r3, [r9]
9000ac1a:	f003 030f 	and.w	r3, r3, #15
9000ac1e:	2b05      	cmp	r3, #5
9000ac20:	f040 80a5 	bne.w	9000ad6e <ip4_reass+0x162>
  offset = IPH_OFFSET_BYTES(fraghdr);
9000ac24:	f8b9 0006 	ldrh.w	r0, [r9, #6]
9000ac28:	f000 fa44 	bl	9000b0b4 <lwip_htons>
9000ac2c:	4605      	mov	r5, r0
  len = lwip_ntohs(IPH_LEN(fraghdr));
9000ac2e:	f8b9 0002 	ldrh.w	r0, [r9, #2]
9000ac32:	f000 fa3f 	bl	9000b0b4 <lwip_htons>
  hlen = IPH_HL_BYTES(fraghdr);
9000ac36:	f899 3000 	ldrb.w	r3, [r9]
9000ac3a:	f003 030f 	and.w	r3, r3, #15
  if (hlen > len) {
9000ac3e:	ebb0 0f83 	cmp.w	r0, r3, lsl #2
9000ac42:	ea4f 0283 	mov.w	r2, r3, lsl #2
9000ac46:	f0c0 8092 	bcc.w	9000ad6e <ip4_reass+0x162>
  len = (u16_t)(len - hlen);
9000ac4a:	1a80      	subs	r0, r0, r2
  if ((ip_reass_pbufcount + clen) > IP_REASS_MAX_PBUFS) {
9000ac4c:	f8df 82c4 	ldr.w	r8, [pc, #708]	@ 9000af14 <ip4_reass+0x308>
  len = (u16_t)(len - hlen);
9000ac50:	b283      	uxth	r3, r0
  clen = pbuf_clen(p);
9000ac52:	4630      	mov	r0, r6
  len = (u16_t)(len - hlen);
9000ac54:	9301      	str	r3, [sp, #4]
  clen = pbuf_clen(p);
9000ac56:	f000 ff07 	bl	9000ba68 <pbuf_clen>
  if ((ip_reass_pbufcount + clen) > IP_REASS_MAX_PBUFS) {
9000ac5a:	f8b8 3000 	ldrh.w	r3, [r8]
  clen = pbuf_clen(p);
9000ac5e:	4607      	mov	r7, r0
  if ((ip_reass_pbufcount + clen) > IP_REASS_MAX_PBUFS) {
9000ac60:	4403      	add	r3, r0
9000ac62:	2b0a      	cmp	r3, #10
9000ac64:	dc78      	bgt.n	9000ad58 <ip4_reass+0x14c>
  for (ipr = reassdatagrams; ipr != NULL; ipr = ipr->next) {
9000ac66:	f8df a2a8 	ldr.w	sl, [pc, #680]	@ 9000af10 <ip4_reass+0x304>
9000ac6a:	f8da 4000 	ldr.w	r4, [sl]
9000ac6e:	2c00      	cmp	r4, #0
9000ac70:	f040 8082 	bne.w	9000ad78 <ip4_reass+0x16c>
  ipr = (struct ip_reassdata *)memp_malloc(MEMP_REASSDATA);
9000ac74:	2004      	movs	r0, #4
9000ac76:	f000 fc6f 	bl	9000b558 <memp_malloc>
  if (ipr == NULL) {
9000ac7a:	4604      	mov	r4, r0
9000ac7c:	b958      	cbnz	r0, 9000ac96 <ip4_reass+0x8a>
    if (ip_reass_remove_oldest_datagram(fraghdr, clen) >= clen) {
9000ac7e:	4639      	mov	r1, r7
9000ac80:	4648      	mov	r0, r9
9000ac82:	f7ff ff63 	bl	9000ab4c <ip_reass_remove_oldest_datagram>
9000ac86:	4287      	cmp	r7, r0
9000ac88:	dc71      	bgt.n	9000ad6e <ip4_reass+0x162>
      ipr = (struct ip_reassdata *)memp_malloc(MEMP_REASSDATA);
9000ac8a:	2004      	movs	r0, #4
9000ac8c:	f000 fc64 	bl	9000b558 <memp_malloc>
    if (ipr == NULL)
9000ac90:	4604      	mov	r4, r0
9000ac92:	2800      	cmp	r0, #0
9000ac94:	d06b      	beq.n	9000ad6e <ip4_reass+0x162>
  memset(ipr, 0, sizeof(struct ip_reassdata));
9000ac96:	221c      	movs	r2, #28
9000ac98:	2100      	movs	r1, #0
9000ac9a:	1d20      	adds	r0, r4, #4
9000ac9c:	f01d fde3 	bl	90028866 <memset>
  ipr->timer = IP_REASS_MAXAGE;
9000aca0:	230f      	movs	r3, #15
  SMEMCPY(&(ipr->iphdr), fraghdr, IP_HLEN);
9000aca2:	f104 0208 	add.w	r2, r4, #8
9000aca6:	f109 0114 	add.w	r1, r9, #20
  ipr->timer = IP_REASS_MAXAGE;
9000acaa:	77e3      	strb	r3, [r4, #31]
  ipr->next = reassdatagrams;
9000acac:	f8da 3000 	ldr.w	r3, [sl]
  reassdatagrams = ipr;
9000acb0:	f8ca 4000 	str.w	r4, [sl]
  ipr->next = reassdatagrams;
9000acb4:	6023      	str	r3, [r4, #0]
  SMEMCPY(&(ipr->iphdr), fraghdr, IP_HLEN);
9000acb6:	464b      	mov	r3, r9
9000acb8:	f853 0b04 	ldr.w	r0, [r3], #4
9000acbc:	428b      	cmp	r3, r1
9000acbe:	f842 0b04 	str.w	r0, [r2], #4
9000acc2:	d1f9      	bne.n	9000acb8 <ip4_reass+0xac>
  is_last = (IPH_OFFSET(fraghdr) & PP_NTOHS(IP_MF)) == 0;
9000acc4:	f8b9 9006 	ldrh.w	r9, [r9, #6]
  offset = IPH_OFFSET_BYTES(fraghdr);
9000acc8:	f3c5 050c 	ubfx	r5, r5, #0, #13
  if (is_last) {
9000accc:	f019 0920 	ands.w	r9, r9, #32
  offset = IPH_OFFSET_BYTES(fraghdr);
9000acd0:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  if (is_last) {
9000acd4:	d10a      	bne.n	9000acec <ip4_reass+0xe0>
    u16_t datagram_len = (u16_t)(offset + len);
9000acd6:	9b01      	ldr	r3, [sp, #4]
9000acd8:	18eb      	adds	r3, r5, r3
9000acda:	b29b      	uxth	r3, r3
    if ((datagram_len < offset) || (datagram_len > (0xFFFF - IP_HLEN))) {
9000acdc:	429d      	cmp	r5, r3
9000acde:	f200 810f 	bhi.w	9000af00 <ip4_reass+0x2f4>
9000ace2:	f64f 72eb 	movw	r2, #65515	@ 0xffeb
9000ace6:	4293      	cmp	r3, r2
9000ace8:	f200 810a 	bhi.w	9000af00 <ip4_reass+0x2f4>
  fraghdr = (struct ip_hdr *)new_p->payload;
9000acec:	f8d6 b004 	ldr.w	fp, [r6, #4]
  len = lwip_ntohs(IPH_LEN(fraghdr));
9000acf0:	f8bb 0002 	ldrh.w	r0, [fp, #2]
9000acf4:	f000 f9de 	bl	9000b0b4 <lwip_htons>
  hlen = IPH_HL_BYTES(fraghdr);
9000acf8:	f89b 3000 	ldrb.w	r3, [fp]
9000acfc:	f003 030f 	and.w	r3, r3, #15
  if (hlen > len) {
9000ad00:	ebb0 0f83 	cmp.w	r0, r3, lsl #2
9000ad04:	ea4f 0283 	mov.w	r2, r3, lsl #2
9000ad08:	f0c0 80fa 	bcc.w	9000af00 <ip4_reass+0x2f4>
  len = (u16_t)(len - hlen);
9000ad0c:	1a80      	subs	r0, r0, r2
9000ad0e:	fa1f fa80 	uxth.w	sl, r0
  offset = IPH_OFFSET_BYTES(fraghdr);
9000ad12:	f8bb 0006 	ldrh.w	r0, [fp, #6]
9000ad16:	f000 f9cd 	bl	9000b0b4 <lwip_htons>
9000ad1a:	f3c0 020c 	ubfx	r2, r0, #0, #13
  iprh = (struct ip_reass_helper *)new_p->payload;
9000ad1e:	6871      	ldr	r1, [r6, #4]
  iprh->next_pbuf = NULL;
9000ad20:	2300      	movs	r3, #0
  offset = IPH_OFFSET_BYTES(fraghdr);
9000ad22:	00d2      	lsls	r2, r2, #3
  iprh->next_pbuf = NULL;
9000ad24:	700b      	strb	r3, [r1, #0]
  iprh->end = (u16_t)(offset + len);
9000ad26:	4492      	add	sl, r2
  iprh->next_pbuf = NULL;
9000ad28:	704b      	strb	r3, [r1, #1]
9000ad2a:	708b      	strb	r3, [r1, #2]
  iprh->end = (u16_t)(offset + len);
9000ad2c:	fa1f fb8a 	uxth.w	fp, sl
  iprh->next_pbuf = NULL;
9000ad30:	70cb      	strb	r3, [r1, #3]
  iprh->start = offset;
9000ad32:	808a      	strh	r2, [r1, #4]
  if (iprh->end < offset) {
9000ad34:	455a      	cmp	r2, fp
  iprh->end = (u16_t)(offset + len);
9000ad36:	f8a1 a006 	strh.w	sl, [r1, #6]
  if (iprh->end < offset) {
9000ad3a:	f200 80e1 	bhi.w	9000af00 <ip4_reass+0x2f4>
  for (q = ipr->p; q != NULL;) {
9000ad3e:	f8d4 c004 	ldr.w	ip, [r4, #4]
  int valid = 1;
9000ad42:	2001      	movs	r0, #1
  for (q = ipr->p; q != NULL;) {
9000ad44:	f1bc 0f00 	cmp.w	ip, #0
9000ad48:	d142      	bne.n	9000add0 <ip4_reass+0x1c4>
    if (iprh_prev != NULL) {
9000ad4a:	2b00      	cmp	r3, #0
9000ad4c:	f000 80b1 	beq.w	9000aeb2 <ip4_reass+0x2a6>
      iprh_prev->next_pbuf = new_p;
9000ad50:	601e      	str	r6, [r3, #0]
      if (iprh_prev->end != iprh->start) {
9000ad52:	88db      	ldrh	r3, [r3, #6]
9000ad54:	4293      	cmp	r3, r2
9000ad56:	e04f      	b.n	9000adf8 <ip4_reass+0x1ec>
    if (!ip_reass_remove_oldest_datagram(fraghdr, clen) ||
9000ad58:	4601      	mov	r1, r0
9000ad5a:	4648      	mov	r0, r9
9000ad5c:	f7ff fef6 	bl	9000ab4c <ip_reass_remove_oldest_datagram>
9000ad60:	b128      	cbz	r0, 9000ad6e <ip4_reass+0x162>
        ((ip_reass_pbufcount + clen) > IP_REASS_MAX_PBUFS))
9000ad62:	f8b8 3000 	ldrh.w	r3, [r8]
9000ad66:	443b      	add	r3, r7
    if (!ip_reass_remove_oldest_datagram(fraghdr, clen) ||
9000ad68:	2b0a      	cmp	r3, #10
9000ad6a:	f77f af7c 	ble.w	9000ac66 <ip4_reass+0x5a>
  pbuf_free(p);
9000ad6e:	4630      	mov	r0, r6
9000ad70:	f000 fdb8 	bl	9000b8e4 <pbuf_free>
  return NULL;
9000ad74:	2600      	movs	r6, #0
9000ad76:	e096      	b.n	9000aea6 <ip4_reass+0x29a>
    if (IP_ADDRESSES_AND_ID_MATCH(&ipr->iphdr, fraghdr)) {
9000ad78:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000ad7c:	6962      	ldr	r2, [r4, #20]
9000ad7e:	429a      	cmp	r2, r3
9000ad80:	d109      	bne.n	9000ad96 <ip4_reass+0x18a>
9000ad82:	f8d9 3010 	ldr.w	r3, [r9, #16]
9000ad86:	69a2      	ldr	r2, [r4, #24]
9000ad88:	429a      	cmp	r2, r3
9000ad8a:	d104      	bne.n	9000ad96 <ip4_reass+0x18a>
9000ad8c:	89a2      	ldrh	r2, [r4, #12]
9000ad8e:	f8b9 3004 	ldrh.w	r3, [r9, #4]
9000ad92:	429a      	cmp	r2, r3
9000ad94:	d001      	beq.n	9000ad9a <ip4_reass+0x18e>
  for (ipr = reassdatagrams; ipr != NULL; ipr = ipr->next) {
9000ad96:	6824      	ldr	r4, [r4, #0]
9000ad98:	e769      	b.n	9000ac6e <ip4_reass+0x62>
    if (((lwip_ntohs(IPH_OFFSET(fraghdr)) & IP_OFFMASK) == 0) &&
9000ad9a:	f8b9 0006 	ldrh.w	r0, [r9, #6]
9000ad9e:	f000 f989 	bl	9000b0b4 <lwip_htons>
9000ada2:	f3c0 000c 	ubfx	r0, r0, #0, #13
9000ada6:	2800      	cmp	r0, #0
9000ada8:	d18c      	bne.n	9000acc4 <ip4_reass+0xb8>
        ((lwip_ntohs(IPH_OFFSET(&ipr->iphdr)) & IP_OFFMASK) != 0)) {
9000adaa:	89e0      	ldrh	r0, [r4, #14]
9000adac:	f000 f982 	bl	9000b0b4 <lwip_htons>
    if (((lwip_ntohs(IPH_OFFSET(fraghdr)) & IP_OFFMASK) == 0) &&
9000adb0:	f3c0 000c 	ubfx	r0, r0, #0, #13
9000adb4:	2800      	cmp	r0, #0
9000adb6:	d085      	beq.n	9000acc4 <ip4_reass+0xb8>
      SMEMCPY(&ipr->iphdr, fraghdr, IP_HLEN);
9000adb8:	464b      	mov	r3, r9
9000adba:	f104 0208 	add.w	r2, r4, #8
9000adbe:	f109 0114 	add.w	r1, r9, #20
9000adc2:	f853 0b04 	ldr.w	r0, [r3], #4
9000adc6:	428b      	cmp	r3, r1
9000adc8:	f842 0b04 	str.w	r0, [r2], #4
9000adcc:	d1f9      	bne.n	9000adc2 <ip4_reass+0x1b6>
9000adce:	e779      	b.n	9000acc4 <ip4_reass+0xb8>
    iprh_tmp = (struct ip_reass_helper *)q->payload;
9000add0:	f8dc e004 	ldr.w	lr, [ip, #4]
    if (iprh->start < iprh_tmp->start) {
9000add4:	f8be a004 	ldrh.w	sl, [lr, #4]
9000add8:	4552      	cmp	r2, sl
9000adda:	d26c      	bcs.n	9000aeb6 <ip4_reass+0x2aa>
      iprh->next_pbuf = q;
9000addc:	f8c1 c000 	str.w	ip, [r1]
      if (iprh_prev != NULL) {
9000ade0:	2b00      	cmp	r3, #0
9000ade2:	d064      	beq.n	9000aeae <ip4_reass+0x2a2>
        if ((iprh->start < iprh_prev->end) || (iprh->end > iprh_tmp->start)) {
9000ade4:	f8b3 c006 	ldrh.w	ip, [r3, #6]
9000ade8:	4562      	cmp	r2, ip
9000adea:	f0c0 8089 	bcc.w	9000af00 <ip4_reass+0x2f4>
9000adee:	45d3      	cmp	fp, sl
9000adf0:	f200 8086 	bhi.w	9000af00 <ip4_reass+0x2f4>
        if (iprh_prev->end != iprh->start) {
9000adf4:	4562      	cmp	r2, ip
        iprh_prev->next_pbuf = new_p;
9000adf6:	601e      	str	r6, [r3, #0]
        if (iprh_prev->end != iprh->start) {
9000adf8:	d000      	beq.n	9000adfc <ip4_reass+0x1f0>
          valid = 0;
9000adfa:	2000      	movs	r0, #0
  if (is_last || ((ipr->flags & IP_REASS_FLAG_LASTFRAG) != 0)) {
9000adfc:	f1b9 0f00 	cmp.w	r9, #0
9000ae00:	d003      	beq.n	9000ae0a <ip4_reass+0x1fe>
9000ae02:	7fa3      	ldrb	r3, [r4, #30]
9000ae04:	f013 0301 	ands.w	r3, r3, #1
9000ae08:	d06b      	beq.n	9000aee2 <ip4_reass+0x2d6>
    if (valid) {
9000ae0a:	b148      	cbz	r0, 9000ae20 <ip4_reass+0x214>
      if ((ipr->p == NULL) || (((struct ip_reass_helper *)ipr->p->payload)->start != 0)) {
9000ae0c:	6863      	ldr	r3, [r4, #4]
9000ae0e:	2b00      	cmp	r3, #0
9000ae10:	d067      	beq.n	9000aee2 <ip4_reass+0x2d6>
9000ae12:	685b      	ldr	r3, [r3, #4]
9000ae14:	889b      	ldrh	r3, [r3, #4]
9000ae16:	2b00      	cmp	r3, #0
9000ae18:	d163      	bne.n	9000aee2 <ip4_reass+0x2d6>
        q = iprh->next_pbuf;
9000ae1a:	680b      	ldr	r3, [r1, #0]
        while (q != NULL) {
9000ae1c:	2b00      	cmp	r3, #0
9000ae1e:	d158      	bne.n	9000aed2 <ip4_reass+0x2c6>
  ip_reass_pbufcount = (u16_t)(ip_reass_pbufcount + clen);
9000ae20:	f8b8 3000 	ldrh.w	r3, [r8]
9000ae24:	443b      	add	r3, r7
9000ae26:	f8a8 3000 	strh.w	r3, [r8]
  if (is_last) {
9000ae2a:	f1b9 0f00 	cmp.w	r9, #0
9000ae2e:	d106      	bne.n	9000ae3e <ip4_reass+0x232>
    u16_t datagram_len = (u16_t)(offset + len);
9000ae30:	9b01      	ldr	r3, [sp, #4]
9000ae32:	441d      	add	r5, r3
    ipr->flags |= IP_REASS_FLAG_LASTFRAG;
9000ae34:	7fa3      	ldrb	r3, [r4, #30]
9000ae36:	f043 0301 	orr.w	r3, r3, #1
    ipr->datagram_len = datagram_len;
9000ae3a:	83a5      	strh	r5, [r4, #28]
    ipr->flags |= IP_REASS_FLAG_LASTFRAG;
9000ae3c:	77a3      	strb	r3, [r4, #30]
  if (valid == IP_REASS_VALIDATE_TELEGRAM_FINISHED) {
9000ae3e:	2801      	cmp	r0, #1
9000ae40:	d198      	bne.n	9000ad74 <ip4_reass+0x168>
    r = ((struct ip_reass_helper *)ipr->p->payload)->next_pbuf;
9000ae42:	6863      	ldr	r3, [r4, #4]
    SMEMCPY(fraghdr, &ipr->iphdr, IP_HLEN);
9000ae44:	f104 011c 	add.w	r1, r4, #28
    u16_t datagram_len = (u16_t)(ipr->datagram_len + IP_HLEN);
9000ae48:	8ba0      	ldrh	r0, [r4, #28]
    r = ((struct ip_reass_helper *)ipr->p->payload)->next_pbuf;
9000ae4a:	685e      	ldr	r6, [r3, #4]
    SMEMCPY(fraghdr, &ipr->iphdr, IP_HLEN);
9000ae4c:	f104 0308 	add.w	r3, r4, #8
    u16_t datagram_len = (u16_t)(ipr->datagram_len + IP_HLEN);
9000ae50:	3014      	adds	r0, #20
    r = ((struct ip_reass_helper *)ipr->p->payload)->next_pbuf;
9000ae52:	6835      	ldr	r5, [r6, #0]
    SMEMCPY(fraghdr, &ipr->iphdr, IP_HLEN);
9000ae54:	4632      	mov	r2, r6
    u16_t datagram_len = (u16_t)(ipr->datagram_len + IP_HLEN);
9000ae56:	b280      	uxth	r0, r0
    SMEMCPY(fraghdr, &ipr->iphdr, IP_HLEN);
9000ae58:	f853 7b04 	ldr.w	r7, [r3], #4
9000ae5c:	428b      	cmp	r3, r1
9000ae5e:	f842 7b04 	str.w	r7, [r2], #4
9000ae62:	d1f9      	bne.n	9000ae58 <ip4_reass+0x24c>
    IPH_LEN_SET(fraghdr, lwip_htons(datagram_len));
9000ae64:	f000 f926 	bl	9000b0b4 <lwip_htons>
    IPH_OFFSET_SET(fraghdr, 0);
9000ae68:	2300      	movs	r3, #0
    IPH_LEN_SET(fraghdr, lwip_htons(datagram_len));
9000ae6a:	8070      	strh	r0, [r6, #2]
      IPH_CHKSUM_SET(fraghdr, inet_chksum(fraghdr, IP_HLEN));
9000ae6c:	2114      	movs	r1, #20
9000ae6e:	4630      	mov	r0, r6
    IPH_OFFSET_SET(fraghdr, 0);
9000ae70:	71b3      	strb	r3, [r6, #6]
9000ae72:	71f3      	strb	r3, [r6, #7]
    IPH_CHKSUM_SET(fraghdr, 0);
9000ae74:	72b3      	strb	r3, [r6, #10]
9000ae76:	72f3      	strb	r3, [r6, #11]
      IPH_CHKSUM_SET(fraghdr, inet_chksum(fraghdr, IP_HLEN));
9000ae78:	f000 f9ce 	bl	9000b218 <inet_chksum>
9000ae7c:	8170      	strh	r0, [r6, #10]
    p = ipr->p;
9000ae7e:	6866      	ldr	r6, [r4, #4]
    while (r != NULL) {
9000ae80:	bb8d      	cbnz	r5, 9000aee6 <ip4_reass+0x2da>
    if (ipr == reassdatagrams) {
9000ae82:	4b23      	ldr	r3, [pc, #140]	@ (9000af10 <ip4_reass+0x304>)
9000ae84:	681b      	ldr	r3, [r3, #0]
        if (ipr_prev->next == ipr) {
9000ae86:	429c      	cmp	r4, r3
9000ae88:	d001      	beq.n	9000ae8e <ip4_reass+0x282>
      for (ipr_prev = reassdatagrams; ipr_prev != NULL; ipr_prev = ipr_prev->next) {
9000ae8a:	461d      	mov	r5, r3
9000ae8c:	bbb3      	cbnz	r3, 9000aefc <ip4_reass+0x2f0>
    ip_reass_dequeue_datagram(ipr, ipr_prev);
9000ae8e:	4629      	mov	r1, r5
9000ae90:	4620      	mov	r0, r4
9000ae92:	f7ff fe0b 	bl	9000aaac <ip_reass_dequeue_datagram>
    clen = pbuf_clen(p);
9000ae96:	4630      	mov	r0, r6
9000ae98:	f000 fde6 	bl	9000ba68 <pbuf_clen>
    ip_reass_pbufcount = (u16_t)(ip_reass_pbufcount - clen);
9000ae9c:	f8b8 3000 	ldrh.w	r3, [r8]
9000aea0:	1a1b      	subs	r3, r3, r0
9000aea2:	f8a8 3000 	strh.w	r3, [r8]
}
9000aea6:	4630      	mov	r0, r6
9000aea8:	b003      	add	sp, #12
9000aeaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        if (iprh->end > iprh_tmp->start) {
9000aeae:	45d3      	cmp	fp, sl
9000aeb0:	d826      	bhi.n	9000af00 <ip4_reass+0x2f4>
      ipr->p = new_p;
9000aeb2:	6066      	str	r6, [r4, #4]
9000aeb4:	e7a2      	b.n	9000adfc <ip4_reass+0x1f0>
    } else if (iprh->start == iprh_tmp->start) {
9000aeb6:	d023      	beq.n	9000af00 <ip4_reass+0x2f4>
    } else if (iprh->start < iprh_tmp->end) {
9000aeb8:	f8be c006 	ldrh.w	ip, [lr, #6]
9000aebc:	4594      	cmp	ip, r2
9000aebe:	d81f      	bhi.n	9000af00 <ip4_reass+0x2f4>
      if (iprh_prev != NULL) {
9000aec0:	b11b      	cbz	r3, 9000aeca <ip4_reass+0x2be>
        if (iprh_prev->end != iprh_tmp->start) {
9000aec2:	88db      	ldrh	r3, [r3, #6]
          valid = 0;
9000aec4:	4553      	cmp	r3, sl
9000aec6:	bf18      	it	ne
9000aec8:	2000      	movne	r0, #0
    q = iprh_tmp->next_pbuf;
9000aeca:	f8de c000 	ldr.w	ip, [lr]
    iprh_prev = iprh_tmp;
9000aece:	4673      	mov	r3, lr
9000aed0:	e738      	b.n	9000ad44 <ip4_reass+0x138>
          iprh = (struct ip_reass_helper *)q->payload;
9000aed2:	685a      	ldr	r2, [r3, #4]
          if (iprh_prev->end != iprh->start) {
9000aed4:	88c9      	ldrh	r1, [r1, #6]
9000aed6:	8893      	ldrh	r3, [r2, #4]
9000aed8:	4299      	cmp	r1, r3
9000aeda:	d102      	bne.n	9000aee2 <ip4_reass+0x2d6>
          q = iprh->next_pbuf;
9000aedc:	6813      	ldr	r3, [r2, #0]
          iprh_prev = iprh;
9000aede:	4611      	mov	r1, r2
9000aee0:	e79c      	b.n	9000ae1c <ip4_reass+0x210>
  return IP_REASS_VALIDATE_PBUF_QUEUED; /* not yet valid! */
9000aee2:	2000      	movs	r0, #0
9000aee4:	e79c      	b.n	9000ae20 <ip4_reass+0x214>
      iprh = (struct ip_reass_helper *)r->payload;
9000aee6:	686f      	ldr	r7, [r5, #4]
      pbuf_remove_header(r, IP_HLEN);
9000aee8:	2114      	movs	r1, #20
9000aeea:	4628      	mov	r0, r5
9000aeec:	f000 fcd6 	bl	9000b89c <pbuf_remove_header>
      pbuf_cat(p, r);
9000aef0:	4629      	mov	r1, r5
9000aef2:	4630      	mov	r0, r6
9000aef4:	f000 fdc6 	bl	9000ba84 <pbuf_cat>
      r = iprh->next_pbuf;
9000aef8:	683d      	ldr	r5, [r7, #0]
9000aefa:	e7c1      	b.n	9000ae80 <ip4_reass+0x274>
        if (ipr_prev->next == ipr) {
9000aefc:	682b      	ldr	r3, [r5, #0]
9000aefe:	e7c2      	b.n	9000ae86 <ip4_reass+0x27a>
  if (ipr->p == NULL) {
9000af00:	6861      	ldr	r1, [r4, #4]
9000af02:	2900      	cmp	r1, #0
9000af04:	f47f af33 	bne.w	9000ad6e <ip4_reass+0x162>
    ip_reass_dequeue_datagram(ipr, NULL);
9000af08:	4620      	mov	r0, r4
9000af0a:	f7ff fdcf 	bl	9000aaac <ip_reass_dequeue_datagram>
9000af0e:	e72e      	b.n	9000ad6e <ip4_reass+0x162>
9000af10:	20013ff0 	.word	0x20013ff0
9000af14:	20013fee 	.word	0x20013fee

9000af18 <ip4_frag>:
 *
 * @return ERR_OK if sent successfully, err_t otherwise
 */
err_t
ip4_frag(struct pbuf *p, struct netif *netif, const ip4_addr_t *dest)
{
9000af18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  u16_t newpbuflen = 0;
  u16_t left_to_copy;
#endif
  struct ip_hdr *original_iphdr;
  struct ip_hdr *iphdr;
  const u16_t nfb = (u16_t)((netif->mtu - IP_HLEN) / 8);
9000af1c:	8d0b      	ldrh	r3, [r1, #40]	@ 0x28
{
9000af1e:	b08d      	sub	sp, #52	@ 0x34
9000af20:	4606      	mov	r6, r0
9000af22:	4689      	mov	r9, r1
9000af24:	9209      	str	r2, [sp, #36]	@ 0x24
  const u16_t nfb = (u16_t)((netif->mtu - IP_HLEN) / 8);
9000af26:	f1b3 0214 	subs.w	r2, r3, #20
9000af2a:	bf48      	it	mi
9000af2c:	f1a3 020d 	submi.w	r2, r3, #13
9000af30:	f3c2 03cf 	ubfx	r3, r2, #3, #16
9000af34:	9306      	str	r3, [sp, #24]
  int last;
  u16_t poff = IP_HLEN;
  u16_t tmp;
  int mf_set;

  original_iphdr = (struct ip_hdr *)p->payload;
9000af36:	6843      	ldr	r3, [r0, #4]
9000af38:	9303      	str	r3, [sp, #12]
  iphdr = original_iphdr;
  if (IPH_HL_BYTES(iphdr) != IP_HLEN) {
9000af3a:	781b      	ldrb	r3, [r3, #0]
9000af3c:	f003 030f 	and.w	r3, r3, #15
9000af40:	2b05      	cmp	r3, #5
9000af42:	ea4f 0783 	mov.w	r7, r3, lsl #2
9000af46:	d105      	bne.n	9000af54 <ip4_frag+0x3c>
    /* ip4_frag() does not support IP options */
    return ERR_VAL;
  }
  LWIP_ERROR("ip4_frag(): pbuf too short", p->len >= IP_HLEN, return ERR_VAL);
9000af48:	8943      	ldrh	r3, [r0, #10]
9000af4a:	2b13      	cmp	r3, #19
9000af4c:	d807      	bhi.n	9000af5e <ip4_frag+0x46>
9000af4e:	4857      	ldr	r0, [pc, #348]	@ (9000b0ac <ip4_frag+0x194>)
9000af50:	f01d fc24 	bl	9002879c <iprintf>
    return ERR_VAL;
9000af54:	f06f 0005 	mvn.w	r0, #5
  MIB2_STATS_INC(mib2.ipfragoks);
  return ERR_OK;
memerr:
  MIB2_STATS_INC(mib2.ipfragfails);
  return ERR_MEM;
}
9000af58:	b00d      	add	sp, #52	@ 0x34
9000af5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  tmp = lwip_ntohs(IPH_OFFSET(iphdr));
9000af5e:	9b03      	ldr	r3, [sp, #12]
  u16_t newpbuflen = 0;
9000af60:	2500      	movs	r5, #0
  tmp = lwip_ntohs(IPH_OFFSET(iphdr));
9000af62:	88d8      	ldrh	r0, [r3, #6]
9000af64:	f000 f8a6 	bl	9000b0b4 <lwip_htons>
  ofo = tmp & IP_OFFMASK;
9000af68:	f3c0 030c 	ubfx	r3, r0, #0, #13
  left = (u16_t)(p->tot_len - IP_HLEN);
9000af6c:	8934      	ldrh	r4, [r6, #8]
  ofo = tmp & IP_OFFMASK;
9000af6e:	9305      	str	r3, [sp, #20]
  mf_set = tmp & IP_MF;
9000af70:	f400 5300 	and.w	r3, r0, #8192	@ 0x2000
  left = (u16_t)(p->tot_len - IP_HLEN);
9000af74:	3c14      	subs	r4, #20
9000af76:	9308      	str	r3, [sp, #32]
    fragsize = LWIP_MIN(left, (u16_t)(nfb * 8));
9000af78:	9b06      	ldr	r3, [sp, #24]
  left = (u16_t)(p->tot_len - IP_HLEN);
9000af7a:	b2a4      	uxth	r4, r4
    fragsize = LWIP_MIN(left, (u16_t)(nfb * 8));
9000af7c:	00db      	lsls	r3, r3, #3
9000af7e:	b29b      	uxth	r3, r3
9000af80:	9307      	str	r3, [sp, #28]
  while (left) {
9000af82:	b90c      	cbnz	r4, 9000af88 <ip4_frag+0x70>
  return ERR_OK;
9000af84:	4620      	mov	r0, r4
9000af86:	e7e7      	b.n	9000af58 <ip4_frag+0x40>
    fragsize = LWIP_MIN(left, (u16_t)(nfb * 8));
9000af88:	9b07      	ldr	r3, [sp, #28]
    rambuf = pbuf_alloc(PBUF_LINK, IP_HLEN, PBUF_RAM);
9000af8a:	f44f 7220 	mov.w	r2, #640	@ 0x280
9000af8e:	2114      	movs	r1, #20
9000af90:	200e      	movs	r0, #14
    fragsize = LWIP_MIN(left, (u16_t)(nfb * 8));
9000af92:	42a3      	cmp	r3, r4
9000af94:	bf28      	it	cs
9000af96:	4623      	movcs	r3, r4
9000af98:	9304      	str	r3, [sp, #16]
    rambuf = pbuf_alloc(PBUF_LINK, IP_HLEN, PBUF_RAM);
9000af9a:	f000 fccf 	bl	9000b93c <pbuf_alloc>
    if (rambuf == NULL) {
9000af9e:	4680      	mov	r8, r0
9000afa0:	b910      	cbnz	r0, 9000afa8 <ip4_frag+0x90>
  return ERR_MEM;
9000afa2:	f04f 30ff 	mov.w	r0, #4294967295
9000afa6:	e7d7      	b.n	9000af58 <ip4_frag+0x40>
    SMEMCPY(rambuf->payload, original_iphdr, IP_HLEN);
9000afa8:	9b03      	ldr	r3, [sp, #12]
9000afaa:	6842      	ldr	r2, [r0, #4]
9000afac:	4619      	mov	r1, r3
9000afae:	3114      	adds	r1, #20
9000afb0:	f853 0b04 	ldr.w	r0, [r3], #4
9000afb4:	428b      	cmp	r3, r1
9000afb6:	f842 0b04 	str.w	r0, [r2], #4
9000afba:	d1f9      	bne.n	9000afb0 <ip4_frag+0x98>
    while (left_to_copy) {
9000afbc:	9b04      	ldr	r3, [sp, #16]
    iphdr = (struct ip_hdr *)rambuf->payload;
9000afbe:	f8d8 a004 	ldr.w	sl, [r8, #4]
    while (left_to_copy) {
9000afc2:	2b00      	cmp	r3, #0
9000afc4:	d165      	bne.n	9000b092 <ip4_frag+0x17a>
    tmp = (IP_OFFMASK & (ofo));
9000afc6:	9b05      	ldr	r3, [sp, #20]
    poff = (u16_t)(poff + newpbuflen);
9000afc8:	442f      	add	r7, r5
    tmp = (IP_OFFMASK & (ofo));
9000afca:	f3c3 000c 	ubfx	r0, r3, #0, #13
    last = (left <= netif->mtu - IP_HLEN);
9000afce:	f8b9 3028 	ldrh.w	r3, [r9, #40]	@ 0x28
    poff = (u16_t)(poff + newpbuflen);
9000afd2:	b2bf      	uxth	r7, r7
    last = (left <= netif->mtu - IP_HLEN);
9000afd4:	3b13      	subs	r3, #19
    if (!last || mf_set) {
9000afd6:	42a3      	cmp	r3, r4
9000afd8:	dd01      	ble.n	9000afde <ip4_frag+0xc6>
9000afda:	9b08      	ldr	r3, [sp, #32]
9000afdc:	b10b      	cbz	r3, 9000afe2 <ip4_frag+0xca>
      tmp = tmp | IP_MF;
9000afde:	f440 5000 	orr.w	r0, r0, #8192	@ 0x2000
    IPH_OFFSET_SET(iphdr, lwip_htons(tmp));
9000afe2:	f000 f867 	bl	9000b0b4 <lwip_htons>
    IPH_LEN_SET(iphdr, lwip_htons((u16_t)(fragsize + IP_HLEN)));
9000afe6:	9b04      	ldr	r3, [sp, #16]
    IPH_OFFSET_SET(iphdr, lwip_htons(tmp));
9000afe8:	f8aa 0006 	strh.w	r0, [sl, #6]
    IPH_LEN_SET(iphdr, lwip_htons((u16_t)(fragsize + IP_HLEN)));
9000afec:	f103 0014 	add.w	r0, r3, #20
9000aff0:	b280      	uxth	r0, r0
9000aff2:	f000 f85f 	bl	9000b0b4 <lwip_htons>
    IPH_CHKSUM_SET(iphdr, 0);
9000aff6:	2300      	movs	r3, #0
      IPH_CHKSUM_SET(iphdr, inet_chksum(iphdr, IP_HLEN));
9000aff8:	2114      	movs	r1, #20
    IPH_LEN_SET(iphdr, lwip_htons((u16_t)(fragsize + IP_HLEN)));
9000affa:	f8aa 0002 	strh.w	r0, [sl, #2]
    IPH_CHKSUM_SET(iphdr, 0);
9000affe:	f88a 300a 	strb.w	r3, [sl, #10]
      IPH_CHKSUM_SET(iphdr, inet_chksum(iphdr, IP_HLEN));
9000b002:	4650      	mov	r0, sl
    IPH_CHKSUM_SET(iphdr, 0);
9000b004:	f88a 300b 	strb.w	r3, [sl, #11]
      IPH_CHKSUM_SET(iphdr, inet_chksum(iphdr, IP_HLEN));
9000b008:	f000 f906 	bl	9000b218 <inet_chksum>
    netif->output(netif, rambuf, dest);
9000b00c:	f8d9 3014 	ldr.w	r3, [r9, #20]
9000b010:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9000b012:	4641      	mov	r1, r8
      IPH_CHKSUM_SET(iphdr, inet_chksum(iphdr, IP_HLEN));
9000b014:	f8aa 000a 	strh.w	r0, [sl, #10]
    netif->output(netif, rambuf, dest);
9000b018:	4648      	mov	r0, r9
9000b01a:	4798      	blx	r3
    pbuf_free(rambuf);
9000b01c:	4640      	mov	r0, r8
9000b01e:	f000 fc61 	bl	9000b8e4 <pbuf_free>
    left = (u16_t)(left - fragsize);
9000b022:	9b04      	ldr	r3, [sp, #16]
9000b024:	1ae3      	subs	r3, r4, r3
9000b026:	b29c      	uxth	r4, r3
    ofo = (u16_t)(ofo + nfb);
9000b028:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
9000b02c:	4413      	add	r3, r2
9000b02e:	b29b      	uxth	r3, r3
9000b030:	9305      	str	r3, [sp, #20]
9000b032:	e7a6      	b.n	9000af82 <ip4_frag+0x6a>
  return (struct pbuf_custom_ref *)memp_malloc(MEMP_FRAG_PBUF);
9000b034:	2005      	movs	r0, #5
9000b036:	f000 fa8f 	bl	9000b558 <memp_malloc>
      if (pcr == NULL) {
9000b03a:	4603      	mov	r3, r0
9000b03c:	b918      	cbnz	r0, 9000b046 <ip4_frag+0x12e>
        pbuf_free(rambuf);
9000b03e:	4640      	mov	r0, r8
9000b040:	f000 fc50 	bl	9000b8e4 <pbuf_free>
        goto memerr;
9000b044:	e7ad      	b.n	9000afa2 <ip4_frag+0x8a>
      newpbuf = pbuf_alloced_custom(PBUF_RAW, newpbuflen, PBUF_REF, &pcr->pc,
9000b046:	9501      	str	r5, [sp, #4]
9000b048:	4629      	mov	r1, r5
9000b04a:	6872      	ldr	r2, [r6, #4]
9000b04c:	900a      	str	r0, [sp, #40]	@ 0x28
9000b04e:	2000      	movs	r0, #0
9000b050:	443a      	add	r2, r7
9000b052:	9200      	str	r2, [sp, #0]
9000b054:	2241      	movs	r2, #65	@ 0x41
9000b056:	f000 fc04 	bl	9000b862 <pbuf_alloced_custom>
      if (newpbuf == NULL) {
9000b05a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9000b05c:	b920      	cbnz	r0, 9000b068 <ip4_frag+0x150>
  memp_free(MEMP_FRAG_PBUF, p);
9000b05e:	4619      	mov	r1, r3
9000b060:	2005      	movs	r0, #5
9000b062:	f000 fa8f 	bl	9000b584 <memp_free>
9000b066:	e7ea      	b.n	9000b03e <ip4_frag+0x126>
9000b068:	e9cd 030a 	strd	r0, r3, [sp, #40]	@ 0x28
      left_to_copy = (u16_t)(left_to_copy - newpbuflen);
9000b06c:	ebab 0b05 	sub.w	fp, fp, r5
      pbuf_ref(p);
9000b070:	4630      	mov	r0, r6
9000b072:	f000 fd01 	bl	9000ba78 <pbuf_ref>
      pcr->original = p;
9000b076:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
      pcr->pc.custom_free_function = ipfrag_free_pbuf_custom;
9000b078:	4a0d      	ldr	r2, [pc, #52]	@ (9000b0b0 <ip4_frag+0x198>)
      left_to_copy = (u16_t)(left_to_copy - newpbuflen);
9000b07a:	fa1f fb8b 	uxth.w	fp, fp
      pbuf_cat(rambuf, newpbuf);
9000b07e:	990a      	ldr	r1, [sp, #40]	@ 0x28
9000b080:	4640      	mov	r0, r8
      pcr->original = p;
9000b082:	615e      	str	r6, [r3, #20]
      pcr->pc.custom_free_function = ipfrag_free_pbuf_custom;
9000b084:	611a      	str	r2, [r3, #16]
      pbuf_cat(rambuf, newpbuf);
9000b086:	f000 fcfd 	bl	9000ba84 <pbuf_cat>
      if (left_to_copy) {
9000b08a:	f1bb 0f00 	cmp.w	fp, #0
9000b08e:	d10a      	bne.n	9000b0a6 <ip4_frag+0x18e>
9000b090:	e799      	b.n	9000afc6 <ip4_frag+0xae>
9000b092:	f8dd b010 	ldr.w	fp, [sp, #16]
      u16_t plen = (u16_t)(p->len - poff);
9000b096:	8975      	ldrh	r5, [r6, #10]
9000b098:	1bed      	subs	r5, r5, r7
      newpbuflen = LWIP_MIN(left_to_copy, plen);
9000b09a:	b2ad      	uxth	r5, r5
9000b09c:	455d      	cmp	r5, fp
9000b09e:	bf28      	it	cs
9000b0a0:	465d      	movcs	r5, fp
      if (!newpbuflen) {
9000b0a2:	2d00      	cmp	r5, #0
9000b0a4:	d1c6      	bne.n	9000b034 <ip4_frag+0x11c>
        p = p->next;
9000b0a6:	6836      	ldr	r6, [r6, #0]
9000b0a8:	2700      	movs	r7, #0
9000b0aa:	e7f4      	b.n	9000b096 <ip4_frag+0x17e>
9000b0ac:	9002a0a5 	.word	0x9002a0a5
9000b0b0:	9000abc9 	.word	0x9000abc9

9000b0b4 <lwip_htons>:
 * @return n in network byte order
 */
u16_t
lwip_htons(u16_t n)
{
  return PP_HTONS(n);
9000b0b4:	ba40      	rev16	r0, r0
}
9000b0b6:	b280      	uxth	r0, r0
9000b0b8:	4770      	bx	lr

9000b0ba <lwip_htonl>:
 */
u32_t
lwip_htonl(u32_t n)
{
  return PP_HTONL(n);
}
9000b0ba:	ba00      	rev	r0, r0
9000b0bc:	4770      	bx	lr

9000b0be <lwip_strnstr>:
 * lwIP default implementation for strnstr() non-standard function.
 * This can be \#defined to strnstr() depending on your platform port.
 */
char *
lwip_strnstr(const char *buffer, const char *token, size_t n)
{
9000b0be:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000b0c0:	4604      	mov	r4, r0
  const char *p;
  size_t tokenlen = strlen(token);
9000b0c2:	4608      	mov	r0, r1
{
9000b0c4:	460f      	mov	r7, r1
9000b0c6:	4615      	mov	r5, r2
  size_t tokenlen = strlen(token);
9000b0c8:	f7f5 f8ac 	bl	90000224 <strlen>
  if (tokenlen == 0) {
9000b0cc:	4606      	mov	r6, r0
9000b0ce:	b130      	cbz	r0, 9000b0de <lwip_strnstr+0x20>
    return LWIP_CONST_CAST(char *, buffer);
  }
  for (p = buffer; *p && (p + tokenlen <= buffer + n); p++) {
9000b0d0:	4425      	add	r5, r4
9000b0d2:	7823      	ldrb	r3, [r4, #0]
9000b0d4:	b18b      	cbz	r3, 9000b0fa <lwip_strnstr+0x3c>
9000b0d6:	19a2      	adds	r2, r4, r6
9000b0d8:	4295      	cmp	r5, r2
9000b0da:	d202      	bcs.n	9000b0e2 <lwip_strnstr+0x24>
    if ((*p == *token) && (strncmp(p, token, tokenlen) == 0)) {
      return LWIP_CONST_CAST(char *, p);
    }
  }
  return NULL;
9000b0dc:	2400      	movs	r4, #0
}
9000b0de:	4620      	mov	r0, r4
9000b0e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((*p == *token) && (strncmp(p, token, tokenlen) == 0)) {
9000b0e2:	783a      	ldrb	r2, [r7, #0]
9000b0e4:	429a      	cmp	r2, r3
9000b0e6:	d106      	bne.n	9000b0f6 <lwip_strnstr+0x38>
9000b0e8:	4632      	mov	r2, r6
9000b0ea:	4639      	mov	r1, r7
9000b0ec:	4620      	mov	r0, r4
9000b0ee:	f01d fbcf 	bl	90028890 <strncmp>
9000b0f2:	2800      	cmp	r0, #0
9000b0f4:	d0f3      	beq.n	9000b0de <lwip_strnstr+0x20>
  for (p = buffer; *p && (p + tokenlen <= buffer + n); p++) {
9000b0f6:	3401      	adds	r4, #1
9000b0f8:	e7eb      	b.n	9000b0d2 <lwip_strnstr+0x14>
  return NULL;
9000b0fa:	461c      	mov	r4, r3
9000b0fc:	e7ef      	b.n	9000b0de <lwip_strnstr+0x20>

9000b0fe <lwip_stricmp>:
 * lwIP default implementation for stricmp() non-standard function.
 * This can be \#defined to stricmp() depending on your platform port.
 */
int
lwip_stricmp(const char *str1, const char *str2)
{
9000b0fe:	b530      	push	{r4, r5, lr}
  char c1, c2;

  do {
    c1 = *str1++;
9000b100:	f810 3b01 	ldrb.w	r3, [r0], #1
    c2 = *str2++;
9000b104:	f811 2b01 	ldrb.w	r2, [r1], #1
    if (c1 != c2) {
9000b108:	4293      	cmp	r3, r2
9000b10a:	d009      	beq.n	9000b120 <lwip_stricmp+0x22>
      char c1_upc = c1 | 0x20;
9000b10c:	f043 0420 	orr.w	r4, r3, #32
      if ((c1_upc >= 'a') && (c1_upc <= 'z')) {
9000b110:	f1a4 0561 	sub.w	r5, r4, #97	@ 0x61
9000b114:	2d19      	cmp	r5, #25
9000b116:	d807      	bhi.n	9000b128 <lwip_stricmp+0x2a>
        /* characters are not equal an one is in the alphabet range:
        downcase both chars and check again */
        char c2_upc = c2 | 0x20;
        if (c1_upc != c2_upc) {
9000b118:	f042 0220 	orr.w	r2, r2, #32
9000b11c:	4294      	cmp	r4, r2
9000b11e:	d103      	bne.n	9000b128 <lwip_stricmp+0x2a>
      } else {
        /* characters are not equal but none is in the alphabet range */
        return 1;
      }
    }
  } while (c1 != 0);
9000b120:	2b00      	cmp	r3, #0
9000b122:	d1ed      	bne.n	9000b100 <lwip_stricmp+0x2>
  return 0;
9000b124:	4618      	mov	r0, r3
}
9000b126:	bd30      	pop	{r4, r5, pc}
          return 1;
9000b128:	2001      	movs	r0, #1
9000b12a:	e7fc      	b.n	9000b126 <lwip_stricmp+0x28>

9000b12c <lwip_standard_chksum>:
 * @param len length of data to be summed
 * @return host order (!) lwip checksum (non-inverted Internet sum)
 */
u16_t
lwip_standard_chksum(const void *dataptr, int len)
{
9000b12c:	b530      	push	{r4, r5, lr}
  u16_t t = 0;
  u32_t sum = 0;
  int odd = ((mem_ptr_t)pb & 1);

  /* Get aligned to u16_t */
  if (odd && len > 0) {
9000b12e:	f010 0401 	ands.w	r4, r0, #1
  u16_t t = 0;
9000b132:	f04f 0300 	mov.w	r3, #0
  if (odd && len > 0) {
9000b136:	d006      	beq.n	9000b146 <lwip_standard_chksum+0x1a>
9000b138:	4299      	cmp	r1, r3
9000b13a:	dd20      	ble.n	9000b17e <lwip_standard_chksum+0x52>
    ((u8_t *)&t)[1] = *pb++;
9000b13c:	f810 2b01 	ldrb.w	r2, [r0], #1
    len--;
9000b140:	3901      	subs	r1, #1
    ((u8_t *)&t)[1] = *pb++;
9000b142:	f362 231f 	bfi	r3, r2, #8, #24
  u32_t sum = 0;
9000b146:	2200      	movs	r2, #0
  }

  /* Add the bulk of the data */
  ps = (const u16_t *)(const void *)pb;
  while (len > 1) {
9000b148:	2901      	cmp	r1, #1
9000b14a:	dc13      	bgt.n	9000b174 <lwip_standard_chksum+0x48>
    sum += *ps++;
    len -= 2;
  }

  /* Consume left-over byte, if any */
  if (len > 0) {
9000b14c:	d103      	bne.n	9000b156 <lwip_standard_chksum+0x2a>
    ((u8_t *)&t)[0] = *(const u8_t *)ps;
9000b14e:	7801      	ldrb	r1, [r0, #0]
9000b150:	f361 0307 	bfi	r3, r1, #0, #8
9000b154:	b29b      	uxth	r3, r3
  }

  /* Add end bytes */
  sum += t;
9000b156:	4413      	add	r3, r2

  /* Fold 32-bit sum to 16 bits
     calling this twice is probably faster than if statements... */
  sum = FOLD_U32T(sum);
9000b158:	b29a      	uxth	r2, r3
9000b15a:	eb02 4313 	add.w	r3, r2, r3, lsr #16
  sum = FOLD_U32T(sum);
9000b15e:	b298      	uxth	r0, r3
9000b160:	eb00 4013 	add.w	r0, r0, r3, lsr #16

  /* Swap if alignment was odd */
  if (odd) {
9000b164:	b124      	cbz	r4, 9000b170 <lwip_standard_chksum+0x44>
    sum = SWAP_BYTES_IN_WORD(sum);
9000b166:	0203      	lsls	r3, r0, #8
9000b168:	f3c0 2007 	ubfx	r0, r0, #8, #8
9000b16c:	b29b      	uxth	r3, r3
9000b16e:	4318      	orrs	r0, r3
  }

  return (u16_t)sum;
}
9000b170:	b280      	uxth	r0, r0
9000b172:	bd30      	pop	{r4, r5, pc}
    sum += *ps++;
9000b174:	f830 5b02 	ldrh.w	r5, [r0], #2
    len -= 2;
9000b178:	3902      	subs	r1, #2
    sum += *ps++;
9000b17a:	442a      	add	r2, r5
    len -= 2;
9000b17c:	e7e4      	b.n	9000b148 <lwip_standard_chksum+0x1c>
  u32_t sum = 0;
9000b17e:	461a      	mov	r2, r3
9000b180:	e7e9      	b.n	9000b156 <lwip_standard_chksum+0x2a>

9000b182 <inet_chksum_pseudo>:
 * @return checksum (as u16_t) to be saved directly in the protocol header
 */
u16_t
inet_chksum_pseudo(struct pbuf *p, u8_t proto, u16_t proto_len,
                   const ip4_addr_t *src, const ip4_addr_t *dest)
{
9000b182:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000b186:	4616      	mov	r6, r2
  u32_t acc;
  u32_t addr;

  addr = ip4_addr_get_u32(src);
9000b188:	681a      	ldr	r2, [r3, #0]
  acc = (addr & 0xffffUL);
  acc = (u32_t)(acc + ((addr >> 16) & 0xffffUL));
  addr = ip4_addr_get_u32(dest);
9000b18a:	9b08      	ldr	r3, [sp, #32]
{
9000b18c:	460f      	mov	r7, r1
9000b18e:	4605      	mov	r5, r0
  int swapped = 0;
9000b190:	f04f 0800 	mov.w	r8, #0
  addr = ip4_addr_get_u32(dest);
9000b194:	681b      	ldr	r3, [r3, #0]
  acc = (u32_t)(acc + (addr & 0xffffUL));
  acc = (u32_t)(acc + ((addr >> 16) & 0xffffUL));
9000b196:	0c19      	lsrs	r1, r3, #16
9000b198:	fa11 f383 	uxtah	r3, r1, r3
9000b19c:	fa13 f382 	uxtah	r3, r3, r2
9000b1a0:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  /* fold down to 16 bits */
  acc = FOLD_U32T(acc);
9000b1a4:	b29a      	uxth	r2, r3
9000b1a6:	eb02 4313 	add.w	r3, r2, r3, lsr #16
  acc = FOLD_U32T(acc);
9000b1aa:	b29c      	uxth	r4, r3
9000b1ac:	eb04 4413 	add.w	r4, r4, r3, lsr #16
  for (q = p; q != NULL; q = q->next) {
9000b1b0:	b9d5      	cbnz	r5, 9000b1e8 <inet_chksum_pseudo+0x66>
  if (swapped) {
9000b1b2:	f1b8 0f00 	cmp.w	r8, #0
9000b1b6:	d004      	beq.n	9000b1c2 <inet_chksum_pseudo+0x40>
    acc = SWAP_BYTES_IN_WORD(acc);
9000b1b8:	0223      	lsls	r3, r4, #8
9000b1ba:	f3c4 2407 	ubfx	r4, r4, #8, #8
9000b1be:	b29b      	uxth	r3, r3
9000b1c0:	431c      	orrs	r4, r3
  acc += (u32_t)lwip_htons((u16_t)proto);
9000b1c2:	4638      	mov	r0, r7
9000b1c4:	f7ff ff76 	bl	9000b0b4 <lwip_htons>
9000b1c8:	4605      	mov	r5, r0
  acc += (u32_t)lwip_htons(proto_len);
9000b1ca:	4630      	mov	r0, r6
9000b1cc:	f7ff ff72 	bl	9000b0b4 <lwip_htons>
9000b1d0:	4428      	add	r0, r5
9000b1d2:	4420      	add	r0, r4
  acc = FOLD_U32T(acc);
9000b1d4:	b283      	uxth	r3, r0
9000b1d6:	eb03 4310 	add.w	r3, r3, r0, lsr #16
  acc = FOLD_U32T(acc);
9000b1da:	b298      	uxth	r0, r3
9000b1dc:	eb00 4013 	add.w	r0, r0, r3, lsr #16
  return (u16_t)~(acc & 0xffffUL);
9000b1e0:	43c0      	mvns	r0, r0

  return inet_cksum_pseudo_base(p, proto, proto_len, acc);
}
9000b1e2:	b280      	uxth	r0, r0
9000b1e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    acc += LWIP_CHKSUM(q->payload, q->len);
9000b1e8:	f8b5 900a 	ldrh.w	r9, [r5, #10]
9000b1ec:	6868      	ldr	r0, [r5, #4]
9000b1ee:	4649      	mov	r1, r9
9000b1f0:	f7ff ff9c 	bl	9000b12c <lwip_standard_chksum>
9000b1f4:	4420      	add	r0, r4
    if (q->len % 2 != 0) {
9000b1f6:	f019 0f01 	tst.w	r9, #1
    acc = FOLD_U32T(acc);
9000b1fa:	b284      	uxth	r4, r0
9000b1fc:	eb04 4410 	add.w	r4, r4, r0, lsr #16
    if (q->len % 2 != 0) {
9000b200:	d006      	beq.n	9000b210 <inet_chksum_pseudo+0x8e>
      acc = SWAP_BYTES_IN_WORD(acc);
9000b202:	0223      	lsls	r3, r4, #8
9000b204:	f3c4 2407 	ubfx	r4, r4, #8, #8
9000b208:	f088 0801 	eor.w	r8, r8, #1
9000b20c:	b29b      	uxth	r3, r3
9000b20e:	431c      	orrs	r4, r3
  for (q = p; q != NULL; q = q->next) {
9000b210:	682d      	ldr	r5, [r5, #0]
9000b212:	e7cd      	b.n	9000b1b0 <inet_chksum_pseudo+0x2e>

9000b214 <ip_chksum_pseudo>:
#if LWIP_IPV4 && LWIP_IPV6
  else
#endif /* LWIP_IPV4 && LWIP_IPV6 */
#if LWIP_IPV4
  {
    return inet_chksum_pseudo(p, proto, proto_len, ip_2_ip4(src), ip_2_ip4(dest));
9000b214:	f7ff bfb5 	b.w	9000b182 <inet_chksum_pseudo>

9000b218 <inet_chksum>:
 * @return checksum (as u16_t) to be saved directly in the protocol header
 */

u16_t
inet_chksum(const void *dataptr, u16_t len)
{
9000b218:	b508      	push	{r3, lr}
  return (u16_t)~(unsigned int)LWIP_CHKSUM(dataptr, len);
9000b21a:	f7ff ff87 	bl	9000b12c <lwip_standard_chksum>
9000b21e:	43c0      	mvns	r0, r0
}
9000b220:	b280      	uxth	r0, r0
9000b222:	bd08      	pop	{r3, pc}

9000b224 <inet_chksum_pbuf>:
 * @param p pbuf chain over that the checksum should be calculated
 * @return checksum (as u16_t) to be saved directly in the protocol header
 */
u16_t
inet_chksum_pbuf(struct pbuf *p)
{
9000b224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  u32_t acc;
  struct pbuf *q;
  int swapped = 0;
9000b226:	2600      	movs	r6, #0
{
9000b228:	4605      	mov	r5, r0

  acc = 0;
9000b22a:	4634      	mov	r4, r6
  for (q = p; q != NULL; q = q->next) {
9000b22c:	b945      	cbnz	r5, 9000b240 <inet_chksum_pbuf+0x1c>
      swapped = !swapped;
      acc = SWAP_BYTES_IN_WORD(acc);
    }
  }

  if (swapped) {
9000b22e:	b126      	cbz	r6, 9000b23a <inet_chksum_pbuf+0x16>
    acc = SWAP_BYTES_IN_WORD(acc);
9000b230:	0223      	lsls	r3, r4, #8
9000b232:	f3c4 2407 	ubfx	r4, r4, #8, #8
9000b236:	b29b      	uxth	r3, r3
9000b238:	431c      	orrs	r4, r3
  }
  return (u16_t)~(acc & 0xffffUL);
9000b23a:	43e0      	mvns	r0, r4
}
9000b23c:	b280      	uxth	r0, r0
9000b23e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    acc += LWIP_CHKSUM(q->payload, q->len);
9000b240:	896f      	ldrh	r7, [r5, #10]
9000b242:	6868      	ldr	r0, [r5, #4]
9000b244:	4639      	mov	r1, r7
9000b246:	f7ff ff71 	bl	9000b12c <lwip_standard_chksum>
9000b24a:	4404      	add	r4, r0
    acc = FOLD_U32T(acc);
9000b24c:	b2a3      	uxth	r3, r4
9000b24e:	eb03 4414 	add.w	r4, r3, r4, lsr #16
    if (q->len % 2 != 0) {
9000b252:	07fb      	lsls	r3, r7, #31
9000b254:	d506      	bpl.n	9000b264 <inet_chksum_pbuf+0x40>
      acc = SWAP_BYTES_IN_WORD(acc);
9000b256:	0223      	lsls	r3, r4, #8
9000b258:	f3c4 2407 	ubfx	r4, r4, #8, #8
9000b25c:	f086 0601 	eor.w	r6, r6, #1
9000b260:	b29b      	uxth	r3, r3
9000b262:	431c      	orrs	r4, r3
  for (q = p; q != NULL; q = q->next) {
9000b264:	682d      	ldr	r5, [r5, #0]
9000b266:	e7e1      	b.n	9000b22c <inet_chksum_pbuf+0x8>

9000b268 <lwip_init>:
 * Initialize all modules.
 * Use this in NO_SYS mode. Use tcpip_init() otherwise.
 */
void
lwip_init(void)
{
9000b268:	b508      	push	{r3, lr}
  /* Modules initialization */
  stats_init();
#if !NO_SYS
  sys_init();
#endif /* !NO_SYS */
  mem_init();
9000b26a:	f000 f80f 	bl	9000b28c <mem_init>
  memp_init();
9000b26e:	f000 f965 	bl	9000b53c <memp_init>
  pbuf_init();
  netif_init();
9000b272:	f000 f9cf 	bl	9000b614 <netif_init>
#endif /* LWIP_IPV4 */
#if LWIP_RAW
  raw_init();
#endif /* LWIP_RAW */
#if LWIP_UDP
  udp_init();
9000b276:	f003 f97f 	bl	9000e578 <udp_init>
#endif /* LWIP_UDP */
#if LWIP_TCP
  tcp_init();
9000b27a:	f000 fcfb 	bl	9000bc74 <tcp_init>
#endif /* LWIP_TCP */
#if LWIP_IGMP
  igmp_init();
9000b27e:	f7ff f931 	bl	9000a4e4 <igmp_init>
#endif

#if LWIP_TIMERS
  sys_timeouts_init();
#endif /* LWIP_TIMERS */
}
9000b282:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  sys_timeouts_init();
9000b286:	f003 b939 	b.w	9000e4fc <sys_timeouts_init>
	...

9000b28c <mem_init>:

  LWIP_ASSERT("Sanity check alignment",
              (SIZEOF_STRUCT_MEM & (MEM_ALIGNMENT - 1)) == 0);

  /* align the heap */
  ram = (u8_t *)LWIP_MEM_ALIGN(LWIP_RAM_HEAP_POINTER);
9000b28c:	4b0c      	ldr	r3, [pc, #48]	@ (9000b2c0 <mem_init+0x34>)
9000b28e:	4a0d      	ldr	r2, [pc, #52]	@ (9000b2c4 <mem_init+0x38>)
9000b290:	f023 0303 	bic.w	r3, r3, #3
9000b294:	6013      	str	r3, [r2, #0]
  /* initialize the start of the heap */
  mem = (struct mem *)(void *)ram;
  mem->next = MEM_SIZE_ALIGNED;
9000b296:	f44f 5220 	mov.w	r2, #10240	@ 0x2800
  return (struct mem *)(void *)&ram[ptr];
9000b29a:	f503 5120 	add.w	r1, r3, #10240	@ 0x2800
  mem->next = MEM_SIZE_ALIGNED;
9000b29e:	601a      	str	r2, [r3, #0]
  mem->prev = 0;
  mem->used = 0;
9000b2a0:	2200      	movs	r2, #0
9000b2a2:	711a      	strb	r2, [r3, #4]
  /* initialize the end of the heap */
  ram_end = ptr_to_mem(MEM_SIZE_ALIGNED);
9000b2a4:	4a08      	ldr	r2, [pc, #32]	@ (9000b2c8 <mem_init+0x3c>)
9000b2a6:	6011      	str	r1, [r2, #0]
  ram_end->used = 1;
  ram_end->next = MEM_SIZE_ALIGNED;
9000b2a8:	f503 5200 	add.w	r2, r3, #8192	@ 0x2000
9000b2ac:	f04f 2128 	mov.w	r1, #671098880	@ 0x28002800
9000b2b0:	f8c2 1800 	str.w	r1, [r2, #2048]	@ 0x800
  ram_end->used = 1;
9000b2b4:	2101      	movs	r1, #1
9000b2b6:	f882 1804 	strb.w	r1, [r2, #2052]	@ 0x804
  ram_end->prev = MEM_SIZE_ALIGNED;
  MEM_SANITY();

  /* initialize the lowest-free pointer to the start of the heap */
  lfree = (struct mem *)(void *)ram;
9000b2ba:	4a04      	ldr	r2, [pc, #16]	@ (9000b2cc <mem_init+0x40>)
9000b2bc:	6013      	str	r3, [r2, #0]
  MEM_STATS_AVAIL(avail, MEM_SIZE_ALIGNED);

  if (sys_mutex_new(&mem_mutex) != ERR_OK) {
    LWIP_ASSERT("failed to create mem_mutex", 0);
  }
}
9000b2be:	4770      	bx	lr
9000b2c0:	2001401b 	.word	0x2001401b
9000b2c4:	20014014 	.word	0x20014014
9000b2c8:	20014010 	.word	0x20014010
9000b2cc:	2001400c 	.word	0x2001400c

9000b2d0 <mem_free>:
 * @param rmem is the data portion of a struct mem as returned by a previous
 *             call to mem_malloc()
 */
void
mem_free(void *rmem)
{
9000b2d0:	b5f0      	push	{r4, r5, r6, r7, lr}
  struct mem *mem;
  LWIP_MEM_FREE_DECL_PROTECT();

  if (rmem == NULL) {
9000b2d2:	2800      	cmp	r0, #0
9000b2d4:	d056      	beq.n	9000b384 <mem_free+0xb4>
    LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS, ("mem_free(p == NULL) was called.\n"));
    return;
  }
  if ((((mem_ptr_t)rmem) & (MEM_ALIGNMENT - 1)) != 0) {
9000b2d6:	0783      	lsls	r3, r0, #30
9000b2d8:	d154      	bne.n	9000b384 <mem_free+0xb4>

  /* Get the corresponding struct mem: */
  /* cast through void* to get rid of alignment warnings */
  mem = (struct mem *)(void *)((u8_t *)rmem - (SIZEOF_STRUCT_MEM + MEM_SANITY_OFFSET));

  if ((u8_t *)mem < ram || (u8_t *)rmem + MIN_SIZE_ALIGNED > (u8_t *)ram_end) {
9000b2da:	4b2b      	ldr	r3, [pc, #172]	@ (9000b388 <mem_free+0xb8>)
  mem = (struct mem *)(void *)((u8_t *)rmem - (SIZEOF_STRUCT_MEM + MEM_SANITY_OFFSET));
9000b2dc:	f1a0 0208 	sub.w	r2, r0, #8
  if ((u8_t *)mem < ram || (u8_t *)rmem + MIN_SIZE_ALIGNED > (u8_t *)ram_end) {
9000b2e0:	681b      	ldr	r3, [r3, #0]
9000b2e2:	4293      	cmp	r3, r2
9000b2e4:	d84e      	bhi.n	9000b384 <mem_free+0xb4>
9000b2e6:	4929      	ldr	r1, [pc, #164]	@ (9000b38c <mem_free+0xbc>)
9000b2e8:	f8d1 c000 	ldr.w	ip, [r1]
9000b2ec:	f100 010c 	add.w	r1, r0, #12
9000b2f0:	458c      	cmp	ip, r1
9000b2f2:	d347      	bcc.n	9000b384 <mem_free+0xb4>
  mem_overflow_check_element(mem);
#endif
  /* protect the heap from concurrent access */
  LWIP_MEM_FREE_PROTECT();
  /* mem has to be in a used state */
  if (!mem->used) {
9000b2f4:	f810 1c04 	ldrb.w	r1, [r0, #-4]
9000b2f8:	2900      	cmp	r1, #0
9000b2fa:	d043      	beq.n	9000b384 <mem_free+0xb4>
  nmem = ptr_to_mem(mem->next);
9000b2fc:	f830 6c08 	ldrh.w	r6, [r0, #-8]
  pmem = ptr_to_mem(mem->prev);
9000b300:	f830 1c06 	ldrh.w	r1, [r0, #-6]
  if ((mem->next > MEM_SIZE_ALIGNED) || (mem->prev > MEM_SIZE_ALIGNED) ||
9000b304:	f5b6 5f20 	cmp.w	r6, #10240	@ 0x2800
9000b308:	d83c      	bhi.n	9000b384 <mem_free+0xb4>
9000b30a:	f5b1 5f20 	cmp.w	r1, #10240	@ 0x2800
9000b30e:	d839      	bhi.n	9000b384 <mem_free+0xb4>
  return (mem_size_t)((u8_t *)mem - ram);
9000b310:	1ad4      	subs	r4, r2, r3
9000b312:	b2a4      	uxth	r4, r4
  if ((mem->next > MEM_SIZE_ALIGNED) || (mem->prev > MEM_SIZE_ALIGNED) ||
9000b314:	428c      	cmp	r4, r1
9000b316:	d002      	beq.n	9000b31e <mem_free+0x4e>
      ((mem->prev != rmem_idx) && (pmem->next != rmem_idx)) ||
9000b318:	5a59      	ldrh	r1, [r3, r1]
9000b31a:	42a1      	cmp	r1, r4
9000b31c:	d132      	bne.n	9000b384 <mem_free+0xb4>
  return (struct mem *)(void *)&ram[ptr];
9000b31e:	199d      	adds	r5, r3, r6
      ((mem->prev != rmem_idx) && (pmem->next != rmem_idx)) ||
9000b320:	45ac      	cmp	ip, r5
9000b322:	d002      	beq.n	9000b32a <mem_free+0x5a>
      ((nmem != ram_end) && (nmem->prev != rmem_idx))) {
9000b324:	8869      	ldrh	r1, [r5, #2]
9000b326:	42a1      	cmp	r1, r4
9000b328:	d12c      	bne.n	9000b384 <mem_free+0xb4>
    MEM_STATS_INC_LOCKED(illegal);
    return;
  }

  /* mem is now unused. */
  mem->used = 0;
9000b32a:	2100      	movs	r1, #0
9000b32c:	f800 1c04 	strb.w	r1, [r0, #-4]

  if (mem < lfree) {
9000b330:	4917      	ldr	r1, [pc, #92]	@ (9000b390 <mem_free+0xc0>)
9000b332:	680f      	ldr	r7, [r1, #0]
9000b334:	4297      	cmp	r7, r2
    /* the newly freed struct is now the lowest */
    lfree = mem;
9000b336:	bf88      	it	hi
9000b338:	600a      	strhi	r2, [r1, #0]
  if (mem != nmem && nmem->used == 0 && (u8_t *)nmem != (u8_t *)ram_end) {
9000b33a:	42aa      	cmp	r2, r5
9000b33c:	d00f      	beq.n	9000b35e <mem_free+0x8e>
9000b33e:	792f      	ldrb	r7, [r5, #4]
9000b340:	b96f      	cbnz	r7, 9000b35e <mem_free+0x8e>
9000b342:	45ac      	cmp	ip, r5
9000b344:	d00b      	beq.n	9000b35e <mem_free+0x8e>
    if (lfree == nmem) {
9000b346:	680f      	ldr	r7, [r1, #0]
9000b348:	42bd      	cmp	r5, r7
    mem->next = nmem->next;
9000b34a:	5b9d      	ldrh	r5, [r3, r6]
      lfree = mem;
9000b34c:	bf08      	it	eq
9000b34e:	600a      	streq	r2, [r1, #0]
    if (nmem->next != MEM_SIZE_ALIGNED) {
9000b350:	f5b5 5f20 	cmp.w	r5, #10240	@ 0x2800
    mem->next = nmem->next;
9000b354:	f820 5c08 	strh.w	r5, [r0, #-8]
      ptr_to_mem(nmem->next)->prev = mem_to_ptr(mem);
9000b358:	bf1c      	itt	ne
9000b35a:	18ed      	addne	r5, r5, r3
9000b35c:	806c      	strhne	r4, [r5, #2]
  pmem = ptr_to_mem(mem->prev);
9000b35e:	f830 4c06 	ldrh.w	r4, [r0, #-6]
  return (struct mem *)(void *)&ram[ptr];
9000b362:	191d      	adds	r5, r3, r4
  if (pmem != mem && pmem->used == 0) {
9000b364:	42aa      	cmp	r2, r5
9000b366:	d00d      	beq.n	9000b384 <mem_free+0xb4>
9000b368:	792e      	ldrb	r6, [r5, #4]
9000b36a:	b95e      	cbnz	r6, 9000b384 <mem_free+0xb4>
    if (lfree == mem) {
9000b36c:	680e      	ldr	r6, [r1, #0]
9000b36e:	42b2      	cmp	r2, r6
    pmem->next = mem->next;
9000b370:	f830 2c08 	ldrh.w	r2, [r0, #-8]
      lfree = pmem;
9000b374:	bf08      	it	eq
9000b376:	600d      	streq	r5, [r1, #0]
    if (mem->next != MEM_SIZE_ALIGNED) {
9000b378:	f5b2 5f20 	cmp.w	r2, #10240	@ 0x2800
    pmem->next = mem->next;
9000b37c:	531a      	strh	r2, [r3, r4]
      ptr_to_mem(mem->next)->prev = mem_to_ptr(pmem);
9000b37e:	bf1c      	itt	ne
9000b380:	189b      	addne	r3, r3, r2
9000b382:	805c      	strhne	r4, [r3, #2]
  MEM_SANITY();
#if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
  mem_free_count = 1;
#endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
  LWIP_MEM_FREE_UNPROTECT();
}
9000b384:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000b386:	bf00      	nop
9000b388:	20014014 	.word	0x20014014
9000b38c:	20014010 	.word	0x20014010
9000b390:	2001400c 	.word	0x2001400c

9000b394 <mem_trim>:
  /* use the FREE_PROTECT here: it protects with sem OR SYS_ARCH_PROTECT */
  LWIP_MEM_FREE_DECL_PROTECT();

  /* Expand the size of the allocated memory region so that we can
     adjust for alignment. */
  newsize = (mem_size_t)LWIP_MEM_ALIGN_SIZE(new_size);
9000b394:	1ccb      	adds	r3, r1, #3
9000b396:	f023 0303 	bic.w	r3, r3, #3
9000b39a:	b29b      	uxth	r3, r3
  if (newsize < MIN_SIZE_ALIGNED) {
9000b39c:	2b0b      	cmp	r3, #11
{
9000b39e:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (newsize < MIN_SIZE_ALIGNED) {
9000b3a0:	d904      	bls.n	9000b3ac <mem_trim+0x18>
    newsize = MIN_SIZE_ALIGNED;
  }
#if MEM_OVERFLOW_CHECK
  newsize += MEM_SANITY_REGION_BEFORE_ALIGNED + MEM_SANITY_REGION_AFTER_ALIGNED;
#endif
  if ((newsize > MEM_SIZE_ALIGNED) || (newsize < new_size)) {
9000b3a2:	f5b3 5f20 	cmp.w	r3, #10240	@ 0x2800
9000b3a6:	d902      	bls.n	9000b3ae <mem_trim+0x1a>
    return NULL;
9000b3a8:	2000      	movs	r0, #0
9000b3aa:	e034      	b.n	9000b416 <mem_trim+0x82>
    newsize = MIN_SIZE_ALIGNED;
9000b3ac:	230c      	movs	r3, #12
  if ((newsize > MEM_SIZE_ALIGNED) || (newsize < new_size)) {
9000b3ae:	4299      	cmp	r1, r3
9000b3b0:	d8fa      	bhi.n	9000b3a8 <mem_trim+0x14>
  }

  LWIP_ASSERT("mem_trim: legal memory", (u8_t *)rmem >= (u8_t *)ram &&
              (u8_t *)rmem < (u8_t *)ram_end);

  if ((u8_t *)rmem < (u8_t *)ram || (u8_t *)rmem >= (u8_t *)ram_end) {
9000b3b2:	4a28      	ldr	r2, [pc, #160]	@ (9000b454 <mem_trim+0xc0>)
9000b3b4:	6812      	ldr	r2, [r2, #0]
9000b3b6:	4282      	cmp	r2, r0
9000b3b8:	d82d      	bhi.n	9000b416 <mem_trim+0x82>
9000b3ba:	4927      	ldr	r1, [pc, #156]	@ (9000b458 <mem_trim+0xc4>)
9000b3bc:	6809      	ldr	r1, [r1, #0]
9000b3be:	4281      	cmp	r1, r0
9000b3c0:	d929      	bls.n	9000b416 <mem_trim+0x82>
    MEM_STATS_INC_LOCKED(illegal);
    return rmem;
  }
  /* Get the corresponding struct mem ... */
  /* cast through void* to get rid of alignment warnings */
  mem = (struct mem *)(void *)((u8_t *)rmem - (SIZEOF_STRUCT_MEM + MEM_SANITY_OFFSET));
9000b3c2:	f1a0 0108 	sub.w	r1, r0, #8
  mem_overflow_check_element(mem);
#endif
  /* ... and its offset pointer */
  ptr = mem_to_ptr(mem);

  size = (mem_size_t)((mem_size_t)(mem->next - ptr) - (SIZEOF_STRUCT_MEM + MEM_SANITY_OVERHEAD));
9000b3c6:	f830 5c08 	ldrh.w	r5, [r0, #-8]
  return (mem_size_t)((u8_t *)mem - ram);
9000b3ca:	1a89      	subs	r1, r1, r2
  size = (mem_size_t)((mem_size_t)(mem->next - ptr) - (SIZEOF_STRUCT_MEM + MEM_SANITY_OVERHEAD));
9000b3cc:	f1a5 0408 	sub.w	r4, r5, #8
  return (mem_size_t)((u8_t *)mem - ram);
9000b3d0:	b289      	uxth	r1, r1
  size = (mem_size_t)((mem_size_t)(mem->next - ptr) - (SIZEOF_STRUCT_MEM + MEM_SANITY_OVERHEAD));
9000b3d2:	1a64      	subs	r4, r4, r1
9000b3d4:	b2a4      	uxth	r4, r4
  LWIP_ASSERT("mem_trim can only shrink memory", newsize <= size);
  if (newsize > size) {
9000b3d6:	429c      	cmp	r4, r3
9000b3d8:	d3e6      	bcc.n	9000b3a8 <mem_trim+0x14>
    /* not supported */
    return NULL;
  }
  if (newsize == size) {
9000b3da:	d01c      	beq.n	9000b416 <mem_trim+0x82>
  return (struct mem *)(void *)&ram[ptr];
9000b3dc:	1956      	adds	r6, r2, r5

  /* protect the heap from concurrent access */
  LWIP_MEM_FREE_PROTECT();

  mem2 = ptr_to_mem(mem->next);
  if (mem2->used == 0) {
9000b3de:	7937      	ldrb	r7, [r6, #4]
9000b3e0:	b9d7      	cbnz	r7, 9000b418 <mem_trim+0x84>
    /* The next struct is unused, we can simply move it at little */
    mem_size_t next;
    LWIP_ASSERT("invalid next ptr", mem->next != MEM_SIZE_ALIGNED);
    /* remember the old next pointer */
    next = mem2->next;
9000b3e2:	f832 c005 	ldrh.w	ip, [r2, r5]
    /* create new struct mem which is moved directly after the shrinked mem */
    ptr2 = (mem_size_t)(ptr + SIZEOF_STRUCT_MEM + newsize);
9000b3e6:	f101 0408 	add.w	r4, r1, #8
    if (lfree == mem2) {
9000b3ea:	4d1c      	ldr	r5, [pc, #112]	@ (9000b45c <mem_trim+0xc8>)
    ptr2 = (mem_size_t)(ptr + SIZEOF_STRUCT_MEM + newsize);
9000b3ec:	4423      	add	r3, r4
    if (lfree == mem2) {
9000b3ee:	682f      	ldr	r7, [r5, #0]
    ptr2 = (mem_size_t)(ptr + SIZEOF_STRUCT_MEM + newsize);
9000b3f0:	b29c      	uxth	r4, r3
  return (struct mem *)(void *)&ram[ptr];
9000b3f2:	fa12 f383 	uxtah	r3, r2, r3
    if (lfree == mem2) {
9000b3f6:	42b7      	cmp	r7, r6
      lfree = ptr_to_mem(ptr2);
9000b3f8:	bf08      	it	eq
9000b3fa:	602b      	streq	r3, [r5, #0]
    }
    mem2 = ptr_to_mem(ptr2);
    mem2->used = 0;
9000b3fc:	2500      	movs	r5, #0
9000b3fe:	711d      	strb	r5, [r3, #4]
    /* restore the next pointer */
    mem2->next = next;
9000b400:	f822 c004 	strh.w	ip, [r2, r4]
    /* link it back to mem */
    mem2->prev = ptr;
9000b404:	8059      	strh	r1, [r3, #2]
    /* link mem to it */
    mem->next = ptr2;
9000b406:	f820 4c08 	strh.w	r4, [r0, #-8]
    /* last thing to restore linked list: as we have moved mem2,
     * let 'mem2->next->prev' point to mem2 again. but only if mem2->next is not
     * the end of the heap */
    if (mem2->next != MEM_SIZE_ALIGNED) {
9000b40a:	5b13      	ldrh	r3, [r2, r4]
9000b40c:	f5b3 5f20 	cmp.w	r3, #10240	@ 0x2800
9000b410:	d001      	beq.n	9000b416 <mem_trim+0x82>
      ptr_to_mem(mem2->next)->prev = ptr2;
9000b412:	4413      	add	r3, r2
9000b414:	805c      	strh	r4, [r3, #2]
#if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
  mem_free_count = 1;
#endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
  LWIP_MEM_FREE_UNPROTECT();
  return rmem;
}
9000b416:	bdf0      	pop	{r4, r5, r6, r7, pc}
  } else if (newsize + SIZEOF_STRUCT_MEM + MIN_SIZE_ALIGNED <= size) {
9000b418:	f103 0614 	add.w	r6, r3, #20
9000b41c:	b2b6      	uxth	r6, r6
9000b41e:	42a6      	cmp	r6, r4
9000b420:	d8f9      	bhi.n	9000b416 <mem_trim+0x82>
    ptr2 = (mem_size_t)(ptr + SIZEOF_STRUCT_MEM + newsize);
9000b422:	f101 0408 	add.w	r4, r1, #8
    if (mem2 < lfree) {
9000b426:	4e0d      	ldr	r6, [pc, #52]	@ (9000b45c <mem_trim+0xc8>)
    ptr2 = (mem_size_t)(ptr + SIZEOF_STRUCT_MEM + newsize);
9000b428:	4423      	add	r3, r4
    if (mem2 < lfree) {
9000b42a:	6837      	ldr	r7, [r6, #0]
    ptr2 = (mem_size_t)(ptr + SIZEOF_STRUCT_MEM + newsize);
9000b42c:	b29c      	uxth	r4, r3
  return (struct mem *)(void *)&ram[ptr];
9000b42e:	fa12 f383 	uxtah	r3, r2, r3
    if (mem2 < lfree) {
9000b432:	429f      	cmp	r7, r3
      lfree = mem2;
9000b434:	bf88      	it	hi
9000b436:	6033      	strhi	r3, [r6, #0]
    mem2->used = 0;
9000b438:	2600      	movs	r6, #0
9000b43a:	711e      	strb	r6, [r3, #4]
    mem2->next = mem->next;
9000b43c:	5315      	strh	r5, [r2, r4]
    mem2->prev = ptr;
9000b43e:	8059      	strh	r1, [r3, #2]
    mem->next = ptr2;
9000b440:	f820 4c08 	strh.w	r4, [r0, #-8]
    if (mem2->next != MEM_SIZE_ALIGNED) {
9000b444:	5b13      	ldrh	r3, [r2, r4]
9000b446:	f5b3 5f20 	cmp.w	r3, #10240	@ 0x2800
9000b44a:	d0e4      	beq.n	9000b416 <mem_trim+0x82>
      ptr_to_mem(mem2->next)->prev = ptr2;
9000b44c:	441a      	add	r2, r3
9000b44e:	8054      	strh	r4, [r2, #2]
9000b450:	e7e1      	b.n	9000b416 <mem_trim+0x82>
9000b452:	bf00      	nop
9000b454:	20014014 	.word	0x20014014
9000b458:	20014010 	.word	0x20014010
9000b45c:	2001400c 	.word	0x2001400c

9000b460 <mem_malloc>:
 *
 * Note that the returned value will always be aligned (as defined by MEM_ALIGNMENT).
 */
void *
mem_malloc(mem_size_t size_in)
{
9000b460:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
#if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
  u8_t local_mem_free_count = 0;
#endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
  LWIP_MEM_ALLOC_DECL_PROTECT();

  if (size_in == 0) {
9000b464:	2800      	cmp	r0, #0
9000b466:	d045      	beq.n	9000b4f4 <mem_malloc+0x94>
    return NULL;
  }

  /* Expand the size of the allocated memory region so that we can
     adjust for alignment. */
  size = (mem_size_t)LWIP_MEM_ALIGN_SIZE(size_in);
9000b468:	1cc3      	adds	r3, r0, #3
9000b46a:	f023 0303 	bic.w	r3, r3, #3
9000b46e:	b29b      	uxth	r3, r3
  if (size < MIN_SIZE_ALIGNED) {
9000b470:	2b0b      	cmp	r3, #11
9000b472:	d904      	bls.n	9000b47e <mem_malloc+0x1e>
    size = MIN_SIZE_ALIGNED;
  }
#if MEM_OVERFLOW_CHECK
  size += MEM_SANITY_REGION_BEFORE_ALIGNED + MEM_SANITY_REGION_AFTER_ALIGNED;
#endif
  if ((size > MEM_SIZE_ALIGNED) || (size < size_in)) {
9000b474:	f5b3 5f20 	cmp.w	r3, #10240	@ 0x2800
9000b478:	d902      	bls.n	9000b480 <mem_malloc+0x20>
    return NULL;
9000b47a:	2000      	movs	r0, #0
9000b47c:	e03a      	b.n	9000b4f4 <mem_malloc+0x94>
    size = MIN_SIZE_ALIGNED;
9000b47e:	230c      	movs	r3, #12
  if ((size > MEM_SIZE_ALIGNED) || (size < size_in)) {
9000b480:	4298      	cmp	r0, r3
9000b482:	d8fa      	bhi.n	9000b47a <mem_malloc+0x1a>
#endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */

    /* Scan through the heap searching for a free block that is big enough,
     * beginning with the lowest free block.
     */
    for (ptr = mem_to_ptr(lfree); ptr < MEM_SIZE_ALIGNED - size;
9000b484:	4e20      	ldr	r6, [pc, #128]	@ (9000b508 <mem_malloc+0xa8>)
9000b486:	f5c3 5e20 	rsb	lr, r3, #10240	@ 0x2800
  return (mem_size_t)((u8_t *)mem - ram);
9000b48a:	4a20      	ldr	r2, [pc, #128]	@ (9000b50c <mem_malloc+0xac>)
        break;
      }
#endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */

      if ((!mem->used) &&
          (mem->next - (ptr + SIZEOF_STRUCT_MEM)) >= size) {
9000b48c:	f06f 0807 	mvn.w	r8, #7
    for (ptr = mem_to_ptr(lfree); ptr < MEM_SIZE_ALIGNED - size;
9000b490:	6834      	ldr	r4, [r6, #0]
  return (mem_size_t)((u8_t *)mem - ram);
9000b492:	6815      	ldr	r5, [r2, #0]
9000b494:	1b61      	subs	r1, r4, r5
9000b496:	b289      	uxth	r1, r1
    for (ptr = mem_to_ptr(lfree); ptr < MEM_SIZE_ALIGNED - size;
9000b498:	4571      	cmp	r1, lr
9000b49a:	d2ee      	bcs.n	9000b47a <mem_malloc+0x1a>
  return (struct mem *)(void *)&ram[ptr];
9000b49c:	1868      	adds	r0, r5, r1
          (mem->next - (ptr + SIZEOF_STRUCT_MEM)) >= size) {
9000b49e:	5a6f      	ldrh	r7, [r5, r1]
      if ((!mem->used) &&
9000b4a0:	f890 c004 	ldrb.w	ip, [r0, #4]
9000b4a4:	f1bc 0f00 	cmp.w	ip, #0
9000b4a8:	d12c      	bne.n	9000b504 <mem_malloc+0xa4>
          (mem->next - (ptr + SIZEOF_STRUCT_MEM)) >= size) {
9000b4aa:	eba8 0201 	sub.w	r2, r8, r1
9000b4ae:	443a      	add	r2, r7
      if ((!mem->used) &&
9000b4b0:	429a      	cmp	r2, r3
9000b4b2:	d327      	bcc.n	9000b504 <mem_malloc+0xa4>
        /* mem is not used and at least perfect fit is possible:
         * mem->next - (ptr + SIZEOF_STRUCT_MEM) gives us the 'user data size' of mem */

        if (mem->next - (ptr + SIZEOF_STRUCT_MEM) >= (size + SIZEOF_STRUCT_MEM + MIN_SIZE_ALIGNED)) {
9000b4b4:	f103 0e14 	add.w	lr, r3, #20
9000b4b8:	4572      	cmp	r2, lr
9000b4ba:	d31d      	bcc.n	9000b4f8 <mem_malloc+0x98>
           * struct mem would fit in but no data between mem2 and mem2->next
           * @todo we could leave out MIN_SIZE_ALIGNED. We would create an empty
           *       region that couldn't hold data, but when mem->next gets freed,
           *       the 2 regions would be combined, resulting in more free memory
           */
          ptr2 = (mem_size_t)(ptr + SIZEOF_STRUCT_MEM + size);
9000b4bc:	3308      	adds	r3, #8
9000b4be:	440b      	add	r3, r1
9000b4c0:	b29a      	uxth	r2, r3
  return (struct mem *)(void *)&ram[ptr];
9000b4c2:	fa15 f383 	uxtah	r3, r5, r3
          LWIP_ASSERT("invalid next ptr",ptr2 != MEM_SIZE_ALIGNED);
          /* create mem2 struct */
          mem2 = ptr_to_mem(ptr2);
          mem2->used = 0;
9000b4c6:	f883 c004 	strb.w	ip, [r3, #4]
          mem2->next = mem->next;
9000b4ca:	52af      	strh	r7, [r5, r2]
          mem2->prev = ptr;
9000b4cc:	8059      	strh	r1, [r3, #2]
          /* and insert it between mem and mem->next */
          mem->next = ptr2;
          mem->used = 1;
9000b4ce:	2301      	movs	r3, #1
          mem->next = ptr2;
9000b4d0:	8002      	strh	r2, [r0, #0]
          mem->used = 1;
9000b4d2:	7103      	strb	r3, [r0, #4]

          if (mem2->next != MEM_SIZE_ALIGNED) {
9000b4d4:	5aab      	ldrh	r3, [r5, r2]
9000b4d6:	f5b3 5f20 	cmp.w	r3, #10240	@ 0x2800
9000b4da:	d001      	beq.n	9000b4e0 <mem_malloc+0x80>
            ptr_to_mem(mem2->next)->prev = ptr2;
9000b4dc:	442b      	add	r3, r5
9000b4de:	805a      	strh	r2, [r3, #2]
          MEM_STATS_INC_USED(used, mem->next - mem_to_ptr(mem));
        }
#if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
mem_malloc_adjust_lfree:
#endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
        if (mem == lfree) {
9000b4e0:	4284      	cmp	r4, r0
9000b4e2:	d106      	bne.n	9000b4f2 <mem_malloc+0x92>
          struct mem *cur = lfree;
          /* Find next free block after mem and update lowest free pointer */
          while (cur->used && cur != ram_end) {
9000b4e4:	4b0a      	ldr	r3, [pc, #40]	@ (9000b510 <mem_malloc+0xb0>)
9000b4e6:	681b      	ldr	r3, [r3, #0]
9000b4e8:	7922      	ldrb	r2, [r4, #4]
9000b4ea:	b10a      	cbz	r2, 9000b4f0 <mem_malloc+0x90>
9000b4ec:	42a3      	cmp	r3, r4
9000b4ee:	d106      	bne.n	9000b4fe <mem_malloc+0x9e>
              goto mem_malloc_adjust_lfree;
            }
#endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
            cur = ptr_to_mem(cur->next);
          }
          lfree = cur;
9000b4f0:	6034      	str	r4, [r6, #0]

#if MEM_OVERFLOW_CHECK
        mem_overflow_init_element(mem, size_in);
#endif
        MEM_SANITY();
        return (u8_t *)mem + SIZEOF_STRUCT_MEM + MEM_SANITY_OFFSET;
9000b4f2:	3008      	adds	r0, #8
  MEM_STATS_INC(err);
  LWIP_MEM_ALLOC_UNPROTECT();
  sys_mutex_unlock(&mem_mutex);
  LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("mem_malloc: could not allocate %"S16_F" bytes\n", (s16_t)size));
  return NULL;
}
9000b4f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
          mem->used = 1;
9000b4f8:	2301      	movs	r3, #1
9000b4fa:	7103      	strb	r3, [r0, #4]
9000b4fc:	e7f0      	b.n	9000b4e0 <mem_malloc+0x80>
  return (struct mem *)(void *)&ram[ptr];
9000b4fe:	8824      	ldrh	r4, [r4, #0]
9000b500:	442c      	add	r4, r5
9000b502:	e7f1      	b.n	9000b4e8 <mem_malloc+0x88>
    size = MIN_SIZE_ALIGNED;
9000b504:	4639      	mov	r1, r7
9000b506:	e7c7      	b.n	9000b498 <mem_malloc+0x38>
9000b508:	2001400c 	.word	0x2001400c
9000b50c:	20014014 	.word	0x20014014
9000b510:	20014010 	.word	0x20014010

9000b514 <memp_init_pool>:
#else
  int i;
  struct memp *memp;

  *desc->tab = NULL;
  memp = (struct memp *)LWIP_MEM_ALIGN(desc->base);
9000b514:	6883      	ldr	r3, [r0, #8]
  *desc->tab = NULL;
9000b516:	2200      	movs	r2, #0
9000b518:	68c1      	ldr	r1, [r0, #12]
  memp = (struct memp *)LWIP_MEM_ALIGN(desc->base);
9000b51a:	3303      	adds	r3, #3
{
9000b51c:	b530      	push	{r4, r5, lr}
  memp = (struct memp *)LWIP_MEM_ALIGN(desc->base);
9000b51e:	f023 0303 	bic.w	r3, r3, #3
                                       + MEM_SANITY_REGION_AFTER_ALIGNED
#endif
                                      ));
#endif
  /* create a linked list of memp elements */
  for (i = 0; i < desc->num; ++i) {
9000b522:	88c4      	ldrh	r4, [r0, #6]
  *desc->tab = NULL;
9000b524:	600a      	str	r2, [r1, #0]
  for (i = 0; i < desc->num; ++i) {
9000b526:	4294      	cmp	r4, r2
9000b528:	dc00      	bgt.n	9000b52c <memp_init_pool+0x18>
#endif /* !MEMP_MEM_MALLOC */

#if MEMP_STATS && (defined(LWIP_DEBUG) || LWIP_STATS_DISPLAY)
  desc->stats->name  = desc->desc;
#endif /* MEMP_STATS && (defined(LWIP_DEBUG) || LWIP_STATS_DISPLAY) */
}
9000b52a:	bd30      	pop	{r4, r5, pc}
    memp->next = *desc->tab;
9000b52c:	680d      	ldr	r5, [r1, #0]
  for (i = 0; i < desc->num; ++i) {
9000b52e:	3201      	adds	r2, #1
    memp->next = *desc->tab;
9000b530:	601d      	str	r5, [r3, #0]
    memp = (struct memp *)(void *)((u8_t *)memp + MEMP_SIZE + desc->size
9000b532:	8885      	ldrh	r5, [r0, #4]
    *desc->tab = memp;
9000b534:	600b      	str	r3, [r1, #0]
    memp = (struct memp *)(void *)((u8_t *)memp + MEMP_SIZE + desc->size
9000b536:	442b      	add	r3, r5
  for (i = 0; i < desc->num; ++i) {
9000b538:	e7f5      	b.n	9000b526 <memp_init_pool+0x12>
	...

9000b53c <memp_init>:
 *
 * Carves out memp_memory into linked lists for each pool-type.
 */
void
memp_init(void)
{
9000b53c:	b538      	push	{r3, r4, r5, lr}
9000b53e:	4d05      	ldr	r5, [pc, #20]	@ (9000b554 <memp_init+0x18>)
9000b540:	240a      	movs	r4, #10
  u16_t i;

  /* for every pool: */
  for (i = 0; i < LWIP_ARRAYSIZE(memp_pools); i++) {
9000b542:	3c01      	subs	r4, #1
    memp_init_pool(memp_pools[i]);
9000b544:	f855 0b04 	ldr.w	r0, [r5], #4
9000b548:	f7ff ffe4 	bl	9000b514 <memp_init_pool>
  for (i = 0; i < LWIP_ARRAYSIZE(memp_pools); i++) {
9000b54c:	b2a4      	uxth	r4, r4
9000b54e:	2c00      	cmp	r4, #0
9000b550:	d1f7      	bne.n	9000b542 <memp_init+0x6>

#if MEMP_OVERFLOW_CHECK >= 2
  /* check everything a first time to see if it worked */
  memp_overflow_check_all();
#endif /* MEMP_OVERFLOW_CHECK >= 2 */
}
9000b552:	bd38      	pop	{r3, r4, r5, pc}
9000b554:	9002abcc 	.word	0x9002abcc

9000b558 <memp_malloc>:
#else
memp_malloc_fn(memp_t type, const char *file, const int line)
#endif
{
  void *memp;
  LWIP_ERROR("memp_malloc: type < MEMP_MAX", (type < MEMP_MAX), return NULL;);
9000b558:	2809      	cmp	r0, #9
{
9000b55a:	b508      	push	{r3, lr}
  LWIP_ERROR("memp_malloc: type < MEMP_MAX", (type < MEMP_MAX), return NULL;);
9000b55c:	d904      	bls.n	9000b568 <memp_malloc+0x10>
9000b55e:	4807      	ldr	r0, [pc, #28]	@ (9000b57c <memp_malloc+0x24>)
9000b560:	f01d f91c 	bl	9002879c <iprintf>
9000b564:	2000      	movs	r0, #0
#else
  memp = do_memp_malloc_pool_fn(memp_pools[type], file, line);
#endif

  return memp;
}
9000b566:	bd08      	pop	{r3, pc}
  memp = do_memp_malloc_pool(memp_pools[type]);
9000b568:	4b05      	ldr	r3, [pc, #20]	@ (9000b580 <memp_malloc+0x28>)
9000b56a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
9000b56e:	68db      	ldr	r3, [r3, #12]
  memp = *desc->tab;
9000b570:	6818      	ldr	r0, [r3, #0]
  if (memp != NULL) {
9000b572:	2800      	cmp	r0, #0
9000b574:	d0f7      	beq.n	9000b566 <memp_malloc+0xe>
    *desc->tab = memp->next;
9000b576:	6802      	ldr	r2, [r0, #0]
9000b578:	601a      	str	r2, [r3, #0]
    return ((u8_t *)memp + MEMP_SIZE);
9000b57a:	e7f4      	b.n	9000b566 <memp_malloc+0xe>
9000b57c:	9002a0c0 	.word	0x9002a0c0
9000b580:	9002abcc 	.word	0x9002abcc

9000b584 <memp_free>:
{
#ifdef LWIP_HOOK_MEMP_AVAILABLE
  struct memp *old_first;
#endif

  LWIP_ERROR("memp_free: type < MEMP_MAX", (type < MEMP_MAX), return;);
9000b584:	2809      	cmp	r0, #9
9000b586:	d902      	bls.n	9000b58e <memp_free+0xa>
9000b588:	4805      	ldr	r0, [pc, #20]	@ (9000b5a0 <memp_free+0x1c>)
9000b58a:	f01d b907 	b.w	9002879c <iprintf>

  if (mem == NULL) {
9000b58e:	b131      	cbz	r1, 9000b59e <memp_free+0x1a>

#ifdef LWIP_HOOK_MEMP_AVAILABLE
  old_first = *memp_pools[type]->tab;
#endif

  do_memp_free_pool(memp_pools[type], mem);
9000b590:	4b04      	ldr	r3, [pc, #16]	@ (9000b5a4 <memp_free+0x20>)
  memp->next = *desc->tab;
9000b592:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
9000b596:	68db      	ldr	r3, [r3, #12]
9000b598:	681a      	ldr	r2, [r3, #0]
9000b59a:	600a      	str	r2, [r1, #0]
  *desc->tab = memp;
9000b59c:	6019      	str	r1, [r3, #0]
#ifdef LWIP_HOOK_MEMP_AVAILABLE
  if (old_first == NULL) {
    LWIP_HOOK_MEMP_AVAILABLE(type);
  }
#endif
}
9000b59e:	4770      	bx	lr
9000b5a0:	9002a0dd 	.word	0x9002a0dd
9000b5a4:	9002abcc 	.word	0x9002abcc

9000b5a8 <netif_null_output_ip4>:
  LWIP_UNUSED_ARG(netif);
  LWIP_UNUSED_ARG(p);
  LWIP_UNUSED_ARG(ipaddr);

  return ERR_IF;
}
9000b5a8:	f06f 000b 	mvn.w	r0, #11
9000b5ac:	4770      	bx	lr

9000b5ae <netif_issue_reports>:
{
9000b5ae:	b510      	push	{r4, lr}
  if (!(netif->flags & NETIF_FLAG_LINK_UP) ||
9000b5b0:	f890 3031 	ldrb.w	r3, [r0, #49]	@ 0x31
{
9000b5b4:	4604      	mov	r4, r0
  if (!(netif->flags & NETIF_FLAG_LINK_UP) ||
9000b5b6:	f003 0205 	and.w	r2, r3, #5
9000b5ba:	2a05      	cmp	r2, #5
9000b5bc:	d10f      	bne.n	9000b5de <netif_issue_reports+0x30>
  if ((report_type & NETIF_REPORT_TYPE_IPV4) &&
9000b5be:	6842      	ldr	r2, [r0, #4]
9000b5c0:	b16a      	cbz	r2, 9000b5de <netif_issue_reports+0x30>
    if (netif->flags & (NETIF_FLAG_ETHARP)) {
9000b5c2:	071a      	lsls	r2, r3, #28
9000b5c4:	d502      	bpl.n	9000b5cc <netif_issue_reports+0x1e>
      etharp_gratuitous(netif);
9000b5c6:	1d01      	adds	r1, r0, #4
9000b5c8:	f7fe fcc6 	bl	90009f58 <etharp_request>
    if (netif->flags & NETIF_FLAG_IGMP) {
9000b5cc:	f894 3031 	ldrb.w	r3, [r4, #49]	@ 0x31
9000b5d0:	069b      	lsls	r3, r3, #26
9000b5d2:	d504      	bpl.n	9000b5de <netif_issue_reports+0x30>
      igmp_report_groups(netif);
9000b5d4:	4620      	mov	r0, r4
}
9000b5d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      igmp_report_groups(netif);
9000b5da:	f7fe bf91 	b.w	9000a500 <igmp_report_groups>
}
9000b5de:	bd10      	pop	{r4, pc}

9000b5e0 <netif_do_set_ipaddr.isra.0>:
netif_do_set_ipaddr(struct netif *netif, const ip4_addr_t *ipaddr, ip_addr_t *old_addr)
9000b5e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if (ip4_addr_cmp(ipaddr, netif_ip4_addr(netif)) == 0) {
9000b5e2:	6843      	ldr	r3, [r0, #4]
netif_do_set_ipaddr(struct netif *netif, const ip4_addr_t *ipaddr, ip_addr_t *old_addr)
9000b5e4:	4615      	mov	r5, r2
  if (ip4_addr_cmp(ipaddr, netif_ip4_addr(netif)) == 0) {
9000b5e6:	680a      	ldr	r2, [r1, #0]
netif_do_set_ipaddr(struct netif *netif, const ip4_addr_t *ipaddr, ip_addr_t *old_addr)
9000b5e8:	4604      	mov	r4, r0
9000b5ea:	460e      	mov	r6, r1
  if (ip4_addr_cmp(ipaddr, netif_ip4_addr(netif)) == 0) {
9000b5ec:	429a      	cmp	r2, r3
9000b5ee:	d00f      	beq.n	9000b610 <netif_do_set_ipaddr.isra.0+0x30>
    ip_addr_copy(*old_addr, *netif_ip_addr4(netif));
9000b5f0:	602b      	str	r3, [r5, #0]
  tcp_netif_ip_addr_changed(old_addr, new_addr);
9000b5f2:	a901      	add	r1, sp, #4
9000b5f4:	4628      	mov	r0, r5
    *ip_2_ip4(&new_addr) = *ipaddr;
9000b5f6:	9201      	str	r2, [sp, #4]
  tcp_netif_ip_addr_changed(old_addr, new_addr);
9000b5f8:	f001 f8ec 	bl	9000c7d4 <tcp_netif_ip_addr_changed>
  udp_netif_ip_addr_changed(old_addr, new_addr);
9000b5fc:	a901      	add	r1, sp, #4
9000b5fe:	4628      	mov	r0, r5
9000b600:	f003 f87e 	bl	9000e700 <udp_netif_ip_addr_changed>
    ip4_addr_set(ip_2_ip4(&netif->ip_addr), ipaddr);
9000b604:	6833      	ldr	r3, [r6, #0]
    netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV4);
9000b606:	2101      	movs	r1, #1
9000b608:	4620      	mov	r0, r4
    ip4_addr_set(ip_2_ip4(&netif->ip_addr), ipaddr);
9000b60a:	6063      	str	r3, [r4, #4]
    netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV4);
9000b60c:	f7ff ffcf 	bl	9000b5ae <netif_issue_reports>
}
9000b610:	b002      	add	sp, #8
9000b612:	bd70      	pop	{r4, r5, r6, pc}

9000b614 <netif_init>:
}
9000b614:	4770      	bx	lr
	...

9000b618 <netif_set_addr>:
{
9000b618:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    ipaddr = IP4_ADDR_ANY4;
9000b61a:	4e14      	ldr	r6, [pc, #80]	@ (9000b66c <netif_set_addr+0x54>)
{
9000b61c:	4604      	mov	r4, r0
    ipaddr = IP4_ADDR_ANY4;
9000b61e:	2900      	cmp	r1, #0
9000b620:	bf14      	ite	ne
9000b622:	460d      	movne	r5, r1
9000b624:	4635      	moveq	r5, r6
    netmask = IP4_ADDR_ANY4;
9000b626:	2a00      	cmp	r2, #0
9000b628:	bf14      	ite	ne
9000b62a:	4617      	movne	r7, r2
9000b62c:	4637      	moveq	r7, r6
    gw = IP4_ADDR_ANY4;
9000b62e:	2b00      	cmp	r3, #0
9000b630:	bf18      	it	ne
9000b632:	461e      	movne	r6, r3
  remove = ip4_addr_isany(ipaddr);
9000b634:	682b      	ldr	r3, [r5, #0]
9000b636:	b9b3      	cbnz	r3, 9000b666 <netif_set_addr+0x4e>
    if (netif_do_set_ipaddr(netif, ipaddr, &old_addr)) {
9000b638:	aa01      	add	r2, sp, #4
9000b63a:	4629      	mov	r1, r5
9000b63c:	f7ff ffd0 	bl	9000b5e0 <netif_do_set_ipaddr.isra.0>
9000b640:	2301      	movs	r3, #1
  if (ip4_addr_cmp(netmask, netif_ip4_netmask(netif)) == 0) {
9000b642:	683a      	ldr	r2, [r7, #0]
9000b644:	68a1      	ldr	r1, [r4, #8]
9000b646:	428a      	cmp	r2, r1
  if (ip4_addr_cmp(gw, netif_ip4_gw(netif)) == 0) {
9000b648:	68e1      	ldr	r1, [r4, #12]
    ip4_addr_set(ip_2_ip4(&netif->netmask), netmask);
9000b64a:	bf18      	it	ne
9000b64c:	60a2      	strne	r2, [r4, #8]
  if (ip4_addr_cmp(gw, netif_ip4_gw(netif)) == 0) {
9000b64e:	6832      	ldr	r2, [r6, #0]
9000b650:	428a      	cmp	r2, r1
    ip4_addr_set(ip_2_ip4(&netif->gw), gw);
9000b652:	bf18      	it	ne
9000b654:	60e2      	strne	r2, [r4, #12]
  if (!remove) {
9000b656:	b923      	cbnz	r3, 9000b662 <netif_set_addr+0x4a>
    if (netif_do_set_ipaddr(netif, ipaddr, &old_addr)) {
9000b658:	aa01      	add	r2, sp, #4
9000b65a:	4629      	mov	r1, r5
9000b65c:	4620      	mov	r0, r4
9000b65e:	f7ff ffbf 	bl	9000b5e0 <netif_do_set_ipaddr.isra.0>
}
9000b662:	b003      	add	sp, #12
9000b664:	bdf0      	pop	{r4, r5, r6, r7, pc}
  remove = ip4_addr_isany(ipaddr);
9000b666:	2300      	movs	r3, #0
9000b668:	e7eb      	b.n	9000b642 <netif_set_addr+0x2a>
9000b66a:	bf00      	nop
9000b66c:	9002abc8 	.word	0x9002abc8

9000b670 <netif_add>:
{
9000b670:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000b672:	9e07      	ldr	r6, [sp, #28]
  LWIP_ERROR("netif_add: invalid netif", netif != NULL, return NULL);
9000b674:	4604      	mov	r4, r0
9000b676:	b928      	cbnz	r0, 9000b684 <netif_add+0x14>
9000b678:	4829      	ldr	r0, [pc, #164]	@ (9000b720 <netif_add+0xb0>)
  LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
9000b67a:	f01d f88f 	bl	9002879c <iprintf>
  LWIP_ERROR("netif_add: invalid netif", netif != NULL, return NULL);
9000b67e:	2400      	movs	r4, #0
}
9000b680:	4620      	mov	r0, r4
9000b682:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
9000b684:	b90e      	cbnz	r6, 9000b68a <netif_add+0x1a>
9000b686:	4827      	ldr	r0, [pc, #156]	@ (9000b724 <netif_add+0xb4>)
9000b688:	e7f7      	b.n	9000b67a <netif_add+0xa>
  ip_addr_set_zero_ip4(&netif->ip_addr);
9000b68a:	2500      	movs	r5, #0
  netif->output = netif_null_output_ip4;
9000b68c:	4f26      	ldr	r7, [pc, #152]	@ (9000b728 <netif_add+0xb8>)
    ipaddr = ip_2_ip4(IP4_ADDR_ANY);
9000b68e:	f8df c0a4 	ldr.w	ip, [pc, #164]	@ 9000b734 <netif_add+0xc4>
  ip_addr_set_zero_ip4(&netif->gw);
9000b692:	60c5      	str	r5, [r0, #12]
  netif->mtu = 0;
9000b694:	8505      	strh	r5, [r0, #40]	@ 0x28
  netif_set_addr(netif, ipaddr, netmask, gw);
9000b696:	2b00      	cmp	r3, #0
9000b698:	bf08      	it	eq
9000b69a:	4663      	moveq	r3, ip
  netif->flags = 0;
9000b69c:	f880 5031 	strb.w	r5, [r0, #49]	@ 0x31
  netif_set_addr(netif, ipaddr, netmask, gw);
9000b6a0:	2a00      	cmp	r2, #0
9000b6a2:	bf08      	it	eq
9000b6a4:	4662      	moveq	r2, ip
  memset(netif->client_data, 0, sizeof(netif->client_data));
9000b6a6:	6245      	str	r5, [r0, #36]	@ 0x24
  netif_set_addr(netif, ipaddr, netmask, gw);
9000b6a8:	2900      	cmp	r1, #0
9000b6aa:	bf08      	it	eq
9000b6ac:	4661      	moveq	r1, ip
  netif->link_callback = NULL;
9000b6ae:	61c5      	str	r5, [r0, #28]
  netif->igmp_mac_filter = NULL;
9000b6b0:	6385      	str	r5, [r0, #56]	@ 0x38
  netif->output = netif_null_output_ip4;
9000b6b2:	6147      	str	r7, [r0, #20]
  ip_addr_set_zero_ip4(&netif->netmask);
9000b6b4:	e9c0 5501 	strd	r5, r5, [r0, #4]
  netif->state = state;
9000b6b8:	9d06      	ldr	r5, [sp, #24]
9000b6ba:	6205      	str	r5, [r0, #32]
  netif->num = netif_num;
9000b6bc:	4d1b      	ldr	r5, [pc, #108]	@ (9000b72c <netif_add+0xbc>)
9000b6be:	782f      	ldrb	r7, [r5, #0]
9000b6c0:	f880 7034 	strb.w	r7, [r0, #52]	@ 0x34
  netif->input = input;
9000b6c4:	9f08      	ldr	r7, [sp, #32]
9000b6c6:	6107      	str	r7, [r0, #16]
  netif_set_addr(netif, ipaddr, netmask, gw);
9000b6c8:	f7ff ffa6 	bl	9000b618 <netif_set_addr>
  if (init(netif) != ERR_OK) {
9000b6cc:	4620      	mov	r0, r4
9000b6ce:	47b0      	blx	r6
9000b6d0:	2800      	cmp	r0, #0
9000b6d2:	d1d4      	bne.n	9000b67e <netif_add+0xe>
      for (netif2 = netif_list; netif2 != NULL; netif2 = netif2->next) {
9000b6d4:	4916      	ldr	r1, [pc, #88]	@ (9000b730 <netif_add+0xc0>)
9000b6d6:	680e      	ldr	r6, [r1, #0]
      if (netif->num == 255) {
9000b6d8:	f894 3034 	ldrb.w	r3, [r4, #52]	@ 0x34
9000b6dc:	2bff      	cmp	r3, #255	@ 0xff
      for (netif2 = netif_list; netif2 != NULL; netif2 = netif2->next) {
9000b6de:	4633      	mov	r3, r6
        netif->num = 0;
9000b6e0:	bf08      	it	eq
9000b6e2:	f884 0034 	strbeq.w	r0, [r4, #52]	@ 0x34
        if (netif2->num == netif->num) {
9000b6e6:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
      for (netif2 = netif_list; netif2 != NULL; netif2 = netif2->next) {
9000b6ea:	b973      	cbnz	r3, 9000b70a <netif_add+0x9a>
  if (netif->num == 254) {
9000b6ec:	2afe      	cmp	r2, #254	@ 0xfe
  netif->next = netif_list;
9000b6ee:	6026      	str	r6, [r4, #0]
  netif_list = netif;
9000b6f0:	600c      	str	r4, [r1, #0]
    netif_num = (u8_t)(netif->num + 1);
9000b6f2:	bf1c      	itt	ne
9000b6f4:	3201      	addne	r2, #1
9000b6f6:	b2d3      	uxtbne	r3, r2
9000b6f8:	702b      	strb	r3, [r5, #0]
  if (netif->flags & NETIF_FLAG_IGMP) {
9000b6fa:	f894 3031 	ldrb.w	r3, [r4, #49]	@ 0x31
9000b6fe:	069b      	lsls	r3, r3, #26
9000b700:	d5be      	bpl.n	9000b680 <netif_add+0x10>
    igmp_start(netif);
9000b702:	4620      	mov	r0, r4
9000b704:	f7fe ff2c 	bl	9000a560 <igmp_start>
9000b708:	e7ba      	b.n	9000b680 <netif_add+0x10>
        if (netif2->num == netif->num) {
9000b70a:	f893 7034 	ldrb.w	r7, [r3, #52]	@ 0x34
9000b70e:	4297      	cmp	r7, r2
9000b710:	d103      	bne.n	9000b71a <netif_add+0xaa>
          netif->num++;
9000b712:	3201      	adds	r2, #1
9000b714:	f884 2034 	strb.w	r2, [r4, #52]	@ 0x34
    } while (netif2 != NULL);
9000b718:	e7de      	b.n	9000b6d8 <netif_add+0x68>
      for (netif2 = netif_list; netif2 != NULL; netif2 = netif2->next) {
9000b71a:	681b      	ldr	r3, [r3, #0]
9000b71c:	e7e5      	b.n	9000b6ea <netif_add+0x7a>
9000b71e:	bf00      	nop
9000b720:	9002a161 	.word	0x9002a161
9000b724:	9002a17a 	.word	0x9002a17a
9000b728:	9000b5a9 	.word	0x9000b5a9
9000b72c:	2001a46f 	.word	0x2001a46f
9000b730:	2001a474 	.word	0x2001a474
9000b734:	9002abc8 	.word	0x9002abc8

9000b738 <netif_set_default>:
  netif_default = netif;
9000b738:	4b01      	ldr	r3, [pc, #4]	@ (9000b740 <netif_set_default+0x8>)
9000b73a:	6018      	str	r0, [r3, #0]
}
9000b73c:	4770      	bx	lr
9000b73e:	bf00      	nop
9000b740:	2001a470 	.word	0x2001a470

9000b744 <netif_set_up>:
  LWIP_ERROR("netif_set_up: invalid netif", netif != NULL, return);
9000b744:	b910      	cbnz	r0, 9000b74c <netif_set_up+0x8>
9000b746:	4807      	ldr	r0, [pc, #28]	@ (9000b764 <netif_set_up+0x20>)
9000b748:	f01d b828 	b.w	9002879c <iprintf>
  if (!(netif->flags & NETIF_FLAG_UP)) {
9000b74c:	f890 2031 	ldrb.w	r2, [r0, #49]	@ 0x31
9000b750:	07d1      	lsls	r1, r2, #31
9000b752:	d406      	bmi.n	9000b762 <netif_set_up+0x1e>
    netif_set_flags(netif, NETIF_FLAG_UP);
9000b754:	f042 0201 	orr.w	r2, r2, #1
    netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV4 | NETIF_REPORT_TYPE_IPV6);
9000b758:	2103      	movs	r1, #3
    netif_set_flags(netif, NETIF_FLAG_UP);
9000b75a:	f880 2031 	strb.w	r2, [r0, #49]	@ 0x31
    netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV4 | NETIF_REPORT_TYPE_IPV6);
9000b75e:	f7ff bf26 	b.w	9000b5ae <netif_issue_reports>
}
9000b762:	4770      	bx	lr
9000b764:	9002a19c 	.word	0x9002a19c

9000b768 <netif_set_down>:
  LWIP_ERROR("netif_set_down: invalid netif", netif != NULL, return);
9000b768:	b910      	cbnz	r0, 9000b770 <netif_set_down+0x8>
9000b76a:	4808      	ldr	r0, [pc, #32]	@ (9000b78c <netif_set_down+0x24>)
9000b76c:	f01d b816 	b.w	9002879c <iprintf>
  if (netif->flags & NETIF_FLAG_UP) {
9000b770:	f890 2031 	ldrb.w	r2, [r0, #49]	@ 0x31
9000b774:	07d1      	lsls	r1, r2, #31
9000b776:	d507      	bpl.n	9000b788 <netif_set_down+0x20>
    netif_clear_flags(netif, NETIF_FLAG_UP);
9000b778:	f022 0101 	bic.w	r1, r2, #1
    if (netif->flags & NETIF_FLAG_ETHARP) {
9000b77c:	0713      	lsls	r3, r2, #28
    netif_clear_flags(netif, NETIF_FLAG_UP);
9000b77e:	f880 1031 	strb.w	r1, [r0, #49]	@ 0x31
    if (netif->flags & NETIF_FLAG_ETHARP) {
9000b782:	d501      	bpl.n	9000b788 <netif_set_down+0x20>
      etharp_cleanup_netif(netif);
9000b784:	f7fe bb44 	b.w	90009e10 <etharp_cleanup_netif>
}
9000b788:	4770      	bx	lr
9000b78a:	bf00      	nop
9000b78c:	9002a1b8 	.word	0x9002a1b8

9000b790 <netif_set_link_up>:
{
9000b790:	b510      	push	{r4, lr}
  LWIP_ERROR("netif_set_link_up: invalid netif", netif != NULL, return);
9000b792:	4604      	mov	r4, r0
9000b794:	b920      	cbnz	r0, 9000b7a0 <netif_set_link_up+0x10>
9000b796:	480b      	ldr	r0, [pc, #44]	@ (9000b7c4 <netif_set_link_up+0x34>)
}
9000b798:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  LWIP_ERROR("netif_set_link_up: invalid netif", netif != NULL, return);
9000b79c:	f01c bffe 	b.w	9002879c <iprintf>
  if (!(netif->flags & NETIF_FLAG_LINK_UP)) {
9000b7a0:	f890 3031 	ldrb.w	r3, [r0, #49]	@ 0x31
9000b7a4:	075a      	lsls	r2, r3, #29
9000b7a6:	d40c      	bmi.n	9000b7c2 <netif_set_link_up+0x32>
    netif_set_flags(netif, NETIF_FLAG_LINK_UP);
9000b7a8:	f043 0304 	orr.w	r3, r3, #4
    netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV4 | NETIF_REPORT_TYPE_IPV6);
9000b7ac:	2103      	movs	r1, #3
    netif_set_flags(netif, NETIF_FLAG_LINK_UP);
9000b7ae:	f880 3031 	strb.w	r3, [r0, #49]	@ 0x31
    netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV4 | NETIF_REPORT_TYPE_IPV6);
9000b7b2:	f7ff fefc 	bl	9000b5ae <netif_issue_reports>
    NETIF_LINK_CALLBACK(netif);
9000b7b6:	69e3      	ldr	r3, [r4, #28]
9000b7b8:	b11b      	cbz	r3, 9000b7c2 <netif_set_link_up+0x32>
9000b7ba:	4620      	mov	r0, r4
}
9000b7bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    NETIF_LINK_CALLBACK(netif);
9000b7c0:	4718      	bx	r3
}
9000b7c2:	bd10      	pop	{r4, pc}
9000b7c4:	9002a1d6 	.word	0x9002a1d6

9000b7c8 <netif_set_link_callback>:
  if (netif) {
9000b7c8:	b100      	cbz	r0, 9000b7cc <netif_set_link_callback+0x4>
    netif->link_callback = link_callback;
9000b7ca:	61c1      	str	r1, [r0, #28]
}
9000b7cc:	4770      	bx	lr
	...

9000b7d0 <netif_get_by_index>:
{
  struct netif *netif;

  LWIP_ASSERT_CORE_LOCKED();

  if (idx != NETIF_NO_INDEX) {
9000b7d0:	4603      	mov	r3, r0
9000b7d2:	b158      	cbz	r0, 9000b7ec <netif_get_by_index+0x1c>
    NETIF_FOREACH(netif) {
9000b7d4:	4a06      	ldr	r2, [pc, #24]	@ (9000b7f0 <netif_get_by_index+0x20>)
9000b7d6:	6810      	ldr	r0, [r2, #0]
9000b7d8:	b900      	cbnz	r0, 9000b7dc <netif_get_by_index+0xc>
9000b7da:	4770      	bx	lr
      if (idx == netif_get_index(netif)) {
9000b7dc:	f890 2034 	ldrb.w	r2, [r0, #52]	@ 0x34
9000b7e0:	3201      	adds	r2, #1
9000b7e2:	b2d2      	uxtb	r2, r2
9000b7e4:	429a      	cmp	r2, r3
9000b7e6:	d001      	beq.n	9000b7ec <netif_get_by_index+0x1c>
    NETIF_FOREACH(netif) {
9000b7e8:	6800      	ldr	r0, [r0, #0]
9000b7ea:	e7f5      	b.n	9000b7d8 <netif_get_by_index+0x8>
      }
    }
  }

  return NULL;
}
9000b7ec:	4770      	bx	lr
9000b7ee:	bf00      	nop
9000b7f0:	2001a474 	.word	0x2001a474

9000b7f4 <pbuf_add_header_impl>:
 * @return non-zero on failure, zero on success.
 *
 */
static u8_t
pbuf_add_header_impl(struct pbuf *p, size_t header_size_increment, u8_t force)
{
9000b7f4:	b530      	push	{r4, r5, lr}
  u16_t type_internal;
  void *payload;
  u16_t increment_magnitude;

  LWIP_ASSERT("p != NULL", p != NULL);
  if ((p == NULL) || (header_size_increment > 0xFFFF)) {
9000b7f6:	b1b0      	cbz	r0, 9000b826 <pbuf_add_header_impl+0x32>
9000b7f8:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b7fc:	d213      	bcs.n	9000b826 <pbuf_add_header_impl+0x32>
    return 1;
  }
  if (header_size_increment == 0) {
9000b7fe:	b909      	cbnz	r1, 9000b804 <pbuf_add_header_impl+0x10>
    return 0;
9000b800:	2000      	movs	r0, #0
  p->len = (u16_t)(p->len + increment_magnitude);
  p->tot_len = (u16_t)(p->tot_len + increment_magnitude);


  return 0;
}
9000b802:	bd30      	pop	{r4, r5, pc}
  if ((u16_t)(increment_magnitude + p->tot_len) < increment_magnitude) {
9000b804:	8903      	ldrh	r3, [r0, #8]
  increment_magnitude = (u16_t)header_size_increment;
9000b806:	b28c      	uxth	r4, r1
  if ((u16_t)(increment_magnitude + p->tot_len) < increment_magnitude) {
9000b808:	fa13 f381 	uxtah	r3, r3, r1
9000b80c:	b29b      	uxth	r3, r3
9000b80e:	429c      	cmp	r4, r3
9000b810:	d809      	bhi.n	9000b826 <pbuf_add_header_impl+0x32>
  if (type_internal & PBUF_TYPE_FLAG_STRUCT_DATA_CONTIGUOUS) {
9000b812:	f990 500c 	ldrsb.w	r5, [r0, #12]
9000b816:	2d00      	cmp	r5, #0
9000b818:	da07      	bge.n	9000b82a <pbuf_add_header_impl+0x36>
    payload = (u8_t *)p->payload - header_size_increment;
9000b81a:	6842      	ldr	r2, [r0, #4]
9000b81c:	1a51      	subs	r1, r2, r1
    if ((u8_t *)payload < (u8_t *)p + SIZEOF_STRUCT_PBUF) {
9000b81e:	f100 0210 	add.w	r2, r0, #16
9000b822:	4291      	cmp	r1, r2
9000b824:	d205      	bcs.n	9000b832 <pbuf_add_header_impl+0x3e>
    return 1;
9000b826:	2001      	movs	r0, #1
9000b828:	e7eb      	b.n	9000b802 <pbuf_add_header_impl+0xe>
    if (force) {
9000b82a:	2a00      	cmp	r2, #0
9000b82c:	d0fb      	beq.n	9000b826 <pbuf_add_header_impl+0x32>
      payload = (u8_t *)p->payload - header_size_increment;
9000b82e:	6842      	ldr	r2, [r0, #4]
9000b830:	1a51      	subs	r1, r2, r1
  p->len = (u16_t)(p->len + increment_magnitude);
9000b832:	8942      	ldrh	r2, [r0, #10]
  p->payload = payload;
9000b834:	6041      	str	r1, [r0, #4]
  p->len = (u16_t)(p->len + increment_magnitude);
9000b836:	4414      	add	r4, r2
  p->tot_len = (u16_t)(p->tot_len + increment_magnitude);
9000b838:	8103      	strh	r3, [r0, #8]
  p->len = (u16_t)(p->len + increment_magnitude);
9000b83a:	8144      	strh	r4, [r0, #10]
  return 0;
9000b83c:	e7e0      	b.n	9000b800 <pbuf_add_header_impl+0xc>

9000b83e <pbuf_alloc_reference>:
{
9000b83e:	b570      	push	{r4, r5, r6, lr}
9000b840:	4606      	mov	r6, r0
  p = (struct pbuf *)memp_malloc(MEMP_PBUF);
9000b842:	2008      	movs	r0, #8
{
9000b844:	460c      	mov	r4, r1
9000b846:	4615      	mov	r5, r2
  p = (struct pbuf *)memp_malloc(MEMP_PBUF);
9000b848:	f7ff fe86 	bl	9000b558 <memp_malloc>
  if (p == NULL) {
9000b84c:	b140      	cbz	r0, 9000b860 <pbuf_alloc_reference+0x22>
  p->next = NULL;
9000b84e:	2300      	movs	r3, #0
  p->tot_len = tot_len;
9000b850:	8104      	strh	r4, [r0, #8]
  p->len = len;
9000b852:	8144      	strh	r4, [r0, #10]
  p->flags = flags;
9000b854:	7343      	strb	r3, [r0, #13]
  p->type_internal = (u8_t)type;
9000b856:	7305      	strb	r5, [r0, #12]
  p->payload = payload;
9000b858:	e9c0 3600 	strd	r3, r6, [r0]
  p->ref = 1;
9000b85c:	2301      	movs	r3, #1
9000b85e:	81c3      	strh	r3, [r0, #14]
}
9000b860:	bd70      	pop	{r4, r5, r6, pc}

9000b862 <pbuf_alloced_custom>:
  if (LWIP_MEM_ALIGN_SIZE(offset) + length > payload_mem_len) {
9000b862:	3003      	adds	r0, #3
{
9000b864:	b570      	push	{r4, r5, r6, lr}
  if (LWIP_MEM_ALIGN_SIZE(offset) + length > payload_mem_len) {
9000b866:	f020 0403 	bic.w	r4, r0, #3
9000b86a:	f8bd 0014 	ldrh.w	r0, [sp, #20]
{
9000b86e:	9d04      	ldr	r5, [sp, #16]
  if (LWIP_MEM_ALIGN_SIZE(offset) + length > payload_mem_len) {
9000b870:	190e      	adds	r6, r1, r4
9000b872:	4286      	cmp	r6, r0
9000b874:	f04f 0000 	mov.w	r0, #0
9000b878:	d80b      	bhi.n	9000b892 <pbuf_alloced_custom+0x30>
  if (payload_mem != NULL) {
9000b87a:	b105      	cbz	r5, 9000b87e <pbuf_alloced_custom+0x1c>
    payload = (u8_t *)payload_mem + LWIP_MEM_ALIGN_SIZE(offset);
9000b87c:	4425      	add	r5, r4
  p->type_internal = (u8_t)type;
9000b87e:	731a      	strb	r2, [r3, #12]
  p->flags = flags;
9000b880:	2202      	movs	r2, #2
  p->tot_len = tot_len;
9000b882:	8119      	strh	r1, [r3, #8]
  p->flags = flags;
9000b884:	735a      	strb	r2, [r3, #13]
  p->ref = 1;
9000b886:	2201      	movs	r2, #1
  p->len = len;
9000b888:	8159      	strh	r1, [r3, #10]
  p->ref = 1;
9000b88a:	81da      	strh	r2, [r3, #14]
  p->payload = payload;
9000b88c:	e9c3 0500 	strd	r0, r5, [r3]
  return &p->pbuf;
9000b890:	4618      	mov	r0, r3
}
9000b892:	bd70      	pop	{r4, r5, r6, pc}

9000b894 <pbuf_add_header>:
 *
 */
u8_t
pbuf_add_header(struct pbuf *p, size_t header_size_increment)
{
  return pbuf_add_header_impl(p, header_size_increment, 0);
9000b894:	2200      	movs	r2, #0
9000b896:	f7ff bfad 	b.w	9000b7f4 <pbuf_add_header_impl>
	...

9000b89c <pbuf_remove_header>:
 * @return non-zero on failure, zero on success.
 *
 */
u8_t
pbuf_remove_header(struct pbuf *p, size_t header_size_decrement)
{
9000b89c:	b510      	push	{r4, lr}
  void *payload;
  u16_t increment_magnitude;

  LWIP_ASSERT("p != NULL", p != NULL);
  if ((p == NULL) || (header_size_decrement > 0xFFFF)) {
9000b89e:	b150      	cbz	r0, 9000b8b6 <pbuf_remove_header+0x1a>
9000b8a0:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b8a4:	d207      	bcs.n	9000b8b6 <pbuf_remove_header+0x1a>
    return 1;
  }
  if (header_size_decrement == 0) {
9000b8a6:	b181      	cbz	r1, 9000b8ca <pbuf_remove_header+0x2e>
    return 0;
  }

  increment_magnitude = (u16_t)header_size_decrement;
9000b8a8:	b28a      	uxth	r2, r1
  /* Check that we aren't going to move off the end of the pbuf */
  LWIP_ERROR("increment_magnitude <= p->len", (increment_magnitude <= p->len), return 1;);
9000b8aa:	8943      	ldrh	r3, [r0, #10]
9000b8ac:	4293      	cmp	r3, r2
9000b8ae:	d204      	bcs.n	9000b8ba <pbuf_remove_header+0x1e>
9000b8b0:	4807      	ldr	r0, [pc, #28]	@ (9000b8d0 <pbuf_remove_header+0x34>)
9000b8b2:	f01c ff73 	bl	9002879c <iprintf>
    return 1;
9000b8b6:	2001      	movs	r0, #1

  LWIP_DEBUGF(PBUF_DEBUG | LWIP_DBG_TRACE, ("pbuf_remove_header: old %p new %p (%"U16_F")\n",
              (void *)payload, (void *)p->payload, increment_magnitude));

  return 0;
}
9000b8b8:	bd10      	pop	{r4, pc}
  p->len = (u16_t)(p->len - increment_magnitude);
9000b8ba:	1a9b      	subs	r3, r3, r2
  p->payload = (u8_t *)p->payload + header_size_decrement;
9000b8bc:	6844      	ldr	r4, [r0, #4]
  p->len = (u16_t)(p->len - increment_magnitude);
9000b8be:	8143      	strh	r3, [r0, #10]
  p->payload = (u8_t *)p->payload + header_size_decrement;
9000b8c0:	440c      	add	r4, r1
  p->tot_len = (u16_t)(p->tot_len - increment_magnitude);
9000b8c2:	8903      	ldrh	r3, [r0, #8]
  p->payload = (u8_t *)p->payload + header_size_decrement;
9000b8c4:	6044      	str	r4, [r0, #4]
  p->tot_len = (u16_t)(p->tot_len - increment_magnitude);
9000b8c6:	1a9b      	subs	r3, r3, r2
9000b8c8:	8103      	strh	r3, [r0, #8]
    return 0;
9000b8ca:	2000      	movs	r0, #0
9000b8cc:	e7f4      	b.n	9000b8b8 <pbuf_remove_header+0x1c>
9000b8ce:	bf00      	nop
9000b8d0:	9002a1f7 	.word	0x9002a1f7

9000b8d4 <pbuf_header_force>:

static u8_t
pbuf_header_impl(struct pbuf *p, s16_t header_size_increment, u8_t force)
{
  if (header_size_increment < 0) {
9000b8d4:	1e0b      	subs	r3, r1, #0
9000b8d6:	da02      	bge.n	9000b8de <pbuf_header_force+0xa>
    return pbuf_remove_header(p, (size_t) - header_size_increment);
9000b8d8:	4259      	negs	r1, r3
9000b8da:	f7ff bfdf 	b.w	9000b89c <pbuf_remove_header>
  } else {
    return pbuf_add_header_impl(p, (size_t)header_size_increment, force);
9000b8de:	2201      	movs	r2, #1
9000b8e0:	f7ff bf88 	b.w	9000b7f4 <pbuf_add_header_impl>

9000b8e4 <pbuf_free>:
 * 1->1->1 becomes .......
 *
 */
u8_t
pbuf_free(struct pbuf *p)
{
9000b8e4:	b538      	push	{r3, r4, r5, lr}
  u8_t alloc_src;
  struct pbuf *q;
  u8_t count;

  if (p == NULL) {
9000b8e6:	b330      	cbz	r0, 9000b936 <pbuf_free+0x52>
  }
  LWIP_DEBUGF(PBUF_DEBUG | LWIP_DBG_TRACE, ("pbuf_free(%p)\n", (void *)p));

  PERF_START;

  count = 0;
9000b8e8:	2400      	movs	r4, #0
     * further protection. */
    SYS_ARCH_PROTECT(old_level);
    /* all pbufs in a chain are referenced at least once */
    LWIP_ASSERT("pbuf_free: p->ref > 0", p->ref > 0);
    /* decrease reference count (number of pointers to pbuf) */
    ref = --(p->ref);
9000b8ea:	7b83      	ldrb	r3, [r0, #14]
9000b8ec:	3b01      	subs	r3, #1
9000b8ee:	b2db      	uxtb	r3, r3
9000b8f0:	7383      	strb	r3, [r0, #14]
    SYS_ARCH_UNPROTECT(old_level);
    /* this pbuf is no longer referenced to? */
    if (ref == 0) {
9000b8f2:	b94b      	cbnz	r3, 9000b908 <pbuf_free+0x24>
      q = p->next;
      LWIP_DEBUGF( PBUF_DEBUG | LWIP_DBG_TRACE, ("pbuf_free: deallocating %p\n", (void *)p));
      alloc_src = pbuf_get_allocsrc(p);
#if LWIP_SUPPORT_CUSTOM_PBUF
      /* is this a custom pbuf? */
      if ((p->flags & PBUF_FLAG_IS_CUSTOM) != 0) {
9000b8f4:	7b42      	ldrb	r2, [r0, #13]
      q = p->next;
9000b8f6:	6805      	ldr	r5, [r0, #0]
      if ((p->flags & PBUF_FLAG_IS_CUSTOM) != 0) {
9000b8f8:	0792      	lsls	r2, r2, #30
      alloc_src = pbuf_get_allocsrc(p);
9000b8fa:	7b03      	ldrb	r3, [r0, #12]
      if ((p->flags & PBUF_FLAG_IS_CUSTOM) != 0) {
9000b8fc:	d508      	bpl.n	9000b910 <pbuf_free+0x2c>
        struct pbuf_custom *pc = (struct pbuf_custom *)p;
        LWIP_ASSERT("pc->custom_free_function != NULL", pc->custom_free_function != NULL);
        pc->custom_free_function(p);
9000b8fe:	6903      	ldr	r3, [r0, #16]
9000b900:	4798      	blx	r3
        } else {
          /* @todo: support freeing other types */
          LWIP_ASSERT("invalid pbuf type", 0);
        }
      }
      count++;
9000b902:	3401      	adds	r4, #1
9000b904:	b2e4      	uxtb	r4, r4
  while (p != NULL) {
9000b906:	b90d      	cbnz	r5, 9000b90c <pbuf_free+0x28>
    }
  }
  PERF_STOP("pbuf_free");
  /* return number of de-allocated pbufs */
  return count;
}
9000b908:	4620      	mov	r0, r4
9000b90a:	bd38      	pop	{r3, r4, r5, pc}
9000b90c:	4628      	mov	r0, r5
9000b90e:	e7ec      	b.n	9000b8ea <pbuf_free+0x6>
      alloc_src = pbuf_get_allocsrc(p);
9000b910:	f003 030f 	and.w	r3, r3, #15
        if (alloc_src == PBUF_TYPE_ALLOC_SRC_MASK_STD_MEMP_PBUF_POOL) {
9000b914:	2b02      	cmp	r3, #2
9000b916:	d104      	bne.n	9000b922 <pbuf_free+0x3e>
          memp_free(MEMP_PBUF_POOL, p);
9000b918:	4601      	mov	r1, r0
9000b91a:	2009      	movs	r0, #9
          memp_free(MEMP_PBUF, p);
9000b91c:	f7ff fe32 	bl	9000b584 <memp_free>
9000b920:	e7ef      	b.n	9000b902 <pbuf_free+0x1e>
        } else if (alloc_src == PBUF_TYPE_ALLOC_SRC_MASK_STD_MEMP_PBUF) {
9000b922:	2b01      	cmp	r3, #1
9000b924:	d102      	bne.n	9000b92c <pbuf_free+0x48>
          memp_free(MEMP_PBUF, p);
9000b926:	4601      	mov	r1, r0
9000b928:	2008      	movs	r0, #8
9000b92a:	e7f7      	b.n	9000b91c <pbuf_free+0x38>
        } else if (alloc_src == PBUF_TYPE_ALLOC_SRC_MASK_STD_HEAP) {
9000b92c:	2b00      	cmp	r3, #0
9000b92e:	d1e8      	bne.n	9000b902 <pbuf_free+0x1e>
          mem_free(p);
9000b930:	f7ff fcce 	bl	9000b2d0 <mem_free>
9000b934:	e7e5      	b.n	9000b902 <pbuf_free+0x1e>
    return 0;
9000b936:	4604      	mov	r4, r0
9000b938:	e7e6      	b.n	9000b908 <pbuf_free+0x24>
	...

9000b93c <pbuf_alloc>:
  switch (type) {
9000b93c:	f5b2 7fc1 	cmp.w	r2, #386	@ 0x182
{
9000b940:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000b944:	4607      	mov	r7, r0
9000b946:	460d      	mov	r5, r1
  u16_t offset = (u16_t)layer;
9000b948:	4606      	mov	r6, r0
  switch (type) {
9000b94a:	d010      	beq.n	9000b96e <pbuf_alloc+0x32>
9000b94c:	d808      	bhi.n	9000b960 <pbuf_alloc+0x24>
9000b94e:	f022 0340 	bic.w	r3, r2, #64	@ 0x40
9000b952:	2b01      	cmp	r3, #1
9000b954:	d107      	bne.n	9000b966 <pbuf_alloc+0x2a>
      p = pbuf_alloc_reference(NULL, length, type);
9000b956:	2000      	movs	r0, #0
}
9000b958:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
      p = pbuf_alloc_reference(NULL, length, type);
9000b95c:	f7ff bf6f 	b.w	9000b83e <pbuf_alloc_reference>
  switch (type) {
9000b960:	f5b2 7f20 	cmp.w	r2, #640	@ 0x280
9000b964:	d032      	beq.n	9000b9cc <pbuf_alloc+0x90>
          return NULL;
9000b966:	2400      	movs	r4, #0
}
9000b968:	4620      	mov	r0, r4
9000b96a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  switch (type) {
9000b96e:	2000      	movs	r0, #0
        qlen = LWIP_MIN(rem_len, (u16_t)(PBUF_POOL_BUFSIZE_ALIGNED - LWIP_MEM_ALIGN_SIZE(offset)));
9000b970:	f240 57f4 	movw	r7, #1524	@ 0x5f4
  p->type_internal = (u8_t)type;
9000b974:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 9000ba10 <pbuf_alloc+0xd4>
  switch (type) {
9000b978:	4604      	mov	r4, r0
        q = (struct pbuf *)memp_malloc(MEMP_PBUF_POOL);
9000b97a:	4681      	mov	r9, r0
9000b97c:	2009      	movs	r0, #9
9000b97e:	f7ff fdeb 	bl	9000b558 <memp_malloc>
        if (q == NULL) {
9000b982:	b928      	cbnz	r0, 9000b990 <pbuf_alloc+0x54>
          if (p) {
9000b984:	2c00      	cmp	r4, #0
9000b986:	d0ee      	beq.n	9000b966 <pbuf_alloc+0x2a>
            pbuf_free(p);
9000b988:	4620      	mov	r0, r4
9000b98a:	f7ff ffab 	bl	9000b8e4 <pbuf_free>
9000b98e:	e7ea      	b.n	9000b966 <pbuf_alloc+0x2a>
        qlen = LWIP_MIN(rem_len, (u16_t)(PBUF_POOL_BUFSIZE_ALIGNED - LWIP_MEM_ALIGN_SIZE(offset)));
9000b990:	1cf3      	adds	r3, r6, #3
        pbuf_init_alloced_pbuf(q, LWIP_MEM_ALIGN((void *)((u8_t *)q + SIZEOF_STRUCT_PBUF + offset)),
9000b992:	4406      	add	r6, r0
  p->next = NULL;
9000b994:	2200      	movs	r2, #0
  p->tot_len = tot_len;
9000b996:	8105      	strh	r5, [r0, #8]
        qlen = LWIP_MIN(rem_len, (u16_t)(PBUF_POOL_BUFSIZE_ALIGNED - LWIP_MEM_ALIGN_SIZE(offset)));
9000b998:	f023 0303 	bic.w	r3, r3, #3
        pbuf_init_alloced_pbuf(q, LWIP_MEM_ALIGN((void *)((u8_t *)q + SIZEOF_STRUCT_PBUF + offset)),
9000b99c:	3613      	adds	r6, #19
  p->next = NULL;
9000b99e:	6002      	str	r2, [r0, #0]
        qlen = LWIP_MIN(rem_len, (u16_t)(PBUF_POOL_BUFSIZE_ALIGNED - LWIP_MEM_ALIGN_SIZE(offset)));
9000b9a0:	1afb      	subs	r3, r7, r3
        pbuf_init_alloced_pbuf(q, LWIP_MEM_ALIGN((void *)((u8_t *)q + SIZEOF_STRUCT_PBUF + offset)),
9000b9a2:	f026 0603 	bic.w	r6, r6, #3
  p->type_internal = (u8_t)type;
9000b9a6:	f8c0 800c 	str.w	r8, [r0, #12]
        qlen = LWIP_MIN(rem_len, (u16_t)(PBUF_POOL_BUFSIZE_ALIGNED - LWIP_MEM_ALIGN_SIZE(offset)));
9000b9aa:	b29b      	uxth	r3, r3
  p->payload = payload;
9000b9ac:	6046      	str	r6, [r0, #4]
        qlen = LWIP_MIN(rem_len, (u16_t)(PBUF_POOL_BUFSIZE_ALIGNED - LWIP_MEM_ALIGN_SIZE(offset)));
9000b9ae:	42ab      	cmp	r3, r5
9000b9b0:	bf28      	it	cs
9000b9b2:	462b      	movcs	r3, r5
  p->len = len;
9000b9b4:	8143      	strh	r3, [r0, #10]
        if (p == NULL) {
9000b9b6:	b13c      	cbz	r4, 9000b9c8 <pbuf_alloc+0x8c>
          last->next = q;
9000b9b8:	f8c9 0000 	str.w	r0, [r9]
        rem_len = (u16_t)(rem_len - qlen);
9000b9bc:	1aeb      	subs	r3, r5, r3
        offset = 0;
9000b9be:	2600      	movs	r6, #0
        rem_len = (u16_t)(rem_len - qlen);
9000b9c0:	b29d      	uxth	r5, r3
      } while (rem_len > 0);
9000b9c2:	2d00      	cmp	r5, #0
9000b9c4:	d1d9      	bne.n	9000b97a <pbuf_alloc+0x3e>
9000b9c6:	e7cf      	b.n	9000b968 <pbuf_alloc+0x2c>
          p = q;
9000b9c8:	4604      	mov	r4, r0
9000b9ca:	e7f7      	b.n	9000b9bc <pbuf_alloc+0x80>
      u16_t payload_len = (u16_t)(LWIP_MEM_ALIGN_SIZE(offset) + LWIP_MEM_ALIGN_SIZE(length));
9000b9cc:	1cc3      	adds	r3, r0, #3
9000b9ce:	1cca      	adds	r2, r1, #3
9000b9d0:	f023 0303 	bic.w	r3, r3, #3
9000b9d4:	f022 0203 	bic.w	r2, r2, #3
9000b9d8:	4413      	add	r3, r2
9000b9da:	b29b      	uxth	r3, r3
      mem_size_t alloc_len = (mem_size_t)(LWIP_MEM_ALIGN_SIZE(SIZEOF_STRUCT_PBUF) + payload_len);
9000b9dc:	f103 0010 	add.w	r0, r3, #16
      if ((payload_len < LWIP_MEM_ALIGN_SIZE(length)) ||
9000b9e0:	4293      	cmp	r3, r2
      mem_size_t alloc_len = (mem_size_t)(LWIP_MEM_ALIGN_SIZE(SIZEOF_STRUCT_PBUF) + payload_len);
9000b9e2:	b280      	uxth	r0, r0
      if ((payload_len < LWIP_MEM_ALIGN_SIZE(length)) ||
9000b9e4:	d3bf      	bcc.n	9000b966 <pbuf_alloc+0x2a>
9000b9e6:	4282      	cmp	r2, r0
9000b9e8:	d8bd      	bhi.n	9000b966 <pbuf_alloc+0x2a>
      p = (struct pbuf *)mem_malloc(alloc_len);
9000b9ea:	f7ff fd39 	bl	9000b460 <mem_malloc>
      if (p == NULL) {
9000b9ee:	4604      	mov	r4, r0
9000b9f0:	2800      	cmp	r0, #0
9000b9f2:	d0b9      	beq.n	9000b968 <pbuf_alloc+0x2c>
      pbuf_init_alloced_pbuf(p, LWIP_MEM_ALIGN((void *)((u8_t *)p + SIZEOF_STRUCT_PBUF + offset)),
9000b9f4:	4407      	add	r7, r0
  p->next = NULL;
9000b9f6:	2300      	movs	r3, #0
  p->tot_len = tot_len;
9000b9f8:	8105      	strh	r5, [r0, #8]
      pbuf_init_alloced_pbuf(p, LWIP_MEM_ALIGN((void *)((u8_t *)p + SIZEOF_STRUCT_PBUF + offset)),
9000b9fa:	3713      	adds	r7, #19
  p->next = NULL;
9000b9fc:	6003      	str	r3, [r0, #0]
  p->type_internal = (u8_t)type;
9000b9fe:	4b03      	ldr	r3, [pc, #12]	@ (9000ba0c <pbuf_alloc+0xd0>)
      pbuf_init_alloced_pbuf(p, LWIP_MEM_ALIGN((void *)((u8_t *)p + SIZEOF_STRUCT_PBUF + offset)),
9000ba00:	f027 0703 	bic.w	r7, r7, #3
  p->len = len;
9000ba04:	8145      	strh	r5, [r0, #10]
  p->type_internal = (u8_t)type;
9000ba06:	60c3      	str	r3, [r0, #12]
  p->payload = payload;
9000ba08:	6047      	str	r7, [r0, #4]
}
9000ba0a:	e7ad      	b.n	9000b968 <pbuf_alloc+0x2c>
9000ba0c:	00010080 	.word	0x00010080
9000ba10:	00010082 	.word	0x00010082

9000ba14 <pbuf_realloc>:
{
9000ba14:	b538      	push	{r3, r4, r5, lr}
  if (new_len >= p->tot_len) {
9000ba16:	8903      	ldrh	r3, [r0, #8]
{
9000ba18:	4604      	mov	r4, r0
9000ba1a:	460d      	mov	r5, r1
  if (new_len >= p->tot_len) {
9000ba1c:	428b      	cmp	r3, r1
9000ba1e:	d91b      	bls.n	9000ba58 <pbuf_realloc+0x44>
    q->tot_len = (u16_t)(q->tot_len - shrink);
9000ba20:	1aca      	subs	r2, r1, r3
  while (rem_len > q->len) {
9000ba22:	8963      	ldrh	r3, [r4, #10]
9000ba24:	42ab      	cmp	r3, r5
9000ba26:	d318      	bcc.n	9000ba5a <pbuf_realloc+0x46>
  if (pbuf_match_allocsrc(q, PBUF_TYPE_ALLOC_SRC_MASK_STD_HEAP) && (rem_len != q->len)
9000ba28:	7b22      	ldrb	r2, [r4, #12]
9000ba2a:	0712      	lsls	r2, r2, #28
9000ba2c:	d10c      	bne.n	9000ba48 <pbuf_realloc+0x34>
9000ba2e:	42ab      	cmp	r3, r5
9000ba30:	d00a      	beq.n	9000ba48 <pbuf_realloc+0x34>
      && ((q->flags & PBUF_FLAG_IS_CUSTOM) == 0)
9000ba32:	7b63      	ldrb	r3, [r4, #13]
9000ba34:	079b      	lsls	r3, r3, #30
9000ba36:	d407      	bmi.n	9000ba48 <pbuf_realloc+0x34>
    q = (struct pbuf *)mem_trim(q, (mem_size_t)(((u8_t *)q->payload - (u8_t *)q) + rem_len));
9000ba38:	6861      	ldr	r1, [r4, #4]
9000ba3a:	4620      	mov	r0, r4
9000ba3c:	1b09      	subs	r1, r1, r4
9000ba3e:	4429      	add	r1, r5
9000ba40:	b289      	uxth	r1, r1
9000ba42:	f7ff fca7 	bl	9000b394 <mem_trim>
9000ba46:	4604      	mov	r4, r0
  if (q->next != NULL) {
9000ba48:	6820      	ldr	r0, [r4, #0]
  q->len = rem_len;
9000ba4a:	8165      	strh	r5, [r4, #10]
  q->tot_len = q->len;
9000ba4c:	8125      	strh	r5, [r4, #8]
  if (q->next != NULL) {
9000ba4e:	b108      	cbz	r0, 9000ba54 <pbuf_realloc+0x40>
    pbuf_free(q->next);
9000ba50:	f7ff ff48 	bl	9000b8e4 <pbuf_free>
  q->next = NULL;
9000ba54:	2300      	movs	r3, #0
9000ba56:	6023      	str	r3, [r4, #0]
}
9000ba58:	bd38      	pop	{r3, r4, r5, pc}
    rem_len = (u16_t)(rem_len - q->len);
9000ba5a:	1aeb      	subs	r3, r5, r3
9000ba5c:	b29d      	uxth	r5, r3
    q->tot_len = (u16_t)(q->tot_len - shrink);
9000ba5e:	8923      	ldrh	r3, [r4, #8]
9000ba60:	4413      	add	r3, r2
9000ba62:	8123      	strh	r3, [r4, #8]
    q = q->next;
9000ba64:	6824      	ldr	r4, [r4, #0]
9000ba66:	e7dc      	b.n	9000ba22 <pbuf_realloc+0xe>

9000ba68 <pbuf_clen>:
pbuf_clen(const struct pbuf *p)
{
  u16_t len;

  len = 0;
  while (p != NULL) {
9000ba68:	2300      	movs	r3, #0
9000ba6a:	1c5a      	adds	r2, r3, #1
9000ba6c:	b908      	cbnz	r0, 9000ba72 <pbuf_clen+0xa>
    ++len;
    p = p->next;
  }
  return len;
}
9000ba6e:	b298      	uxth	r0, r3
9000ba70:	4770      	bx	lr
    p = p->next;
9000ba72:	6800      	ldr	r0, [r0, #0]
9000ba74:	4613      	mov	r3, r2
9000ba76:	e7f8      	b.n	9000ba6a <pbuf_clen+0x2>

9000ba78 <pbuf_ref>:
 */
void
pbuf_ref(struct pbuf *p)
{
  /* pbuf given? */
  if (p != NULL) {
9000ba78:	b110      	cbz	r0, 9000ba80 <pbuf_ref+0x8>
    SYS_ARCH_SET(p->ref, (LWIP_PBUF_REF_T)(p->ref + 1));
9000ba7a:	7b83      	ldrb	r3, [r0, #14]
9000ba7c:	3301      	adds	r3, #1
9000ba7e:	7383      	strb	r3, [r0, #14]
    LWIP_ASSERT("pbuf ref overflow", p->ref > 0);
  }
}
9000ba80:	4770      	bx	lr
	...

9000ba84 <pbuf_cat>:
 *
 * @see pbuf_chain()
 */
void
pbuf_cat(struct pbuf *h, struct pbuf *t)
{
9000ba84:	b410      	push	{r4}
  struct pbuf *p;

  LWIP_ERROR("(h != NULL) && (t != NULL) (programmer violates API)",
9000ba86:	b100      	cbz	r0, 9000ba8a <pbuf_cat+0x6>
9000ba88:	b929      	cbnz	r1, 9000ba96 <pbuf_cat+0x12>
9000ba8a:	4809      	ldr	r0, [pc, #36]	@ (9000bab0 <pbuf_cat+0x2c>)
  /* chain last pbuf of head (p) with first of tail (t) */
  p->next = t;
  /* p->next now references t, but the caller will drop its reference to t,
   * so netto there is no change to the reference count of t.
   */
}
9000ba8c:	f85d 4b04 	ldr.w	r4, [sp], #4
  LWIP_ERROR("(h != NULL) && (t != NULL) (programmer violates API)",
9000ba90:	f01c be84 	b.w	9002879c <iprintf>
  for (p = h; p->next != NULL; p = p->next) {
9000ba94:	4610      	mov	r0, r2
    p->tot_len = (u16_t)(p->tot_len + t->tot_len);
9000ba96:	8903      	ldrh	r3, [r0, #8]
9000ba98:	890c      	ldrh	r4, [r1, #8]
  for (p = h; p->next != NULL; p = p->next) {
9000ba9a:	6802      	ldr	r2, [r0, #0]
    p->tot_len = (u16_t)(p->tot_len + t->tot_len);
9000ba9c:	4423      	add	r3, r4
9000ba9e:	b29b      	uxth	r3, r3
9000baa0:	8103      	strh	r3, [r0, #8]
  for (p = h; p->next != NULL; p = p->next) {
9000baa2:	2a00      	cmp	r2, #0
9000baa4:	d1f6      	bne.n	9000ba94 <pbuf_cat+0x10>
}
9000baa6:	f85d 4b04 	ldr.w	r4, [sp], #4
  p->next = t;
9000baaa:	6001      	str	r1, [r0, #0]
}
9000baac:	4770      	bx	lr
9000baae:	bf00      	nop
9000bab0:	9002a215 	.word	0x9002a215

9000bab4 <pbuf_copy>:
 *         ERR_ARG if one of the pbufs is NULL or p_to is not big
 *                 enough to hold p_from
 */
err_t
pbuf_copy(struct pbuf *p_to, const struct pbuf *p_from)
{
9000bab4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000bab8:	460c      	mov	r4, r1

  LWIP_DEBUGF(PBUF_DEBUG | LWIP_DBG_TRACE, ("pbuf_copy(%p, %p)\n",
              (const void *)p_to, (const void *)p_from));

  /* is the target big enough to hold the source? */
  LWIP_ERROR("pbuf_copy: target not big enough to hold source", ((p_to != NULL) &&
9000baba:	4605      	mov	r5, r0
9000babc:	b120      	cbz	r0, 9000bac8 <pbuf_copy+0x14>
9000babe:	b119      	cbz	r1, 9000bac8 <pbuf_copy+0x14>
9000bac0:	8902      	ldrh	r2, [r0, #8]
9000bac2:	890b      	ldrh	r3, [r1, #8]
9000bac4:	429a      	cmp	r2, r3
9000bac6:	d206      	bcs.n	9000bad6 <pbuf_copy+0x22>
9000bac8:	4820      	ldr	r0, [pc, #128]	@ (9000bb4c <pbuf_copy+0x98>)
    }
    if (offset_to == p_to->len) {
      /* on to next p_to (if any) */
      offset_to = 0;
      p_to = p_to->next;
      LWIP_ERROR("p_to != NULL", (p_to != NULL) || (p_from == NULL), return ERR_ARG;);
9000baca:	f01c fe67 	bl	9002879c <iprintf>
  LWIP_ERROR("pbuf_copy: target not big enough to hold source", ((p_to != NULL) &&
9000bace:	f06f 000f 	mvn.w	r0, #15
                 (p_to->next == NULL), return ERR_VAL;);
    }
  } while (p_from);
  LWIP_DEBUGF(PBUF_DEBUG | LWIP_DBG_TRACE, ("pbuf_copy: end of chain reached.\n"));
  return ERR_OK;
}
9000bad2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  size_t offset_to = 0, offset_from = 0, len;
9000bad6:	2600      	movs	r6, #0
9000bad8:	46b0      	mov	r8, r6
    if ((p_to->len - offset_to) >= (p_from->len - offset_from)) {
9000bada:	8963      	ldrh	r3, [r4, #10]
9000badc:	896f      	ldrh	r7, [r5, #10]
9000bade:	1b9b      	subs	r3, r3, r6
    MEMCPY((u8_t *)p_to->payload + offset_to, (u8_t *)p_from->payload + offset_from, len);
9000bae0:	6861      	ldr	r1, [r4, #4]
    if ((p_to->len - offset_to) >= (p_from->len - offset_from)) {
9000bae2:	eba7 0708 	sub.w	r7, r7, r8
    MEMCPY((u8_t *)p_to->payload + offset_to, (u8_t *)p_from->payload + offset_from, len);
9000bae6:	6868      	ldr	r0, [r5, #4]
9000bae8:	4431      	add	r1, r6
    if ((p_to->len - offset_to) >= (p_from->len - offset_from)) {
9000baea:	429f      	cmp	r7, r3
    MEMCPY((u8_t *)p_to->payload + offset_to, (u8_t *)p_from->payload + offset_from, len);
9000baec:	4440      	add	r0, r8
    if ((p_to->len - offset_to) >= (p_from->len - offset_from)) {
9000baee:	bf28      	it	cs
9000baf0:	461f      	movcs	r7, r3
    MEMCPY((u8_t *)p_to->payload + offset_to, (u8_t *)p_from->payload + offset_from, len);
9000baf2:	463a      	mov	r2, r7
    offset_from += len;
9000baf4:	443e      	add	r6, r7
    MEMCPY((u8_t *)p_to->payload + offset_to, (u8_t *)p_from->payload + offset_from, len);
9000baf6:	f01c ffac 	bl	90028a52 <memcpy>
    if (offset_from >= p_from->len) {
9000bafa:	8963      	ldrh	r3, [r4, #10]
    offset_to += len;
9000bafc:	44b8      	add	r8, r7
    if (offset_from >= p_from->len) {
9000bafe:	42b3      	cmp	r3, r6
    if (offset_to == p_to->len) {
9000bb00:	896b      	ldrh	r3, [r5, #10]
      p_from = p_from->next;
9000bb02:	bf9c      	itt	ls
9000bb04:	6824      	ldrls	r4, [r4, #0]
      offset_from = 0;
9000bb06:	2600      	movls	r6, #0
    if (offset_to == p_to->len) {
9000bb08:	4543      	cmp	r3, r8
9000bb0a:	d106      	bne.n	9000bb1a <pbuf_copy+0x66>
      p_to = p_to->next;
9000bb0c:	682d      	ldr	r5, [r5, #0]
      LWIP_ERROR("p_to != NULL", (p_to != NULL) || (p_from == NULL), return ERR_ARG;);
9000bb0e:	b915      	cbnz	r5, 9000bb16 <pbuf_copy+0x62>
9000bb10:	b1cc      	cbz	r4, 9000bb46 <pbuf_copy+0x92>
9000bb12:	480f      	ldr	r0, [pc, #60]	@ (9000bb50 <pbuf_copy+0x9c>)
9000bb14:	e7d9      	b.n	9000baca <pbuf_copy+0x16>
      offset_to = 0;
9000bb16:	f04f 0800 	mov.w	r8, #0
    if ((p_from != NULL) && (p_from->len == p_from->tot_len)) {
9000bb1a:	b15c      	cbz	r4, 9000bb34 <pbuf_copy+0x80>
9000bb1c:	8962      	ldrh	r2, [r4, #10]
9000bb1e:	8923      	ldrh	r3, [r4, #8]
9000bb20:	429a      	cmp	r2, r3
9000bb22:	d107      	bne.n	9000bb34 <pbuf_copy+0x80>
      LWIP_ERROR("pbuf_copy() does not allow packet queues!",
9000bb24:	6823      	ldr	r3, [r4, #0]
9000bb26:	b12b      	cbz	r3, 9000bb34 <pbuf_copy+0x80>
9000bb28:	480a      	ldr	r0, [pc, #40]	@ (9000bb54 <pbuf_copy+0xa0>)
9000bb2a:	f01c fe37 	bl	9002879c <iprintf>
9000bb2e:	f06f 0005 	mvn.w	r0, #5
9000bb32:	e7ce      	b.n	9000bad2 <pbuf_copy+0x1e>
    if ((p_to != NULL) && (p_to->len == p_to->tot_len)) {
9000bb34:	896a      	ldrh	r2, [r5, #10]
9000bb36:	892b      	ldrh	r3, [r5, #8]
9000bb38:	429a      	cmp	r2, r3
9000bb3a:	d102      	bne.n	9000bb42 <pbuf_copy+0x8e>
      LWIP_ERROR("pbuf_copy() does not allow packet queues!",
9000bb3c:	682b      	ldr	r3, [r5, #0]
9000bb3e:	2b00      	cmp	r3, #0
9000bb40:	d1f2      	bne.n	9000bb28 <pbuf_copy+0x74>
  } while (p_from);
9000bb42:	2c00      	cmp	r4, #0
9000bb44:	d1c9      	bne.n	9000bada <pbuf_copy+0x26>
  return ERR_OK;
9000bb46:	4620      	mov	r0, r4
9000bb48:	e7c3      	b.n	9000bad2 <pbuf_copy+0x1e>
9000bb4a:	bf00      	nop
9000bb4c:	9002a24a 	.word	0x9002a24a
9000bb50:	9002a27a 	.word	0x9002a27a
9000bb54:	9002a287 	.word	0x9002a287

9000bb58 <pbuf_copy_partial>:
 * @param offset offset into the packet buffer from where to begin copying len bytes
 * @return the number of bytes copied, or 0 on failure
 */
u16_t
pbuf_copy_partial(const struct pbuf *buf, void *dataptr, u16_t len, u16_t offset)
{
9000bb58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000bb5c:	460f      	mov	r7, r1
9000bb5e:	4690      	mov	r8, r2
  const struct pbuf *p;
  u16_t left = 0;
  u16_t buf_copy_len;
  u16_t copied_total = 0;

  LWIP_ERROR("pbuf_copy_partial: invalid buf", (buf != NULL), return 0;);
9000bb60:	4605      	mov	r5, r0
9000bb62:	b930      	cbnz	r0, 9000bb72 <pbuf_copy_partial+0x1a>
9000bb64:	4816      	ldr	r0, [pc, #88]	@ (9000bbc0 <pbuf_copy_partial+0x68>)
9000bb66:	2600      	movs	r6, #0
  LWIP_ERROR("pbuf_copy_partial: invalid dataptr", (dataptr != NULL), return 0;);
9000bb68:	f01c fe18 	bl	9002879c <iprintf>
      len = (u16_t)(len - buf_copy_len);
      offset = 0;
    }
  }
  return copied_total;
}
9000bb6c:	4630      	mov	r0, r6
9000bb6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  LWIP_ERROR("pbuf_copy_partial: invalid dataptr", (dataptr != NULL), return 0;);
9000bb72:	bb11      	cbnz	r1, 9000bbba <pbuf_copy_partial+0x62>
9000bb74:	4813      	ldr	r0, [pc, #76]	@ (9000bbc4 <pbuf_copy_partial+0x6c>)
9000bb76:	e7f6      	b.n	9000bb66 <pbuf_copy_partial+0xe>
    if ((offset != 0) && (offset >= p->len)) {
9000bb78:	896c      	ldrh	r4, [r5, #10]
9000bb7a:	b13b      	cbz	r3, 9000bb8c <pbuf_copy_partial+0x34>
9000bb7c:	429c      	cmp	r4, r3
9000bb7e:	d805      	bhi.n	9000bb8c <pbuf_copy_partial+0x34>
      offset = (u16_t)(offset - p->len);
9000bb80:	1b1b      	subs	r3, r3, r4
  for (p = buf; len != 0 && p != NULL; p = p->next) {
9000bb82:	682d      	ldr	r5, [r5, #0]
      offset = (u16_t)(offset - p->len);
9000bb84:	b29b      	uxth	r3, r3
  for (p = buf; len != 0 && p != NULL; p = p->next) {
9000bb86:	2d00      	cmp	r5, #0
9000bb88:	d1f6      	bne.n	9000bb78 <pbuf_copy_partial+0x20>
9000bb8a:	e7ef      	b.n	9000bb6c <pbuf_copy_partial+0x14>
      buf_copy_len = (u16_t)(p->len - offset);
9000bb8c:	1ae4      	subs	r4, r4, r3
      MEMCPY(&((char *)dataptr)[left], &((char *)p->payload)[offset], buf_copy_len);
9000bb8e:	6869      	ldr	r1, [r5, #4]
9000bb90:	19b8      	adds	r0, r7, r6
      if (buf_copy_len > len) {
9000bb92:	b2a4      	uxth	r4, r4
      MEMCPY(&((char *)dataptr)[left], &((char *)p->payload)[offset], buf_copy_len);
9000bb94:	4419      	add	r1, r3
      if (buf_copy_len > len) {
9000bb96:	4544      	cmp	r4, r8
9000bb98:	bf28      	it	cs
9000bb9a:	4644      	movcs	r4, r8
      MEMCPY(&((char *)dataptr)[left], &((char *)p->payload)[offset], buf_copy_len);
9000bb9c:	4622      	mov	r2, r4
      copied_total = (u16_t)(copied_total + buf_copy_len);
9000bb9e:	4426      	add	r6, r4
      len = (u16_t)(len - buf_copy_len);
9000bba0:	eba8 0404 	sub.w	r4, r8, r4
      MEMCPY(&((char *)dataptr)[left], &((char *)p->payload)[offset], buf_copy_len);
9000bba4:	f01c ff55 	bl	90028a52 <memcpy>
      copied_total = (u16_t)(copied_total + buf_copy_len);
9000bba8:	b2b6      	uxth	r6, r6
  for (p = buf; len != 0 && p != NULL; p = p->next) {
9000bbaa:	682d      	ldr	r5, [r5, #0]
      len = (u16_t)(len - buf_copy_len);
9000bbac:	fa1f f884 	uxth.w	r8, r4
  for (p = buf; len != 0 && p != NULL; p = p->next) {
9000bbb0:	2300      	movs	r3, #0
9000bbb2:	f1b8 0f00 	cmp.w	r8, #0
9000bbb6:	d1e6      	bne.n	9000bb86 <pbuf_copy_partial+0x2e>
9000bbb8:	e7d8      	b.n	9000bb6c <pbuf_copy_partial+0x14>
  u16_t left = 0;
9000bbba:	2600      	movs	r6, #0
9000bbbc:	e7f9      	b.n	9000bbb2 <pbuf_copy_partial+0x5a>
9000bbbe:	bf00      	nop
9000bbc0:	9002a2b1 	.word	0x9002a2b1
9000bbc4:	9002a2d0 	.word	0x9002a2d0

9000bbc8 <pbuf_clone>:
 *
 * @return a new pbuf or NULL if allocation fails
 */
struct pbuf *
pbuf_clone(pbuf_layer layer, pbuf_type type, struct pbuf *p)
{
9000bbc8:	b538      	push	{r3, r4, r5, lr}
9000bbca:	4615      	mov	r5, r2
  struct pbuf *q;
  err_t err;
  q = pbuf_alloc(layer, p->tot_len, type);
9000bbcc:	460a      	mov	r2, r1
9000bbce:	8929      	ldrh	r1, [r5, #8]
9000bbd0:	f7ff feb4 	bl	9000b93c <pbuf_alloc>
  if (q == NULL) {
9000bbd4:	4604      	mov	r4, r0
9000bbd6:	b110      	cbz	r0, 9000bbde <pbuf_clone+0x16>
    return NULL;
  }
  err = pbuf_copy(q, p);
9000bbd8:	4629      	mov	r1, r5
9000bbda:	f7ff ff6b 	bl	9000bab4 <pbuf_copy>
  LWIP_UNUSED_ARG(err); /* in case of LWIP_NOASSERT */
  LWIP_ASSERT("pbuf_copy failed", err == ERR_OK);
  return q;
}
9000bbde:	4620      	mov	r0, r4
9000bbe0:	bd38      	pop	{r3, r4, r5, pc}
	...

9000bbe4 <tcp_new_port>:
 *
 * @return a new (free) local TCP port number
 */
static u16_t
tcp_new_port(void)
{
9000bbe4:	b5f0      	push	{r4, r5, r6, r7, lr}
9000bbe6:	4c11      	ldr	r4, [pc, #68]	@ (9000bc2c <tcp_new_port+0x48>)
9000bbe8:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
  u16_t n = 0;
  struct tcp_pcb *pcb;

again:
  tcp_port++;
  if (tcp_port == TCP_LOCAL_PORT_RANGE_END) {
9000bbec:	f64f 76ff 	movw	r6, #65535	@ 0xffff
9000bbf0:	8823      	ldrh	r3, [r4, #0]
  tcp_port++;
9000bbf2:	3301      	adds	r3, #1
9000bbf4:	4d0e      	ldr	r5, [pc, #56]	@ (9000bc30 <tcp_new_port+0x4c>)
    tcp_port = TCP_LOCAL_PORT_RANGE_START;
  }
  /* Check all PCB lists. */
  for (i = 0; i < NUM_TCP_PCB_LISTS; i++) {
9000bbf6:	2200      	movs	r2, #0
  tcp_port++;
9000bbf8:	b29b      	uxth	r3, r3
    tcp_port = TCP_LOCAL_PORT_RANGE_START;
9000bbfa:	42b3      	cmp	r3, r6
9000bbfc:	bf08      	it	eq
9000bbfe:	f44f 4340 	moveq.w	r3, #49152	@ 0xc000
    for (pcb = *tcp_pcb_lists[i]; pcb != NULL; pcb = pcb->next) {
9000bc02:	f855 1b04 	ldr.w	r1, [r5], #4
9000bc06:	6809      	ldr	r1, [r1, #0]
9000bc08:	b929      	cbnz	r1, 9000bc16 <tcp_new_port+0x32>
  for (i = 0; i < NUM_TCP_PCB_LISTS; i++) {
9000bc0a:	3201      	adds	r2, #1
9000bc0c:	b2d2      	uxtb	r2, r2
9000bc0e:	2a04      	cmp	r2, #4
9000bc10:	d1f7      	bne.n	9000bc02 <tcp_new_port+0x1e>
        }
        goto again;
      }
    }
  }
  return tcp_port;
9000bc12:	4618      	mov	r0, r3
9000bc14:	e006      	b.n	9000bc24 <tcp_new_port+0x40>
      if (pcb->local_port == tcp_port) {
9000bc16:	8acf      	ldrh	r7, [r1, #22]
9000bc18:	429f      	cmp	r7, r3
9000bc1a:	d105      	bne.n	9000bc28 <tcp_new_port+0x44>
        if (n > (TCP_LOCAL_PORT_RANGE_END - TCP_LOCAL_PORT_RANGE_START)) {
9000bc1c:	3801      	subs	r0, #1
9000bc1e:	b280      	uxth	r0, r0
9000bc20:	2800      	cmp	r0, #0
9000bc22:	d1e6      	bne.n	9000bbf2 <tcp_new_port+0xe>
9000bc24:	8023      	strh	r3, [r4, #0]
}
9000bc26:	bdf0      	pop	{r4, r5, r6, r7, pc}
    for (pcb = *tcp_pcb_lists[i]; pcb != NULL; pcb = pcb->next) {
9000bc28:	68c9      	ldr	r1, [r1, #12]
9000bc2a:	e7ed      	b.n	9000bc08 <tcp_new_port+0x24>
9000bc2c:	200000a4 	.word	0x200000a4
9000bc30:	9002ac94 	.word	0x9002ac94

9000bc34 <tcp_close_shutdown_fin>:
{
9000bc34:	b510      	push	{r4, lr}
  switch (pcb->state) {
9000bc36:	7d03      	ldrb	r3, [r0, #20]
{
9000bc38:	4604      	mov	r4, r0
  switch (pcb->state) {
9000bc3a:	2b04      	cmp	r3, #4
9000bc3c:	d003      	beq.n	9000bc46 <tcp_close_shutdown_fin+0x12>
9000bc3e:	2b07      	cmp	r3, #7
9000bc40:	d00b      	beq.n	9000bc5a <tcp_close_shutdown_fin+0x26>
9000bc42:	2b03      	cmp	r3, #3
9000bc44:	d107      	bne.n	9000bc56 <tcp_close_shutdown_fin+0x22>
      err = tcp_send_fin(pcb);
9000bc46:	f002 f8f1 	bl	9000de2c <tcp_send_fin>
      if (err == ERR_OK) {
9000bc4a:	b958      	cbnz	r0, 9000bc64 <tcp_close_shutdown_fin+0x30>
  if (err == ERR_OK) {
9000bc4c:	2305      	movs	r3, #5
    tcp_output(pcb);
9000bc4e:	4620      	mov	r0, r4
        pcb->state = LAST_ACK;
9000bc50:	7523      	strb	r3, [r4, #20]
    tcp_output(pcb);
9000bc52:	f002 f9df 	bl	9000e014 <tcp_output>
      return ERR_OK;
9000bc56:	2000      	movs	r0, #0
}
9000bc58:	bd10      	pop	{r4, pc}
      err = tcp_send_fin(pcb);
9000bc5a:	f002 f8e7 	bl	9000de2c <tcp_send_fin>
      if (err == ERR_OK) {
9000bc5e:	b908      	cbnz	r0, 9000bc64 <tcp_close_shutdown_fin+0x30>
9000bc60:	2309      	movs	r3, #9
9000bc62:	e7f4      	b.n	9000bc4e <tcp_close_shutdown_fin+0x1a>
  } else if (err == ERR_MEM) {
9000bc64:	1c43      	adds	r3, r0, #1
9000bc66:	d1f7      	bne.n	9000bc58 <tcp_close_shutdown_fin+0x24>
    tcp_set_flags(pcb, TF_CLOSEPEND);
9000bc68:	8b63      	ldrh	r3, [r4, #26]
9000bc6a:	f043 0308 	orr.w	r3, r3, #8
9000bc6e:	8363      	strh	r3, [r4, #26]
    return ERR_OK;
9000bc70:	e7f1      	b.n	9000bc56 <tcp_close_shutdown_fin+0x22>
	...

9000bc74 <tcp_init>:
{
9000bc74:	b508      	push	{r3, lr}
  tcp_port = TCP_ENSURE_LOCAL_PORT_RANGE(LWIP_RAND());
9000bc76:	f01c fc71 	bl	9002855c <rand>
9000bc7a:	ea6f 4080 	mvn.w	r0, r0, lsl #18
9000bc7e:	4b02      	ldr	r3, [pc, #8]	@ (9000bc88 <tcp_init+0x14>)
9000bc80:	ea6f 4090 	mvn.w	r0, r0, lsr #18
9000bc84:	8018      	strh	r0, [r3, #0]
}
9000bc86:	bd08      	pop	{r3, pc}
9000bc88:	200000a4 	.word	0x200000a4

9000bc8c <tcp_free>:
{
9000bc8c:	4601      	mov	r1, r0
  memp_free(MEMP_TCP_PCB, pcb);
9000bc8e:	2001      	movs	r0, #1
9000bc90:	f7ff bc78 	b.w	9000b584 <memp_free>

9000bc94 <tcp_bind>:
{
9000bc94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    ipaddr = IP4_ADDR_ANY;
9000bc96:	4b1f      	ldr	r3, [pc, #124]	@ (9000bd14 <tcp_bind+0x80>)
  LWIP_ERROR("tcp_bind: invalid pcb", pcb != NULL, return ERR_ARG);
9000bc98:	4604      	mov	r4, r0
    ipaddr = IP4_ADDR_ANY;
9000bc9a:	2900      	cmp	r1, #0
9000bc9c:	bf14      	ite	ne
9000bc9e:	460d      	movne	r5, r1
9000bca0:	461d      	moveq	r5, r3
  LWIP_ERROR("tcp_bind: invalid pcb", pcb != NULL, return ERR_ARG);
9000bca2:	b928      	cbnz	r0, 9000bcb0 <tcp_bind+0x1c>
9000bca4:	481c      	ldr	r0, [pc, #112]	@ (9000bd18 <tcp_bind+0x84>)
9000bca6:	f01c fd79 	bl	9002879c <iprintf>
9000bcaa:	f06f 000f 	mvn.w	r0, #15
}
9000bcae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  LWIP_ERROR("tcp_bind: can only bind in state CLOSED", pcb->state == CLOSED, return ERR_VAL);
9000bcb0:	7d03      	ldrb	r3, [r0, #20]
9000bcb2:	b12b      	cbz	r3, 9000bcc0 <tcp_bind+0x2c>
9000bcb4:	4819      	ldr	r0, [pc, #100]	@ (9000bd1c <tcp_bind+0x88>)
9000bcb6:	f01c fd71 	bl	9002879c <iprintf>
9000bcba:	f06f 0005 	mvn.w	r0, #5
9000bcbe:	e7f6      	b.n	9000bcae <tcp_bind+0x1a>
  if (port == 0) {
9000bcc0:	b932      	cbnz	r2, 9000bcd0 <tcp_bind+0x3c>
    port = tcp_new_port();
9000bcc2:	f7ff ff8f 	bl	9000bbe4 <tcp_new_port>
    if (port == 0) {
9000bcc6:	4602      	mov	r2, r0
9000bcc8:	b950      	cbnz	r0, 9000bce0 <tcp_bind+0x4c>
      return ERR_BUF;
9000bcca:	f06f 0001 	mvn.w	r0, #1
9000bcce:	e7ee      	b.n	9000bcae <tcp_bind+0x1a>
9000bcd0:	4813      	ldr	r0, [pc, #76]	@ (9000bd20 <tcp_bind+0x8c>)
      for (cpcb = *tcp_pcb_lists[i]; cpcb != NULL; cpcb = cpcb->next) {
9000bcd2:	f850 1b04 	ldr.w	r1, [r0], #4
9000bcd6:	6809      	ldr	r1, [r1, #0]
9000bcd8:	b971      	cbnz	r1, 9000bcf8 <tcp_bind+0x64>
    for (i = 0; i < max_pcb_list; i++) {
9000bcda:	3301      	adds	r3, #1
9000bcdc:	2b04      	cmp	r3, #4
9000bcde:	d1f8      	bne.n	9000bcd2 <tcp_bind+0x3e>
  if (!ip_addr_isany(ipaddr)
9000bce0:	682b      	ldr	r3, [r5, #0]
9000bce2:	b103      	cbz	r3, 9000bce6 <tcp_bind+0x52>
    ip_addr_set(&pcb->local_ip, ipaddr);
9000bce4:	6023      	str	r3, [r4, #0]
  TCP_REG(&tcp_bound_pcbs, pcb);
9000bce6:	4b0f      	ldr	r3, [pc, #60]	@ (9000bd24 <tcp_bind+0x90>)
  pcb->local_port = port;
9000bce8:	82e2      	strh	r2, [r4, #22]
  TCP_REG(&tcp_bound_pcbs, pcb);
9000bcea:	681a      	ldr	r2, [r3, #0]
9000bcec:	601c      	str	r4, [r3, #0]
9000bcee:	60e2      	str	r2, [r4, #12]
9000bcf0:	f002 fbce 	bl	9000e490 <tcp_timer_needed>
  return ERR_OK;
9000bcf4:	2000      	movs	r0, #0
9000bcf6:	e7da      	b.n	9000bcae <tcp_bind+0x1a>
        if (cpcb->local_port == port) {
9000bcf8:	8ace      	ldrh	r6, [r1, #22]
9000bcfa:	4296      	cmp	r6, r2
9000bcfc:	d105      	bne.n	9000bd0a <tcp_bind+0x76>
                (ip_addr_isany(&cpcb->local_ip) ||
9000bcfe:	680f      	ldr	r7, [r1, #0]
9000bd00:	b12f      	cbz	r7, 9000bd0e <tcp_bind+0x7a>
                 ip_addr_isany(ipaddr) ||
9000bd02:	682e      	ldr	r6, [r5, #0]
9000bd04:	b11e      	cbz	r6, 9000bd0e <tcp_bind+0x7a>
            if ((IP_IS_V6(ipaddr) == IP_IS_V6_VAL(cpcb->local_ip)) &&
9000bd06:	42b7      	cmp	r7, r6
9000bd08:	d001      	beq.n	9000bd0e <tcp_bind+0x7a>
      for (cpcb = *tcp_pcb_lists[i]; cpcb != NULL; cpcb = cpcb->next) {
9000bd0a:	68c9      	ldr	r1, [r1, #12]
9000bd0c:	e7e4      	b.n	9000bcd8 <tcp_bind+0x44>
              return ERR_USE;
9000bd0e:	f06f 0007 	mvn.w	r0, #7
9000bd12:	e7cc      	b.n	9000bcae <tcp_bind+0x1a>
9000bd14:	9002abc8 	.word	0x9002abc8
9000bd18:	9002a2f3 	.word	0x9002a2f3
9000bd1c:	9002a309 	.word	0x9002a309
9000bd20:	9002ac94 	.word	0x9002ac94
9000bd24:	2001a488 	.word	0x2001a488

9000bd28 <tcp_listen_with_backlog_and_err>:
{
9000bd28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000bd2a:	4616      	mov	r6, r2
  LWIP_ERROR("tcp_listen_with_backlog_and_err: invalid pcb", pcb != NULL, res = ERR_ARG; goto done);
9000bd2c:	4605      	mov	r5, r0
9000bd2e:	b948      	cbnz	r0, 9000bd44 <tcp_listen_with_backlog_and_err+0x1c>
9000bd30:	4825      	ldr	r0, [pc, #148]	@ (9000bdc8 <tcp_listen_with_backlog_and_err+0xa0>)
  struct tcp_pcb_listen *lpcb = NULL;
9000bd32:	462c      	mov	r4, r5
  LWIP_ERROR("tcp_listen_with_backlog_and_err: invalid pcb", pcb != NULL, res = ERR_ARG; goto done);
9000bd34:	f01c fd32 	bl	9002879c <iprintf>
9000bd38:	f06f 030f 	mvn.w	r3, #15
  if (err != NULL) {
9000bd3c:	b106      	cbz	r6, 9000bd40 <tcp_listen_with_backlog_and_err+0x18>
    *err = res;
9000bd3e:	7033      	strb	r3, [r6, #0]
}
9000bd40:	4620      	mov	r0, r4
9000bd42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  LWIP_ERROR("tcp_listen_with_backlog_and_err: pcb already connected", pcb->state == CLOSED, res = ERR_CLSD; goto done);
9000bd44:	7d07      	ldrb	r7, [r0, #20]
9000bd46:	b137      	cbz	r7, 9000bd56 <tcp_listen_with_backlog_and_err+0x2e>
9000bd48:	4820      	ldr	r0, [pc, #128]	@ (9000bdcc <tcp_listen_with_backlog_and_err+0xa4>)
  struct tcp_pcb_listen *lpcb = NULL;
9000bd4a:	2400      	movs	r4, #0
  LWIP_ERROR("tcp_listen_with_backlog_and_err: pcb already connected", pcb->state == CLOSED, res = ERR_CLSD; goto done);
9000bd4c:	f01c fd26 	bl	9002879c <iprintf>
9000bd50:	f06f 030e 	mvn.w	r3, #14
9000bd54:	e7f2      	b.n	9000bd3c <tcp_listen_with_backlog_and_err+0x14>
  lpcb = (struct tcp_pcb_listen *)memp_malloc(MEMP_TCP_PCB_LISTEN);
9000bd56:	2002      	movs	r0, #2
9000bd58:	f7ff fbfe 	bl	9000b558 <memp_malloc>
  if (lpcb == NULL) {
9000bd5c:	4604      	mov	r4, r0
9000bd5e:	2800      	cmp	r0, #0
9000bd60:	d02f      	beq.n	9000bdc2 <tcp_listen_with_backlog_and_err+0x9a>
  lpcb->callback_arg = pcb->callback_arg;
9000bd62:	692b      	ldr	r3, [r5, #16]
  lpcb->state = LISTEN;
9000bd64:	2201      	movs	r2, #1
  lpcb->callback_arg = pcb->callback_arg;
9000bd66:	6103      	str	r3, [r0, #16]
  lpcb->local_port = pcb->local_port;
9000bd68:	8aeb      	ldrh	r3, [r5, #22]
  lpcb->state = LISTEN;
9000bd6a:	7502      	strb	r2, [r0, #20]
  lpcb->local_port = pcb->local_port;
9000bd6c:	82c3      	strh	r3, [r0, #22]
  lpcb->prio = pcb->prio;
9000bd6e:	7d6a      	ldrb	r2, [r5, #21]
9000bd70:	7542      	strb	r2, [r0, #21]
  lpcb->so_options = pcb->so_options;
9000bd72:	7a6a      	ldrb	r2, [r5, #9]
  lpcb->netif_idx = NETIF_NO_INDEX;
9000bd74:	7207      	strb	r7, [r0, #8]
  lpcb->so_options = pcb->so_options;
9000bd76:	7242      	strb	r2, [r0, #9]
  lpcb->ttl = pcb->ttl;
9000bd78:	7aea      	ldrb	r2, [r5, #11]
9000bd7a:	72c2      	strb	r2, [r0, #11]
  lpcb->tos = pcb->tos;
9000bd7c:	7aaa      	ldrb	r2, [r5, #10]
9000bd7e:	7282      	strb	r2, [r0, #10]
  ip_addr_copy(lpcb->local_ip, pcb->local_ip);
9000bd80:	682a      	ldr	r2, [r5, #0]
9000bd82:	6002      	str	r2, [r0, #0]
  if (pcb->local_port != 0) {
9000bd84:	b13b      	cbz	r3, 9000bd96 <tcp_listen_with_backlog_and_err+0x6e>
    TCP_RMV(&tcp_bound_pcbs, pcb);
9000bd86:	4a12      	ldr	r2, [pc, #72]	@ (9000bdd0 <tcp_listen_with_backlog_and_err+0xa8>)
9000bd88:	6813      	ldr	r3, [r2, #0]
9000bd8a:	42ab      	cmp	r3, r5
9000bd8c:	d111      	bne.n	9000bdb2 <tcp_listen_with_backlog_and_err+0x8a>
9000bd8e:	68eb      	ldr	r3, [r5, #12]
9000bd90:	6013      	str	r3, [r2, #0]
9000bd92:	2300      	movs	r3, #0
9000bd94:	60eb      	str	r3, [r5, #12]
  tcp_free(pcb);
9000bd96:	4628      	mov	r0, r5
9000bd98:	f7ff ff78 	bl	9000bc8c <tcp_free>
  lpcb->accept = tcp_accept_null;
9000bd9c:	4b0d      	ldr	r3, [pc, #52]	@ (9000bdd4 <tcp_listen_with_backlog_and_err+0xac>)
9000bd9e:	61a3      	str	r3, [r4, #24]
  TCP_REG(&tcp_listen_pcbs.pcbs, (struct tcp_pcb *)lpcb);
9000bda0:	4b0d      	ldr	r3, [pc, #52]	@ (9000bdd8 <tcp_listen_with_backlog_and_err+0xb0>)
9000bda2:	681a      	ldr	r2, [r3, #0]
9000bda4:	601c      	str	r4, [r3, #0]
9000bda6:	60e2      	str	r2, [r4, #12]
9000bda8:	f002 fb72 	bl	9000e490 <tcp_timer_needed>
  res = ERR_OK;
9000bdac:	2300      	movs	r3, #0
9000bdae:	e7c5      	b.n	9000bd3c <tcp_listen_with_backlog_and_err+0x14>
    TCP_RMV(&tcp_bound_pcbs, pcb);
9000bdb0:	4613      	mov	r3, r2
9000bdb2:	2b00      	cmp	r3, #0
9000bdb4:	d0ed      	beq.n	9000bd92 <tcp_listen_with_backlog_and_err+0x6a>
9000bdb6:	68da      	ldr	r2, [r3, #12]
9000bdb8:	42aa      	cmp	r2, r5
9000bdba:	d1f9      	bne.n	9000bdb0 <tcp_listen_with_backlog_and_err+0x88>
9000bdbc:	68ea      	ldr	r2, [r5, #12]
9000bdbe:	60da      	str	r2, [r3, #12]
9000bdc0:	e7e7      	b.n	9000bd92 <tcp_listen_with_backlog_and_err+0x6a>
    res = ERR_MEM;
9000bdc2:	f04f 33ff 	mov.w	r3, #4294967295
9000bdc6:	e7b9      	b.n	9000bd3c <tcp_listen_with_backlog_and_err+0x14>
9000bdc8:	9002a331 	.word	0x9002a331
9000bdcc:	9002a35e 	.word	0x9002a35e
9000bdd0:	2001a488 	.word	0x2001a488
9000bdd4:	9000c603 	.word	0x9000c603
9000bdd8:	2001a484 	.word	0x2001a484

9000bddc <tcp_listen_with_backlog>:
  return tcp_listen_with_backlog_and_err(pcb, backlog, NULL);
9000bddc:	2200      	movs	r2, #0
9000bdde:	f7ff bfa3 	b.w	9000bd28 <tcp_listen_with_backlog_and_err>

9000bde2 <tcp_update_rcv_ann_wnd>:
{
9000bde2:	4603      	mov	r3, r0
  new_right_edge = pcb->rcv_nxt + pcb->rcv_wnd;
9000bde4:	8d02      	ldrh	r2, [r0, #40]	@ 0x28
  if (TCP_SEQ_GEQ(new_right_edge, pcb->rcv_ann_right_edge + LWIP_MIN((TCP_WND / 2), pcb->mss))) {
9000bde6:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
{
9000bde8:	b5f0      	push	{r4, r5, r6, r7, lr}
  new_right_edge = pcb->rcv_nxt + pcb->rcv_wnd;
9000bdea:	6a44      	ldr	r4, [r0, #36]	@ 0x24
  if (TCP_SEQ_GEQ(new_right_edge, pcb->rcv_ann_right_edge + LWIP_MIN((TCP_WND / 2), pcb->mss))) {
9000bdec:	f240 56b4 	movw	r6, #1460	@ 0x5b4
9000bdf0:	8e5f      	ldrh	r7, [r3, #50]	@ 0x32
9000bdf2:	1a50      	subs	r0, r2, r1
9000bdf4:	42b7      	cmp	r7, r6
9000bdf6:	4420      	add	r0, r4
9000bdf8:	bf94      	ite	ls
9000bdfa:	1bc5      	subls	r5, r0, r7
9000bdfc:	1b85      	subhi	r5, r0, r6
9000bdfe:	2d00      	cmp	r5, #0
9000be00:	da08      	bge.n	9000be14 <tcp_update_rcv_ann_wnd+0x32>
    if (TCP_SEQ_GT(pcb->rcv_nxt, pcb->rcv_ann_right_edge)) {
9000be02:	1a62      	subs	r2, r4, r1
9000be04:	2a00      	cmp	r2, #0
      u32_t new_rcv_ann_wnd = pcb->rcv_ann_right_edge - pcb->rcv_nxt;
9000be06:	bfd7      	itett	le
9000be08:	1b09      	suble	r1, r1, r4
9000be0a:	2200      	movgt	r2, #0
    return 0;
9000be0c:	2000      	movle	r0, #0
      pcb->rcv_ann_wnd = (tcpwnd_size_t)new_rcv_ann_wnd;
9000be0e:	b28a      	uxthle	r2, r1
    return 0;
9000be10:	bfc8      	it	gt
9000be12:	4610      	movgt	r0, r2
    pcb->rcv_ann_wnd = pcb->rcv_wnd;
9000be14:	855a      	strh	r2, [r3, #42]	@ 0x2a
}
9000be16:	bdf0      	pop	{r4, r5, r6, r7, pc}

9000be18 <tcp_recved>:
{
9000be18:	b510      	push	{r4, lr}
  LWIP_ERROR("tcp_recved: invalid pcb", pcb != NULL, return);
9000be1a:	4604      	mov	r4, r0
9000be1c:	b920      	cbnz	r0, 9000be28 <tcp_recved+0x10>
9000be1e:	4811      	ldr	r0, [pc, #68]	@ (9000be64 <tcp_recved+0x4c>)
}
9000be20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  LWIP_ERROR("tcp_recved: invalid pcb", pcb != NULL, return);
9000be24:	f01c bcba 	b.w	9002879c <iprintf>
  rcv_wnd = (tcpwnd_size_t)(pcb->rcv_wnd + len);
9000be28:	8d02      	ldrh	r2, [r0, #40]	@ 0x28
  if ((rcv_wnd > TCP_WND_MAX(pcb)) || (rcv_wnd < pcb->rcv_wnd)) {
9000be2a:	f640 3368 	movw	r3, #2920	@ 0xb68
  rcv_wnd = (tcpwnd_size_t)(pcb->rcv_wnd + len);
9000be2e:	4411      	add	r1, r2
9000be30:	b289      	uxth	r1, r1
  if ((rcv_wnd > TCP_WND_MAX(pcb)) || (rcv_wnd < pcb->rcv_wnd)) {
9000be32:	4299      	cmp	r1, r3
9000be34:	d813      	bhi.n	9000be5e <tcp_recved+0x46>
    pcb->rcv_wnd = TCP_WND_MAX(pcb);
9000be36:	428a      	cmp	r2, r1
9000be38:	bf88      	it	hi
9000be3a:	4619      	movhi	r1, r3
  wnd_inflation = tcp_update_rcv_ann_wnd(pcb);
9000be3c:	4620      	mov	r0, r4
9000be3e:	8521      	strh	r1, [r4, #40]	@ 0x28
9000be40:	f7ff ffcf 	bl	9000bde2 <tcp_update_rcv_ann_wnd>
  if (wnd_inflation >= TCP_WND_UPDATE_THRESHOLD) {
9000be44:	f240 23d9 	movw	r3, #729	@ 0x2d9
9000be48:	4298      	cmp	r0, r3
9000be4a:	d90a      	bls.n	9000be62 <tcp_recved+0x4a>
    tcp_ack_now(pcb);
9000be4c:	8b63      	ldrh	r3, [r4, #26]
    tcp_output(pcb);
9000be4e:	4620      	mov	r0, r4
    tcp_ack_now(pcb);
9000be50:	f043 0302 	orr.w	r3, r3, #2
9000be54:	8363      	strh	r3, [r4, #26]
}
9000be56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    tcp_output(pcb);
9000be5a:	f002 b8db 	b.w	9000e014 <tcp_output>
    pcb->rcv_wnd = TCP_WND_MAX(pcb);
9000be5e:	4619      	mov	r1, r3
9000be60:	e7ec      	b.n	9000be3c <tcp_recved+0x24>
}
9000be62:	bd10      	pop	{r4, pc}
9000be64:	9002a395 	.word	0x9002a395

9000be68 <tcp_seg_free>:
 *
 * @param seg single tcp_seg to free
 */
void
tcp_seg_free(struct tcp_seg *seg)
{
9000be68:	b510      	push	{r4, lr}
  if (seg != NULL) {
9000be6a:	4604      	mov	r4, r0
9000be6c:	b148      	cbz	r0, 9000be82 <tcp_seg_free+0x1a>
    if (seg->p != NULL) {
9000be6e:	6840      	ldr	r0, [r0, #4]
9000be70:	b108      	cbz	r0, 9000be76 <tcp_seg_free+0xe>
      pbuf_free(seg->p);
9000be72:	f7ff fd37 	bl	9000b8e4 <pbuf_free>
#if TCP_DEBUG
      seg->p = NULL;
#endif /* TCP_DEBUG */
    }
    memp_free(MEMP_TCP_SEG, seg);
9000be76:	4621      	mov	r1, r4
9000be78:	2003      	movs	r0, #3
  }
}
9000be7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    memp_free(MEMP_TCP_SEG, seg);
9000be7e:	f7ff bb81 	b.w	9000b584 <memp_free>
}
9000be82:	bd10      	pop	{r4, pc}

9000be84 <tcp_segs_free>:
{
9000be84:	b510      	push	{r4, lr}
  while (seg != NULL) {
9000be86:	b900      	cbnz	r0, 9000be8a <tcp_segs_free+0x6>
}
9000be88:	bd10      	pop	{r4, pc}
    struct tcp_seg *next = seg->next;
9000be8a:	6804      	ldr	r4, [r0, #0]
    tcp_seg_free(seg);
9000be8c:	f7ff ffec 	bl	9000be68 <tcp_seg_free>
    seg = next;
9000be90:	4620      	mov	r0, r4
9000be92:	e7f8      	b.n	9000be86 <tcp_segs_free+0x2>

9000be94 <tcp_setprio>:
void
tcp_setprio(struct tcp_pcb *pcb, u8_t prio)
{
  LWIP_ASSERT_CORE_LOCKED();

  LWIP_ERROR("tcp_setprio: invalid pcb", pcb != NULL, return);
9000be94:	b910      	cbnz	r0, 9000be9c <tcp_setprio+0x8>
9000be96:	4802      	ldr	r0, [pc, #8]	@ (9000bea0 <tcp_setprio+0xc>)
9000be98:	f01c bc80 	b.w	9002879c <iprintf>

  pcb->prio = prio;
9000be9c:	7541      	strb	r1, [r0, #21]
}
9000be9e:	4770      	bx	lr
9000bea0:	9002a3ad 	.word	0x9002a3ad

9000bea4 <tcp_arg>:
tcp_arg(struct tcp_pcb *pcb, void *arg)
{
  LWIP_ASSERT_CORE_LOCKED();
  /* This function is allowed to be called for both listen pcbs and
     connection pcbs. */
  if (pcb != NULL) {
9000bea4:	b100      	cbz	r0, 9000bea8 <tcp_arg+0x4>
    pcb->callback_arg = arg;
9000bea6:	6101      	str	r1, [r0, #16]
  }
}
9000bea8:	4770      	bx	lr

9000beaa <tcp_recv>:
 */
void
tcp_recv(struct tcp_pcb *pcb, tcp_recv_fn recv)
{
  LWIP_ASSERT_CORE_LOCKED();
  if (pcb != NULL) {
9000beaa:	b108      	cbz	r0, 9000beb0 <tcp_recv+0x6>
    LWIP_ASSERT("invalid socket state for recv callback", pcb->state != LISTEN);
    pcb->recv = recv;
9000beac:	f8c0 1080 	str.w	r1, [r0, #128]	@ 0x80
  }
}
9000beb0:	4770      	bx	lr

9000beb2 <tcp_sent>:
 */
void
tcp_sent(struct tcp_pcb *pcb, tcp_sent_fn sent)
{
  LWIP_ASSERT_CORE_LOCKED();
  if (pcb != NULL) {
9000beb2:	b100      	cbz	r0, 9000beb6 <tcp_sent+0x4>
    LWIP_ASSERT("invalid socket state for sent callback", pcb->state != LISTEN);
    pcb->sent = sent;
9000beb4:	67c1      	str	r1, [r0, #124]	@ 0x7c
  }
}
9000beb6:	4770      	bx	lr

9000beb8 <tcp_err>:
 */
void
tcp_err(struct tcp_pcb *pcb, tcp_err_fn err)
{
  LWIP_ASSERT_CORE_LOCKED();
  if (pcb != NULL) {
9000beb8:	b108      	cbz	r0, 9000bebe <tcp_err+0x6>
    LWIP_ASSERT("invalid socket state for err callback", pcb->state != LISTEN);
    pcb->errf = err;
9000beba:	f8c0 108c 	str.w	r1, [r0, #140]	@ 0x8c
  }
}
9000bebe:	4770      	bx	lr

9000bec0 <tcp_accept>:
 */
void
tcp_accept(struct tcp_pcb *pcb, tcp_accept_fn accept)
{
  LWIP_ASSERT_CORE_LOCKED();
  if ((pcb != NULL) && (pcb->state == LISTEN)) {
9000bec0:	b118      	cbz	r0, 9000beca <tcp_accept+0xa>
9000bec2:	7d03      	ldrb	r3, [r0, #20]
9000bec4:	2b01      	cmp	r3, #1
    struct tcp_pcb_listen *lpcb = (struct tcp_pcb_listen *)pcb;
    lpcb->accept = accept;
9000bec6:	bf08      	it	eq
9000bec8:	6181      	streq	r1, [r0, #24]
  }
}
9000beca:	4770      	bx	lr

9000becc <tcp_poll>:
void
tcp_poll(struct tcp_pcb *pcb, tcp_poll_fn poll, u8_t interval)
{
  LWIP_ASSERT_CORE_LOCKED();

  LWIP_ERROR("tcp_poll: invalid pcb", pcb != NULL, return);
9000becc:	b910      	cbnz	r0, 9000bed4 <tcp_poll+0x8>
9000bece:	4803      	ldr	r0, [pc, #12]	@ (9000bedc <tcp_poll+0x10>)
9000bed0:	f01c bc64 	b.w	9002879c <iprintf>
  LWIP_ASSERT("invalid socket state for poll", pcb->state != LISTEN);

#if LWIP_CALLBACK_API
  pcb->poll = poll;
9000bed4:	f8c0 1088 	str.w	r1, [r0, #136]	@ 0x88
#else /* LWIP_CALLBACK_API */
  LWIP_UNUSED_ARG(poll);
#endif /* LWIP_CALLBACK_API */
  pcb->pollinterval = interval;
9000bed8:	7742      	strb	r2, [r0, #29]
}
9000beda:	4770      	bx	lr
9000bedc:	9002a3c6 	.word	0x9002a3c6

9000bee0 <tcp_pcb_purge>:
 *
 * @param pcb tcp_pcb to purge. The pcb itself is not deallocated!
 */
void
tcp_pcb_purge(struct tcp_pcb *pcb)
{
9000bee0:	b510      	push	{r4, lr}
  LWIP_ERROR("tcp_pcb_purge: invalid pcb", pcb != NULL, return);
9000bee2:	4604      	mov	r4, r0
9000bee4:	b920      	cbnz	r0, 9000bef0 <tcp_pcb_purge+0x10>
9000bee6:	480f      	ldr	r0, [pc, #60]	@ (9000bf24 <tcp_pcb_purge+0x44>)
    pcb->unacked = pcb->unsent = NULL;
#if TCP_OVERSIZE
    pcb->unsent_oversize = 0;
#endif /* TCP_OVERSIZE */
  }
}
9000bee8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  LWIP_ERROR("tcp_pcb_purge: invalid pcb", pcb != NULL, return);
9000beec:	f01c bc56 	b.w	9002879c <iprintf>
  if (pcb->state != CLOSED &&
9000bef0:	7d03      	ldrb	r3, [r0, #20]
9000bef2:	2b01      	cmp	r3, #1
9000bef4:	d915      	bls.n	9000bf22 <tcp_pcb_purge+0x42>
9000bef6:	2b0a      	cmp	r3, #10
9000bef8:	d013      	beq.n	9000bf22 <tcp_pcb_purge+0x42>
    if (pcb->refused_data != NULL) {
9000befa:	6f40      	ldr	r0, [r0, #116]	@ 0x74
9000befc:	b118      	cbz	r0, 9000bf06 <tcp_pcb_purge+0x26>
      pbuf_free(pcb->refused_data);
9000befe:	f7ff fcf1 	bl	9000b8e4 <pbuf_free>
      pcb->refused_data = NULL;
9000bf02:	2300      	movs	r3, #0
9000bf04:	6763      	str	r3, [r4, #116]	@ 0x74
    pcb->rtime = -1;
9000bf06:	f64f 73ff 	movw	r3, #65535	@ 0xffff
    tcp_segs_free(pcb->unsent);
9000bf0a:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
    pcb->rtime = -1;
9000bf0c:	8623      	strh	r3, [r4, #48]	@ 0x30
    tcp_segs_free(pcb->unsent);
9000bf0e:	f7ff ffb9 	bl	9000be84 <tcp_segs_free>
    tcp_segs_free(pcb->unacked);
9000bf12:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000bf14:	f7ff ffb6 	bl	9000be84 <tcp_segs_free>
    pcb->unacked = pcb->unsent = NULL;
9000bf18:	2300      	movs	r3, #0
9000bf1a:	e9c4 331b 	strd	r3, r3, [r4, #108]	@ 0x6c
    pcb->unsent_oversize = 0;
9000bf1e:	f8a4 3068 	strh.w	r3, [r4, #104]	@ 0x68
}
9000bf22:	bd10      	pop	{r4, pc}
9000bf24:	9002a3dc 	.word	0x9002a3dc

9000bf28 <tcp_slowtmr>:
{
9000bf28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  ++tcp_ticks;
9000bf2c:	4ead      	ldr	r6, [pc, #692]	@ (9000c1e4 <tcp_slowtmr+0x2bc>)
{
9000bf2e:	b087      	sub	sp, #28
  ++tcp_timer_ctr;
9000bf30:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 9000c1f8 <tcp_slowtmr+0x2d0>
  ++tcp_ticks;
9000bf34:	6833      	ldr	r3, [r6, #0]
  pcb = tcp_active_pcbs;
9000bf36:	f8df b2c4 	ldr.w	fp, [pc, #708]	@ 9000c1fc <tcp_slowtmr+0x2d4>
  ++tcp_ticks;
9000bf3a:	3301      	adds	r3, #1
      tcp_active_pcbs_changed = 0;
9000bf3c:	f8df 82c0 	ldr.w	r8, [pc, #704]	@ 9000c200 <tcp_slowtmr+0x2d8>
  ++tcp_ticks;
9000bf40:	6033      	str	r3, [r6, #0]
  ++tcp_timer_ctr;
9000bf42:	f899 3000 	ldrb.w	r3, [r9]
9000bf46:	3301      	adds	r3, #1
9000bf48:	f889 3000 	strb.w	r3, [r9]
  pcb = tcp_active_pcbs;
9000bf4c:	f8db 4000 	ldr.w	r4, [fp]
  prev = NULL;
9000bf50:	2700      	movs	r7, #0
  while (pcb != NULL) {
9000bf52:	b93c      	cbnz	r4, 9000bf64 <tcp_slowtmr+0x3c>
  pcb = tcp_tw_pcbs;
9000bf54:	4fa4      	ldr	r7, [pc, #656]	@ (9000c1e8 <tcp_slowtmr+0x2c0>)
9000bf56:	683d      	ldr	r5, [r7, #0]
  while (pcb != NULL) {
9000bf58:	2d00      	cmp	r5, #0
9000bf5a:	f040 8153 	bne.w	9000c204 <tcp_slowtmr+0x2dc>
}
9000bf5e:	b007      	add	sp, #28
9000bf60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (pcb->last_timer == tcp_timer_ctr) {
9000bf64:	f899 3000 	ldrb.w	r3, [r9]
9000bf68:	7fa2      	ldrb	r2, [r4, #30]
9000bf6a:	429a      	cmp	r2, r3
9000bf6c:	d104      	bne.n	9000bf78 <tcp_slowtmr+0x50>
      pcb = pcb->next;
9000bf6e:	f8d4 a00c 	ldr.w	sl, [r4, #12]
        ++pcb_reset;
9000bf72:	4627      	mov	r7, r4
9000bf74:	4654      	mov	r4, sl
9000bf76:	e7ec      	b.n	9000bf52 <tcp_slowtmr+0x2a>
    if (pcb->state == SYN_SENT && pcb->nrtx >= TCP_SYNMAXRTX) {
9000bf78:	7d22      	ldrb	r2, [r4, #20]
    pcb->last_timer = tcp_timer_ctr;
9000bf7a:	77a3      	strb	r3, [r4, #30]
    if (pcb->state == SYN_SENT && pcb->nrtx >= TCP_SYNMAXRTX) {
9000bf7c:	2a02      	cmp	r2, #2
9000bf7e:	f894 3042 	ldrb.w	r3, [r4, #66]	@ 0x42
9000bf82:	d122      	bne.n	9000bfca <tcp_slowtmr+0xa2>
9000bf84:	2b05      	cmp	r3, #5
    } else if (pcb->nrtx >= TCP_MAXRTX) {
9000bf86:	f200 80d5 	bhi.w	9000c134 <tcp_slowtmr+0x20c>
      if (pcb->persist_backoff > 0) {
9000bf8a:	f894 3095 	ldrb.w	r3, [r4, #149]	@ 0x95
9000bf8e:	2b00      	cmp	r3, #0
9000bf90:	f000 8087 	beq.w	9000c0a2 <tcp_slowtmr+0x17a>
        if (pcb->persist_probe >= TCP_MAXRTX) {
9000bf94:	f894 2096 	ldrb.w	r2, [r4, #150]	@ 0x96
9000bf98:	2a0b      	cmp	r2, #11
9000bf9a:	f200 80cb 	bhi.w	9000c134 <tcp_slowtmr+0x20c>
          u8_t backoff_cnt = tcp_persist_backoff[pcb->persist_backoff - 1];
9000bf9e:	4a93      	ldr	r2, [pc, #588]	@ (9000c1ec <tcp_slowtmr+0x2c4>)
9000bfa0:	4413      	add	r3, r2
9000bfa2:	f813 2c01 	ldrb.w	r2, [r3, #-1]
          if (pcb->persist_cnt < backoff_cnt) {
9000bfa6:	f894 3094 	ldrb.w	r3, [r4, #148]	@ 0x94
9000bfaa:	4293      	cmp	r3, r2
9000bfac:	d30f      	bcc.n	9000bfce <tcp_slowtmr+0xa6>
            if (pcb->snd_wnd == 0) {
9000bfae:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
9000bfb2:	2900      	cmp	r1, #0
9000bfb4:	d065      	beq.n	9000c082 <tcp_slowtmr+0x15a>
              if (tcp_split_unsent_seg(pcb, (u16_t)pcb->snd_wnd) == ERR_OK) {
9000bfb6:	4620      	mov	r0, r4
9000bfb8:	f001 fe5a 	bl	9000dc70 <tcp_split_unsent_seg>
9000bfbc:	2800      	cmp	r0, #0
9000bfbe:	d165      	bne.n	9000c08c <tcp_slowtmr+0x164>
                if (tcp_output(pcb) == ERR_OK) {
9000bfc0:	4620      	mov	r0, r4
9000bfc2:	f002 f827 	bl	9000e014 <tcp_output>
9000bfc6:	b140      	cbz	r0, 9000bfda <tcp_slowtmr+0xb2>
9000bfc8:	e060      	b.n	9000c08c <tcp_slowtmr+0x164>
    } else if (pcb->nrtx >= TCP_MAXRTX) {
9000bfca:	2b0b      	cmp	r3, #11
9000bfcc:	e7db      	b.n	9000bf86 <tcp_slowtmr+0x5e>
            pcb->persist_cnt++;
9000bfce:	3301      	adds	r3, #1
9000bfd0:	b2db      	uxtb	r3, r3
          if (pcb->persist_cnt >= backoff_cnt) {
9000bfd2:	4293      	cmp	r3, r2
            pcb->persist_cnt++;
9000bfd4:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
          if (pcb->persist_cnt >= backoff_cnt) {
9000bfd8:	d2e9      	bcs.n	9000bfae <tcp_slowtmr+0x86>
    pcb_remove = 0;
9000bfda:	2500      	movs	r5, #0
    if (pcb->state == FIN_WAIT_2) {
9000bfdc:	7d21      	ldrb	r1, [r4, #20]
9000bfde:	2906      	cmp	r1, #6
9000bfe0:	d109      	bne.n	9000bff6 <tcp_slowtmr+0xce>
      if (pcb->flags & TF_RXCLOSED) {
9000bfe2:	8b63      	ldrh	r3, [r4, #26]
9000bfe4:	06da      	lsls	r2, r3, #27
9000bfe6:	d506      	bpl.n	9000bff6 <tcp_slowtmr+0xce>
        if ((u32_t)(tcp_ticks - pcb->tmr) >
9000bfe8:	6833      	ldr	r3, [r6, #0]
9000bfea:	6a22      	ldr	r2, [r4, #32]
9000bfec:	1a9b      	subs	r3, r3, r2
9000bfee:	2b28      	cmp	r3, #40	@ 0x28
          ++pcb_remove;
9000bff0:	bf84      	itt	hi
9000bff2:	3501      	addhi	r5, #1
9000bff4:	b2ed      	uxtbhi	r5, r5
    if (ip_get_option(pcb, SOF_KEEPALIVE) &&
9000bff6:	7a63      	ldrb	r3, [r4, #9]
9000bff8:	071b      	lsls	r3, r3, #28
9000bffa:	d505      	bpl.n	9000c008 <tcp_slowtmr+0xe0>
9000bffc:	2904      	cmp	r1, #4
9000bffe:	f000 809b 	beq.w	9000c138 <tcp_slowtmr+0x210>
        ((pcb->state == ESTABLISHED) ||
9000c002:	2907      	cmp	r1, #7
9000c004:	f000 8098 	beq.w	9000c138 <tcp_slowtmr+0x210>
    pcb_reset = 0;
9000c008:	f04f 0a00 	mov.w	sl, #0
    if (pcb->state == SYN_RCVD) {
9000c00c:	7d23      	ldrb	r3, [r4, #20]
9000c00e:	2b03      	cmp	r3, #3
9000c010:	f040 80bc 	bne.w	9000c18c <tcp_slowtmr+0x264>
      if ((u32_t)(tcp_ticks - pcb->tmr) >
9000c014:	6833      	ldr	r3, [r6, #0]
9000c016:	6a22      	ldr	r2, [r4, #32]
9000c018:	1a9b      	subs	r3, r3, r2
9000c01a:	2b28      	cmp	r3, #40	@ 0x28
      if ((u32_t)(tcp_ticks - pcb->tmr) > 2 * TCP_MSL / TCP_SLOW_INTERVAL) {
9000c01c:	d802      	bhi.n	9000c024 <tcp_slowtmr+0xfc>
    if (pcb_remove) {
9000c01e:	2d00      	cmp	r5, #0
9000c020:	f000 80bf 	beq.w	9000c1a2 <tcp_slowtmr+0x27a>
      tcp_pcb_purge(pcb);
9000c024:	4620      	mov	r0, r4
      tcp_err_fn err_fn = pcb->errf;
9000c026:	f8d4 508c 	ldr.w	r5, [r4, #140]	@ 0x8c
      tcp_pcb_purge(pcb);
9000c02a:	f7ff ff59 	bl	9000bee0 <tcp_pcb_purge>
      if (prev != NULL) {
9000c02e:	68e3      	ldr	r3, [r4, #12]
9000c030:	2f00      	cmp	r7, #0
9000c032:	f000 80b3 	beq.w	9000c19c <tcp_slowtmr+0x274>
        prev->next = pcb->next;
9000c036:	60fb      	str	r3, [r7, #12]
      if (pcb_reset) {
9000c038:	f1ba 0f00 	cmp.w	sl, #0
9000c03c:	d00b      	beq.n	9000c056 <tcp_slowtmr+0x12e>
        tcp_rst(pcb, pcb->snd_nxt, pcb->rcv_nxt, &pcb->local_ip, &pcb->remote_ip,
9000c03e:	8b23      	ldrh	r3, [r4, #24]
9000c040:	4620      	mov	r0, r4
9000c042:	9302      	str	r3, [sp, #8]
9000c044:	8ae3      	ldrh	r3, [r4, #22]
9000c046:	9301      	str	r3, [sp, #4]
9000c048:	1d23      	adds	r3, r4, #4
9000c04a:	9300      	str	r3, [sp, #0]
9000c04c:	4623      	mov	r3, r4
9000c04e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000c050:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000c052:	f001 ff96 	bl	9000df82 <tcp_rst>
      err_arg = pcb->callback_arg;
9000c056:	6923      	ldr	r3, [r4, #16]
      tcp_free(pcb2);
9000c058:	4620      	mov	r0, r4
      pcb = pcb->next;
9000c05a:	f8d4 a00c 	ldr.w	sl, [r4, #12]
      err_arg = pcb->callback_arg;
9000c05e:	9305      	str	r3, [sp, #20]
      tcp_free(pcb2);
9000c060:	f7ff fe14 	bl	9000bc8c <tcp_free>
      tcp_active_pcbs_changed = 0;
9000c064:	2300      	movs	r3, #0
9000c066:	f888 3000 	strb.w	r3, [r8]
      TCP_EVENT_ERR(last_state, err_fn, err_arg, ERR_ABRT);
9000c06a:	b145      	cbz	r5, 9000c07e <tcp_slowtmr+0x156>
9000c06c:	f06f 010c 	mvn.w	r1, #12
9000c070:	9805      	ldr	r0, [sp, #20]
9000c072:	47a8      	blx	r5
      if (tcp_active_pcbs_changed) {
9000c074:	f898 3000 	ldrb.w	r3, [r8]
9000c078:	2b00      	cmp	r3, #0
9000c07a:	f47f af67 	bne.w	9000bf4c <tcp_slowtmr+0x24>
        ++pcb_reset;
9000c07e:	463c      	mov	r4, r7
9000c080:	e777      	b.n	9000bf72 <tcp_slowtmr+0x4a>
              if (tcp_zero_window_probe(pcb) != ERR_OK) {
9000c082:	4620      	mov	r0, r4
9000c084:	f002 f963 	bl	9000e34e <tcp_zero_window_probe>
9000c088:	2800      	cmp	r0, #0
9000c08a:	d1a6      	bne.n	9000bfda <tcp_slowtmr+0xb2>
              pcb->persist_cnt = 0;
9000c08c:	2300      	movs	r3, #0
9000c08e:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
              if (pcb->persist_backoff < sizeof(tcp_persist_backoff)) {
9000c092:	f894 3095 	ldrb.w	r3, [r4, #149]	@ 0x95
9000c096:	2b06      	cmp	r3, #6
9000c098:	d89f      	bhi.n	9000bfda <tcp_slowtmr+0xb2>
                pcb->persist_backoff++;
9000c09a:	3301      	adds	r3, #1
9000c09c:	f884 3095 	strb.w	r3, [r4, #149]	@ 0x95
9000c0a0:	e79b      	b.n	9000bfda <tcp_slowtmr+0xb2>
        if ((pcb->rtime >= 0) && (pcb->rtime < 0x7FFF)) {
9000c0a2:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
9000c0a4:	f647 72fe 	movw	r2, #32766	@ 0x7ffe
9000c0a8:	4293      	cmp	r3, r2
          ++pcb->rtime;
9000c0aa:	bf9c      	itt	ls
9000c0ac:	3301      	addls	r3, #1
9000c0ae:	8623      	strhls	r3, [r4, #48]	@ 0x30
        if (pcb->rtime >= pcb->rto) {
9000c0b0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
9000c0b4:	f9b4 2030 	ldrsh.w	r2, [r4, #48]	@ 0x30
9000c0b8:	429a      	cmp	r2, r3
9000c0ba:	db8e      	blt.n	9000bfda <tcp_slowtmr+0xb2>
          if ((tcp_rexmit_rto_prepare(pcb) == ERR_OK) || ((pcb->unacked == NULL) && (pcb->unsent != NULL))) {
9000c0bc:	4620      	mov	r0, r4
9000c0be:	f001 fed7 	bl	9000de70 <tcp_rexmit_rto_prepare>
9000c0c2:	b128      	cbz	r0, 9000c0d0 <tcp_slowtmr+0x1a8>
9000c0c4:	6f23      	ldr	r3, [r4, #112]	@ 0x70
9000c0c6:	2b00      	cmp	r3, #0
9000c0c8:	d187      	bne.n	9000bfda <tcp_slowtmr+0xb2>
9000c0ca:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
9000c0cc:	2b00      	cmp	r3, #0
9000c0ce:	d084      	beq.n	9000bfda <tcp_slowtmr+0xb2>
            if (pcb->state != SYN_SENT) {
9000c0d0:	7d23      	ldrb	r3, [r4, #20]
9000c0d2:	2b02      	cmp	r3, #2
9000c0d4:	d014      	beq.n	9000c100 <tcp_slowtmr+0x1d8>
              int calc_rto = ((pcb->sa >> 3) + pcb->sv) << tcp_backoff[backoff_idx];
9000c0d6:	f9b4 203c 	ldrsh.w	r2, [r4, #60]	@ 0x3c
9000c0da:	f9b4 303e 	ldrsh.w	r3, [r4, #62]	@ 0x3e
9000c0de:	4944      	ldr	r1, [pc, #272]	@ (9000c1f0 <tcp_slowtmr+0x2c8>)
9000c0e0:	eb03 03e2 	add.w	r3, r3, r2, asr #3
              u8_t backoff_idx = LWIP_MIN(pcb->nrtx, sizeof(tcp_backoff) - 1);
9000c0e4:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
              int calc_rto = ((pcb->sa >> 3) + pcb->sv) << tcp_backoff[backoff_idx];
9000c0e8:	2a0c      	cmp	r2, #12
9000c0ea:	bf28      	it	cs
9000c0ec:	220c      	movcs	r2, #12
9000c0ee:	5c8a      	ldrb	r2, [r1, r2]
9000c0f0:	4093      	lsls	r3, r2
              pcb->rto = (s16_t)LWIP_MIN(calc_rto, 0x7FFF);
9000c0f2:	f647 72ff 	movw	r2, #32767	@ 0x7fff
9000c0f6:	4293      	cmp	r3, r2
9000c0f8:	bfa8      	it	ge
9000c0fa:	4613      	movge	r3, r2
9000c0fc:	f8a4 3040 	strh.w	r3, [r4, #64]	@ 0x40
            eff_wnd = LWIP_MIN(pcb->cwnd, pcb->snd_wnd);
9000c100:	f8b4 0048 	ldrh.w	r0, [r4, #72]	@ 0x48
            pcb->rtime = 0;
9000c104:	2200      	movs	r2, #0
            eff_wnd = LWIP_MIN(pcb->cwnd, pcb->snd_wnd);
9000c106:	f8b4 3060 	ldrh.w	r3, [r4, #96]	@ 0x60
            if (pcb->ssthresh < (tcpwnd_size_t)(pcb->mss << 1)) {
9000c10a:	8e61      	ldrh	r1, [r4, #50]	@ 0x32
            pcb->ssthresh = eff_wnd >> 1;
9000c10c:	4283      	cmp	r3, r0
            pcb->rtime = 0;
9000c10e:	8622      	strh	r2, [r4, #48]	@ 0x30
            pcb->cwnd = pcb->mss;
9000c110:	f8a4 1048 	strh.w	r1, [r4, #72]	@ 0x48
            pcb->ssthresh = eff_wnd >> 1;
9000c114:	bf28      	it	cs
9000c116:	4603      	movcs	r3, r0
            if (pcb->ssthresh < (tcpwnd_size_t)(pcb->mss << 1)) {
9000c118:	0048      	lsls	r0, r1, #1
            pcb->bytes_acked = 0;
9000c11a:	f8a4 206a 	strh.w	r2, [r4, #106]	@ 0x6a
            if (pcb->ssthresh < (tcpwnd_size_t)(pcb->mss << 1)) {
9000c11e:	085b      	lsrs	r3, r3, #1
9000c120:	b280      	uxth	r0, r0
9000c122:	4283      	cmp	r3, r0
9000c124:	bf38      	it	cc
9000c126:	4603      	movcc	r3, r0
            tcp_rexmit_rto_commit(pcb);
9000c128:	4620      	mov	r0, r4
9000c12a:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
9000c12e:	f002 f8e3 	bl	9000e2f8 <tcp_rexmit_rto_commit>
9000c132:	e752      	b.n	9000bfda <tcp_slowtmr+0xb2>
      ++pcb_remove;
9000c134:	2501      	movs	r5, #1
9000c136:	e751      	b.n	9000bfdc <tcp_slowtmr+0xb4>
      if ((u32_t)(tcp_ticks - pcb->tmr) >
9000c138:	6a23      	ldr	r3, [r4, #32]
          (pcb->keep_idle + TCP_KEEP_DUR(pcb)) / TCP_SLOW_INTERVAL) {
9000c13a:	f44f 7cfa 	mov.w	ip, #500	@ 0x1f4
      if ((u32_t)(tcp_ticks - pcb->tmr) >
9000c13e:	6831      	ldr	r1, [r6, #0]
9000c140:	1ac9      	subs	r1, r1, r3
          (pcb->keep_idle + TCP_KEEP_DUR(pcb)) / TCP_SLOW_INTERVAL) {
9000c142:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000c146:	f503 2224 	add.w	r2, r3, #671744	@ 0xa4000
9000c14a:	f602 42b8 	addw	r2, r2, #3256	@ 0xcb8
9000c14e:	fbb2 f2fc 	udiv	r2, r2, ip
      if ((u32_t)(tcp_ticks - pcb->tmr) >
9000c152:	4291      	cmp	r1, r2
9000c154:	d904      	bls.n	9000c160 <tcp_slowtmr+0x238>
        ++pcb_remove;
9000c156:	3501      	adds	r5, #1
        ++pcb_reset;
9000c158:	f04f 0a01 	mov.w	sl, #1
        ++pcb_remove;
9000c15c:	b2ed      	uxtb	r5, r5
        ++pcb_reset;
9000c15e:	e755      	b.n	9000c00c <tcp_slowtmr+0xe4>
                 (pcb->keep_idle + pcb->keep_cnt_sent * TCP_KEEP_INTVL(pcb))
9000c160:	f894 2097 	ldrb.w	r2, [r4, #151]	@ 0x97
9000c164:	4823      	ldr	r0, [pc, #140]	@ (9000c1f4 <tcp_slowtmr+0x2cc>)
9000c166:	fb00 3302 	mla	r3, r0, r2, r3
                 / TCP_SLOW_INTERVAL) {
9000c16a:	fbb3 f3fc 	udiv	r3, r3, ip
      } else if ((u32_t)(tcp_ticks - pcb->tmr) >
9000c16e:	4299      	cmp	r1, r3
9000c170:	f67f af4a 	bls.w	9000c008 <tcp_slowtmr+0xe0>
        err = tcp_keepalive(pcb);
9000c174:	4620      	mov	r0, r4
9000c176:	f002 f8d3 	bl	9000e320 <tcp_keepalive>
        if (err == ERR_OK) {
9000c17a:	2800      	cmp	r0, #0
9000c17c:	f47f af44 	bne.w	9000c008 <tcp_slowtmr+0xe0>
          pcb->keep_cnt_sent++;
9000c180:	f894 3097 	ldrb.w	r3, [r4, #151]	@ 0x97
9000c184:	3301      	adds	r3, #1
9000c186:	f884 3097 	strb.w	r3, [r4, #151]	@ 0x97
9000c18a:	e73d      	b.n	9000c008 <tcp_slowtmr+0xe0>
    if (pcb->state == LAST_ACK) {
9000c18c:	2b09      	cmp	r3, #9
9000c18e:	f47f af46 	bne.w	9000c01e <tcp_slowtmr+0xf6>
      if ((u32_t)(tcp_ticks - pcb->tmr) > 2 * TCP_MSL / TCP_SLOW_INTERVAL) {
9000c192:	6833      	ldr	r3, [r6, #0]
9000c194:	6a22      	ldr	r2, [r4, #32]
9000c196:	1a9b      	subs	r3, r3, r2
9000c198:	2bf0      	cmp	r3, #240	@ 0xf0
9000c19a:	e73f      	b.n	9000c01c <tcp_slowtmr+0xf4>
        tcp_active_pcbs = pcb->next;
9000c19c:	f8cb 3000 	str.w	r3, [fp]
9000c1a0:	e74a      	b.n	9000c038 <tcp_slowtmr+0x110>
      ++prev->polltmr;
9000c1a2:	7f23      	ldrb	r3, [r4, #28]
      if (prev->polltmr >= prev->pollinterval) {
9000c1a4:	7f62      	ldrb	r2, [r4, #29]
      ++prev->polltmr;
9000c1a6:	3301      	adds	r3, #1
      pcb = pcb->next;
9000c1a8:	f8d4 a00c 	ldr.w	sl, [r4, #12]
      ++prev->polltmr;
9000c1ac:	b2db      	uxtb	r3, r3
      if (prev->polltmr >= prev->pollinterval) {
9000c1ae:	429a      	cmp	r2, r3
      ++prev->polltmr;
9000c1b0:	7723      	strb	r3, [r4, #28]
      if (prev->polltmr >= prev->pollinterval) {
9000c1b2:	f63f aede 	bhi.w	9000bf72 <tcp_slowtmr+0x4a>
        TCP_EVENT_POLL(prev, err);
9000c1b6:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
        prev->polltmr = 0;
9000c1ba:	7725      	strb	r5, [r4, #28]
        tcp_active_pcbs_changed = 0;
9000c1bc:	f888 5000 	strb.w	r5, [r8]
        TCP_EVENT_POLL(prev, err);
9000c1c0:	b91b      	cbnz	r3, 9000c1ca <tcp_slowtmr+0x2a2>
          tcp_output(prev);
9000c1c2:	4620      	mov	r0, r4
9000c1c4:	f001 ff26 	bl	9000e014 <tcp_output>
9000c1c8:	e6d3      	b.n	9000bf72 <tcp_slowtmr+0x4a>
        TCP_EVENT_POLL(prev, err);
9000c1ca:	4621      	mov	r1, r4
9000c1cc:	6920      	ldr	r0, [r4, #16]
9000c1ce:	4798      	blx	r3
        if (tcp_active_pcbs_changed) {
9000c1d0:	f898 3000 	ldrb.w	r3, [r8]
9000c1d4:	2b00      	cmp	r3, #0
9000c1d6:	f47f aeb9 	bne.w	9000bf4c <tcp_slowtmr+0x24>
        if (err == ERR_OK) {
9000c1da:	2800      	cmp	r0, #0
9000c1dc:	f47f aec9 	bne.w	9000bf72 <tcp_slowtmr+0x4a>
9000c1e0:	e7ef      	b.n	9000c1c2 <tcp_slowtmr+0x29a>
9000c1e2:	bf00      	nop
9000c1e4:	2001a48c 	.word	0x2001a48c
9000c1e8:	2001a47c 	.word	0x2001a47c
9000c1ec:	9002aca4 	.word	0x9002aca4
9000c1f0:	9002acab 	.word	0x9002acab
9000c1f4:	000124f8 	.word	0x000124f8
9000c1f8:	2001a478 	.word	0x2001a478
9000c1fc:	2001a480 	.word	0x2001a480
9000c200:	2001a47a 	.word	0x2001a47a
    if ((u32_t)(tcp_ticks - pcb->tmr) > 2 * TCP_MSL / TCP_SLOW_INTERVAL) {
9000c204:	6833      	ldr	r3, [r6, #0]
9000c206:	6a2a      	ldr	r2, [r5, #32]
9000c208:	1a9b      	subs	r3, r3, r2
9000c20a:	2bf0      	cmp	r3, #240	@ 0xf0
9000c20c:	d906      	bls.n	9000c21c <tcp_slowtmr+0x2f4>
      tcp_pcb_purge(pcb);
9000c20e:	4628      	mov	r0, r5
9000c210:	f7ff fe66 	bl	9000bee0 <tcp_pcb_purge>
      if (prev != NULL) {
9000c214:	68eb      	ldr	r3, [r5, #12]
9000c216:	b924      	cbnz	r4, 9000c222 <tcp_slowtmr+0x2fa>
        tcp_tw_pcbs = pcb->next;
9000c218:	603b      	str	r3, [r7, #0]
9000c21a:	e003      	b.n	9000c224 <tcp_slowtmr+0x2fc>
      prev = pcb;
9000c21c:	462c      	mov	r4, r5
      pcb = pcb->next;
9000c21e:	68ed      	ldr	r5, [r5, #12]
9000c220:	e69a      	b.n	9000bf58 <tcp_slowtmr+0x30>
        prev->next = pcb->next;
9000c222:	60e3      	str	r3, [r4, #12]
      pcb = pcb->next;
9000c224:	f8d5 800c 	ldr.w	r8, [r5, #12]
      tcp_free(pcb2);
9000c228:	4628      	mov	r0, r5
9000c22a:	f7ff fd2f 	bl	9000bc8c <tcp_free>
      pcb = pcb->next;
9000c22e:	4645      	mov	r5, r8
9000c230:	e692      	b.n	9000bf58 <tcp_slowtmr+0x30>
9000c232:	bf00      	nop

9000c234 <tcp_pcb_remove>:
tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)
{
  LWIP_ASSERT("tcp_pcb_remove: invalid pcb", pcb != NULL);
  LWIP_ASSERT("tcp_pcb_remove: invalid pcblist", pcblist != NULL);

  TCP_RMV(pcblist, pcb);
9000c234:	6803      	ldr	r3, [r0, #0]
9000c236:	428b      	cmp	r3, r1
{
9000c238:	b510      	push	{r4, lr}
9000c23a:	460c      	mov	r4, r1
  TCP_RMV(pcblist, pcb);
9000c23c:	d119      	bne.n	9000c272 <tcp_pcb_remove+0x3e>
9000c23e:	68cb      	ldr	r3, [r1, #12]
9000c240:	6003      	str	r3, [r0, #0]
9000c242:	2300      	movs	r3, #0

  tcp_pcb_purge(pcb);
9000c244:	4620      	mov	r0, r4
  TCP_RMV(pcblist, pcb);
9000c246:	60e3      	str	r3, [r4, #12]
  tcp_pcb_purge(pcb);
9000c248:	f7ff fe4a 	bl	9000bee0 <tcp_pcb_purge>

  /* if there is an outstanding delayed ACKs, send it */
  if ((pcb->state != TIME_WAIT) &&
9000c24c:	7d23      	ldrb	r3, [r4, #20]
9000c24e:	2b0a      	cmp	r3, #10
9000c250:	d00a      	beq.n	9000c268 <tcp_pcb_remove+0x34>
9000c252:	2b01      	cmp	r3, #1
9000c254:	d008      	beq.n	9000c268 <tcp_pcb_remove+0x34>
      (pcb->state != LISTEN) &&
      (pcb->flags & TF_ACK_DELAY)) {
9000c256:	8b63      	ldrh	r3, [r4, #26]
      (pcb->state != LISTEN) &&
9000c258:	07da      	lsls	r2, r3, #31
9000c25a:	d505      	bpl.n	9000c268 <tcp_pcb_remove+0x34>
    tcp_ack_now(pcb);
9000c25c:	f043 0302 	orr.w	r3, r3, #2
    tcp_output(pcb);
9000c260:	4620      	mov	r0, r4
    tcp_ack_now(pcb);
9000c262:	8363      	strh	r3, [r4, #26]
    tcp_output(pcb);
9000c264:	f001 fed6 	bl	9000e014 <tcp_output>
#if TCP_QUEUE_OOSEQ
    LWIP_ASSERT("ooseq segments leaking", pcb->ooseq == NULL);
#endif /* TCP_QUEUE_OOSEQ */
  }

  pcb->state = CLOSED;
9000c268:	2300      	movs	r3, #0
9000c26a:	7523      	strb	r3, [r4, #20]
  /* reset the local port to prevent the pcb from being 'bound' */
  pcb->local_port = 0;
9000c26c:	82e3      	strh	r3, [r4, #22]

  LWIP_ASSERT("tcp_pcb_remove: tcp_pcbs_sane()", tcp_pcbs_sane());
}
9000c26e:	bd10      	pop	{r4, pc}
  TCP_RMV(pcblist, pcb);
9000c270:	4613      	mov	r3, r2
9000c272:	2b00      	cmp	r3, #0
9000c274:	d0e5      	beq.n	9000c242 <tcp_pcb_remove+0xe>
9000c276:	68da      	ldr	r2, [r3, #12]
9000c278:	42a2      	cmp	r2, r4
9000c27a:	d1f9      	bne.n	9000c270 <tcp_pcb_remove+0x3c>
9000c27c:	68e2      	ldr	r2, [r4, #12]
9000c27e:	60da      	str	r2, [r3, #12]
9000c280:	e7df      	b.n	9000c242 <tcp_pcb_remove+0xe>
	...

9000c284 <tcp_close_shutdown>:
{
9000c284:	b530      	push	{r4, r5, lr}
9000c286:	4604      	mov	r4, r0
9000c288:	b085      	sub	sp, #20
  if (rst_on_unacked_data && ((pcb->state == ESTABLISHED) || (pcb->state == CLOSE_WAIT))) {
9000c28a:	7d03      	ldrb	r3, [r0, #20]
9000c28c:	2900      	cmp	r1, #0
9000c28e:	d036      	beq.n	9000c2fe <tcp_close_shutdown+0x7a>
9000c290:	2b04      	cmp	r3, #4
9000c292:	d001      	beq.n	9000c298 <tcp_close_shutdown+0x14>
9000c294:	2b07      	cmp	r3, #7
9000c296:	d132      	bne.n	9000c2fe <tcp_close_shutdown+0x7a>
    if ((pcb->refused_data != NULL) || (pcb->rcv_wnd != TCP_WND_MAX(pcb))) {
9000c298:	6f63      	ldr	r3, [r4, #116]	@ 0x74
9000c29a:	b923      	cbnz	r3, 9000c2a6 <tcp_close_shutdown+0x22>
9000c29c:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
9000c29e:	f640 3368 	movw	r3, #2920	@ 0xb68
9000c2a2:	429a      	cmp	r2, r3
9000c2a4:	d068      	beq.n	9000c378 <tcp_close_shutdown+0xf4>
      tcp_rst(pcb, pcb->snd_nxt, pcb->rcv_nxt, &pcb->local_ip, &pcb->remote_ip,
9000c2a6:	8b23      	ldrh	r3, [r4, #24]
9000c2a8:	4620      	mov	r0, r4
9000c2aa:	9302      	str	r3, [sp, #8]
9000c2ac:	8ae3      	ldrh	r3, [r4, #22]
9000c2ae:	9301      	str	r3, [sp, #4]
9000c2b0:	1d23      	adds	r3, r4, #4
9000c2b2:	9300      	str	r3, [sp, #0]
9000c2b4:	4623      	mov	r3, r4
9000c2b6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000c2b8:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000c2ba:	f001 fe62 	bl	9000df82 <tcp_rst>
      tcp_pcb_purge(pcb);
9000c2be:	4620      	mov	r0, r4
9000c2c0:	f7ff fe0e 	bl	9000bee0 <tcp_pcb_purge>
      TCP_RMV_ACTIVE(pcb);
9000c2c4:	4a2f      	ldr	r2, [pc, #188]	@ (9000c384 <tcp_close_shutdown+0x100>)
9000c2c6:	6813      	ldr	r3, [r2, #0]
9000c2c8:	42a3      	cmp	r3, r4
9000c2ca:	d110      	bne.n	9000c2ee <tcp_close_shutdown+0x6a>
9000c2cc:	68e3      	ldr	r3, [r4, #12]
9000c2ce:	6013      	str	r3, [r2, #0]
9000c2d0:	2300      	movs	r3, #0
9000c2d2:	2201      	movs	r2, #1
9000c2d4:	60e3      	str	r3, [r4, #12]
9000c2d6:	4b2c      	ldr	r3, [pc, #176]	@ (9000c388 <tcp_close_shutdown+0x104>)
9000c2d8:	701a      	strb	r2, [r3, #0]
      if (tcp_input_pcb == pcb) {
9000c2da:	4b2c      	ldr	r3, [pc, #176]	@ (9000c38c <tcp_close_shutdown+0x108>)
9000c2dc:	681b      	ldr	r3, [r3, #0]
9000c2de:	42a3      	cmp	r3, r4
9000c2e0:	d11d      	bne.n	9000c31e <tcp_close_shutdown+0x9a>
        tcp_trigger_input_pcb_close();
9000c2e2:	f001 f9f5 	bl	9000d6d0 <tcp_trigger_input_pcb_close>
}
9000c2e6:	2000      	movs	r0, #0
9000c2e8:	b005      	add	sp, #20
9000c2ea:	bd30      	pop	{r4, r5, pc}
      TCP_RMV_ACTIVE(pcb);
9000c2ec:	4613      	mov	r3, r2
9000c2ee:	2b00      	cmp	r3, #0
9000c2f0:	d0ee      	beq.n	9000c2d0 <tcp_close_shutdown+0x4c>
9000c2f2:	68da      	ldr	r2, [r3, #12]
9000c2f4:	42a2      	cmp	r2, r4
9000c2f6:	d1f9      	bne.n	9000c2ec <tcp_close_shutdown+0x68>
9000c2f8:	68e2      	ldr	r2, [r4, #12]
9000c2fa:	60da      	str	r2, [r3, #12]
9000c2fc:	e7e8      	b.n	9000c2d0 <tcp_close_shutdown+0x4c>
  switch (pcb->state) {
9000c2fe:	2b01      	cmp	r3, #1
9000c300:	d01a      	beq.n	9000c338 <tcp_close_shutdown+0xb4>
9000c302:	2b02      	cmp	r3, #2
9000c304:	d030      	beq.n	9000c368 <tcp_close_shutdown+0xe4>
9000c306:	2b00      	cmp	r3, #0
9000c308:	d136      	bne.n	9000c378 <tcp_close_shutdown+0xf4>
      if (pcb->local_port != 0) {
9000c30a:	8ae3      	ldrh	r3, [r4, #22]
9000c30c:	b13b      	cbz	r3, 9000c31e <tcp_close_shutdown+0x9a>
        TCP_RMV(&tcp_bound_pcbs, pcb);
9000c30e:	4a20      	ldr	r2, [pc, #128]	@ (9000c390 <tcp_close_shutdown+0x10c>)
9000c310:	6813      	ldr	r3, [r2, #0]
9000c312:	42a3      	cmp	r3, r4
9000c314:	d108      	bne.n	9000c328 <tcp_close_shutdown+0xa4>
9000c316:	68e3      	ldr	r3, [r4, #12]
9000c318:	6013      	str	r3, [r2, #0]
9000c31a:	2300      	movs	r3, #0
9000c31c:	60e3      	str	r3, [r4, #12]
      tcp_free(pcb);
9000c31e:	4620      	mov	r0, r4
9000c320:	f7ff fcb4 	bl	9000bc8c <tcp_free>
      break;
9000c324:	e7df      	b.n	9000c2e6 <tcp_close_shutdown+0x62>
        TCP_RMV(&tcp_bound_pcbs, pcb);
9000c326:	4613      	mov	r3, r2
9000c328:	2b00      	cmp	r3, #0
9000c32a:	d0f6      	beq.n	9000c31a <tcp_close_shutdown+0x96>
9000c32c:	68da      	ldr	r2, [r3, #12]
9000c32e:	42a2      	cmp	r2, r4
9000c330:	d1f9      	bne.n	9000c326 <tcp_close_shutdown+0xa2>
9000c332:	68e2      	ldr	r2, [r4, #12]
9000c334:	60da      	str	r2, [r3, #12]
9000c336:	e7f0      	b.n	9000c31a <tcp_close_shutdown+0x96>
9000c338:	4916      	ldr	r1, [pc, #88]	@ (9000c394 <tcp_close_shutdown+0x110>)
      pcb->listener = NULL;
9000c33a:	2000      	movs	r0, #0
    tcp_remove_listener(*tcp_pcb_lists[i], (struct tcp_pcb_listen *)pcb);
9000c33c:	f851 2f04 	ldr.w	r2, [r1, #4]!
9000c340:	6812      	ldr	r2, [r2, #0]
  for (pcb = list; pcb != NULL; pcb = pcb->next) {
9000c342:	b95a      	cbnz	r2, 9000c35c <tcp_close_shutdown+0xd8>
  for (i = 1; i < LWIP_ARRAYSIZE(tcp_pcb_lists); i++) {
9000c344:	3301      	adds	r3, #1
9000c346:	2b04      	cmp	r3, #4
9000c348:	d1f8      	bne.n	9000c33c <tcp_close_shutdown+0xb8>
      tcp_pcb_remove(&tcp_listen_pcbs.pcbs, pcb);
9000c34a:	4621      	mov	r1, r4
9000c34c:	4812      	ldr	r0, [pc, #72]	@ (9000c398 <tcp_close_shutdown+0x114>)
9000c34e:	f7ff ff71 	bl	9000c234 <tcp_pcb_remove>
  memp_free(MEMP_TCP_PCB_LISTEN, pcb);
9000c352:	4621      	mov	r1, r4
9000c354:	2002      	movs	r0, #2
9000c356:	f7ff f915 	bl	9000b584 <memp_free>
}
9000c35a:	e7c4      	b.n	9000c2e6 <tcp_close_shutdown+0x62>
    if (pcb->listener == lpcb) {
9000c35c:	6f95      	ldr	r5, [r2, #120]	@ 0x78
9000c35e:	42ac      	cmp	r4, r5
      pcb->listener = NULL;
9000c360:	bf08      	it	eq
9000c362:	6790      	streq	r0, [r2, #120]	@ 0x78
  for (pcb = list; pcb != NULL; pcb = pcb->next) {
9000c364:	68d2      	ldr	r2, [r2, #12]
9000c366:	e7ec      	b.n	9000c342 <tcp_close_shutdown+0xbe>
      TCP_PCB_REMOVE_ACTIVE(pcb);
9000c368:	4621      	mov	r1, r4
9000c36a:	4806      	ldr	r0, [pc, #24]	@ (9000c384 <tcp_close_shutdown+0x100>)
9000c36c:	f7ff ff62 	bl	9000c234 <tcp_pcb_remove>
9000c370:	4b05      	ldr	r3, [pc, #20]	@ (9000c388 <tcp_close_shutdown+0x104>)
9000c372:	2201      	movs	r2, #1
9000c374:	701a      	strb	r2, [r3, #0]
9000c376:	e7d2      	b.n	9000c31e <tcp_close_shutdown+0x9a>
      return tcp_close_shutdown_fin(pcb);
9000c378:	4620      	mov	r0, r4
}
9000c37a:	b005      	add	sp, #20
9000c37c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      return tcp_close_shutdown_fin(pcb);
9000c380:	f7ff bc58 	b.w	9000bc34 <tcp_close_shutdown_fin>
9000c384:	2001a480 	.word	0x2001a480
9000c388:	2001a47a 	.word	0x2001a47a
9000c38c:	2001a490 	.word	0x2001a490
9000c390:	2001a488 	.word	0x2001a488
9000c394:	9002ac94 	.word	0x9002ac94
9000c398:	2001a484 	.word	0x2001a484

9000c39c <tcp_close>:
{
9000c39c:	b508      	push	{r3, lr}
  LWIP_ERROR("tcp_close: invalid pcb", pcb != NULL, return ERR_ARG);
9000c39e:	b158      	cbz	r0, 9000c3b8 <tcp_close+0x1c>
  if (pcb->state != LISTEN) {
9000c3a0:	7d03      	ldrb	r3, [r0, #20]
  return tcp_close_shutdown(pcb, 1);
9000c3a2:	2101      	movs	r1, #1
  if (pcb->state != LISTEN) {
9000c3a4:	2b01      	cmp	r3, #1
    tcp_set_flags(pcb, TF_RXCLOSED);
9000c3a6:	bf1e      	ittt	ne
9000c3a8:	8b43      	ldrhne	r3, [r0, #26]
9000c3aa:	f043 0310 	orrne.w	r3, r3, #16
9000c3ae:	8343      	strhne	r3, [r0, #26]
}
9000c3b0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  return tcp_close_shutdown(pcb, 1);
9000c3b4:	f7ff bf66 	b.w	9000c284 <tcp_close_shutdown>
  LWIP_ERROR("tcp_close: invalid pcb", pcb != NULL, return ERR_ARG);
9000c3b8:	4802      	ldr	r0, [pc, #8]	@ (9000c3c4 <tcp_close+0x28>)
9000c3ba:	f01c f9ef 	bl	9002879c <iprintf>
}
9000c3be:	f06f 000f 	mvn.w	r0, #15
9000c3c2:	bd08      	pop	{r3, pc}
9000c3c4:	9002a3f7 	.word	0x9002a3f7

9000c3c8 <tcp_recv_null>:
{
9000c3c8:	b510      	push	{r4, lr}
  LWIP_ERROR("tcp_recv_null: invalid pcb", pcb != NULL, return ERR_ARG);
9000c3ca:	4608      	mov	r0, r1
{
9000c3cc:	4614      	mov	r4, r2
  LWIP_ERROR("tcp_recv_null: invalid pcb", pcb != NULL, return ERR_ARG);
9000c3ce:	b929      	cbnz	r1, 9000c3dc <tcp_recv_null+0x14>
9000c3d0:	480a      	ldr	r0, [pc, #40]	@ (9000c3fc <tcp_recv_null+0x34>)
9000c3d2:	f01c f9e3 	bl	9002879c <iprintf>
9000c3d6:	f06f 000f 	mvn.w	r0, #15
}
9000c3da:	bd10      	pop	{r4, pc}
  if (p != NULL) {
9000c3dc:	b13a      	cbz	r2, 9000c3ee <tcp_recv_null+0x26>
    tcp_recved(pcb, p->tot_len);
9000c3de:	8911      	ldrh	r1, [r2, #8]
9000c3e0:	f7ff fd1a 	bl	9000be18 <tcp_recved>
    pbuf_free(p);
9000c3e4:	4620      	mov	r0, r4
9000c3e6:	f7ff fa7d 	bl	9000b8e4 <pbuf_free>
  return ERR_OK;
9000c3ea:	2000      	movs	r0, #0
9000c3ec:	e7f5      	b.n	9000c3da <tcp_recv_null+0x12>
  } else if (err == ERR_OK) {
9000c3ee:	2b00      	cmp	r3, #0
9000c3f0:	d1fb      	bne.n	9000c3ea <tcp_recv_null+0x22>
}
9000c3f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return tcp_close(pcb);
9000c3f6:	f7ff bfd1 	b.w	9000c39c <tcp_close>
9000c3fa:	bf00      	nop
9000c3fc:	9002a40e 	.word	0x9002a40e

9000c400 <tcp_process_refused_data>:
{
9000c400:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  LWIP_ERROR("tcp_process_refused_data: invalid pcb", pcb != NULL, return ERR_ARG);
9000c402:	4604      	mov	r4, r0
9000c404:	b930      	cbnz	r0, 9000c414 <tcp_process_refused_data+0x14>
9000c406:	f06f 050f 	mvn.w	r5, #15
9000c40a:	481b      	ldr	r0, [pc, #108]	@ (9000c478 <tcp_process_refused_data+0x78>)
9000c40c:	f01c f9c6 	bl	9002879c <iprintf>
}
9000c410:	4628      	mov	r0, r5
9000c412:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    u8_t refused_flags = pcb->refused_data->flags;
9000c414:	6f46      	ldr	r6, [r0, #116]	@ 0x74
    pcb->refused_data = NULL;
9000c416:	2300      	movs	r3, #0
    TCP_EVENT_RECV(pcb, refused_data, ERR_OK, err);
9000c418:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
    u8_t refused_flags = pcb->refused_data->flags;
9000c41c:	7b77      	ldrb	r7, [r6, #13]
    pcb->refused_data = NULL;
9000c41e:	6743      	str	r3, [r0, #116]	@ 0x74
    TCP_EVENT_RECV(pcb, refused_data, ERR_OK, err);
9000c420:	b1e5      	cbz	r5, 9000c45c <tcp_process_refused_data+0x5c>
9000c422:	4601      	mov	r1, r0
9000c424:	4632      	mov	r2, r6
9000c426:	6900      	ldr	r0, [r0, #16]
9000c428:	47a8      	blx	r5
9000c42a:	4605      	mov	r5, r0
    if (err == ERR_OK) {
9000c42c:	b9e8      	cbnz	r0, 9000c46a <tcp_process_refused_data+0x6a>
      if ((refused_flags & PBUF_FLAG_TCP_FIN)
9000c42e:	06bb      	lsls	r3, r7, #26
9000c430:	d5ee      	bpl.n	9000c410 <tcp_process_refused_data+0x10>
        if (pcb->rcv_wnd != TCP_WND_MAX(pcb)) {
9000c432:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
9000c434:	f640 3268 	movw	r2, #2920	@ 0xb68
        TCP_EVENT_CLOSED(pcb, err);
9000c438:	f8d4 6080 	ldr.w	r6, [r4, #128]	@ 0x80
        if (pcb->rcv_wnd != TCP_WND_MAX(pcb)) {
9000c43c:	4293      	cmp	r3, r2
          pcb->rcv_wnd++;
9000c43e:	bf1c      	itt	ne
9000c440:	3301      	addne	r3, #1
9000c442:	8523      	strhne	r3, [r4, #40]	@ 0x28
        TCP_EVENT_CLOSED(pcb, err);
9000c444:	2e00      	cmp	r6, #0
9000c446:	d0e3      	beq.n	9000c410 <tcp_process_refused_data+0x10>
9000c448:	2300      	movs	r3, #0
9000c44a:	4621      	mov	r1, r4
9000c44c:	6920      	ldr	r0, [r4, #16]
9000c44e:	461a      	mov	r2, r3
9000c450:	47b0      	blx	r6
        if (err == ERR_ABRT) {
9000c452:	300d      	adds	r0, #13
9000c454:	d1dc      	bne.n	9000c410 <tcp_process_refused_data+0x10>
          return ERR_ABRT;
9000c456:	f06f 050c 	mvn.w	r5, #12
9000c45a:	e7d9      	b.n	9000c410 <tcp_process_refused_data+0x10>
    TCP_EVENT_RECV(pcb, refused_data, ERR_OK, err);
9000c45c:	4601      	mov	r1, r0
9000c45e:	462b      	mov	r3, r5
9000c460:	4632      	mov	r2, r6
9000c462:	4628      	mov	r0, r5
9000c464:	f7ff ffb0 	bl	9000c3c8 <tcp_recv_null>
9000c468:	e7df      	b.n	9000c42a <tcp_process_refused_data+0x2a>
    } else if (err == ERR_ABRT) {
9000c46a:	350d      	adds	r5, #13
9000c46c:	d0f3      	beq.n	9000c456 <tcp_process_refused_data+0x56>
      return ERR_INPROGRESS;
9000c46e:	f06f 0504 	mvn.w	r5, #4
      pcb->refused_data = refused_data;
9000c472:	6766      	str	r6, [r4, #116]	@ 0x74
      return ERR_INPROGRESS;
9000c474:	e7cc      	b.n	9000c410 <tcp_process_refused_data+0x10>
9000c476:	bf00      	nop
9000c478:	9002a429 	.word	0x9002a429

9000c47c <tcp_fasttmr>:
{
9000c47c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  ++tcp_timer_ctr;
9000c480:	4d1b      	ldr	r5, [pc, #108]	@ (9000c4f0 <tcp_fasttmr+0x74>)
  pcb = tcp_active_pcbs;
9000c482:	4f1c      	ldr	r7, [pc, #112]	@ (9000c4f4 <tcp_fasttmr+0x78>)
  ++tcp_timer_ctr;
9000c484:	782b      	ldrb	r3, [r5, #0]
        tcp_active_pcbs_changed = 0;
9000c486:	4e1c      	ldr	r6, [pc, #112]	@ (9000c4f8 <tcp_fasttmr+0x7c>)
  ++tcp_timer_ctr;
9000c488:	3301      	adds	r3, #1
9000c48a:	702b      	strb	r3, [r5, #0]
  pcb = tcp_active_pcbs;
9000c48c:	683c      	ldr	r4, [r7, #0]
        tcp_active_pcbs_changed = 0;
9000c48e:	f04f 0800 	mov.w	r8, #0
  while (pcb != NULL) {
9000c492:	b90c      	cbnz	r4, 9000c498 <tcp_fasttmr+0x1c>
}
9000c494:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    if (pcb->last_timer != tcp_timer_ctr) {
9000c498:	782b      	ldrb	r3, [r5, #0]
9000c49a:	7fa2      	ldrb	r2, [r4, #30]
9000c49c:	429a      	cmp	r2, r3
9000c49e:	d024      	beq.n	9000c4ea <tcp_fasttmr+0x6e>
      pcb->last_timer = tcp_timer_ctr;
9000c4a0:	77a3      	strb	r3, [r4, #30]
      if (pcb->flags & TF_ACK_DELAY) {
9000c4a2:	8b63      	ldrh	r3, [r4, #26]
9000c4a4:	07d9      	lsls	r1, r3, #31
9000c4a6:	d509      	bpl.n	9000c4bc <tcp_fasttmr+0x40>
        tcp_ack_now(pcb);
9000c4a8:	f043 0302 	orr.w	r3, r3, #2
        tcp_output(pcb);
9000c4ac:	4620      	mov	r0, r4
        tcp_ack_now(pcb);
9000c4ae:	8363      	strh	r3, [r4, #26]
        tcp_output(pcb);
9000c4b0:	f001 fdb0 	bl	9000e014 <tcp_output>
        tcp_clear_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
9000c4b4:	8b63      	ldrh	r3, [r4, #26]
9000c4b6:	f023 0303 	bic.w	r3, r3, #3
9000c4ba:	8363      	strh	r3, [r4, #26]
      if (pcb->flags & TF_CLOSEPEND) {
9000c4bc:	8b63      	ldrh	r3, [r4, #26]
9000c4be:	071a      	lsls	r2, r3, #28
9000c4c0:	d505      	bpl.n	9000c4ce <tcp_fasttmr+0x52>
        tcp_clear_flags(pcb, TF_CLOSEPEND);
9000c4c2:	f023 0308 	bic.w	r3, r3, #8
        tcp_close_shutdown_fin(pcb);
9000c4c6:	4620      	mov	r0, r4
        tcp_clear_flags(pcb, TF_CLOSEPEND);
9000c4c8:	8363      	strh	r3, [r4, #26]
        tcp_close_shutdown_fin(pcb);
9000c4ca:	f7ff fbb3 	bl	9000bc34 <tcp_close_shutdown_fin>
      if (pcb->refused_data != NULL) {
9000c4ce:	6f63      	ldr	r3, [r4, #116]	@ 0x74
      next = pcb->next;
9000c4d0:	f8d4 900c 	ldr.w	r9, [r4, #12]
      if (pcb->refused_data != NULL) {
9000c4d4:	b13b      	cbz	r3, 9000c4e6 <tcp_fasttmr+0x6a>
        tcp_process_refused_data(pcb);
9000c4d6:	4620      	mov	r0, r4
        tcp_active_pcbs_changed = 0;
9000c4d8:	f886 8000 	strb.w	r8, [r6]
        tcp_process_refused_data(pcb);
9000c4dc:	f7ff ff90 	bl	9000c400 <tcp_process_refused_data>
        if (tcp_active_pcbs_changed) {
9000c4e0:	7833      	ldrb	r3, [r6, #0]
9000c4e2:	2b00      	cmp	r3, #0
9000c4e4:	d1d2      	bne.n	9000c48c <tcp_fasttmr+0x10>
      pcb = next;
9000c4e6:	464c      	mov	r4, r9
9000c4e8:	e7d3      	b.n	9000c492 <tcp_fasttmr+0x16>
      pcb = pcb->next;
9000c4ea:	68e4      	ldr	r4, [r4, #12]
9000c4ec:	e7d1      	b.n	9000c492 <tcp_fasttmr+0x16>
9000c4ee:	bf00      	nop
9000c4f0:	2001a478 	.word	0x2001a478
9000c4f4:	2001a480 	.word	0x2001a480
9000c4f8:	2001a47a 	.word	0x2001a47a

9000c4fc <tcp_tmr>:
{
9000c4fc:	b508      	push	{r3, lr}
  tcp_fasttmr();
9000c4fe:	f7ff ffbd 	bl	9000c47c <tcp_fasttmr>
  if (++tcp_timer & 1) {
9000c502:	4a06      	ldr	r2, [pc, #24]	@ (9000c51c <tcp_tmr+0x20>)
9000c504:	7813      	ldrb	r3, [r2, #0]
9000c506:	3301      	adds	r3, #1
9000c508:	b2db      	uxtb	r3, r3
9000c50a:	7013      	strb	r3, [r2, #0]
9000c50c:	07db      	lsls	r3, r3, #31
9000c50e:	d503      	bpl.n	9000c518 <tcp_tmr+0x1c>
}
9000c510:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    tcp_slowtmr();
9000c514:	f7ff bd08 	b.w	9000bf28 <tcp_slowtmr>
}
9000c518:	bd08      	pop	{r3, pc}
9000c51a:	bf00      	nop
9000c51c:	2001a479 	.word	0x2001a479

9000c520 <tcp_abandon>:
{
9000c520:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9000c524:	460e      	mov	r6, r1
  LWIP_ERROR("tcp_abandon: invalid pcb", pcb != NULL, return);
9000c526:	4604      	mov	r4, r0
9000c528:	b928      	cbnz	r0, 9000c536 <tcp_abandon+0x16>
9000c52a:	482f      	ldr	r0, [pc, #188]	@ (9000c5e8 <tcp_abandon+0xc8>)
}
9000c52c:	b004      	add	sp, #16
9000c52e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  LWIP_ERROR("tcp_abandon: invalid pcb", pcb != NULL, return);
9000c532:	f01c b933 	b.w	9002879c <iprintf>
  if (pcb->state == TIME_WAIT) {
9000c536:	7d03      	ldrb	r3, [r0, #20]
9000c538:	2b0a      	cmp	r3, #10
9000c53a:	d109      	bne.n	9000c550 <tcp_abandon+0x30>
    tcp_pcb_remove(&tcp_tw_pcbs, pcb);
9000c53c:	4601      	mov	r1, r0
9000c53e:	482b      	ldr	r0, [pc, #172]	@ (9000c5ec <tcp_abandon+0xcc>)
9000c540:	f7ff fe78 	bl	9000c234 <tcp_pcb_remove>
    tcp_free(pcb);
9000c544:	4620      	mov	r0, r4
}
9000c546:	b004      	add	sp, #16
9000c548:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    tcp_free(pcb);
9000c54c:	f7ff bb9e 	b.w	9000bc8c <tcp_free>
    seqno = pcb->snd_nxt;
9000c550:	f8d0 9050 	ldr.w	r9, [r0, #80]	@ 0x50
    ackno = pcb->rcv_nxt;
9000c554:	f8d0 a024 	ldr.w	sl, [r0, #36]	@ 0x24
    errf = pcb->errf;
9000c558:	f8d0 708c 	ldr.w	r7, [r0, #140]	@ 0x8c
    errf_arg = pcb->callback_arg;
9000c55c:	f8d0 8010 	ldr.w	r8, [r0, #16]
      if (pcb->local_port != 0) {
9000c560:	8ac5      	ldrh	r5, [r0, #22]
    if (pcb->state == CLOSED) {
9000c562:	2b00      	cmp	r3, #0
9000c564:	d134      	bne.n	9000c5d0 <tcp_abandon+0xb0>
      if (pcb->local_port != 0) {
9000c566:	bb0d      	cbnz	r5, 9000c5ac <tcp_abandon+0x8c>
    u16_t local_port = 0;
9000c568:	2500      	movs	r5, #0
    int send_rst = 0;
9000c56a:	462e      	mov	r6, r5
    if (pcb->unacked != NULL) {
9000c56c:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000c56e:	b108      	cbz	r0, 9000c574 <tcp_abandon+0x54>
      tcp_segs_free(pcb->unacked);
9000c570:	f7ff fc88 	bl	9000be84 <tcp_segs_free>
    if (pcb->unsent != NULL) {
9000c574:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
9000c576:	b108      	cbz	r0, 9000c57c <tcp_abandon+0x5c>
      tcp_segs_free(pcb->unsent);
9000c578:	f7ff fc84 	bl	9000be84 <tcp_segs_free>
    if (send_rst) {
9000c57c:	b156      	cbz	r6, 9000c594 <tcp_abandon+0x74>
      tcp_rst(pcb, seqno, ackno, &pcb->local_ip, &pcb->remote_ip, local_port, pcb->remote_port);
9000c57e:	8b23      	ldrh	r3, [r4, #24]
9000c580:	4652      	mov	r2, sl
9000c582:	4649      	mov	r1, r9
9000c584:	4620      	mov	r0, r4
9000c586:	e9cd 5301 	strd	r5, r3, [sp, #4]
9000c58a:	1d23      	adds	r3, r4, #4
9000c58c:	9300      	str	r3, [sp, #0]
9000c58e:	4623      	mov	r3, r4
9000c590:	f001 fcf7 	bl	9000df82 <tcp_rst>
    tcp_free(pcb);
9000c594:	4620      	mov	r0, r4
9000c596:	f7ff fb79 	bl	9000bc8c <tcp_free>
    TCP_EVENT_ERR(last_state, errf, errf_arg, ERR_ABRT);
9000c59a:	b30f      	cbz	r7, 9000c5e0 <tcp_abandon+0xc0>
9000c59c:	f06f 010c 	mvn.w	r1, #12
9000c5a0:	4640      	mov	r0, r8
9000c5a2:	463b      	mov	r3, r7
}
9000c5a4:	b004      	add	sp, #16
9000c5a6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    TCP_EVENT_ERR(last_state, errf, errf_arg, ERR_ABRT);
9000c5aa:	4718      	bx	r3
        TCP_RMV(&tcp_bound_pcbs, pcb);
9000c5ac:	4a10      	ldr	r2, [pc, #64]	@ (9000c5f0 <tcp_abandon+0xd0>)
9000c5ae:	6813      	ldr	r3, [r2, #0]
9000c5b0:	4283      	cmp	r3, r0
9000c5b2:	d105      	bne.n	9000c5c0 <tcp_abandon+0xa0>
9000c5b4:	68c3      	ldr	r3, [r0, #12]
9000c5b6:	6013      	str	r3, [r2, #0]
9000c5b8:	2300      	movs	r3, #0
9000c5ba:	60e3      	str	r3, [r4, #12]
9000c5bc:	e7d4      	b.n	9000c568 <tcp_abandon+0x48>
9000c5be:	4613      	mov	r3, r2
9000c5c0:	2b00      	cmp	r3, #0
9000c5c2:	d0f9      	beq.n	9000c5b8 <tcp_abandon+0x98>
9000c5c4:	68da      	ldr	r2, [r3, #12]
9000c5c6:	42a2      	cmp	r2, r4
9000c5c8:	d1f9      	bne.n	9000c5be <tcp_abandon+0x9e>
9000c5ca:	68e2      	ldr	r2, [r4, #12]
9000c5cc:	60da      	str	r2, [r3, #12]
9000c5ce:	e7f3      	b.n	9000c5b8 <tcp_abandon+0x98>
      TCP_PCB_REMOVE_ACTIVE(pcb);
9000c5d0:	4601      	mov	r1, r0
9000c5d2:	4808      	ldr	r0, [pc, #32]	@ (9000c5f4 <tcp_abandon+0xd4>)
9000c5d4:	f7ff fe2e 	bl	9000c234 <tcp_pcb_remove>
9000c5d8:	4b07      	ldr	r3, [pc, #28]	@ (9000c5f8 <tcp_abandon+0xd8>)
9000c5da:	2201      	movs	r2, #1
9000c5dc:	701a      	strb	r2, [r3, #0]
9000c5de:	e7c5      	b.n	9000c56c <tcp_abandon+0x4c>
}
9000c5e0:	b004      	add	sp, #16
9000c5e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000c5e6:	bf00      	nop
9000c5e8:	9002a44f 	.word	0x9002a44f
9000c5ec:	2001a47c 	.word	0x2001a47c
9000c5f0:	2001a488 	.word	0x2001a488
9000c5f4:	2001a480 	.word	0x2001a480
9000c5f8:	2001a47a 	.word	0x2001a47a

9000c5fc <tcp_abort>:
  tcp_abandon(pcb, 1);
9000c5fc:	2101      	movs	r1, #1
9000c5fe:	f7ff bf8f 	b.w	9000c520 <tcp_abandon>

9000c602 <tcp_accept_null>:
  tcp_abort(pcb);
9000c602:	4608      	mov	r0, r1
{
9000c604:	b508      	push	{r3, lr}
  tcp_abort(pcb);
9000c606:	f7ff fff9 	bl	9000c5fc <tcp_abort>
}
9000c60a:	f06f 000c 	mvn.w	r0, #12
9000c60e:	bd08      	pop	{r3, pc}

9000c610 <tcp_netif_ip_addr_changed_pcblist>:
#endif /* TCP_CALCULATE_EFF_SEND_MSS */

/** Helper function for tcp_netif_ip_addr_changed() that iterates a pcb list */
static void
tcp_netif_ip_addr_changed_pcblist(const ip_addr_t *old_addr, struct tcp_pcb *pcb_list)
{
9000c610:	b538      	push	{r3, r4, r5, lr}
9000c612:	4604      	mov	r4, r0
9000c614:	4608      	mov	r0, r1
  struct tcp_pcb *pcb;
  pcb = pcb_list;

  LWIP_ASSERT("tcp_netif_ip_addr_changed_pcblist: invalid old_addr", old_addr != NULL);

  while (pcb != NULL) {
9000c616:	b900      	cbnz	r0, 9000c61a <tcp_netif_ip_addr_changed_pcblist+0xa>
      pcb = next;
    } else {
      pcb = pcb->next;
    }
  }
}
9000c618:	bd38      	pop	{r3, r4, r5, pc}
    if (ip_addr_cmp(&pcb->local_ip, old_addr)
9000c61a:	6802      	ldr	r2, [r0, #0]
9000c61c:	6823      	ldr	r3, [r4, #0]
      struct tcp_pcb *next = pcb->next;
9000c61e:	68c5      	ldr	r5, [r0, #12]
    if (ip_addr_cmp(&pcb->local_ip, old_addr)
9000c620:	429a      	cmp	r2, r3
9000c622:	d101      	bne.n	9000c628 <tcp_netif_ip_addr_changed_pcblist+0x18>
      tcp_abort(pcb);
9000c624:	f7ff ffea 	bl	9000c5fc <tcp_abort>
{
9000c628:	4628      	mov	r0, r5
9000c62a:	e7f4      	b.n	9000c616 <tcp_netif_ip_addr_changed_pcblist+0x6>

9000c62c <tcp_kill_state>:
  for (pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
9000c62c:	4b0c      	ldr	r3, [pc, #48]	@ (9000c660 <tcp_kill_state+0x34>)
  inactivity = 0;
9000c62e:	2200      	movs	r2, #0
  for (pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
9000c630:	6819      	ldr	r1, [r3, #0]
      if ((u32_t)(tcp_ticks - pcb->tmr) >= inactivity) {
9000c632:	4b0c      	ldr	r3, [pc, #48]	@ (9000c664 <tcp_kill_state+0x38>)
{
9000c634:	b430      	push	{r4, r5}
9000c636:	4604      	mov	r4, r0
      if ((u32_t)(tcp_ticks - pcb->tmr) >= inactivity) {
9000c638:	681d      	ldr	r5, [r3, #0]
  inactive = NULL;
9000c63a:	4610      	mov	r0, r2
  for (pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
9000c63c:	b919      	cbnz	r1, 9000c646 <tcp_kill_state+0x1a>
  if (inactive != NULL) {
9000c63e:	b168      	cbz	r0, 9000c65c <tcp_kill_state+0x30>
}
9000c640:	bc30      	pop	{r4, r5}
    tcp_abandon(inactive, 0);
9000c642:	f7ff bf6d 	b.w	9000c520 <tcp_abandon>
    if (pcb->state == state) {
9000c646:	7d0b      	ldrb	r3, [r1, #20]
9000c648:	42a3      	cmp	r3, r4
9000c64a:	d105      	bne.n	9000c658 <tcp_kill_state+0x2c>
      if ((u32_t)(tcp_ticks - pcb->tmr) >= inactivity) {
9000c64c:	6a0b      	ldr	r3, [r1, #32]
9000c64e:	1aeb      	subs	r3, r5, r3
9000c650:	4293      	cmp	r3, r2
        inactivity = tcp_ticks - pcb->tmr;
9000c652:	bf24      	itt	cs
9000c654:	461a      	movcs	r2, r3
        inactive = pcb;
9000c656:	4608      	movcs	r0, r1
  for (pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
9000c658:	68c9      	ldr	r1, [r1, #12]
9000c65a:	e7ef      	b.n	9000c63c <tcp_kill_state+0x10>
}
9000c65c:	bc30      	pop	{r4, r5}
9000c65e:	4770      	bx	lr
9000c660:	2001a480 	.word	0x2001a480
9000c664:	2001a48c 	.word	0x2001a48c

9000c668 <tcp_alloc>:
{
9000c668:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000c66a:	4604      	mov	r4, r0
  pcb = (struct tcp_pcb *)memp_malloc(MEMP_TCP_PCB);
9000c66c:	2001      	movs	r0, #1
9000c66e:	f7fe ff73 	bl	9000b558 <memp_malloc>
  if (pcb == NULL) {
9000c672:	4603      	mov	r3, r0
9000c674:	2800      	cmp	r0, #0
9000c676:	d136      	bne.n	9000c6e6 <tcp_alloc+0x7e>
  struct tcp_pcb *pcb = tcp_active_pcbs;
9000c678:	4e3f      	ldr	r6, [pc, #252]	@ (9000c778 <tcp_alloc+0x110>)
9000c67a:	6830      	ldr	r0, [r6, #0]
  while (pcb != NULL) {
9000c67c:	2800      	cmp	r0, #0
9000c67e:	d157      	bne.n	9000c730 <tcp_alloc+0xc8>
  for (pcb = tcp_tw_pcbs; pcb != NULL; pcb = pcb->next) {
9000c680:	4b3e      	ldr	r3, [pc, #248]	@ (9000c77c <tcp_alloc+0x114>)
  inactivity = 0;
9000c682:	4601      	mov	r1, r0
    if ((u32_t)(tcp_ticks - pcb->tmr) >= inactivity) {
9000c684:	4d3e      	ldr	r5, [pc, #248]	@ (9000c780 <tcp_alloc+0x118>)
  for (pcb = tcp_tw_pcbs; pcb != NULL; pcb = pcb->next) {
9000c686:	681b      	ldr	r3, [r3, #0]
    if ((u32_t)(tcp_ticks - pcb->tmr) >= inactivity) {
9000c688:	682f      	ldr	r7, [r5, #0]
  for (pcb = tcp_tw_pcbs; pcb != NULL; pcb = pcb->next) {
9000c68a:	2b00      	cmp	r3, #0
9000c68c:	d15b      	bne.n	9000c746 <tcp_alloc+0xde>
  if (inactive != NULL) {
9000c68e:	b108      	cbz	r0, 9000c694 <tcp_alloc+0x2c>
    tcp_abort(inactive);
9000c690:	f7ff ffb4 	bl	9000c5fc <tcp_abort>
    pcb = (struct tcp_pcb *)memp_malloc(MEMP_TCP_PCB);
9000c694:	2001      	movs	r0, #1
9000c696:	f7fe ff5f 	bl	9000b558 <memp_malloc>
    if (pcb == NULL) {
9000c69a:	4603      	mov	r3, r0
9000c69c:	bb18      	cbnz	r0, 9000c6e6 <tcp_alloc+0x7e>
      tcp_kill_state(LAST_ACK);
9000c69e:	2009      	movs	r0, #9
9000c6a0:	f7ff ffc4 	bl	9000c62c <tcp_kill_state>
      pcb = (struct tcp_pcb *)memp_malloc(MEMP_TCP_PCB);
9000c6a4:	2001      	movs	r0, #1
9000c6a6:	f7fe ff57 	bl	9000b558 <memp_malloc>
      if (pcb == NULL) {
9000c6aa:	4603      	mov	r3, r0
9000c6ac:	b9d8      	cbnz	r0, 9000c6e6 <tcp_alloc+0x7e>
        tcp_kill_state(CLOSING);
9000c6ae:	2008      	movs	r0, #8
9000c6b0:	f7ff ffbc 	bl	9000c62c <tcp_kill_state>
        pcb = (struct tcp_pcb *)memp_malloc(MEMP_TCP_PCB);
9000c6b4:	2001      	movs	r0, #1
9000c6b6:	f7fe ff4f 	bl	9000b558 <memp_malloc>
        if (pcb == NULL) {
9000c6ba:	4603      	mov	r3, r0
9000c6bc:	b998      	cbnz	r0, 9000c6e6 <tcp_alloc+0x7e>
  mprio = LWIP_MIN(TCP_PRIO_MAX, prio);
9000c6be:	0622      	lsls	r2, r4, #24
9000c6c0:	d44a      	bmi.n	9000c758 <tcp_alloc+0xf0>
  if (mprio == 0) {
9000c6c2:	b15c      	cbz	r4, 9000c6dc <tcp_alloc+0x74>
9000c6c4:	4621      	mov	r1, r4
  mprio--;
9000c6c6:	3901      	subs	r1, #1
  for (pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
9000c6c8:	6832      	ldr	r2, [r6, #0]
  inactivity = 0;
9000c6ca:	2000      	movs	r0, #0
        ((pcb->prio == mprio) && ((u32_t)(tcp_ticks - pcb->tmr) >= inactivity))) {
9000c6cc:	682e      	ldr	r6, [r5, #0]
  mprio--;
9000c6ce:	b2c9      	uxtb	r1, r1
  for (pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
9000c6d0:	2a00      	cmp	r2, #0
9000c6d2:	d143      	bne.n	9000c75c <tcp_alloc+0xf4>
  if (inactive != NULL) {
9000c6d4:	b113      	cbz	r3, 9000c6dc <tcp_alloc+0x74>
    tcp_abort(inactive);
9000c6d6:	4618      	mov	r0, r3
9000c6d8:	f7ff ff90 	bl	9000c5fc <tcp_abort>
          pcb = (struct tcp_pcb *)memp_malloc(MEMP_TCP_PCB);
9000c6dc:	2001      	movs	r0, #1
9000c6de:	f7fe ff3b 	bl	9000b558 <memp_malloc>
  if (pcb != NULL) {
9000c6e2:	4603      	mov	r3, r0
9000c6e4:	b310      	cbz	r0, 9000c72c <tcp_alloc+0xc4>
    memset(pcb, 0, sizeof(struct tcp_pcb));
9000c6e6:	2298      	movs	r2, #152	@ 0x98
9000c6e8:	4618      	mov	r0, r3
9000c6ea:	2100      	movs	r1, #0
9000c6ec:	f01c f8bb 	bl	90028866 <memset>
    pcb->snd_buf = TCP_SND_BUF;
9000c6f0:	f241 62d0 	movw	r2, #5840	@ 0x16d0
    memset(pcb, 0, sizeof(struct tcp_pcb));
9000c6f4:	4603      	mov	r3, r0
    pcb->prio = prio;
9000c6f6:	7544      	strb	r4, [r0, #21]
    pcb->snd_buf = TCP_SND_BUF;
9000c6f8:	f8a0 2064 	strh.w	r2, [r0, #100]	@ 0x64
    pcb->rcv_wnd = pcb->rcv_ann_wnd = TCPWND_MIN16(TCP_WND);
9000c6fc:	4a21      	ldr	r2, [pc, #132]	@ (9000c784 <tcp_alloc+0x11c>)
9000c6fe:	6282      	str	r2, [r0, #40]	@ 0x28
    pcb->ttl = TCP_TTL;
9000c700:	22ff      	movs	r2, #255	@ 0xff
9000c702:	72c2      	strb	r2, [r0, #11]
    pcb->rto = 3000 / TCP_SLOW_INTERVAL;
9000c704:	2206      	movs	r2, #6
9000c706:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
    pcb->sv = 3000 / TCP_SLOW_INTERVAL;
9000c70a:	87c2      	strh	r2, [r0, #62]	@ 0x3e
    pcb->rtime = -1;
9000c70c:	4a1e      	ldr	r2, [pc, #120]	@ (9000c788 <tcp_alloc+0x120>)
9000c70e:	6302      	str	r2, [r0, #48]	@ 0x30
    pcb->tmr = tcp_ticks;
9000c710:	4a1b      	ldr	r2, [pc, #108]	@ (9000c780 <tcp_alloc+0x118>)
9000c712:	6812      	ldr	r2, [r2, #0]
9000c714:	6202      	str	r2, [r0, #32]
    pcb->last_timer = tcp_timer_ctr;
9000c716:	4a1d      	ldr	r2, [pc, #116]	@ (9000c78c <tcp_alloc+0x124>)
9000c718:	7812      	ldrb	r2, [r2, #0]
9000c71a:	7782      	strb	r2, [r0, #30]
    pcb->cwnd = 1;
9000c71c:	4a1c      	ldr	r2, [pc, #112]	@ (9000c790 <tcp_alloc+0x128>)
9000c71e:	6482      	str	r2, [r0, #72]	@ 0x48
    pcb->recv = tcp_recv_null;
9000c720:	4a1c      	ldr	r2, [pc, #112]	@ (9000c794 <tcp_alloc+0x12c>)
9000c722:	f8c0 2080 	str.w	r2, [r0, #128]	@ 0x80
    pcb->keep_idle  = TCP_KEEPIDLE_DEFAULT;
9000c726:	4a1c      	ldr	r2, [pc, #112]	@ (9000c798 <tcp_alloc+0x130>)
9000c728:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90
}
9000c72c:	4618      	mov	r0, r3
9000c72e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (pcb->flags & TF_CLOSEPEND) {
9000c730:	8b43      	ldrh	r3, [r0, #26]
    struct tcp_pcb *next = pcb->next;
9000c732:	68c5      	ldr	r5, [r0, #12]
    if (pcb->flags & TF_CLOSEPEND) {
9000c734:	0719      	lsls	r1, r3, #28
9000c736:	d504      	bpl.n	9000c742 <tcp_alloc+0xda>
      tcp_clear_flags(pcb, TF_CLOSEPEND);
9000c738:	f023 0308 	bic.w	r3, r3, #8
9000c73c:	8343      	strh	r3, [r0, #26]
      tcp_close_shutdown_fin(pcb);
9000c73e:	f7ff fa79 	bl	9000bc34 <tcp_close_shutdown_fin>
{
9000c742:	4628      	mov	r0, r5
9000c744:	e79a      	b.n	9000c67c <tcp_alloc+0x14>
    if ((u32_t)(tcp_ticks - pcb->tmr) >= inactivity) {
9000c746:	6a1a      	ldr	r2, [r3, #32]
9000c748:	1aba      	subs	r2, r7, r2
9000c74a:	428a      	cmp	r2, r1
9000c74c:	bf34      	ite	cc
9000c74e:	460a      	movcc	r2, r1
      inactive = pcb;
9000c750:	4618      	movcs	r0, r3
  for (pcb = tcp_tw_pcbs; pcb != NULL; pcb = pcb->next) {
9000c752:	68db      	ldr	r3, [r3, #12]
9000c754:	4611      	mov	r1, r2
9000c756:	e798      	b.n	9000c68a <tcp_alloc+0x22>
  mprio = LWIP_MIN(TCP_PRIO_MAX, prio);
9000c758:	217f      	movs	r1, #127	@ 0x7f
9000c75a:	e7b4      	b.n	9000c6c6 <tcp_alloc+0x5e>
    if ((pcb->prio < mprio) ||
9000c75c:	7d57      	ldrb	r7, [r2, #21]
9000c75e:	428f      	cmp	r7, r1
9000c760:	d304      	bcc.n	9000c76c <tcp_alloc+0x104>
9000c762:	d107      	bne.n	9000c774 <tcp_alloc+0x10c>
        ((pcb->prio == mprio) && ((u32_t)(tcp_ticks - pcb->tmr) >= inactivity))) {
9000c764:	6a15      	ldr	r5, [r2, #32]
9000c766:	1b75      	subs	r5, r6, r5
9000c768:	4285      	cmp	r5, r0
9000c76a:	d303      	bcc.n	9000c774 <tcp_alloc+0x10c>
      inactivity = tcp_ticks - pcb->tmr;
9000c76c:	6a10      	ldr	r0, [r2, #32]
      mprio      = pcb->prio;
9000c76e:	4639      	mov	r1, r7
      inactive   = pcb;
9000c770:	4613      	mov	r3, r2
      inactivity = tcp_ticks - pcb->tmr;
9000c772:	1a30      	subs	r0, r6, r0
  for (pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
9000c774:	68d2      	ldr	r2, [r2, #12]
9000c776:	e7ab      	b.n	9000c6d0 <tcp_alloc+0x68>
9000c778:	2001a480 	.word	0x2001a480
9000c77c:	2001a47c 	.word	0x2001a47c
9000c780:	2001a48c 	.word	0x2001a48c
9000c784:	0b680b68 	.word	0x0b680b68
9000c788:	0218ffff 	.word	0x0218ffff
9000c78c:	2001a478 	.word	0x2001a478
9000c790:	16d00001 	.word	0x16d00001
9000c794:	9000c3c9 	.word	0x9000c3c9
9000c798:	006ddd00 	.word	0x006ddd00

9000c79c <tcp_new_ip_type>:
  pcb = tcp_alloc(TCP_PRIO_NORMAL);
9000c79c:	2040      	movs	r0, #64	@ 0x40
9000c79e:	f7ff bf63 	b.w	9000c668 <tcp_alloc>
	...

9000c7a4 <tcp_next_iss>:
  iss += tcp_ticks;       /* XXX */
9000c7a4:	4b03      	ldr	r3, [pc, #12]	@ (9000c7b4 <tcp_next_iss+0x10>)
9000c7a6:	4a04      	ldr	r2, [pc, #16]	@ (9000c7b8 <tcp_next_iss+0x14>)
9000c7a8:	6818      	ldr	r0, [r3, #0]
9000c7aa:	6812      	ldr	r2, [r2, #0]
9000c7ac:	4410      	add	r0, r2
9000c7ae:	6018      	str	r0, [r3, #0]
}
9000c7b0:	4770      	bx	lr
9000c7b2:	bf00      	nop
9000c7b4:	200000a0 	.word	0x200000a0
9000c7b8:	2001a48c 	.word	0x2001a48c

9000c7bc <tcp_eff_send_mss_netif>:
    if (outif == NULL) {
9000c7bc:	b149      	cbz	r1, 9000c7d2 <tcp_eff_send_mss_netif+0x16>
    mtu = outif->mtu;
9000c7be:	8d0b      	ldrh	r3, [r1, #40]	@ 0x28
  if (mtu != 0) {
9000c7c0:	b13b      	cbz	r3, 9000c7d2 <tcp_eff_send_mss_netif+0x16>
    mss_s = (mtu > offset) ? (u16_t)(mtu - offset) : 0;
9000c7c2:	2b28      	cmp	r3, #40	@ 0x28
9000c7c4:	bf38      	it	cc
9000c7c6:	2328      	movcc	r3, #40	@ 0x28
9000c7c8:	3b28      	subs	r3, #40	@ 0x28
    sendmss = LWIP_MIN(sendmss, mss_s);
9000c7ca:	b29b      	uxth	r3, r3
9000c7cc:	4298      	cmp	r0, r3
9000c7ce:	bf28      	it	cs
9000c7d0:	4618      	movcs	r0, r3
}
9000c7d2:	4770      	bx	lr

9000c7d4 <tcp_netif_ip_addr_changed>:
 * @param old_addr IP address of the netif before change
 * @param new_addr IP address of the netif after change or NULL if netif has been removed
 */
void
tcp_netif_ip_addr_changed(const ip_addr_t *old_addr, const ip_addr_t *new_addr)
{
9000c7d4:	b538      	push	{r3, r4, r5, lr}
9000c7d6:	460d      	mov	r5, r1
  struct tcp_pcb_listen *lpcb;

  if (!ip_addr_isany(old_addr)) {
9000c7d8:	4604      	mov	r4, r0
9000c7da:	b180      	cbz	r0, 9000c7fe <tcp_netif_ip_addr_changed+0x2a>
9000c7dc:	6803      	ldr	r3, [r0, #0]
9000c7de:	b173      	cbz	r3, 9000c7fe <tcp_netif_ip_addr_changed+0x2a>
    tcp_netif_ip_addr_changed_pcblist(old_addr, tcp_active_pcbs);
9000c7e0:	4b0b      	ldr	r3, [pc, #44]	@ (9000c810 <tcp_netif_ip_addr_changed+0x3c>)
9000c7e2:	6819      	ldr	r1, [r3, #0]
9000c7e4:	f7ff ff14 	bl	9000c610 <tcp_netif_ip_addr_changed_pcblist>
    tcp_netif_ip_addr_changed_pcblist(old_addr, tcp_bound_pcbs);
9000c7e8:	4b0a      	ldr	r3, [pc, #40]	@ (9000c814 <tcp_netif_ip_addr_changed+0x40>)
9000c7ea:	4620      	mov	r0, r4
9000c7ec:	6819      	ldr	r1, [r3, #0]
9000c7ee:	f7ff ff0f 	bl	9000c610 <tcp_netif_ip_addr_changed_pcblist>

    if (!ip_addr_isany(new_addr)) {
9000c7f2:	b125      	cbz	r5, 9000c7fe <tcp_netif_ip_addr_changed+0x2a>
9000c7f4:	682b      	ldr	r3, [r5, #0]
9000c7f6:	b113      	cbz	r3, 9000c7fe <tcp_netif_ip_addr_changed+0x2a>
      /* PCB bound to current local interface address? */
      for (lpcb = tcp_listen_pcbs.listen_pcbs; lpcb != NULL; lpcb = lpcb->next) {
9000c7f8:	4b07      	ldr	r3, [pc, #28]	@ (9000c818 <tcp_netif_ip_addr_changed+0x44>)
9000c7fa:	681b      	ldr	r3, [r3, #0]
9000c7fc:	b903      	cbnz	r3, 9000c800 <tcp_netif_ip_addr_changed+0x2c>
          ip_addr_copy(lpcb->local_ip, *new_addr);
        }
      }
    }
  }
}
9000c7fe:	bd38      	pop	{r3, r4, r5, pc}
        if (ip_addr_cmp(&lpcb->local_ip, old_addr)) {
9000c800:	6819      	ldr	r1, [r3, #0]
9000c802:	6822      	ldr	r2, [r4, #0]
9000c804:	4291      	cmp	r1, r2
          ip_addr_copy(lpcb->local_ip, *new_addr);
9000c806:	bf04      	itt	eq
9000c808:	682a      	ldreq	r2, [r5, #0]
9000c80a:	601a      	streq	r2, [r3, #0]
      for (lpcb = tcp_listen_pcbs.listen_pcbs; lpcb != NULL; lpcb = lpcb->next) {
9000c80c:	68db      	ldr	r3, [r3, #12]
9000c80e:	e7f5      	b.n	9000c7fc <tcp_netif_ip_addr_changed+0x28>
9000c810:	2001a480 	.word	0x2001a480
9000c814:	2001a488 	.word	0x2001a488
9000c818:	2001a484 	.word	0x2001a484

9000c81c <tcp_get_next_optbyte>:
}

static u8_t
tcp_get_next_optbyte(void)
{
  u16_t optidx = tcp_optidx++;
9000c81c:	4a09      	ldr	r2, [pc, #36]	@ (9000c844 <tcp_get_next_optbyte+0x28>)
9000c81e:	8813      	ldrh	r3, [r2, #0]
9000c820:	1c59      	adds	r1, r3, #1
9000c822:	8011      	strh	r1, [r2, #0]
  if ((tcphdr_opt2 == NULL) || (optidx < tcphdr_opt1len)) {
9000c824:	4a08      	ldr	r2, [pc, #32]	@ (9000c848 <tcp_get_next_optbyte+0x2c>)
9000c826:	6812      	ldr	r2, [r2, #0]
9000c828:	b11a      	cbz	r2, 9000c832 <tcp_get_next_optbyte+0x16>
9000c82a:	4908      	ldr	r1, [pc, #32]	@ (9000c84c <tcp_get_next_optbyte+0x30>)
9000c82c:	8809      	ldrh	r1, [r1, #0]
9000c82e:	428b      	cmp	r3, r1
9000c830:	d204      	bcs.n	9000c83c <tcp_get_next_optbyte+0x20>
    u8_t *opts = (u8_t *)tcphdr + TCP_HLEN;
    return opts[optidx];
9000c832:	4a07      	ldr	r2, [pc, #28]	@ (9000c850 <tcp_get_next_optbyte+0x34>)
9000c834:	6812      	ldr	r2, [r2, #0]
9000c836:	4413      	add	r3, r2
9000c838:	7d18      	ldrb	r0, [r3, #20]
9000c83a:	4770      	bx	lr
  } else {
    u8_t idx = (u8_t)(optidx - tcphdr_opt1len);
9000c83c:	1a5b      	subs	r3, r3, r1
    return tcphdr_opt2[idx];
9000c83e:	b2db      	uxtb	r3, r3
9000c840:	5cd0      	ldrb	r0, [r2, r3]
  }
}
9000c842:	4770      	bx	lr
9000c844:	2001a4a8 	.word	0x2001a4a8
9000c848:	2001a4ac 	.word	0x2001a4ac
9000c84c:	2001a4b0 	.word	0x2001a4b0
9000c850:	2001a4b4 	.word	0x2001a4b4

9000c854 <tcp_parseopt>:
 *
 * @param pcb the tcp_pcb for which a segment arrived
 */
static void
tcp_parseopt(struct tcp_pcb *pcb)
{
9000c854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#endif

  LWIP_ASSERT("tcp_parseopt: invalid pcb", pcb != NULL);

  /* Parse the TCP MSS option, if present. */
  if (tcphdr_optlen != 0) {
9000c856:	4b1b      	ldr	r3, [pc, #108]	@ (9000c8c4 <tcp_parseopt+0x70>)
{
9000c858:	4606      	mov	r6, r0
  if (tcphdr_optlen != 0) {
9000c85a:	881d      	ldrh	r5, [r3, #0]
9000c85c:	b385      	cbz	r5, 9000c8c0 <tcp_parseopt+0x6c>
    for (tcp_optidx = 0; tcp_optidx < tcphdr_optlen; ) {
9000c85e:	4c1a      	ldr	r4, [pc, #104]	@ (9000c8c8 <tcp_parseopt+0x74>)
9000c860:	2300      	movs	r3, #0
               and we don't process them further. */
            return;
          }
          /* All other options have a length field, so that we easily
             can skip past them. */
          tcp_optidx += data - 2;
9000c862:	8023      	strh	r3, [r4, #0]
9000c864:	e029      	b.n	9000c8ba <tcp_parseopt+0x66>
      u8_t opt = tcp_get_next_optbyte();
9000c866:	f7ff ffd9 	bl	9000c81c <tcp_get_next_optbyte>
      switch (opt) {
9000c86a:	2801      	cmp	r0, #1
9000c86c:	d025      	beq.n	9000c8ba <tcp_parseopt+0x66>
9000c86e:	2802      	cmp	r0, #2
9000c870:	d008      	beq.n	9000c884 <tcp_parseopt+0x30>
9000c872:	b328      	cbz	r0, 9000c8c0 <tcp_parseopt+0x6c>
          data = tcp_get_next_optbyte();
9000c874:	f7ff ffd2 	bl	9000c81c <tcp_get_next_optbyte>
          if (data < 2) {
9000c878:	2801      	cmp	r0, #1
9000c87a:	d921      	bls.n	9000c8c0 <tcp_parseopt+0x6c>
          tcp_optidx += data - 2;
9000c87c:	8823      	ldrh	r3, [r4, #0]
9000c87e:	3b02      	subs	r3, #2
9000c880:	4403      	add	r3, r0
9000c882:	e7ee      	b.n	9000c862 <tcp_parseopt+0xe>
          if (tcp_get_next_optbyte() != LWIP_TCP_OPT_LEN_MSS || (tcp_optidx - 2 + LWIP_TCP_OPT_LEN_MSS) > tcphdr_optlen) {
9000c884:	f7ff ffca 	bl	9000c81c <tcp_get_next_optbyte>
9000c888:	2804      	cmp	r0, #4
9000c88a:	d119      	bne.n	9000c8c0 <tcp_parseopt+0x6c>
9000c88c:	8823      	ldrh	r3, [r4, #0]
9000c88e:	3301      	adds	r3, #1
9000c890:	42ab      	cmp	r3, r5
9000c892:	da15      	bge.n	9000c8c0 <tcp_parseopt+0x6c>
          mss = (u16_t)(tcp_get_next_optbyte() << 8);
9000c894:	f7ff ffc2 	bl	9000c81c <tcp_get_next_optbyte>
9000c898:	0207      	lsls	r7, r0, #8
          mss |= tcp_get_next_optbyte();
9000c89a:	f7ff ffbf 	bl	9000c81c <tcp_get_next_optbyte>
          pcb->mss = ((mss > TCP_MSS) || (mss == 0)) ? TCP_MSS : mss;
9000c89e:	f240 51b4 	movw	r1, #1460	@ 0x5b4
          mss = (u16_t)(tcp_get_next_optbyte() << 8);
9000c8a2:	b2bf      	uxth	r7, r7
          mss |= tcp_get_next_optbyte();
9000c8a4:	ea40 0307 	orr.w	r3, r0, r7
          pcb->mss = ((mss > TCP_MSS) || (mss == 0)) ? TCP_MSS : mss;
9000c8a8:	f240 50b3 	movw	r0, #1459	@ 0x5b3
          mss |= tcp_get_next_optbyte();
9000c8ac:	b29b      	uxth	r3, r3
          pcb->mss = ((mss > TCP_MSS) || (mss == 0)) ? TCP_MSS : mss;
9000c8ae:	1e5a      	subs	r2, r3, #1
9000c8b0:	b292      	uxth	r2, r2
9000c8b2:	4282      	cmp	r2, r0
9000c8b4:	bf88      	it	hi
9000c8b6:	460b      	movhi	r3, r1
9000c8b8:	8673      	strh	r3, [r6, #50]	@ 0x32
    for (tcp_optidx = 0; tcp_optidx < tcphdr_optlen; ) {
9000c8ba:	8823      	ldrh	r3, [r4, #0]
9000c8bc:	42ab      	cmp	r3, r5
9000c8be:	d3d2      	bcc.n	9000c866 <tcp_parseopt+0x12>
      }
    }
  }
}
9000c8c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000c8c2:	bf00      	nop
9000c8c4:	2001a4b2 	.word	0x2001a4b2
9000c8c8:	2001a4a8 	.word	0x2001a4a8

9000c8cc <tcp_input_delayed_close>:
  if (recv_flags & TF_CLOSED) {
9000c8cc:	4b0c      	ldr	r3, [pc, #48]	@ (9000c900 <tcp_input_delayed_close+0x34>)
{
9000c8ce:	b510      	push	{r4, lr}
  if (recv_flags & TF_CLOSED) {
9000c8d0:	781b      	ldrb	r3, [r3, #0]
{
9000c8d2:	4604      	mov	r4, r0
  if (recv_flags & TF_CLOSED) {
9000c8d4:	f013 0010 	ands.w	r0, r3, #16
9000c8d8:	d011      	beq.n	9000c8fe <tcp_input_delayed_close+0x32>
    if (!(pcb->flags & TF_RXCLOSED)) {
9000c8da:	8b63      	ldrh	r3, [r4, #26]
9000c8dc:	06db      	lsls	r3, r3, #27
9000c8de:	d406      	bmi.n	9000c8ee <tcp_input_delayed_close+0x22>
      TCP_EVENT_ERR(pcb->state, pcb->errf, pcb->callback_arg, ERR_CLSD);
9000c8e0:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
9000c8e4:	b11b      	cbz	r3, 9000c8ee <tcp_input_delayed_close+0x22>
9000c8e6:	f06f 010e 	mvn.w	r1, #14
9000c8ea:	6920      	ldr	r0, [r4, #16]
9000c8ec:	4798      	blx	r3
    tcp_pcb_remove(&tcp_active_pcbs, pcb);
9000c8ee:	4621      	mov	r1, r4
9000c8f0:	4804      	ldr	r0, [pc, #16]	@ (9000c904 <tcp_input_delayed_close+0x38>)
9000c8f2:	f7ff fc9f 	bl	9000c234 <tcp_pcb_remove>
    tcp_free(pcb);
9000c8f6:	4620      	mov	r0, r4
9000c8f8:	f7ff f9c8 	bl	9000bc8c <tcp_free>
9000c8fc:	2001      	movs	r0, #1
}
9000c8fe:	bd10      	pop	{r4, pc}
9000c900:	2001a498 	.word	0x2001a498
9000c904:	2001a480 	.word	0x2001a480

9000c908 <tcp_free_acked_segments.isra.0>:
tcp_free_acked_segments(struct tcp_pcb *pcb, struct tcp_seg *seg_list, const char *dbg_list_name,
9000c908:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000c90c:	4606      	mov	r6, r0
9000c90e:	460c      	mov	r4, r1
         TCP_SEQ_LEQ(lwip_ntohl(seg_list->tcphdr->seqno) +
9000c910:	f8df 8060 	ldr.w	r8, [pc, #96]	@ 9000c974 <tcp_free_acked_segments.isra.0+0x6c>
    recv_acked = (tcpwnd_size_t)(recv_acked + next->len);
9000c914:	4f16      	ldr	r7, [pc, #88]	@ (9000c970 <tcp_free_acked_segments.isra.0+0x68>)
  while (seg_list != NULL &&
9000c916:	b1ac      	cbz	r4, 9000c944 <tcp_free_acked_segments.isra.0+0x3c>
         TCP_SEQ_LEQ(lwip_ntohl(seg_list->tcphdr->seqno) +
9000c918:	6923      	ldr	r3, [r4, #16]
9000c91a:	6858      	ldr	r0, [r3, #4]
9000c91c:	f7fe fbcd 	bl	9000b0ba <lwip_htonl>
9000c920:	6923      	ldr	r3, [r4, #16]
9000c922:	4681      	mov	r9, r0
9000c924:	8925      	ldrh	r5, [r4, #8]
9000c926:	8998      	ldrh	r0, [r3, #12]
9000c928:	f7fe fbc4 	bl	9000b0b4 <lwip_htons>
9000c92c:	f8d8 3000 	ldr.w	r3, [r8]
9000c930:	f010 0003 	ands.w	r0, r0, #3
9000c934:	eba5 0503 	sub.w	r5, r5, r3
9000c938:	bf18      	it	ne
9000c93a:	2001      	movne	r0, #1
9000c93c:	444d      	add	r5, r9
9000c93e:	4405      	add	r5, r0
  while (seg_list != NULL &&
9000c940:	2d00      	cmp	r5, #0
9000c942:	dd02      	ble.n	9000c94a <tcp_free_acked_segments.isra.0+0x42>
}
9000c944:	4620      	mov	r0, r4
9000c946:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    clen = pbuf_clen(next->p);
9000c94a:	e9d4 5000 	ldrd	r5, r0, [r4]
9000c94e:	f7ff f88b 	bl	9000ba68 <pbuf_clen>
    pcb->snd_queuelen = (u16_t)(pcb->snd_queuelen - clen);
9000c952:	f8b6 3066 	ldrh.w	r3, [r6, #102]	@ 0x66
    recv_acked = (tcpwnd_size_t)(recv_acked + next->len);
9000c956:	883a      	ldrh	r2, [r7, #0]
    pcb->snd_queuelen = (u16_t)(pcb->snd_queuelen - clen);
9000c958:	1a1b      	subs	r3, r3, r0
    tcp_seg_free(next);
9000c95a:	4620      	mov	r0, r4
    pcb->snd_queuelen = (u16_t)(pcb->snd_queuelen - clen);
9000c95c:	f8a6 3066 	strh.w	r3, [r6, #102]	@ 0x66
    recv_acked = (tcpwnd_size_t)(recv_acked + next->len);
9000c960:	8923      	ldrh	r3, [r4, #8]
    seg_list = seg_list->next;
9000c962:	462c      	mov	r4, r5
    recv_acked = (tcpwnd_size_t)(recv_acked + next->len);
9000c964:	4413      	add	r3, r2
9000c966:	803b      	strh	r3, [r7, #0]
    tcp_seg_free(next);
9000c968:	f7ff fa7e 	bl	9000be68 <tcp_seg_free>
    if (pcb->snd_queuelen != 0) {
9000c96c:	e7d3      	b.n	9000c916 <tcp_free_acked_segments.isra.0+0xe>
9000c96e:	bf00      	nop
9000c970:	2001a49c 	.word	0x2001a49c
9000c974:	2001a4a0 	.word	0x2001a4a0

9000c978 <tcp_receive>:
  if (flags & TCP_ACK) {
9000c978:	4a9d      	ldr	r2, [pc, #628]	@ (9000cbf0 <tcp_receive+0x278>)
{
9000c97a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (flags & TCP_ACK) {
9000c97e:	7812      	ldrb	r2, [r2, #0]
{
9000c980:	4604      	mov	r4, r0
    if (TCP_SEQ_LT(pcb->snd_wl1, seqno) ||
9000c982:	4e9c      	ldr	r6, [pc, #624]	@ (9000cbf4 <tcp_receive+0x27c>)
  if (flags & TCP_ACK) {
9000c984:	f012 0f10 	tst.w	r2, #16
9000c988:	4f9b      	ldr	r7, [pc, #620]	@ (9000cbf8 <tcp_receive+0x280>)
    if (TCP_SEQ_LT(pcb->snd_wl1, seqno) ||
9000c98a:	6833      	ldr	r3, [r6, #0]
  if (flags & TCP_ACK) {
9000c98c:	f000 8087 	beq.w	9000ca9e <tcp_receive+0x126>
    right_wnd_edge = pcb->snd_wnd + pcb->snd_wl2;
9000c990:	f8b0 1060 	ldrh.w	r1, [r0, #96]	@ 0x60
        (pcb->snd_wl1 == seqno && TCP_SEQ_LT(pcb->snd_wl2, ackno)) ||
9000c994:	f8df 9278 	ldr.w	r9, [pc, #632]	@ 9000cc10 <tcp_receive+0x298>
    if (TCP_SEQ_LT(pcb->snd_wl1, seqno) ||
9000c998:	e9d0 0c15 	ldrd	r0, ip, [r0, #84]	@ 0x54
        (pcb->snd_wl1 == seqno && TCP_SEQ_LT(pcb->snd_wl2, ackno)) ||
9000c99c:	f8d9 2000 	ldr.w	r2, [r9]
    if (TCP_SEQ_LT(pcb->snd_wl1, seqno) ||
9000c9a0:	eba0 0e03 	sub.w	lr, r0, r3
9000c9a4:	f1be 0f00 	cmp.w	lr, #0
9000c9a8:	db0c      	blt.n	9000c9c4 <tcp_receive+0x4c>
9000c9aa:	4298      	cmp	r0, r3
9000c9ac:	d103      	bne.n	9000c9b6 <tcp_receive+0x3e>
        (pcb->snd_wl1 == seqno && TCP_SEQ_LT(pcb->snd_wl2, ackno)) ||
9000c9ae:	ebac 0002 	sub.w	r0, ip, r2
9000c9b2:	2800      	cmp	r0, #0
9000c9b4:	db06      	blt.n	9000c9c4 <tcp_receive+0x4c>
9000c9b6:	4594      	cmp	ip, r2
9000c9b8:	d113      	bne.n	9000c9e2 <tcp_receive+0x6a>
        (pcb->snd_wl2 == ackno && (u32_t)SND_WND_SCALE(pcb, tcphdr->wnd) > pcb->snd_wnd)) {
9000c9ba:	4890      	ldr	r0, [pc, #576]	@ (9000cbfc <tcp_receive+0x284>)
9000c9bc:	6800      	ldr	r0, [r0, #0]
9000c9be:	89c0      	ldrh	r0, [r0, #14]
9000c9c0:	4288      	cmp	r0, r1
9000c9c2:	d90e      	bls.n	9000c9e2 <tcp_receive+0x6a>
      pcb->snd_wnd = SND_WND_SCALE(pcb, tcphdr->wnd);
9000c9c4:	488d      	ldr	r0, [pc, #564]	@ (9000cbfc <tcp_receive+0x284>)
      if (pcb->snd_wnd_max < pcb->snd_wnd) {
9000c9c6:	f8b4 8062 	ldrh.w	r8, [r4, #98]	@ 0x62
      pcb->snd_wnd = SND_WND_SCALE(pcb, tcphdr->wnd);
9000c9ca:	6800      	ldr	r0, [r0, #0]
9000c9cc:	89c0      	ldrh	r0, [r0, #14]
9000c9ce:	fa1f fe80 	uxth.w	lr, r0
9000c9d2:	f8a4 0060 	strh.w	r0, [r4, #96]	@ 0x60
      if (pcb->snd_wnd_max < pcb->snd_wnd) {
9000c9d6:	45f0      	cmp	r8, lr
      pcb->snd_wl2 = ackno;
9000c9d8:	e9c4 3215 	strd	r3, r2, [r4, #84]	@ 0x54
        pcb->snd_wnd_max = pcb->snd_wnd;
9000c9dc:	bf38      	it	cc
9000c9de:	f8a4 0062 	strhcc.w	r0, [r4, #98]	@ 0x62
    if (TCP_SEQ_LEQ(ackno, pcb->lastack)) {
9000c9e2:	6c60      	ldr	r0, [r4, #68]	@ 0x44
9000c9e4:	1a13      	subs	r3, r2, r0
9000c9e6:	2b00      	cmp	r3, #0
9000c9e8:	f300 8114 	bgt.w	9000cc14 <tcp_receive+0x29c>
      if (tcplen == 0) {
9000c9ec:	883b      	ldrh	r3, [r7, #0]
9000c9ee:	2b00      	cmp	r3, #0
9000c9f0:	f040 80f9 	bne.w	9000cbe6 <tcp_receive+0x26e>
        if (pcb->snd_wl2 + pcb->snd_wnd == right_wnd_edge) {
9000c9f4:	f8b4 3060 	ldrh.w	r3, [r4, #96]	@ 0x60
    right_wnd_edge = pcb->snd_wnd + pcb->snd_wl2;
9000c9f8:	4461      	add	r1, ip
        if (pcb->snd_wl2 + pcb->snd_wnd == right_wnd_edge) {
9000c9fa:	6da5      	ldr	r5, [r4, #88]	@ 0x58
9000c9fc:	442b      	add	r3, r5
9000c9fe:	428b      	cmp	r3, r1
9000ca00:	f040 80f1 	bne.w	9000cbe6 <tcp_receive+0x26e>
          if (pcb->rtime >= 0) {
9000ca04:	f9b4 3030 	ldrsh.w	r3, [r4, #48]	@ 0x30
9000ca08:	2b00      	cmp	r3, #0
9000ca0a:	f2c0 80ec 	blt.w	9000cbe6 <tcp_receive+0x26e>
            if (pcb->lastack == ackno) {
9000ca0e:	4290      	cmp	r0, r2
9000ca10:	f040 80e9 	bne.w	9000cbe6 <tcp_receive+0x26e>
              if ((u8_t)(pcb->dupacks + 1) > pcb->dupacks) {
9000ca14:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9000ca18:	2bff      	cmp	r3, #255	@ 0xff
                ++pcb->dupacks;
9000ca1a:	bf1c      	itt	ne
9000ca1c:	3301      	addne	r3, #1
9000ca1e:	f884 3043 	strbne.w	r3, [r4, #67]	@ 0x43
              if (pcb->dupacks > 3) {
9000ca22:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9000ca26:	2b03      	cmp	r3, #3
9000ca28:	d90e      	bls.n	9000ca48 <tcp_receive+0xd0>
                TCP_WND_INC(pcb->cwnd, pcb->mss);
9000ca2a:	f8b4 2048 	ldrh.w	r2, [r4, #72]	@ 0x48
9000ca2e:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
9000ca30:	4413      	add	r3, r2
9000ca32:	b29b      	uxth	r3, r3
9000ca34:	429a      	cmp	r2, r3
9000ca36:	bf88      	it	hi
9000ca38:	f64f 73ff 	movwhi	r3, #65535	@ 0xffff
9000ca3c:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
                tcp_rexmit_fast(pcb);
9000ca40:	4620      	mov	r0, r4
9000ca42:	f001 fa7a 	bl	9000df3a <tcp_rexmit_fast>
      if (!found_dupack) {
9000ca46:	e000      	b.n	9000ca4a <tcp_receive+0xd2>
              if (pcb->dupacks >= 3) {
9000ca48:	d0fa      	beq.n	9000ca40 <tcp_receive+0xc8>
    if (pcb->rttest && TCP_SEQ_LT(pcb->rtseq, ackno)) {
9000ca4a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000ca4c:	b33b      	cbz	r3, 9000ca9e <tcp_receive+0x126>
9000ca4e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000ca50:	f8d9 1000 	ldr.w	r1, [r9]
9000ca54:	1a52      	subs	r2, r2, r1
9000ca56:	2a00      	cmp	r2, #0
9000ca58:	da21      	bge.n	9000ca9e <tcp_receive+0x126>
      m = (s16_t)(tcp_ticks - pcb->rttest);
9000ca5a:	4a69      	ldr	r2, [pc, #420]	@ (9000cc00 <tcp_receive+0x288>)
9000ca5c:	b29b      	uxth	r3, r3
      m = (s16_t)(m - (pcb->sa >> 3));
9000ca5e:	f9b4 c03c 	ldrsh.w	ip, [r4, #60]	@ 0x3c
      m = (s16_t)(tcp_ticks - pcb->rttest);
9000ca62:	8815      	ldrh	r5, [r2, #0]
      m = (s16_t)(m - (pcb->sa >> 3));
9000ca64:	f3cc 01cf 	ubfx	r1, ip, #3, #16
      m = (s16_t)(tcp_ticks - pcb->rttest);
9000ca68:	1aea      	subs	r2, r5, r3
      m = (s16_t)(m - (pcb->sa >> 3));
9000ca6a:	1a52      	subs	r2, r2, r1
9000ca6c:	b210      	sxth	r0, r2
      pcb->sa = (s16_t)(pcb->sa + m);
9000ca6e:	fa1c f282 	uxtah	r2, ip, r2
      if (m < 0) {
9000ca72:	2800      	cmp	r0, #0
      pcb->sa = (s16_t)(pcb->sa + m);
9000ca74:	b212      	sxth	r2, r2
        m = (s16_t) - m;
9000ca76:	bfb8      	it	lt
9000ca78:	1b5b      	sublt	r3, r3, r5
      pcb->sa = (s16_t)(pcb->sa + m);
9000ca7a:	87a2      	strh	r2, [r4, #60]	@ 0x3c
        m = (s16_t) - m;
9000ca7c:	bfb8      	it	lt
9000ca7e:	18c9      	addlt	r1, r1, r3
      m = (s16_t)(m - (pcb->sv >> 2));
9000ca80:	f9b4 303e 	ldrsh.w	r3, [r4, #62]	@ 0x3e
        m = (s16_t) - m;
9000ca84:	bfb8      	it	lt
9000ca86:	b208      	sxthlt	r0, r1
      pcb->sv = (s16_t)(pcb->sv + m);
9000ca88:	eba3 03a3 	sub.w	r3, r3, r3, asr #2
9000ca8c:	4403      	add	r3, r0
9000ca8e:	b29b      	uxth	r3, r3
9000ca90:	87e3      	strh	r3, [r4, #62]	@ 0x3e
      pcb->rto = (s16_t)((pcb->sa >> 3) + pcb->sv);
9000ca92:	eb03 03e2 	add.w	r3, r3, r2, asr #3
9000ca96:	f8a4 3040 	strh.w	r3, [r4, #64]	@ 0x40
      pcb->rttest = 0;
9000ca9a:	2300      	movs	r3, #0
9000ca9c:	6363      	str	r3, [r4, #52]	@ 0x34
  if ((tcplen > 0) && (pcb->state < CLOSE_WAIT)) {
9000ca9e:	883d      	ldrh	r5, [r7, #0]
    if (TCP_SEQ_BETWEEN(pcb->rcv_nxt, seqno + 1, seqno + tcplen - 1)) {
9000caa0:	6833      	ldr	r3, [r6, #0]
9000caa2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
  if ((tcplen > 0) && (pcb->state < CLOSE_WAIT)) {
9000caa4:	2d00      	cmp	r5, #0
9000caa6:	f000 815b 	beq.w	9000cd60 <tcp_receive+0x3e8>
9000caaa:	7d21      	ldrb	r1, [r4, #20]
9000caac:	2906      	cmp	r1, #6
9000caae:	f200 8157 	bhi.w	9000cd60 <tcp_receive+0x3e8>
    if (TCP_SEQ_BETWEEN(pcb->rcv_nxt, seqno + 1, seqno + tcplen - 1)) {
9000cab2:	1ad1      	subs	r1, r2, r3
9000cab4:	2901      	cmp	r1, #1
9000cab6:	f100 8141 	bmi.w	9000cd3c <tcp_receive+0x3c4>
9000caba:	f1c3 0001 	rsb	r0, r3, #1
9000cabe:	1b40      	subs	r0, r0, r5
9000cac0:	4410      	add	r0, r2
9000cac2:	2800      	cmp	r0, #0
9000cac4:	f300 813a 	bgt.w	9000cd3c <tcp_receive+0x3c4>
      struct pbuf *p = inseg.p;
9000cac8:	4d4e      	ldr	r5, [pc, #312]	@ (9000cc04 <tcp_receive+0x28c>)
      off = (u16_t)off32;
9000caca:	b289      	uxth	r1, r1
        p->len = 0;
9000cacc:	f04f 0c00 	mov.w	ip, #0
      inseg.len -= off;
9000cad0:	892b      	ldrh	r3, [r5, #8]
      struct pbuf *p = inseg.p;
9000cad2:	6868      	ldr	r0, [r5, #4]
      inseg.len -= off;
9000cad4:	1a5b      	subs	r3, r3, r1
9000cad6:	812b      	strh	r3, [r5, #8]
      new_tot_len = (u16_t)(inseg.p->tot_len - off);
9000cad8:	8903      	ldrh	r3, [r0, #8]
9000cada:	1a5b      	subs	r3, r3, r1
9000cadc:	b29b      	uxth	r3, r3
      while (p->len < off) {
9000cade:	8942      	ldrh	r2, [r0, #10]
9000cae0:	428a      	cmp	r2, r1
9000cae2:	f0c0 8124 	bcc.w	9000cd2e <tcp_receive+0x3b6>
      pbuf_remove_header(p, off);
9000cae6:	f7fe fed9 	bl	9000b89c <pbuf_remove_header>
      inseg.tcphdr->seqno = seqno = pcb->rcv_nxt;
9000caea:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000caec:	692a      	ldr	r2, [r5, #16]
9000caee:	6033      	str	r3, [r6, #0]
9000caf0:	6053      	str	r3, [r2, #4]
    if (TCP_SEQ_BETWEEN(seqno, pcb->rcv_nxt,
9000caf2:	6831      	ldr	r1, [r6, #0]
9000caf4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000caf6:	1a8b      	subs	r3, r1, r2
9000caf8:	2b00      	cmp	r3, #0
9000cafa:	f2c0 812c 	blt.w	9000cd56 <tcp_receive+0x3de>
9000cafe:	1c4b      	adds	r3, r1, #1
9000cb00:	8d20      	ldrh	r0, [r4, #40]	@ 0x28
9000cb02:	1a9b      	subs	r3, r3, r2
9000cb04:	1a1b      	subs	r3, r3, r0
9000cb06:	2b00      	cmp	r3, #0
9000cb08:	f300 8125 	bgt.w	9000cd56 <tcp_receive+0x3de>
      if (pcb->rcv_nxt == seqno) {
9000cb0c:	4291      	cmp	r1, r2
9000cb0e:	f040 8122 	bne.w	9000cd56 <tcp_receive+0x3de>
        tcplen = TCP_TCPLEN(&inseg);
9000cb12:	4d3c      	ldr	r5, [pc, #240]	@ (9000cc04 <tcp_receive+0x28c>)
9000cb14:	692b      	ldr	r3, [r5, #16]
9000cb16:	f8b5 8008 	ldrh.w	r8, [r5, #8]
9000cb1a:	8998      	ldrh	r0, [r3, #12]
9000cb1c:	f7fe faca 	bl	9000b0b4 <lwip_htons>
9000cb20:	f010 0003 	ands.w	r0, r0, #3
        if (tcplen > pcb->rcv_wnd) {
9000cb24:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
        tcplen = TCP_TCPLEN(&inseg);
9000cb26:	bf18      	it	ne
9000cb28:	2001      	movne	r0, #1
9000cb2a:	eb08 0300 	add.w	r3, r8, r0
9000cb2e:	b29b      	uxth	r3, r3
        if (tcplen > pcb->rcv_wnd) {
9000cb30:	429a      	cmp	r2, r3
        tcplen = TCP_TCPLEN(&inseg);
9000cb32:	803b      	strh	r3, [r7, #0]
        if (tcplen > pcb->rcv_wnd) {
9000cb34:	d232      	bcs.n	9000cb9c <tcp_receive+0x224>
          if (TCPH_FLAGS(inseg.tcphdr) & TCP_FIN) {
9000cb36:	692b      	ldr	r3, [r5, #16]
9000cb38:	8998      	ldrh	r0, [r3, #12]
9000cb3a:	f7fe fabb 	bl	9000b0b4 <lwip_htons>
9000cb3e:	07c3      	lsls	r3, r0, #31
9000cb40:	d50f      	bpl.n	9000cb62 <tcp_receive+0x1ea>
            TCPH_FLAGS_SET(inseg.tcphdr, TCPH_FLAGS(inseg.tcphdr) & ~(unsigned int)TCP_FIN);
9000cb42:	692b      	ldr	r3, [r5, #16]
9000cb44:	f8b3 800c 	ldrh.w	r8, [r3, #12]
9000cb48:	4640      	mov	r0, r8
9000cb4a:	f428 587c 	bic.w	r8, r8, #16128	@ 0x3f00
9000cb4e:	f7fe fab1 	bl	9000b0b4 <lwip_htons>
9000cb52:	f000 003e 	and.w	r0, r0, #62	@ 0x3e
9000cb56:	f7fe faad 	bl	9000b0b4 <lwip_htons>
9000cb5a:	692b      	ldr	r3, [r5, #16]
9000cb5c:	ea40 0008 	orr.w	r0, r0, r8
9000cb60:	8198      	strh	r0, [r3, #12]
          inseg.len = (u16_t)pcb->rcv_wnd;
9000cb62:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
9000cb64:	812b      	strh	r3, [r5, #8]
          if (TCPH_FLAGS(inseg.tcphdr) & TCP_SYN) {
9000cb66:	692b      	ldr	r3, [r5, #16]
9000cb68:	8998      	ldrh	r0, [r3, #12]
9000cb6a:	f7fe faa3 	bl	9000b0b4 <lwip_htons>
9000cb6e:	0780      	lsls	r0, r0, #30
          pbuf_realloc(inseg.p, inseg.len);
9000cb70:	6868      	ldr	r0, [r5, #4]
            inseg.len -= 1;
9000cb72:	bf42      	ittt	mi
9000cb74:	892b      	ldrhmi	r3, [r5, #8]
9000cb76:	f103 33ff 	addmi.w	r3, r3, #4294967295
9000cb7a:	812b      	strhmi	r3, [r5, #8]
          pbuf_realloc(inseg.p, inseg.len);
9000cb7c:	8929      	ldrh	r1, [r5, #8]
9000cb7e:	f7fe ff49 	bl	9000ba14 <pbuf_realloc>
          tcplen = TCP_TCPLEN(&inseg);
9000cb82:	692b      	ldr	r3, [r5, #16]
9000cb84:	f8b5 8008 	ldrh.w	r8, [r5, #8]
9000cb88:	8998      	ldrh	r0, [r3, #12]
9000cb8a:	f7fe fa93 	bl	9000b0b4 <lwip_htons>
9000cb8e:	f010 0003 	ands.w	r0, r0, #3
9000cb92:	bf18      	it	ne
9000cb94:	2001      	movne	r0, #1
9000cb96:	4480      	add	r8, r0
9000cb98:	f8a7 8000 	strh.w	r8, [r7]
        pcb->rcv_nxt = seqno + tcplen;
9000cb9c:	883a      	ldrh	r2, [r7, #0]
        tcp_update_rcv_ann_wnd(pcb);
9000cb9e:	4620      	mov	r0, r4
        pcb->rcv_nxt = seqno + tcplen;
9000cba0:	6833      	ldr	r3, [r6, #0]
9000cba2:	4413      	add	r3, r2
9000cba4:	6263      	str	r3, [r4, #36]	@ 0x24
        pcb->rcv_wnd -= tcplen;
9000cba6:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
9000cba8:	1a9b      	subs	r3, r3, r2
9000cbaa:	8523      	strh	r3, [r4, #40]	@ 0x28
        tcp_update_rcv_ann_wnd(pcb);
9000cbac:	f7ff f919 	bl	9000bde2 <tcp_update_rcv_ann_wnd>
        if (inseg.p->tot_len > 0) {
9000cbb0:	686b      	ldr	r3, [r5, #4]
9000cbb2:	891a      	ldrh	r2, [r3, #8]
9000cbb4:	b11a      	cbz	r2, 9000cbbe <tcp_receive+0x246>
          recv_data = inseg.p;
9000cbb6:	4a14      	ldr	r2, [pc, #80]	@ (9000cc08 <tcp_receive+0x290>)
9000cbb8:	6013      	str	r3, [r2, #0]
          inseg.p = NULL;
9000cbba:	2300      	movs	r3, #0
9000cbbc:	606b      	str	r3, [r5, #4]
        if (TCPH_FLAGS(inseg.tcphdr) & TCP_FIN) {
9000cbbe:	692b      	ldr	r3, [r5, #16]
9000cbc0:	8998      	ldrh	r0, [r3, #12]
9000cbc2:	f7fe fa77 	bl	9000b0b4 <lwip_htons>
9000cbc6:	07c1      	lsls	r1, r0, #31
          recv_flags |= TF_GOT_FIN;
9000cbc8:	bf41      	itttt	mi
9000cbca:	4a10      	ldrmi	r2, [pc, #64]	@ (9000cc0c <tcp_receive+0x294>)
9000cbcc:	7813      	ldrbmi	r3, [r2, #0]
9000cbce:	f043 0320 	orrmi.w	r3, r3, #32
9000cbd2:	7013      	strbmi	r3, [r2, #0]
        tcp_ack(pcb);
9000cbd4:	8b63      	ldrh	r3, [r4, #26]
9000cbd6:	07da      	lsls	r2, r3, #31
9000cbd8:	f140 80b8 	bpl.w	9000cd4c <tcp_receive+0x3d4>
9000cbdc:	f023 0301 	bic.w	r3, r3, #1
      tcp_ack_now(pcb);
9000cbe0:	f043 0302 	orr.w	r3, r3, #2
9000cbe4:	e0b4      	b.n	9000cd50 <tcp_receive+0x3d8>
        pcb->dupacks = 0;
9000cbe6:	2300      	movs	r3, #0
9000cbe8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9000cbec:	e72d      	b.n	9000ca4a <tcp_receive+0xd2>
9000cbee:	bf00      	nop
9000cbf0:	2001a499 	.word	0x2001a499
9000cbf4:	2001a4a4 	.word	0x2001a4a4
9000cbf8:	2001a49a 	.word	0x2001a49a
9000cbfc:	2001a4b4 	.word	0x2001a4b4
9000cc00:	2001a48c 	.word	0x2001a48c
9000cc04:	2001a4b8 	.word	0x2001a4b8
9000cc08:	2001a494 	.word	0x2001a494
9000cc0c:	2001a498 	.word	0x2001a498
9000cc10:	2001a4a0 	.word	0x2001a4a0
    } else if (TCP_SEQ_BETWEEN(ackno, pcb->lastack + 1, pcb->snd_nxt)) {
9000cc14:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000cc16:	1a51      	subs	r1, r2, r1
9000cc18:	2900      	cmp	r1, #0
9000cc1a:	f300 8084 	bgt.w	9000cd26 <tcp_receive+0x3ae>
      if (pcb->flags & TF_INFR) {
9000cc1e:	8b61      	ldrh	r1, [r4, #26]
9000cc20:	0748      	lsls	r0, r1, #29
9000cc22:	d509      	bpl.n	9000cc38 <tcp_receive+0x2c0>
        tcp_clear_flags(pcb, TF_INFR);
9000cc24:	f021 0104 	bic.w	r1, r1, #4
9000cc28:	8361      	strh	r1, [r4, #26]
        pcb->cwnd = pcb->ssthresh;
9000cc2a:	f8b4 104a 	ldrh.w	r1, [r4, #74]	@ 0x4a
9000cc2e:	f8a4 1048 	strh.w	r1, [r4, #72]	@ 0x48
        pcb->bytes_acked = 0;
9000cc32:	2100      	movs	r1, #0
9000cc34:	f8a4 106a 	strh.w	r1, [r4, #106]	@ 0x6a
      pcb->rto = (s16_t)((pcb->sa >> 3) + pcb->sv);
9000cc38:	f9b4 003c 	ldrsh.w	r0, [r4, #60]	@ 0x3c
9000cc3c:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
      pcb->lastack = ackno;
9000cc3e:	6462      	str	r2, [r4, #68]	@ 0x44
      pcb->rto = (s16_t)((pcb->sa >> 3) + pcb->sv);
9000cc40:	eb01 01e0 	add.w	r1, r1, r0, asr #3
      if (pcb->state >= ESTABLISHED) {
9000cc44:	7d22      	ldrb	r2, [r4, #20]
      pcb->rto = (s16_t)((pcb->sa >> 3) + pcb->sv);
9000cc46:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
      if (pcb->state >= ESTABLISHED) {
9000cc4a:	2a03      	cmp	r2, #3
      pcb->nrtx = 0;
9000cc4c:	f04f 0100 	mov.w	r1, #0
9000cc50:	f8a4 1042 	strh.w	r1, [r4, #66]	@ 0x42
      if (pcb->state >= ESTABLISHED) {
9000cc54:	d926      	bls.n	9000cca4 <tcp_receive+0x32c>
        if (pcb->cwnd < pcb->ssthresh) {
9000cc56:	f8b4 2048 	ldrh.w	r2, [r4, #72]	@ 0x48
      acked = (tcpwnd_size_t)(ackno - pcb->lastack);
9000cc5a:	b29b      	uxth	r3, r3
        if (pcb->cwnd < pcb->ssthresh) {
9000cc5c:	f8b4 104a 	ldrh.w	r1, [r4, #74]	@ 0x4a
9000cc60:	4291      	cmp	r1, r2
9000cc62:	d915      	bls.n	9000cc90 <tcp_receive+0x318>
          u8_t num_seg = (pcb->flags & TF_RTO) ? 1 : 2;
9000cc64:	8b61      	ldrh	r1, [r4, #26]
9000cc66:	f411 6f00 	tst.w	r1, #2048	@ 0x800
          increase = LWIP_MIN(acked, (tcpwnd_size_t)(num_seg * pcb->mss));
9000cc6a:	8e61      	ldrh	r1, [r4, #50]	@ 0x32
          u8_t num_seg = (pcb->flags & TF_RTO) ? 1 : 2;
9000cc6c:	bf0c      	ite	eq
9000cc6e:	2002      	moveq	r0, #2
9000cc70:	2001      	movne	r0, #1
          increase = LWIP_MIN(acked, (tcpwnd_size_t)(num_seg * pcb->mss));
9000cc72:	fb11 f100 	smulbb	r1, r1, r0
9000cc76:	b289      	uxth	r1, r1
          TCP_WND_INC(pcb->cwnd, increase);
9000cc78:	4299      	cmp	r1, r3
9000cc7a:	bf94      	ite	ls
9000cc7c:	1850      	addls	r0, r2, r1
9000cc7e:	18d0      	addhi	r0, r2, r3
9000cc80:	b283      	uxth	r3, r0
            TCP_WND_INC(pcb->cwnd, pcb->mss);
9000cc82:	429a      	cmp	r2, r3
9000cc84:	d901      	bls.n	9000cc8a <tcp_receive+0x312>
          TCP_WND_INC(pcb->cwnd, increase);
9000cc86:	f64f 73ff 	movw	r3, #65535	@ 0xffff
            TCP_WND_INC(pcb->cwnd, pcb->mss);
9000cc8a:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
9000cc8e:	e009      	b.n	9000cca4 <tcp_receive+0x32c>
          TCP_WND_INC(pcb->bytes_acked, acked);
9000cc90:	f8b4 106a 	ldrh.w	r1, [r4, #106]	@ 0x6a
9000cc94:	440b      	add	r3, r1
9000cc96:	b29b      	uxth	r3, r3
9000cc98:	4299      	cmp	r1, r3
9000cc9a:	d82a      	bhi.n	9000ccf2 <tcp_receive+0x37a>
          if (pcb->bytes_acked >= pcb->cwnd) {
9000cc9c:	429a      	cmp	r2, r3
9000cc9e:	d92a      	bls.n	9000ccf6 <tcp_receive+0x37e>
9000cca0:	f8a4 306a 	strh.w	r3, [r4, #106]	@ 0x6a
      pcb->unacked = tcp_free_acked_segments(pcb, pcb->unacked, "unacked", pcb->unsent);
9000cca4:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000cca6:	4620      	mov	r0, r4
9000cca8:	f7ff fe2e 	bl	9000c908 <tcp_free_acked_segments.isra.0>
      pcb->unsent = tcp_free_acked_segments(pcb, pcb->unsent, "unsent", pcb->unacked);
9000ccac:	6ee1      	ldr	r1, [r4, #108]	@ 0x6c
      pcb->unacked = tcp_free_acked_segments(pcb, pcb->unacked, "unacked", pcb->unsent);
9000ccae:	6720      	str	r0, [r4, #112]	@ 0x70
      pcb->unsent = tcp_free_acked_segments(pcb, pcb->unsent, "unsent", pcb->unacked);
9000ccb0:	4620      	mov	r0, r4
9000ccb2:	f7ff fe29 	bl	9000c908 <tcp_free_acked_segments.isra.0>
      if (pcb->unacked == NULL) {
9000ccb6:	6f22      	ldr	r2, [r4, #112]	@ 0x70
      pcb->unsent = tcp_free_acked_segments(pcb, pcb->unsent, "unsent", pcb->unacked);
9000ccb8:	66e0      	str	r0, [r4, #108]	@ 0x6c
      if (pcb->unacked == NULL) {
9000ccba:	fab2 f382 	clz	r3, r2
9000ccbe:	095b      	lsrs	r3, r3, #5
9000ccc0:	425b      	negs	r3, r3
9000ccc2:	8623      	strh	r3, [r4, #48]	@ 0x30
      pcb->polltmr = 0;
9000ccc4:	2300      	movs	r3, #0
9000ccc6:	7723      	strb	r3, [r4, #28]
      if (pcb->unsent == NULL) {
9000ccc8:	b908      	cbnz	r0, 9000ccce <tcp_receive+0x356>
        pcb->unsent_oversize = 0;
9000ccca:	f8a4 0068 	strh.w	r0, [r4, #104]	@ 0x68
      pcb->snd_buf = (tcpwnd_size_t)(pcb->snd_buf + recv_acked);
9000ccce:	492a      	ldr	r1, [pc, #168]	@ (9000cd78 <tcp_receive+0x400>)
9000ccd0:	f8b4 3064 	ldrh.w	r3, [r4, #100]	@ 0x64
9000ccd4:	8809      	ldrh	r1, [r1, #0]
9000ccd6:	440b      	add	r3, r1
9000ccd8:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
      if (pcb->flags & TF_RTO) {
9000ccdc:	8b63      	ldrh	r3, [r4, #26]
9000ccde:	0519      	lsls	r1, r3, #20
9000cce0:	f57f aeb3 	bpl.w	9000ca4a <tcp_receive+0xd2>
        if (pcb->unacked == NULL) {
9000cce4:	b9da      	cbnz	r2, 9000cd1e <tcp_receive+0x3a6>
          if ((pcb->unsent == NULL) ||
9000cce6:	b968      	cbnz	r0, 9000cd04 <tcp_receive+0x38c>
          tcp_clear_flags(pcb, TF_RTO);
9000cce8:	8b63      	ldrh	r3, [r4, #26]
9000ccea:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
9000ccee:	8363      	strh	r3, [r4, #26]
9000ccf0:	e6ab      	b.n	9000ca4a <tcp_receive+0xd2>
          TCP_WND_INC(pcb->bytes_acked, acked);
9000ccf2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
            pcb->bytes_acked = (tcpwnd_size_t)(pcb->bytes_acked - pcb->cwnd);
9000ccf6:	1a9b      	subs	r3, r3, r2
9000ccf8:	f8a4 306a 	strh.w	r3, [r4, #106]	@ 0x6a
            TCP_WND_INC(pcb->cwnd, pcb->mss);
9000ccfc:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
9000ccfe:	4413      	add	r3, r2
9000cd00:	b29b      	uxth	r3, r3
9000cd02:	e7be      	b.n	9000cc82 <tcp_receive+0x30a>
              (TCP_SEQ_LEQ(pcb->rto_end, lwip_ntohl(pcb->unsent->tcphdr->seqno)))) {
9000cd04:	f8d4 804c 	ldr.w	r8, [r4, #76]	@ 0x4c
9000cd08:	6903      	ldr	r3, [r0, #16]
        } else if (TCP_SEQ_LEQ(pcb->rto_end, lwip_ntohl(pcb->unacked->tcphdr->seqno))) {
9000cd0a:	6858      	ldr	r0, [r3, #4]
9000cd0c:	f7fe f9d5 	bl	9000b0ba <lwip_htonl>
9000cd10:	eba8 0800 	sub.w	r8, r8, r0
9000cd14:	f1b8 0f00 	cmp.w	r8, #0
9000cd18:	f73f ae97 	bgt.w	9000ca4a <tcp_receive+0xd2>
9000cd1c:	e7e4      	b.n	9000cce8 <tcp_receive+0x370>
9000cd1e:	f8d4 804c 	ldr.w	r8, [r4, #76]	@ 0x4c
9000cd22:	6913      	ldr	r3, [r2, #16]
9000cd24:	e7f1      	b.n	9000cd0a <tcp_receive+0x392>
      tcp_send_empty_ack(pcb);
9000cd26:	4620      	mov	r0, r4
9000cd28:	f001 f953 	bl	9000dfd2 <tcp_send_empty_ack>
9000cd2c:	e68d      	b.n	9000ca4a <tcp_receive+0xd2>
        off -= p->len;
9000cd2e:	1a89      	subs	r1, r1, r2
        p->tot_len = new_tot_len;
9000cd30:	8103      	strh	r3, [r0, #8]
        p->len = 0;
9000cd32:	f8a0 c00a 	strh.w	ip, [r0, #10]
        off -= p->len;
9000cd36:	b289      	uxth	r1, r1
        p = p->next;
9000cd38:	6800      	ldr	r0, [r0, #0]
9000cd3a:	e6d0      	b.n	9000cade <tcp_receive+0x166>
      if (TCP_SEQ_LT(seqno, pcb->rcv_nxt)) {
9000cd3c:	1a9b      	subs	r3, r3, r2
9000cd3e:	2b00      	cmp	r3, #0
        tcp_ack_now(pcb);
9000cd40:	bfbe      	ittt	lt
9000cd42:	8b63      	ldrhlt	r3, [r4, #26]
9000cd44:	f043 0302 	orrlt.w	r3, r3, #2
9000cd48:	8363      	strhlt	r3, [r4, #26]
9000cd4a:	e6d2      	b.n	9000caf2 <tcp_receive+0x17a>
        tcp_ack(pcb);
9000cd4c:	f043 0301 	orr.w	r3, r3, #1
      tcp_ack_now(pcb);
9000cd50:	8363      	strh	r3, [r4, #26]
}
9000cd52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        tcp_send_empty_ack(pcb);
9000cd56:	4620      	mov	r0, r4
}
9000cd58:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
        tcp_send_empty_ack(pcb);
9000cd5c:	f001 b939 	b.w	9000dfd2 <tcp_send_empty_ack>
    if (!TCP_SEQ_BETWEEN(seqno, pcb->rcv_nxt, pcb->rcv_nxt + pcb->rcv_wnd - 1)) {
9000cd60:	1a99      	subs	r1, r3, r2
9000cd62:	2900      	cmp	r1, #0
9000cd64:	db05      	blt.n	9000cd72 <tcp_receive+0x3fa>
9000cd66:	3301      	adds	r3, #1
9000cd68:	1a9b      	subs	r3, r3, r2
9000cd6a:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
9000cd6c:	1a9b      	subs	r3, r3, r2
9000cd6e:	2b00      	cmp	r3, #0
9000cd70:	ddef      	ble.n	9000cd52 <tcp_receive+0x3da>
      tcp_ack_now(pcb);
9000cd72:	8b63      	ldrh	r3, [r4, #26]
9000cd74:	e734      	b.n	9000cbe0 <tcp_receive+0x268>
9000cd76:	bf00      	nop
9000cd78:	2001a49c 	.word	0x2001a49c

9000cd7c <tcp_input>:
{
9000cd7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  tcphdr = (struct tcp_hdr *)p->payload;
9000cd80:	6843      	ldr	r3, [r0, #4]
{
9000cd82:	b087      	sub	sp, #28
  tcphdr = (struct tcp_hdr *)p->payload;
9000cd84:	4d96      	ldr	r5, [pc, #600]	@ (9000cfe0 <tcp_input+0x264>)
{
9000cd86:	4681      	mov	r9, r0
  tcphdr = (struct tcp_hdr *)p->payload;
9000cd88:	602b      	str	r3, [r5, #0]
  if (p->len < TCP_HLEN) {
9000cd8a:	8943      	ldrh	r3, [r0, #10]
9000cd8c:	2b13      	cmp	r3, #19
9000cd8e:	f240 80be 	bls.w	9000cf0e <tcp_input+0x192>
  if (ip_addr_isbroadcast(ip_current_dest_addr(), ip_current_netif()) ||
9000cd92:	4e94      	ldr	r6, [pc, #592]	@ (9000cfe4 <tcp_input+0x268>)
9000cd94:	6831      	ldr	r1, [r6, #0]
9000cd96:	6970      	ldr	r0, [r6, #20]
9000cd98:	f7fd fe6c 	bl	9000aa74 <ip4_addr_isbroadcast_u32>
9000cd9c:	2800      	cmp	r0, #0
9000cd9e:	f040 80b6 	bne.w	9000cf0e <tcp_input+0x192>
      ip_addr_ismulticast(ip_current_dest_addr())) {
9000cda2:	6973      	ldr	r3, [r6, #20]
9000cda4:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
  if (ip_addr_isbroadcast(ip_current_dest_addr(), ip_current_netif()) ||
9000cda8:	2be0      	cmp	r3, #224	@ 0xe0
9000cdaa:	f000 80b0 	beq.w	9000cf0e <tcp_input+0x192>
    u16_t chksum = ip_chksum_pseudo(p, IP_PROTO_TCP, p->tot_len,
9000cdae:	f106 0314 	add.w	r3, r6, #20
9000cdb2:	2106      	movs	r1, #6
9000cdb4:	4648      	mov	r0, r9
9000cdb6:	9300      	str	r3, [sp, #0]
9000cdb8:	f106 0310 	add.w	r3, r6, #16
9000cdbc:	f8b9 2008 	ldrh.w	r2, [r9, #8]
9000cdc0:	f7fe fa28 	bl	9000b214 <ip_chksum_pseudo>
    if (chksum != 0) {
9000cdc4:	4604      	mov	r4, r0
9000cdc6:	2800      	cmp	r0, #0
9000cdc8:	f040 80a1 	bne.w	9000cf0e <tcp_input+0x192>
  hdrlen_bytes = TCPH_HDRLEN_BYTES(tcphdr);
9000cdcc:	682b      	ldr	r3, [r5, #0]
9000cdce:	8998      	ldrh	r0, [r3, #12]
9000cdd0:	f7fe f970 	bl	9000b0b4 <lwip_htons>
9000cdd4:	0a81      	lsrs	r1, r0, #10
9000cdd6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
  if ((hdrlen_bytes < TCP_HLEN) || (hdrlen_bytes > p->tot_len)) {
9000cdda:	2913      	cmp	r1, #19
9000cddc:	f240 8097 	bls.w	9000cf0e <tcp_input+0x192>
9000cde0:	f8b9 3008 	ldrh.w	r3, [r9, #8]
9000cde4:	428b      	cmp	r3, r1
9000cde6:	f0c0 8092 	bcc.w	9000cf0e <tcp_input+0x192>
  tcphdr_optlen = (u16_t)(hdrlen_bytes - TCP_HLEN);
9000cdea:	f1a1 0314 	sub.w	r3, r1, #20
  if (p->len >= hdrlen_bytes) {
9000cdee:	f8b9 200a 	ldrh.w	r2, [r9, #10]
  tcphdr_optlen = (u16_t)(hdrlen_bytes - TCP_HLEN);
9000cdf2:	4f7d      	ldr	r7, [pc, #500]	@ (9000cfe8 <tcp_input+0x26c>)
9000cdf4:	b29b      	uxth	r3, r3
  tcphdr_opt2 = NULL;
9000cdf6:	f8df a21c 	ldr.w	sl, [pc, #540]	@ 9000d014 <tcp_input+0x298>
  if (p->len >= hdrlen_bytes) {
9000cdfa:	428a      	cmp	r2, r1
9000cdfc:	f8df 8218 	ldr.w	r8, [pc, #536]	@ 9000d018 <tcp_input+0x29c>
  tcphdr_optlen = (u16_t)(hdrlen_bytes - TCP_HLEN);
9000ce00:	803b      	strh	r3, [r7, #0]
  tcphdr_opt2 = NULL;
9000ce02:	f8ca 4000 	str.w	r4, [sl]
  if (p->len >= hdrlen_bytes) {
9000ce06:	d357      	bcc.n	9000ceb8 <tcp_input+0x13c>
    pbuf_remove_header(p, hdrlen_bytes); /* cannot fail */
9000ce08:	4648      	mov	r0, r9
    tcphdr_opt1len = tcphdr_optlen;
9000ce0a:	f8a8 3000 	strh.w	r3, [r8]
    pbuf_remove_header(p, hdrlen_bytes); /* cannot fail */
9000ce0e:	f7fe fd45 	bl	9000b89c <pbuf_remove_header>
  tcphdr->src = lwip_ntohs(tcphdr->src);
9000ce12:	682c      	ldr	r4, [r5, #0]
  seqno = tcphdr->seqno = lwip_ntohl(tcphdr->seqno);
9000ce14:	f8df b1f8 	ldr.w	fp, [pc, #504]	@ 9000d010 <tcp_input+0x294>
  tcphdr->src = lwip_ntohs(tcphdr->src);
9000ce18:	8820      	ldrh	r0, [r4, #0]
9000ce1a:	f7fe f94b 	bl	9000b0b4 <lwip_htons>
9000ce1e:	8020      	strh	r0, [r4, #0]
  tcphdr->dest = lwip_ntohs(tcphdr->dest);
9000ce20:	682c      	ldr	r4, [r5, #0]
9000ce22:	f8df a1e4 	ldr.w	sl, [pc, #484]	@ 9000d008 <tcp_input+0x28c>
9000ce26:	8860      	ldrh	r0, [r4, #2]
9000ce28:	f7fe f944 	bl	9000b0b4 <lwip_htons>
9000ce2c:	8060      	strh	r0, [r4, #2]
  seqno = tcphdr->seqno = lwip_ntohl(tcphdr->seqno);
9000ce2e:	682c      	ldr	r4, [r5, #0]
9000ce30:	6860      	ldr	r0, [r4, #4]
9000ce32:	f7fe f942 	bl	9000b0ba <lwip_htonl>
9000ce36:	6060      	str	r0, [r4, #4]
  ackno = tcphdr->ackno = lwip_ntohl(tcphdr->ackno);
9000ce38:	682c      	ldr	r4, [r5, #0]
  seqno = tcphdr->seqno = lwip_ntohl(tcphdr->seqno);
9000ce3a:	f8cb 0000 	str.w	r0, [fp]
  ackno = tcphdr->ackno = lwip_ntohl(tcphdr->ackno);
9000ce3e:	68a0      	ldr	r0, [r4, #8]
9000ce40:	f7fe f93b 	bl	9000b0ba <lwip_htonl>
9000ce44:	4b69      	ldr	r3, [pc, #420]	@ (9000cfec <tcp_input+0x270>)
9000ce46:	60a0      	str	r0, [r4, #8]
  tcphdr->wnd = lwip_ntohs(tcphdr->wnd);
9000ce48:	682c      	ldr	r4, [r5, #0]
  ackno = tcphdr->ackno = lwip_ntohl(tcphdr->ackno);
9000ce4a:	6018      	str	r0, [r3, #0]
  tcphdr->wnd = lwip_ntohs(tcphdr->wnd);
9000ce4c:	89e0      	ldrh	r0, [r4, #14]
9000ce4e:	f7fe f931 	bl	9000b0b4 <lwip_htons>
  flags = TCPH_FLAGS(tcphdr);
9000ce52:	682b      	ldr	r3, [r5, #0]
  tcphdr->wnd = lwip_ntohs(tcphdr->wnd);
9000ce54:	81e0      	strh	r0, [r4, #14]
  flags = TCPH_FLAGS(tcphdr);
9000ce56:	8998      	ldrh	r0, [r3, #12]
9000ce58:	f7fe f92c 	bl	9000b0b4 <lwip_htons>
9000ce5c:	4b64      	ldr	r3, [pc, #400]	@ (9000cff0 <tcp_input+0x274>)
9000ce5e:	f000 023f 	and.w	r2, r0, #63	@ 0x3f
  if (flags & (TCP_FIN | TCP_SYN)) {
9000ce62:	f010 0f03 	tst.w	r0, #3
  flags = TCPH_FLAGS(tcphdr);
9000ce66:	fa5f fc80 	uxtb.w	ip, r0
  tcplen = p->tot_len;
9000ce6a:	f8b9 e008 	ldrh.w	lr, [r9, #8]
  flags = TCPH_FLAGS(tcphdr);
9000ce6e:	701a      	strb	r2, [r3, #0]
  if (flags & (TCP_FIN | TCP_SYN)) {
9000ce70:	d146      	bne.n	9000cf00 <tcp_input+0x184>
  tcplen = p->tot_len;
9000ce72:	f8aa e000 	strh.w	lr, [sl]
  for (pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
9000ce76:	4b5f      	ldr	r3, [pc, #380]	@ (9000cff4 <tcp_input+0x278>)
  prev = NULL;
9000ce78:	2000      	movs	r0, #0
        ip_addr_cmp(&pcb->remote_ip, ip_current_src_addr()) &&
9000ce7a:	6932      	ldr	r2, [r6, #16]
  for (pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
9000ce7c:	681f      	ldr	r7, [r3, #0]
        (pcb->netif_idx != netif_get_index(ip_data.current_input_netif))) {
9000ce7e:	f8d6 8004 	ldr.w	r8, [r6, #4]
    if (pcb->remote_port == tcphdr->src &&
9000ce82:	682b      	ldr	r3, [r5, #0]
  for (pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
9000ce84:	463c      	mov	r4, r7
        ip_addr_cmp(&pcb->remote_ip, ip_current_src_addr()) &&
9000ce86:	9204      	str	r2, [sp, #16]
  for (pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
9000ce88:	2c00      	cmp	r4, #0
9000ce8a:	d146      	bne.n	9000cf1a <tcp_input+0x19e>
    for (pcb = tcp_tw_pcbs; pcb != NULL; pcb = pcb->next) {
9000ce8c:	4a5a      	ldr	r2, [pc, #360]	@ (9000cff8 <tcp_input+0x27c>)
9000ce8e:	6810      	ldr	r0, [r2, #0]
9000ce90:	2800      	cmp	r0, #0
9000ce92:	f040 80c7 	bne.w	9000d024 <tcp_input+0x2a8>
    for (lpcb = tcp_listen_pcbs.listen_pcbs; lpcb != NULL; lpcb = lpcb->next) {
9000ce96:	4a59      	ldr	r2, [pc, #356]	@ (9000cffc <tcp_input+0x280>)
          if (ip_addr_cmp(&lpcb->local_ip, ip_current_dest_addr())) {
9000ce98:	f8d6 e014 	ldr.w	lr, [r6, #20]
    for (lpcb = tcp_listen_pcbs.listen_pcbs; lpcb != NULL; lpcb = lpcb->next) {
9000ce9c:	6811      	ldr	r1, [r2, #0]
9000ce9e:	460c      	mov	r4, r1
9000cea0:	2c00      	cmp	r4, #0
9000cea2:	f040 8106 	bne.w	9000d0b2 <tcp_input+0x336>
    if (!(TCPH_FLAGS(tcphdr) & TCP_RST)) {
9000cea6:	8998      	ldrh	r0, [r3, #12]
9000cea8:	f7fe f904 	bl	9000b0b4 <lwip_htons>
9000ceac:	0743      	lsls	r3, r0, #29
9000ceae:	d42e      	bmi.n	9000cf0e <tcp_input+0x192>
              ip_current_src_addr(), tcphdr->dest, tcphdr->src);
9000ceb0:	682b      	ldr	r3, [r5, #0]
      tcp_rst(NULL, ackno, seqno + tcplen, ip_current_dest_addr(),
9000ceb2:	f8ba 1000 	ldrh.w	r1, [sl]
9000ceb6:	e3f1      	b.n	9000d69c <tcp_input+0x920>
    pbuf_remove_header(p, TCP_HLEN);
9000ceb8:	2114      	movs	r1, #20
9000ceba:	4648      	mov	r0, r9
9000cebc:	f7fe fcee 	bl	9000b89c <pbuf_remove_header>
    tcphdr_opt1len = p->len;
9000cec0:	f8b9 400a 	ldrh.w	r4, [r9, #10]
    pbuf_remove_header(p, tcphdr_opt1len);
9000cec4:	4648      	mov	r0, r9
    tcphdr_opt1len = p->len;
9000cec6:	f8a8 4000 	strh.w	r4, [r8]
    pbuf_remove_header(p, tcphdr_opt1len);
9000ceca:	4621      	mov	r1, r4
    opt2len = (u16_t)(tcphdr_optlen - tcphdr_opt1len);
9000cecc:	f8b7 8000 	ldrh.w	r8, [r7]
    pbuf_remove_header(p, tcphdr_opt1len);
9000ced0:	f7fe fce4 	bl	9000b89c <pbuf_remove_header>
    if (opt2len > p->next->len) {
9000ced4:	f8d9 0000 	ldr.w	r0, [r9]
    opt2len = (u16_t)(tcphdr_optlen - tcphdr_opt1len);
9000ced8:	eba8 0704 	sub.w	r7, r8, r4
    if (opt2len > p->next->len) {
9000cedc:	8943      	ldrh	r3, [r0, #10]
    opt2len = (u16_t)(tcphdr_optlen - tcphdr_opt1len);
9000cede:	b2bf      	uxth	r7, r7
    if (opt2len > p->next->len) {
9000cee0:	42bb      	cmp	r3, r7
9000cee2:	d314      	bcc.n	9000cf0e <tcp_input+0x192>
    tcphdr_opt2 = (u8_t *)p->next->payload;
9000cee4:	6843      	ldr	r3, [r0, #4]
    pbuf_remove_header(p->next, opt2len);
9000cee6:	4639      	mov	r1, r7
    tcphdr_opt2 = (u8_t *)p->next->payload;
9000cee8:	f8ca 3000 	str.w	r3, [sl]
    pbuf_remove_header(p->next, opt2len);
9000ceec:	f7fe fcd6 	bl	9000b89c <pbuf_remove_header>
    p->tot_len = (u16_t)(p->tot_len - opt2len);
9000cef0:	f8b9 3008 	ldrh.w	r3, [r9, #8]
9000cef4:	441c      	add	r4, r3
9000cef6:	eba4 0408 	sub.w	r4, r4, r8
9000cefa:	f8a9 4008 	strh.w	r4, [r9, #8]
9000cefe:	e788      	b.n	9000ce12 <tcp_input+0x96>
    tcplen++;
9000cf00:	f10e 0301 	add.w	r3, lr, #1
9000cf04:	b29b      	uxth	r3, r3
    if (tcplen < p->tot_len) {
9000cf06:	459e      	cmp	lr, r3
    tcplen++;
9000cf08:	f8aa 3000 	strh.w	r3, [sl]
    if (tcplen < p->tot_len) {
9000cf0c:	d9b3      	bls.n	9000ce76 <tcp_input+0xfa>
  pbuf_free(p);
9000cf0e:	4648      	mov	r0, r9
}
9000cf10:	b007      	add	sp, #28
9000cf12:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  pbuf_free(p);
9000cf16:	f7fe bce5 	b.w	9000b8e4 <pbuf_free>
    if ((pcb->netif_idx != NETIF_NO_INDEX) &&
9000cf1a:	7a21      	ldrb	r1, [r4, #8]
9000cf1c:	b129      	cbz	r1, 9000cf2a <tcp_input+0x1ae>
        (pcb->netif_idx != netif_get_index(ip_data.current_input_netif))) {
9000cf1e:	f898 2034 	ldrb.w	r2, [r8, #52]	@ 0x34
9000cf22:	3201      	adds	r2, #1
    if ((pcb->netif_idx != NETIF_NO_INDEX) &&
9000cf24:	b2d2      	uxtb	r2, r2
9000cf26:	4291      	cmp	r1, r2
9000cf28:	d157      	bne.n	9000cfda <tcp_input+0x25e>
    if (pcb->remote_port == tcphdr->src &&
9000cf2a:	8b21      	ldrh	r1, [r4, #24]
9000cf2c:	881a      	ldrh	r2, [r3, #0]
9000cf2e:	4291      	cmp	r1, r2
9000cf30:	d153      	bne.n	9000cfda <tcp_input+0x25e>
9000cf32:	8ae1      	ldrh	r1, [r4, #22]
9000cf34:	885a      	ldrh	r2, [r3, #2]
9000cf36:	4291      	cmp	r1, r2
9000cf38:	d14f      	bne.n	9000cfda <tcp_input+0x25e>
        pcb->local_port == tcphdr->dest &&
9000cf3a:	6862      	ldr	r2, [r4, #4]
9000cf3c:	9904      	ldr	r1, [sp, #16]
9000cf3e:	428a      	cmp	r2, r1
9000cf40:	d14b      	bne.n	9000cfda <tcp_input+0x25e>
        ip_addr_cmp(&pcb->remote_ip, ip_current_src_addr()) &&
9000cf42:	6821      	ldr	r1, [r4, #0]
9000cf44:	6972      	ldr	r2, [r6, #20]
9000cf46:	4291      	cmp	r1, r2
9000cf48:	d147      	bne.n	9000cfda <tcp_input+0x25e>
      if (prev != NULL) {
9000cf4a:	b120      	cbz	r0, 9000cf56 <tcp_input+0x1da>
        prev->next = pcb->next;
9000cf4c:	68e2      	ldr	r2, [r4, #12]
9000cf4e:	60c2      	str	r2, [r0, #12]
        tcp_active_pcbs = pcb;
9000cf50:	4a28      	ldr	r2, [pc, #160]	@ (9000cff4 <tcp_input+0x278>)
        pcb->next = tcp_active_pcbs;
9000cf52:	60e7      	str	r7, [r4, #12]
        tcp_active_pcbs = pcb;
9000cf54:	6014      	str	r4, [r2, #0]
    inseg.next = NULL;
9000cf56:	4f2a      	ldr	r7, [pc, #168]	@ (9000d000 <tcp_input+0x284>)
    if (flags & TCP_PSH) {
9000cf58:	f01c 0f08 	tst.w	ip, #8
    inseg.next = NULL;
9000cf5c:	f04f 0200 	mov.w	r2, #0
    recv_data = NULL;
9000cf60:	f8df a0b8 	ldr.w	sl, [pc, #184]	@ 9000d01c <tcp_input+0x2a0>
    inseg.tcphdr = tcphdr;
9000cf64:	613b      	str	r3, [r7, #16]
      p->flags |= PBUF_FLAG_PUSH;
9000cf66:	bf18      	it	ne
9000cf68:	f899 300d 	ldrbne.w	r3, [r9, #13]
    recv_flags = 0;
9000cf6c:	4e25      	ldr	r6, [pc, #148]	@ (9000d004 <tcp_input+0x288>)
      p->flags |= PBUF_FLAG_PUSH;
9000cf6e:	bf18      	it	ne
9000cf70:	f043 0301 	orrne.w	r3, r3, #1
    recv_acked = 0;
9000cf74:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 9000d020 <tcp_input+0x2a4>
    inseg.next = NULL;
9000cf78:	603a      	str	r2, [r7, #0]
      p->flags |= PBUF_FLAG_PUSH;
9000cf7a:	bf18      	it	ne
9000cf7c:	f889 300d 	strbne.w	r3, [r9, #13]
    if (pcb->refused_data != NULL) {
9000cf80:	6f63      	ldr	r3, [r4, #116]	@ 0x74
    inseg.len = p->tot_len;
9000cf82:	f8a7 e008 	strh.w	lr, [r7, #8]
    inseg.p = p;
9000cf86:	f8c7 9004 	str.w	r9, [r7, #4]
    recv_data = NULL;
9000cf8a:	f8ca 2000 	str.w	r2, [sl]
    recv_flags = 0;
9000cf8e:	7032      	strb	r2, [r6, #0]
    recv_acked = 0;
9000cf90:	f8a8 2000 	strh.w	r2, [r8]
    if (pcb->refused_data != NULL) {
9000cf94:	2b00      	cmp	r3, #0
9000cf96:	f000 8112 	beq.w	9000d1be <tcp_input+0x442>
      if ((tcp_process_refused_data(pcb) == ERR_ABRT) ||
9000cf9a:	4620      	mov	r0, r4
9000cf9c:	f7ff fa30 	bl	9000c400 <tcp_process_refused_data>
9000cfa0:	300d      	adds	r0, #13
9000cfa2:	d008      	beq.n	9000cfb6 <tcp_input+0x23a>
9000cfa4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
9000cfa6:	2b00      	cmp	r3, #0
9000cfa8:	f000 8109 	beq.w	9000d1be <tcp_input+0x442>
          ((pcb->refused_data != NULL) && (tcplen > 0))) {
9000cfac:	4b16      	ldr	r3, [pc, #88]	@ (9000d008 <tcp_input+0x28c>)
9000cfae:	881b      	ldrh	r3, [r3, #0]
9000cfb0:	2b00      	cmp	r3, #0
9000cfb2:	f000 8104 	beq.w	9000d1be <tcp_input+0x442>
        if (pcb->rcv_ann_wnd == 0) {
9000cfb6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
9000cfb8:	b913      	cbnz	r3, 9000cfc0 <tcp_input+0x244>
          tcp_send_empty_ack(pcb);
9000cfba:	4620      	mov	r0, r4
9000cfbc:	f001 f809 	bl	9000dfd2 <tcp_send_empty_ack>
    tcp_input_pcb = NULL;
9000cfc0:	2400      	movs	r4, #0
9000cfc2:	4b12      	ldr	r3, [pc, #72]	@ (9000d00c <tcp_input+0x290>)
    if (inseg.p != NULL) {
9000cfc4:	6878      	ldr	r0, [r7, #4]
    tcp_input_pcb = NULL;
9000cfc6:	601c      	str	r4, [r3, #0]
    recv_data = NULL;
9000cfc8:	f8ca 4000 	str.w	r4, [sl]
    if (inseg.p != NULL) {
9000cfcc:	b110      	cbz	r0, 9000cfd4 <tcp_input+0x258>
      pbuf_free(inseg.p);
9000cfce:	f7fe fc89 	bl	9000b8e4 <pbuf_free>
      inseg.p = NULL;
9000cfd2:	607c      	str	r4, [r7, #4]
}
9000cfd4:	b007      	add	sp, #28
9000cfd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  for (pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
9000cfda:	4620      	mov	r0, r4
9000cfdc:	68e4      	ldr	r4, [r4, #12]
9000cfde:	e753      	b.n	9000ce88 <tcp_input+0x10c>
9000cfe0:	2001a4b4 	.word	0x2001a4b4
9000cfe4:	20013ff4 	.word	0x20013ff4
9000cfe8:	2001a4b2 	.word	0x2001a4b2
9000cfec:	2001a4a0 	.word	0x2001a4a0
9000cff0:	2001a499 	.word	0x2001a499
9000cff4:	2001a480 	.word	0x2001a480
9000cff8:	2001a47c 	.word	0x2001a47c
9000cffc:	2001a484 	.word	0x2001a484
9000d000:	2001a4b8 	.word	0x2001a4b8
9000d004:	2001a498 	.word	0x2001a498
9000d008:	2001a49a 	.word	0x2001a49a
9000d00c:	2001a490 	.word	0x2001a490
9000d010:	2001a4a4 	.word	0x2001a4a4
9000d014:	2001a4ac 	.word	0x2001a4ac
9000d018:	2001a4b0 	.word	0x2001a4b0
9000d01c:	2001a494 	.word	0x2001a494
9000d020:	2001a49c 	.word	0x2001a49c
      if ((pcb->netif_idx != NETIF_NO_INDEX) &&
9000d024:	7a01      	ldrb	r1, [r0, #8]
9000d026:	b129      	cbz	r1, 9000d034 <tcp_input+0x2b8>
          (pcb->netif_idx != netif_get_index(ip_data.current_input_netif))) {
9000d028:	f898 2034 	ldrb.w	r2, [r8, #52]	@ 0x34
9000d02c:	3201      	adds	r2, #1
      if ((pcb->netif_idx != NETIF_NO_INDEX) &&
9000d02e:	b2d2      	uxtb	r2, r2
9000d030:	4291      	cmp	r1, r2
9000d032:	d13c      	bne.n	9000d0ae <tcp_input+0x332>
      if (pcb->remote_port == tcphdr->src &&
9000d034:	881a      	ldrh	r2, [r3, #0]
9000d036:	8b07      	ldrh	r7, [r0, #24]
9000d038:	4297      	cmp	r7, r2
9000d03a:	d138      	bne.n	9000d0ae <tcp_input+0x332>
          pcb->local_port == tcphdr->dest &&
9000d03c:	885a      	ldrh	r2, [r3, #2]
      if (pcb->remote_port == tcphdr->src &&
9000d03e:	8ac4      	ldrh	r4, [r0, #22]
9000d040:	4294      	cmp	r4, r2
9000d042:	d134      	bne.n	9000d0ae <tcp_input+0x332>
          pcb->local_port == tcphdr->dest &&
9000d044:	6842      	ldr	r2, [r0, #4]
9000d046:	9904      	ldr	r1, [sp, #16]
9000d048:	4291      	cmp	r1, r2
9000d04a:	d130      	bne.n	9000d0ae <tcp_input+0x332>
          ip_addr_cmp(&pcb->remote_ip, ip_current_src_addr()) &&
9000d04c:	6801      	ldr	r1, [r0, #0]
9000d04e:	6972      	ldr	r2, [r6, #20]
9000d050:	4291      	cmp	r1, r2
9000d052:	d12c      	bne.n	9000d0ae <tcp_input+0x332>
  if (flags & TCP_RST) {
9000d054:	f01c 0f04 	tst.w	ip, #4
9000d058:	f47f af59 	bne.w	9000cf0e <tcp_input+0x192>
      tcp_rst(pcb, ackno, seqno + tcplen, ip_current_dest_addr(),
9000d05c:	4b89      	ldr	r3, [pc, #548]	@ (9000d284 <tcp_input+0x508>)
  if (flags & TCP_SYN) {
9000d05e:	f01c 0f02 	tst.w	ip, #2
      tcp_rst(pcb, ackno, seqno + tcplen, ip_current_dest_addr(),
9000d062:	8819      	ldrh	r1, [r3, #0]
  if (flags & TCP_SYN) {
9000d064:	d013      	beq.n	9000d08e <tcp_input+0x312>
    if (TCP_SEQ_BETWEEN(seqno, pcb->rcv_nxt, pcb->rcv_nxt + pcb->rcv_wnd)) {
9000d066:	4b88      	ldr	r3, [pc, #544]	@ (9000d288 <tcp_input+0x50c>)
9000d068:	681a      	ldr	r2, [r3, #0]
9000d06a:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9000d06c:	1ad3      	subs	r3, r2, r3
9000d06e:	d414      	bmi.n	9000d09a <tcp_input+0x31e>
9000d070:	8d05      	ldrh	r5, [r0, #40]	@ 0x28
9000d072:	1b5b      	subs	r3, r3, r5
9000d074:	2b00      	cmp	r3, #0
9000d076:	dc10      	bgt.n	9000d09a <tcp_input+0x31e>
      tcp_rst(pcb, ackno, seqno + tcplen, ip_current_dest_addr(),
9000d078:	4b84      	ldr	r3, [pc, #528]	@ (9000d28c <tcp_input+0x510>)
9000d07a:	440a      	add	r2, r1
9000d07c:	4984      	ldr	r1, [pc, #528]	@ (9000d290 <tcp_input+0x514>)
9000d07e:	9300      	str	r3, [sp, #0]
9000d080:	3304      	adds	r3, #4
9000d082:	e9cd 4701 	strd	r4, r7, [sp, #4]
9000d086:	6809      	ldr	r1, [r1, #0]
    tcp_rst((const struct tcp_pcb *)pcb, ackno, seqno + tcplen, ip_current_dest_addr(),
9000d088:	f000 ff7b 	bl	9000df82 <tcp_rst>
9000d08c:	e73f      	b.n	9000cf0e <tcp_input+0x192>
  } else if (flags & TCP_FIN) {
9000d08e:	f01c 0f01 	tst.w	ip, #1
    pcb->tmr = tcp_ticks;
9000d092:	bf1e      	ittt	ne
9000d094:	4b7f      	ldrne	r3, [pc, #508]	@ (9000d294 <tcp_input+0x518>)
9000d096:	681b      	ldrne	r3, [r3, #0]
9000d098:	6203      	strne	r3, [r0, #32]
  if ((tcplen > 0)) {
9000d09a:	2900      	cmp	r1, #0
9000d09c:	f43f af37 	beq.w	9000cf0e <tcp_input+0x192>
    tcp_ack_now(pcb);
9000d0a0:	8b43      	ldrh	r3, [r0, #26]
9000d0a2:	f043 0302 	orr.w	r3, r3, #2
9000d0a6:	8343      	strh	r3, [r0, #26]
    tcp_output(pcb);
9000d0a8:	f000 ffb4 	bl	9000e014 <tcp_output>
        pbuf_free(p);
9000d0ac:	e72f      	b.n	9000cf0e <tcp_input+0x192>
    for (pcb = tcp_tw_pcbs; pcb != NULL; pcb = pcb->next) {
9000d0ae:	68c0      	ldr	r0, [r0, #12]
9000d0b0:	e6ee      	b.n	9000ce90 <tcp_input+0x114>
      if ((lpcb->netif_idx != NETIF_NO_INDEX) &&
9000d0b2:	7a27      	ldrb	r7, [r4, #8]
9000d0b4:	b12f      	cbz	r7, 9000d0c2 <tcp_input+0x346>
          (lpcb->netif_idx != netif_get_index(ip_data.current_input_netif))) {
9000d0b6:	f898 2034 	ldrb.w	r2, [r8, #52]	@ 0x34
9000d0ba:	3201      	adds	r2, #1
      if ((lpcb->netif_idx != NETIF_NO_INDEX) &&
9000d0bc:	b2d2      	uxtb	r2, r2
9000d0be:	4297      	cmp	r7, r2
9000d0c0:	d10a      	bne.n	9000d0d8 <tcp_input+0x35c>
      if (lpcb->local_port == tcphdr->dest) {
9000d0c2:	8ae7      	ldrh	r7, [r4, #22]
9000d0c4:	885a      	ldrh	r2, [r3, #2]
9000d0c6:	4297      	cmp	r7, r2
9000d0c8:	d106      	bne.n	9000d0d8 <tcp_input+0x35c>
          if (ip_addr_cmp(&lpcb->local_ip, ip_current_dest_addr())) {
9000d0ca:	6822      	ldr	r2, [r4, #0]
9000d0cc:	4572      	cmp	r2, lr
9000d0ce:	f000 82d5 	beq.w	9000d67c <tcp_input+0x900>
          } else if (ip_addr_isany(&lpcb->local_ip)) {
9000d0d2:	2a00      	cmp	r2, #0
9000d0d4:	f000 82d2 	beq.w	9000d67c <tcp_input+0x900>
    for (lpcb = tcp_listen_pcbs.listen_pcbs; lpcb != NULL; lpcb = lpcb->next) {
9000d0d8:	4620      	mov	r0, r4
9000d0da:	68e4      	ldr	r4, [r4, #12]
9000d0dc:	e6e0      	b.n	9000cea0 <tcp_input+0x124>
  } else if (flags & TCP_SYN) {
9000d0de:	f01c 0f02 	tst.w	ip, #2
9000d0e2:	f43f af14 	beq.w	9000cf0e <tcp_input+0x192>
    npcb = tcp_alloc(pcb->prio);
9000d0e6:	7d60      	ldrb	r0, [r4, #21]
9000d0e8:	f7ff fabe 	bl	9000c668 <tcp_alloc>
    if (npcb == NULL) {
9000d0ec:	4680      	mov	r8, r0
9000d0ee:	b948      	cbnz	r0, 9000d104 <tcp_input+0x388>
      TCP_EVENT_ACCEPT(pcb, NULL, pcb->callback_arg, ERR_MEM, err);
9000d0f0:	69a3      	ldr	r3, [r4, #24]
9000d0f2:	2b00      	cmp	r3, #0
9000d0f4:	f43f af0b 	beq.w	9000cf0e <tcp_input+0x192>
9000d0f8:	4601      	mov	r1, r0
9000d0fa:	f04f 32ff 	mov.w	r2, #4294967295
9000d0fe:	6920      	ldr	r0, [r4, #16]
9000d100:	4798      	blx	r3
9000d102:	e704      	b.n	9000cf0e <tcp_input+0x192>
    ip_addr_copy(npcb->local_ip, *ip_current_dest_addr());
9000d104:	6973      	ldr	r3, [r6, #20]
    npcb->remote_port = tcphdr->src;
9000d106:	682a      	ldr	r2, [r5, #0]
    ip_addr_copy(npcb->local_ip, *ip_current_dest_addr());
9000d108:	6003      	str	r3, [r0, #0]
    ip_addr_copy(npcb->remote_ip, *ip_current_src_addr());
9000d10a:	6933      	ldr	r3, [r6, #16]
9000d10c:	6043      	str	r3, [r0, #4]
    npcb->local_port = pcb->local_port;
9000d10e:	8ae3      	ldrh	r3, [r4, #22]
9000d110:	82c3      	strh	r3, [r0, #22]
    npcb->remote_port = tcphdr->src;
9000d112:	7813      	ldrb	r3, [r2, #0]
9000d114:	7852      	ldrb	r2, [r2, #1]
9000d116:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
9000d11a:	8303      	strh	r3, [r0, #24]
    npcb->state = SYN_RCVD;
9000d11c:	2303      	movs	r3, #3
9000d11e:	7503      	strb	r3, [r0, #20]
    npcb->rcv_nxt = seqno + 1;
9000d120:	f8db 3000 	ldr.w	r3, [fp]
9000d124:	3301      	adds	r3, #1
9000d126:	6243      	str	r3, [r0, #36]	@ 0x24
    npcb->rcv_ann_right_edge = npcb->rcv_nxt;
9000d128:	62c3      	str	r3, [r0, #44]	@ 0x2c
    iss = tcp_next_iss(npcb);
9000d12a:	f7ff fb3b 	bl	9000c7a4 <tcp_next_iss>
    npcb->snd_wl1 = seqno - 1;/* initialise to seqno-1 to force window update */
9000d12e:	f8db 3000 	ldr.w	r3, [fp]
    npcb->snd_wl2 = iss;
9000d132:	f8c8 0058 	str.w	r0, [r8, #88]	@ 0x58
    npcb->snd_wl1 = seqno - 1;/* initialise to seqno-1 to force window update */
9000d136:	3b01      	subs	r3, #1
    npcb->snd_nxt = iss;
9000d138:	f8c8 0050 	str.w	r0, [r8, #80]	@ 0x50
    npcb->lastack = iss;
9000d13c:	f8c8 0044 	str.w	r0, [r8, #68]	@ 0x44
    npcb->snd_wl1 = seqno - 1;/* initialise to seqno-1 to force window update */
9000d140:	f8c8 3054 	str.w	r3, [r8, #84]	@ 0x54
    npcb->callback_arg = pcb->callback_arg;
9000d144:	6923      	ldr	r3, [r4, #16]
    npcb->snd_lbb = iss;
9000d146:	f8c8 005c 	str.w	r0, [r8, #92]	@ 0x5c
    npcb->listener = pcb;
9000d14a:	f8c8 4078 	str.w	r4, [r8, #120]	@ 0x78
    npcb->callback_arg = pcb->callback_arg;
9000d14e:	f8c8 3010 	str.w	r3, [r8, #16]
    npcb->so_options = pcb->so_options & SOF_INHERITED;
9000d152:	7a63      	ldrb	r3, [r4, #9]
9000d154:	f003 030c 	and.w	r3, r3, #12
9000d158:	f888 3009 	strb.w	r3, [r8, #9]
    npcb->netif_idx = pcb->netif_idx;
9000d15c:	7a23      	ldrb	r3, [r4, #8]
    npcb->mss = tcp_eff_send_mss(npcb->mss, &npcb->local_ip, &npcb->remote_ip);
9000d15e:	f108 0404 	add.w	r4, r8, #4
    npcb->netif_idx = pcb->netif_idx;
9000d162:	f888 3008 	strb.w	r3, [r8, #8]
    TCP_REG_ACTIVE(npcb);
9000d166:	4b4c      	ldr	r3, [pc, #304]	@ (9000d298 <tcp_input+0x51c>)
9000d168:	681a      	ldr	r2, [r3, #0]
9000d16a:	f8c3 8000 	str.w	r8, [r3]
9000d16e:	f8c8 200c 	str.w	r2, [r8, #12]
9000d172:	f001 f98d 	bl	9000e490 <tcp_timer_needed>
9000d176:	2201      	movs	r2, #1
9000d178:	4b48      	ldr	r3, [pc, #288]	@ (9000d29c <tcp_input+0x520>)
    tcp_parseopt(npcb);
9000d17a:	4640      	mov	r0, r8
    TCP_REG_ACTIVE(npcb);
9000d17c:	701a      	strb	r2, [r3, #0]
    tcp_parseopt(npcb);
9000d17e:	f7ff fb69 	bl	9000c854 <tcp_parseopt>
    npcb->snd_wnd = tcphdr->wnd;
9000d182:	682b      	ldr	r3, [r5, #0]
    npcb->mss = tcp_eff_send_mss(npcb->mss, &npcb->local_ip, &npcb->remote_ip);
9000d184:	4620      	mov	r0, r4
9000d186:	f8b8 5032 	ldrh.w	r5, [r8, #50]	@ 0x32
    npcb->snd_wnd = tcphdr->wnd;
9000d18a:	89db      	ldrh	r3, [r3, #14]
9000d18c:	f8a8 3060 	strh.w	r3, [r8, #96]	@ 0x60
    npcb->snd_wnd_max = npcb->snd_wnd;
9000d190:	f8a8 3062 	strh.w	r3, [r8, #98]	@ 0x62
    npcb->mss = tcp_eff_send_mss(npcb->mss, &npcb->local_ip, &npcb->remote_ip);
9000d194:	f7fd fa86 	bl	9000a6a4 <ip4_route>
9000d198:	4622      	mov	r2, r4
9000d19a:	4601      	mov	r1, r0
9000d19c:	4628      	mov	r0, r5
9000d19e:	f7ff fb0d 	bl	9000c7bc <tcp_eff_send_mss_netif>
    rc = tcp_enqueue_flags(npcb, TCP_SYN | TCP_ACK);
9000d1a2:	2112      	movs	r1, #18
    npcb->mss = tcp_eff_send_mss(npcb->mss, &npcb->local_ip, &npcb->remote_ip);
9000d1a4:	f8a8 0032 	strh.w	r0, [r8, #50]	@ 0x32
    rc = tcp_enqueue_flags(npcb, TCP_SYN | TCP_ACK);
9000d1a8:	4640      	mov	r0, r8
9000d1aa:	f000 fe01 	bl	9000ddb0 <tcp_enqueue_flags>
    if (rc != ERR_OK) {
9000d1ae:	b120      	cbz	r0, 9000d1ba <tcp_input+0x43e>
      tcp_abandon(npcb, 0);
9000d1b0:	4639      	mov	r1, r7
9000d1b2:	4640      	mov	r0, r8
9000d1b4:	f7ff f9b4 	bl	9000c520 <tcp_abandon>
      return;
9000d1b8:	e6a9      	b.n	9000cf0e <tcp_input+0x192>
    tcp_output(npcb);
9000d1ba:	4640      	mov	r0, r8
9000d1bc:	e774      	b.n	9000d0a8 <tcp_input+0x32c>
    tcp_input_pcb = pcb;
9000d1be:	4b38      	ldr	r3, [pc, #224]	@ (9000d2a0 <tcp_input+0x524>)
  if (flags & TCP_RST) {
9000d1c0:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 9000d2a4 <tcp_input+0x528>
    tcp_input_pcb = pcb;
9000d1c4:	601c      	str	r4, [r3, #0]
  if (flags & TCP_RST) {
9000d1c6:	f899 3000 	ldrb.w	r3, [r9]
9000d1ca:	075a      	lsls	r2, r3, #29
9000d1cc:	d531      	bpl.n	9000d232 <tcp_input+0x4b6>
    if (pcb->state == SYN_SENT) {
9000d1ce:	7d23      	ldrb	r3, [r4, #20]
9000d1d0:	2b02      	cmp	r3, #2
9000d1d2:	d11f      	bne.n	9000d214 <tcp_input+0x498>
      if (ackno == pcb->snd_nxt) {
9000d1d4:	4b2e      	ldr	r3, [pc, #184]	@ (9000d290 <tcp_input+0x514>)
9000d1d6:	6d22      	ldr	r2, [r4, #80]	@ 0x50
9000d1d8:	681b      	ldr	r3, [r3, #0]
9000d1da:	429a      	cmp	r2, r3
9000d1dc:	d107      	bne.n	9000d1ee <tcp_input+0x472>
      recv_flags |= TF_RESET;
9000d1de:	7833      	ldrb	r3, [r6, #0]
9000d1e0:	f043 0308 	orr.w	r3, r3, #8
9000d1e4:	7033      	strb	r3, [r6, #0]
      tcp_clear_flags(pcb, TF_ACK_DELAY);
9000d1e6:	8b63      	ldrh	r3, [r4, #26]
9000d1e8:	f023 0301 	bic.w	r3, r3, #1
9000d1ec:	8363      	strh	r3, [r4, #26]
      if (recv_flags & TF_RESET) {
9000d1ee:	7833      	ldrb	r3, [r6, #0]
9000d1f0:	0719      	lsls	r1, r3, #28
9000d1f2:	f140 81e8 	bpl.w	9000d5c6 <tcp_input+0x84a>
        TCP_EVENT_ERR(pcb->state, pcb->errf, pcb->callback_arg, ERR_RST);
9000d1f6:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
9000d1fa:	b11b      	cbz	r3, 9000d204 <tcp_input+0x488>
9000d1fc:	f06f 010d 	mvn.w	r1, #13
9000d200:	6920      	ldr	r0, [r4, #16]
9000d202:	4798      	blx	r3
        tcp_pcb_remove(&tcp_active_pcbs, pcb);
9000d204:	4621      	mov	r1, r4
9000d206:	4824      	ldr	r0, [pc, #144]	@ (9000d298 <tcp_input+0x51c>)
9000d208:	f7ff f814 	bl	9000c234 <tcp_pcb_remove>
        tcp_free(pcb);
9000d20c:	4620      	mov	r0, r4
9000d20e:	f7fe fd3d 	bl	9000bc8c <tcp_free>
9000d212:	e6d5      	b.n	9000cfc0 <tcp_input+0x244>
      if (seqno == pcb->rcv_nxt) {
9000d214:	4b1c      	ldr	r3, [pc, #112]	@ (9000d288 <tcp_input+0x50c>)
9000d216:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d218:	681b      	ldr	r3, [r3, #0]
9000d21a:	429a      	cmp	r2, r3
9000d21c:	d0df      	beq.n	9000d1de <tcp_input+0x462>
      } else  if (TCP_SEQ_BETWEEN(seqno, pcb->rcv_nxt,
9000d21e:	1a9b      	subs	r3, r3, r2
9000d220:	d4e5      	bmi.n	9000d1ee <tcp_input+0x472>
9000d222:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
9000d224:	1a9b      	subs	r3, r3, r2
9000d226:	2b00      	cmp	r3, #0
9000d228:	dce1      	bgt.n	9000d1ee <tcp_input+0x472>
        tcp_ack_now(pcb);
9000d22a:	8b63      	ldrh	r3, [r4, #26]
9000d22c:	f043 0302 	orr.w	r3, r3, #2
9000d230:	e7dc      	b.n	9000d1ec <tcp_input+0x470>
  if ((flags & TCP_SYN) && (pcb->state != SYN_SENT && pcb->state != SYN_RCVD)) {
9000d232:	f013 0102 	ands.w	r1, r3, #2
        tcp_ack_now(pcb);
9000d236:	8b62      	ldrh	r2, [r4, #26]
  if ((flags & TCP_SYN) && (pcb->state != SYN_SENT && pcb->state != SYN_RCVD)) {
9000d238:	d007      	beq.n	9000d24a <tcp_input+0x4ce>
9000d23a:	7d20      	ldrb	r0, [r4, #20]
9000d23c:	3802      	subs	r0, #2
9000d23e:	2801      	cmp	r0, #1
9000d240:	d903      	bls.n	9000d24a <tcp_input+0x4ce>
    tcp_ack_now(pcb);
9000d242:	f042 0202 	orr.w	r2, r2, #2
9000d246:	8362      	strh	r2, [r4, #26]
    if (err != ERR_ABRT) {
9000d248:	e7d1      	b.n	9000d1ee <tcp_input+0x472>
  if ((pcb->flags & TF_RXCLOSED) == 0) {
9000d24a:	06d0      	lsls	r0, r2, #27
  tcp_parseopt(pcb);
9000d24c:	4620      	mov	r0, r4
    pcb->tmr = tcp_ticks;
9000d24e:	bf5e      	ittt	pl
9000d250:	4a10      	ldrpl	r2, [pc, #64]	@ (9000d294 <tcp_input+0x518>)
9000d252:	6812      	ldrpl	r2, [r2, #0]
9000d254:	6222      	strpl	r2, [r4, #32]
  pcb->persist_probe = 0;
9000d256:	2200      	movs	r2, #0
9000d258:	f8a4 2096 	strh.w	r2, [r4, #150]	@ 0x96
9000d25c:	e9cd 3104 	strd	r3, r1, [sp, #16]
  tcp_parseopt(pcb);
9000d260:	f7ff faf8 	bl	9000c854 <tcp_parseopt>
  switch (pcb->state) {
9000d264:	7d22      	ldrb	r2, [r4, #20]
9000d266:	3a02      	subs	r2, #2
9000d268:	e9dd 3104 	ldrd	r3, r1, [sp, #16]
9000d26c:	2a07      	cmp	r2, #7
9000d26e:	d8be      	bhi.n	9000d1ee <tcp_input+0x472>
9000d270:	e8df f012 	tbh	[pc, r2, lsl #1]
9000d274:	0098001a 	.word	0x0098001a
9000d278:	010200fe 	.word	0x010200fe
9000d27c:	00fe014a 	.word	0x00fe014a
9000d280:	01920172 	.word	0x01920172
9000d284:	2001a49a 	.word	0x2001a49a
9000d288:	2001a4a4 	.word	0x2001a4a4
9000d28c:	20014004 	.word	0x20014004
9000d290:	2001a4a0 	.word	0x2001a4a0
9000d294:	2001a48c 	.word	0x2001a48c
9000d298:	2001a480 	.word	0x2001a480
9000d29c:	2001a47a 	.word	0x2001a47a
9000d2a0:	2001a490 	.word	0x2001a490
9000d2a4:	2001a499 	.word	0x2001a499
      if ((flags & TCP_ACK) && (flags & TCP_SYN)
9000d2a8:	f003 0212 	and.w	r2, r3, #18
9000d2ac:	2a12      	cmp	r2, #18
9000d2ae:	d159      	bne.n	9000d364 <tcp_input+0x5e8>
          && (ackno == pcb->lastack + 1)) {
9000d2b0:	4aa2      	ldr	r2, [pc, #648]	@ (9000d53c <tcp_input+0x7c0>)
9000d2b2:	6811      	ldr	r1, [r2, #0]
9000d2b4:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000d2b6:	3201      	adds	r2, #1
9000d2b8:	428a      	cmp	r2, r1
9000d2ba:	d153      	bne.n	9000d364 <tcp_input+0x5e8>
        pcb->rcv_nxt = seqno + 1;
9000d2bc:	f8db 3000 	ldr.w	r3, [fp]
        pcb->lastack = ackno;
9000d2c0:	6462      	str	r2, [r4, #68]	@ 0x44
        pcb->rcv_nxt = seqno + 1;
9000d2c2:	1c59      	adds	r1, r3, #1
        pcb->snd_wnd = tcphdr->wnd;
9000d2c4:	682a      	ldr	r2, [r5, #0]
        pcb->snd_wl1 = seqno - 1; /* initialise to seqno - 1 to force window update */
9000d2c6:	3b01      	subs	r3, #1
        pcb->mss = tcp_eff_send_mss(pcb->mss, &pcb->local_ip, &pcb->remote_ip);
9000d2c8:	f8b4 9032 	ldrh.w	r9, [r4, #50]	@ 0x32
        pcb->rcv_nxt = seqno + 1;
9000d2cc:	6261      	str	r1, [r4, #36]	@ 0x24
        pcb->rcv_ann_right_edge = pcb->rcv_nxt;
9000d2ce:	62e1      	str	r1, [r4, #44]	@ 0x2c
        pcb->snd_wnd = tcphdr->wnd;
9000d2d0:	89d2      	ldrh	r2, [r2, #14]
        pcb->snd_wl1 = seqno - 1; /* initialise to seqno - 1 to force window update */
9000d2d2:	6563      	str	r3, [r4, #84]	@ 0x54
        pcb->state = ESTABLISHED;
9000d2d4:	2304      	movs	r3, #4
        pcb->snd_wnd = tcphdr->wnd;
9000d2d6:	f8a4 2060 	strh.w	r2, [r4, #96]	@ 0x60
        pcb->mss = tcp_eff_send_mss(pcb->mss, &pcb->local_ip, &pcb->remote_ip);
9000d2da:	18e5      	adds	r5, r4, r3
        pcb->state = ESTABLISHED;
9000d2dc:	7523      	strb	r3, [r4, #20]
        pcb->snd_wnd_max = pcb->snd_wnd;
9000d2de:	f8a4 2062 	strh.w	r2, [r4, #98]	@ 0x62
        pcb->mss = tcp_eff_send_mss(pcb->mss, &pcb->local_ip, &pcb->remote_ip);
9000d2e2:	4628      	mov	r0, r5
9000d2e4:	f7fd f9de 	bl	9000a6a4 <ip4_route>
9000d2e8:	462a      	mov	r2, r5
9000d2ea:	4601      	mov	r1, r0
9000d2ec:	4648      	mov	r0, r9
9000d2ee:	f7ff fa65 	bl	9000c7bc <tcp_eff_send_mss_netif>
        pcb->cwnd = LWIP_TCP_CALC_INITIAL_CWND(pcb->mss);
9000d2f2:	f241 131c 	movw	r3, #4380	@ 0x111c
9000d2f6:	0042      	lsls	r2, r0, #1
        pcb->mss = tcp_eff_send_mss(pcb->mss, &pcb->local_ip, &pcb->remote_ip);
9000d2f8:	8660      	strh	r0, [r4, #50]	@ 0x32
        pcb->cwnd = LWIP_TCP_CALC_INITIAL_CWND(pcb->mss);
9000d2fa:	0081      	lsls	r1, r0, #2
9000d2fc:	429a      	cmp	r2, r3
9000d2fe:	4615      	mov	r5, r2
9000d300:	bf38      	it	cc
9000d302:	461d      	movcc	r5, r3
9000d304:	ebb5 0f80 	cmp.w	r5, r0, lsl #2
9000d308:	d920      	bls.n	9000d34c <tcp_input+0x5d0>
9000d30a:	b28b      	uxth	r3, r1
9000d30c:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
        --pcb->snd_queuelen;
9000d310:	f8b4 3066 	ldrh.w	r3, [r4, #102]	@ 0x66
        rseg = pcb->unacked;
9000d314:	6f20      	ldr	r0, [r4, #112]	@ 0x70
        --pcb->snd_queuelen;
9000d316:	3b01      	subs	r3, #1
9000d318:	f8a4 3066 	strh.w	r3, [r4, #102]	@ 0x66
        if (rseg == NULL) {
9000d31c:	b9d0      	cbnz	r0, 9000d354 <tcp_input+0x5d8>
          rseg = pcb->unsent;
9000d31e:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
          pcb->unsent = rseg->next;
9000d320:	6803      	ldr	r3, [r0, #0]
9000d322:	66e3      	str	r3, [r4, #108]	@ 0x6c
        tcp_seg_free(rseg);
9000d324:	f7fe fda0 	bl	9000be68 <tcp_seg_free>
        if (pcb->unacked == NULL) {
9000d328:	6f23      	ldr	r3, [r4, #112]	@ 0x70
9000d32a:	b9b3      	cbnz	r3, 9000d35a <tcp_input+0x5de>
          pcb->rtime = -1;
9000d32c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
9000d330:	8623      	strh	r3, [r4, #48]	@ 0x30
        TCP_EVENT_CONNECTED(pcb, ERR_OK, err);
9000d332:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
9000d336:	2b00      	cmp	r3, #0
9000d338:	f43f af77 	beq.w	9000d22a <tcp_input+0x4ae>
9000d33c:	2200      	movs	r2, #0
9000d33e:	4621      	mov	r1, r4
9000d340:	6920      	ldr	r0, [r4, #16]
9000d342:	4798      	blx	r3
        if (err == ERR_ABRT) {
9000d344:	300d      	adds	r0, #13
9000d346:	f47f af70 	bne.w	9000d22a <tcp_input+0x4ae>
9000d34a:	e639      	b.n	9000cfc0 <tcp_input+0x244>
        pcb->cwnd = LWIP_TCP_CALC_INITIAL_CWND(pcb->mss);
9000d34c:	429a      	cmp	r2, r3
9000d34e:	bf88      	it	hi
9000d350:	b293      	uxthhi	r3, r2
9000d352:	e7db      	b.n	9000d30c <tcp_input+0x590>
          pcb->unacked = rseg->next;
9000d354:	6803      	ldr	r3, [r0, #0]
9000d356:	6723      	str	r3, [r4, #112]	@ 0x70
9000d358:	e7e4      	b.n	9000d324 <tcp_input+0x5a8>
          pcb->rtime = 0;
9000d35a:	2300      	movs	r3, #0
9000d35c:	8623      	strh	r3, [r4, #48]	@ 0x30
          pcb->nrtx = 0;
9000d35e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9000d362:	e7e6      	b.n	9000d332 <tcp_input+0x5b6>
      else if (flags & TCP_ACK) {
9000d364:	06da      	lsls	r2, r3, #27
9000d366:	f57f af42 	bpl.w	9000d1ee <tcp_input+0x472>
                ip_current_src_addr(), tcphdr->dest, tcphdr->src);
9000d36a:	682b      	ldr	r3, [r5, #0]
        tcp_rst(pcb, ackno, seqno + tcplen, ip_current_dest_addr(),
9000d36c:	4a74      	ldr	r2, [pc, #464]	@ (9000d540 <tcp_input+0x7c4>)
9000d36e:	8818      	ldrh	r0, [r3, #0]
9000d370:	8811      	ldrh	r1, [r2, #0]
9000d372:	f8db 2000 	ldr.w	r2, [fp]
9000d376:	9002      	str	r0, [sp, #8]
9000d378:	4620      	mov	r0, r4
9000d37a:	885b      	ldrh	r3, [r3, #2]
9000d37c:	440a      	add	r2, r1
9000d37e:	496f      	ldr	r1, [pc, #444]	@ (9000d53c <tcp_input+0x7c0>)
9000d380:	9301      	str	r3, [sp, #4]
9000d382:	4b70      	ldr	r3, [pc, #448]	@ (9000d544 <tcp_input+0x7c8>)
9000d384:	9300      	str	r3, [sp, #0]
9000d386:	3304      	adds	r3, #4
9000d388:	6809      	ldr	r1, [r1, #0]
9000d38a:	f000 fdfa 	bl	9000df82 <tcp_rst>
        if (pcb->nrtx < TCP_SYNMAXRTX) {
9000d38e:	f894 3042 	ldrb.w	r3, [r4, #66]	@ 0x42
9000d392:	2b05      	cmp	r3, #5
9000d394:	f63f af2b 	bhi.w	9000d1ee <tcp_input+0x472>
          pcb->rtime = 0;
9000d398:	2300      	movs	r3, #0
          tcp_rexmit_rto(pcb);
9000d39a:	4620      	mov	r0, r4
          pcb->rtime = 0;
9000d39c:	8623      	strh	r3, [r4, #48]	@ 0x30
          tcp_rexmit_rto(pcb);
9000d39e:	f000 ffb4 	bl	9000e30a <tcp_rexmit_rto>
    if (err != ERR_ABRT) {
9000d3a2:	e724      	b.n	9000d1ee <tcp_input+0x472>
      if (flags & TCP_ACK) {
9000d3a4:	06db      	lsls	r3, r3, #27
9000d3a6:	d555      	bpl.n	9000d454 <tcp_input+0x6d8>
        if (TCP_SEQ_BETWEEN(ackno, pcb->lastack + 1, pcb->snd_nxt)) {
9000d3a8:	4b64      	ldr	r3, [pc, #400]	@ (9000d53c <tcp_input+0x7c0>)
9000d3aa:	6819      	ldr	r1, [r3, #0]
9000d3ac:	6c63      	ldr	r3, [r4, #68]	@ 0x44
9000d3ae:	43db      	mvns	r3, r3
9000d3b0:	42cb      	cmn	r3, r1
9000d3b2:	d43e      	bmi.n	9000d432 <tcp_input+0x6b6>
9000d3b4:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000d3b6:	1acb      	subs	r3, r1, r3
9000d3b8:	2b00      	cmp	r3, #0
9000d3ba:	dc3a      	bgt.n	9000d432 <tcp_input+0x6b6>
          pcb->state = ESTABLISHED;
9000d3bc:	2304      	movs	r3, #4
9000d3be:	7523      	strb	r3, [r4, #20]
          if (pcb->listener == NULL) {
9000d3c0:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
9000d3c2:	b91b      	cbnz	r3, 9000d3cc <tcp_input+0x650>
            tcp_abort(pcb);
9000d3c4:	4620      	mov	r0, r4
9000d3c6:	f7ff f919 	bl	9000c5fc <tcp_abort>
            goto aborted;
9000d3ca:	e5f9      	b.n	9000cfc0 <tcp_input+0x244>
            TCP_EVENT_ACCEPT(pcb->listener, pcb, pcb->callback_arg, ERR_OK, err);
9000d3cc:	699b      	ldr	r3, [r3, #24]
9000d3ce:	2b00      	cmp	r3, #0
9000d3d0:	d0f8      	beq.n	9000d3c4 <tcp_input+0x648>
9000d3d2:	2200      	movs	r2, #0
9000d3d4:	4621      	mov	r1, r4
9000d3d6:	6920      	ldr	r0, [r4, #16]
9000d3d8:	4798      	blx	r3
          if (err != ERR_OK) {
9000d3da:	b118      	cbz	r0, 9000d3e4 <tcp_input+0x668>
            if (err != ERR_ABRT) {
9000d3dc:	300d      	adds	r0, #13
9000d3de:	f43f adef 	beq.w	9000cfc0 <tcp_input+0x244>
9000d3e2:	e7ef      	b.n	9000d3c4 <tcp_input+0x648>
          tcp_receive(pcb);
9000d3e4:	4620      	mov	r0, r4
9000d3e6:	f7ff fac7 	bl	9000c978 <tcp_receive>
          if (recv_acked != 0) {
9000d3ea:	f8b8 3000 	ldrh.w	r3, [r8]
9000d3ee:	b113      	cbz	r3, 9000d3f6 <tcp_input+0x67a>
            recv_acked--;
9000d3f0:	3b01      	subs	r3, #1
9000d3f2:	f8a8 3000 	strh.w	r3, [r8]
          pcb->cwnd = LWIP_TCP_CALC_INITIAL_CWND(pcb->mss);
9000d3f6:	8e61      	ldrh	r1, [r4, #50]	@ 0x32
9000d3f8:	f241 131c 	movw	r3, #4380	@ 0x111c
9000d3fc:	004a      	lsls	r2, r1, #1
9000d3fe:	0088      	lsls	r0, r1, #2
9000d400:	429a      	cmp	r2, r3
9000d402:	4615      	mov	r5, r2
9000d404:	bf38      	it	cc
9000d406:	461d      	movcc	r5, r3
9000d408:	ebb5 0f81 	cmp.w	r5, r1, lsl #2
9000d40c:	d90d      	bls.n	9000d42a <tcp_input+0x6ae>
9000d40e:	b283      	uxth	r3, r0
9000d410:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
      if (recv_flags & TF_GOT_FIN) { /* passive close */
9000d414:	7833      	ldrb	r3, [r6, #0]
9000d416:	069d      	lsls	r5, r3, #26
9000d418:	f57f aee9 	bpl.w	9000d1ee <tcp_input+0x472>
        tcp_ack_now(pcb);
9000d41c:	8b63      	ldrh	r3, [r4, #26]
9000d41e:	f043 0302 	orr.w	r3, r3, #2
9000d422:	8363      	strh	r3, [r4, #26]
        pcb->state = CLOSE_WAIT;
9000d424:	2307      	movs	r3, #7
        pcb->state = FIN_WAIT_2;
9000d426:	7523      	strb	r3, [r4, #20]
    if (err != ERR_ABRT) {
9000d428:	e6e1      	b.n	9000d1ee <tcp_input+0x472>
          pcb->cwnd = LWIP_TCP_CALC_INITIAL_CWND(pcb->mss);
9000d42a:	429a      	cmp	r2, r3
9000d42c:	bf88      	it	hi
9000d42e:	b293      	uxthhi	r3, r2
9000d430:	e7ee      	b.n	9000d410 <tcp_input+0x694>
                  ip_current_src_addr(), tcphdr->dest, tcphdr->src);
9000d432:	682b      	ldr	r3, [r5, #0]
          tcp_rst(pcb, ackno, seqno + tcplen, ip_current_dest_addr(),
9000d434:	4a42      	ldr	r2, [pc, #264]	@ (9000d540 <tcp_input+0x7c4>)
9000d436:	881d      	ldrh	r5, [r3, #0]
9000d438:	8810      	ldrh	r0, [r2, #0]
9000d43a:	4a43      	ldr	r2, [pc, #268]	@ (9000d548 <tcp_input+0x7cc>)
9000d43c:	6812      	ldr	r2, [r2, #0]
9000d43e:	9502      	str	r5, [sp, #8]
9000d440:	885b      	ldrh	r3, [r3, #2]
9000d442:	4402      	add	r2, r0
9000d444:	4620      	mov	r0, r4
9000d446:	9301      	str	r3, [sp, #4]
9000d448:	4b3e      	ldr	r3, [pc, #248]	@ (9000d544 <tcp_input+0x7c8>)
9000d44a:	9300      	str	r3, [sp, #0]
9000d44c:	3304      	adds	r3, #4
9000d44e:	f000 fd98 	bl	9000df82 <tcp_rst>
    if (err != ERR_ABRT) {
9000d452:	e6cc      	b.n	9000d1ee <tcp_input+0x472>
      } else if ((flags & TCP_SYN) && (seqno == pcb->rcv_nxt - 1)) {
9000d454:	2900      	cmp	r1, #0
9000d456:	f43f aeca 	beq.w	9000d1ee <tcp_input+0x472>
9000d45a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d45c:	4a3a      	ldr	r2, [pc, #232]	@ (9000d548 <tcp_input+0x7cc>)
9000d45e:	3b01      	subs	r3, #1
9000d460:	6812      	ldr	r2, [r2, #0]
9000d462:	4293      	cmp	r3, r2
9000d464:	f47f aec3 	bne.w	9000d1ee <tcp_input+0x472>
        tcp_rexmit(pcb);
9000d468:	4620      	mov	r0, r4
9000d46a:	f000 fd36 	bl	9000deda <tcp_rexmit>
    if (err != ERR_ABRT) {
9000d46e:	e6be      	b.n	9000d1ee <tcp_input+0x472>
      tcp_receive(pcb);
9000d470:	4620      	mov	r0, r4
9000d472:	f7ff fa81 	bl	9000c978 <tcp_receive>
9000d476:	e7cd      	b.n	9000d414 <tcp_input+0x698>
      tcp_receive(pcb);
9000d478:	4620      	mov	r0, r4
9000d47a:	f7ff fa7d 	bl	9000c978 <tcp_receive>
      if (recv_flags & TF_GOT_FIN) {
9000d47e:	7833      	ldrb	r3, [r6, #0]
9000d480:	0698      	lsls	r0, r3, #26
9000d482:	d530      	bpl.n	9000d4e6 <tcp_input+0x76a>
        if ((flags & TCP_ACK) && (ackno == pcb->snd_nxt) &&
9000d484:	f899 2000 	ldrb.w	r2, [r9]
          tcp_ack_now(pcb);
9000d488:	8b63      	ldrh	r3, [r4, #26]
        if ((flags & TCP_ACK) && (ackno == pcb->snd_nxt) &&
9000d48a:	06d1      	lsls	r1, r2, #27
          tcp_ack_now(pcb);
9000d48c:	f043 0302 	orr.w	r3, r3, #2
        if ((flags & TCP_ACK) && (ackno == pcb->snd_nxt) &&
9000d490:	d526      	bpl.n	9000d4e0 <tcp_input+0x764>
9000d492:	4a2a      	ldr	r2, [pc, #168]	@ (9000d53c <tcp_input+0x7c0>)
9000d494:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000d496:	6812      	ldr	r2, [r2, #0]
9000d498:	4291      	cmp	r1, r2
9000d49a:	d121      	bne.n	9000d4e0 <tcp_input+0x764>
9000d49c:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000d49e:	b9fa      	cbnz	r2, 9000d4e0 <tcp_input+0x764>
          tcp_ack_now(pcb);
9000d4a0:	8363      	strh	r3, [r4, #26]
          tcp_pcb_purge(pcb);
9000d4a2:	4620      	mov	r0, r4
9000d4a4:	f7fe fd1c 	bl	9000bee0 <tcp_pcb_purge>
          TCP_RMV_ACTIVE(pcb);
9000d4a8:	4a28      	ldr	r2, [pc, #160]	@ (9000d54c <tcp_input+0x7d0>)
9000d4aa:	6813      	ldr	r3, [r2, #0]
9000d4ac:	429c      	cmp	r4, r3
9000d4ae:	d109      	bne.n	9000d4c4 <tcp_input+0x748>
        TCP_RMV_ACTIVE(pcb);
9000d4b0:	68e3      	ldr	r3, [r4, #12]
9000d4b2:	6013      	str	r3, [r2, #0]
9000d4b4:	e008      	b.n	9000d4c8 <tcp_input+0x74c>
          TCP_RMV_ACTIVE(pcb);
9000d4b6:	68da      	ldr	r2, [r3, #12]
9000d4b8:	4294      	cmp	r4, r2
9000d4ba:	d102      	bne.n	9000d4c2 <tcp_input+0x746>
        TCP_RMV_ACTIVE(pcb);
9000d4bc:	68e2      	ldr	r2, [r4, #12]
9000d4be:	60da      	str	r2, [r3, #12]
9000d4c0:	e002      	b.n	9000d4c8 <tcp_input+0x74c>
          TCP_RMV_ACTIVE(pcb);
9000d4c2:	4613      	mov	r3, r2
9000d4c4:	2b00      	cmp	r3, #0
9000d4c6:	d1f6      	bne.n	9000d4b6 <tcp_input+0x73a>
        TCP_RMV_ACTIVE(pcb);
9000d4c8:	4b21      	ldr	r3, [pc, #132]	@ (9000d550 <tcp_input+0x7d4>)
9000d4ca:	2201      	movs	r2, #1
9000d4cc:	701a      	strb	r2, [r3, #0]
        pcb->state = TIME_WAIT;
9000d4ce:	230a      	movs	r3, #10
9000d4d0:	7523      	strb	r3, [r4, #20]
        TCP_REG(&tcp_tw_pcbs, pcb);
9000d4d2:	4b20      	ldr	r3, [pc, #128]	@ (9000d554 <tcp_input+0x7d8>)
9000d4d4:	681a      	ldr	r2, [r3, #0]
9000d4d6:	601c      	str	r4, [r3, #0]
9000d4d8:	60e2      	str	r2, [r4, #12]
9000d4da:	f000 ffd9 	bl	9000e490 <tcp_timer_needed>
    if (err != ERR_ABRT) {
9000d4de:	e686      	b.n	9000d1ee <tcp_input+0x472>
          tcp_ack_now(pcb);
9000d4e0:	8363      	strh	r3, [r4, #26]
          pcb->state = CLOSING;
9000d4e2:	2308      	movs	r3, #8
9000d4e4:	e79f      	b.n	9000d426 <tcp_input+0x6aa>
      } else if ((flags & TCP_ACK) && (ackno == pcb->snd_nxt) &&
9000d4e6:	f899 3000 	ldrb.w	r3, [r9]
9000d4ea:	06da      	lsls	r2, r3, #27
9000d4ec:	f57f ae7f 	bpl.w	9000d1ee <tcp_input+0x472>
9000d4f0:	4b12      	ldr	r3, [pc, #72]	@ (9000d53c <tcp_input+0x7c0>)
9000d4f2:	6d22      	ldr	r2, [r4, #80]	@ 0x50
9000d4f4:	681b      	ldr	r3, [r3, #0]
9000d4f6:	429a      	cmp	r2, r3
9000d4f8:	f47f ae79 	bne.w	9000d1ee <tcp_input+0x472>
9000d4fc:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
9000d4fe:	2b00      	cmp	r3, #0
9000d500:	f47f ae75 	bne.w	9000d1ee <tcp_input+0x472>
        pcb->state = FIN_WAIT_2;
9000d504:	2306      	movs	r3, #6
9000d506:	e78e      	b.n	9000d426 <tcp_input+0x6aa>
      tcp_receive(pcb);
9000d508:	4620      	mov	r0, r4
9000d50a:	f7ff fa35 	bl	9000c978 <tcp_receive>
      if (recv_flags & TF_GOT_FIN) {
9000d50e:	7833      	ldrb	r3, [r6, #0]
9000d510:	069b      	lsls	r3, r3, #26
9000d512:	f57f ae6c 	bpl.w	9000d1ee <tcp_input+0x472>
        tcp_ack_now(pcb);
9000d516:	8b63      	ldrh	r3, [r4, #26]
        tcp_pcb_purge(pcb);
9000d518:	4620      	mov	r0, r4
        tcp_ack_now(pcb);
9000d51a:	f043 0302 	orr.w	r3, r3, #2
9000d51e:	8363      	strh	r3, [r4, #26]
        tcp_pcb_purge(pcb);
9000d520:	f7fe fcde 	bl	9000bee0 <tcp_pcb_purge>
        TCP_RMV_ACTIVE(pcb);
9000d524:	4a09      	ldr	r2, [pc, #36]	@ (9000d54c <tcp_input+0x7d0>)
9000d526:	6813      	ldr	r3, [r2, #0]
9000d528:	429c      	cmp	r4, r3
9000d52a:	d0c1      	beq.n	9000d4b0 <tcp_input+0x734>
9000d52c:	2b00      	cmp	r3, #0
9000d52e:	d0cb      	beq.n	9000d4c8 <tcp_input+0x74c>
9000d530:	68da      	ldr	r2, [r3, #12]
9000d532:	4294      	cmp	r4, r2
9000d534:	d0c2      	beq.n	9000d4bc <tcp_input+0x740>
9000d536:	4613      	mov	r3, r2
9000d538:	e7f8      	b.n	9000d52c <tcp_input+0x7b0>
9000d53a:	bf00      	nop
9000d53c:	2001a4a0 	.word	0x2001a4a0
9000d540:	2001a49a 	.word	0x2001a49a
9000d544:	20014004 	.word	0x20014004
9000d548:	2001a4a4 	.word	0x2001a4a4
9000d54c:	2001a480 	.word	0x2001a480
9000d550:	2001a47a 	.word	0x2001a47a
9000d554:	2001a47c 	.word	0x2001a47c
      tcp_receive(pcb);
9000d558:	4620      	mov	r0, r4
9000d55a:	f7ff fa0d 	bl	9000c978 <tcp_receive>
      if ((flags & TCP_ACK) && ackno == pcb->snd_nxt && pcb->unsent == NULL) {
9000d55e:	f899 3000 	ldrb.w	r3, [r9]
9000d562:	06dd      	lsls	r5, r3, #27
9000d564:	f57f ae43 	bpl.w	9000d1ee <tcp_input+0x472>
9000d568:	4b53      	ldr	r3, [pc, #332]	@ (9000d6b8 <tcp_input+0x93c>)
9000d56a:	6d22      	ldr	r2, [r4, #80]	@ 0x50
9000d56c:	681b      	ldr	r3, [r3, #0]
9000d56e:	429a      	cmp	r2, r3
9000d570:	f47f ae3d 	bne.w	9000d1ee <tcp_input+0x472>
9000d574:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
9000d576:	2b00      	cmp	r3, #0
9000d578:	f47f ae39 	bne.w	9000d1ee <tcp_input+0x472>
        tcp_pcb_purge(pcb);
9000d57c:	4620      	mov	r0, r4
9000d57e:	f7fe fcaf 	bl	9000bee0 <tcp_pcb_purge>
        TCP_RMV_ACTIVE(pcb);
9000d582:	4a4e      	ldr	r2, [pc, #312]	@ (9000d6bc <tcp_input+0x940>)
9000d584:	6813      	ldr	r3, [r2, #0]
9000d586:	429c      	cmp	r4, r3
9000d588:	d092      	beq.n	9000d4b0 <tcp_input+0x734>
9000d58a:	2b00      	cmp	r3, #0
9000d58c:	d09c      	beq.n	9000d4c8 <tcp_input+0x74c>
9000d58e:	68da      	ldr	r2, [r3, #12]
9000d590:	4294      	cmp	r4, r2
9000d592:	d093      	beq.n	9000d4bc <tcp_input+0x740>
9000d594:	4613      	mov	r3, r2
9000d596:	e7f8      	b.n	9000d58a <tcp_input+0x80e>
      tcp_receive(pcb);
9000d598:	4620      	mov	r0, r4
9000d59a:	f7ff f9ed 	bl	9000c978 <tcp_receive>
      if ((flags & TCP_ACK) && ackno == pcb->snd_nxt && pcb->unsent == NULL) {
9000d59e:	f899 3000 	ldrb.w	r3, [r9]
9000d5a2:	06d8      	lsls	r0, r3, #27
9000d5a4:	f57f ae23 	bpl.w	9000d1ee <tcp_input+0x472>
9000d5a8:	4a43      	ldr	r2, [pc, #268]	@ (9000d6b8 <tcp_input+0x93c>)
9000d5aa:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000d5ac:	6812      	ldr	r2, [r2, #0]
        recv_flags |= TF_CLOSED;
9000d5ae:	7833      	ldrb	r3, [r6, #0]
      if ((flags & TCP_ACK) && ackno == pcb->snd_nxt && pcb->unsent == NULL) {
9000d5b0:	4291      	cmp	r1, r2
9000d5b2:	f47f ae1c 	bne.w	9000d1ee <tcp_input+0x472>
9000d5b6:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000d5b8:	2a00      	cmp	r2, #0
9000d5ba:	f47f ae18 	bne.w	9000d1ee <tcp_input+0x472>
        recv_flags |= TF_CLOSED;
9000d5be:	f043 0310 	orr.w	r3, r3, #16
9000d5c2:	7033      	strb	r3, [r6, #0]
    if (err != ERR_ABRT) {
9000d5c4:	e613      	b.n	9000d1ee <tcp_input+0x472>
        if (recv_acked > 0) {
9000d5c6:	f8b8 2000 	ldrh.w	r2, [r8]
9000d5ca:	b122      	cbz	r2, 9000d5d6 <tcp_input+0x85a>
            TCP_EVENT_SENT(pcb, (u16_t)acked16, err);
9000d5cc:	6fe3      	ldr	r3, [r4, #124]	@ 0x7c
9000d5ce:	b99b      	cbnz	r3, 9000d5f8 <tcp_input+0x87c>
          recv_acked = 0;
9000d5d0:	2300      	movs	r3, #0
9000d5d2:	f8a8 3000 	strh.w	r3, [r8]
        if (tcp_input_delayed_close(pcb)) {
9000d5d6:	4620      	mov	r0, r4
9000d5d8:	f7ff f978 	bl	9000c8cc <tcp_input_delayed_close>
9000d5dc:	2800      	cmp	r0, #0
9000d5de:	f47f acef 	bne.w	9000cfc0 <tcp_input+0x244>
        if (recv_data != NULL) {
9000d5e2:	f8da 2000 	ldr.w	r2, [sl]
9000d5e6:	b1da      	cbz	r2, 9000d620 <tcp_input+0x8a4>
          if (pcb->flags & TF_RXCLOSED) {
9000d5e8:	8b63      	ldrh	r3, [r4, #26]
9000d5ea:	f013 0310 	ands.w	r3, r3, #16
9000d5ee:	d009      	beq.n	9000d604 <tcp_input+0x888>
            pbuf_free(recv_data);
9000d5f0:	4610      	mov	r0, r2
9000d5f2:	f7fe f977 	bl	9000b8e4 <pbuf_free>
9000d5f6:	e6e5      	b.n	9000d3c4 <tcp_input+0x648>
            TCP_EVENT_SENT(pcb, (u16_t)acked16, err);
9000d5f8:	4621      	mov	r1, r4
9000d5fa:	6920      	ldr	r0, [r4, #16]
9000d5fc:	4798      	blx	r3
            if (err == ERR_ABRT) {
9000d5fe:	300d      	adds	r0, #13
9000d600:	d1e6      	bne.n	9000d5d0 <tcp_input+0x854>
9000d602:	e4dd      	b.n	9000cfc0 <tcp_input+0x244>
          TCP_EVENT_RECV(pcb, recv_data, ERR_OK, err);
9000d604:	f8d4 5080 	ldr.w	r5, [r4, #128]	@ 0x80
9000d608:	b305      	cbz	r5, 9000d64c <tcp_input+0x8d0>
9000d60a:	4621      	mov	r1, r4
9000d60c:	6920      	ldr	r0, [r4, #16]
9000d60e:	47a8      	blx	r5
          if (err == ERR_ABRT) {
9000d610:	f110 0f0d 	cmn.w	r0, #13
9000d614:	f43f acd4 	beq.w	9000cfc0 <tcp_input+0x244>
          if (err != ERR_OK) {
9000d618:	b110      	cbz	r0, 9000d620 <tcp_input+0x8a4>
            pcb->refused_data = recv_data;
9000d61a:	f8da 3000 	ldr.w	r3, [sl]
9000d61e:	6763      	str	r3, [r4, #116]	@ 0x74
        if (recv_flags & TF_GOT_FIN) {
9000d620:	7833      	ldrb	r3, [r6, #0]
9000d622:	069a      	lsls	r2, r3, #26
9000d624:	d505      	bpl.n	9000d632 <tcp_input+0x8b6>
          if (pcb->refused_data != NULL) {
9000d626:	6f63      	ldr	r3, [r4, #116]	@ 0x74
9000d628:	b1ab      	cbz	r3, 9000d656 <tcp_input+0x8da>
            pcb->refused_data->flags |= PBUF_FLAG_TCP_FIN;
9000d62a:	7b5a      	ldrb	r2, [r3, #13]
9000d62c:	f042 0220 	orr.w	r2, r2, #32
9000d630:	735a      	strb	r2, [r3, #13]
        tcp_input_pcb = NULL;
9000d632:	2300      	movs	r3, #0
9000d634:	4a22      	ldr	r2, [pc, #136]	@ (9000d6c0 <tcp_input+0x944>)
        if (tcp_input_delayed_close(pcb)) {
9000d636:	4620      	mov	r0, r4
        tcp_input_pcb = NULL;
9000d638:	6013      	str	r3, [r2, #0]
        if (tcp_input_delayed_close(pcb)) {
9000d63a:	f7ff f947 	bl	9000c8cc <tcp_input_delayed_close>
9000d63e:	2800      	cmp	r0, #0
9000d640:	f47f acbe 	bne.w	9000cfc0 <tcp_input+0x244>
        tcp_output(pcb);
9000d644:	4620      	mov	r0, r4
9000d646:	f000 fce5 	bl	9000e014 <tcp_output>
9000d64a:	e4b9      	b.n	9000cfc0 <tcp_input+0x244>
          TCP_EVENT_RECV(pcb, recv_data, ERR_OK, err);
9000d64c:	462b      	mov	r3, r5
9000d64e:	4621      	mov	r1, r4
9000d650:	f7fe feba 	bl	9000c3c8 <tcp_recv_null>
9000d654:	e7dc      	b.n	9000d610 <tcp_input+0x894>
            if (pcb->rcv_wnd != TCP_WND_MAX(pcb)) {
9000d656:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
9000d658:	f640 3268 	movw	r2, #2920	@ 0xb68
            TCP_EVENT_CLOSED(pcb, err);
9000d65c:	f8d4 5080 	ldr.w	r5, [r4, #128]	@ 0x80
            if (pcb->rcv_wnd != TCP_WND_MAX(pcb)) {
9000d660:	4293      	cmp	r3, r2
              pcb->rcv_wnd++;
9000d662:	bf1c      	itt	ne
9000d664:	3301      	addne	r3, #1
9000d666:	8523      	strhne	r3, [r4, #40]	@ 0x28
            TCP_EVENT_CLOSED(pcb, err);
9000d668:	2d00      	cmp	r5, #0
9000d66a:	d0e2      	beq.n	9000d632 <tcp_input+0x8b6>
9000d66c:	2300      	movs	r3, #0
9000d66e:	4621      	mov	r1, r4
9000d670:	6920      	ldr	r0, [r4, #16]
9000d672:	461a      	mov	r2, r3
9000d674:	47a8      	blx	r5
            if (err == ERR_ABRT) {
9000d676:	300d      	adds	r0, #13
9000d678:	d1db      	bne.n	9000d632 <tcp_input+0x8b6>
9000d67a:	e4a1      	b.n	9000cfc0 <tcp_input+0x244>
      if (prev != NULL) {
9000d67c:	b120      	cbz	r0, 9000d688 <tcp_input+0x90c>
        ((struct tcp_pcb_listen *)prev)->next = lpcb->next;
9000d67e:	68e2      	ldr	r2, [r4, #12]
9000d680:	60c2      	str	r2, [r0, #12]
        tcp_listen_pcbs.listen_pcbs = lpcb;
9000d682:	4a10      	ldr	r2, [pc, #64]	@ (9000d6c4 <tcp_input+0x948>)
        lpcb->next = tcp_listen_pcbs.listen_pcbs;
9000d684:	60e1      	str	r1, [r4, #12]
        tcp_listen_pcbs.listen_pcbs = lpcb;
9000d686:	6014      	str	r4, [r2, #0]
  if (flags & TCP_RST) {
9000d688:	f01c 0f04 	tst.w	ip, #4
9000d68c:	f47f ac3f 	bne.w	9000cf0e <tcp_input+0x192>
  if (flags & TCP_ACK) {
9000d690:	f01c 0710 	ands.w	r7, ip, #16
9000d694:	f43f ad23 	beq.w	9000d0de <tcp_input+0x362>
    tcp_rst((const struct tcp_pcb *)pcb, ackno, seqno + tcplen, ip_current_dest_addr(),
9000d698:	4a0b      	ldr	r2, [pc, #44]	@ (9000d6c8 <tcp_input+0x94c>)
9000d69a:	8811      	ldrh	r1, [r2, #0]
9000d69c:	8818      	ldrh	r0, [r3, #0]
9000d69e:	f8db 2000 	ldr.w	r2, [fp]
9000d6a2:	9002      	str	r0, [sp, #8]
9000d6a4:	4620      	mov	r0, r4
9000d6a6:	885b      	ldrh	r3, [r3, #2]
9000d6a8:	440a      	add	r2, r1
9000d6aa:	4903      	ldr	r1, [pc, #12]	@ (9000d6b8 <tcp_input+0x93c>)
9000d6ac:	9301      	str	r3, [sp, #4]
9000d6ae:	4b07      	ldr	r3, [pc, #28]	@ (9000d6cc <tcp_input+0x950>)
9000d6b0:	9300      	str	r3, [sp, #0]
9000d6b2:	3304      	adds	r3, #4
9000d6b4:	6809      	ldr	r1, [r1, #0]
9000d6b6:	e4e7      	b.n	9000d088 <tcp_input+0x30c>
9000d6b8:	2001a4a0 	.word	0x2001a4a0
9000d6bc:	2001a480 	.word	0x2001a480
9000d6c0:	2001a490 	.word	0x2001a490
9000d6c4:	2001a484 	.word	0x2001a484
9000d6c8:	2001a49a 	.word	0x2001a49a
9000d6cc:	20014004 	.word	0x20014004

9000d6d0 <tcp_trigger_input_pcb_close>:

void
tcp_trigger_input_pcb_close(void)
{
  recv_flags |= TF_CLOSED;
9000d6d0:	4a02      	ldr	r2, [pc, #8]	@ (9000d6dc <tcp_trigger_input_pcb_close+0xc>)
9000d6d2:	7813      	ldrb	r3, [r2, #0]
9000d6d4:	f043 0310 	orr.w	r3, r3, #16
9000d6d8:	7013      	strb	r3, [r2, #0]
}
9000d6da:	4770      	bx	lr
9000d6dc:	2001a498 	.word	0x2001a498

9000d6e0 <tcp_pbuf_prealloc>:
#if TCP_OVERSIZE
static struct pbuf *
tcp_pbuf_prealloc(pbuf_layer layer, u16_t length, u16_t max_length,
                  u16_t *oversize, const struct tcp_pcb *pcb, u8_t apiflags,
                  u8_t first_seg)
{
9000d6e0:	b570      	push	{r4, r5, r6, lr}
9000d6e2:	460c      	mov	r4, r1
9000d6e4:	461d      	mov	r5, r3
9000d6e6:	f89d 1018 	ldrb.w	r1, [sp, #24]
  LWIP_UNUSED_ARG(pcb);
  LWIP_UNUSED_ARG(apiflags);
  LWIP_UNUSED_ARG(first_seg);
  alloc = max_length;
#else /* LWIP_NETIF_TX_SINGLE_PBUF */
  if (length < max_length) {
9000d6ea:	4294      	cmp	r4, r2
{
9000d6ec:	9b04      	ldr	r3, [sp, #16]
  if (length < max_length) {
9000d6ee:	d21e      	bcs.n	9000d72e <tcp_pbuf_prealloc+0x4e>
     *
     * Did the user set TCP_WRITE_FLAG_MORE?
     *
     * Will the Nagle algorithm defer transmission of this segment?
     */
    if ((apiflags & TCP_WRITE_FLAG_MORE) ||
9000d6f0:	f89d 6014 	ldrb.w	r6, [sp, #20]
9000d6f4:	07b6      	lsls	r6, r6, #30
9000d6f6:	d407      	bmi.n	9000d708 <tcp_pbuf_prealloc+0x28>
9000d6f8:	8b5e      	ldrh	r6, [r3, #26]
9000d6fa:	0676      	lsls	r6, r6, #25
9000d6fc:	d417      	bmi.n	9000d72e <tcp_pbuf_prealloc+0x4e>
        (!(pcb->flags & TF_NODELAY) &&
9000d6fe:	b119      	cbz	r1, 9000d708 <tcp_pbuf_prealloc+0x28>
         (!first_seg ||
9000d700:	6ed9      	ldr	r1, [r3, #108]	@ 0x6c
9000d702:	b909      	cbnz	r1, 9000d708 <tcp_pbuf_prealloc+0x28>
          pcb->unsent != NULL ||
9000d704:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
9000d706:	b193      	cbz	r3, 9000d72e <tcp_pbuf_prealloc+0x4e>
          pcb->unacked != NULL))) {
      alloc = LWIP_MIN(max_length, LWIP_MEM_ALIGN_SIZE(TCP_OVERSIZE_CALC_LENGTH(length)));
9000d708:	f204 51b7 	addw	r1, r4, #1463	@ 0x5b7
9000d70c:	f021 0103 	bic.w	r1, r1, #3
9000d710:	4291      	cmp	r1, r2
9000d712:	bf28      	it	cs
9000d714:	4611      	movcs	r1, r2
9000d716:	b289      	uxth	r1, r1
    }
  }
#endif /* LWIP_NETIF_TX_SINGLE_PBUF */
  p = pbuf_alloc(layer, alloc, PBUF_RAM);
9000d718:	f44f 7220 	mov.w	r2, #640	@ 0x280
9000d71c:	f7fe f90e 	bl	9000b93c <pbuf_alloc>
  if (p == NULL) {
9000d720:	b120      	cbz	r0, 9000d72c <tcp_pbuf_prealloc+0x4c>
    return NULL;
  }
  LWIP_ASSERT("need unchained pbuf", p->next == NULL);
  *oversize = p->len - length;
9000d722:	8943      	ldrh	r3, [r0, #10]
9000d724:	1b1b      	subs	r3, r3, r4
9000d726:	802b      	strh	r3, [r5, #0]
  /* trim p->len to the currently used size */
  p->len = p->tot_len = length;
9000d728:	8104      	strh	r4, [r0, #8]
9000d72a:	8144      	strh	r4, [r0, #10]
  return p;
}
9000d72c:	bd70      	pop	{r4, r5, r6, pc}
  u16_t alloc = length;
9000d72e:	4621      	mov	r1, r4
9000d730:	e7f2      	b.n	9000d718 <tcp_pbuf_prealloc+0x38>

9000d732 <tcp_create_segment>:
{
9000d732:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000d736:	f89d a020 	ldrb.w	sl, [sp, #32]
9000d73a:	4607      	mov	r7, r0
  if ((seg = (struct tcp_seg *)memp_malloc(MEMP_TCP_SEG)) == NULL) {
9000d73c:	2003      	movs	r0, #3
{
9000d73e:	460e      	mov	r6, r1
  optlen = LWIP_TCP_OPT_LENGTH_SEGMENT(optflags, pcb);
9000d740:	ea4f 058a 	mov.w	r5, sl, lsl #2
{
9000d744:	4690      	mov	r8, r2
9000d746:	4699      	mov	r9, r3
  if ((seg = (struct tcp_seg *)memp_malloc(MEMP_TCP_SEG)) == NULL) {
9000d748:	f7fd ff06 	bl	9000b558 <memp_malloc>
  optlen = LWIP_TCP_OPT_LENGTH_SEGMENT(optflags, pcb);
9000d74c:	f005 0504 	and.w	r5, r5, #4
  if ((seg = (struct tcp_seg *)memp_malloc(MEMP_TCP_SEG)) == NULL) {
9000d750:	4604      	mov	r4, r0
9000d752:	b930      	cbnz	r0, 9000d762 <tcp_create_segment+0x30>
    pbuf_free(p);
9000d754:	4630      	mov	r0, r6
9000d756:	f7fe f8c5 	bl	9000b8e4 <pbuf_free>
    return NULL;
9000d75a:	2400      	movs	r4, #0
}
9000d75c:	4620      	mov	r0, r4
9000d75e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  seg->flags = optflags;
9000d762:	f880 a00c 	strb.w	sl, [r0, #12]
  seg->next = NULL;
9000d766:	2200      	movs	r2, #0
  seg->len = p->tot_len - optlen;
9000d768:	8933      	ldrh	r3, [r6, #8]
  if (pbuf_add_header(p, TCP_HLEN)) {
9000d76a:	2114      	movs	r1, #20
  seg->oversize_left = 0;
9000d76c:	8142      	strh	r2, [r0, #10]
  seg->len = p->tot_len - optlen;
9000d76e:	1b5b      	subs	r3, r3, r5
  seg->p = p;
9000d770:	e9c0 2600 	strd	r2, r6, [r0]
  seg->len = p->tot_len - optlen;
9000d774:	8103      	strh	r3, [r0, #8]
  if (pbuf_add_header(p, TCP_HLEN)) {
9000d776:	4630      	mov	r0, r6
9000d778:	f7fe f88c 	bl	9000b894 <pbuf_add_header>
9000d77c:	4606      	mov	r6, r0
9000d77e:	b118      	cbz	r0, 9000d788 <tcp_create_segment+0x56>
    tcp_seg_free(seg);
9000d780:	4620      	mov	r0, r4
9000d782:	f7fe fb71 	bl	9000be68 <tcp_seg_free>
    return NULL;
9000d786:	e7e8      	b.n	9000d75a <tcp_create_segment+0x28>
  seg->tcphdr = (struct tcp_hdr *)seg->p->payload;
9000d788:	6863      	ldr	r3, [r4, #4]
  TCPH_HDRLEN_FLAGS_SET(seg->tcphdr, (5 + optlen / 4), hdrflags);
9000d78a:	02ad      	lsls	r5, r5, #10
  seg->tcphdr->src = lwip_htons(pcb->local_port);
9000d78c:	8af8      	ldrh	r0, [r7, #22]
  seg->tcphdr = (struct tcp_hdr *)seg->p->payload;
9000d78e:	f8d3 a004 	ldr.w	sl, [r3, #4]
  TCPH_HDRLEN_FLAGS_SET(seg->tcphdr, (5 + optlen / 4), hdrflags);
9000d792:	f505 45a0 	add.w	r5, r5, #20480	@ 0x5000
  seg->tcphdr = (struct tcp_hdr *)seg->p->payload;
9000d796:	f8c4 a010 	str.w	sl, [r4, #16]
  seg->tcphdr->src = lwip_htons(pcb->local_port);
9000d79a:	f7fd fc8b 	bl	9000b0b4 <lwip_htons>
9000d79e:	f8aa 0000 	strh.w	r0, [sl]
  seg->tcphdr->dest = lwip_htons(pcb->remote_port);
9000d7a2:	f8d4 a010 	ldr.w	sl, [r4, #16]
9000d7a6:	8b38      	ldrh	r0, [r7, #24]
9000d7a8:	f7fd fc84 	bl	9000b0b4 <lwip_htons>
  seg->tcphdr->seqno = lwip_htonl(seqno);
9000d7ac:	6927      	ldr	r7, [r4, #16]
  seg->tcphdr->dest = lwip_htons(pcb->remote_port);
9000d7ae:	f8aa 0002 	strh.w	r0, [sl, #2]
  seg->tcphdr->seqno = lwip_htonl(seqno);
9000d7b2:	4648      	mov	r0, r9
9000d7b4:	f7fd fc81 	bl	9000b0ba <lwip_htonl>
9000d7b8:	6078      	str	r0, [r7, #4]
  TCPH_HDRLEN_FLAGS_SET(seg->tcphdr, (5 + optlen / 4), hdrflags);
9000d7ba:	ea48 0005 	orr.w	r0, r8, r5
9000d7be:	6927      	ldr	r7, [r4, #16]
9000d7c0:	f7fd fc78 	bl	9000b0b4 <lwip_htons>
  seg->tcphdr->urgp = 0;
9000d7c4:	6923      	ldr	r3, [r4, #16]
  TCPH_HDRLEN_FLAGS_SET(seg->tcphdr, (5 + optlen / 4), hdrflags);
9000d7c6:	81b8      	strh	r0, [r7, #12]
  seg->tcphdr->urgp = 0;
9000d7c8:	749e      	strb	r6, [r3, #18]
9000d7ca:	74de      	strb	r6, [r3, #19]
  return seg;
9000d7cc:	e7c6      	b.n	9000d75c <tcp_create_segment+0x2a>

9000d7ce <tcp_output_alloc_header_common.constprop.0>:
                        u16_t src_port, u16_t dst_port, u8_t flags, u16_t wnd)
{
  struct tcp_hdr *tcphdr;
  struct pbuf *p;

  p = pbuf_alloc(PBUF_IP, TCP_HLEN + optlen + datalen, PBUF_RAM);
9000d7ce:	3114      	adds	r1, #20
tcp_output_alloc_header_common(u32_t ackno, u16_t optlen, u16_t datalen,
9000d7d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  p = pbuf_alloc(PBUF_IP, TCP_HLEN + optlen + datalen, PBUF_RAM);
9000d7d4:	b289      	uxth	r1, r1
tcp_output_alloc_header_common(u32_t ackno, u16_t optlen, u16_t datalen,
9000d7d6:	4606      	mov	r6, r0
9000d7d8:	4617      	mov	r7, r2
  p = pbuf_alloc(PBUF_IP, TCP_HLEN + optlen + datalen, PBUF_RAM);
9000d7da:	2022      	movs	r0, #34	@ 0x22
9000d7dc:	f44f 7220 	mov.w	r2, #640	@ 0x280
tcp_output_alloc_header_common(u32_t ackno, u16_t optlen, u16_t datalen,
9000d7e0:	4698      	mov	r8, r3
  p = pbuf_alloc(PBUF_IP, TCP_HLEN + optlen + datalen, PBUF_RAM);
9000d7e2:	f7fe f8ab 	bl	9000b93c <pbuf_alloc>
  if (p != NULL) {
9000d7e6:	4605      	mov	r5, r0
9000d7e8:	b1f8      	cbz	r0, 9000d82a <tcp_output_alloc_header_common.constprop.0+0x5c>
    LWIP_ASSERT("check that first pbuf can hold struct tcp_hdr",
                (p->len >= TCP_HLEN + optlen));
    tcphdr = (struct tcp_hdr *)p->payload;
9000d7ea:	6844      	ldr	r4, [r0, #4]
    tcphdr->src = lwip_htons(src_port);
9000d7ec:	4640      	mov	r0, r8
9000d7ee:	f7fd fc61 	bl	9000b0b4 <lwip_htons>
9000d7f2:	8020      	strh	r0, [r4, #0]
    tcphdr->dest = lwip_htons(dst_port);
9000d7f4:	f8bd 0018 	ldrh.w	r0, [sp, #24]
9000d7f8:	f7fd fc5c 	bl	9000b0b4 <lwip_htons>
    tcphdr->seqno = seqno_be;
9000d7fc:	6067      	str	r7, [r4, #4]
    tcphdr->dest = lwip_htons(dst_port);
9000d7fe:	8060      	strh	r0, [r4, #2]
    tcphdr->ackno = lwip_htonl(ackno);
9000d800:	4630      	mov	r0, r6
9000d802:	f7fd fc5a 	bl	9000b0ba <lwip_htonl>
9000d806:	60a0      	str	r0, [r4, #8]
    TCPH_HDRLEN_FLAGS_SET(tcphdr, (5 + optlen / 4), flags);
9000d808:	f89d 001c 	ldrb.w	r0, [sp, #28]
9000d80c:	f440 40a0 	orr.w	r0, r0, #20480	@ 0x5000
9000d810:	f7fd fc50 	bl	9000b0b4 <lwip_htons>
9000d814:	81a0      	strh	r0, [r4, #12]
    tcphdr->wnd = lwip_htons(wnd);
9000d816:	f8bd 0020 	ldrh.w	r0, [sp, #32]
9000d81a:	f7fd fc4b 	bl	9000b0b4 <lwip_htons>
    tcphdr->chksum = 0;
9000d81e:	2300      	movs	r3, #0
    tcphdr->wnd = lwip_htons(wnd);
9000d820:	81e0      	strh	r0, [r4, #14]
    tcphdr->chksum = 0;
9000d822:	7423      	strb	r3, [r4, #16]
9000d824:	7463      	strb	r3, [r4, #17]
    tcphdr->urgp = 0;
9000d826:	74a3      	strb	r3, [r4, #18]
9000d828:	74e3      	strb	r3, [r4, #19]
  }
  return p;
}
9000d82a:	4628      	mov	r0, r5
9000d82c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000d830 <tcp_output_alloc_header.constprop.0>:
 * @param datalen length of tcp data to reserve in pbuf
 * @param seqno_be seqno in network byte order (big-endian)
 * @return pbuf with p->payload being the tcp_hdr
 */
static struct pbuf *
tcp_output_alloc_header(struct tcp_pcb *pcb, u16_t optlen, u16_t datalen,
9000d830:	b51f      	push	{r0, r1, r2, r3, r4, lr}
{
  struct pbuf *p;

  LWIP_ASSERT("tcp_output_alloc_header: invalid pcb", pcb != NULL);

  p = tcp_output_alloc_header_common(pcb->rcv_nxt, optlen, datalen,
9000d832:	8d43      	ldrh	r3, [r0, #42]	@ 0x2a
tcp_output_alloc_header(struct tcp_pcb *pcb, u16_t optlen, u16_t datalen,
9000d834:	4604      	mov	r4, r0
  p = tcp_output_alloc_header_common(pcb->rcv_nxt, optlen, datalen,
9000d836:	9302      	str	r3, [sp, #8]
9000d838:	2310      	movs	r3, #16
9000d83a:	9301      	str	r3, [sp, #4]
9000d83c:	8b03      	ldrh	r3, [r0, #24]
9000d83e:	9300      	str	r3, [sp, #0]
9000d840:	8ac3      	ldrh	r3, [r0, #22]
9000d842:	6a40      	ldr	r0, [r0, #36]	@ 0x24
9000d844:	f7ff ffc3 	bl	9000d7ce <tcp_output_alloc_header_common.constprop.0>
    seqno_be, pcb->local_port, pcb->remote_port, TCP_ACK,
    TCPWND_MIN16(RCV_WND_SCALE(pcb, pcb->rcv_ann_wnd)));
  if (p != NULL) {
9000d848:	b118      	cbz	r0, 9000d852 <tcp_output_alloc_header.constprop.0+0x22>
    /* If we're sending a packet, update the announced right window edge */
    pcb->rcv_ann_right_edge = pcb->rcv_nxt + pcb->rcv_ann_wnd;
9000d84a:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
9000d84c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d84e:	4413      	add	r3, r2
9000d850:	62e3      	str	r3, [r4, #44]	@ 0x2c
  }
  return p;
}
9000d852:	b004      	add	sp, #16
9000d854:	bd10      	pop	{r4, pc}

9000d856 <tcp_output_control_segment>:
 * header checksum and calling ip_output_if while handling netif hints and stats.
 */
static err_t
tcp_output_control_segment(const struct tcp_pcb *pcb, struct pbuf *p,
                           const ip_addr_t *src, const ip_addr_t *dst)
{
9000d856:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000d85a:	460d      	mov	r5, r1
9000d85c:	b085      	sub	sp, #20
9000d85e:	4690      	mov	r8, r2
9000d860:	461f      	mov	r7, r3
  if ((pcb != NULL) && (pcb->netif_idx != NETIF_NO_INDEX)) {
9000d862:	4604      	mov	r4, r0
9000d864:	b320      	cbz	r0, 9000d8b0 <tcp_output_control_segment+0x5a>
9000d866:	7a00      	ldrb	r0, [r0, #8]
9000d868:	b310      	cbz	r0, 9000d8b0 <tcp_output_control_segment+0x5a>
    return netif_get_by_index(pcb->netif_idx);
9000d86a:	f7fd ffb1 	bl	9000b7d0 <netif_get_by_index>
    return ip_route(src, dst);
9000d86e:	4606      	mov	r6, r0
  struct netif *netif;

  LWIP_ASSERT("tcp_output_control_segment: invalid pbuf", p != NULL);

  netif = tcp_route(pcb, src, dst);
  if (netif == NULL) {
9000d870:	b320      	cbz	r0, 9000d8bc <tcp_output_control_segment+0x66>
    err = ERR_RTE;
  } else {
    u8_t ttl, tos;
#if CHECKSUM_GEN_TCP
    IF__NETIF_CHECKSUM_ENABLED(netif, NETIF_CHECKSUM_GEN_TCP) {
      struct tcp_hdr *tcphdr = (struct tcp_hdr *)p->payload;
9000d872:	f8d5 9004 	ldr.w	r9, [r5, #4]
      tcphdr->chksum = ip_chksum_pseudo(p, IP_PROTO_TCP, p->tot_len,
9000d876:	4643      	mov	r3, r8
9000d878:	9700      	str	r7, [sp, #0]
9000d87a:	2106      	movs	r1, #6
9000d87c:	892a      	ldrh	r2, [r5, #8]
9000d87e:	4628      	mov	r0, r5
9000d880:	f7fd fcc8 	bl	9000b214 <ip_chksum_pseudo>
9000d884:	f8a9 0010 	strh.w	r0, [r9, #16]
                                        src, dst);
    }
#endif
    if (pcb != NULL) {
9000d888:	b1b4      	cbz	r4, 9000d8b8 <tcp_output_control_segment+0x62>
      NETIF_SET_HINTS(netif, LWIP_CONST_CAST(struct netif_hint*, &(pcb->netif_hints)));
      ttl = pcb->ttl;
9000d88a:	7ae3      	ldrb	r3, [r4, #11]
      tos = pcb->tos;
9000d88c:	7aa4      	ldrb	r4, [r4, #10]
      /* Send output with hardcoded TTL/HL since we have no access to the pcb */
      ttl = TCP_TTL;
      tos = 0;
    }
    TCP_STATS_INC(tcp.xmit);
    err = ip_output_if(p, src, dst, ttl, tos, IP_PROTO_TCP, netif);
9000d88e:	2206      	movs	r2, #6
9000d890:	4641      	mov	r1, r8
9000d892:	4628      	mov	r0, r5
9000d894:	9602      	str	r6, [sp, #8]
9000d896:	e9cd 4200 	strd	r4, r2, [sp]
9000d89a:	463a      	mov	r2, r7
9000d89c:	f7fd f8d9 	bl	9000aa52 <ip4_output_if>
9000d8a0:	4604      	mov	r4, r0
    NETIF_RESET_HINTS(netif);
  }
  pbuf_free(p);
9000d8a2:	4628      	mov	r0, r5
9000d8a4:	f7fe f81e 	bl	9000b8e4 <pbuf_free>
  return err;
}
9000d8a8:	4620      	mov	r0, r4
9000d8aa:	b005      	add	sp, #20
9000d8ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    return ip_route(src, dst);
9000d8b0:	4638      	mov	r0, r7
9000d8b2:	f7fc fef7 	bl	9000a6a4 <ip4_route>
9000d8b6:	e7da      	b.n	9000d86e <tcp_output_control_segment+0x18>
      ttl = TCP_TTL;
9000d8b8:	23ff      	movs	r3, #255	@ 0xff
9000d8ba:	e7e8      	b.n	9000d88e <tcp_output_control_segment+0x38>
    err = ERR_RTE;
9000d8bc:	f06f 0403 	mvn.w	r4, #3
9000d8c0:	e7ef      	b.n	9000d8a2 <tcp_output_control_segment+0x4c>
	...

9000d8c4 <tcp_write>:
{
9000d8c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d8c8:	b091      	sub	sp, #68	@ 0x44
  LWIP_ERROR("tcp_write: invalid pcb", pcb != NULL, return ERR_ARG);
9000d8ca:	4604      	mov	r4, r0
{
9000d8cc:	9309      	str	r3, [sp, #36]	@ 0x24
  u16_t oversize = 0;
9000d8ce:	2300      	movs	r3, #0
{
9000d8d0:	9107      	str	r1, [sp, #28]
9000d8d2:	9205      	str	r2, [sp, #20]
  u16_t oversize = 0;
9000d8d4:	f8ad 303e 	strh.w	r3, [sp, #62]	@ 0x3e
  LWIP_ERROR("tcp_write: invalid pcb", pcb != NULL, return ERR_ARG);
9000d8d8:	b938      	cbnz	r0, 9000d8ea <tcp_write+0x26>
9000d8da:	4898      	ldr	r0, [pc, #608]	@ (9000db3c <tcp_write+0x278>)
  LWIP_ERROR("tcp_write: arg == NULL (programmer violates API)",
9000d8dc:	f01a ff5e 	bl	9002879c <iprintf>
  LWIP_ERROR("tcp_write: invalid pcb", pcb != NULL, return ERR_ARG);
9000d8e0:	f06f 000f 	mvn.w	r0, #15
}
9000d8e4:	b011      	add	sp, #68	@ 0x44
9000d8e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  mss_local = LWIP_MIN(pcb->mss, TCPWND_MIN16(pcb->snd_wnd_max / 2));
9000d8ea:	8e43      	ldrh	r3, [r0, #50]	@ 0x32
9000d8ec:	9308      	str	r3, [sp, #32]
9000d8ee:	f8b0 3062 	ldrh.w	r3, [r0, #98]	@ 0x62
9000d8f2:	9a08      	ldr	r2, [sp, #32]
9000d8f4:	085b      	lsrs	r3, r3, #1
9000d8f6:	4293      	cmp	r3, r2
9000d8f8:	bf28      	it	cs
9000d8fa:	4613      	movcs	r3, r2
  mss_local = mss_local ? mss_local : pcb->mss;
9000d8fc:	2b00      	cmp	r3, #0
9000d8fe:	bf18      	it	ne
9000d900:	461a      	movne	r2, r3
  LWIP_ERROR("tcp_write: arg == NULL (programmer violates API)",
9000d902:	9b07      	ldr	r3, [sp, #28]
  mss_local = mss_local ? mss_local : pcb->mss;
9000d904:	9208      	str	r2, [sp, #32]
  LWIP_ERROR("tcp_write: arg == NULL (programmer violates API)",
9000d906:	b90b      	cbnz	r3, 9000d90c <tcp_write+0x48>
9000d908:	488d      	ldr	r0, [pc, #564]	@ (9000db40 <tcp_write+0x27c>)
9000d90a:	e7e7      	b.n	9000d8dc <tcp_write+0x18>
  if ((pcb->state != ESTABLISHED) &&
9000d90c:	7d03      	ldrb	r3, [r0, #20]
9000d90e:	1e9a      	subs	r2, r3, #2
9000d910:	2a02      	cmp	r2, #2
9000d912:	d902      	bls.n	9000d91a <tcp_write+0x56>
9000d914:	2b07      	cmp	r3, #7
9000d916:	f040 81a8 	bne.w	9000dc6a <tcp_write+0x3a6>
  } else if (len == 0) {
9000d91a:	9b05      	ldr	r3, [sp, #20]
9000d91c:	b17b      	cbz	r3, 9000d93e <tcp_write+0x7a>
  if (len > pcb->snd_buf) {
9000d91e:	f8b4 3064 	ldrh.w	r3, [r4, #100]	@ 0x64
9000d922:	9a05      	ldr	r2, [sp, #20]
9000d924:	4293      	cmp	r3, r2
9000d926:	d206      	bcs.n	9000d936 <tcp_write+0x72>
    tcp_set_flags(pcb, TF_NAGLEMEMERR);
9000d928:	8b63      	ldrh	r3, [r4, #26]
9000d92a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000d92e:	8363      	strh	r3, [r4, #26]
  return ERR_MEM;
9000d930:	f04f 30ff 	mov.w	r0, #4294967295
9000d934:	e7d6      	b.n	9000d8e4 <tcp_write+0x20>
  if (pcb->snd_queuelen >= LWIP_MIN(TCP_SND_QUEUELEN, (TCP_SNDQUEUELEN_OVERFLOW + 1))) {
9000d936:	f8b4 3066 	ldrh.w	r3, [r4, #102]	@ 0x66
9000d93a:	2b07      	cmp	r3, #7
9000d93c:	d8f4      	bhi.n	9000d928 <tcp_write+0x64>
  queuelen = pcb->snd_queuelen;
9000d93e:	f8b4 3066 	ldrh.w	r3, [r4, #102]	@ 0x66
  if (pcb->unsent != NULL) {
9000d942:	f8d4 a06c 	ldr.w	sl, [r4, #108]	@ 0x6c
  queuelen = pcb->snd_queuelen;
9000d946:	9306      	str	r3, [sp, #24]
  if (pcb->unsent != NULL) {
9000d948:	f1ba 0f00 	cmp.w	sl, #0
9000d94c:	d109      	bne.n	9000d962 <tcp_write+0x9e>
  struct tcp_seg *last_unsent = NULL, *seg = NULL, *prev_seg = NULL, *queue = NULL;
9000d94e:	4657      	mov	r7, sl
  u16_t extendlen = 0;
9000d950:	46d0      	mov	r8, sl
  u16_t oversize_add = 0;
9000d952:	4655      	mov	r5, sl
  u16_t oversize_used = 0;
9000d954:	4656      	mov	r6, sl
  u16_t pos = 0; /* position in 'arg' data */
9000d956:	46d1      	mov	r9, sl
  struct pbuf *concat_p = NULL;
9000d958:	f8cd a010 	str.w	sl, [sp, #16]
9000d95c:	e060      	b.n	9000da20 <tcp_write+0x15c>
         last_unsent = last_unsent->next);
9000d95e:	f8dd a010 	ldr.w	sl, [sp, #16]
    for (last_unsent = pcb->unsent; last_unsent->next != NULL;
9000d962:	f8da 3000 	ldr.w	r3, [sl]
9000d966:	4657      	mov	r7, sl
9000d968:	9304      	str	r3, [sp, #16]
9000d96a:	2b00      	cmp	r3, #0
9000d96c:	d1f7      	bne.n	9000d95e <tcp_write+0x9a>
    space = mss_local - (last_unsent->len + unsent_optlen);
9000d96e:	9b08      	ldr	r3, [sp, #32]
9000d970:	f8ba 8008 	ldrh.w	r8, [sl, #8]
    oversize = pcb->unsent_oversize;
9000d974:	f8b4 6068 	ldrh.w	r6, [r4, #104]	@ 0x68
    space = mss_local - (last_unsent->len + unsent_optlen);
9000d978:	eba3 0508 	sub.w	r5, r3, r8
    unsent_optlen = LWIP_TCP_OPT_LENGTH_SEGMENT(last_unsent->flags, pcb);
9000d97c:	f89a 300c 	ldrb.w	r3, [sl, #12]
9000d980:	009b      	lsls	r3, r3, #2
9000d982:	f003 0304 	and.w	r3, r3, #4
    space = mss_local - (last_unsent->len + unsent_optlen);
9000d986:	1aed      	subs	r5, r5, r3
9000d988:	b2ad      	uxth	r5, r5
    if (oversize > 0) {
9000d98a:	2e00      	cmp	r6, #0
9000d98c:	d051      	beq.n	9000da32 <tcp_write+0x16e>
      oversize_used = LWIP_MIN(space, LWIP_MIN(oversize, len));
9000d98e:	9b05      	ldr	r3, [sp, #20]
9000d990:	42b3      	cmp	r3, r6
9000d992:	bf28      	it	cs
9000d994:	4633      	movcs	r3, r6
9000d996:	42ab      	cmp	r3, r5
9000d998:	bf28      	it	cs
9000d99a:	462b      	movcs	r3, r5
      oversize -= oversize_used;
9000d99c:	1af6      	subs	r6, r6, r3
      space -= oversize_used;
9000d99e:	1aed      	subs	r5, r5, r3
      oversize -= oversize_used;
9000d9a0:	f8ad 603e 	strh.w	r6, [sp, #62]	@ 0x3e
      space -= oversize_used;
9000d9a4:	b2ad      	uxth	r5, r5
      pos += oversize_used;
9000d9a6:	461e      	mov	r6, r3
    if ((pos < len) && (space > 0) && (last_unsent->len > 0)) {
9000d9a8:	9b05      	ldr	r3, [sp, #20]
9000d9aa:	429e      	cmp	r6, r3
9000d9ac:	f080 810d 	bcs.w	9000dbca <tcp_write+0x306>
9000d9b0:	2d00      	cmp	r5, #0
9000d9b2:	f000 8105 	beq.w	9000dbc0 <tcp_write+0x2fc>
9000d9b6:	f1b8 0f00 	cmp.w	r8, #0
9000d9ba:	f000 8104 	beq.w	9000dbc6 <tcp_write+0x302>
      u16_t seglen = LWIP_MIN(space, len - pos);
9000d9be:	eba3 0806 	sub.w	r8, r3, r6
      if (apiflags & TCP_WRITE_FLAG_COPY) {
9000d9c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
      u16_t seglen = LWIP_MIN(space, len - pos);
9000d9c4:	45a8      	cmp	r8, r5
9000d9c6:	bfa8      	it	ge
9000d9c8:	46a8      	movge	r8, r5
      if (apiflags & TCP_WRITE_FLAG_COPY) {
9000d9ca:	07d9      	lsls	r1, r3, #31
      u16_t seglen = LWIP_MIN(space, len - pos);
9000d9cc:	fa1f f988 	uxth.w	r9, r8
      if (apiflags & TCP_WRITE_FLAG_COPY) {
9000d9d0:	d531      	bpl.n	9000da36 <tcp_write+0x172>
        if ((concat_p = tcp_pbuf_prealloc(PBUF_RAW, seglen, space, &oversize, pcb, apiflags, 1)) == NULL) {
9000d9d2:	2301      	movs	r3, #1
9000d9d4:	462a      	mov	r2, r5
9000d9d6:	4649      	mov	r1, r9
9000d9d8:	2000      	movs	r0, #0
9000d9da:	9302      	str	r3, [sp, #8]
9000d9dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9000d9de:	e9cd 4300 	strd	r4, r3, [sp]
9000d9e2:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
9000d9e6:	f7ff fe7b 	bl	9000d6e0 <tcp_pbuf_prealloc>
9000d9ea:	4683      	mov	fp, r0
9000d9ec:	2800      	cmp	r0, #0
9000d9ee:	f000 8139 	beq.w	9000dc64 <tcp_write+0x3a0>
        TCP_DATA_COPY2(concat_p->payload, (const u8_t *)arg + pos, seglen, &concat_chksum, &concat_chksum_swapped);
9000d9f2:	9b07      	ldr	r3, [sp, #28]
9000d9f4:	464a      	mov	r2, r9
9000d9f6:	6840      	ldr	r0, [r0, #4]
  u16_t extendlen = 0;
9000d9f8:	f04f 0800 	mov.w	r8, #0
        TCP_DATA_COPY2(concat_p->payload, (const u8_t *)arg + pos, seglen, &concat_chksum, &concat_chksum_swapped);
9000d9fc:	1999      	adds	r1, r3, r6
        oversize_add = oversize;
9000d9fe:	f8bd 503e 	ldrh.w	r5, [sp, #62]	@ 0x3e
        TCP_DATA_COPY2(concat_p->payload, (const u8_t *)arg + pos, seglen, &concat_chksum, &concat_chksum_swapped);
9000da02:	f01b f826 	bl	90028a52 <memcpy>
        queuelen += pbuf_clen(concat_p);
9000da06:	4658      	mov	r0, fp
9000da08:	f7fe f82e 	bl	9000ba68 <pbuf_clen>
9000da0c:	9b06      	ldr	r3, [sp, #24]
9000da0e:	4403      	add	r3, r0
9000da10:	b29b      	uxth	r3, r3
9000da12:	9306      	str	r3, [sp, #24]
      pos += seglen;
9000da14:	44b1      	add	r9, r6
      seg = last_unsent;
9000da16:	46ba      	mov	sl, r7
      pos += seglen;
9000da18:	f8cd b010 	str.w	fp, [sp, #16]
9000da1c:	fa1f f989 	uxth.w	r9, r9
    if (apiflags & TCP_WRITE_FLAG_COPY) {
9000da20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9000da22:	f04f 0b00 	mov.w	fp, #0
9000da26:	f003 0301 	and.w	r3, r3, #1
9000da2a:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
9000da2e:	930c      	str	r3, [sp, #48]	@ 0x30
9000da30:	e0a1      	b.n	9000db76 <tcp_write+0x2b2>
  struct tcp_seg *last_unsent = NULL, *seg = NULL, *prev_seg = NULL, *queue = NULL;
9000da32:	46b2      	mov	sl, r6
9000da34:	e7b8      	b.n	9000d9a8 <tcp_write+0xe4>
        for (p = last_unsent->p; p->next != NULL; p = p->next);
9000da36:	f8d7 b004 	ldr.w	fp, [r7, #4]
9000da3a:	465b      	mov	r3, fp
9000da3c:	f8db b000 	ldr.w	fp, [fp]
9000da40:	f1bb 0f00 	cmp.w	fp, #0
9000da44:	d1f9      	bne.n	9000da3a <tcp_write+0x176>
        if (((p->type_internal & (PBUF_TYPE_FLAG_STRUCT_DATA_CONTIGUOUS | PBUF_TYPE_FLAG_DATA_VOLATILE)) == 0) &&
9000da46:	7b1a      	ldrb	r2, [r3, #12]
9000da48:	2a3f      	cmp	r2, #63	@ 0x3f
9000da4a:	d805      	bhi.n	9000da58 <tcp_write+0x194>
            (const u8_t *)p->payload + p->len == (const u8_t *)arg) {
9000da4c:	895a      	ldrh	r2, [r3, #10]
9000da4e:	685b      	ldr	r3, [r3, #4]
9000da50:	4413      	add	r3, r2
        if (((p->type_internal & (PBUF_TYPE_FLAG_STRUCT_DATA_CONTIGUOUS | PBUF_TYPE_FLAG_DATA_VOLATILE)) == 0) &&
9000da52:	9a07      	ldr	r2, [sp, #28]
9000da54:	429a      	cmp	r2, r3
9000da56:	d015      	beq.n	9000da84 <tcp_write+0x1c0>
          if ((concat_p = pbuf_alloc(PBUF_RAW, seglen, PBUF_ROM)) == NULL) {
9000da58:	2201      	movs	r2, #1
9000da5a:	4649      	mov	r1, r9
9000da5c:	2000      	movs	r0, #0
9000da5e:	f7fd ff6d 	bl	9000b93c <pbuf_alloc>
9000da62:	4683      	mov	fp, r0
9000da64:	2800      	cmp	r0, #0
9000da66:	f000 80fd 	beq.w	9000dc64 <tcp_write+0x3a0>
          ((struct pbuf_rom *)concat_p)->payload = (const u8_t *)arg + pos;
9000da6a:	9b07      	ldr	r3, [sp, #28]
  u16_t extendlen = 0;
9000da6c:	f04f 0800 	mov.w	r8, #0
          ((struct pbuf_rom *)concat_p)->payload = (const u8_t *)arg + pos;
9000da70:	4433      	add	r3, r6
  u16_t oversize_add = 0;
9000da72:	4645      	mov	r5, r8
          ((struct pbuf_rom *)concat_p)->payload = (const u8_t *)arg + pos;
9000da74:	6043      	str	r3, [r0, #4]
          queuelen += pbuf_clen(concat_p);
9000da76:	f7fd fff7 	bl	9000ba68 <pbuf_clen>
9000da7a:	9b06      	ldr	r3, [sp, #24]
9000da7c:	4403      	add	r3, r0
9000da7e:	b29b      	uxth	r3, r3
9000da80:	9306      	str	r3, [sp, #24]
9000da82:	e7c7      	b.n	9000da14 <tcp_write+0x150>
          extendlen = seglen;
9000da84:	46c8      	mov	r8, r9
  u16_t oversize_add = 0;
9000da86:	465d      	mov	r5, fp
9000da88:	e7c4      	b.n	9000da14 <tcp_write+0x150>
    u16_t left = len - pos;
9000da8a:	9b05      	ldr	r3, [sp, #20]
    u16_t seglen = LWIP_MIN(left, max_len);
9000da8c:	9a08      	ldr	r2, [sp, #32]
    u16_t left = len - pos;
9000da8e:	eba3 0309 	sub.w	r3, r3, r9
    u16_t seglen = LWIP_MIN(left, max_len);
9000da92:	b29b      	uxth	r3, r3
9000da94:	4293      	cmp	r3, r2
9000da96:	bf28      	it	cs
9000da98:	4613      	movcs	r3, r2
9000da9a:	b29b      	uxth	r3, r3
9000da9c:	930a      	str	r3, [sp, #40]	@ 0x28
    if (apiflags & TCP_WRITE_FLAG_COPY) {
9000da9e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9000daa0:	b303      	cbz	r3, 9000dae4 <tcp_write+0x220>
      if ((p = tcp_pbuf_prealloc(PBUF_TRANSPORT, seglen + optlen, mss_local, &oversize, pcb, apiflags, queue == NULL)) == NULL) {
9000daa2:	fabb f38b 	clz	r3, fp
9000daa6:	990a      	ldr	r1, [sp, #40]	@ 0x28
9000daa8:	2036      	movs	r0, #54	@ 0x36
9000daaa:	095b      	lsrs	r3, r3, #5
9000daac:	9302      	str	r3, [sp, #8]
9000daae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9000dab0:	e9cd 4300 	strd	r4, r3, [sp]
9000dab4:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
9000dab8:	f7ff fe12 	bl	9000d6e0 <tcp_pbuf_prealloc>
9000dabc:	4682      	mov	sl, r0
9000dabe:	b338      	cbz	r0, 9000db10 <tcp_write+0x24c>
      TCP_DATA_COPY2((char *)p->payload + optlen, (const u8_t *)arg + pos, seglen, &chksum, &chksum_swapped);
9000dac0:	9b07      	ldr	r3, [sp, #28]
9000dac2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9000dac4:	eb03 0109 	add.w	r1, r3, r9
9000dac8:	6840      	ldr	r0, [r0, #4]
9000daca:	f01a ffc2 	bl	90028a52 <memcpy>
    queuelen += pbuf_clen(p);
9000dace:	4650      	mov	r0, sl
9000dad0:	f7fd ffca 	bl	9000ba68 <pbuf_clen>
9000dad4:	9b06      	ldr	r3, [sp, #24]
9000dad6:	4403      	add	r3, r0
9000dad8:	b29b      	uxth	r3, r3
    if (queuelen > LWIP_MIN(TCP_SND_QUEUELEN, TCP_SNDQUEUELEN_OVERFLOW)) {
9000dada:	2b08      	cmp	r3, #8
    queuelen += pbuf_clen(p);
9000dadc:	9306      	str	r3, [sp, #24]
    if (queuelen > LWIP_MIN(TCP_SND_QUEUELEN, TCP_SNDQUEUELEN_OVERFLOW)) {
9000dade:	d931      	bls.n	9000db44 <tcp_write+0x280>
      pbuf_free(p);
9000dae0:	4650      	mov	r0, sl
9000dae2:	e013      	b.n	9000db0c <tcp_write+0x248>
      if ((p2 = pbuf_alloc(PBUF_TRANSPORT, seglen, PBUF_ROM)) == NULL) {
9000dae4:	2201      	movs	r2, #1
9000dae6:	990a      	ldr	r1, [sp, #40]	@ 0x28
9000dae8:	2036      	movs	r0, #54	@ 0x36
9000daea:	f7fd ff27 	bl	9000b93c <pbuf_alloc>
9000daee:	b178      	cbz	r0, 9000db10 <tcp_write+0x24c>
      ((struct pbuf_rom *)p2)->payload = (const u8_t *)arg + pos;
9000daf0:	9a07      	ldr	r2, [sp, #28]
9000daf2:	900d      	str	r0, [sp, #52]	@ 0x34
9000daf4:	444a      	add	r2, r9
      if ((p = pbuf_alloc(PBUF_TRANSPORT, optlen, PBUF_RAM)) == NULL) {
9000daf6:	990c      	ldr	r1, [sp, #48]	@ 0x30
      ((struct pbuf_rom *)p2)->payload = (const u8_t *)arg + pos;
9000daf8:	6042      	str	r2, [r0, #4]
      if ((p = pbuf_alloc(PBUF_TRANSPORT, optlen, PBUF_RAM)) == NULL) {
9000dafa:	f44f 7220 	mov.w	r2, #640	@ 0x280
9000dafe:	2036      	movs	r0, #54	@ 0x36
9000db00:	f7fd ff1c 	bl	9000b93c <pbuf_alloc>
9000db04:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9000db06:	4682      	mov	sl, r0
9000db08:	b998      	cbnz	r0, 9000db32 <tcp_write+0x26e>
        pbuf_free(p2);
9000db0a:	4618      	mov	r0, r3
      pbuf_free(p);
9000db0c:	f7fd feea 	bl	9000b8e4 <pbuf_free>
  tcp_set_flags(pcb, TF_NAGLEMEMERR);
9000db10:	8b63      	ldrh	r3, [r4, #26]
9000db12:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000db16:	8363      	strh	r3, [r4, #26]
  if (concat_p != NULL) {
9000db18:	9b04      	ldr	r3, [sp, #16]
9000db1a:	b113      	cbz	r3, 9000db22 <tcp_write+0x25e>
    pbuf_free(concat_p);
9000db1c:	4618      	mov	r0, r3
9000db1e:	f7fd fee1 	bl	9000b8e4 <pbuf_free>
  if (queue != NULL) {
9000db22:	f1bb 0f00 	cmp.w	fp, #0
9000db26:	f43f af03 	beq.w	9000d930 <tcp_write+0x6c>
    tcp_segs_free(queue);
9000db2a:	4658      	mov	r0, fp
9000db2c:	f7fe f9aa 	bl	9000be84 <tcp_segs_free>
9000db30:	e6fe      	b.n	9000d930 <tcp_write+0x6c>
      pbuf_cat(p/*header*/, p2/*data*/);
9000db32:	4619      	mov	r1, r3
9000db34:	f7fd ffa6 	bl	9000ba84 <pbuf_cat>
9000db38:	e7c9      	b.n	9000dace <tcp_write+0x20a>
9000db3a:	bf00      	nop
9000db3c:	9002a468 	.word	0x9002a468
9000db40:	9002a47f 	.word	0x9002a47f
    if ((seg = tcp_create_segment(pcb, p, 0, pcb->snd_lbb + pos, optflags)) == NULL) {
9000db44:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
9000db46:	2200      	movs	r2, #0
9000db48:	4651      	mov	r1, sl
9000db4a:	4620      	mov	r0, r4
9000db4c:	444b      	add	r3, r9
9000db4e:	9200      	str	r2, [sp, #0]
9000db50:	f7ff fdef 	bl	9000d732 <tcp_create_segment>
9000db54:	4682      	mov	sl, r0
9000db56:	2800      	cmp	r0, #0
9000db58:	d0da      	beq.n	9000db10 <tcp_write+0x24c>
    seg->oversize_left = oversize;
9000db5a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	@ 0x3e
9000db5e:	8143      	strh	r3, [r0, #10]
    if (queue == NULL) {
9000db60:	f1bb 0f00 	cmp.w	fp, #0
9000db64:	d02a      	beq.n	9000dbbc <tcp_write+0x2f8>
      prev_seg->next = seg;
9000db66:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9000db68:	6018      	str	r0, [r3, #0]
    pos += seglen;
9000db6a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
    prev_seg = seg;
9000db6c:	f8cd a02c 	str.w	sl, [sp, #44]	@ 0x2c
    pos += seglen;
9000db70:	444b      	add	r3, r9
9000db72:	fa1f f983 	uxth.w	r9, r3
  while (pos < len) {
9000db76:	9b05      	ldr	r3, [sp, #20]
9000db78:	4599      	cmp	r9, r3
9000db7a:	d386      	bcc.n	9000da8a <tcp_write+0x1c6>
  if ((last_unsent != NULL) && (oversize_add != 0)) {
9000db7c:	b11f      	cbz	r7, 9000db86 <tcp_write+0x2c2>
9000db7e:	b115      	cbz	r5, 9000db86 <tcp_write+0x2c2>
    last_unsent->oversize_left += oversize_add;
9000db80:	897b      	ldrh	r3, [r7, #10]
9000db82:	441d      	add	r5, r3
9000db84:	817d      	strh	r5, [r7, #10]
  if (oversize_used > 0) {
9000db86:	b13e      	cbz	r6, 9000db98 <tcp_write+0x2d4>
    for (p = last_unsent->p; p; p = p->next) {
9000db88:	687d      	ldr	r5, [r7, #4]
9000db8a:	bb15      	cbnz	r5, 9000dbd2 <tcp_write+0x30e>
    last_unsent->len += oversize_used;
9000db8c:	893b      	ldrh	r3, [r7, #8]
9000db8e:	4433      	add	r3, r6
9000db90:	813b      	strh	r3, [r7, #8]
    last_unsent->oversize_left -= oversize_used;
9000db92:	897b      	ldrh	r3, [r7, #10]
9000db94:	1b9b      	subs	r3, r3, r6
9000db96:	817b      	strh	r3, [r7, #10]
  pcb->unsent_oversize = oversize;
9000db98:	f8bd 303e 	ldrh.w	r3, [sp, #62]	@ 0x3e
9000db9c:	f8a4 3068 	strh.w	r3, [r4, #104]	@ 0x68
  if (concat_p != NULL) {
9000dba0:	9b04      	ldr	r3, [sp, #16]
9000dba2:	b33b      	cbz	r3, 9000dbf4 <tcp_write+0x330>
    pbuf_cat(last_unsent->p, concat_p);
9000dba4:	4619      	mov	r1, r3
9000dba6:	6878      	ldr	r0, [r7, #4]
9000dba8:	f7fd ff6c 	bl	9000ba84 <pbuf_cat>
    last_unsent->len += concat_p->tot_len;
9000dbac:	9a04      	ldr	r2, [sp, #16]
9000dbae:	893b      	ldrh	r3, [r7, #8]
9000dbb0:	8912      	ldrh	r2, [r2, #8]
9000dbb2:	4413      	add	r3, r2
9000dbb4:	813b      	strh	r3, [r7, #8]
    last_unsent->next = queue;
9000dbb6:	f8c7 b000 	str.w	fp, [r7]
9000dbba:	e033      	b.n	9000dc24 <tcp_write+0x360>
      queue = seg;
9000dbbc:	4683      	mov	fp, r0
9000dbbe:	e7d4      	b.n	9000db6a <tcp_write+0x2a6>
  u16_t extendlen = 0;
9000dbc0:	46a8      	mov	r8, r5
9000dbc2:	46b1      	mov	r9, r6
9000dbc4:	e72c      	b.n	9000da20 <tcp_write+0x15c>
  u16_t oversize_add = 0;
9000dbc6:	4645      	mov	r5, r8
9000dbc8:	e7fb      	b.n	9000dbc2 <tcp_write+0x2fe>
9000dbca:	f04f 0800 	mov.w	r8, #0
  u16_t extendlen = 0;
9000dbce:	46c3      	mov	fp, r8
9000dbd0:	e7d9      	b.n	9000db86 <tcp_write+0x2c2>
      p->tot_len += oversize_used;
9000dbd2:	892b      	ldrh	r3, [r5, #8]
9000dbd4:	4433      	add	r3, r6
9000dbd6:	812b      	strh	r3, [r5, #8]
      if (p->next == NULL) {
9000dbd8:	682b      	ldr	r3, [r5, #0]
9000dbda:	b94b      	cbnz	r3, 9000dbf0 <tcp_write+0x32c>
        TCP_DATA_COPY((char *)p->payload + p->len, arg, oversize_used, last_unsent);
9000dbdc:	686b      	ldr	r3, [r5, #4]
9000dbde:	4632      	mov	r2, r6
9000dbe0:	8968      	ldrh	r0, [r5, #10]
9000dbe2:	9907      	ldr	r1, [sp, #28]
9000dbe4:	4418      	add	r0, r3
9000dbe6:	f01a ff34 	bl	90028a52 <memcpy>
        p->len += oversize_used;
9000dbea:	896b      	ldrh	r3, [r5, #10]
9000dbec:	4433      	add	r3, r6
9000dbee:	816b      	strh	r3, [r5, #10]
    for (p = last_unsent->p; p; p = p->next) {
9000dbf0:	682d      	ldr	r5, [r5, #0]
9000dbf2:	e7ca      	b.n	9000db8a <tcp_write+0x2c6>
  } else if (extendlen > 0) {
9000dbf4:	f1b8 0f00 	cmp.w	r8, #0
9000dbf8:	d010      	beq.n	9000dc1c <tcp_write+0x358>
    for (p = last_unsent->p; p->next != NULL; p = p->next) {
9000dbfa:	687b      	ldr	r3, [r7, #4]
      p->tot_len += extendlen;
9000dbfc:	891a      	ldrh	r2, [r3, #8]
    for (p = last_unsent->p; p->next != NULL; p = p->next) {
9000dbfe:	6819      	ldr	r1, [r3, #0]
      p->tot_len += extendlen;
9000dc00:	4442      	add	r2, r8
9000dc02:	b292      	uxth	r2, r2
9000dc04:	811a      	strh	r2, [r3, #8]
    for (p = last_unsent->p; p->next != NULL; p = p->next) {
9000dc06:	b939      	cbnz	r1, 9000dc18 <tcp_write+0x354>
    p->len += extendlen;
9000dc08:	895a      	ldrh	r2, [r3, #10]
9000dc0a:	4442      	add	r2, r8
9000dc0c:	815a      	strh	r2, [r3, #10]
    last_unsent->len += extendlen;
9000dc0e:	893b      	ldrh	r3, [r7, #8]
9000dc10:	4498      	add	r8, r3
9000dc12:	f8a7 8008 	strh.w	r8, [r7, #8]
  if (last_unsent == NULL) {
9000dc16:	e7ce      	b.n	9000dbb6 <tcp_write+0x2f2>
    for (p = last_unsent->p; p->next != NULL; p = p->next) {
9000dc18:	460b      	mov	r3, r1
9000dc1a:	e7ef      	b.n	9000dbfc <tcp_write+0x338>
  if (last_unsent == NULL) {
9000dc1c:	2f00      	cmp	r7, #0
9000dc1e:	d1ca      	bne.n	9000dbb6 <tcp_write+0x2f2>
    pcb->unsent = queue;
9000dc20:	f8c4 b06c 	str.w	fp, [r4, #108]	@ 0x6c
  pcb->snd_lbb += len;
9000dc24:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
9000dc26:	9a05      	ldr	r2, [sp, #20]
9000dc28:	4413      	add	r3, r2
9000dc2a:	65e3      	str	r3, [r4, #92]	@ 0x5c
  pcb->snd_buf -= len;
9000dc2c:	f8b4 3064 	ldrh.w	r3, [r4, #100]	@ 0x64
9000dc30:	1a9b      	subs	r3, r3, r2
9000dc32:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
  pcb->snd_queuelen = queuelen;
9000dc36:	9b06      	ldr	r3, [sp, #24]
9000dc38:	f8a4 3066 	strh.w	r3, [r4, #102]	@ 0x66
  if (seg != NULL && seg->tcphdr != NULL && ((apiflags & TCP_WRITE_FLAG_MORE) == 0)) {
9000dc3c:	f1ba 0f00 	cmp.w	sl, #0
9000dc40:	d002      	beq.n	9000dc48 <tcp_write+0x384>
9000dc42:	f8da 3010 	ldr.w	r3, [sl, #16]
9000dc46:	b90b      	cbnz	r3, 9000dc4c <tcp_write+0x388>
  return ERR_OK;
9000dc48:	2000      	movs	r0, #0
9000dc4a:	e64b      	b.n	9000d8e4 <tcp_write+0x20>
  if (seg != NULL && seg->tcphdr != NULL && ((apiflags & TCP_WRITE_FLAG_MORE) == 0)) {
9000dc4c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9000dc4e:	0792      	lsls	r2, r2, #30
9000dc50:	d4fa      	bmi.n	9000dc48 <tcp_write+0x384>
    TCPH_SET_FLAG(seg->tcphdr, TCP_PSH);
9000dc52:	899c      	ldrh	r4, [r3, #12]
9000dc54:	2008      	movs	r0, #8
9000dc56:	f7fd fa2d 	bl	9000b0b4 <lwip_htons>
9000dc5a:	f8da 3010 	ldr.w	r3, [sl, #16]
9000dc5e:	4304      	orrs	r4, r0
9000dc60:	819c      	strh	r4, [r3, #12]
9000dc62:	e7f1      	b.n	9000dc48 <tcp_write+0x384>
  struct tcp_seg *last_unsent = NULL, *seg = NULL, *prev_seg = NULL, *queue = NULL;
9000dc64:	f04f 0b00 	mov.w	fp, #0
9000dc68:	e752      	b.n	9000db10 <tcp_write+0x24c>
    return err;
9000dc6a:	f06f 000a 	mvn.w	r0, #10
9000dc6e:	e639      	b.n	9000d8e4 <tcp_write+0x20>

9000dc70 <tcp_split_unsent_seg>:
{
9000dc70:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  useg = pcb->unsent;
9000dc74:	6ec4      	ldr	r4, [r0, #108]	@ 0x6c
{
9000dc76:	4606      	mov	r6, r0
9000dc78:	460d      	mov	r5, r1
  if (useg == NULL) {
9000dc7a:	2c00      	cmp	r4, #0
9000dc7c:	f000 8092 	beq.w	9000dda4 <tcp_split_unsent_seg+0x134>
  if (split == 0) {
9000dc80:	2900      	cmp	r1, #0
9000dc82:	f000 8092 	beq.w	9000ddaa <tcp_split_unsent_seg+0x13a>
  if (useg->len <= split) {
9000dc86:	f8b4 a008 	ldrh.w	sl, [r4, #8]
9000dc8a:	458a      	cmp	sl, r1
9000dc8c:	f240 8083 	bls.w	9000dd96 <tcp_split_unsent_seg+0x126>
  optflags = useg->flags;
9000dc90:	f894 b00c 	ldrb.w	fp, [r4, #12]
  remainder = useg->len - split;
9000dc94:	ebaa 0101 	sub.w	r1, sl, r1
  p = pbuf_alloc(PBUF_TRANSPORT, remainder + optlen, PBUF_RAM);
9000dc98:	f44f 7220 	mov.w	r2, #640	@ 0x280
9000dc9c:	2036      	movs	r0, #54	@ 0x36
  optlen = LWIP_TCP_OPT_LENGTH(optflags);
9000dc9e:	ea4f 078b 	mov.w	r7, fp, lsl #2
  remainder = useg->len - split;
9000dca2:	fa1f f881 	uxth.w	r8, r1
  optlen = LWIP_TCP_OPT_LENGTH(optflags);
9000dca6:	f007 0704 	and.w	r7, r7, #4
  p = pbuf_alloc(PBUF_TRANSPORT, remainder + optlen, PBUF_RAM);
9000dcaa:	fa17 f181 	uxtah	r1, r7, r1
9000dcae:	b289      	uxth	r1, r1
9000dcb0:	f7fd fe44 	bl	9000b93c <pbuf_alloc>
  if (p == NULL) {
9000dcb4:	4681      	mov	r9, r0
9000dcb6:	2800      	cmp	r0, #0
9000dcb8:	d074      	beq.n	9000dda4 <tcp_split_unsent_seg+0x134>
  offset = useg->p->tot_len - useg->len + split;
9000dcba:	6860      	ldr	r0, [r4, #4]
9000dcbc:	8922      	ldrh	r2, [r4, #8]
9000dcbe:	8903      	ldrh	r3, [r0, #8]
  if (pbuf_copy_partial(useg->p, (u8_t *)p->payload + optlen, remainder, offset ) != remainder) {
9000dcc0:	f8d9 1004 	ldr.w	r1, [r9, #4]
  offset = useg->p->tot_len - useg->len + split;
9000dcc4:	1a9b      	subs	r3, r3, r2
  if (pbuf_copy_partial(useg->p, (u8_t *)p->payload + optlen, remainder, offset ) != remainder) {
9000dcc6:	4642      	mov	r2, r8
9000dcc8:	4439      	add	r1, r7
  offset = useg->p->tot_len - useg->len + split;
9000dcca:	442b      	add	r3, r5
  if (pbuf_copy_partial(useg->p, (u8_t *)p->payload + optlen, remainder, offset ) != remainder) {
9000dccc:	b29b      	uxth	r3, r3
9000dcce:	f7fd ff43 	bl	9000bb58 <pbuf_copy_partial>
9000dcd2:	4540      	cmp	r0, r8
9000dcd4:	d163      	bne.n	9000dd9e <tcp_split_unsent_seg+0x12e>
  split_flags = TCPH_FLAGS(useg->tcphdr);
9000dcd6:	6923      	ldr	r3, [r4, #16]
9000dcd8:	8998      	ldrh	r0, [r3, #12]
9000dcda:	f7fd f9eb 	bl	9000b0b4 <lwip_htons>
  if (split_flags & TCP_PSH) {
9000dcde:	f010 0808 	ands.w	r8, r0, #8
  split_flags = TCPH_FLAGS(useg->tcphdr);
9000dce2:	b2c7      	uxtb	r7, r0
    remainder_flags |= TCP_PSH;
9000dce4:	bf16      	itet	ne
9000dce6:	f04f 0808 	movne.w	r8, #8
  split_flags = TCPH_FLAGS(useg->tcphdr);
9000dcea:	f007 073f 	andeq.w	r7, r7, #63	@ 0x3f
    split_flags &= ~TCP_PSH;
9000dcee:	f007 0737 	andne.w	r7, r7, #55	@ 0x37
  if (split_flags & TCP_FIN) {
9000dcf2:	07fb      	lsls	r3, r7, #31
  seg = tcp_create_segment(pcb, p, remainder_flags, lwip_ntohl(useg->tcphdr->seqno) + split, optflags);
9000dcf4:	6923      	ldr	r3, [r4, #16]
    remainder_flags |= TCP_FIN;
9000dcf6:	bf48      	it	mi
9000dcf8:	f048 0801 	orrmi.w	r8, r8, #1
  seg = tcp_create_segment(pcb, p, remainder_flags, lwip_ntohl(useg->tcphdr->seqno) + split, optflags);
9000dcfc:	6858      	ldr	r0, [r3, #4]
    split_flags &= ~TCP_FIN;
9000dcfe:	bf48      	it	mi
9000dd00:	f007 07fe 	andmi.w	r7, r7, #254	@ 0xfe
  seg = tcp_create_segment(pcb, p, remainder_flags, lwip_ntohl(useg->tcphdr->seqno) + split, optflags);
9000dd04:	f7fd f9d9 	bl	9000b0ba <lwip_htonl>
9000dd08:	4642      	mov	r2, r8
9000dd0a:	182b      	adds	r3, r5, r0
9000dd0c:	4649      	mov	r1, r9
9000dd0e:	4630      	mov	r0, r6
9000dd10:	f8cd b000 	str.w	fp, [sp]
9000dd14:	f7ff fd0d 	bl	9000d732 <tcp_create_segment>
  if (seg == NULL) {
9000dd18:	4680      	mov	r8, r0
9000dd1a:	2800      	cmp	r0, #0
9000dd1c:	d03f      	beq.n	9000dd9e <tcp_split_unsent_seg+0x12e>
  pcb->snd_queuelen -= pbuf_clen(useg->p);
9000dd1e:	6860      	ldr	r0, [r4, #4]
9000dd20:	eba5 050a 	sub.w	r5, r5, sl
9000dd24:	f7fd fea0 	bl	9000ba68 <pbuf_clen>
9000dd28:	f8b6 3066 	ldrh.w	r3, [r6, #102]	@ 0x66
9000dd2c:	fa1f f985 	uxth.w	r9, r5
9000dd30:	1a1b      	subs	r3, r3, r0
  pbuf_realloc(useg->p, useg->p->tot_len - remainder);
9000dd32:	6860      	ldr	r0, [r4, #4]
  pcb->snd_queuelen -= pbuf_clen(useg->p);
9000dd34:	f8a6 3066 	strh.w	r3, [r6, #102]	@ 0x66
  pbuf_realloc(useg->p, useg->p->tot_len - remainder);
9000dd38:	8903      	ldrh	r3, [r0, #8]
9000dd3a:	fa13 f585 	uxtah	r5, r3, r5
9000dd3e:	b2a9      	uxth	r1, r5
9000dd40:	f7fd fe68 	bl	9000ba14 <pbuf_realloc>
  useg->len -= remainder;
9000dd44:	8923      	ldrh	r3, [r4, #8]
  TCPH_SET_FLAG(useg->tcphdr, split_flags);
9000dd46:	4638      	mov	r0, r7
  useg->len -= remainder;
9000dd48:	4499      	add	r9, r3
  TCPH_SET_FLAG(useg->tcphdr, split_flags);
9000dd4a:	6923      	ldr	r3, [r4, #16]
  useg->len -= remainder;
9000dd4c:	f8a4 9008 	strh.w	r9, [r4, #8]
  TCPH_SET_FLAG(useg->tcphdr, split_flags);
9000dd50:	899d      	ldrh	r5, [r3, #12]
9000dd52:	f7fd f9af 	bl	9000b0b4 <lwip_htons>
9000dd56:	6923      	ldr	r3, [r4, #16]
9000dd58:	4305      	orrs	r5, r0
  pcb->snd_queuelen += pbuf_clen(useg->p);
9000dd5a:	6860      	ldr	r0, [r4, #4]
  TCPH_SET_FLAG(useg->tcphdr, split_flags);
9000dd5c:	819d      	strh	r5, [r3, #12]
  useg->oversize_left = 0;
9000dd5e:	2300      	movs	r3, #0
9000dd60:	8163      	strh	r3, [r4, #10]
  pcb->snd_queuelen += pbuf_clen(useg->p);
9000dd62:	f7fd fe81 	bl	9000ba68 <pbuf_clen>
9000dd66:	f8b6 3066 	ldrh.w	r3, [r6, #102]	@ 0x66
9000dd6a:	4418      	add	r0, r3
9000dd6c:	f8a6 0066 	strh.w	r0, [r6, #102]	@ 0x66
  pcb->snd_queuelen += pbuf_clen(seg->p);
9000dd70:	f8d8 0004 	ldr.w	r0, [r8, #4]
9000dd74:	f7fd fe78 	bl	9000ba68 <pbuf_clen>
9000dd78:	f8b6 3066 	ldrh.w	r3, [r6, #102]	@ 0x66
9000dd7c:	4418      	add	r0, r3
  seg->next = useg->next;
9000dd7e:	6823      	ldr	r3, [r4, #0]
  pcb->snd_queuelen += pbuf_clen(seg->p);
9000dd80:	f8a6 0066 	strh.w	r0, [r6, #102]	@ 0x66
  seg->next = useg->next;
9000dd84:	f8c8 3000 	str.w	r3, [r8]
  useg->next = seg;
9000dd88:	f8c4 8000 	str.w	r8, [r4]
  if (seg->next == NULL) {
9000dd8c:	f8d8 3000 	ldr.w	r3, [r8]
9000dd90:	b90b      	cbnz	r3, 9000dd96 <tcp_split_unsent_seg+0x126>
    pcb->unsent_oversize = 0;
9000dd92:	f8a6 3068 	strh.w	r3, [r6, #104]	@ 0x68
    return ERR_OK;
9000dd96:	2000      	movs	r0, #0
}
9000dd98:	b003      	add	sp, #12
9000dd9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    pbuf_free(p);
9000dd9e:	4648      	mov	r0, r9
9000dda0:	f7fd fda0 	bl	9000b8e4 <pbuf_free>
    return ERR_MEM;
9000dda4:	f04f 30ff 	mov.w	r0, #4294967295
9000dda8:	e7f6      	b.n	9000dd98 <tcp_split_unsent_seg+0x128>
    return ERR_VAL;
9000ddaa:	f06f 0005 	mvn.w	r0, #5
9000ddae:	e7f3      	b.n	9000dd98 <tcp_split_unsent_seg+0x128>

9000ddb0 <tcp_enqueue_flags>:
{
9000ddb0:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if (flags & TCP_SYN) {
9000ddb2:	f3c1 0640 	ubfx	r6, r1, #1, #1
{
9000ddb6:	4604      	mov	r4, r0
9000ddb8:	460d      	mov	r5, r1
  if ((p = pbuf_alloc(PBUF_TRANSPORT, optlen, PBUF_RAM)) == NULL) {
9000ddba:	f44f 7220 	mov.w	r2, #640	@ 0x280
9000ddbe:	00b1      	lsls	r1, r6, #2
9000ddc0:	2036      	movs	r0, #54	@ 0x36
9000ddc2:	f7fd fdbb 	bl	9000b93c <pbuf_alloc>
9000ddc6:	4601      	mov	r1, r0
9000ddc8:	b938      	cbnz	r0, 9000ddda <tcp_enqueue_flags+0x2a>
    tcp_set_flags(pcb, TF_NAGLEMEMERR);
9000ddca:	8b63      	ldrh	r3, [r4, #26]
    return ERR_MEM;
9000ddcc:	f04f 30ff 	mov.w	r0, #4294967295
    tcp_set_flags(pcb, TF_NAGLEMEMERR);
9000ddd0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000ddd4:	8363      	strh	r3, [r4, #26]
}
9000ddd6:	b002      	add	sp, #8
9000ddd8:	bd70      	pop	{r4, r5, r6, pc}
  if ((seg = tcp_create_segment(pcb, p, flags, pcb->snd_lbb, optflags)) == NULL) {
9000ddda:	9600      	str	r6, [sp, #0]
9000dddc:	462a      	mov	r2, r5
9000ddde:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
9000dde0:	4620      	mov	r0, r4
9000dde2:	f7ff fca6 	bl	9000d732 <tcp_create_segment>
9000dde6:	2800      	cmp	r0, #0
9000dde8:	d0ef      	beq.n	9000ddca <tcp_enqueue_flags+0x1a>
  if (pcb->unsent == NULL) {
9000ddea:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
9000ddec:	b9c3      	cbnz	r3, 9000de20 <tcp_enqueue_flags+0x70>
    pcb->unsent = seg;
9000ddee:	66e0      	str	r0, [r4, #108]	@ 0x6c
  pcb->unsent_oversize = 0;
9000ddf0:	2300      	movs	r3, #0
  if ((flags & TCP_SYN) || (flags & TCP_FIN)) {
9000ddf2:	07aa      	lsls	r2, r5, #30
  pcb->unsent_oversize = 0;
9000ddf4:	f8a4 3068 	strh.w	r3, [r4, #104]	@ 0x68
  if ((flags & TCP_SYN) || (flags & TCP_FIN)) {
9000ddf8:	d008      	beq.n	9000de0c <tcp_enqueue_flags+0x5c>
    pcb->snd_lbb++;
9000ddfa:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
9000ddfc:	3301      	adds	r3, #1
9000ddfe:	65e3      	str	r3, [r4, #92]	@ 0x5c
  if (flags & TCP_FIN) {
9000de00:	07eb      	lsls	r3, r5, #31
    tcp_set_flags(pcb, TF_FIN);
9000de02:	bf42      	ittt	mi
9000de04:	8b63      	ldrhmi	r3, [r4, #26]
9000de06:	f043 0320 	orrmi.w	r3, r3, #32
9000de0a:	8363      	strhmi	r3, [r4, #26]
  pcb->snd_queuelen += pbuf_clen(seg->p);
9000de0c:	6840      	ldr	r0, [r0, #4]
9000de0e:	f7fd fe2b 	bl	9000ba68 <pbuf_clen>
9000de12:	f8b4 3066 	ldrh.w	r3, [r4, #102]	@ 0x66
9000de16:	4418      	add	r0, r3
9000de18:	f8a4 0066 	strh.w	r0, [r4, #102]	@ 0x66
  return ERR_OK;
9000de1c:	2000      	movs	r0, #0
9000de1e:	e7da      	b.n	9000ddd6 <tcp_enqueue_flags+0x26>
    for (useg = pcb->unsent; useg->next != NULL; useg = useg->next);
9000de20:	461a      	mov	r2, r3
9000de22:	681b      	ldr	r3, [r3, #0]
9000de24:	2b00      	cmp	r3, #0
9000de26:	d1fb      	bne.n	9000de20 <tcp_enqueue_flags+0x70>
    useg->next = seg;
9000de28:	6010      	str	r0, [r2, #0]
9000de2a:	e7e1      	b.n	9000ddf0 <tcp_enqueue_flags+0x40>

9000de2c <tcp_send_fin>:
{
9000de2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (pcb->unsent != NULL) {
9000de2e:	6ec4      	ldr	r4, [r0, #108]	@ 0x6c
{
9000de30:	4605      	mov	r5, r0
  if (pcb->unsent != NULL) {
9000de32:	b14c      	cbz	r4, 9000de48 <tcp_send_fin+0x1c>
    for (last_unsent = pcb->unsent; last_unsent->next != NULL;
9000de34:	4627      	mov	r7, r4
9000de36:	6824      	ldr	r4, [r4, #0]
9000de38:	2c00      	cmp	r4, #0
9000de3a:	d1fb      	bne.n	9000de34 <tcp_send_fin+0x8>
    if ((TCPH_FLAGS(last_unsent->tcphdr) & (TCP_SYN | TCP_FIN | TCP_RST)) == 0) {
9000de3c:	693b      	ldr	r3, [r7, #16]
9000de3e:	8998      	ldrh	r0, [r3, #12]
9000de40:	f7fd f938 	bl	9000b0b4 <lwip_htons>
9000de44:	0743      	lsls	r3, r0, #29
9000de46:	d005      	beq.n	9000de54 <tcp_send_fin+0x28>
  return tcp_enqueue_flags(pcb, TCP_FIN);
9000de48:	4628      	mov	r0, r5
9000de4a:	2101      	movs	r1, #1
}
9000de4c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  return tcp_enqueue_flags(pcb, TCP_FIN);
9000de50:	f7ff bfae 	b.w	9000ddb0 <tcp_enqueue_flags>
      TCPH_SET_FLAG(last_unsent->tcphdr, TCP_FIN);
9000de54:	693b      	ldr	r3, [r7, #16]
9000de56:	2001      	movs	r0, #1
9000de58:	899e      	ldrh	r6, [r3, #12]
9000de5a:	f7fd f92b 	bl	9000b0b4 <lwip_htons>
9000de5e:	693b      	ldr	r3, [r7, #16]
9000de60:	4306      	orrs	r6, r0
}
9000de62:	4620      	mov	r0, r4
      TCPH_SET_FLAG(last_unsent->tcphdr, TCP_FIN);
9000de64:	819e      	strh	r6, [r3, #12]
      tcp_set_flags(pcb, TF_FIN);
9000de66:	8b6b      	ldrh	r3, [r5, #26]
9000de68:	f043 0320 	orr.w	r3, r3, #32
9000de6c:	836b      	strh	r3, [r5, #26]
}
9000de6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000de70 <tcp_rexmit_rto_prepare>:
  if (pcb->unacked == NULL) {
9000de70:	6f02      	ldr	r2, [r0, #112]	@ 0x70
{
9000de72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000de76:	4604      	mov	r4, r0
  if (pcb->unacked == NULL) {
9000de78:	b362      	cbz	r2, 9000ded4 <tcp_rexmit_rto_prepare+0x64>
  for (seg = pcb->unacked; seg->next != NULL; seg = seg->next) {
9000de7a:	4613      	mov	r3, r2
9000de7c:	461e      	mov	r6, r3
9000de7e:	681b      	ldr	r3, [r3, #0]
  if (seg->p->ref != 1) {
9000de80:	6871      	ldr	r1, [r6, #4]
9000de82:	7b89      	ldrb	r1, [r1, #14]
  for (seg = pcb->unacked; seg->next != NULL; seg = seg->next) {
9000de84:	bb23      	cbnz	r3, 9000ded0 <tcp_rexmit_rto_prepare+0x60>
  if (seg->p->ref != 1) {
9000de86:	2901      	cmp	r1, #1
9000de88:	d124      	bne.n	9000ded4 <tcp_rexmit_rto_prepare+0x64>
  seg->next = pcb->unsent;
9000de8a:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
9000de8c:	6033      	str	r3, [r6, #0]
  if (pcb->unsent == NULL) {
9000de8e:	b913      	cbnz	r3, 9000de96 <tcp_rexmit_rto_prepare+0x26>
    pcb->unsent_oversize = seg->oversize_left;
9000de90:	8973      	ldrh	r3, [r6, #10]
9000de92:	f8a4 3068 	strh.w	r3, [r4, #104]	@ 0x68
  tcp_set_flags(pcb, TF_RTO);
9000de96:	8b63      	ldrh	r3, [r4, #26]
  pcb->unacked = NULL;
9000de98:	2500      	movs	r5, #0
  pcb->unsent = pcb->unacked;
9000de9a:	66e2      	str	r2, [r4, #108]	@ 0x6c
  tcp_set_flags(pcb, TF_RTO);
9000de9c:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
  pcb->unacked = NULL;
9000dea0:	6725      	str	r5, [r4, #112]	@ 0x70
  tcp_set_flags(pcb, TF_RTO);
9000dea2:	8363      	strh	r3, [r4, #26]
  pcb->rto_end = lwip_ntohl(seg->tcphdr->seqno) + TCP_TCPLEN(seg);
9000dea4:	6933      	ldr	r3, [r6, #16]
9000dea6:	6858      	ldr	r0, [r3, #4]
9000dea8:	f7fd f907 	bl	9000b0ba <lwip_htonl>
9000deac:	6933      	ldr	r3, [r6, #16]
9000deae:	4607      	mov	r7, r0
9000deb0:	f8b6 8008 	ldrh.w	r8, [r6, #8]
9000deb4:	8998      	ldrh	r0, [r3, #12]
9000deb6:	f7fd f8fd 	bl	9000b0b4 <lwip_htons>
9000deba:	f010 0303 	ands.w	r3, r0, #3
9000debe:	4447      	add	r7, r8
  return ERR_OK;
9000dec0:	4628      	mov	r0, r5
  pcb->rto_end = lwip_ntohl(seg->tcphdr->seqno) + TCP_TCPLEN(seg);
9000dec2:	bf18      	it	ne
9000dec4:	2301      	movne	r3, #1
  pcb->rttest = 0;
9000dec6:	6365      	str	r5, [r4, #52]	@ 0x34
  pcb->rto_end = lwip_ntohl(seg->tcphdr->seqno) + TCP_TCPLEN(seg);
9000dec8:	443b      	add	r3, r7
9000deca:	64e3      	str	r3, [r4, #76]	@ 0x4c
}
9000decc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (seg->p->ref != 1) {
9000ded0:	2901      	cmp	r1, #1
9000ded2:	d0d3      	beq.n	9000de7c <tcp_rexmit_rto_prepare+0xc>
    return ERR_VAL;
9000ded4:	f06f 0005 	mvn.w	r0, #5
9000ded8:	e7f8      	b.n	9000decc <tcp_rexmit_rto_prepare+0x5c>

9000deda <tcp_rexmit>:
{
9000deda:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (pcb->unacked == NULL) {
9000dedc:	6f05      	ldr	r5, [r0, #112]	@ 0x70
{
9000dede:	4604      	mov	r4, r0
  if (pcb->unacked == NULL) {
9000dee0:	b345      	cbz	r5, 9000df34 <tcp_rexmit+0x5a>
  if (seg->p->ref != 1) {
9000dee2:	686b      	ldr	r3, [r5, #4]
9000dee4:	7b9b      	ldrb	r3, [r3, #14]
9000dee6:	2b01      	cmp	r3, #1
9000dee8:	d124      	bne.n	9000df34 <tcp_rexmit+0x5a>
  pcb->unacked = seg->next;
9000deea:	682b      	ldr	r3, [r5, #0]
  cur_seg = &(pcb->unsent);
9000deec:	f100 066c 	add.w	r6, r0, #108	@ 0x6c
  pcb->unacked = seg->next;
9000def0:	6703      	str	r3, [r0, #112]	@ 0x70
  while (*cur_seg &&
9000def2:	6833      	ldr	r3, [r6, #0]
9000def4:	b983      	cbnz	r3, 9000df18 <tcp_rexmit+0x3e>
  seg->next = *cur_seg;
9000def6:	6833      	ldr	r3, [r6, #0]
9000def8:	602b      	str	r3, [r5, #0]
  *cur_seg = seg;
9000defa:	6035      	str	r5, [r6, #0]
  if (seg->next == NULL) {
9000defc:	682b      	ldr	r3, [r5, #0]
9000defe:	b90b      	cbnz	r3, 9000df04 <tcp_rexmit+0x2a>
    pcb->unsent_oversize = 0;
9000df00:	f8a4 3068 	strh.w	r3, [r4, #104]	@ 0x68
  if (pcb->nrtx < 0xFF) {
9000df04:	f894 3042 	ldrb.w	r3, [r4, #66]	@ 0x42
  pcb->rttest = 0;
9000df08:	2000      	movs	r0, #0
  if (pcb->nrtx < 0xFF) {
9000df0a:	2bff      	cmp	r3, #255	@ 0xff
  pcb->rttest = 0;
9000df0c:	6360      	str	r0, [r4, #52]	@ 0x34
    ++pcb->nrtx;
9000df0e:	bf1c      	itt	ne
9000df10:	3301      	addne	r3, #1
9000df12:	f884 3042 	strbne.w	r3, [r4, #66]	@ 0x42
}
9000df16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
         TCP_SEQ_LT(lwip_ntohl((*cur_seg)->tcphdr->seqno), lwip_ntohl(seg->tcphdr->seqno))) {
9000df18:	691b      	ldr	r3, [r3, #16]
9000df1a:	6858      	ldr	r0, [r3, #4]
9000df1c:	f7fd f8cd 	bl	9000b0ba <lwip_htonl>
9000df20:	692b      	ldr	r3, [r5, #16]
9000df22:	4607      	mov	r7, r0
9000df24:	6858      	ldr	r0, [r3, #4]
9000df26:	f7fd f8c8 	bl	9000b0ba <lwip_htonl>
9000df2a:	1a3f      	subs	r7, r7, r0
  while (*cur_seg &&
9000df2c:	2f00      	cmp	r7, #0
9000df2e:	dae2      	bge.n	9000def6 <tcp_rexmit+0x1c>
    cur_seg = &((*cur_seg)->next );
9000df30:	6836      	ldr	r6, [r6, #0]
9000df32:	e7de      	b.n	9000def2 <tcp_rexmit+0x18>
    return ERR_VAL;
9000df34:	f06f 0005 	mvn.w	r0, #5
9000df38:	e7ed      	b.n	9000df16 <tcp_rexmit+0x3c>

9000df3a <tcp_rexmit_fast>:
{
9000df3a:	b538      	push	{r3, r4, r5, lr}
  if (pcb->unacked != NULL && !(pcb->flags & TF_INFR)) {
9000df3c:	6f03      	ldr	r3, [r0, #112]	@ 0x70
{
9000df3e:	4604      	mov	r4, r0
  if (pcb->unacked != NULL && !(pcb->flags & TF_INFR)) {
9000df40:	b1f3      	cbz	r3, 9000df80 <tcp_rexmit_fast+0x46>
9000df42:	8b43      	ldrh	r3, [r0, #26]
9000df44:	075b      	lsls	r3, r3, #29
9000df46:	d41b      	bmi.n	9000df80 <tcp_rexmit_fast+0x46>
    if (tcp_rexmit(pcb) == ERR_OK) {
9000df48:	f7ff ffc7 	bl	9000deda <tcp_rexmit>
9000df4c:	b9c0      	cbnz	r0, 9000df80 <tcp_rexmit_fast+0x46>
      pcb->ssthresh = LWIP_MIN(pcb->cwnd, pcb->snd_wnd) / 2;
9000df4e:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
9000df52:	f8b4 3048 	ldrh.w	r3, [r4, #72]	@ 0x48
      pcb->rtime = 0;
9000df56:	8620      	strh	r0, [r4, #48]	@ 0x30
      pcb->ssthresh = LWIP_MIN(pcb->cwnd, pcb->snd_wnd) / 2;
9000df58:	4299      	cmp	r1, r3
9000df5a:	bf28      	it	cs
9000df5c:	4619      	movcs	r1, r3
      if (pcb->ssthresh < (2U * pcb->mss)) {
9000df5e:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
9000df60:	005d      	lsls	r5, r3, #1
      pcb->ssthresh = LWIP_MIN(pcb->cwnd, pcb->snd_wnd) / 2;
9000df62:	104a      	asrs	r2, r1, #1
        pcb->ssthresh = 2 * pcb->mss;
9000df64:	ebb5 0f51 	cmp.w	r5, r1, lsr #1
      pcb->cwnd = pcb->ssthresh + 3 * pcb->mss;
9000df68:	442b      	add	r3, r5
        pcb->ssthresh = 2 * pcb->mss;
9000df6a:	bf88      	it	hi
9000df6c:	462a      	movhi	r2, r5
      pcb->cwnd = pcb->ssthresh + 3 * pcb->mss;
9000df6e:	4413      	add	r3, r2
        pcb->ssthresh = 2 * pcb->mss;
9000df70:	f8a4 204a 	strh.w	r2, [r4, #74]	@ 0x4a
      pcb->cwnd = pcb->ssthresh + 3 * pcb->mss;
9000df74:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
      tcp_set_flags(pcb, TF_INFR);
9000df78:	8b63      	ldrh	r3, [r4, #26]
9000df7a:	f043 0304 	orr.w	r3, r3, #4
9000df7e:	8363      	strh	r3, [r4, #26]
}
9000df80:	bd38      	pop	{r3, r4, r5, pc}

9000df82 <tcp_rst>:
 */
void
tcp_rst(const struct tcp_pcb *pcb, u32_t seqno, u32_t ackno,
        const ip_addr_t *local_ip, const ip_addr_t *remote_ip,
        u16_t local_port, u16_t remote_port)
{
9000df82:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000df86:	b085      	sub	sp, #20
9000df88:	4604      	mov	r4, r0
  wnd = PP_HTONS(((TCP_WND >> TCP_RCV_SCALE) & 0xFFFF));
#else
  wnd = PP_HTONS(TCP_WND);
#endif

  p = tcp_output_alloc_header_common(ackno, optlen, 0, lwip_htonl(seqno), local_port,
9000df8a:	4608      	mov	r0, r1
{
9000df8c:	4616      	mov	r6, r2
9000df8e:	461d      	mov	r5, r3
9000df90:	f8bd 8034 	ldrh.w	r8, [sp, #52]	@ 0x34
9000df94:	f8bd 9038 	ldrh.w	r9, [sp, #56]	@ 0x38
9000df98:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
  p = tcp_output_alloc_header_common(ackno, optlen, 0, lwip_htonl(seqno), local_port,
9000df9a:	f7fd f88e 	bl	9000b0ba <lwip_htonl>
9000df9e:	2314      	movs	r3, #20
9000dfa0:	f646 010b 	movw	r1, #26635	@ 0x680b
9000dfa4:	4602      	mov	r2, r0
9000dfa6:	f8cd 9000 	str.w	r9, [sp]
9000dfaa:	4630      	mov	r0, r6
9000dfac:	e9cd 3101 	strd	r3, r1, [sp, #4]
9000dfb0:	2100      	movs	r1, #0
9000dfb2:	4643      	mov	r3, r8
9000dfb4:	f7ff fc0b 	bl	9000d7ce <tcp_output_alloc_header_common.constprop.0>
    remote_port, TCP_RST | TCP_ACK, wnd);
  if (p == NULL) {
9000dfb8:	4601      	mov	r1, r0
9000dfba:	b138      	cbz	r0, 9000dfcc <tcp_rst+0x4a>
  }
  tcp_output_fill_options(pcb, p, 0, optlen);

  MIB2_STATS_INC(mib2.tcpoutrsts);

  tcp_output_control_segment(pcb, p, local_ip, remote_ip);
9000dfbc:	463b      	mov	r3, r7
9000dfbe:	462a      	mov	r2, r5
9000dfc0:	4620      	mov	r0, r4
  LWIP_DEBUGF(TCP_RST_DEBUG, ("tcp_rst: seqno %"U32_F" ackno %"U32_F".\n", seqno, ackno));
}
9000dfc2:	b005      	add	sp, #20
9000dfc4:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tcp_output_control_segment(pcb, p, local_ip, remote_ip);
9000dfc8:	f7ff bc45 	b.w	9000d856 <tcp_output_control_segment>
}
9000dfcc:	b005      	add	sp, #20
9000dfce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

9000dfd2 <tcp_send_empty_ack>:
 *
 * @param pcb Protocol control block for the TCP connection to send the ACK
 */
err_t
tcp_send_empty_ack(struct tcp_pcb *pcb)
{
9000dfd2:	b510      	push	{r4, lr}
9000dfd4:	4604      	mov	r4, r0
  if ((num_sacks = tcp_get_num_sacks(pcb, optlen)) > 0) {
    optlen += 4 + num_sacks * 8; /* 4 bytes for header (including 2*NOP), plus 8B for each SACK */
  }
#endif

  p = tcp_output_alloc_header(pcb, optlen, 0, lwip_htonl(pcb->snd_nxt));
9000dfd6:	6d00      	ldr	r0, [r0, #80]	@ 0x50
9000dfd8:	f7fd f86f 	bl	9000b0ba <lwip_htonl>
9000dfdc:	2100      	movs	r1, #0
9000dfde:	4602      	mov	r2, r0
9000dfe0:	4620      	mov	r0, r4
9000dfe2:	f7ff fc25 	bl	9000d830 <tcp_output_alloc_header.constprop.0>
  if (p == NULL) {
9000dfe6:	4601      	mov	r1, r0
9000dfe8:	b930      	cbnz	r0, 9000dff8 <tcp_send_empty_ack+0x26>
    /* let tcp_fasttmr retry sending this ACK */
    tcp_set_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
9000dfea:	8b63      	ldrh	r3, [r4, #26]
    LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output: (ACK) could not allocate pbuf\n"));
    return ERR_BUF;
9000dfec:	f06f 0001 	mvn.w	r0, #1
    tcp_set_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
9000dff0:	f043 0303 	orr.w	r3, r3, #3
9000dff4:	8363      	strh	r3, [r4, #26]
    /* remove ACK flags from the PCB, as we sent an empty ACK now */
    tcp_clear_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
  }

  return err;
}
9000dff6:	bd10      	pop	{r4, pc}
  err = tcp_output_control_segment(pcb, p, &pcb->local_ip, &pcb->remote_ip);
9000dff8:	1d23      	adds	r3, r4, #4
9000dffa:	4622      	mov	r2, r4
9000dffc:	4620      	mov	r0, r4
9000dffe:	f7ff fc2a 	bl	9000d856 <tcp_output_control_segment>
  if (err != ERR_OK) {
9000e002:	8b63      	ldrh	r3, [r4, #26]
9000e004:	b118      	cbz	r0, 9000e00e <tcp_send_empty_ack+0x3c>
    tcp_set_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
9000e006:	f043 0303 	orr.w	r3, r3, #3
    tcp_clear_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
9000e00a:	b29b      	uxth	r3, r3
9000e00c:	e7f2      	b.n	9000dff4 <tcp_send_empty_ack+0x22>
9000e00e:	f023 0303 	bic.w	r3, r3, #3
9000e012:	e7fa      	b.n	9000e00a <tcp_send_empty_ack+0x38>

9000e014 <tcp_output>:
  if (tcp_input_pcb == pcb) {
9000e014:	4ba9      	ldr	r3, [pc, #676]	@ (9000e2bc <tcp_output+0x2a8>)
9000e016:	681b      	ldr	r3, [r3, #0]
9000e018:	4283      	cmp	r3, r0
{
9000e01a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000e01e:	4604      	mov	r4, r0
9000e020:	b087      	sub	sp, #28
  if (tcp_input_pcb == pcb) {
9000e022:	f000 8148 	beq.w	9000e2b6 <tcp_output+0x2a2>
  seg = pcb->unsent;
9000e026:	6ec5      	ldr	r5, [r0, #108]	@ 0x6c
  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);
9000e028:	f8b0 8048 	ldrh.w	r8, [r0, #72]	@ 0x48
9000e02c:	f8b0 6060 	ldrh.w	r6, [r0, #96]	@ 0x60
  if (seg == NULL) {
9000e030:	b945      	cbnz	r5, 9000e044 <tcp_output+0x30>
    if (pcb->flags & TF_ACK_NOW) {
9000e032:	8b43      	ldrh	r3, [r0, #26]
9000e034:	079d      	lsls	r5, r3, #30
9000e036:	f140 813a 	bpl.w	9000e2ae <tcp_output+0x29a>
}
9000e03a:	b007      	add	sp, #28
9000e03c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      return tcp_send_empty_ack(pcb);
9000e040:	f7ff bfc7 	b.w	9000dfd2 <tcp_send_empty_ack>
  netif = tcp_route(pcb, &pcb->local_ip, &pcb->remote_ip);
9000e044:	f100 0b04 	add.w	fp, r0, #4
  if ((pcb != NULL) && (pcb->netif_idx != NETIF_NO_INDEX)) {
9000e048:	7a00      	ldrb	r0, [r0, #8]
9000e04a:	b358      	cbz	r0, 9000e0a4 <tcp_output+0x90>
    return netif_get_by_index(pcb->netif_idx);
9000e04c:	f7fd fbc0 	bl	9000b7d0 <netif_get_by_index>
    return ip_route(src, dst);
9000e050:	4607      	mov	r7, r0
  if (netif == NULL) {
9000e052:	2800      	cmp	r0, #0
9000e054:	f000 814c 	beq.w	9000e2f0 <tcp_output+0x2dc>
  if (ip_addr_isany(&pcb->local_ip)) {
9000e058:	6823      	ldr	r3, [r4, #0]
9000e05a:	b90b      	cbnz	r3, 9000e060 <tcp_output+0x4c>
    ip_addr_copy(pcb->local_ip, *local_ip);
9000e05c:	6843      	ldr	r3, [r0, #4]
9000e05e:	6023      	str	r3, [r4, #0]
  if (lwip_ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len > wnd) {
9000e060:	692b      	ldr	r3, [r5, #16]
  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);
9000e062:	45b0      	cmp	r8, r6
  if (lwip_ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len > wnd) {
9000e064:	6858      	ldr	r0, [r3, #4]
  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);
9000e066:	bf28      	it	cs
9000e068:	46b0      	movcs	r8, r6
  if (lwip_ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len > wnd) {
9000e06a:	f7fd f826 	bl	9000b0ba <lwip_htonl>
9000e06e:	892b      	ldrh	r3, [r5, #8]
9000e070:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000e072:	1a9b      	subs	r3, r3, r2
9000e074:	4403      	add	r3, r0
9000e076:	4543      	cmp	r3, r8
9000e078:	d918      	bls.n	9000e0ac <tcp_output+0x98>
    if (wnd == pcb->snd_wnd && pcb->unacked == NULL && pcb->persist_backoff == 0) {
9000e07a:	f8b4 3060 	ldrh.w	r3, [r4, #96]	@ 0x60
9000e07e:	4543      	cmp	r3, r8
9000e080:	d10a      	bne.n	9000e098 <tcp_output+0x84>
9000e082:	6f23      	ldr	r3, [r4, #112]	@ 0x70
9000e084:	b943      	cbnz	r3, 9000e098 <tcp_output+0x84>
9000e086:	f894 3095 	ldrb.w	r3, [r4, #149]	@ 0x95
9000e08a:	b92b      	cbnz	r3, 9000e098 <tcp_output+0x84>
      pcb->persist_cnt = 0;
9000e08c:	f44f 7280 	mov.w	r2, #256	@ 0x100
      pcb->persist_probe = 0;
9000e090:	f884 3096 	strb.w	r3, [r4, #150]	@ 0x96
      pcb->persist_cnt = 0;
9000e094:	f8a4 2094 	strh.w	r2, [r4, #148]	@ 0x94
    if (pcb->flags & TF_ACK_NOW) {
9000e098:	8b63      	ldrh	r3, [r4, #26]
9000e09a:	0799      	lsls	r1, r3, #30
9000e09c:	f140 8107 	bpl.w	9000e2ae <tcp_output+0x29a>
      return tcp_send_empty_ack(pcb);
9000e0a0:	4620      	mov	r0, r4
9000e0a2:	e7ca      	b.n	9000e03a <tcp_output+0x26>
    return ip_route(src, dst);
9000e0a4:	4658      	mov	r0, fp
9000e0a6:	f7fc fafd 	bl	9000a6a4 <ip4_route>
9000e0aa:	e7d1      	b.n	9000e050 <tcp_output+0x3c>
  pcb->persist_backoff = 0;
9000e0ac:	2300      	movs	r3, #0
  useg = pcb->unacked;
9000e0ae:	6f26      	ldr	r6, [r4, #112]	@ 0x70
  pcb->persist_backoff = 0;
9000e0b0:	f884 3095 	strb.w	r3, [r4, #149]	@ 0x95
  if (useg != NULL) {
9000e0b4:	b126      	cbz	r6, 9000e0c0 <tcp_output+0xac>
    for (; useg->next != NULL; useg = useg->next);
9000e0b6:	4633      	mov	r3, r6
9000e0b8:	6836      	ldr	r6, [r6, #0]
9000e0ba:	2e00      	cmp	r6, #0
9000e0bc:	d1fb      	bne.n	9000e0b6 <tcp_output+0xa2>
9000e0be:	461e      	mov	r6, r3
  seg->tcphdr->chksum = 0;
9000e0c0:	f04f 0900 	mov.w	r9, #0
9000e0c4:	e0c2      	b.n	9000e24c <tcp_output+0x238>
    if (pcb->state != SYN_SENT) {
9000e0c6:	7d23      	ldrb	r3, [r4, #20]
9000e0c8:	2b02      	cmp	r3, #2
9000e0ca:	d00a      	beq.n	9000e0e2 <tcp_output+0xce>
      TCPH_SET_FLAG(seg->tcphdr, TCP_ACK);
9000e0cc:	692b      	ldr	r3, [r5, #16]
9000e0ce:	2010      	movs	r0, #16
9000e0d0:	f8b3 a00c 	ldrh.w	sl, [r3, #12]
9000e0d4:	f7fc ffee 	bl	9000b0b4 <lwip_htons>
9000e0d8:	692b      	ldr	r3, [r5, #16]
9000e0da:	ea4a 0a00 	orr.w	sl, sl, r0
9000e0de:	f8a3 a00c 	strh.w	sl, [r3, #12]
  if (seg->p->ref != 1) {
9000e0e2:	686b      	ldr	r3, [r5, #4]
  seg->tcphdr->ackno = lwip_htonl(pcb->rcv_nxt);
9000e0e4:	f8d5 a010 	ldr.w	sl, [r5, #16]
  if (seg->p->ref != 1) {
9000e0e8:	7b9b      	ldrb	r3, [r3, #14]
9000e0ea:	2b01      	cmp	r3, #1
9000e0ec:	d15f      	bne.n	9000e1ae <tcp_output+0x19a>
  seg->tcphdr->ackno = lwip_htonl(pcb->rcv_nxt);
9000e0ee:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000e0f0:	f7fc ffe3 	bl	9000b0ba <lwip_htonl>
9000e0f4:	f8ca 0008 	str.w	r0, [sl, #8]
    seg->tcphdr->wnd = lwip_htons(TCPWND_MIN16(RCV_WND_SCALE(pcb, pcb->rcv_ann_wnd)));
9000e0f8:	8d60      	ldrh	r0, [r4, #42]	@ 0x2a
9000e0fa:	f8d5 a010 	ldr.w	sl, [r5, #16]
9000e0fe:	f7fc ffd9 	bl	9000b0b4 <lwip_htons>
  pcb->rcv_ann_right_edge = pcb->rcv_nxt + pcb->rcv_ann_wnd;
9000e102:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
9000e104:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    seg->tcphdr->wnd = lwip_htons(TCPWND_MIN16(RCV_WND_SCALE(pcb, pcb->rcv_ann_wnd)));
9000e106:	f8aa 000e 	strh.w	r0, [sl, #14]
  pcb->rcv_ann_right_edge = pcb->rcv_nxt + pcb->rcv_ann_wnd;
9000e10a:	4413      	add	r3, r2
9000e10c:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (seg->flags & TF_SEG_OPTS_MSS) {
9000e10e:	7b2b      	ldrb	r3, [r5, #12]
9000e110:	07da      	lsls	r2, r3, #31
9000e112:	d50d      	bpl.n	9000e130 <tcp_output+0x11c>
  opts = (u32_t *)(void *)(seg->tcphdr + 1);
9000e114:	f8d5 a010 	ldr.w	sl, [r5, #16]
    mss = tcp_eff_send_mss_netif(TCP_MSS, netif, &pcb->remote_ip);
9000e118:	465a      	mov	r2, fp
9000e11a:	4639      	mov	r1, r7
9000e11c:	f240 50b4 	movw	r0, #1460	@ 0x5b4
9000e120:	f7fe fb4c 	bl	9000c7bc <tcp_eff_send_mss_netif>
    *opts = TCP_BUILD_MSS_OPTION(mss);
9000e124:	f040 7001 	orr.w	r0, r0, #33816576	@ 0x2040000
9000e128:	f7fc ffc7 	bl	9000b0ba <lwip_htonl>
9000e12c:	f8ca 0014 	str.w	r0, [sl, #20]
  if (pcb->rtime < 0) {
9000e130:	f9b4 3030 	ldrsh.w	r3, [r4, #48]	@ 0x30
9000e134:	2b00      	cmp	r3, #0
  if (pcb->rttest == 0) {
9000e136:	6b63      	ldr	r3, [r4, #52]	@ 0x34
    pcb->rtime = 0;
9000e138:	bfb8      	it	lt
9000e13a:	f8a4 9030 	strhlt.w	r9, [r4, #48]	@ 0x30
  if (pcb->rttest == 0) {
9000e13e:	b93b      	cbnz	r3, 9000e150 <tcp_output+0x13c>
    pcb->rttest = tcp_ticks;
9000e140:	4a5f      	ldr	r2, [pc, #380]	@ (9000e2c0 <tcp_output+0x2ac>)
    pcb->rtseq = lwip_ntohl(seg->tcphdr->seqno);
9000e142:	692b      	ldr	r3, [r5, #16]
    pcb->rttest = tcp_ticks;
9000e144:	6812      	ldr	r2, [r2, #0]
9000e146:	6362      	str	r2, [r4, #52]	@ 0x34
    pcb->rtseq = lwip_ntohl(seg->tcphdr->seqno);
9000e148:	6858      	ldr	r0, [r3, #4]
9000e14a:	f7fc ffb6 	bl	9000b0ba <lwip_htonl>
9000e14e:	63a0      	str	r0, [r4, #56]	@ 0x38
  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);
9000e150:	6868      	ldr	r0, [r5, #4]
    seg->tcphdr->chksum = ip_chksum_pseudo(seg->p, IP_PROTO_TCP,
9000e152:	2106      	movs	r1, #6
  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);
9000e154:	f8d5 a010 	ldr.w	sl, [r5, #16]
9000e158:	6843      	ldr	r3, [r0, #4]
  seg->p->len -= len;
9000e15a:	8942      	ldrh	r2, [r0, #10]
  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);
9000e15c:	ebaa 0303 	sub.w	r3, sl, r3
  seg->p->payload = seg->tcphdr;
9000e160:	f8c0 a004 	str.w	sl, [r0, #4]
  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);
9000e164:	b29b      	uxth	r3, r3
  seg->p->len -= len;
9000e166:	1ad2      	subs	r2, r2, r3
9000e168:	8142      	strh	r2, [r0, #10]
  seg->p->tot_len -= len;
9000e16a:	8902      	ldrh	r2, [r0, #8]
9000e16c:	1ad2      	subs	r2, r2, r3
    seg->tcphdr->chksum = ip_chksum_pseudo(seg->p, IP_PROTO_TCP,
9000e16e:	4623      	mov	r3, r4
  seg->p->tot_len -= len;
9000e170:	b292      	uxth	r2, r2
9000e172:	8102      	strh	r2, [r0, #8]
  seg->tcphdr->chksum = 0;
9000e174:	f88a 9010 	strb.w	r9, [sl, #16]
9000e178:	f88a 9011 	strb.w	r9, [sl, #17]
    seg->tcphdr->chksum = ip_chksum_pseudo(seg->p, IP_PROTO_TCP,
9000e17c:	f8cd b000 	str.w	fp, [sp]
9000e180:	f7fd f848 	bl	9000b214 <ip_chksum_pseudo>
  err = ip_output_if(seg->p, &pcb->local_ip, &pcb->remote_ip, pcb->ttl,
9000e184:	2306      	movs	r3, #6
    seg->tcphdr->chksum = ip_chksum_pseudo(seg->p, IP_PROTO_TCP,
9000e186:	f8aa 0010 	strh.w	r0, [sl, #16]
  err = ip_output_if(seg->p, &pcb->local_ip, &pcb->remote_ip, pcb->ttl,
9000e18a:	465a      	mov	r2, fp
9000e18c:	9702      	str	r7, [sp, #8]
9000e18e:	4621      	mov	r1, r4
9000e190:	9301      	str	r3, [sp, #4]
9000e192:	7aa3      	ldrb	r3, [r4, #10]
9000e194:	9300      	str	r3, [sp, #0]
9000e196:	7ae3      	ldrb	r3, [r4, #11]
9000e198:	6868      	ldr	r0, [r5, #4]
9000e19a:	f7fc fc5a 	bl	9000aa52 <ip4_output_if>
    if (err != ERR_OK) {
9000e19e:	b130      	cbz	r0, 9000e1ae <tcp_output+0x19a>
      tcp_set_flags(pcb, TF_NAGLEMEMERR);
9000e1a0:	8b63      	ldrh	r3, [r4, #26]
9000e1a2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000e1a6:	8363      	strh	r3, [r4, #26]
}
9000e1a8:	b007      	add	sp, #28
9000e1aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    pcb->unsent = seg->next;
9000e1ae:	682b      	ldr	r3, [r5, #0]
    seg->oversize_left = 0;
9000e1b0:	f8a5 900a 	strh.w	r9, [r5, #10]
    pcb->unsent = seg->next;
9000e1b4:	66e3      	str	r3, [r4, #108]	@ 0x6c
    if (pcb->state != SYN_SENT) {
9000e1b6:	7d23      	ldrb	r3, [r4, #20]
9000e1b8:	2b02      	cmp	r3, #2
      tcp_clear_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
9000e1ba:	bf1e      	ittt	ne
9000e1bc:	8b63      	ldrhne	r3, [r4, #26]
9000e1be:	f023 0303 	bicne.w	r3, r3, #3
9000e1c2:	8363      	strhne	r3, [r4, #26]
    snd_nxt = lwip_ntohl(seg->tcphdr->seqno) + TCP_TCPLEN(seg);
9000e1c4:	692b      	ldr	r3, [r5, #16]
9000e1c6:	6858      	ldr	r0, [r3, #4]
9000e1c8:	f7fc ff77 	bl	9000b0ba <lwip_htonl>
9000e1cc:	892a      	ldrh	r2, [r5, #8]
9000e1ce:	692b      	ldr	r3, [r5, #16]
9000e1d0:	4682      	mov	sl, r0
9000e1d2:	9205      	str	r2, [sp, #20]
9000e1d4:	8998      	ldrh	r0, [r3, #12]
9000e1d6:	f7fc ff6d 	bl	9000b0b4 <lwip_htons>
9000e1da:	9a05      	ldr	r2, [sp, #20]
9000e1dc:	f010 0303 	ands.w	r3, r0, #3
9000e1e0:	4492      	add	sl, r2
    if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
9000e1e2:	6d22      	ldr	r2, [r4, #80]	@ 0x50
    snd_nxt = lwip_ntohl(seg->tcphdr->seqno) + TCP_TCPLEN(seg);
9000e1e4:	bf18      	it	ne
9000e1e6:	2301      	movne	r3, #1
9000e1e8:	4453      	add	r3, sl
    if (TCP_TCPLEN(seg) > 0) {
9000e1ea:	f8b5 a008 	ldrh.w	sl, [r5, #8]
    if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
9000e1ee:	1ad2      	subs	r2, r2, r3
9000e1f0:	2a00      	cmp	r2, #0
      pcb->snd_nxt = snd_nxt;
9000e1f2:	bfb8      	it	lt
9000e1f4:	6523      	strlt	r3, [r4, #80]	@ 0x50
    if (TCP_TCPLEN(seg) > 0) {
9000e1f6:	692b      	ldr	r3, [r5, #16]
9000e1f8:	8998      	ldrh	r0, [r3, #12]
9000e1fa:	f7fc ff5b 	bl	9000b0b4 <lwip_htons>
9000e1fe:	0783      	lsls	r3, r0, #30
9000e200:	d102      	bne.n	9000e208 <tcp_output+0x1f4>
9000e202:	f1ba 0f00 	cmp.w	sl, #0
9000e206:	d06f      	beq.n	9000e2e8 <tcp_output+0x2d4>
      if (pcb->unacked == NULL) {
9000e208:	6f23      	ldr	r3, [r4, #112]	@ 0x70
      seg->next = NULL;
9000e20a:	f8c5 9000 	str.w	r9, [r5]
      if (pcb->unacked == NULL) {
9000e20e:	b913      	cbnz	r3, 9000e216 <tcp_output+0x202>
        pcb->unacked = seg;
9000e210:	6725      	str	r5, [r4, #112]	@ 0x70
        useg = seg;
9000e212:	462e      	mov	r6, r5
9000e214:	e018      	b.n	9000e248 <tcp_output+0x234>
        if (TCP_SEQ_LT(lwip_ntohl(seg->tcphdr->seqno), lwip_ntohl(useg->tcphdr->seqno))) {
9000e216:	692b      	ldr	r3, [r5, #16]
9000e218:	6858      	ldr	r0, [r3, #4]
9000e21a:	f7fc ff4e 	bl	9000b0ba <lwip_htonl>
9000e21e:	6933      	ldr	r3, [r6, #16]
9000e220:	4682      	mov	sl, r0
9000e222:	6858      	ldr	r0, [r3, #4]
9000e224:	f7fc ff49 	bl	9000b0ba <lwip_htonl>
9000e228:	ebaa 0a00 	sub.w	sl, sl, r0
9000e22c:	f1ba 0f00 	cmp.w	sl, #0
9000e230:	da58      	bge.n	9000e2e4 <tcp_output+0x2d0>
          struct tcp_seg **cur_seg = &(pcb->unacked);
9000e232:	f104 0a70 	add.w	sl, r4, #112	@ 0x70
          while (*cur_seg &&
9000e236:	f8da 3000 	ldr.w	r3, [sl]
9000e23a:	2b00      	cmp	r3, #0
9000e23c:	d142      	bne.n	9000e2c4 <tcp_output+0x2b0>
          seg->next = (*cur_seg);
9000e23e:	f8da 3000 	ldr.w	r3, [sl]
9000e242:	602b      	str	r3, [r5, #0]
          (*cur_seg) = seg;
9000e244:	f8ca 5000 	str.w	r5, [sl]
    seg = pcb->unsent;
9000e248:	6ee5      	ldr	r5, [r4, #108]	@ 0x6c
  while (seg != NULL &&
9000e24a:	b36d      	cbz	r5, 9000e2a8 <tcp_output+0x294>
         lwip_ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len <= wnd) {
9000e24c:	692b      	ldr	r3, [r5, #16]
9000e24e:	6858      	ldr	r0, [r3, #4]
9000e250:	f7fc ff33 	bl	9000b0ba <lwip_htonl>
9000e254:	6c63      	ldr	r3, [r4, #68]	@ 0x44
9000e256:	1ac0      	subs	r0, r0, r3
9000e258:	892b      	ldrh	r3, [r5, #8]
9000e25a:	4418      	add	r0, r3
  while (seg != NULL &&
9000e25c:	4540      	cmp	r0, r8
9000e25e:	d821      	bhi.n	9000e2a4 <tcp_output+0x290>
    if ((tcp_do_output_nagle(pcb) == 0) &&
9000e260:	6f23      	ldr	r3, [r4, #112]	@ 0x70
9000e262:	2b00      	cmp	r3, #0
9000e264:	f43f af2f 	beq.w	9000e0c6 <tcp_output+0xb2>
9000e268:	8b62      	ldrh	r2, [r4, #26]
9000e26a:	f012 0f44 	tst.w	r2, #68	@ 0x44
9000e26e:	f47f af2a 	bne.w	9000e0c6 <tcp_output+0xb2>
9000e272:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
9000e274:	b143      	cbz	r3, 9000e288 <tcp_output+0x274>
9000e276:	6819      	ldr	r1, [r3, #0]
9000e278:	2900      	cmp	r1, #0
9000e27a:	f47f af24 	bne.w	9000e0c6 <tcp_output+0xb2>
9000e27e:	8919      	ldrh	r1, [r3, #8]
9000e280:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
9000e282:	4299      	cmp	r1, r3
9000e284:	f4bf af1f 	bcs.w	9000e0c6 <tcp_output+0xb2>
9000e288:	f8b4 3064 	ldrh.w	r3, [r4, #100]	@ 0x64
9000e28c:	2b00      	cmp	r3, #0
9000e28e:	f43f af1a 	beq.w	9000e0c6 <tcp_output+0xb2>
9000e292:	f8b4 3066 	ldrh.w	r3, [r4, #102]	@ 0x66
9000e296:	2b07      	cmp	r3, #7
9000e298:	f63f af15 	bhi.w	9000e0c6 <tcp_output+0xb2>
9000e29c:	f012 0fa0 	tst.w	r2, #160	@ 0xa0
9000e2a0:	f47f af11 	bne.w	9000e0c6 <tcp_output+0xb2>
  if (pcb->unsent == NULL) {
9000e2a4:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
9000e2a6:	b913      	cbnz	r3, 9000e2ae <tcp_output+0x29a>
    pcb->unsent_oversize = 0;
9000e2a8:	2300      	movs	r3, #0
9000e2aa:	f8a4 3068 	strh.w	r3, [r4, #104]	@ 0x68
  tcp_clear_flags(pcb, TF_NAGLEMEMERR);
9000e2ae:	8b63      	ldrh	r3, [r4, #26]
9000e2b0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000e2b4:	8363      	strh	r3, [r4, #26]
    return ERR_OK;
9000e2b6:	2000      	movs	r0, #0
9000e2b8:	e776      	b.n	9000e1a8 <tcp_output+0x194>
9000e2ba:	bf00      	nop
9000e2bc:	2001a490 	.word	0x2001a490
9000e2c0:	2001a48c 	.word	0x2001a48c
                 TCP_SEQ_LT(lwip_ntohl((*cur_seg)->tcphdr->seqno), lwip_ntohl(seg->tcphdr->seqno))) {
9000e2c4:	691b      	ldr	r3, [r3, #16]
9000e2c6:	6858      	ldr	r0, [r3, #4]
9000e2c8:	f7fc fef7 	bl	9000b0ba <lwip_htonl>
9000e2cc:	692a      	ldr	r2, [r5, #16]
9000e2ce:	9005      	str	r0, [sp, #20]
9000e2d0:	6850      	ldr	r0, [r2, #4]
9000e2d2:	f7fc fef2 	bl	9000b0ba <lwip_htonl>
9000e2d6:	9b05      	ldr	r3, [sp, #20]
9000e2d8:	1a1b      	subs	r3, r3, r0
          while (*cur_seg &&
9000e2da:	2b00      	cmp	r3, #0
9000e2dc:	daaf      	bge.n	9000e23e <tcp_output+0x22a>
            cur_seg = &((*cur_seg)->next );
9000e2de:	f8da a000 	ldr.w	sl, [sl]
9000e2e2:	e7a8      	b.n	9000e236 <tcp_output+0x222>
          useg->next = seg;
9000e2e4:	6035      	str	r5, [r6, #0]
          useg = useg->next;
9000e2e6:	e794      	b.n	9000e212 <tcp_output+0x1fe>
      tcp_seg_free(seg);
9000e2e8:	4628      	mov	r0, r5
9000e2ea:	f7fd fdbd 	bl	9000be68 <tcp_seg_free>
9000e2ee:	e7ab      	b.n	9000e248 <tcp_output+0x234>
    return ERR_RTE;
9000e2f0:	f06f 0003 	mvn.w	r0, #3
9000e2f4:	e758      	b.n	9000e1a8 <tcp_output+0x194>
9000e2f6:	bf00      	nop

9000e2f8 <tcp_rexmit_rto_commit>:
  if (pcb->nrtx < 0xFF) {
9000e2f8:	f890 3042 	ldrb.w	r3, [r0, #66]	@ 0x42
9000e2fc:	2bff      	cmp	r3, #255	@ 0xff
    ++pcb->nrtx;
9000e2fe:	bf1c      	itt	ne
9000e300:	3301      	addne	r3, #1
9000e302:	f880 3042 	strbne.w	r3, [r0, #66]	@ 0x42
  tcp_output(pcb);
9000e306:	f7ff be85 	b.w	9000e014 <tcp_output>

9000e30a <tcp_rexmit_rto>:
{
9000e30a:	b510      	push	{r4, lr}
9000e30c:	4604      	mov	r4, r0
  if (tcp_rexmit_rto_prepare(pcb) == ERR_OK) {
9000e30e:	f7ff fdaf 	bl	9000de70 <tcp_rexmit_rto_prepare>
9000e312:	b920      	cbnz	r0, 9000e31e <tcp_rexmit_rto+0x14>
    tcp_rexmit_rto_commit(pcb);
9000e314:	4620      	mov	r0, r4
}
9000e316:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    tcp_rexmit_rto_commit(pcb);
9000e31a:	f7ff bfed 	b.w	9000e2f8 <tcp_rexmit_rto_commit>
}
9000e31e:	bd10      	pop	{r4, pc}

9000e320 <tcp_keepalive>:
 *
 * @param pcb the tcp_pcb for which to send a keepalive packet
 */
err_t
tcp_keepalive(struct tcp_pcb *pcb)
{
9000e320:	b510      	push	{r4, lr}
9000e322:	4604      	mov	r4, r0
  LWIP_DEBUGF(TCP_DEBUG, ("\n"));

  LWIP_DEBUGF(TCP_DEBUG, ("tcp_keepalive: tcp_ticks %"U32_F"   pcb->tmr %"U32_F" pcb->keep_cnt_sent %"U16_F"\n",
                          tcp_ticks, pcb->tmr, (u16_t)pcb->keep_cnt_sent));

  p = tcp_output_alloc_header(pcb, optlen, 0, lwip_htonl(pcb->snd_nxt - 1));
9000e324:	6d00      	ldr	r0, [r0, #80]	@ 0x50
9000e326:	3801      	subs	r0, #1
9000e328:	f7fc fec7 	bl	9000b0ba <lwip_htonl>
9000e32c:	2100      	movs	r1, #0
9000e32e:	4602      	mov	r2, r0
9000e330:	4620      	mov	r0, r4
9000e332:	f7ff fa7d 	bl	9000d830 <tcp_output_alloc_header.constprop.0>
  if (p == NULL) {
9000e336:	4601      	mov	r1, r0
9000e338:	b130      	cbz	r0, 9000e348 <tcp_keepalive+0x28>
    LWIP_DEBUGF(TCP_DEBUG,
                ("tcp_keepalive: could not allocate memory for pbuf\n"));
    return ERR_MEM;
  }
  tcp_output_fill_options(pcb, p, 0, optlen);
  err = tcp_output_control_segment(pcb, p, &pcb->local_ip, &pcb->remote_ip);
9000e33a:	1d23      	adds	r3, r4, #4
9000e33c:	4622      	mov	r2, r4
9000e33e:	4620      	mov	r0, r4

  LWIP_DEBUGF(TCP_DEBUG, ("tcp_keepalive: seqno %"U32_F" ackno %"U32_F" err %d.\n",
                          pcb->snd_nxt - 1, pcb->rcv_nxt, (int)err));
  return err;
}
9000e340:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  err = tcp_output_control_segment(pcb, p, &pcb->local_ip, &pcb->remote_ip);
9000e344:	f7ff ba87 	b.w	9000d856 <tcp_output_control_segment>
}
9000e348:	f04f 30ff 	mov.w	r0, #4294967295
9000e34c:	bd10      	pop	{r4, pc}

9000e34e <tcp_zero_window_probe>:
 *
 * @param pcb the tcp_pcb for which to send a zero-window probe packet
 */
err_t
tcp_zero_window_probe(struct tcp_pcb *pcb)
{
9000e34e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
              ("tcp_zero_window_probe: tcp_ticks %"U32_F
               "   pcb->tmr %"U32_F" pcb->keep_cnt_sent %"U16_F"\n",
               tcp_ticks, pcb->tmr, (u16_t)pcb->keep_cnt_sent));

  /* Only consider unsent, persist timer should be off when there is data in-flight */
  seg = pcb->unsent;
9000e352:	6ec5      	ldr	r5, [r0, #108]	@ 0x6c
{
9000e354:	4606      	mov	r6, r0
  if (seg == NULL) {
9000e356:	2d00      	cmp	r5, #0
9000e358:	d047      	beq.n	9000e3ea <tcp_zero_window_probe+0x9c>

  /* increment probe count. NOTE: we record probe even if it fails
     to actually transmit due to an error. This ensures memory exhaustion/
     routing problem doesn't leave a zero-window pcb as an indefinite zombie.
     RTO mechanism has similar behavior, see pcb->nrtx */
  if (pcb->persist_probe < 0xFF) {
9000e35a:	f890 3096 	ldrb.w	r3, [r0, #150]	@ 0x96
9000e35e:	2bff      	cmp	r3, #255	@ 0xff
    ++pcb->persist_probe;
9000e360:	bf1c      	itt	ne
9000e362:	3301      	addne	r3, #1
9000e364:	f880 3096 	strbne.w	r3, [r0, #150]	@ 0x96
  }

  is_fin = ((TCPH_FLAGS(seg->tcphdr) & TCP_FIN) != 0) && (seg->len == 0);
9000e368:	692b      	ldr	r3, [r5, #16]
9000e36a:	8998      	ldrh	r0, [r3, #12]
9000e36c:	f7fc fea2 	bl	9000b0b4 <lwip_htons>
9000e370:	f010 0401 	ands.w	r4, r0, #1
  /* we want to send one seqno: either FIN or data (no options) */
  len = is_fin ? 0 : 1;

  p = tcp_output_alloc_header(pcb, optlen, len, seg->tcphdr->seqno);
9000e374:	692b      	ldr	r3, [r5, #16]
9000e376:	4630      	mov	r0, r6
  is_fin = ((TCPH_FLAGS(seg->tcphdr) & TCP_FIN) != 0) && (seg->len == 0);
9000e378:	bf18      	it	ne
9000e37a:	892c      	ldrhne	r4, [r5, #8]
  p = tcp_output_alloc_header(pcb, optlen, len, seg->tcphdr->seqno);
9000e37c:	685a      	ldr	r2, [r3, #4]
  is_fin = ((TCPH_FLAGS(seg->tcphdr) & TCP_FIN) != 0) && (seg->len == 0);
9000e37e:	bf1c      	itt	ne
9000e380:	fab4 f484 	clzne	r4, r4
9000e384:	0964      	lsrne	r4, r4, #5
  p = tcp_output_alloc_header(pcb, optlen, len, seg->tcphdr->seqno);
9000e386:	f084 0101 	eor.w	r1, r4, #1
9000e38a:	f7ff fa51 	bl	9000d830 <tcp_output_alloc_header.constprop.0>
  if (p == NULL) {
9000e38e:	4607      	mov	r7, r0
9000e390:	b370      	cbz	r0, 9000e3f0 <tcp_zero_window_probe+0xa2>
    LWIP_DEBUGF(TCP_DEBUG, ("tcp_zero_window_probe: no memory for pbuf\n"));
    return ERR_MEM;
  }
  tcphdr = (struct tcp_hdr *)p->payload;
9000e392:	f8d0 8004 	ldr.w	r8, [r0, #4]

  if (is_fin) {
9000e396:	b1ec      	cbz	r4, 9000e3d4 <tcp_zero_window_probe+0x86>
    /* FIN segment, no data */
    TCPH_FLAGS_SET(tcphdr, TCP_ACK | TCP_FIN);
9000e398:	f8b8 400c 	ldrh.w	r4, [r8, #12]
9000e39c:	2011      	movs	r0, #17
9000e39e:	f7fc fe89 	bl	9000b0b4 <lwip_htons>
9000e3a2:	f424 547c 	bic.w	r4, r4, #16128	@ 0x3f00
9000e3a6:	b2a4      	uxth	r4, r4
9000e3a8:	4304      	orrs	r4, r0
9000e3aa:	f8a8 400c 	strh.w	r4, [r8, #12]
       Ensure we copy the first TCP data byte: */
    pbuf_copy_partial(seg->p, d, 1, seg->p->tot_len - seg->len);
  }

  /* The byte may be acknowledged without the window being opened. */
  snd_nxt = lwip_ntohl(seg->tcphdr->seqno) + 1;
9000e3ae:	692b      	ldr	r3, [r5, #16]
9000e3b0:	6858      	ldr	r0, [r3, #4]
9000e3b2:	f7fc fe82 	bl	9000b0ba <lwip_htonl>
  if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
9000e3b6:	6d33      	ldr	r3, [r6, #80]	@ 0x50
  snd_nxt = lwip_ntohl(seg->tcphdr->seqno) + 1;
9000e3b8:	3001      	adds	r0, #1
    pcb->snd_nxt = snd_nxt;
  }
  tcp_output_fill_options(pcb, p, 0, optlen);

  err = tcp_output_control_segment(pcb, p, &pcb->local_ip, &pcb->remote_ip);
9000e3ba:	4632      	mov	r2, r6
9000e3bc:	4639      	mov	r1, r7
  if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
9000e3be:	1a1b      	subs	r3, r3, r0
9000e3c0:	2b00      	cmp	r3, #0
  err = tcp_output_control_segment(pcb, p, &pcb->local_ip, &pcb->remote_ip);
9000e3c2:	f106 0304 	add.w	r3, r6, #4
    pcb->snd_nxt = snd_nxt;
9000e3c6:	bfb8      	it	lt
9000e3c8:	6530      	strlt	r0, [r6, #80]	@ 0x50
  err = tcp_output_control_segment(pcb, p, &pcb->local_ip, &pcb->remote_ip);
9000e3ca:	4630      	mov	r0, r6

  LWIP_DEBUGF(TCP_DEBUG, ("tcp_zero_window_probe: seqno %"U32_F
                          " ackno %"U32_F" err %d.\n",
                          pcb->snd_nxt - 1, pcb->rcv_nxt, (int)err));
  return err;
}
9000e3cc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  err = tcp_output_control_segment(pcb, p, &pcb->local_ip, &pcb->remote_ip);
9000e3d0:	f7ff ba41 	b.w	9000d856 <tcp_output_control_segment>
    pbuf_copy_partial(seg->p, d, 1, seg->p->tot_len - seg->len);
9000e3d4:	6868      	ldr	r0, [r5, #4]
9000e3d6:	f108 0114 	add.w	r1, r8, #20
9000e3da:	892a      	ldrh	r2, [r5, #8]
9000e3dc:	8903      	ldrh	r3, [r0, #8]
9000e3de:	1a9b      	subs	r3, r3, r2
9000e3e0:	2201      	movs	r2, #1
9000e3e2:	b29b      	uxth	r3, r3
9000e3e4:	f7fd fbb8 	bl	9000bb58 <pbuf_copy_partial>
9000e3e8:	e7e1      	b.n	9000e3ae <tcp_zero_window_probe+0x60>
    return ERR_OK;
9000e3ea:	4628      	mov	r0, r5
}
9000e3ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return ERR_MEM;
9000e3f0:	f04f 30ff 	mov.w	r0, #4294967295
9000e3f4:	e7fa      	b.n	9000e3ec <tcp_zero_window_probe+0x9e>
	...

9000e3f8 <sys_timeout_abs>:
#if LWIP_DEBUG_TIMERNAMES
sys_timeout_abs(u32_t abs_time, sys_timeout_handler handler, void *arg, const char *handler_name)
#else /* LWIP_DEBUG_TIMERNAMES */
sys_timeout_abs(u32_t abs_time, sys_timeout_handler handler, void *arg)
#endif
{
9000e3f8:	b570      	push	{r4, r5, r6, lr}
9000e3fa:	4604      	mov	r4, r0
  struct sys_timeo *timeout, *t;

  timeout = (struct sys_timeo *)memp_malloc(MEMP_SYS_TIMEOUT);
9000e3fc:	2007      	movs	r0, #7
{
9000e3fe:	460e      	mov	r6, r1
9000e400:	4615      	mov	r5, r2
  timeout = (struct sys_timeo *)memp_malloc(MEMP_SYS_TIMEOUT);
9000e402:	f7fd f8a9 	bl	9000b558 <memp_malloc>
  if (timeout == NULL) {
9000e406:	b140      	cbz	r0, 9000e41a <sys_timeout_abs+0x22>
    LWIP_ASSERT("sys_timeout: timeout != NULL, pool MEMP_SYS_TIMEOUT is empty", timeout != NULL);
    return;
  }

  timeout->next = NULL;
9000e408:	2300      	movs	r3, #0
  timeout->handler_name = handler_name;
  LWIP_DEBUGF(TIMERS_DEBUG, ("sys_timeout: %p abs_time=%"U32_F" handler=%s arg=%p\n",
                             (void *)timeout, abs_time, handler_name, (void *)arg));
#endif /* LWIP_DEBUG_TIMERNAMES */

  if (next_timeout == NULL) {
9000e40a:	4a0c      	ldr	r2, [pc, #48]	@ (9000e43c <sys_timeout_abs+0x44>)
  timeout->time = abs_time;
9000e40c:	6044      	str	r4, [r0, #4]
  timeout->next = NULL;
9000e40e:	6003      	str	r3, [r0, #0]
  if (next_timeout == NULL) {
9000e410:	6813      	ldr	r3, [r2, #0]
  timeout->arg = arg;
9000e412:	e9c0 6502 	strd	r6, r5, [r0, #8]
  if (next_timeout == NULL) {
9000e416:	b90b      	cbnz	r3, 9000e41c <sys_timeout_abs+0x24>
    next_timeout = timeout;
    return;
  }
  if (TIME_LESS_THAN(timeout->time, next_timeout->time)) {
    timeout->next = next_timeout;
    next_timeout = timeout;
9000e418:	6010      	str	r0, [r2, #0]
        t->next = timeout;
        break;
      }
    }
  }
}
9000e41a:	bd70      	pop	{r4, r5, r6, pc}
  if (TIME_LESS_THAN(timeout->time, next_timeout->time)) {
9000e41c:	6859      	ldr	r1, [r3, #4]
9000e41e:	1a61      	subs	r1, r4, r1
9000e420:	2900      	cmp	r1, #0
9000e422:	da01      	bge.n	9000e428 <sys_timeout_abs+0x30>
    timeout->next = next_timeout;
9000e424:	6003      	str	r3, [r0, #0]
9000e426:	e7f7      	b.n	9000e418 <sys_timeout_abs+0x20>
      if ((t->next == NULL) || TIME_LESS_THAN(timeout->time, t->next->time)) {
9000e428:	4619      	mov	r1, r3
9000e42a:	681b      	ldr	r3, [r3, #0]
9000e42c:	b11b      	cbz	r3, 9000e436 <sys_timeout_abs+0x3e>
9000e42e:	685a      	ldr	r2, [r3, #4]
9000e430:	1aa2      	subs	r2, r4, r2
9000e432:	2a00      	cmp	r2, #0
9000e434:	daf8      	bge.n	9000e428 <sys_timeout_abs+0x30>
        timeout->next = t->next;
9000e436:	6003      	str	r3, [r0, #0]
        t->next = timeout;
9000e438:	6008      	str	r0, [r1, #0]
        break;
9000e43a:	e7ee      	b.n	9000e41a <sys_timeout_abs+0x22>
9000e43c:	2001a4d4 	.word	0x2001a4d4

9000e440 <lwip_cyclic_timer>:
#if !LWIP_TESTMODE
static
#endif
void
lwip_cyclic_timer(void *arg)
{
9000e440:	b570      	push	{r4, r5, r6, lr}
  const struct lwip_cyclic_timer *cyclic = (const struct lwip_cyclic_timer *)arg;

#if LWIP_DEBUG_TIMERNAMES
  LWIP_DEBUGF(TIMERS_DEBUG, ("tcpip: %s()\n", cyclic->handler_name));
#endif
  cyclic->handler();
9000e442:	6843      	ldr	r3, [r0, #4]
{
9000e444:	4604      	mov	r4, r0
  cyclic->handler();
9000e446:	4798      	blx	r3

  now = sys_now();
9000e448:	f7f2 fa7c 	bl	90000944 <sys_now>
  next_timeout_time = (u32_t)(current_timeout_due_time + cyclic->interval_ms);  /* overflow handled by TIME_LESS_THAN macro */ 
9000e44c:	4b07      	ldr	r3, [pc, #28]	@ (9000e46c <lwip_cyclic_timer+0x2c>)
  now = sys_now();
9000e44e:	4605      	mov	r5, r0
  next_timeout_time = (u32_t)(current_timeout_due_time + cyclic->interval_ms);  /* overflow handled by TIME_LESS_THAN macro */ 
9000e450:	6826      	ldr	r6, [r4, #0]
9000e452:	6818      	ldr	r0, [r3, #0]
  if (TIME_LESS_THAN(next_timeout_time, now)) {
    /* timer would immediately expire again -> "overload" -> restart without any correction */
#if LWIP_DEBUG_TIMERNAMES
    sys_timeout_abs((u32_t)(now + cyclic->interval_ms), lwip_cyclic_timer, arg, cyclic->handler_name);
#else
    sys_timeout_abs((u32_t)(now + cyclic->interval_ms), lwip_cyclic_timer, arg);
9000e454:	4622      	mov	r2, r4
9000e456:	4906      	ldr	r1, [pc, #24]	@ (9000e470 <lwip_cyclic_timer+0x30>)
  next_timeout_time = (u32_t)(current_timeout_due_time + cyclic->interval_ms);  /* overflow handled by TIME_LESS_THAN macro */ 
9000e458:	4430      	add	r0, r6
  if (TIME_LESS_THAN(next_timeout_time, now)) {
9000e45a:	1b43      	subs	r3, r0, r5
9000e45c:	2b00      	cmp	r3, #0
    sys_timeout_abs((u32_t)(now + cyclic->interval_ms), lwip_cyclic_timer, arg);
9000e45e:	bfb8      	it	lt
9000e460:	1970      	addlt	r0, r6, r5
    sys_timeout_abs(next_timeout_time, lwip_cyclic_timer, arg, cyclic->handler_name);
#else
    sys_timeout_abs(next_timeout_time, lwip_cyclic_timer, arg);
#endif
  }
}
9000e462:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    sys_timeout_abs(next_timeout_time, lwip_cyclic_timer, arg);
9000e466:	f7ff bfc7 	b.w	9000e3f8 <sys_timeout_abs>
9000e46a:	bf00      	nop
9000e46c:	2001a4d0 	.word	0x2001a4d0
9000e470:	9000e441 	.word	0x9000e441

9000e474 <sys_timeout>:
sys_timeout_debug(u32_t msecs, sys_timeout_handler handler, void *arg, const char *handler_name)
#else /* LWIP_DEBUG_TIMERNAMES */
void
sys_timeout(u32_t msecs, sys_timeout_handler handler, void *arg)
#endif /* LWIP_DEBUG_TIMERNAMES */
{
9000e474:	b570      	push	{r4, r5, r6, lr}
9000e476:	4604      	mov	r4, r0
9000e478:	460d      	mov	r5, r1
9000e47a:	4616      	mov	r6, r2

  LWIP_ASSERT_CORE_LOCKED();

  LWIP_ASSERT("Timeout time too long, max is LWIP_UINT32_MAX/4 msecs", msecs <= (LWIP_UINT32_MAX / 4));

  next_timeout_time = (u32_t)(sys_now() + msecs); /* overflow handled by TIME_LESS_THAN macro */ 
9000e47c:	f7f2 fa62 	bl	90000944 <sys_now>

#if LWIP_DEBUG_TIMERNAMES
  sys_timeout_abs(next_timeout_time, handler, arg, handler_name);
#else
  sys_timeout_abs(next_timeout_time, handler, arg);
9000e480:	4629      	mov	r1, r5
9000e482:	4420      	add	r0, r4
9000e484:	4632      	mov	r2, r6
#endif
}
9000e486:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  sys_timeout_abs(next_timeout_time, handler, arg);
9000e48a:	f7ff bfb5 	b.w	9000e3f8 <sys_timeout_abs>
	...

9000e490 <tcp_timer_needed>:
  if (!tcpip_tcp_timer_active && (tcp_active_pcbs || tcp_tw_pcbs)) {
9000e490:	4b08      	ldr	r3, [pc, #32]	@ (9000e4b4 <tcp_timer_needed+0x24>)
9000e492:	681a      	ldr	r2, [r3, #0]
9000e494:	b962      	cbnz	r2, 9000e4b0 <tcp_timer_needed+0x20>
9000e496:	4a08      	ldr	r2, [pc, #32]	@ (9000e4b8 <tcp_timer_needed+0x28>)
9000e498:	6812      	ldr	r2, [r2, #0]
9000e49a:	b912      	cbnz	r2, 9000e4a2 <tcp_timer_needed+0x12>
9000e49c:	4a07      	ldr	r2, [pc, #28]	@ (9000e4bc <tcp_timer_needed+0x2c>)
9000e49e:	6812      	ldr	r2, [r2, #0]
9000e4a0:	b132      	cbz	r2, 9000e4b0 <tcp_timer_needed+0x20>
    tcpip_tcp_timer_active = 1;
9000e4a2:	2201      	movs	r2, #1
    sys_timeout(TCP_TMR_INTERVAL, tcpip_tcp_timer, NULL);
9000e4a4:	4906      	ldr	r1, [pc, #24]	@ (9000e4c0 <tcp_timer_needed+0x30>)
9000e4a6:	20fa      	movs	r0, #250	@ 0xfa
    tcpip_tcp_timer_active = 1;
9000e4a8:	601a      	str	r2, [r3, #0]
    sys_timeout(TCP_TMR_INTERVAL, tcpip_tcp_timer, NULL);
9000e4aa:	2200      	movs	r2, #0
9000e4ac:	f7ff bfe2 	b.w	9000e474 <sys_timeout>
}
9000e4b0:	4770      	bx	lr
9000e4b2:	bf00      	nop
9000e4b4:	2001a4cc 	.word	0x2001a4cc
9000e4b8:	2001a480 	.word	0x2001a480
9000e4bc:	2001a47c 	.word	0x2001a47c
9000e4c0:	9000e4c5 	.word	0x9000e4c5

9000e4c4 <tcpip_tcp_timer>:
{
9000e4c4:	b508      	push	{r3, lr}
  tcp_tmr();
9000e4c6:	f7fe f819 	bl	9000c4fc <tcp_tmr>
  if (tcp_active_pcbs || tcp_tw_pcbs) {
9000e4ca:	4b08      	ldr	r3, [pc, #32]	@ (9000e4ec <tcpip_tcp_timer+0x28>)
9000e4cc:	681b      	ldr	r3, [r3, #0]
9000e4ce:	b913      	cbnz	r3, 9000e4d6 <tcpip_tcp_timer+0x12>
9000e4d0:	4b07      	ldr	r3, [pc, #28]	@ (9000e4f0 <tcpip_tcp_timer+0x2c>)
9000e4d2:	681b      	ldr	r3, [r3, #0]
9000e4d4:	b133      	cbz	r3, 9000e4e4 <tcpip_tcp_timer+0x20>
    sys_timeout(TCP_TMR_INTERVAL, tcpip_tcp_timer, NULL);
9000e4d6:	2200      	movs	r2, #0
9000e4d8:	4906      	ldr	r1, [pc, #24]	@ (9000e4f4 <tcpip_tcp_timer+0x30>)
9000e4da:	20fa      	movs	r0, #250	@ 0xfa
}
9000e4dc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    sys_timeout(TCP_TMR_INTERVAL, tcpip_tcp_timer, NULL);
9000e4e0:	f7ff bfc8 	b.w	9000e474 <sys_timeout>
    tcpip_tcp_timer_active = 0;
9000e4e4:	4a04      	ldr	r2, [pc, #16]	@ (9000e4f8 <tcpip_tcp_timer+0x34>)
9000e4e6:	6013      	str	r3, [r2, #0]
}
9000e4e8:	bd08      	pop	{r3, pc}
9000e4ea:	bf00      	nop
9000e4ec:	2001a480 	.word	0x2001a480
9000e4f0:	2001a47c 	.word	0x2001a47c
9000e4f4:	9000e4c5 	.word	0x9000e4c5
9000e4f8:	2001a4cc 	.word	0x2001a4cc

9000e4fc <sys_timeouts_init>:
{
9000e4fc:	b538      	push	{r3, r4, r5, lr}
    sys_timeout(lwip_cyclic_timers[i].interval_ms, lwip_cyclic_timer, LWIP_CONST_CAST(void *, &lwip_cyclic_timers[i]));
9000e4fe:	4d0b      	ldr	r5, [pc, #44]	@ (9000e52c <sys_timeouts_init+0x30>)
9000e500:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
9000e504:	4c0a      	ldr	r4, [pc, #40]	@ (9000e530 <sys_timeouts_init+0x34>)
9000e506:	462a      	mov	r2, r5
9000e508:	4621      	mov	r1, r4
9000e50a:	f7ff ffb3 	bl	9000e474 <sys_timeout>
9000e50e:	f105 0208 	add.w	r2, r5, #8
9000e512:	4621      	mov	r1, r4
9000e514:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
9000e518:	f7ff ffac 	bl	9000e474 <sys_timeout>
9000e51c:	f105 0210 	add.w	r2, r5, #16
9000e520:	4621      	mov	r1, r4
9000e522:	2064      	movs	r0, #100	@ 0x64
}
9000e524:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    sys_timeout(lwip_cyclic_timers[i].interval_ms, lwip_cyclic_timer, LWIP_CONST_CAST(void *, &lwip_cyclic_timers[i]));
9000e528:	f7ff bfa4 	b.w	9000e474 <sys_timeout>
9000e52c:	9002acc0 	.word	0x9002acc0
9000e530:	9000e441 	.word	0x9000e441

9000e534 <sys_check_timeouts>:
 *
 * Must be called periodically from your main loop.
 */
void
sys_check_timeouts(void)
{
9000e534:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  u32_t now;

  LWIP_ASSERT_CORE_LOCKED();

  /* Process only timers expired at the start of the function. */
  now = sys_now();
9000e538:	f7f2 fa04 	bl	90000944 <sys_now>
    sys_timeout_handler handler;
    void *arg;

    PBUF_CHECK_FREE_OOSEQ();

    tmptimeout = next_timeout;
9000e53c:	4e0c      	ldr	r6, [pc, #48]	@ (9000e570 <sys_check_timeouts+0x3c>)
  now = sys_now();
9000e53e:	4604      	mov	r4, r0

    /* Timeout has expired */
    next_timeout = tmptimeout->next;
    handler = tmptimeout->h;
    arg = tmptimeout->arg;
    current_timeout_due_time = tmptimeout->time;
9000e540:	f8df 8030 	ldr.w	r8, [pc, #48]	@ 9000e574 <sys_check_timeouts+0x40>
    tmptimeout = next_timeout;
9000e544:	6831      	ldr	r1, [r6, #0]
    if (tmptimeout == NULL) {
9000e546:	b189      	cbz	r1, 9000e56c <sys_check_timeouts+0x38>
    if (TIME_LESS_THAN(now, tmptimeout->time)) {
9000e548:	684b      	ldr	r3, [r1, #4]
9000e54a:	1ae2      	subs	r2, r4, r3
9000e54c:	2a00      	cmp	r2, #0
9000e54e:	db0d      	blt.n	9000e56c <sys_check_timeouts+0x38>
    next_timeout = tmptimeout->next;
9000e550:	680a      	ldr	r2, [r1, #0]
    if (handler != NULL) {
      LWIP_DEBUGF(TIMERS_DEBUG, ("sct calling h=%s t=%"U32_F" arg=%p\n",
                                 tmptimeout->handler_name, sys_now() - tmptimeout->time, arg));
    }
#endif /* LWIP_DEBUG_TIMERNAMES */
    memp_free(MEMP_SYS_TIMEOUT, tmptimeout);
9000e552:	2007      	movs	r0, #7
    current_timeout_due_time = tmptimeout->time;
9000e554:	f8c8 3000 	str.w	r3, [r8]
    next_timeout = tmptimeout->next;
9000e558:	6032      	str	r2, [r6, #0]
    arg = tmptimeout->arg;
9000e55a:	e9d1 5702 	ldrd	r5, r7, [r1, #8]
    memp_free(MEMP_SYS_TIMEOUT, tmptimeout);
9000e55e:	f7fd f811 	bl	9000b584 <memp_free>
    if (handler != NULL) {
9000e562:	2d00      	cmp	r5, #0
9000e564:	d0ee      	beq.n	9000e544 <sys_check_timeouts+0x10>
      handler(arg);
9000e566:	4638      	mov	r0, r7
9000e568:	47a8      	blx	r5
9000e56a:	e7eb      	b.n	9000e544 <sys_check_timeouts+0x10>
    }
    LWIP_TCPIP_THREAD_ALIVE();

    /* Repeat until all expired timers have been called */
  } while (1);
}
9000e56c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000e570:	2001a4d4 	.word	0x2001a4d4
9000e574:	2001a4d0 	.word	0x2001a4d0

9000e578 <udp_init>:
/**
 * Initialize this module.
 */
void
udp_init(void)
{
9000e578:	b508      	push	{r3, lr}
#ifdef LWIP_RAND
  udp_port = UDP_ENSURE_LOCAL_PORT_RANGE(LWIP_RAND());
9000e57a:	f019 ffef 	bl	9002855c <rand>
9000e57e:	ea6f 4080 	mvn.w	r0, r0, lsl #18
9000e582:	4b02      	ldr	r3, [pc, #8]	@ (9000e58c <udp_init+0x14>)
9000e584:	ea6f 4090 	mvn.w	r0, r0, lsr #18
9000e588:	8018      	strh	r0, [r3, #0]
#endif /* LWIP_RAND */
}
9000e58a:	bd08      	pop	{r3, pc}
9000e58c:	200000a6 	.word	0x200000a6

9000e590 <udp_input>:
  PERF_START;

  UDP_STATS_INC(udp.recv);

  /* Check minimum length (UDP header) */
  if (p->len < UDP_HLEN) {
9000e590:	8943      	ldrh	r3, [r0, #10]
9000e592:	2b07      	cmp	r3, #7
{
9000e594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000e598:	4604      	mov	r4, r0
9000e59a:	b087      	sub	sp, #28
9000e59c:	460f      	mov	r7, r1
  if (p->len < UDP_HLEN) {
9000e59e:	d805      	bhi.n	9000e5ac <udp_input+0x1c>
    LWIP_DEBUGF(UDP_DEBUG,
                ("udp_input: short UDP datagram (%"U16_F" bytes) discarded\n", p->tot_len));
    UDP_STATS_INC(udp.lenerr);
    UDP_STATS_INC(udp.drop);
    MIB2_STATS_INC(mib2.udpinerrors);
    pbuf_free(p);
9000e5a0:	4620      	mov	r0, r4
  UDP_STATS_INC(udp.drop);
  MIB2_STATS_INC(mib2.udpinerrors);
  pbuf_free(p);
  PERF_STOP("udp_input");
#endif /* CHECKSUM_CHECK_UDP */
}
9000e5a2:	b007      	add	sp, #28
9000e5a4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    pbuf_free(p);
9000e5a8:	f7fd b99c 	b.w	9000b8e4 <pbuf_free>
  broadcast = ip_addr_isbroadcast(ip_current_dest_addr(), ip_current_netif());
9000e5ac:	4d50      	ldr	r5, [pc, #320]	@ (9000e6f0 <udp_input+0x160>)
  udphdr = (struct udp_hdr *)p->payload;
9000e5ae:	f8d0 9004 	ldr.w	r9, [r0, #4]
  broadcast = ip_addr_isbroadcast(ip_current_dest_addr(), ip_current_netif());
9000e5b2:	6829      	ldr	r1, [r5, #0]
9000e5b4:	6968      	ldr	r0, [r5, #20]
9000e5b6:	f7fc fa5d 	bl	9000aa74 <ip4_addr_isbroadcast_u32>
9000e5ba:	9003      	str	r0, [sp, #12]
  src = lwip_ntohs(udphdr->src);
9000e5bc:	f8b9 0000 	ldrh.w	r0, [r9]
9000e5c0:	f7fc fd78 	bl	9000b0b4 <lwip_htons>
9000e5c4:	4680      	mov	r8, r0
  dest = lwip_ntohs(udphdr->dest);
9000e5c6:	f8b9 0002 	ldrh.w	r0, [r9, #2]
9000e5ca:	f7fc fd73 	bl	9000b0b4 <lwip_htons>
  for (pcb = udp_pcbs; pcb != NULL; pcb = pcb->next) {
9000e5ce:	4b49      	ldr	r3, [pc, #292]	@ (9000e6f4 <udp_input+0x164>)
  dest = lwip_ntohs(udphdr->dest);
9000e5d0:	4682      	mov	sl, r0
  for (pcb = udp_pcbs; pcb != NULL; pcb = pcb->next) {
9000e5d2:	f8d3 e000 	ldr.w	lr, [r3]
      (pcb->netif_idx != netif_get_index(ip_data.current_input_netif))) {
9000e5d6:	686b      	ldr	r3, [r5, #4]
9000e5d8:	9305      	str	r3, [sp, #20]
           ip_addr_cmp(&pcb->remote_ip, ip_current_src_addr()))) {
9000e5da:	e9d5 3204 	ldrd	r3, r2, [r5, #16]
  uncon_pcb = NULL;
9000e5de:	2500      	movs	r5, #0
           ip_addr_cmp(&pcb->remote_ip, ip_current_src_addr()))) {
9000e5e0:	9304      	str	r3, [sp, #16]
  for (pcb = udp_pcbs; pcb != NULL; pcb = pcb->next) {
9000e5e2:	4673      	mov	r3, lr
  prev = NULL;
9000e5e4:	46ac      	mov	ip, r5
  for (pcb = udp_pcbs; pcb != NULL; pcb = pcb->next) {
9000e5e6:	b92b      	cbnz	r3, 9000e5f4 <udp_input+0x64>
  if (pcb != NULL) {
9000e5e8:	2d00      	cmp	r5, #0
9000e5ea:	d138      	bne.n	9000e65e <udp_input+0xce>
  if (for_us) {
9000e5ec:	687b      	ldr	r3, [r7, #4]
9000e5ee:	4293      	cmp	r3, r2
9000e5f0:	d035      	beq.n	9000e65e <udp_input+0xce>
9000e5f2:	e7d5      	b.n	9000e5a0 <udp_input+0x10>
    if ((pcb->local_port == dest) &&
9000e5f4:	8a59      	ldrh	r1, [r3, #18]
9000e5f6:	4551      	cmp	r1, sl
9000e5f8:	d156      	bne.n	9000e6a8 <udp_input+0x118>
  if ((pcb->netif_idx != NETIF_NO_INDEX) &&
9000e5fa:	7a18      	ldrb	r0, [r3, #8]
9000e5fc:	b130      	cbz	r0, 9000e60c <udp_input+0x7c>
      (pcb->netif_idx != netif_get_index(ip_data.current_input_netif))) {
9000e5fe:	9905      	ldr	r1, [sp, #20]
9000e600:	f891 1034 	ldrb.w	r1, [r1, #52]	@ 0x34
9000e604:	3101      	adds	r1, #1
  if ((pcb->netif_idx != NETIF_NO_INDEX) &&
9000e606:	b2c9      	uxtb	r1, r1
9000e608:	4288      	cmp	r0, r1
9000e60a:	d14d      	bne.n	9000e6a8 <udp_input+0x118>
    if (broadcast != 0) {
9000e60c:	9903      	ldr	r1, [sp, #12]
        if (ip4_addr_isany(ip_2_ip4(&pcb->local_ip)) ||
9000e60e:	6818      	ldr	r0, [r3, #0]
    if (broadcast != 0) {
9000e610:	2900      	cmp	r1, #0
9000e612:	d045      	beq.n	9000e6a0 <udp_input+0x110>
        if (ip4_addr_isany(ip_2_ip4(&pcb->local_ip)) ||
9000e614:	b138      	cbz	r0, 9000e626 <udp_input+0x96>
9000e616:	1c51      	adds	r1, r2, #1
9000e618:	d005      	beq.n	9000e626 <udp_input+0x96>
            ip4_addr_netcmp(ip_2_ip4(&pcb->local_ip), ip4_current_dest_addr(), netif_ip4_netmask(inp))) {
9000e61a:	ea80 0b02 	eor.w	fp, r0, r2
9000e61e:	68b9      	ldr	r1, [r7, #8]
            ((ip4_current_dest_addr()->addr == IPADDR_BROADCAST)) ||
9000e620:	ea1b 0f01 	tst.w	fp, r1
9000e624:	d140      	bne.n	9000e6a8 <udp_input+0x118>
      if ((pcb->flags & UDP_FLAGS_CONNECTED) == 0) {
9000e626:	7c19      	ldrb	r1, [r3, #16]
9000e628:	074e      	lsls	r6, r1, #29
9000e62a:	d40c      	bmi.n	9000e646 <udp_input+0xb6>
        if (uncon_pcb == NULL) {
9000e62c:	2d00      	cmp	r5, #0
9000e62e:	d03e      	beq.n	9000e6ae <udp_input+0x11e>
        } else if (broadcast && ip4_current_dest_addr()->addr == IPADDR_BROADCAST) {
9000e630:	9903      	ldr	r1, [sp, #12]
9000e632:	b141      	cbz	r1, 9000e646 <udp_input+0xb6>
9000e634:	1c51      	adds	r1, r2, #1
9000e636:	d106      	bne.n	9000e646 <udp_input+0xb6>
          if (!IP_IS_V4_VAL(uncon_pcb->local_ip) || !ip4_addr_cmp(ip_2_ip4(&uncon_pcb->local_ip), netif_ip4_addr(inp))) {
9000e638:	6879      	ldr	r1, [r7, #4]
9000e63a:	682e      	ldr	r6, [r5, #0]
9000e63c:	428e      	cmp	r6, r1
9000e63e:	d002      	beq.n	9000e646 <udp_input+0xb6>
          uncon_pcb = pcb;
9000e640:	4288      	cmp	r0, r1
9000e642:	bf08      	it	eq
9000e644:	461d      	moveq	r5, r3
      if ((pcb->remote_port == src) &&
9000e646:	8a99      	ldrh	r1, [r3, #20]
9000e648:	4541      	cmp	r1, r8
9000e64a:	d12d      	bne.n	9000e6a8 <udp_input+0x118>
          (ip_addr_isany_val(pcb->remote_ip) ||
9000e64c:	6859      	ldr	r1, [r3, #4]
      if ((pcb->remote_port == src) &&
9000e64e:	b111      	cbz	r1, 9000e656 <udp_input+0xc6>
          (ip_addr_isany_val(pcb->remote_ip) ||
9000e650:	9804      	ldr	r0, [sp, #16]
9000e652:	4281      	cmp	r1, r0
9000e654:	d128      	bne.n	9000e6a8 <udp_input+0x118>
        if (prev != NULL) {
9000e656:	f1bc 0f00 	cmp.w	ip, #0
9000e65a:	d12a      	bne.n	9000e6b2 <udp_input+0x122>
  for (pcb = udp_pcbs; pcb != NULL; pcb = pcb->next) {
9000e65c:	461d      	mov	r5, r3
        if (udphdr->chksum != 0) {
9000e65e:	f8b9 3006 	ldrh.w	r3, [r9, #6]
9000e662:	b14b      	cbz	r3, 9000e678 <udp_input+0xe8>
          if (ip_chksum_pseudo(p, IP_PROTO_UDP, p->tot_len,
9000e664:	4b24      	ldr	r3, [pc, #144]	@ (9000e6f8 <udp_input+0x168>)
9000e666:	2111      	movs	r1, #17
9000e668:	4620      	mov	r0, r4
9000e66a:	9300      	str	r3, [sp, #0]
9000e66c:	3b04      	subs	r3, #4
9000e66e:	8922      	ldrh	r2, [r4, #8]
9000e670:	f7fc fdd0 	bl	9000b214 <ip_chksum_pseudo>
9000e674:	2800      	cmp	r0, #0
9000e676:	d193      	bne.n	9000e5a0 <udp_input+0x10>
    if (pbuf_remove_header(p, UDP_HLEN)) {
9000e678:	2108      	movs	r1, #8
9000e67a:	4620      	mov	r0, r4
9000e67c:	f7fd f90e 	bl	9000b89c <pbuf_remove_header>
9000e680:	2800      	cmp	r0, #0
9000e682:	d18d      	bne.n	9000e5a0 <udp_input+0x10>
    if (pcb != NULL) {
9000e684:	b1ed      	cbz	r5, 9000e6c2 <udp_input+0x132>
      if (pcb->recv != NULL) {
9000e686:	6a2e      	ldr	r6, [r5, #32]
9000e688:	2e00      	cmp	r6, #0
9000e68a:	d089      	beq.n	9000e5a0 <udp_input+0x10>
        pcb->recv(pcb->recv_arg, pcb, p, ip_current_src_addr(), src);
9000e68c:	f8cd 8000 	str.w	r8, [sp]
9000e690:	4622      	mov	r2, r4
9000e692:	4b1a      	ldr	r3, [pc, #104]	@ (9000e6fc <udp_input+0x16c>)
9000e694:	4629      	mov	r1, r5
9000e696:	6a68      	ldr	r0, [r5, #36]	@ 0x24
9000e698:	47b0      	blx	r6
}
9000e69a:	b007      	add	sp, #28
9000e69c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (ip_addr_isany(&pcb->local_ip) || ip_addr_cmp(&pcb->local_ip, ip_current_dest_addr())) {
9000e6a0:	2800      	cmp	r0, #0
9000e6a2:	d0c0      	beq.n	9000e626 <udp_input+0x96>
9000e6a4:	4290      	cmp	r0, r2
9000e6a6:	d0be      	beq.n	9000e626 <udp_input+0x96>
    prev = pcb;
9000e6a8:	469c      	mov	ip, r3
  for (pcb = udp_pcbs; pcb != NULL; pcb = pcb->next) {
9000e6aa:	68db      	ldr	r3, [r3, #12]
9000e6ac:	e79b      	b.n	9000e5e6 <udp_input+0x56>
          uncon_pcb = pcb;
9000e6ae:	461d      	mov	r5, r3
9000e6b0:	e7c9      	b.n	9000e646 <udp_input+0xb6>
          prev->next = pcb->next;
9000e6b2:	68da      	ldr	r2, [r3, #12]
9000e6b4:	f8cc 200c 	str.w	r2, [ip, #12]
          udp_pcbs = pcb;
9000e6b8:	4a0e      	ldr	r2, [pc, #56]	@ (9000e6f4 <udp_input+0x164>)
          pcb->next = udp_pcbs;
9000e6ba:	f8c3 e00c 	str.w	lr, [r3, #12]
          udp_pcbs = pcb;
9000e6be:	6013      	str	r3, [r2, #0]
  if (pcb != NULL) {
9000e6c0:	e7cc      	b.n	9000e65c <udp_input+0xcc>
      if (!broadcast && !ip_addr_ismulticast(ip_current_dest_addr())) {
9000e6c2:	9b03      	ldr	r3, [sp, #12]
9000e6c4:	2b00      	cmp	r3, #0
9000e6c6:	f47f af6b 	bne.w	9000e5a0 <udp_input+0x10>
9000e6ca:	4a09      	ldr	r2, [pc, #36]	@ (9000e6f0 <udp_input+0x160>)
9000e6cc:	6953      	ldr	r3, [r2, #20]
9000e6ce:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
9000e6d2:	2be0      	cmp	r3, #224	@ 0xe0
9000e6d4:	f43f af64 	beq.w	9000e5a0 <udp_input+0x10>
        pbuf_header_force(p, (s16_t)(ip_current_header_tot_len() + UDP_HLEN));
9000e6d8:	8991      	ldrh	r1, [r2, #12]
9000e6da:	4620      	mov	r0, r4
9000e6dc:	3108      	adds	r1, #8
9000e6de:	b209      	sxth	r1, r1
9000e6e0:	f7fd f8f8 	bl	9000b8d4 <pbuf_header_force>
        icmp_port_unreach(ip_current_is_v6(), p);
9000e6e4:	2103      	movs	r1, #3
9000e6e6:	4620      	mov	r0, r4
9000e6e8:	f7fb fe8c 	bl	9000a404 <icmp_dest_unreach>
9000e6ec:	e758      	b.n	9000e5a0 <udp_input+0x10>
9000e6ee:	bf00      	nop
9000e6f0:	20013ff4 	.word	0x20013ff4
9000e6f4:	2001a4d8 	.word	0x2001a4d8
9000e6f8:	20014008 	.word	0x20014008
9000e6fc:	20014004 	.word	0x20014004

9000e700 <udp_netif_ip_addr_changed>:
 *
 * @param old_addr IP address of the netif before change
 * @param new_addr IP address of the netif after change
 */
void udp_netif_ip_addr_changed(const ip_addr_t *old_addr, const ip_addr_t *new_addr)
{
9000e700:	b510      	push	{r4, lr}
  struct udp_pcb *upcb;

  if (!ip_addr_isany(old_addr) && !ip_addr_isany(new_addr)) {
9000e702:	b138      	cbz	r0, 9000e714 <udp_netif_ip_addr_changed+0x14>
9000e704:	6803      	ldr	r3, [r0, #0]
9000e706:	b12b      	cbz	r3, 9000e714 <udp_netif_ip_addr_changed+0x14>
9000e708:	b121      	cbz	r1, 9000e714 <udp_netif_ip_addr_changed+0x14>
9000e70a:	680b      	ldr	r3, [r1, #0]
9000e70c:	b113      	cbz	r3, 9000e714 <udp_netif_ip_addr_changed+0x14>
    for (upcb = udp_pcbs; upcb != NULL; upcb = upcb->next) {
9000e70e:	4b06      	ldr	r3, [pc, #24]	@ (9000e728 <udp_netif_ip_addr_changed+0x28>)
9000e710:	681b      	ldr	r3, [r3, #0]
9000e712:	b903      	cbnz	r3, 9000e716 <udp_netif_ip_addr_changed+0x16>
         * is set to bound to the new one instead */
        ip_addr_copy(upcb->local_ip, *new_addr);
      }
    }
  }
}
9000e714:	bd10      	pop	{r4, pc}
      if (ip_addr_cmp(&upcb->local_ip, old_addr)) {
9000e716:	681c      	ldr	r4, [r3, #0]
9000e718:	6802      	ldr	r2, [r0, #0]
9000e71a:	4294      	cmp	r4, r2
        ip_addr_copy(upcb->local_ip, *new_addr);
9000e71c:	bf04      	itt	eq
9000e71e:	680a      	ldreq	r2, [r1, #0]
9000e720:	601a      	streq	r2, [r3, #0]
    for (upcb = udp_pcbs; upcb != NULL; upcb = upcb->next) {
9000e722:	68db      	ldr	r3, [r3, #12]
9000e724:	e7f5      	b.n	9000e712 <udp_netif_ip_addr_changed+0x12>
9000e726:	bf00      	nop
9000e728:	2001a4d8 	.word	0x2001a4d8

9000e72c <ethernet_input>:
  u16_t next_hdr_offset = SIZEOF_ETH_HDR;
#endif /* LWIP_ARP || ETHARP_SUPPORT_VLAN */

  LWIP_ASSERT_CORE_LOCKED();

  if (p->len <= SIZEOF_ETH_HDR) {
9000e72c:	8943      	ldrh	r3, [r0, #10]
9000e72e:	2b0e      	cmp	r3, #14
{
9000e730:	b570      	push	{r4, r5, r6, lr}
9000e732:	4604      	mov	r4, r0
9000e734:	460d      	mov	r5, r1
  if (p->len <= SIZEOF_ETH_HDR) {
9000e736:	d91a      	bls.n	9000e76e <ethernet_input+0x42>
    ETHARP_STATS_INC(etharp.drop);
    MIB2_STATS_NETIF_INC(netif, ifinerrors);
    goto free_and_return;
  }

  if (p->if_idx == NETIF_NO_INDEX) {
9000e738:	7bc3      	ldrb	r3, [r0, #15]
9000e73a:	b91b      	cbnz	r3, 9000e744 <ethernet_input+0x18>
    p->if_idx = netif_get_index(netif);
9000e73c:	f891 3034 	ldrb.w	r3, [r1, #52]	@ 0x34
9000e740:	3301      	adds	r3, #1
9000e742:	73c3      	strb	r3, [r0, #15]
  }

  /* points to packet payload, which starts with an Ethernet header */
  ethhdr = (struct eth_hdr *)p->payload;
9000e744:	6860      	ldr	r0, [r4, #4]

#if LWIP_ARP_FILTER_NETIF
  netif = LWIP_ARP_FILTER_NETIF_FN(p, netif, lwip_htons(type));
#endif /* LWIP_ARP_FILTER_NETIF*/

  if (ethhdr->dest.addr[0] & 1) {
9000e746:	7803      	ldrb	r3, [r0, #0]
  type = ethhdr->type;
9000e748:	8986      	ldrh	r6, [r0, #12]
  if (ethhdr->dest.addr[0] & 1) {
9000e74a:	07d9      	lsls	r1, r3, #31
9000e74c:	d50a      	bpl.n	9000e764 <ethernet_input+0x38>
    /* this might be a multicast or broadcast packet */
    if (ethhdr->dest.addr[0] == LL_IP4_MULTICAST_ADDR_0) {
9000e74e:	2b01      	cmp	r3, #1
9000e750:	d111      	bne.n	9000e776 <ethernet_input+0x4a>
#if LWIP_IPV4
      if ((ethhdr->dest.addr[1] == LL_IP4_MULTICAST_ADDR_1) &&
9000e752:	7843      	ldrb	r3, [r0, #1]
9000e754:	b933      	cbnz	r3, 9000e764 <ethernet_input+0x38>
9000e756:	7883      	ldrb	r3, [r0, #2]
9000e758:	2b5e      	cmp	r3, #94	@ 0x5e
9000e75a:	d103      	bne.n	9000e764 <ethernet_input+0x38>
          (ethhdr->dest.addr[2] == LL_IP4_MULTICAST_ADDR_2)) {
        /* mark the pbuf as link-layer multicast */
        p->flags |= PBUF_FLAG_LLMCAST;
9000e75c:	7b63      	ldrb	r3, [r4, #13]
9000e75e:	f043 0310 	orr.w	r3, r3, #16
      p->flags |= PBUF_FLAG_LLMCAST;
    }
#endif /* LWIP_IPV6 */
    else if (eth_addr_cmp(&ethhdr->dest, &ethbroadcast)) {
      /* mark the pbuf as link-layer broadcast */
      p->flags |= PBUF_FLAG_LLBCAST;
9000e762:	7363      	strb	r3, [r4, #13]
    }
  }

  switch (type) {
9000e764:	2e08      	cmp	r6, #8
9000e766:	d010      	beq.n	9000e78a <ethernet_input+0x5e>
9000e768:	f5b6 6fc1 	cmp.w	r6, #1544	@ 0x608
9000e76c:	d01d      	beq.n	9000e7aa <ethernet_input+0x7e>
  /* This means the pbuf is freed or consumed,
     so the caller doesn't have to free it again */
  return ERR_OK;

free_and_return:
  pbuf_free(p);
9000e76e:	4620      	mov	r0, r4
9000e770:	f7fd f8b8 	bl	9000b8e4 <pbuf_free>
  return ERR_OK;
9000e774:	e017      	b.n	9000e7a6 <ethernet_input+0x7a>
    else if (eth_addr_cmp(&ethhdr->dest, &ethbroadcast)) {
9000e776:	2206      	movs	r2, #6
9000e778:	4913      	ldr	r1, [pc, #76]	@ (9000e7c8 <ethernet_input+0x9c>)
9000e77a:	f01a f864 	bl	90028846 <memcmp>
9000e77e:	2800      	cmp	r0, #0
9000e780:	d1f0      	bne.n	9000e764 <ethernet_input+0x38>
      p->flags |= PBUF_FLAG_LLBCAST;
9000e782:	7b63      	ldrb	r3, [r4, #13]
9000e784:	f043 0308 	orr.w	r3, r3, #8
9000e788:	e7eb      	b.n	9000e762 <ethernet_input+0x36>
      if (!(netif->flags & NETIF_FLAG_ETHARP)) {
9000e78a:	f895 3031 	ldrb.w	r3, [r5, #49]	@ 0x31
9000e78e:	071a      	lsls	r2, r3, #28
9000e790:	d5ed      	bpl.n	9000e76e <ethernet_input+0x42>
      if (pbuf_remove_header(p, next_hdr_offset)) {
9000e792:	210e      	movs	r1, #14
9000e794:	4620      	mov	r0, r4
9000e796:	f7fd f881 	bl	9000b89c <pbuf_remove_header>
9000e79a:	2800      	cmp	r0, #0
9000e79c:	d1e7      	bne.n	9000e76e <ethernet_input+0x42>
        ip4_input(p, netif);
9000e79e:	4629      	mov	r1, r5
9000e7a0:	4620      	mov	r0, r4
9000e7a2:	f7fb ffb5 	bl	9000a710 <ip4_input>
}
9000e7a6:	2000      	movs	r0, #0
9000e7a8:	bd70      	pop	{r4, r5, r6, pc}
      if (!(netif->flags & NETIF_FLAG_ETHARP)) {
9000e7aa:	f895 3031 	ldrb.w	r3, [r5, #49]	@ 0x31
9000e7ae:	071b      	lsls	r3, r3, #28
9000e7b0:	d5dd      	bpl.n	9000e76e <ethernet_input+0x42>
      if (pbuf_remove_header(p, next_hdr_offset)) {
9000e7b2:	210e      	movs	r1, #14
9000e7b4:	4620      	mov	r0, r4
9000e7b6:	f7fd f871 	bl	9000b89c <pbuf_remove_header>
9000e7ba:	2800      	cmp	r0, #0
9000e7bc:	d1d7      	bne.n	9000e76e <ethernet_input+0x42>
        etharp_input(p, netif);
9000e7be:	4629      	mov	r1, r5
9000e7c0:	4620      	mov	r0, r4
9000e7c2:	f7fb fb39 	bl	90009e38 <etharp_input>
      break;
9000e7c6:	e7ee      	b.n	9000e7a6 <ethernet_input+0x7a>
9000e7c8:	9002acde 	.word	0x9002acde

9000e7cc <ethernet_output>:
 * @return ERR_OK if the packet was sent, any other err_t on failure
 */
err_t
ethernet_output(struct netif * netif, struct pbuf * p,
                const struct eth_addr * src, const struct eth_addr * dst,
                u16_t eth_type) {
9000e7cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e7d0:	460c      	mov	r4, r1
9000e7d2:	4605      	mov	r5, r0
  struct eth_hdr *ethhdr;
  u16_t eth_type_be = lwip_htons(eth_type);
9000e7d4:	f8bd 0018 	ldrh.w	r0, [sp, #24]
                u16_t eth_type) {
9000e7d8:	4616      	mov	r6, r2
9000e7da:	461f      	mov	r7, r3
  u16_t eth_type_be = lwip_htons(eth_type);
9000e7dc:	f7fc fc6a 	bl	9000b0b4 <lwip_htons>

    eth_type_be = PP_HTONS(ETHTYPE_VLAN);
  } else
#endif /* ETHARP_SUPPORT_VLAN && defined(LWIP_HOOK_VLAN_SET) */
  {
    if (pbuf_add_header(p, SIZEOF_ETH_HDR) != 0) {
9000e7e0:	210e      	movs	r1, #14
  u16_t eth_type_be = lwip_htons(eth_type);
9000e7e2:	4680      	mov	r8, r0
    if (pbuf_add_header(p, SIZEOF_ETH_HDR) != 0) {
9000e7e4:	4620      	mov	r0, r4
9000e7e6:	f7fd f855 	bl	9000b894 <pbuf_add_header>
9000e7ea:	b988      	cbnz	r0, 9000e810 <ethernet_output+0x44>
    }
  }

  LWIP_ASSERT_CORE_LOCKED();

  ethhdr = (struct eth_hdr *)p->payload;
9000e7ec:	6861      	ldr	r1, [r4, #4]
              (netif->hwaddr_len == ETH_HWADDR_LEN));
  LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE,
              ("ethernet_output: sending packet %p\n", (void *)p));

  /* send the packet */
  return netif->linkoutput(netif, p);
9000e7ee:	4628      	mov	r0, r5
  ethhdr->type = eth_type_be;
9000e7f0:	f8a1 800c 	strh.w	r8, [r1, #12]
  SMEMCPY(&ethhdr->dest, dst, ETH_HWADDR_LEN);
9000e7f4:	683b      	ldr	r3, [r7, #0]
9000e7f6:	600b      	str	r3, [r1, #0]
9000e7f8:	88bb      	ldrh	r3, [r7, #4]
9000e7fa:	808b      	strh	r3, [r1, #4]
  SMEMCPY(&ethhdr->src,  src, ETH_HWADDR_LEN);
9000e7fc:	6833      	ldr	r3, [r6, #0]
9000e7fe:	f8c1 3006 	str.w	r3, [r1, #6]
9000e802:	88b3      	ldrh	r3, [r6, #4]
9000e804:	814b      	strh	r3, [r1, #10]
  return netif->linkoutput(netif, p);
9000e806:	4621      	mov	r1, r4
9000e808:	69ab      	ldr	r3, [r5, #24]
pbuf_header_failed:
  LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS,
              ("ethernet_output: could not allocate room for header.\n"));
  LINK_STATS_INC(link.lenerr);
  return ERR_BUF;
}
9000e80a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  return netif->linkoutput(netif, p);
9000e80e:	4718      	bx	r3
}
9000e810:	f06f 0001 	mvn.w	r0, #1
9000e814:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000e818 <fs_open>:
#endif /* LWIP_HTTPD_CUSTOM_FILES */

/*-----------------------------------------------------------------------------------*/
err_t
fs_open(struct fs_file *file, const char *name)
{
9000e818:	b570      	push	{r4, r5, r6, lr}
9000e81a:	460e      	mov	r6, r1
  const struct fsdata_file *f;

  if ((file == NULL) || (name == NULL)) {
9000e81c:	4604      	mov	r4, r0
9000e81e:	b1a8      	cbz	r0, 9000e84c <fs_open+0x34>
9000e820:	b1a1      	cbz	r1, 9000e84c <fs_open+0x34>
    return ERR_OK;
  }
  file->is_custom_file = 0;
#endif /* LWIP_HTTPD_CUSTOM_FILES */

  for (f = FS_ROOT; f != NULL; f = f->next) {
9000e822:	4d0c      	ldr	r5, [pc, #48]	@ (9000e854 <fs_open+0x3c>)
    if (!strcmp(name, (const char *)f->name)) {
9000e824:	6869      	ldr	r1, [r5, #4]
9000e826:	4630      	mov	r0, r6
9000e828:	f7f1 fcf2 	bl	90000210 <strcmp>
9000e82c:	b940      	cbnz	r0, 9000e840 <fs_open+0x28>
      file->data = (const char *)f->data;
9000e82e:	68ab      	ldr	r3, [r5, #8]
9000e830:	6023      	str	r3, [r4, #0]
      file->len = f->len;
9000e832:	68eb      	ldr	r3, [r5, #12]
      file->index = f->len;
      file->pextension = NULL;
9000e834:	60e0      	str	r0, [r4, #12]
      file->index = f->len;
9000e836:	e9c4 3301 	strd	r3, r3, [r4, #4]
      file->flags = f->flags;
9000e83a:	7c2b      	ldrb	r3, [r5, #16]
9000e83c:	7423      	strb	r3, [r4, #16]
      return ERR_OK;
    }
  }
  /* file not found */
  return ERR_VAL;
}
9000e83e:	bd70      	pop	{r4, r5, r6, pc}
  for (f = FS_ROOT; f != NULL; f = f->next) {
9000e840:	682d      	ldr	r5, [r5, #0]
9000e842:	2d00      	cmp	r5, #0
9000e844:	d1ee      	bne.n	9000e824 <fs_open+0xc>
  return ERR_VAL;
9000e846:	f06f 0005 	mvn.w	r0, #5
9000e84a:	e7f8      	b.n	9000e83e <fs_open+0x26>
    return ERR_ARG;
9000e84c:	f06f 000f 	mvn.w	r0, #15
9000e850:	e7f5      	b.n	9000e83e <fs_open+0x26>
9000e852:	bf00      	nop
9000e854:	9002ace4 	.word	0x9002ace4

9000e858 <fs_close>:
#endif /* LWIP_HTTPD_CUSTOM_FILES */
#if LWIP_HTTPD_FILE_STATE
  fs_state_free(file, file->state);
#endif /* #if LWIP_HTTPD_FILE_STATE */
  LWIP_UNUSED_ARG(file);
}
9000e858:	4770      	bx	lr

9000e85a <fs_bytes_left>:
#endif /* LWIP_HTTPD_FS_ASYNC_READ */
/*-----------------------------------------------------------------------------------*/
int
fs_bytes_left(struct fs_file *file)
{
  return file->len - file->index;
9000e85a:	e9d0 2001 	ldrd	r2, r0, [r0, #4]
}
9000e85e:	1a10      	subs	r0, r2, r0
9000e860:	4770      	bx	lr

9000e862 <http_write>:
 * @param apiflags directly passed to tcp_write
 * @return the return value of tcp_write
 */
static err_t
http_write(struct altcp_pcb *pcb, const void *ptr, u16_t *length, u8_t apiflags)
{
9000e862:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e866:	4698      	mov	r8, r3
  u16_t len, max_len;
  err_t err;
  LWIP_ASSERT("length != NULL", length != NULL);
  len = *length;
9000e868:	8813      	ldrh	r3, [r2, #0]
{
9000e86a:	4605      	mov	r5, r0
9000e86c:	460f      	mov	r7, r1
9000e86e:	4616      	mov	r6, r2
  if (len == 0) {
9000e870:	b913      	cbnz	r3, 9000e878 <http_write+0x16>
    return ERR_OK;
9000e872:	2000      	movs	r0, #0
     request */
  altcp_nagle_enable(pcb);
#endif

  return err;
}
9000e874:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  max_len = HTTPD_MAX_WRITE_LEN(pcb);
9000e878:	8e44      	ldrh	r4, [r0, #50]	@ 0x32
9000e87a:	0064      	lsls	r4, r4, #1
  if (len > max_len) {
9000e87c:	b2a4      	uxth	r4, r4
9000e87e:	429c      	cmp	r4, r3
9000e880:	bf28      	it	cs
9000e882:	461c      	movcs	r4, r3
9000e884:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
9000e888:	429c      	cmp	r4, r3
9000e88a:	bf28      	it	cs
9000e88c:	461c      	movcs	r4, r3
    err = altcp_write(pcb, ptr, len, apiflags);
9000e88e:	4643      	mov	r3, r8
9000e890:	4622      	mov	r2, r4
9000e892:	4639      	mov	r1, r7
9000e894:	4628      	mov	r0, r5
9000e896:	f7ff f815 	bl	9000d8c4 <tcp_write>
    if (err == ERR_MEM) {
9000e89a:	1c43      	adds	r3, r0, #1
9000e89c:	d10c      	bne.n	9000e8b8 <http_write+0x56>
      if ((altcp_sndbuf(pcb) == 0) ||
9000e89e:	f8b5 3064 	ldrh.w	r3, [r5, #100]	@ 0x64
9000e8a2:	b133      	cbz	r3, 9000e8b2 <http_write+0x50>
9000e8a4:	f8b5 3066 	ldrh.w	r3, [r5, #102]	@ 0x66
9000e8a8:	2b07      	cmp	r3, #7
9000e8aa:	d802      	bhi.n	9000e8b2 <http_write+0x50>
        len /= 2;
9000e8ac:	0864      	lsrs	r4, r4, #1
  } while ((err == ERR_MEM) && (len > 1));
9000e8ae:	2c01      	cmp	r4, #1
9000e8b0:	d8ed      	bhi.n	9000e88e <http_write+0x2c>
    *length = 0;
9000e8b2:	2300      	movs	r3, #0
9000e8b4:	8033      	strh	r3, [r6, #0]
9000e8b6:	e7dd      	b.n	9000e874 <http_write+0x12>
  if (err == ERR_OK) {
9000e8b8:	2800      	cmp	r0, #0
9000e8ba:	d1fa      	bne.n	9000e8b2 <http_write+0x50>
    *length = len;
9000e8bc:	8034      	strh	r4, [r6, #0]
9000e8be:	e7d8      	b.n	9000e872 <http_write+0x10>

9000e8c0 <http_state_eof>:
{
9000e8c0:	b510      	push	{r4, lr}
9000e8c2:	4604      	mov	r4, r0
  if (hs->handle) {
9000e8c4:	6940      	ldr	r0, [r0, #20]
9000e8c6:	b118      	cbz	r0, 9000e8d0 <http_state_eof+0x10>
    fs_close(hs->handle);
9000e8c8:	f7ff ffc6 	bl	9000e858 <fs_close>
    hs->handle = NULL;
9000e8cc:	2300      	movs	r3, #0
9000e8ce:	6163      	str	r3, [r4, #20]
  if (hs->ssi) {
9000e8d0:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000e8d2:	b118      	cbz	r0, 9000e8dc <http_state_eof+0x1c>
    HTTP_FREE_SSI_STATE(ssi);
9000e8d4:	f7fc fcfc 	bl	9000b2d0 <mem_free>
    hs->ssi = NULL;
9000e8d8:	2300      	movs	r3, #0
9000e8da:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (hs->req) {
9000e8dc:	6a20      	ldr	r0, [r4, #32]
9000e8de:	b118      	cbz	r0, 9000e8e8 <http_state_eof+0x28>
    pbuf_free(hs->req);
9000e8e0:	f7fd f800 	bl	9000b8e4 <pbuf_free>
    hs->req = NULL;
9000e8e4:	2300      	movs	r3, #0
9000e8e6:	6223      	str	r3, [r4, #32]
}
9000e8e8:	bd10      	pop	{r4, pc}
	...

9000e8ec <http_get_404_file>:
 * @param uri pointer that receives the actual file name URI
 * @return file struct for the error page or NULL no matching file was found
 */
static struct fs_file *
http_get_404_file(struct http_state *hs, const char **uri)
{
9000e8ec:	b538      	push	{r3, r4, r5, lr}
9000e8ee:	460d      	mov	r5, r1
  err_t err;

  *uri = "/404.html";
9000e8f0:	490a      	ldr	r1, [pc, #40]	@ (9000e91c <http_get_404_file+0x30>)
  err = fs_open(&hs->file_handle, *uri);
9000e8f2:	4604      	mov	r4, r0
  *uri = "/404.html";
9000e8f4:	6029      	str	r1, [r5, #0]
  err = fs_open(&hs->file_handle, *uri);
9000e8f6:	f7ff ff8f 	bl	9000e818 <fs_open>
  if (err != ERR_OK) {
9000e8fa:	b168      	cbz	r0, 9000e918 <http_get_404_file+0x2c>
    /* 404.html doesn't exist. Try 404.htm instead. */
    *uri = "/404.htm";
9000e8fc:	4908      	ldr	r1, [pc, #32]	@ (9000e920 <http_get_404_file+0x34>)
    err = fs_open(&hs->file_handle, *uri);
9000e8fe:	4620      	mov	r0, r4
    *uri = "/404.htm";
9000e900:	6029      	str	r1, [r5, #0]
    err = fs_open(&hs->file_handle, *uri);
9000e902:	f7ff ff89 	bl	9000e818 <fs_open>
    if (err != ERR_OK) {
9000e906:	b138      	cbz	r0, 9000e918 <http_get_404_file+0x2c>
      /* 404.htm doesn't exist either. Try 404.shtml instead. */
      *uri = "/404.shtml";
9000e908:	4906      	ldr	r1, [pc, #24]	@ (9000e924 <http_get_404_file+0x38>)
      err = fs_open(&hs->file_handle, *uri);
9000e90a:	4620      	mov	r0, r4
      *uri = "/404.shtml";
9000e90c:	6029      	str	r1, [r5, #0]
      err = fs_open(&hs->file_handle, *uri);
9000e90e:	f7ff ff83 	bl	9000e818 <fs_open>
      if (err != ERR_OK) {
9000e912:	b108      	cbz	r0, 9000e918 <http_get_404_file+0x2c>
        /* 404.htm doesn't exist either. Indicate to the caller that it should
         * send back a default 404 page.
         */
        *uri = NULL;
9000e914:	2400      	movs	r4, #0
9000e916:	602c      	str	r4, [r5, #0]
      }
    }
  }

  return &hs->file_handle;
}
9000e918:	4620      	mov	r0, r4
9000e91a:	bd38      	pop	{r3, r4, r5, pc}
9000e91c:	9002a4b0 	.word	0x9002a4b0
9000e920:	9002a4ba 	.word	0x9002a4ba
9000e924:	9002a4c3 	.word	0x9002a4c3

9000e928 <http_accept>:
/**
 * A new incoming connection has been accepted.
 */
static err_t
http_accept(void *arg, struct altcp_pcb *pcb, err_t err)
{
9000e928:	b570      	push	{r4, r5, r6, lr}
9000e92a:	460c      	mov	r4, r1
  struct http_state *hs;
  LWIP_UNUSED_ARG(err);
  LWIP_UNUSED_ARG(arg);
  LWIP_DEBUGF(HTTPD_DEBUG, ("http_accept %p / %p\n", (void *)pcb, arg));

  if ((err != ERR_OK) || (pcb == NULL)) {
9000e92c:	4615      	mov	r5, r2
9000e92e:	bb2a      	cbnz	r2, 9000e97c <http_accept+0x54>
9000e930:	b321      	cbz	r1, 9000e97c <http_accept+0x54>
    return ERR_VAL;
  }

  /* Set priority */
  altcp_setprio(pcb, HTTPD_TCP_PRIO);
9000e932:	2101      	movs	r1, #1
9000e934:	4620      	mov	r0, r4
9000e936:	f7fd faad 	bl	9000be94 <tcp_setprio>
  struct http_state *ret = HTTP_ALLOC_HTTP_STATE();
9000e93a:	20b0      	movs	r0, #176	@ 0xb0
9000e93c:	f7fc fd90 	bl	9000b460 <mem_malloc>
  if (ret != NULL) {
9000e940:	4606      	mov	r6, r0
9000e942:	b1f0      	cbz	r0, 9000e982 <http_accept+0x5a>
  memset(hs, 0, sizeof(struct http_state));
9000e944:	22b0      	movs	r2, #176	@ 0xb0
9000e946:	4629      	mov	r1, r5
9000e948:	f019 ff8d 	bl	90028866 <memset>
  }
  hs->pcb = pcb;

  /* Tell TCP that this is the structure we wish to be passed for our
     callbacks. */
  altcp_arg(pcb, hs);
9000e94c:	4631      	mov	r1, r6
9000e94e:	4620      	mov	r0, r4
  hs->pcb = pcb;
9000e950:	61f4      	str	r4, [r6, #28]
  altcp_arg(pcb, hs);
9000e952:	f7fd faa7 	bl	9000bea4 <tcp_arg>

  /* Set up the various callback functions */
  altcp_recv(pcb, http_recv);
9000e956:	490c      	ldr	r1, [pc, #48]	@ (9000e988 <http_accept+0x60>)
9000e958:	4620      	mov	r0, r4
9000e95a:	f7fd faa6 	bl	9000beaa <tcp_recv>
  altcp_err(pcb, http_err);
9000e95e:	490b      	ldr	r1, [pc, #44]	@ (9000e98c <http_accept+0x64>)
9000e960:	4620      	mov	r0, r4
9000e962:	f7fd faa9 	bl	9000beb8 <tcp_err>
  altcp_poll(pcb, http_poll, HTTPD_POLL_INTERVAL);
9000e966:	490a      	ldr	r1, [pc, #40]	@ (9000e990 <http_accept+0x68>)
9000e968:	4620      	mov	r0, r4
9000e96a:	2204      	movs	r2, #4
9000e96c:	f7fd faae 	bl	9000becc <tcp_poll>
  altcp_sent(pcb, http_sent);
9000e970:	4908      	ldr	r1, [pc, #32]	@ (9000e994 <http_accept+0x6c>)
9000e972:	4620      	mov	r0, r4
9000e974:	f7fd fa9d 	bl	9000beb2 <tcp_sent>

  return ERR_OK;
}
9000e978:	4628      	mov	r0, r5
9000e97a:	bd70      	pop	{r4, r5, r6, pc}
    return ERR_VAL;
9000e97c:	f06f 0505 	mvn.w	r5, #5
9000e980:	e7fa      	b.n	9000e978 <http_accept+0x50>
    return ERR_MEM;
9000e982:	f04f 35ff 	mov.w	r5, #4294967295
9000e986:	e7f7      	b.n	9000e978 <http_accept+0x50>
9000e988:	9000ee51 	.word	0x9000ee51
9000e98c:	9000e999 	.word	0x9000e999
9000e990:	9000ee15 	.word	0x9000ee15
9000e994:	9000edfd 	.word	0x9000edfd

9000e998 <http_err>:
{
9000e998:	b510      	push	{r4, lr}
  if (hs != NULL) {
9000e99a:	4604      	mov	r4, r0
9000e99c:	b130      	cbz	r0, 9000e9ac <http_err+0x14>
    http_state_eof(hs);
9000e99e:	f7ff ff8f 	bl	9000e8c0 <http_state_eof>
    HTTP_FREE_HTTP_STATE(hs);
9000e9a2:	4620      	mov	r0, r4
}
9000e9a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HTTP_FREE_HTTP_STATE(hs);
9000e9a8:	f7fc bc92 	b.w	9000b2d0 <mem_free>
}
9000e9ac:	bd10      	pop	{r4, pc}
	...

9000e9b0 <http_close_conn.isra.0>:
http_close_conn(struct altcp_pcb *pcb, struct http_state *hs)
9000e9b0:	b538      	push	{r3, r4, r5, lr}
9000e9b2:	4604      	mov	r4, r0
9000e9b4:	460d      	mov	r5, r1
  altcp_arg(pcb, NULL);
9000e9b6:	2100      	movs	r1, #0
9000e9b8:	f7fd fa74 	bl	9000bea4 <tcp_arg>
  altcp_recv(pcb, NULL);
9000e9bc:	2100      	movs	r1, #0
9000e9be:	4620      	mov	r0, r4
9000e9c0:	f7fd fa73 	bl	9000beaa <tcp_recv>
  altcp_err(pcb, NULL);
9000e9c4:	2100      	movs	r1, #0
9000e9c6:	4620      	mov	r0, r4
9000e9c8:	f7fd fa76 	bl	9000beb8 <tcp_err>
  altcp_poll(pcb, NULL, 0);
9000e9cc:	2200      	movs	r2, #0
9000e9ce:	4620      	mov	r0, r4
9000e9d0:	4611      	mov	r1, r2
9000e9d2:	f7fd fa7b 	bl	9000becc <tcp_poll>
  altcp_sent(pcb, NULL);
9000e9d6:	2100      	movs	r1, #0
9000e9d8:	4620      	mov	r0, r4
9000e9da:	f7fd fa6a 	bl	9000beb2 <tcp_sent>
  if (hs != NULL) {
9000e9de:	b12d      	cbz	r5, 9000e9ec <http_close_conn.isra.0+0x3c>
    http_state_eof(hs);
9000e9e0:	4628      	mov	r0, r5
9000e9e2:	f7ff ff6d 	bl	9000e8c0 <http_state_eof>
    HTTP_FREE_HTTP_STATE(hs);
9000e9e6:	4628      	mov	r0, r5
9000e9e8:	f7fc fc72 	bl	9000b2d0 <mem_free>
  err = altcp_close(pcb);
9000e9ec:	4620      	mov	r0, r4
9000e9ee:	f7fd fcd5 	bl	9000c39c <tcp_close>
  if (err != ERR_OK) {
9000e9f2:	b130      	cbz	r0, 9000ea02 <http_close_conn.isra.0+0x52>
    altcp_poll(pcb, http_poll, HTTPD_POLL_INTERVAL);
9000e9f4:	4620      	mov	r0, r4
9000e9f6:	2204      	movs	r2, #4
9000e9f8:	4902      	ldr	r1, [pc, #8]	@ (9000ea04 <http_close_conn.isra.0+0x54>)
}
9000e9fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    altcp_poll(pcb, http_poll, HTTPD_POLL_INTERVAL);
9000e9fe:	f7fd ba65 	b.w	9000becc <tcp_poll>
}
9000ea02:	bd38      	pop	{r3, r4, r5, pc}
9000ea04:	9000ee15 	.word	0x9000ee15

9000ea08 <http_send>:
{
9000ea08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ea0c:	4680      	mov	r8, r0
9000ea0e:	b087      	sub	sp, #28
  if (hs == NULL) {
9000ea10:	460d      	mov	r5, r1
9000ea12:	b139      	cbz	r1, 9000ea24 <http_send+0x1c>
  if (hs->left == 0) {
9000ea14:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
9000ea16:	b973      	cbnz	r3, 9000ea36 <http_send+0x2e>
  if (hs->handle == NULL) {
9000ea18:	6948      	ldr	r0, [r1, #20]
9000ea1a:	b940      	cbnz	r0, 9000ea2e <http_send+0x26>
    http_close_conn(pcb, hs);
9000ea1c:	4629      	mov	r1, r5
9000ea1e:	4640      	mov	r0, r8
9000ea20:	f7ff ffc6 	bl	9000e9b0 <http_close_conn.isra.0>
    return 0;
9000ea24:	2700      	movs	r7, #0
}
9000ea26:	4638      	mov	r0, r7
9000ea28:	b007      	add	sp, #28
9000ea2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  bytes_left = fs_bytes_left(hs->handle);
9000ea2e:	f7ff ff14 	bl	9000e85a <fs_bytes_left>
  if (bytes_left <= 0) {
9000ea32:	2800      	cmp	r0, #0
9000ea34:	ddf2      	ble.n	9000ea1c <http_send+0x14>
  if (hs->ssi) {
9000ea36:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
  if (ssi->parsed > hs->file) {
9000ea38:	69a9      	ldr	r1, [r5, #24]
  if (hs->ssi) {
9000ea3a:	2c00      	cmp	r4, #0
9000ea3c:	f000 81bd 	beq.w	9000edba <http_send+0x3b2>
  len = altcp_sndbuf(pcb);
9000ea40:	f8b8 3064 	ldrh.w	r3, [r8, #100]	@ 0x64
9000ea44:	f8ad 3016 	strh.w	r3, [sp, #22]
  if (ssi->parsed > hs->file) {
9000ea48:	6823      	ldr	r3, [r4, #0]
9000ea4a:	428b      	cmp	r3, r1
9000ea4c:	d82a      	bhi.n	9000eaa4 <http_send+0x9c>
  u8_t data_to_send = 0;
9000ea4e:	2700      	movs	r7, #0
  err_t err = ERR_OK;
9000ea50:	463e      	mov	r6, r7
  while (((ssi->tag_state == TAG_SENDING) || ssi->parse_left) && (err == ERR_OK)) {
9000ea52:	f894 30dc 	ldrb.w	r3, [r4, #220]	@ 0xdc
    if (len == 0) {
9000ea56:	f8bd 2016 	ldrh.w	r2, [sp, #22]
  while (((ssi->tag_state == TAG_SENDING) || ssi->parse_left) && (err == ERR_OK)) {
9000ea5a:	2b04      	cmp	r3, #4
9000ea5c:	d001      	beq.n	9000ea62 <http_send+0x5a>
9000ea5e:	68a1      	ldr	r1, [r4, #8]
9000ea60:	b119      	cbz	r1, 9000ea6a <http_send+0x62>
9000ea62:	2e00      	cmp	r6, #0
9000ea64:	d046      	beq.n	9000eaf4 <http_send+0xec>
  if ((ssi->tag_state != TAG_SENDING) && (ssi->parsed > hs->file)) {
9000ea66:	2b04      	cmp	r3, #4
9000ea68:	d039      	beq.n	9000eade <http_send+0xd6>
9000ea6a:	6823      	ldr	r3, [r4, #0]
9000ea6c:	69a9      	ldr	r1, [r5, #24]
9000ea6e:	428b      	cmp	r3, r1
9000ea70:	d935      	bls.n	9000eade <http_send+0xd6>
      len = (u16_t)LWIP_MIN(ssi->parsed - hs->file, 0xffff);
9000ea72:	1a5b      	subs	r3, r3, r1
9000ea74:	f64f 72ff 	movw	r2, #65535	@ 0xffff
    err = http_write(pcb, hs->file, &len, HTTP_IS_DATA_VOLATILE(hs));
9000ea78:	4640      	mov	r0, r8
      len = (u16_t)LWIP_MIN(ssi->parsed - hs->file, 0xffff);
9000ea7a:	4293      	cmp	r3, r2
9000ea7c:	bfa8      	it	ge
9000ea7e:	4613      	movge	r3, r2
    err = http_write(pcb, hs->file, &len, HTTP_IS_DATA_VOLATILE(hs));
9000ea80:	f10d 0216 	add.w	r2, sp, #22
      len = (u16_t)LWIP_MIN(ssi->parsed - hs->file, 0xffff);
9000ea84:	f8ad 3016 	strh.w	r3, [sp, #22]
    err = http_write(pcb, hs->file, &len, HTTP_IS_DATA_VOLATILE(hs));
9000ea88:	2300      	movs	r3, #0
9000ea8a:	f7ff feea 	bl	9000e862 <http_write>
    if (err == ERR_OK) {
9000ea8e:	bb30      	cbnz	r0, 9000eade <http_send+0xd6>
    hs->file += len;
9000ea90:	f8bd 2016 	ldrh.w	r2, [sp, #22]
    data_to_send = 1;
9000ea94:	2701      	movs	r7, #1
    hs->file += len;
9000ea96:	69ab      	ldr	r3, [r5, #24]
9000ea98:	4413      	add	r3, r2
9000ea9a:	61ab      	str	r3, [r5, #24]
    hs->left -= len;
9000ea9c:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000ea9e:	1a9b      	subs	r3, r3, r2
9000eaa0:	626b      	str	r3, [r5, #36]	@ 0x24
9000eaa2:	e01c      	b.n	9000eade <http_send+0xd6>
    len = (u16_t)LWIP_MIN(ssi->parsed - hs->file, 0xffff);
9000eaa4:	1a5b      	subs	r3, r3, r1
9000eaa6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
    err = http_write(pcb, hs->file, &len, HTTP_IS_DATA_VOLATILE(hs));
9000eaaa:	4640      	mov	r0, r8
    len = (u16_t)LWIP_MIN(ssi->parsed - hs->file, 0xffff);
9000eaac:	4293      	cmp	r3, r2
9000eaae:	bfa8      	it	ge
9000eab0:	4613      	movge	r3, r2
    err = http_write(pcb, hs->file, &len, HTTP_IS_DATA_VOLATILE(hs));
9000eab2:	f10d 0216 	add.w	r2, sp, #22
    len = (u16_t)LWIP_MIN(ssi->parsed - hs->file, 0xffff);
9000eab6:	f8ad 3016 	strh.w	r3, [sp, #22]
    err = http_write(pcb, hs->file, &len, HTTP_IS_DATA_VOLATILE(hs));
9000eaba:	2300      	movs	r3, #0
9000eabc:	f7ff fed1 	bl	9000e862 <http_write>
    if (err == ERR_OK) {
9000eac0:	4606      	mov	r6, r0
9000eac2:	b9a8      	cbnz	r0, 9000eaf0 <http_send+0xe8>
      hs->file += len;
9000eac4:	f8bd 2016 	ldrh.w	r2, [sp, #22]
      data_to_send = 1;
9000eac8:	2701      	movs	r7, #1
      hs->file += len;
9000eaca:	69ab      	ldr	r3, [r5, #24]
9000eacc:	4413      	add	r3, r2
9000eace:	61ab      	str	r3, [r5, #24]
      hs->left -= len;
9000ead0:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000ead2:	1a9b      	subs	r3, r3, r2
9000ead4:	626b      	str	r3, [r5, #36]	@ 0x24
    if (altcp_sndbuf(pcb) == 0) {
9000ead6:	f8b8 3064 	ldrh.w	r3, [r8, #100]	@ 0x64
9000eada:	2b00      	cmp	r3, #0
9000eadc:	d1b9      	bne.n	9000ea52 <http_send+0x4a>
  if ((hs->left == 0) && (fs_bytes_left(hs->handle) <= 0)) {
9000eade:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000eae0:	2b00      	cmp	r3, #0
9000eae2:	d1a0      	bne.n	9000ea26 <http_send+0x1e>
9000eae4:	6968      	ldr	r0, [r5, #20]
9000eae6:	f7ff feb8 	bl	9000e85a <fs_bytes_left>
9000eaea:	2800      	cmp	r0, #0
9000eaec:	dc9b      	bgt.n	9000ea26 <http_send+0x1e>
9000eaee:	e795      	b.n	9000ea1c <http_send+0x14>
  u8_t data_to_send = 0;
9000eaf0:	2700      	movs	r7, #0
9000eaf2:	e7f0      	b.n	9000ead6 <http_send+0xce>
    if (len == 0) {
9000eaf4:	2a00      	cmp	r2, #0
9000eaf6:	d0f2      	beq.n	9000eade <http_send+0xd6>
    switch (ssi->tag_state) {
9000eaf8:	2b04      	cmp	r3, #4
9000eafa:	d8b0      	bhi.n	9000ea5e <http_send+0x56>
9000eafc:	e8df f013 	tbh	[pc, r3, lsl #1]
9000eb00:	00170005 	.word	0x00170005
9000eb04:	00810032 	.word	0x00810032
9000eb08:	0132      	.short	0x0132
          if (*ssi->parsed == http_ssi_tag_desc[tag_type].lead_in[0]) {
9000eb0a:	6822      	ldr	r2, [r4, #0]
9000eb0c:	7811      	ldrb	r1, [r2, #0]
9000eb0e:	293c      	cmp	r1, #60	@ 0x3c
9000eb10:	d002      	beq.n	9000eb18 <http_send+0x110>
9000eb12:	292f      	cmp	r1, #47	@ 0x2f
9000eb14:	d105      	bne.n	9000eb22 <http_send+0x11a>
        for (tag_type = 0; tag_type < LWIP_ARRAYSIZE(http_ssi_tag_desc); tag_type++) {
9000eb16:	2301      	movs	r3, #1
            ssi->tag_type = tag_type;
9000eb18:	7423      	strb	r3, [r4, #16]
            ssi->tag_state = TAG_LEADIN;
9000eb1a:	2301      	movs	r3, #1
9000eb1c:	f884 30dc 	strb.w	r3, [r4, #220]	@ 0xdc
            ssi->tag_index = 1;
9000eb20:	81a3      	strh	r3, [r4, #12]
        ssi->parse_left--;
9000eb22:	68a3      	ldr	r3, [r4, #8]
        ssi->parsed++;
9000eb24:	3201      	adds	r2, #1
        ssi->parse_left--;
9000eb26:	3b01      	subs	r3, #1
        ssi->parsed++;
9000eb28:	6022      	str	r2, [r4, #0]
        ssi->parse_left--;
9000eb2a:	60a3      	str	r3, [r4, #8]
        break;
9000eb2c:	e791      	b.n	9000ea52 <http_send+0x4a>
        if (http_ssi_tag_desc[ssi->tag_type].lead_in[ssi->tag_index] == 0) {
9000eb2e:	49ac      	ldr	r1, [pc, #688]	@ (9000ede0 <http_send+0x3d8>)
9000eb30:	7c23      	ldrb	r3, [r4, #16]
9000eb32:	89a2      	ldrh	r2, [r4, #12]
9000eb34:	f851 3033 	ldr.w	r3, [r1, r3, lsl #3]
9000eb38:	5c99      	ldrb	r1, [r3, r2]
9000eb3a:	b921      	cbnz	r1, 9000eb46 <http_send+0x13e>
          ssi->tag_state = TAG_FOUND;
9000eb3c:	2302      	movs	r3, #2
          ssi->tag_index = 0;
9000eb3e:	81a1      	strh	r1, [r4, #12]
              ssi->tag_state = TAG_NONE;
9000eb40:	f884 30dc 	strb.w	r3, [r4, #220]	@ 0xdc
9000eb44:	e785      	b.n	9000ea52 <http_send+0x4a>
          if (*ssi->parsed == http_ssi_tag_desc[ssi->tag_type].lead_in[ssi->tag_index]) {
9000eb46:	6823      	ldr	r3, [r4, #0]
9000eb48:	7818      	ldrb	r0, [r3, #0]
          ssi->parsed++;
9000eb4a:	3301      	adds	r3, #1
          if (*ssi->parsed == http_ssi_tag_desc[ssi->tag_type].lead_in[ssi->tag_index]) {
9000eb4c:	4288      	cmp	r0, r1
          ssi->parsed++;
9000eb4e:	6023      	str	r3, [r4, #0]
            ssi->tag_index++;
9000eb50:	bf0b      	itete	eq
9000eb52:	3201      	addeq	r2, #1
            ssi->tag_state = TAG_NONE;
9000eb54:	2200      	movne	r2, #0
            ssi->tag_index++;
9000eb56:	81a2      	strheq	r2, [r4, #12]
            ssi->tag_state = TAG_NONE;
9000eb58:	f884 20dc 	strbne.w	r2, [r4, #220]	@ 0xdc
          ssi->parse_left--;
9000eb5c:	68a2      	ldr	r2, [r4, #8]
9000eb5e:	3a01      	subs	r2, #1
9000eb60:	60a2      	str	r2, [r4, #8]
          ssi->parsed++;
9000eb62:	e776      	b.n	9000ea52 <http_send+0x4a>
          if (*ssi->parsed == http_ssi_tag_desc[tag_type].lead_in[0]) {
9000eb64:	f8d4 c000 	ldr.w	ip, [r4]
          ssi->parse_left--;
9000eb68:	68a1      	ldr	r1, [r4, #8]
          if (*ssi->parsed == http_ssi_tag_desc[tag_type].lead_in[0]) {
9000eb6a:	4660      	mov	r0, ip
        if ((ssi->tag_index == 0) && ((*ssi->parsed == ' ') ||
9000eb6c:	89a3      	ldrh	r3, [r4, #12]
          ssi->parse_left--;
9000eb6e:	f101 3aff 	add.w	sl, r1, #4294967295
          if (*ssi->parsed == http_ssi_tag_desc[tag_type].lead_in[0]) {
9000eb72:	f810 2b01 	ldrb.w	r2, [r0], #1
        if ((ssi->tag_index == 0) && ((*ssi->parsed == ' ') ||
9000eb76:	b983      	cbnz	r3, 9000eb9a <http_send+0x192>
9000eb78:	f1a2 0e09 	sub.w	lr, r2, #9
9000eb7c:	fa5f fe8e 	uxtb.w	lr, lr
9000eb80:	f1be 0f17 	cmp.w	lr, #23
9000eb84:	d809      	bhi.n	9000eb9a <http_send+0x192>
9000eb86:	4997      	ldr	r1, [pc, #604]	@ (9000ede4 <http_send+0x3dc>)
9000eb88:	fa21 fe0e 	lsr.w	lr, r1, lr
9000eb8c:	f01e 0f01 	tst.w	lr, #1
9000eb90:	d003      	beq.n	9000eb9a <http_send+0x192>
        ssi->parse_left--;
9000eb92:	f8c4 a008 	str.w	sl, [r4, #8]
        ssi->parsed++;
9000eb96:	6020      	str	r0, [r4, #0]
        break;
9000eb98:	e75b      	b.n	9000ea52 <http_send+0x4a>
        if ((*ssi->parsed == http_ssi_tag_desc[ssi->tag_type].lead_out[0]) ||
9000eb9a:	f894 e010 	ldrb.w	lr, [r4, #16]
9000eb9e:	4990      	ldr	r1, [pc, #576]	@ (9000ede0 <http_send+0x3d8>)
9000eba0:	eb01 0ece 	add.w	lr, r1, lr, lsl #3
9000eba4:	f8de e004 	ldr.w	lr, [lr, #4]
9000eba8:	f89e 9000 	ldrb.w	r9, [lr]
9000ebac:	4591      	cmp	r9, r2
9000ebae:	d008      	beq.n	9000ebc2 <http_send+0x1ba>
9000ebb0:	3a09      	subs	r2, #9
9000ebb2:	b2d2      	uxtb	r2, r2
9000ebb4:	2a17      	cmp	r2, #23
9000ebb6:	d819      	bhi.n	9000ebec <http_send+0x1e4>
9000ebb8:	498a      	ldr	r1, [pc, #552]	@ (9000ede4 <http_send+0x3dc>)
9000ebba:	fa21 f202 	lsr.w	r2, r1, r2
9000ebbe:	07d1      	lsls	r1, r2, #31
9000ebc0:	d514      	bpl.n	9000ebec <http_send+0x1e4>
          if (ssi->tag_index == 0) {
9000ebc2:	b913      	cbnz	r3, 9000ebca <http_send+0x1c2>
            ssi->tag_state = TAG_NONE;
9000ebc4:	f884 30dc 	strb.w	r3, [r4, #220]	@ 0xdc
9000ebc8:	e7e3      	b.n	9000eb92 <http_send+0x18a>
            ssi->tag_state = TAG_LEADOUT;
9000ebca:	2203      	movs	r2, #3
            ssi->tag_name_len = (u8_t)ssi->tag_index;
9000ebcc:	7463      	strb	r3, [r4, #17]
            ssi->tag_name[ssi->tag_index] = '\0';
9000ebce:	4423      	add	r3, r4
            ssi->tag_state = TAG_LEADOUT;
9000ebd0:	f884 20dc 	strb.w	r2, [r4, #220]	@ 0xdc
            ssi->tag_name[ssi->tag_index] = '\0';
9000ebd4:	2200      	movs	r2, #0
9000ebd6:	749a      	strb	r2, [r3, #18]
            if (*ssi->parsed == http_ssi_tag_desc[ssi->tag_type].lead_out[0]) {
9000ebd8:	f89e 3000 	ldrb.w	r3, [lr]
9000ebdc:	f89c c000 	ldrb.w	ip, [ip]
9000ebe0:	459c      	cmp	ip, r3
              ssi->tag_index = 1;
9000ebe2:	bf0a      	itet	eq
9000ebe4:	2301      	moveq	r3, #1
              ssi->tag_index = 0;
9000ebe6:	81a2      	strhne	r2, [r4, #12]
              ssi->tag_index = 1;
9000ebe8:	81a3      	strheq	r3, [r4, #12]
              ssi->tag_index = 0;
9000ebea:	e7d2      	b.n	9000eb92 <http_send+0x18a>
          if (ssi->tag_index < LWIP_HTTPD_MAX_TAG_NAME_LEN) {
9000ebec:	2b07      	cmp	r3, #7
9000ebee:	d806      	bhi.n	9000ebfe <http_send+0x1f6>
            ssi->tag_name[ssi->tag_index++] = *ssi->parsed;
9000ebf0:	1c5a      	adds	r2, r3, #1
9000ebf2:	4423      	add	r3, r4
9000ebf4:	81a2      	strh	r2, [r4, #12]
9000ebf6:	f89c 2000 	ldrb.w	r2, [ip]
9000ebfa:	749a      	strb	r2, [r3, #18]
9000ebfc:	e7c9      	b.n	9000eb92 <http_send+0x18a>
            ssi->tag_state = TAG_NONE;
9000ebfe:	2300      	movs	r3, #0
9000ec00:	e7e0      	b.n	9000ebc4 <http_send+0x1bc>
          if (*ssi->parsed == http_ssi_tag_desc[tag_type].lead_in[0]) {
9000ec02:	6821      	ldr	r1, [r4, #0]
          ssi->parse_left--;
9000ec04:	68a2      	ldr	r2, [r4, #8]
        if ((ssi->tag_index == 0) && ((*ssi->parsed == ' ') ||
9000ec06:	89a3      	ldrh	r3, [r4, #12]
          if (*ssi->parsed == http_ssi_tag_desc[tag_type].lead_in[0]) {
9000ec08:	f811 cb01 	ldrb.w	ip, [r1], #1
          ssi->parse_left--;
9000ec0c:	f102 3eff 	add.w	lr, r2, #4294967295
        if ((ssi->tag_index == 0) && ((*ssi->parsed == ' ') ||
9000ec10:	b96b      	cbnz	r3, 9000ec2e <http_send+0x226>
9000ec12:	f1ac 0209 	sub.w	r2, ip, #9
9000ec16:	b2d2      	uxtb	r2, r2
9000ec18:	2a17      	cmp	r2, #23
9000ec1a:	d808      	bhi.n	9000ec2e <http_send+0x226>
9000ec1c:	4871      	ldr	r0, [pc, #452]	@ (9000ede4 <http_send+0x3dc>)
9000ec1e:	fa20 f202 	lsr.w	r2, r0, r2
9000ec22:	07d2      	lsls	r2, r2, #31
9000ec24:	d503      	bpl.n	9000ec2e <http_send+0x226>
          ssi->parse_left--;
9000ec26:	f8c4 e008 	str.w	lr, [r4, #8]
          ssi->parsed++;
9000ec2a:	6021      	str	r1, [r4, #0]
          break;
9000ec2c:	e711      	b.n	9000ea52 <http_send+0x4a>
        if (*ssi->parsed == http_ssi_tag_desc[ssi->tag_type].lead_out[ssi->tag_index]) {
9000ec2e:	486c      	ldr	r0, [pc, #432]	@ (9000ede0 <http_send+0x3d8>)
9000ec30:	7c22      	ldrb	r2, [r4, #16]
9000ec32:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
9000ec36:	6850      	ldr	r0, [r2, #4]
9000ec38:	5cc2      	ldrb	r2, [r0, r3]
          ssi->parse_left--;
9000ec3a:	f8c4 e008 	str.w	lr, [r4, #8]
        if (*ssi->parsed == http_ssi_tag_desc[ssi->tag_type].lead_out[ssi->tag_index]) {
9000ec3e:	4562      	cmp	r2, ip
          ssi->parsed++;
9000ec40:	6021      	str	r1, [r4, #0]
        if (*ssi->parsed == http_ssi_tag_desc[ssi->tag_type].lead_out[ssi->tag_index]) {
9000ec42:	f040 808c 	bne.w	9000ed5e <http_send+0x356>
          ssi->tag_index++;
9000ec46:	3301      	adds	r3, #1
9000ec48:	b29b      	uxth	r3, r3
9000ec4a:	81a3      	strh	r3, [r4, #12]
          if (http_ssi_tag_desc[ssi->tag_type].lead_out[ssi->tag_index] == 0) {
9000ec4c:	5cc1      	ldrb	r1, [r0, r3]
9000ec4e:	2900      	cmp	r1, #0
9000ec50:	f47f aeff 	bne.w	9000ea52 <http_send+0x4a>
            get_tag_insert(hs);
9000ec54:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
  if (httpd_ssi_handler
9000ec58:	4b63      	ldr	r3, [pc, #396]	@ (9000ede8 <http_send+0x3e0>)
9000ec5a:	f109 0212 	add.w	r2, r9, #18
9000ec5e:	681b      	ldr	r3, [r3, #0]
9000ec60:	9201      	str	r2, [sp, #4]
9000ec62:	b143      	cbz	r3, 9000ec76 <http_send+0x26e>
      && httpd_tags && httpd_num_tags
9000ec64:	4a61      	ldr	r2, [pc, #388]	@ (9000edec <http_send+0x3e4>)
9000ec66:	6812      	ldr	r2, [r2, #0]
9000ec68:	b12a      	cbz	r2, 9000ec76 <http_send+0x26e>
9000ec6a:	4861      	ldr	r0, [pc, #388]	@ (9000edf0 <http_send+0x3e8>)
9000ec6c:	f8d0 b000 	ldr.w	fp, [r0]
9000ec70:	f1bb 0f00 	cmp.w	fp, #0
9000ec74:	d16e      	bne.n	9000ed54 <http_send+0x34c>
  len = LWIP_MIN(sizeof(ssi->tag_name), LWIP_MIN(strlen(ssi->tag_name),
9000ec76:	9801      	ldr	r0, [sp, #4]
9000ec78:	f7f1 fad4 	bl	90000224 <strlen>
9000ec7c:	28a6      	cmp	r0, #166	@ 0xa6
9000ec7e:	4683      	mov	fp, r0
9000ec80:	d86a      	bhi.n	9000ed58 <http_send+0x350>
9000ec82:	2809      	cmp	r0, #9
9000ec84:	bf28      	it	cs
9000ec86:	f04f 0b09 	movcs.w	fp, #9
  MEMCPY(ssi->tag_insert, UNKNOWN_TAG1_TEXT, UNKNOWN_TAG1_LEN);
9000ec8a:	f109 0a1b 	add.w	sl, r9, #27
9000ec8e:	4b59      	ldr	r3, [pc, #356]	@ (9000edf4 <http_send+0x3ec>)
9000ec90:	4652      	mov	r2, sl
9000ec92:	f103 0110 	add.w	r1, r3, #16
9000ec96:	f853 0b04 	ldr.w	r0, [r3], #4
9000ec9a:	428b      	cmp	r3, r1
9000ec9c:	f842 0b04 	str.w	r0, [r2], #4
9000eca0:	d1f9      	bne.n	9000ec96 <http_send+0x28e>
9000eca2:	881b      	ldrh	r3, [r3, #0]
  MEMCPY(&ssi->tag_insert[UNKNOWN_TAG1_LEN], ssi->tag_name, len);
9000eca4:	f109 002d 	add.w	r0, r9, #45	@ 0x2d
  MEMCPY(ssi->tag_insert, UNKNOWN_TAG1_TEXT, UNKNOWN_TAG1_LEN);
9000eca8:	8013      	strh	r3, [r2, #0]
  MEMCPY(&ssi->tag_insert[UNKNOWN_TAG1_LEN], ssi->tag_name, len);
9000ecaa:	465a      	mov	r2, fp
9000ecac:	9901      	ldr	r1, [sp, #4]
9000ecae:	f019 fed0 	bl	90028a52 <memcpy>
  MEMCPY(&ssi->tag_insert[UNKNOWN_TAG1_LEN + len], UNKNOWN_TAG2_TEXT, UNKNOWN_TAG2_LEN);
9000ecb2:	4b51      	ldr	r3, [pc, #324]	@ (9000edf8 <http_send+0x3f0>)
9000ecb4:	f10b 012d 	add.w	r1, fp, #45	@ 0x2d
  ssi->tag_insert[UNKNOWN_TAG1_LEN + len + UNKNOWN_TAG2_LEN] = 0;
9000ecb8:	44cb      	add	fp, r9
  MEMCPY(&ssi->tag_insert[UNKNOWN_TAG1_LEN + len], UNKNOWN_TAG2_TEXT, UNKNOWN_TAG2_LEN);
9000ecba:	6818      	ldr	r0, [r3, #0]
9000ecbc:	eb09 0201 	add.w	r2, r9, r1
9000ecc0:	f849 0001 	str.w	r0, [r9, r1]
  len = strlen(ssi->tag_insert);
9000ecc4:	4650      	mov	r0, sl
  MEMCPY(&ssi->tag_insert[UNKNOWN_TAG1_LEN + len], UNKNOWN_TAG2_TEXT, UNKNOWN_TAG2_LEN);
9000ecc6:	8899      	ldrh	r1, [r3, #4]
9000ecc8:	799b      	ldrb	r3, [r3, #6]
9000ecca:	8091      	strh	r1, [r2, #4]
9000eccc:	7193      	strb	r3, [r2, #6]
  ssi->tag_insert[UNKNOWN_TAG1_LEN + len + UNKNOWN_TAG2_LEN] = 0;
9000ecce:	2300      	movs	r3, #0
9000ecd0:	f88b 3034 	strb.w	r3, [fp, #52]	@ 0x34
  len = strlen(ssi->tag_insert);
9000ecd4:	f7f1 faa6 	bl	90000224 <strlen>
  ssi->tag_insert_len = (u16_t)len;
9000ecd8:	b280      	uxth	r0, r0
9000ecda:	e013      	b.n	9000ed04 <http_send+0x2fc>
    for (tag = 0; tag < httpd_num_tags; tag++) {
9000ecdc:	f10a 0a01 	add.w	sl, sl, #1
9000ece0:	45d3      	cmp	fp, sl
9000ece2:	ddc8      	ble.n	9000ec76 <http_send+0x26e>
      if (strcmp(ssi->tag_name, httpd_tags[tag]) == 0)
9000ece4:	f852 102a 	ldr.w	r1, [r2, sl, lsl #2]
9000ece8:	9801      	ldr	r0, [sp, #4]
9000ecea:	9303      	str	r3, [sp, #12]
9000ecec:	9202      	str	r2, [sp, #8]
9000ecee:	f7f1 fa8f 	bl	90000210 <strcmp>
9000ecf2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000ecf6:	2800      	cmp	r0, #0
9000ecf8:	d1f0      	bne.n	9000ecdc <http_send+0x2d4>
        ssi->tag_insert_len = httpd_ssi_handler(tag, ssi->tag_insert,
9000ecfa:	22c0      	movs	r2, #192	@ 0xc0
9000ecfc:	f109 011b 	add.w	r1, r9, #27
9000ed00:	4650      	mov	r0, sl
9000ed02:	4798      	blx	r3
            ssi->tag_state = TAG_SENDING;
9000ed04:	2204      	movs	r2, #4
        ssi->tag_insert_len = httpd_ssi_handler(tag, ssi->tag_insert,
9000ed06:	f8a9 000e 	strh.w	r0, [r9, #14]
            ssi->tag_index = 0;
9000ed0a:	2300      	movs	r3, #0
            ssi->tag_state = TAG_SENDING;
9000ed0c:	f884 20dc 	strb.w	r2, [r4, #220]	@ 0xdc
            ssi->tag_end = ssi->parsed;
9000ed10:	6822      	ldr	r2, [r4, #0]
            if (ssi->tag_end > hs->file) {
9000ed12:	69a9      	ldr	r1, [r5, #24]
            ssi->tag_index = 0;
9000ed14:	81a3      	strh	r3, [r4, #12]
            if (ssi->tag_end > hs->file) {
9000ed16:	428a      	cmp	r2, r1
            ssi->tag_end = ssi->parsed;
9000ed18:	6062      	str	r2, [r4, #4]
            if (ssi->tag_end > hs->file) {
9000ed1a:	f67f ae9a 	bls.w	9000ea52 <http_send+0x4a>
              len = (u16_t)LWIP_MIN(ssi->tag_end - hs->file, 0xffff);
9000ed1e:	1a52      	subs	r2, r2, r1
9000ed20:	f64f 70ff 	movw	r0, #65535	@ 0xffff
9000ed24:	4282      	cmp	r2, r0
9000ed26:	bfa8      	it	ge
9000ed28:	4602      	movge	r2, r0
9000ed2a:	f8ad 2016 	strh.w	r2, [sp, #22]
            err = http_write(pcb, hs->file, &len, HTTP_IS_DATA_VOLATILE(hs));
9000ed2e:	f10d 0216 	add.w	r2, sp, #22
9000ed32:	4640      	mov	r0, r8
9000ed34:	f7ff fd95 	bl	9000e862 <http_write>
          if (err == ERR_OK) {
9000ed38:	4606      	mov	r6, r0
9000ed3a:	2800      	cmp	r0, #0
9000ed3c:	f47f ae89 	bne.w	9000ea52 <http_send+0x4a>
            hs->file += len;
9000ed40:	f8bd 2016 	ldrh.w	r2, [sp, #22]
9000ed44:	69ab      	ldr	r3, [r5, #24]
9000ed46:	4413      	add	r3, r2
9000ed48:	61ab      	str	r3, [r5, #24]
            hs->left -= len;
9000ed4a:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000ed4c:	1a9b      	subs	r3, r3, r2
9000ed4e:	626b      	str	r3, [r5, #36]	@ 0x24
              data_to_send = 1;
9000ed50:	2701      	movs	r7, #1
9000ed52:	e67e      	b.n	9000ea52 <http_send+0x4a>
    for (tag = 0; tag < httpd_num_tags; tag++) {
9000ed54:	468a      	mov	sl, r1
9000ed56:	e7c3      	b.n	9000ece0 <http_send+0x2d8>
  len = LWIP_MIN(sizeof(ssi->tag_name), LWIP_MIN(strlen(ssi->tag_name),
9000ed58:	f04f 0b09 	mov.w	fp, #9
9000ed5c:	e795      	b.n	9000ec8a <http_send+0x282>
          ssi->tag_state = TAG_NONE;
9000ed5e:	f04f 0300 	mov.w	r3, #0
9000ed62:	e6ed      	b.n	9000eb40 <http_send+0x138>
        if (ssi->tag_end > hs->file) {
9000ed64:	6863      	ldr	r3, [r4, #4]
9000ed66:	69a9      	ldr	r1, [r5, #24]
9000ed68:	428b      	cmp	r3, r1
9000ed6a:	d909      	bls.n	9000ed80 <http_send+0x378>
          len = (u16_t)LWIP_MIN(ssi->tag_end - hs->file, 0xffff);
9000ed6c:	1a5b      	subs	r3, r3, r1
9000ed6e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
9000ed72:	4293      	cmp	r3, r2
9000ed74:	bfa8      	it	ge
9000ed76:	4613      	movge	r3, r2
9000ed78:	f8ad 3016 	strh.w	r3, [sp, #22]
            err = http_write(pcb, hs->file, &len, HTTP_IS_DATA_VOLATILE(hs));
9000ed7c:	2300      	movs	r3, #0
9000ed7e:	e7d6      	b.n	9000ed2e <http_send+0x326>
          if (ssi->tag_index < ssi->tag_insert_len) {
9000ed80:	89a1      	ldrh	r1, [r4, #12]
9000ed82:	89e3      	ldrh	r3, [r4, #14]
9000ed84:	4299      	cmp	r1, r3
9000ed86:	d214      	bcs.n	9000edb2 <http_send+0x3aa>
            len = (ssi->tag_insert_len - ssi->tag_index);
9000ed88:	1a5b      	subs	r3, r3, r1
            err = http_write(pcb, &(ssi->tag_insert[ssi->tag_index]), &len,
9000ed8a:	311b      	adds	r1, #27
9000ed8c:	f10d 0216 	add.w	r2, sp, #22
9000ed90:	4640      	mov	r0, r8
            len = (ssi->tag_insert_len - ssi->tag_index);
9000ed92:	f8ad 3016 	strh.w	r3, [sp, #22]
            err = http_write(pcb, &(ssi->tag_insert[ssi->tag_index]), &len,
9000ed96:	4421      	add	r1, r4
9000ed98:	2301      	movs	r3, #1
9000ed9a:	f7ff fd62 	bl	9000e862 <http_write>
            if (err == ERR_OK) {
9000ed9e:	4606      	mov	r6, r0
9000eda0:	2800      	cmp	r0, #0
9000eda2:	f47f ae56 	bne.w	9000ea52 <http_send+0x4a>
              ssi->tag_index += len;
9000eda6:	89a3      	ldrh	r3, [r4, #12]
9000eda8:	f8bd 2016 	ldrh.w	r2, [sp, #22]
9000edac:	4413      	add	r3, r2
9000edae:	81a3      	strh	r3, [r4, #12]
9000edb0:	e7ce      	b.n	9000ed50 <http_send+0x348>
              ssi->tag_index = 0;
9000edb2:	f04f 0300 	mov.w	r3, #0
9000edb6:	81a3      	strh	r3, [r4, #12]
9000edb8:	e6c2      	b.n	9000eb40 <http_send+0x138>
  len = (u16_t)LWIP_MIN(hs->left, 0xffff);
9000edba:	f64f 73ff 	movw	r3, #65535	@ 0xffff
9000edbe:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
  err = http_write(pcb, hs->file, &len, HTTP_IS_DATA_VOLATILE(hs));
9000edc0:	4640      	mov	r0, r8
  len = (u16_t)LWIP_MIN(hs->left, 0xffff);
9000edc2:	4293      	cmp	r3, r2
9000edc4:	bf28      	it	cs
9000edc6:	4613      	movcs	r3, r2
  err = http_write(pcb, hs->file, &len, HTTP_IS_DATA_VOLATILE(hs));
9000edc8:	f10d 0216 	add.w	r2, sp, #22
  len = (u16_t)LWIP_MIN(hs->left, 0xffff);
9000edcc:	f8ad 3016 	strh.w	r3, [sp, #22]
  err = http_write(pcb, hs->file, &len, HTTP_IS_DATA_VOLATILE(hs));
9000edd0:	4623      	mov	r3, r4
9000edd2:	f7ff fd46 	bl	9000e862 <http_write>
  if (err == ERR_OK) {
9000edd6:	2800      	cmp	r0, #0
9000edd8:	f43f ae5a 	beq.w	9000ea90 <http_send+0x88>
  u8_t data_to_send = 0;
9000eddc:	4627      	mov	r7, r4
  return data_to_send;
9000edde:	e67e      	b.n	9000eade <http_send+0xd6>
9000ede0:	90035720 	.word	0x90035720
9000ede4:	00800013 	.word	0x00800013
9000ede8:	2001a4ec 	.word	0x2001a4ec
9000edec:	2001a4e4 	.word	0x2001a4e4
9000edf0:	2001a4e8 	.word	0x2001a4e8
9000edf4:	9002a4ce 	.word	0x9002a4ce
9000edf8:	9002a4e1 	.word	0x9002a4e1

9000edfc <http_sent>:
{
9000edfc:	b508      	push	{r3, lr}
9000edfe:	4603      	mov	r3, r0
9000ee00:	4608      	mov	r0, r1
  if (hs == NULL) {
9000ee02:	4619      	mov	r1, r3
9000ee04:	b123      	cbz	r3, 9000ee10 <http_sent+0x14>
  hs->retries = 0;
9000ee06:	2300      	movs	r3, #0
9000ee08:	f881 3028 	strb.w	r3, [r1, #40]	@ 0x28
  http_send(pcb, hs);
9000ee0c:	f7ff fdfc 	bl	9000ea08 <http_send>
}
9000ee10:	2000      	movs	r0, #0
9000ee12:	bd08      	pop	{r3, pc}

9000ee14 <http_poll>:
{
9000ee14:	b510      	push	{r4, lr}
9000ee16:	460c      	mov	r4, r1
  if (hs == NULL) {
9000ee18:	4601      	mov	r1, r0
9000ee1a:	b920      	cbnz	r0, 9000ee26 <http_poll+0x12>
      http_close_conn(pcb, hs);
9000ee1c:	4620      	mov	r0, r4
9000ee1e:	f7ff fdc7 	bl	9000e9b0 <http_close_conn.isra.0>
}
9000ee22:	2000      	movs	r0, #0
9000ee24:	bd10      	pop	{r4, pc}
    hs->retries++;
9000ee26:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
9000ee2a:	3301      	adds	r3, #1
9000ee2c:	b2db      	uxtb	r3, r3
    if (hs->retries == HTTPD_MAX_RETRIES) {
9000ee2e:	2b04      	cmp	r3, #4
    hs->retries++;
9000ee30:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
    if (hs->retries == HTTPD_MAX_RETRIES) {
9000ee34:	d0f2      	beq.n	9000ee1c <http_poll+0x8>
    if (hs->handle) {
9000ee36:	6943      	ldr	r3, [r0, #20]
9000ee38:	2b00      	cmp	r3, #0
9000ee3a:	d0f2      	beq.n	9000ee22 <http_poll+0xe>
      if (http_send(pcb, hs)) {
9000ee3c:	4620      	mov	r0, r4
9000ee3e:	f7ff fde3 	bl	9000ea08 <http_send>
9000ee42:	2800      	cmp	r0, #0
9000ee44:	d0ed      	beq.n	9000ee22 <http_poll+0xe>
        altcp_output(pcb);
9000ee46:	4620      	mov	r0, r4
9000ee48:	f7ff f8e4 	bl	9000e014 <tcp_output>
9000ee4c:	e7e9      	b.n	9000ee22 <http_poll+0xe>
	...

9000ee50 <http_recv>:
{
9000ee50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ee54:	b089      	sub	sp, #36	@ 0x24
9000ee56:	4604      	mov	r4, r0
9000ee58:	4616      	mov	r6, r2
  if ((err != ERR_OK) || (p == NULL) || (hs == NULL)) {
9000ee5a:	469a      	mov	sl, r3
{
9000ee5c:	9100      	str	r1, [sp, #0]
  if ((err != ERR_OK) || (p == NULL) || (hs == NULL)) {
9000ee5e:	b94b      	cbnz	r3, 9000ee74 <http_recv+0x24>
9000ee60:	b152      	cbz	r2, 9000ee78 <http_recv+0x28>
9000ee62:	b988      	cbnz	r0, 9000ee88 <http_recv+0x38>
      altcp_recved(pcb, p->tot_len);
9000ee64:	9800      	ldr	r0, [sp, #0]
9000ee66:	8931      	ldrh	r1, [r6, #8]
9000ee68:	f7fc ffd6 	bl	9000be18 <tcp_recved>
      pbuf_free(p);
9000ee6c:	4630      	mov	r0, r6
9000ee6e:	f7fc fd39 	bl	9000b8e4 <pbuf_free>
9000ee72:	e001      	b.n	9000ee78 <http_recv+0x28>
    if (p != NULL) {
9000ee74:	2a00      	cmp	r2, #0
9000ee76:	d1f5      	bne.n	9000ee64 <http_recv+0x14>
    http_close_conn(pcb, hs);
9000ee78:	4621      	mov	r1, r4
9000ee7a:	9800      	ldr	r0, [sp, #0]
9000ee7c:	f7ff fd98 	bl	9000e9b0 <http_close_conn.isra.0>
}
9000ee80:	2000      	movs	r0, #0
9000ee82:	b009      	add	sp, #36	@ 0x24
9000ee84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    altcp_recved(pcb, p->tot_len);
9000ee88:	8911      	ldrh	r1, [r2, #8]
9000ee8a:	9800      	ldr	r0, [sp, #0]
9000ee8c:	f7fc ffc4 	bl	9000be18 <tcp_recved>
    if (hs->handle == NULL) {
9000ee90:	6963      	ldr	r3, [r4, #20]
9000ee92:	2b00      	cmp	r3, #0
9000ee94:	f040 81e8 	bne.w	9000f268 <http_recv+0x418>
  if ((hs->handle != NULL) || (hs->file != NULL)) {
9000ee98:	69a3      	ldr	r3, [r4, #24]
  if (hs->req == NULL) {
9000ee9a:	6a20      	ldr	r0, [r4, #32]
  if ((hs->handle != NULL) || (hs->file != NULL)) {
9000ee9c:	2b00      	cmp	r3, #0
9000ee9e:	f040 81db 	bne.w	9000f258 <http_recv+0x408>
  if (hs->req == NULL) {
9000eea2:	2800      	cmp	r0, #0
9000eea4:	f040 80ac 	bne.w	9000f000 <http_recv+0x1b0>
    hs->req = p;
9000eea8:	6226      	str	r6, [r4, #32]
  pbuf_ref(p);
9000eeaa:	4630      	mov	r0, r6
9000eeac:	f7fc fde4 	bl	9000ba78 <pbuf_ref>
  if (hs->req->next != NULL) {
9000eeb0:	6a20      	ldr	r0, [r4, #32]
9000eeb2:	6803      	ldr	r3, [r0, #0]
9000eeb4:	2b00      	cmp	r3, #0
9000eeb6:	f000 80a7 	beq.w	9000f008 <http_recv+0x1b8>
    data_len = LWIP_MIN(hs->req->tot_len, LWIP_HTTPD_MAX_REQ_LENGTH);
9000eeba:	f8b0 9008 	ldrh.w	r9, [r0, #8]
9000eebe:	f240 33ff 	movw	r3, #1023	@ 0x3ff
    data = httpd_req_buf;
9000eec2:	4db8      	ldr	r5, [pc, #736]	@ (9000f1a4 <http_recv+0x354>)
    data_len = LWIP_MIN(hs->req->tot_len, LWIP_HTTPD_MAX_REQ_LENGTH);
9000eec4:	4599      	cmp	r9, r3
    pbuf_copy_partial(hs->req, httpd_req_buf, data_len, 0);
9000eec6:	49b7      	ldr	r1, [pc, #732]	@ (9000f1a4 <http_recv+0x354>)
    data_len = LWIP_MIN(hs->req->tot_len, LWIP_HTTPD_MAX_REQ_LENGTH);
9000eec8:	bf28      	it	cs
9000eeca:	4699      	movcs	r9, r3
    pbuf_copy_partial(hs->req, httpd_req_buf, data_len, 0);
9000eecc:	2300      	movs	r3, #0
9000eece:	464a      	mov	r2, r9
9000eed0:	f7fc fe42 	bl	9000bb58 <pbuf_copy_partial>
  if (data_len >= MIN_REQ_LEN) {
9000eed4:	f1b9 0f06 	cmp.w	r9, #6
9000eed8:	f240 81af 	bls.w	9000f23a <http_recv+0x3ea>
    crlf = lwip_strnstr(data, CRLF, data_len);
9000eedc:	464a      	mov	r2, r9
9000eede:	49b2      	ldr	r1, [pc, #712]	@ (9000f1a8 <http_recv+0x358>)
9000eee0:	4628      	mov	r0, r5
9000eee2:	f7fc f8ec 	bl	9000b0be <lwip_strnstr>
    if (crlf != NULL) {
9000eee6:	2800      	cmp	r0, #0
9000eee8:	f000 81a7 	beq.w	9000f23a <http_recv+0x3ea>
      if (!strncmp(data, "GET ", 4)) {
9000eeec:	2204      	movs	r2, #4
9000eeee:	49af      	ldr	r1, [pc, #700]	@ (9000f1ac <http_recv+0x35c>)
9000eef0:	4628      	mov	r0, r5
9000eef2:	f019 fccd 	bl	90028890 <strncmp>
9000eef6:	4680      	mov	r8, r0
9000eef8:	2800      	cmp	r0, #0
9000eefa:	f040 8089 	bne.w	9000f010 <http_recv+0x1c0>
      left_len = (u16_t)(data_len - ((sp1 + 1) - data));
9000eefe:	f1a9 0b04 	sub.w	fp, r9, #4
      sp2 = lwip_strnstr(sp1 + 1, " ", left_len);
9000ef02:	1d2f      	adds	r7, r5, #4
9000ef04:	49aa      	ldr	r1, [pc, #680]	@ (9000f1b0 <http_recv+0x360>)
9000ef06:	fa1f fb8b 	uxth.w	fp, fp
9000ef0a:	4638      	mov	r0, r7
9000ef0c:	465a      	mov	r2, fp
9000ef0e:	f7fc f8d6 	bl	9000b0be <lwip_strnstr>
      if (sp2 == NULL) {
9000ef12:	2800      	cmp	r0, #0
9000ef14:	f000 8081 	beq.w	9000f01a <http_recv+0x1ca>
      uri_len = (u16_t)(sp2 - (sp1 + 1));
9000ef18:	eba0 0b07 	sub.w	fp, r0, r7
      int is_09 = 0;
9000ef1c:	f8cd 8008 	str.w	r8, [sp, #8]
        sp1 = data + 3;
9000ef20:	1ceb      	adds	r3, r5, #3
      if ((sp2 != 0) && (sp2 > sp1)) {
9000ef22:	4298      	cmp	r0, r3
9000ef24:	f240 8189 	bls.w	9000f23a <http_recv+0x3ea>
        if (lwip_strnstr(data, CRLF CRLF, data_len) != NULL) {
9000ef28:	464a      	mov	r2, r9
9000ef2a:	49a2      	ldr	r1, [pc, #648]	@ (9000f1b4 <http_recv+0x364>)
9000ef2c:	4628      	mov	r0, r5
9000ef2e:	f7fc f8c6 	bl	9000b0be <lwip_strnstr>
9000ef32:	2800      	cmp	r0, #0
9000ef34:	f000 8181 	beq.w	9000f23a <http_recv+0x3ea>
          *sp1 = 0;
9000ef38:	2300      	movs	r3, #0
          uri[uri_len] = 0;
9000ef3a:	fa1f fb8b 	uxth.w	fp, fp
  size_t uri_len = strlen(uri);
9000ef3e:	4638      	mov	r0, r7
9000ef40:	9707      	str	r7, [sp, #28]
          *sp1 = 0;
9000ef42:	70eb      	strb	r3, [r5, #3]
          uri[uri_len] = 0;
9000ef44:	f807 300b 	strb.w	r3, [r7, fp]
  size_t uri_len = strlen(uri);
9000ef48:	f7f1 f96c 	bl	90000224 <strlen>
  if ((uri_len > 0) && (uri[uri_len - 1] == '/') &&
9000ef4c:	2300      	movs	r3, #0
9000ef4e:	4683      	mov	fp, r0
9000ef50:	2800      	cmp	r0, #0
9000ef52:	d16f      	bne.n	9000f034 <http_recv+0x1e4>
    params = (char *)strchr(uri, '?');
9000ef54:	213f      	movs	r1, #63	@ 0x3f
9000ef56:	4638      	mov	r0, r7
9000ef58:	f019 fc8d 	bl	90028876 <strchr>
    if (params != NULL) {
9000ef5c:	4681      	mov	r9, r0
9000ef5e:	2800      	cmp	r0, #0
9000ef60:	f040 80d0 	bne.w	9000f104 <http_recv+0x2b4>
    if (httpd_num_cgis && httpd_cgis) {
9000ef64:	4a94      	ldr	r2, [pc, #592]	@ (9000f1b8 <http_recv+0x368>)
9000ef66:	f8d2 b000 	ldr.w	fp, [r2]
9000ef6a:	f1bb 0f00 	cmp.w	fp, #0
9000ef6e:	d005      	beq.n	9000ef7c <http_recv+0x12c>
9000ef70:	4a92      	ldr	r2, [pc, #584]	@ (9000f1bc <http_recv+0x36c>)
9000ef72:	6813      	ldr	r3, [r2, #0]
9000ef74:	9301      	str	r3, [sp, #4]
9000ef76:	2b00      	cmp	r3, #0
9000ef78:	f040 80d4 	bne.w	9000f124 <http_recv+0x2d4>
    err = fs_open(&hs->file_handle, uri);
9000ef7c:	9907      	ldr	r1, [sp, #28]
9000ef7e:	4620      	mov	r0, r4
9000ef80:	4625      	mov	r5, r4
9000ef82:	f7ff fc49 	bl	9000e818 <fs_open>
    if (err == ERR_OK) {
9000ef86:	2800      	cmp	r0, #0
9000ef88:	f000 811e 	beq.w	9000f1c8 <http_recv+0x378>
      file = http_get_404_file(hs, &uri);
9000ef8c:	a907      	add	r1, sp, #28
9000ef8e:	4620      	mov	r0, r4
9000ef90:	f7ff fcac 	bl	9000e8ec <http_get_404_file>
    if (file != NULL) {
9000ef94:	4605      	mov	r5, r0
9000ef96:	2800      	cmp	r0, #0
9000ef98:	f040 8116 	bne.w	9000f1c8 <http_recv+0x378>
    file = http_get_404_file(hs, &uri);
9000ef9c:	a907      	add	r1, sp, #28
9000ef9e:	4620      	mov	r0, r4
9000efa0:	f7ff fca4 	bl	9000e8ec <http_get_404_file>
  if (file != NULL) {
9000efa4:	4605      	mov	r5, r0
9000efa6:	2800      	cmp	r0, #0
9000efa8:	f000 8141 	beq.w	9000f22e <http_recv+0x3de>
    hs->retries = 0;
9000efac:	2300      	movs	r3, #0
    hs->file = file->data;
9000efae:	6828      	ldr	r0, [r5, #0]
      hs->left = (u32_t)file->len;
9000efb0:	686a      	ldr	r2, [r5, #4]
    hs->retries = 0;
9000efb2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    if (is_09 && ((hs->handle->flags & FS_FILE_FLAGS_HEADER_INCLUDED) != 0)) {
9000efb6:	9b02      	ldr	r3, [sp, #8]
    hs->handle = file;
9000efb8:	6165      	str	r5, [r4, #20]
    hs->file = file->data;
9000efba:	61a0      	str	r0, [r4, #24]
      hs->left = (u32_t)file->len;
9000efbc:	6262      	str	r2, [r4, #36]	@ 0x24
    if (is_09 && ((hs->handle->flags & FS_FILE_FLAGS_HEADER_INCLUDED) != 0)) {
9000efbe:	b16b      	cbz	r3, 9000efdc <http_recv+0x18c>
9000efc0:	7c2b      	ldrb	r3, [r5, #16]
9000efc2:	07db      	lsls	r3, r3, #31
9000efc4:	d50a      	bpl.n	9000efdc <http_recv+0x18c>
      char *file_start = lwip_strnstr(hs->file, CRLF CRLF, hs->left);
9000efc6:	497b      	ldr	r1, [pc, #492]	@ (9000f1b4 <http_recv+0x364>)
9000efc8:	f7fc f879 	bl	9000b0be <lwip_strnstr>
      if (file_start != NULL) {
9000efcc:	b130      	cbz	r0, 9000efdc <http_recv+0x18c>
        int diff = file_start + 4 - hs->file;
9000efce:	69a3      	ldr	r3, [r4, #24]
9000efd0:	3004      	adds	r0, #4
9000efd2:	1ac2      	subs	r2, r0, r3
        hs->left -= (u32_t)diff;
9000efd4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        hs->file += diff;
9000efd6:	61a0      	str	r0, [r4, #24]
        hs->left -= (u32_t)diff;
9000efd8:	1a9b      	subs	r3, r3, r2
9000efda:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hs->req != NULL) {
9000efdc:	6a20      	ldr	r0, [r4, #32]
9000efde:	b118      	cbz	r0, 9000efe8 <http_recv+0x198>
          pbuf_free(hs->req);
9000efe0:	f7fc fc80 	bl	9000b8e4 <pbuf_free>
          hs->req = NULL;
9000efe4:	2300      	movs	r3, #0
9000efe6:	6223      	str	r3, [r4, #32]
      pbuf_free(p);
9000efe8:	4630      	mov	r0, r6
9000efea:	f7fc fc7b 	bl	9000b8e4 <pbuf_free>
      if (parsed == ERR_OK) {
9000efee:	f1ba 0f00 	cmp.w	sl, #0
9000eff2:	f040 8134 	bne.w	9000f25e <http_recv+0x40e>
          http_send(pcb, hs);
9000eff6:	4621      	mov	r1, r4
9000eff8:	9800      	ldr	r0, [sp, #0]
9000effa:	f7ff fd05 	bl	9000ea08 <http_send>
9000effe:	e73f      	b.n	9000ee80 <http_recv+0x30>
    pbuf_cat(hs->req, p);
9000f000:	4631      	mov	r1, r6
9000f002:	f7fc fd3f 	bl	9000ba84 <pbuf_cat>
9000f006:	e750      	b.n	9000eeaa <http_recv+0x5a>
    data = (char *)p->payload;
9000f008:	6875      	ldr	r5, [r6, #4]
    data_len = p->len;
9000f00a:	f8b6 900a 	ldrh.w	r9, [r6, #10]
      LWIP_DEBUGF(HTTPD_DEBUG, ("Warning: incomplete header due to chained pbufs\n"));
9000f00e:	e761      	b.n	9000eed4 <http_recv+0x84>
        data[4] = 0;
9000f010:	2300      	movs	r3, #0
9000f012:	712b      	strb	r3, [r5, #4]
        return http_find_error_file(hs, 501);
9000f014:	f06f 0a0f 	mvn.w	sl, #15
9000f018:	e7e0      	b.n	9000efdc <http_recv+0x18c>
        sp2 = lwip_strnstr(sp1 + 1, CRLF, left_len);
9000f01a:	465a      	mov	r2, fp
9000f01c:	4962      	ldr	r1, [pc, #392]	@ (9000f1a8 <http_recv+0x358>)
9000f01e:	4638      	mov	r0, r7
9000f020:	f7fc f84d 	bl	9000b0be <lwip_strnstr>
      if ((sp2 != 0) && (sp2 > sp1)) {
9000f024:	2800      	cmp	r0, #0
9000f026:	f000 8108 	beq.w	9000f23a <http_recv+0x3ea>
      uri_len = (u16_t)(sp2 - (sp1 + 1));
9000f02a:	2301      	movs	r3, #1
9000f02c:	eba0 0b07 	sub.w	fp, r0, r7
9000f030:	9302      	str	r3, [sp, #8]
9000f032:	e775      	b.n	9000ef20 <http_recv+0xd0>
  if ((uri_len > 0) && (uri[uri_len - 1] == '/') &&
9000f034:	f100 39ff 	add.w	r9, r0, #4294967295
9000f038:	f817 2009 	ldrb.w	r2, [r7, r9]
9000f03c:	2a2f      	cmp	r2, #47	@ 0x2f
9000f03e:	d189      	bne.n	9000ef54 <http_recv+0x104>
9000f040:	4d5f      	ldr	r5, [pc, #380]	@ (9000f1c0 <http_recv+0x370>)
9000f042:	42af      	cmp	r7, r5
9000f044:	d103      	bne.n	9000f04e <http_recv+0x1fe>
      ((uri != http_uri_buf) || (uri_len == 1))) {
9000f046:	2801      	cmp	r0, #1
9000f048:	d184      	bne.n	9000ef54 <http_recv+0x104>
    size_t copy_len = LWIP_MIN(sizeof(http_uri_buf) - 1, uri_len - 1);
9000f04a:	4699      	mov	r9, r3
9000f04c:	e00e      	b.n	9000f06c <http_recv+0x21c>
    if (copy_len > 0) {
9000f04e:	2801      	cmp	r0, #1
9000f050:	d0fb      	beq.n	9000f04a <http_recv+0x1fa>
    size_t copy_len = LWIP_MIN(sizeof(http_uri_buf) - 1, uri_len - 1);
9000f052:	f1b9 0f3f 	cmp.w	r9, #63	@ 0x3f
      MEMCPY(http_uri_buf, uri, copy_len);
9000f056:	4639      	mov	r1, r7
9000f058:	4628      	mov	r0, r5
    size_t copy_len = LWIP_MIN(sizeof(http_uri_buf) - 1, uri_len - 1);
9000f05a:	bf28      	it	cs
9000f05c:	f04f 093f 	movcs.w	r9, #63	@ 0x3f
      MEMCPY(http_uri_buf, uri, copy_len);
9000f060:	464a      	mov	r2, r9
9000f062:	f019 fcf6 	bl	90028a52 <memcpy>
      http_uri_buf[copy_len] = 0;
9000f066:	2300      	movs	r3, #0
9000f068:	f805 3009 	strb.w	r3, [r5, r9]
        size_t len_left = sizeof(http_uri_buf) - copy_len - 1;
9000f06c:	f1c9 023f 	rsb	r2, r9, #63	@ 0x3f
    size_t copy_len = LWIP_MIN(sizeof(http_uri_buf) - 1, uri_len - 1);
9000f070:	2300      	movs	r3, #0
        size_t len_left = sizeof(http_uri_buf) - copy_len - 1;
9000f072:	9201      	str	r2, [sp, #4]
      if (copy_len > 0) {
9000f074:	f1bb 0f01 	cmp.w	fp, #1
9000f078:	d03c      	beq.n	9000f0f4 <http_recv+0x2a4>
        if (len_left > 0) {
9000f07a:	9a01      	ldr	r2, [sp, #4]
9000f07c:	b1b2      	cbz	r2, 9000f0ac <http_recv+0x25c>
          size_t name_len = strlen(httpd_default_filenames[loop].name);
9000f07e:	4a51      	ldr	r2, [pc, #324]	@ (9000f1c4 <http_recv+0x374>)
9000f080:	9305      	str	r3, [sp, #20]
9000f082:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
          MEMCPY(&http_uri_buf[copy_len], httpd_default_filenames[loop].name, name_copy_len);
9000f086:	4d4e      	ldr	r5, [pc, #312]	@ (9000f1c0 <http_recv+0x370>)
          size_t name_len = strlen(httpd_default_filenames[loop].name);
9000f088:	4608      	mov	r0, r1
9000f08a:	9104      	str	r1, [sp, #16]
9000f08c:	f7f1 f8ca 	bl	90000224 <strlen>
          size_t name_copy_len = LWIP_MIN(len_left, name_len);
9000f090:	9a01      	ldr	r2, [sp, #4]
          MEMCPY(&http_uri_buf[copy_len], httpd_default_filenames[loop].name, name_copy_len);
9000f092:	444d      	add	r5, r9
9000f094:	9904      	ldr	r1, [sp, #16]
          size_t name_copy_len = LWIP_MIN(len_left, name_len);
9000f096:	4282      	cmp	r2, r0
9000f098:	bf28      	it	cs
9000f09a:	4602      	movcs	r2, r0
          MEMCPY(&http_uri_buf[copy_len], httpd_default_filenames[loop].name, name_copy_len);
9000f09c:	4628      	mov	r0, r5
9000f09e:	9203      	str	r2, [sp, #12]
9000f0a0:	f019 fcd7 	bl	90028a52 <memcpy>
          http_uri_buf[copy_len + name_copy_len] = 0;
9000f0a4:	2100      	movs	r1, #0
9000f0a6:	9a03      	ldr	r2, [sp, #12]
9000f0a8:	9b05      	ldr	r3, [sp, #20]
9000f0aa:	54a9      	strb	r1, [r5, r2]
        file_name = http_uri_buf;
9000f0ac:	4944      	ldr	r1, [pc, #272]	@ (9000f1c0 <http_recv+0x370>)
      err = fs_open(&hs->file_handle, file_name);
9000f0ae:	4620      	mov	r0, r4
9000f0b0:	9304      	str	r3, [sp, #16]
9000f0b2:	9103      	str	r1, [sp, #12]
9000f0b4:	4625      	mov	r5, r4
9000f0b6:	f7ff fbaf 	bl	9000e818 <fs_open>
      if (err == ERR_OK) {
9000f0ba:	e9dd 1303 	ldrd	r1, r3, [sp, #12]
9000f0be:	b9e8      	cbnz	r0, 9000f0fc <http_recv+0x2ac>
        tag_check = httpd_default_filenames[loop].shtml;
9000f0c0:	4a40      	ldr	r2, [pc, #256]	@ (9000f1c4 <http_recv+0x374>)
        uri = file_name;
9000f0c2:	9107      	str	r1, [sp, #28]
        tag_check = httpd_default_filenames[loop].shtml;
9000f0c4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
9000f0c8:	791f      	ldrb	r7, [r3, #4]
    if (tag_check) {
9000f0ca:	2f00      	cmp	r7, #0
9000f0cc:	f43f af6e 	beq.w	9000efac <http_recv+0x15c>
  struct http_ssi_state *ret = HTTP_ALLOC_SSI_STATE();
9000f0d0:	20e0      	movs	r0, #224	@ 0xe0
9000f0d2:	f7fc f9c5 	bl	9000b460 <mem_malloc>
  if (ret != NULL) {
9000f0d6:	4607      	mov	r7, r0
9000f0d8:	2800      	cmp	r0, #0
9000f0da:	f43f af67 	beq.w	9000efac <http_recv+0x15c>
    memset(ret, 0, sizeof(struct http_ssi_state));
9000f0de:	22e0      	movs	r2, #224	@ 0xe0
9000f0e0:	2100      	movs	r1, #0
9000f0e2:	f019 fbc0 	bl	90028866 <memset>
        ssi->parsed = file->data;
9000f0e6:	682b      	ldr	r3, [r5, #0]
        ssi->parse_left = file->len;
9000f0e8:	686a      	ldr	r2, [r5, #4]
        ssi->parsed = file->data;
9000f0ea:	603b      	str	r3, [r7, #0]
        ssi->tag_end = file->data;
9000f0ec:	e9c7 3201 	strd	r3, r2, [r7, #4]
        hs->ssi = ssi;
9000f0f0:	62e7      	str	r7, [r4, #44]	@ 0x2c
9000f0f2:	e75b      	b.n	9000efac <http_recv+0x15c>
        file_name = httpd_default_filenames[loop].name;
9000f0f4:	4a33      	ldr	r2, [pc, #204]	@ (9000f1c4 <http_recv+0x374>)
9000f0f6:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
9000f0fa:	e7d8      	b.n	9000f0ae <http_recv+0x25e>
    for (loop = 0; loop < NUM_DEFAULT_FILENAMES; loop++) {
9000f0fc:	3301      	adds	r3, #1
9000f0fe:	2b05      	cmp	r3, #5
9000f100:	d1b8      	bne.n	9000f074 <http_recv+0x224>
9000f102:	e727      	b.n	9000ef54 <http_recv+0x104>
      *params = '\0';
9000f104:	2200      	movs	r2, #0
9000f106:	f809 2b01 	strb.w	r2, [r9], #1
      params++;
9000f10a:	e72b      	b.n	9000ef64 <http_recv+0x114>
9000f10c:	46d9      	mov	r9, fp
9000f10e:	e01d      	b.n	9000f14c <http_recv+0x2fc>
      pair = strchr(equals, ' ');
9000f110:	2120      	movs	r1, #32
9000f112:	4648      	mov	r0, r9
9000f114:	f019 fbaf 	bl	90028876 <strchr>
      if (pair) {
9000f118:	b328      	cbz	r0, 9000f166 <http_recv+0x316>
        *pair = '\0';
9000f11a:	f880 b000 	strb.w	fp, [r0]
9000f11e:	e022      	b.n	9000f166 <http_recv+0x316>
      for (i = 0; i < httpd_num_cgis; i++) {
9000f120:	f108 0801 	add.w	r8, r8, #1
9000f124:	45c3      	cmp	fp, r8
9000f126:	f77f af29 	ble.w	9000ef7c <http_recv+0x12c>
        if (strcmp(uri, httpd_cgis[i].pcCGIName) == 0) {
9000f12a:	9b01      	ldr	r3, [sp, #4]
9000f12c:	4638      	mov	r0, r7
9000f12e:	f853 1038 	ldr.w	r1, [r3, r8, lsl #3]
9000f132:	f7f1 f86d 	bl	90000210 <strcmp>
9000f136:	4605      	mov	r5, r0
9000f138:	2800      	cmp	r0, #0
9000f13a:	d1f1      	bne.n	9000f120 <http_recv+0x2d0>
  if (!params || (params[0] == '\0')) {
9000f13c:	f1b9 0f00 	cmp.w	r9, #0
9000f140:	d021      	beq.n	9000f186 <http_recv+0x336>
9000f142:	f899 2000 	ldrb.w	r2, [r9]
9000f146:	b1f2      	cbz	r2, 9000f186 <http_recv+0x336>
9000f148:	f104 072c 	add.w	r7, r4, #44	@ 0x2c
    pair = strchr(pair, '&');
9000f14c:	2126      	movs	r1, #38	@ 0x26
9000f14e:	4648      	mov	r0, r9
    http_cgi_params[loop] = pair;
9000f150:	f847 9f04 	str.w	r9, [r7, #4]!
    pair = strchr(pair, '&');
9000f154:	f019 fb8f 	bl	90028876 <strchr>
    if (pair) {
9000f158:	4683      	mov	fp, r0
9000f15a:	2800      	cmp	r0, #0
9000f15c:	d0d8      	beq.n	9000f110 <http_recv+0x2c0>
      *pair = '\0';
9000f15e:	f04f 0300 	mov.w	r3, #0
9000f162:	f80b 3b01 	strb.w	r3, [fp], #1
    equals = strchr(equals, '=');
9000f166:	213d      	movs	r1, #61	@ 0x3d
9000f168:	4648      	mov	r0, r9
9000f16a:	f019 fb84 	bl	90028876 <strchr>
    if (equals) {
9000f16e:	b118      	cbz	r0, 9000f178 <http_recv+0x328>
      *equals = '\0';
9000f170:	f04f 0300 	mov.w	r3, #0
9000f174:	f800 3b01 	strb.w	r3, [r0], #1
  for (loop = 0; (loop < LWIP_HTTPD_MAX_CGI_PARAMETERS) && pair; loop++) {
9000f178:	3501      	adds	r5, #1
      http_cgi_param_vals[loop] = equals + 1;
9000f17a:	6438      	str	r0, [r7, #64]	@ 0x40
  for (loop = 0; (loop < LWIP_HTTPD_MAX_CGI_PARAMETERS) && pair; loop++) {
9000f17c:	2d10      	cmp	r5, #16
9000f17e:	d002      	beq.n	9000f186 <http_recv+0x336>
9000f180:	f1bb 0f00 	cmp.w	fp, #0
9000f184:	d1c2      	bne.n	9000f10c <http_recv+0x2bc>
          uri = httpd_cgis[i].pfnCGIHandler(i, http_cgi_paramcount, hs->params,
9000f186:	9b01      	ldr	r3, [sp, #4]
9000f188:	f104 0230 	add.w	r2, r4, #48	@ 0x30
9000f18c:	4629      	mov	r1, r5
9000f18e:	4640      	mov	r0, r8
9000f190:	eb03 09c8 	add.w	r9, r3, r8, lsl #3
9000f194:	f104 0370 	add.w	r3, r4, #112	@ 0x70
9000f198:	f8d9 7004 	ldr.w	r7, [r9, #4]
9000f19c:	47b8      	blx	r7
9000f19e:	9007      	str	r0, [sp, #28]
          break;
9000f1a0:	e6ec      	b.n	9000ef7c <http_recv+0x12c>
9000f1a2:	bf00      	nop
9000f1a4:	2001a530 	.word	0x2001a530
9000f1a8:	9002a4f0 	.word	0x9002a4f0
9000f1ac:	9002a4e9 	.word	0x9002a4e9
9000f1b0:	9002a5f9 	.word	0x9002a5f9
9000f1b4:	9002a4ee 	.word	0x9002a4ee
9000f1b8:	2001a4dc 	.word	0x2001a4dc
9000f1bc:	2001a4e0 	.word	0x2001a4e0
9000f1c0:	2001a4f0 	.word	0x2001a4f0
9000f1c4:	90035730 	.word	0x90035730
      if (file->flags & FS_FILE_FLAGS_SSI) {
9000f1c8:	7c2f      	ldrb	r7, [r5, #16]
9000f1ca:	f017 0708 	ands.w	r7, r7, #8
9000f1ce:	f47f af7f 	bne.w	9000f0d0 <http_recv+0x280>
        tag_check = http_uri_is_ssi(file, uri);
9000f1d2:	f8dd 901c 	ldr.w	r9, [sp, #28]
    char *param = (char *)strstr(uri, "?");
9000f1d6:	213f      	movs	r1, #63	@ 0x3f
9000f1d8:	4648      	mov	r0, r9
9000f1da:	f019 fb4c 	bl	90028876 <strchr>
    if (param != NULL) {
9000f1de:	4680      	mov	r8, r0
9000f1e0:	b100      	cbz	r0, 9000f1e4 <http_recv+0x394>
      *param = 0;
9000f1e2:	7007      	strb	r7, [r0, #0]
    for (sub = strstr(sub, "."); sub != NULL; sub = strstr(sub, ".")) {
9000f1e4:	212e      	movs	r1, #46	@ 0x2e
9000f1e6:	4648      	mov	r0, r9
9000f1e8:	f019 fb45 	bl	90028876 <strchr>
9000f1ec:	4683      	mov	fp, r0
9000f1ee:	b9a8      	cbnz	r0, 9000f21c <http_recv+0x3cc>
9000f1f0:	4b1f      	ldr	r3, [pc, #124]	@ (9000f270 <http_recv+0x420>)
      if (!lwip_stricmp(ext, g_pcSSIExtensions[loop])) {
9000f1f2:	f853 1b04 	ldr.w	r1, [r3], #4
9000f1f6:	4648      	mov	r0, r9
9000f1f8:	9301      	str	r3, [sp, #4]
9000f1fa:	f7fb ff80 	bl	9000b0fe <lwip_stricmp>
9000f1fe:	b1a0      	cbz	r0, 9000f22a <http_recv+0x3da>
    for (loop = 0; loop < NUM_SHTML_EXTENSIONS; loop++) {
9000f200:	f10b 0b01 	add.w	fp, fp, #1
9000f204:	9b01      	ldr	r3, [sp, #4]
9000f206:	f1bb 0f05 	cmp.w	fp, #5
9000f20a:	d1f2      	bne.n	9000f1f2 <http_recv+0x3a2>
    if (param != NULL) {
9000f20c:	f1b8 0f00 	cmp.w	r8, #0
9000f210:	f43f af5b 	beq.w	9000f0ca <http_recv+0x27a>
      *param = '?';
9000f214:	233f      	movs	r3, #63	@ 0x3f
9000f216:	f888 3000 	strb.w	r3, [r8]
  if (file != NULL) {
9000f21a:	e756      	b.n	9000f0ca <http_recv+0x27a>
    for (sub = strstr(sub, "."); sub != NULL; sub = strstr(sub, ".")) {
9000f21c:	212e      	movs	r1, #46	@ 0x2e
9000f21e:	f10b 0001 	add.w	r0, fp, #1
      ext = sub;
9000f222:	46d9      	mov	r9, fp
    for (sub = strstr(sub, "."); sub != NULL; sub = strstr(sub, ".")) {
9000f224:	f019 fb27 	bl	90028876 <strchr>
9000f228:	e7e0      	b.n	9000f1ec <http_recv+0x39c>
        tag_check = 1;
9000f22a:	2701      	movs	r7, #1
9000f22c:	e7ee      	b.n	9000f20c <http_recv+0x3bc>
    hs->file = NULL;
9000f22e:	e9c4 0005 	strd	r0, r0, [r4, #20]
    hs->left = 0;
9000f232:	6260      	str	r0, [r4, #36]	@ 0x24
    hs->retries = 0;
9000f234:	f884 0028 	strb.w	r0, [r4, #40]	@ 0x28
      if (parsed != ERR_INPROGRESS) {
9000f238:	e6d0      	b.n	9000efdc <http_recv+0x18c>
  clen = pbuf_clen(hs->req);
9000f23a:	6a20      	ldr	r0, [r4, #32]
9000f23c:	f7fc fc14 	bl	9000ba68 <pbuf_clen>
  if ((hs->req->tot_len <= LWIP_HTTPD_REQ_BUFSIZE) &&
9000f240:	6a23      	ldr	r3, [r4, #32]
9000f242:	891b      	ldrh	r3, [r3, #8]
9000f244:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9000f248:	f4bf aee4 	bcs.w	9000f014 <http_recv+0x1c4>
9000f24c:	2805      	cmp	r0, #5
9000f24e:	f63f aee1 	bhi.w	9000f014 <http_recv+0x1c4>
    return ERR_INPROGRESS;
9000f252:	f06f 0a04 	mvn.w	sl, #4
9000f256:	e6c7      	b.n	9000efe8 <http_recv+0x198>
    return ERR_USE;
9000f258:	f06f 0a07 	mvn.w	sl, #7
9000f25c:	e6be      	b.n	9000efdc <http_recv+0x18c>
      } else if (parsed == ERR_ARG) {
9000f25e:	f11a 0f10 	cmn.w	sl, #16
9000f262:	f47f ae0d 	bne.w	9000ee80 <http_recv+0x30>
9000f266:	e607      	b.n	9000ee78 <http_recv+0x28>
      pbuf_free(p);
9000f268:	4630      	mov	r0, r6
9000f26a:	f7fc fb3b 	bl	9000b8e4 <pbuf_free>
9000f26e:	e607      	b.n	9000ee80 <http_recv+0x30>
9000f270:	90035758 	.word	0x90035758

9000f274 <httpd_init>:
 * @ingroup httpd
 * Initialize the httpd: set up a listening PCB and bind it to the defined port
 */
void
httpd_init(void)
{
9000f274:	b510      	push	{r4, lr}
#endif
  LWIP_DEBUGF(HTTPD_DEBUG, ("httpd_init\n"));

  /* LWIP_ASSERT_CORE_LOCKED(); is checked by tcp_new() */

  pcb = altcp_tcp_new_ip_type(IPADDR_TYPE_ANY);
9000f276:	202e      	movs	r0, #46	@ 0x2e
9000f278:	f7fd fa90 	bl	9000c79c <tcp_new_ip_type>
  if (pcb) {
9000f27c:	4604      	mov	r4, r0
9000f27e:	b180      	cbz	r0, 9000f2a2 <httpd_init+0x2e>
    altcp_setprio(pcb, HTTPD_TCP_PRIO);
9000f280:	2101      	movs	r1, #1
9000f282:	f7fc fe07 	bl	9000be94 <tcp_setprio>
    err = altcp_bind(pcb, IP_ANY_TYPE, port);
9000f286:	2250      	movs	r2, #80	@ 0x50
9000f288:	4906      	ldr	r1, [pc, #24]	@ (9000f2a4 <httpd_init+0x30>)
9000f28a:	4620      	mov	r0, r4
9000f28c:	f7fc fd02 	bl	9000bc94 <tcp_bind>
    pcb = altcp_listen(pcb);
9000f290:	21ff      	movs	r1, #255	@ 0xff
9000f292:	4620      	mov	r0, r4
9000f294:	f7fc fda2 	bl	9000bddc <tcp_listen_with_backlog>
    altcp_accept(pcb, http_accept);
9000f298:	4903      	ldr	r1, [pc, #12]	@ (9000f2a8 <httpd_init+0x34>)
  LWIP_ASSERT("httpd_init: tcp_new failed", pcb != NULL);
  httpd_init_pcb(pcb, HTTPD_SERVER_PORT);
}
9000f29a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    altcp_accept(pcb, http_accept);
9000f29e:	f7fc be0f 	b.w	9000bec0 <tcp_accept>
}
9000f2a2:	bd10      	pop	{r4, pc}
9000f2a4:	9002abc8 	.word	0x9002abc8
9000f2a8:	9000e929 	.word	0x9000e929

9000f2ac <http_set_ssi_handler>:
http_set_ssi_handler(tSSIHandler ssi_handler, const char **tags, int num_tags)
{
  LWIP_DEBUGF(HTTPD_DEBUG, ("http_set_ssi_handler\n"));

  LWIP_ASSERT("no ssi_handler given", ssi_handler != NULL);
  httpd_ssi_handler = ssi_handler;
9000f2ac:	4b03      	ldr	r3, [pc, #12]	@ (9000f2bc <http_set_ssi_handler+0x10>)
9000f2ae:	6018      	str	r0, [r3, #0]
  LWIP_UNUSED_ARG(num_tags);
#else /* LWIP_HTTPD_SSI_RAW */
  LWIP_ASSERT("no tags given", tags != NULL);
  LWIP_ASSERT("invalid number of tags", num_tags > 0);

  httpd_tags = tags;
9000f2b0:	4b03      	ldr	r3, [pc, #12]	@ (9000f2c0 <http_set_ssi_handler+0x14>)
9000f2b2:	6019      	str	r1, [r3, #0]
  httpd_num_tags = num_tags;
9000f2b4:	4b03      	ldr	r3, [pc, #12]	@ (9000f2c4 <http_set_ssi_handler+0x18>)
9000f2b6:	601a      	str	r2, [r3, #0]
#endif /* !LWIP_HTTPD_SSI_RAW */
}
9000f2b8:	4770      	bx	lr
9000f2ba:	bf00      	nop
9000f2bc:	2001a4ec 	.word	0x2001a4ec
9000f2c0:	2001a4e4 	.word	0x2001a4e4
9000f2c4:	2001a4e8 	.word	0x2001a4e8

9000f2c8 <http_set_cgi_handlers>:
http_set_cgi_handlers(const tCGI *cgis, int num_handlers)
{
  LWIP_ASSERT("no cgis given", cgis != NULL);
  LWIP_ASSERT("invalid number of handlers", num_handlers > 0);

  httpd_cgis = cgis;
9000f2c8:	4b02      	ldr	r3, [pc, #8]	@ (9000f2d4 <http_set_cgi_handlers+0xc>)
9000f2ca:	6018      	str	r0, [r3, #0]
  httpd_num_cgis = num_handlers;
9000f2cc:	4b02      	ldr	r3, [pc, #8]	@ (9000f2d8 <http_set_cgi_handlers+0x10>)
9000f2ce:	6019      	str	r1, [r3, #0]
}
9000f2d0:	4770      	bx	lr
9000f2d2:	bf00      	nop
9000f2d4:	2001a4e0 	.word	0x2001a4e0
9000f2d8:	2001a4dc 	.word	0x2001a4dc

9000f2dc <USBD_CDC_RNDIS_GetDeviceQualifierDescriptor>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
uint8_t *USBD_CDC_RNDIS_GetDeviceQualifierDescriptor(uint16_t *length)
{
  *length = (uint16_t)(sizeof(USBD_CDC_RNDIS_DeviceQualifierDesc));
9000f2dc:	230a      	movs	r3, #10
9000f2de:	8003      	strh	r3, [r0, #0]

  return USBD_CDC_RNDIS_DeviceQualifierDesc;
}
9000f2e0:	4800      	ldr	r0, [pc, #0]	@ (9000f2e4 <USBD_CDC_RNDIS_GetDeviceQualifierDescriptor+0x8>)
9000f2e2:	4770      	bx	lr
9000f2e4:	20000138 	.word	0x20000138

9000f2e8 <USBD_CDC_RNDIS_GetFSCfgDesc>:
{
9000f2e8:	b570      	push	{r4, r5, r6, lr}
  USBD_EpDescTypeDef *pEpCmdDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_CMD_EP);
9000f2ea:	2182      	movs	r1, #130	@ 0x82
{
9000f2ec:	4606      	mov	r6, r0
  USBD_EpDescTypeDef *pEpCmdDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_CMD_EP);
9000f2ee:	480f      	ldr	r0, [pc, #60]	@ (9000f32c <USBD_CDC_RNDIS_GetFSCfgDesc+0x44>)
9000f2f0:	f000 fd26 	bl	9000fd40 <USBD_GetEpDesc>
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_OUT_EP);
9000f2f4:	2101      	movs	r1, #1
  USBD_EpDescTypeDef *pEpCmdDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_CMD_EP);
9000f2f6:	4605      	mov	r5, r0
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_OUT_EP);
9000f2f8:	480c      	ldr	r0, [pc, #48]	@ (9000f32c <USBD_CDC_RNDIS_GetFSCfgDesc+0x44>)
9000f2fa:	f000 fd21 	bl	9000fd40 <USBD_GetEpDesc>
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_IN_EP);
9000f2fe:	2181      	movs	r1, #129	@ 0x81
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_OUT_EP);
9000f300:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_IN_EP);
9000f302:	480a      	ldr	r0, [pc, #40]	@ (9000f32c <USBD_CDC_RNDIS_GetFSCfgDesc+0x44>)
9000f304:	f000 fd1c 	bl	9000fd40 <USBD_GetEpDesc>
  if (pEpCmdDesc != NULL)
9000f308:	b10d      	cbz	r5, 9000f30e <USBD_CDC_RNDIS_GetFSCfgDesc+0x26>
    pEpCmdDesc->bInterval = CDC_RNDIS_FS_BINTERVAL;
9000f30a:	2210      	movs	r2, #16
9000f30c:	71aa      	strb	r2, [r5, #6]
  if (pEpOutDesc != NULL)
9000f30e:	b11c      	cbz	r4, 9000f318 <USBD_CDC_RNDIS_GetFSCfgDesc+0x30>
    pEpOutDesc->wMaxPacketSize = CDC_RNDIS_DATA_FS_MAX_PACKET_SIZE;
9000f310:	2240      	movs	r2, #64	@ 0x40
9000f312:	7122      	strb	r2, [r4, #4]
9000f314:	2200      	movs	r2, #0
9000f316:	7162      	strb	r2, [r4, #5]
  if (pEpInDesc != NULL)
9000f318:	b118      	cbz	r0, 9000f322 <USBD_CDC_RNDIS_GetFSCfgDesc+0x3a>
    pEpInDesc->wMaxPacketSize = CDC_RNDIS_DATA_FS_MAX_PACKET_SIZE;
9000f31a:	2240      	movs	r2, #64	@ 0x40
9000f31c:	7102      	strb	r2, [r0, #4]
9000f31e:	2200      	movs	r2, #0
9000f320:	7142      	strb	r2, [r0, #5]
  *length = (uint16_t)(sizeof(USBD_CDC_RNDIS_CfgDesc));
9000f322:	234b      	movs	r3, #75	@ 0x4b
}
9000f324:	4801      	ldr	r0, [pc, #4]	@ (9000f32c <USBD_CDC_RNDIS_GetFSCfgDesc+0x44>)
  *length = (uint16_t)(sizeof(USBD_CDC_RNDIS_CfgDesc));
9000f326:	8033      	strh	r3, [r6, #0]
}
9000f328:	bd70      	pop	{r4, r5, r6, pc}
9000f32a:	bf00      	nop
9000f32c:	200000a8 	.word	0x200000a8

9000f330 <USBD_CDC_RNDIS_GetOtherSpeedCfgDesc>:
static uint8_t *USBD_CDC_RNDIS_GetOtherSpeedCfgDesc(uint16_t *length)
9000f330:	f7ff bfda 	b.w	9000f2e8 <USBD_CDC_RNDIS_GetFSCfgDesc>

9000f334 <USBD_CDC_RNDIS_GetHSCfgDesc>:
{
9000f334:	b570      	push	{r4, r5, r6, lr}
  USBD_EpDescTypeDef *pEpCmdDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_CMD_EP);
9000f336:	2182      	movs	r1, #130	@ 0x82
{
9000f338:	4606      	mov	r6, r0
  USBD_EpDescTypeDef *pEpCmdDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_CMD_EP);
9000f33a:	480f      	ldr	r0, [pc, #60]	@ (9000f378 <USBD_CDC_RNDIS_GetHSCfgDesc+0x44>)
9000f33c:	f000 fd00 	bl	9000fd40 <USBD_GetEpDesc>
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_OUT_EP);
9000f340:	2101      	movs	r1, #1
  USBD_EpDescTypeDef *pEpCmdDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_CMD_EP);
9000f342:	4605      	mov	r5, r0
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_OUT_EP);
9000f344:	480c      	ldr	r0, [pc, #48]	@ (9000f378 <USBD_CDC_RNDIS_GetHSCfgDesc+0x44>)
9000f346:	f000 fcfb 	bl	9000fd40 <USBD_GetEpDesc>
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_IN_EP);
9000f34a:	2181      	movs	r1, #129	@ 0x81
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_OUT_EP);
9000f34c:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_CDC_RNDIS_CfgDesc, CDC_RNDIS_IN_EP);
9000f34e:	480a      	ldr	r0, [pc, #40]	@ (9000f378 <USBD_CDC_RNDIS_GetHSCfgDesc+0x44>)
9000f350:	f000 fcf6 	bl	9000fd40 <USBD_GetEpDesc>
  if (pEpCmdDesc != NULL)
9000f354:	b10d      	cbz	r5, 9000f35a <USBD_CDC_RNDIS_GetHSCfgDesc+0x26>
    pEpCmdDesc->bInterval = CDC_RNDIS_HS_BINTERVAL;
9000f356:	2210      	movs	r2, #16
9000f358:	71aa      	strb	r2, [r5, #6]
  if (pEpOutDesc != NULL)
9000f35a:	b11c      	cbz	r4, 9000f364 <USBD_CDC_RNDIS_GetHSCfgDesc+0x30>
    pEpOutDesc->wMaxPacketSize = CDC_RNDIS_DATA_HS_MAX_PACKET_SIZE;
9000f35c:	2200      	movs	r2, #0
9000f35e:	7122      	strb	r2, [r4, #4]
9000f360:	2202      	movs	r2, #2
9000f362:	7162      	strb	r2, [r4, #5]
  if (pEpInDesc != NULL)
9000f364:	b118      	cbz	r0, 9000f36e <USBD_CDC_RNDIS_GetHSCfgDesc+0x3a>
    pEpInDesc->wMaxPacketSize = CDC_RNDIS_DATA_HS_MAX_PACKET_SIZE;
9000f366:	2200      	movs	r2, #0
9000f368:	7102      	strb	r2, [r0, #4]
9000f36a:	2202      	movs	r2, #2
9000f36c:	7142      	strb	r2, [r0, #5]
  *length = (uint16_t)(sizeof(USBD_CDC_RNDIS_CfgDesc));
9000f36e:	234b      	movs	r3, #75	@ 0x4b
}
9000f370:	4801      	ldr	r0, [pc, #4]	@ (9000f378 <USBD_CDC_RNDIS_GetHSCfgDesc+0x44>)
  *length = (uint16_t)(sizeof(USBD_CDC_RNDIS_CfgDesc));
9000f372:	8033      	strh	r3, [r6, #0]
}
9000f374:	bd70      	pop	{r4, r5, r6, pc}
9000f376:	bf00      	nop
9000f378:	200000a8 	.word	0x200000a8

9000f37c <USBD_CDC_RNDIS_Setup>:
{
9000f37c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9000f37e:	f8d0 62d4 	ldr.w	r6, [r0, #724]	@ 0x2d4
  uint8_t ifalt = 0U;
9000f382:	2700      	movs	r7, #0
{
9000f384:	4604      	mov	r4, r0
9000f386:	460b      	mov	r3, r1
9000f388:	eb00 0686 	add.w	r6, r0, r6, lsl #2
  uint8_t ifalt = 0U;
9000f38c:	f88d 7005 	strb.w	r7, [sp, #5]
  uint16_t status_info = 0U;
9000f390:	f8ad 7006 	strh.w	r7, [sp, #6]
  USBD_CDC_RNDIS_HandleTypeDef *hcdc = (USBD_CDC_RNDIS_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
9000f394:	f8d6 52c0 	ldr.w	r5, [r6, #704]	@ 0x2c0
  if (hcdc == NULL)
9000f398:	2d00      	cmp	r5, #0
9000f39a:	d071      	beq.n	9000f480 <USBD_CDC_RNDIS_Setup+0x104>
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
9000f39c:	f891 c000 	ldrb.w	ip, [r1]
9000f3a0:	f01c 0260 	ands.w	r2, ip, #96	@ 0x60
9000f3a4:	d035      	beq.n	9000f412 <USBD_CDC_RNDIS_Setup+0x96>
9000f3a6:	2a20      	cmp	r2, #32
9000f3a8:	d166      	bne.n	9000f478 <USBD_CDC_RNDIS_Setup+0xfc>
      if (req->wLength != 0U)
9000f3aa:	88ca      	ldrh	r2, [r1, #6]
          hcdc->CmdOpCode = req->bRequest;
9000f3ac:	784b      	ldrb	r3, [r1, #1]
      if (req->wLength != 0U)
9000f3ae:	b352      	cbz	r2, 9000f406 <USBD_CDC_RNDIS_Setup+0x8a>
        if ((req->bmRequest & 0x80U) != 0U)
9000f3b0:	f01c 0f80 	tst.w	ip, #128	@ 0x80
          hcdc->CmdOpCode = req->bRequest;
9000f3b4:	f885 37d0 	strb.w	r3, [r5, #2000]	@ 0x7d0
        if ((req->bmRequest & 0x80U) != 0U)
9000f3b8:	d01a      	beq.n	9000f3f0 <USBD_CDC_RNDIS_Setup+0x74>
          hcdc->CmdLength = (uint8_t)req->wLength;
9000f3ba:	f885 27d1 	strb.w	r2, [r5, #2001]	@ 0x7d1
          ((USBD_CDC_RNDIS_ItfTypeDef *)pdev->pUserData[pdev->classId])->Control(req->bRequest,
9000f3be:	4618      	mov	r0, r3
9000f3c0:	f8d6 12c4 	ldr.w	r1, [r6, #708]	@ 0x2c4
9000f3c4:	688e      	ldr	r6, [r1, #8]
9000f3c6:	4629      	mov	r1, r5
9000f3c8:	47b0      	blx	r6
          if (hcdc->ResponseRdy != 0U)
9000f3ca:	f895 37d2 	ldrb.w	r3, [r5, #2002]	@ 0x7d2
9000f3ce:	b163      	cbz	r3, 9000f3ea <USBD_CDC_RNDIS_Setup+0x6e>
                                   MIN(CDC_RNDIS_MAX_DATA_SZE, Msg->MsgLength));
9000f3d0:	686a      	ldr	r2, [r5, #4]
            (void)USBD_CtlSendData(pdev, (uint8_t *)hcdc->data,
9000f3d2:	4629      	mov	r1, r5
            hcdc->ResponseRdy = 0U;
9000f3d4:	f885 77d2 	strb.w	r7, [r5, #2002]	@ 0x7d2
            (void)USBD_CtlSendData(pdev, (uint8_t *)hcdc->data,
9000f3d8:	f5b2 6ffa 	cmp.w	r2, #2000	@ 0x7d0
9000f3dc:	bf28      	it	cs
9000f3de:	f44f 62fa 	movcs.w	r2, #2000	@ 0x7d0
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
9000f3e2:	4620      	mov	r0, r4
9000f3e4:	f000 ff52 	bl	9001028c <USBD_CtlSendData>
9000f3e8:	e00a      	b.n	9000f400 <USBD_CDC_RNDIS_Setup+0x84>
            (void)USBD_CtlSendData(pdev, &EmptyResponse, 1U);
9000f3ea:	2201      	movs	r2, #1
9000f3ec:	4925      	ldr	r1, [pc, #148]	@ (9000f484 <USBD_CDC_RNDIS_Setup+0x108>)
9000f3ee:	e7f8      	b.n	9000f3e2 <USBD_CDC_RNDIS_Setup+0x66>
          hcdc->CmdLength = (uint8_t)MIN(CDC_RNDIS_MAX_INFO_BUFF_SZ, req->wLength);
9000f3f0:	2ac8      	cmp	r2, #200	@ 0xc8
          (void)USBD_CtlPrepareRx(pdev, (uint8_t *)hcdc->data, hcdc->CmdLength);
9000f3f2:	4629      	mov	r1, r5
          hcdc->CmdLength = (uint8_t)MIN(CDC_RNDIS_MAX_INFO_BUFF_SZ, req->wLength);
9000f3f4:	bf28      	it	cs
9000f3f6:	22c8      	movcs	r2, #200	@ 0xc8
9000f3f8:	f885 27d1 	strb.w	r2, [r5, #2001]	@ 0x7d1
          (void)USBD_CtlPrepareRx(pdev, (uint8_t *)hcdc->data, hcdc->CmdLength);
9000f3fc:	f000 ff5b 	bl	900102b6 <USBD_CtlPrepareRx>
    return (uint8_t)USBD_FAIL;
9000f400:	2000      	movs	r0, #0
}
9000f402:	b003      	add	sp, #12
9000f404:	bdf0      	pop	{r4, r5, r6, r7, pc}
        ((USBD_CDC_RNDIS_ItfTypeDef *)pdev->pUserData[pdev->classId])->Control(req->bRequest,
9000f406:	f8d6 02c4 	ldr.w	r0, [r6, #708]	@ 0x2c4
9000f40a:	6884      	ldr	r4, [r0, #8]
9000f40c:	4618      	mov	r0, r3
9000f40e:	47a0      	blx	r4
9000f410:	e7f6      	b.n	9000f400 <USBD_CDC_RNDIS_Setup+0x84>
      switch (req->bRequest)
9000f412:	784a      	ldrb	r2, [r1, #1]
9000f414:	2a0b      	cmp	r2, #11
9000f416:	d82f      	bhi.n	9000f478 <USBD_CDC_RNDIS_Setup+0xfc>
9000f418:	a101      	add	r1, pc, #4	@ (adr r1, 9000f420 <USBD_CDC_RNDIS_Setup+0xa4>)
9000f41a:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
9000f41e:	bf00      	nop
9000f420:	9000f451 	.word	0x9000f451
9000f424:	9000f401 	.word	0x9000f401
9000f428:	9000f479 	.word	0x9000f479
9000f42c:	9000f479 	.word	0x9000f479
9000f430:	9000f479 	.word	0x9000f479
9000f434:	9000f479 	.word	0x9000f479
9000f438:	9000f479 	.word	0x9000f479
9000f43c:	9000f479 	.word	0x9000f479
9000f440:	9000f479 	.word	0x9000f479
9000f444:	9000f479 	.word	0x9000f479
9000f448:	9000f461 	.word	0x9000f461
9000f44c:	9000f471 	.word	0x9000f471
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
9000f450:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
9000f454:	2a03      	cmp	r2, #3
9000f456:	d10f      	bne.n	9000f478 <USBD_CDC_RNDIS_Setup+0xfc>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
9000f458:	2202      	movs	r2, #2
9000f45a:	f10d 0106 	add.w	r1, sp, #6
9000f45e:	e7c0      	b.n	9000f3e2 <USBD_CDC_RNDIS_Setup+0x66>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
9000f460:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
9000f464:	2a03      	cmp	r2, #3
9000f466:	d107      	bne.n	9000f478 <USBD_CDC_RNDIS_Setup+0xfc>
            (void)USBD_CtlSendData(pdev, &ifalt, 1U);
9000f468:	2201      	movs	r2, #1
9000f46a:	f10d 0105 	add.w	r1, sp, #5
9000f46e:	e7b8      	b.n	9000f3e2 <USBD_CDC_RNDIS_Setup+0x66>
          if (pdev->dev_state != USBD_STATE_CONFIGURED)
9000f470:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
9000f474:	2a03      	cmp	r2, #3
9000f476:	d0c3      	beq.n	9000f400 <USBD_CDC_RNDIS_Setup+0x84>
          USBD_CtlError(pdev, req);
9000f478:	4619      	mov	r1, r3
9000f47a:	4620      	mov	r0, r4
9000f47c:	f000 feda 	bl	90010234 <USBD_CtlError>
    return (uint8_t)USBD_FAIL;
9000f480:	2003      	movs	r0, #3
9000f482:	e7be      	b.n	9000f402 <USBD_CDC_RNDIS_Setup+0x86>
9000f484:	2001aa30 	.word	0x2001aa30

9000f488 <USBD_CDC_RNDIS_DeInit>:
{
9000f488:	b538      	push	{r3, r4, r5, lr}
9000f48a:	4604      	mov	r4, r0
  pdev->ep_in[RNDISInEpAdd & 0xFU].is_used = 0U;
9000f48c:	2500      	movs	r5, #0
  (void)USBD_LL_CloseEP(pdev, RNDISInEpAdd);
9000f48e:	2181      	movs	r1, #129	@ 0x81
9000f490:	f7f2 fd59 	bl	90001f46 <USBD_LL_CloseEP>
  (void)USBD_LL_CloseEP(pdev, RNDISOutEpAdd);
9000f494:	2101      	movs	r1, #1
9000f496:	4620      	mov	r0, r4
  pdev->ep_in[RNDISInEpAdd & 0xFU].is_used = 0U;
9000f498:	8725      	strh	r5, [r4, #56]	@ 0x38
  (void)USBD_LL_CloseEP(pdev, RNDISOutEpAdd);
9000f49a:	f7f2 fd54 	bl	90001f46 <USBD_LL_CloseEP>
  (void)USBD_LL_CloseEP(pdev, RNDISCmdEpAdd);
9000f49e:	2182      	movs	r1, #130	@ 0x82
9000f4a0:	4620      	mov	r0, r4
  pdev->ep_out[RNDISOutEpAdd & 0xFU].is_used = 0U;
9000f4a2:	f8a4 5178 	strh.w	r5, [r4, #376]	@ 0x178
  (void)USBD_LL_CloseEP(pdev, RNDISCmdEpAdd);
9000f4a6:	f7f2 fd4e 	bl	90001f46 <USBD_LL_CloseEP>
  pdev->ep_in[RNDISCmdEpAdd & 0xFU].bInterval = 0U;
9000f4aa:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
  pdev->ep_in[RNDISCmdEpAdd & 0xFU].is_used = 0U;
9000f4ae:	64e5      	str	r5, [r4, #76]	@ 0x4c
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
9000f4b0:	eb04 0383 	add.w	r3, r4, r3, lsl #2
9000f4b4:	f8d3 22c0 	ldr.w	r2, [r3, #704]	@ 0x2c0
9000f4b8:	b18a      	cbz	r2, 9000f4de <USBD_CDC_RNDIS_DeInit+0x56>
    ((USBD_CDC_RNDIS_ItfTypeDef *)pdev->pUserData[pdev->classId])->DeInit();
9000f4ba:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
9000f4be:	685b      	ldr	r3, [r3, #4]
9000f4c0:	4798      	blx	r3
    USBD_free(pdev->pClassDataCmsit[pdev->classId]);
9000f4c2:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
9000f4c6:	33b0      	adds	r3, #176	@ 0xb0
9000f4c8:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
9000f4cc:	f018 ff90 	bl	900283f0 <free>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
9000f4d0:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
9000f4d4:	33b0      	adds	r3, #176	@ 0xb0
9000f4d6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
    pdev->pClassData = NULL;
9000f4da:	f8c4 52bc 	str.w	r5, [r4, #700]	@ 0x2bc
}
9000f4de:	2000      	movs	r0, #0
9000f4e0:	bd38      	pop	{r3, r4, r5, pc}

9000f4e2 <USBD_CDC_RNDIS_Init>:
{
9000f4e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000f4e4:	4604      	mov	r4, r0
  hcdc = (USBD_CDC_RNDIS_HandleTypeDef *)USBD_malloc(sizeof(USBD_CDC_RNDIS_HandleTypeDef));
9000f4e6:	f44f 6001 	mov.w	r0, #2064	@ 0x810
9000f4ea:	f018 ff79 	bl	900283e0 <malloc>
  if (hcdc == NULL)
9000f4ee:	4605      	mov	r5, r0
9000f4f0:	b930      	cbnz	r0, 9000f500 <USBD_CDC_RNDIS_Init+0x1e>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
9000f4f2:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
9000f4f6:	33b0      	adds	r3, #176	@ 0xb0
9000f4f8:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
    return (uint8_t)USBD_EMEM;
9000f4fc:	2002      	movs	r0, #2
}
9000f4fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  (void)USBD_memset(hcdc, 0, sizeof(USBD_CDC_RNDIS_HandleTypeDef));
9000f500:	f44f 6201 	mov.w	r2, #2064	@ 0x810
9000f504:	2100      	movs	r1, #0
9000f506:	f019 f9ae 	bl	90028866 <memset>
  pdev->pClassDataCmsit[pdev->classId] = (void *)hcdc;
9000f50a:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
9000f50e:	33b0      	adds	r3, #176	@ 0xb0
9000f510:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
  if (pdev->dev_speed == USBD_SPEED_HIGH)
9000f514:	7c23      	ldrb	r3, [r4, #16]
  pdev->pClassData = pdev->pClassDataCmsit[pdev->classId];
9000f516:	f8c4 52bc 	str.w	r5, [r4, #700]	@ 0x2bc
  if (pdev->dev_speed == USBD_SPEED_HIGH)
9000f51a:	2b00      	cmp	r3, #0
9000f51c:	d148      	bne.n	9000f5b0 <USBD_CDC_RNDIS_Init+0xce>
    (void)USBD_LL_OpenEP(pdev, RNDISInEpAdd, USBD_EP_TYPE_BULK,
9000f51e:	f44f 7300 	mov.w	r3, #512	@ 0x200
9000f522:	2181      	movs	r1, #129	@ 0x81
9000f524:	2202      	movs	r2, #2
9000f526:	4620      	mov	r0, r4
9000f528:	f7f2 fd03 	bl	90001f32 <USBD_LL_OpenEP>
    pdev->ep_in[RNDISInEpAdd & 0xFU].is_used = 1U;
9000f52c:	2101      	movs	r1, #1
    (void)USBD_LL_OpenEP(pdev, RNDISOutEpAdd, USBD_EP_TYPE_BULK,
9000f52e:	f44f 7300 	mov.w	r3, #512	@ 0x200
    pdev->ep_in[RNDISInEpAdd & 0xFU].is_used = 1U;
9000f532:	8721      	strh	r1, [r4, #56]	@ 0x38
    (void)USBD_LL_OpenEP(pdev, RNDISOutEpAdd, USBD_EP_TYPE_BULK,
9000f534:	2202      	movs	r2, #2
9000f536:	4620      	mov	r0, r4
9000f538:	f7f2 fcfb 	bl	90001f32 <USBD_LL_OpenEP>
    pdev->ep_out[RNDISOutEpAdd & 0xFU].is_used = 1U;
9000f53c:	2701      	movs	r7, #1
    pdev->ep_in[RNDISCmdEpAdd & 0xFU].bInterval = CDC_RNDIS_HS_BINTERVAL;
9000f53e:	2310      	movs	r3, #16
  (void)USBD_LL_OpenEP(pdev, RNDISCmdEpAdd, USBD_EP_TYPE_INTR, CDC_RNDIS_CMD_PACKET_SIZE);
9000f540:	2203      	movs	r2, #3
9000f542:	2182      	movs	r1, #130	@ 0x82
9000f544:	4620      	mov	r0, r4
    pdev->ep_in[RNDISCmdEpAdd & 0xFU].bInterval = CDC_RNDIS_HS_BINTERVAL;
9000f546:	f8a4 304e 	strh.w	r3, [r4, #78]	@ 0x4e
  hcdc->RxBuffer = NULL;
9000f54a:	2600      	movs	r6, #0
    pdev->ep_out[RNDISOutEpAdd & 0xFU].is_used = 1U;
9000f54c:	f8a4 7178 	strh.w	r7, [r4, #376]	@ 0x178
  (void)USBD_LL_OpenEP(pdev, RNDISCmdEpAdd, USBD_EP_TYPE_INTR, CDC_RNDIS_CMD_PACKET_SIZE);
9000f550:	f7f2 fcef 	bl	90001f32 <USBD_LL_OpenEP>
  ((USBD_CDC_RNDIS_ItfTypeDef *)pdev->pUserData[pdev->classId])->Init();
9000f554:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
  pdev->ep_in[RNDISCmdEpAdd & 0xFU].is_used = 1U;
9000f558:	f8a4 704c 	strh.w	r7, [r4, #76]	@ 0x4c
  ((USBD_CDC_RNDIS_ItfTypeDef *)pdev->pUserData[pdev->classId])->Init();
9000f55c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
  hcdc->RxBuffer = NULL;
9000f560:	f8c5 67d4 	str.w	r6, [r5, #2004]	@ 0x7d4
  ((USBD_CDC_RNDIS_ItfTypeDef *)pdev->pUserData[pdev->classId])->Init();
9000f564:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
9000f568:	681b      	ldr	r3, [r3, #0]
9000f56a:	4798      	blx	r3
  hcdc->MaxPcktLen = (pdev->dev_speed == USBD_SPEED_HIGH) ? CDC_RNDIS_DATA_HS_MAX_PACKET_SIZE : \
9000f56c:	7c23      	ldrb	r3, [r4, #16]
  if (hcdc->RxBuffer == NULL)
9000f56e:	f8d5 27d4 	ldr.w	r2, [r5, #2004]	@ 0x7d4
  hcdc->MaxPcktLen = (pdev->dev_speed == USBD_SPEED_HIGH) ? CDC_RNDIS_DATA_HS_MAX_PACKET_SIZE : \
9000f572:	42b3      	cmp	r3, r6
  hcdc->TxState = 0U;
9000f574:	f8c5 67f8 	str.w	r6, [r5, #2040]	@ 0x7f8
  hcdc->State = CDC_RNDIS_STATE_BUS_INITIALIZED;
9000f578:	f885 77f4 	strb.w	r7, [r5, #2036]	@ 0x7f4
  hcdc->MaxPcktLen = (pdev->dev_speed == USBD_SPEED_HIGH) ? CDC_RNDIS_DATA_HS_MAX_PACKET_SIZE : \
9000f57c:	bf14      	ite	ne
9000f57e:	2340      	movne	r3, #64	@ 0x40
9000f580:	f44f 7300 	moveq.w	r3, #512	@ 0x200
  hcdc->RxState = 0U;
9000f584:	f8c5 67fc 	str.w	r6, [r5, #2044]	@ 0x7fc
  hcdc->RxLength = 0U;
9000f588:	f8c5 67dc 	str.w	r6, [r5, #2012]	@ 0x7dc
  hcdc->LinkStatus = 0U;
9000f58c:	f8c5 6804 	str.w	r6, [r5, #2052]	@ 0x804
  hcdc->TxLength = 0U;
9000f590:	f8c5 67e0 	str.w	r6, [r5, #2016]	@ 0x7e0
  hcdc->NotificationStatus = 0U;
9000f594:	f8c5 6808 	str.w	r6, [r5, #2056]	@ 0x808
  hcdc->MaxPcktLen = (pdev->dev_speed == USBD_SPEED_HIGH) ? CDC_RNDIS_DATA_HS_MAX_PACKET_SIZE : \
9000f598:	f8c5 3800 	str.w	r3, [r5, #2048]	@ 0x800
  if (hcdc->RxBuffer == NULL)
9000f59c:	2a00      	cmp	r2, #0
9000f59e:	d0ad      	beq.n	9000f4fc <USBD_CDC_RNDIS_Init+0x1a>
                               hcdc->RxBuffer, hcdc->MaxPcktLen);
9000f5a0:	f8d5 3800 	ldr.w	r3, [r5, #2048]	@ 0x800
  (void)USBD_LL_PrepareReceive(pdev, RNDISOutEpAdd,
9000f5a4:	4639      	mov	r1, r7
9000f5a6:	4620      	mov	r0, r4
9000f5a8:	f7f2 fd08 	bl	90001fbc <USBD_LL_PrepareReceive>
  return (uint8_t)USBD_OK;
9000f5ac:	4630      	mov	r0, r6
9000f5ae:	e7a6      	b.n	9000f4fe <USBD_CDC_RNDIS_Init+0x1c>
    (void)USBD_LL_OpenEP(pdev, RNDISInEpAdd, USBD_EP_TYPE_BULK,
9000f5b0:	2340      	movs	r3, #64	@ 0x40
9000f5b2:	2181      	movs	r1, #129	@ 0x81
9000f5b4:	2202      	movs	r2, #2
9000f5b6:	4620      	mov	r0, r4
9000f5b8:	f7f2 fcbb 	bl	90001f32 <USBD_LL_OpenEP>
    pdev->ep_in[RNDISInEpAdd & 0xFU].is_used = 1U;
9000f5bc:	2101      	movs	r1, #1
    (void)USBD_LL_OpenEP(pdev, RNDISOutEpAdd, USBD_EP_TYPE_BULK,
9000f5be:	2340      	movs	r3, #64	@ 0x40
    pdev->ep_in[RNDISInEpAdd & 0xFU].is_used = 1U;
9000f5c0:	8721      	strh	r1, [r4, #56]	@ 0x38
    (void)USBD_LL_OpenEP(pdev, RNDISOutEpAdd, USBD_EP_TYPE_BULK,
9000f5c2:	e7b7      	b.n	9000f534 <USBD_CDC_RNDIS_Init+0x52>

9000f5c4 <USBD_CDC_RNDIS_USRStringDescriptor>:
static uint8_t *USBD_CDC_RNDIS_USRStringDescriptor(USBD_HandleTypeDef *pdev, uint8_t index, uint16_t *length)
{
  static uint8_t USBD_StrDesc[255];

  /* Check if the requested string interface is supported */
  if (index == CDC_RNDIS_MAC_STRING_INDEX)
9000f5c4:	2906      	cmp	r1, #6
{
9000f5c6:	b508      	push	{r3, lr}
  if (index == CDC_RNDIS_MAC_STRING_INDEX)
9000f5c8:	d10b      	bne.n	9000f5e2 <USBD_CDC_RNDIS_USRStringDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)((USBD_CDC_RNDIS_ItfTypeDef *)pdev->pUserData[pdev->classId])->pStrDesc, USBD_StrDesc,
9000f5ca:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
9000f5ce:	4906      	ldr	r1, [pc, #24]	@ (9000f5e8 <USBD_CDC_RNDIS_USRStringDescriptor+0x24>)
9000f5d0:	eb00 0083 	add.w	r0, r0, r3, lsl #2
9000f5d4:	f8d0 32c4 	ldr.w	r3, [r0, #708]	@ 0x2c4
9000f5d8:	6998      	ldr	r0, [r3, #24]
9000f5da:	f000 fe36 	bl	9001024a <USBD_GetString>
9000f5de:	4802      	ldr	r0, [pc, #8]	@ (9000f5e8 <USBD_CDC_RNDIS_USRStringDescriptor+0x24>)
  /* Not supported Interface Descriptor index */
  else
  {
    return NULL;
  }
}
9000f5e0:	bd08      	pop	{r3, pc}
    return NULL;
9000f5e2:	2000      	movs	r0, #0
9000f5e4:	e7fc      	b.n	9000f5e0 <USBD_CDC_RNDIS_USRStringDescriptor+0x1c>
9000f5e6:	bf00      	nop
9000f5e8:	2001a931 	.word	0x2001a931

9000f5ec <USBD_CDC_RNDIS_DataOut>:
{
9000f5ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (pdev->pClassDataCmsit[pdev->classId] == NULL)
9000f5ee:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
{
9000f5f2:	4604      	mov	r4, r0
9000f5f4:	460f      	mov	r7, r1
  if (pdev->pClassDataCmsit[pdev->classId] == NULL)
9000f5f6:	33b0      	adds	r3, #176	@ 0xb0
9000f5f8:	f850 5023 	ldr.w	r5, [r0, r3, lsl #2]
9000f5fc:	b39d      	cbz	r5, 9000f666 <USBD_CDC_RNDIS_DataOut+0x7a>
  if (epnum == RNDISOutEpAdd)
9000f5fe:	2901      	cmp	r1, #1
9000f600:	d131      	bne.n	9000f666 <USBD_CDC_RNDIS_DataOut+0x7a>
    CurrPcktLen = USBD_LL_GetRxDataSize(pdev, epnum);
9000f602:	f7f2 fce2 	bl	90001fca <USBD_LL_GetRxDataSize>
    hcdc->RxLength += CurrPcktLen;
9000f606:	f8d5 27dc 	ldr.w	r2, [r5, #2012]	@ 0x7dc
    if ((CurrPcktLen < hcdc->MaxPcktLen) ||
9000f60a:	f8d5 3800 	ldr.w	r3, [r5, #2048]	@ 0x800
    hcdc->RxLength += CurrPcktLen;
9000f60e:	4402      	add	r2, r0
9000f610:	f8d5 67d4 	ldr.w	r6, [r5, #2004]	@ 0x7d4
    if ((CurrPcktLen < hcdc->MaxPcktLen) ||
9000f614:	4283      	cmp	r3, r0
    hcdc->RxLength += CurrPcktLen;
9000f616:	f8c5 27dc 	str.w	r2, [r5, #2012]	@ 0x7dc
    if ((CurrPcktLen < hcdc->MaxPcktLen) ||
9000f61a:	d803      	bhi.n	9000f624 <USBD_CDC_RNDIS_DataOut+0x38>
9000f61c:	f240 6315 	movw	r3, #1557	@ 0x615
9000f620:	429a      	cmp	r2, r3
9000f622:	d918      	bls.n	9000f656 <USBD_CDC_RNDIS_DataOut+0x6a>
{
  uint32_t tmp1;
  uint32_t tmp2;

  /* Get the CDC_RNDIS handle pointer */
  USBD_CDC_RNDIS_HandleTypeDef *hcdc = (USBD_CDC_RNDIS_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
9000f624:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
9000f628:	eb04 0383 	add.w	r3, r4, r3, lsl #2
9000f62c:	f8d3 12c0 	ldr.w	r1, [r3, #704]	@ 0x2c0

  /* Get and format the Msg input */
  USBD_CDC_RNDIS_PacketMsgTypeDef *PacketMsg = (USBD_CDC_RNDIS_PacketMsgTypeDef *)Msg;

  if (hcdc == NULL)
9000f630:	b179      	cbz	r1, 9000f652 <USBD_CDC_RNDIS_DataOut+0x66>
  {
    return (uint8_t)USBD_FAIL;
  }

  /* Check correctness of the message */
  if ((PacketMsg->MsgType != CDC_RNDIS_PACKET_MSG_ID))
9000f632:	6832      	ldr	r2, [r6, #0]
9000f634:	2a01      	cmp	r2, #1
9000f636:	d10c      	bne.n	9000f652 <USBD_CDC_RNDIS_DataOut+0x66>
  /* Point to the payload and update the message length */

  /* Use temporary storage variables to comply with MISRA-C 2012 rule of (+) operand allowed types */
  tmp1 = (uint32_t)PacketMsg;
  tmp2 = (uint32_t)(PacketMsg->DataOffset);
  hcdc->RxBuffer = (uint8_t *)(tmp1 + tmp2 + CDC_RNDIS_PCKTMSG_DATAOFFSET_OFFSET);
9000f638:	68b0      	ldr	r0, [r6, #8]
  hcdc->RxLength = PacketMsg->DataLength;

  /* Process data by application */
  ((USBD_CDC_RNDIS_ItfTypeDef *)pdev->pUserData[pdev->classId])->Receive(hcdc->RxBuffer, &hcdc->RxLength);
9000f63a:	f201 71dc 	addw	r1, r1, #2012	@ 0x7dc
  hcdc->RxLength = PacketMsg->DataLength;
9000f63e:	68f2      	ldr	r2, [r6, #12]
  hcdc->RxBuffer = (uint8_t *)(tmp1 + tmp2 + CDC_RNDIS_PCKTMSG_DATAOFFSET_OFFSET);
9000f640:	4430      	add	r0, r6
  ((USBD_CDC_RNDIS_ItfTypeDef *)pdev->pUserData[pdev->classId])->Receive(hcdc->RxBuffer, &hcdc->RxLength);
9000f642:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
  hcdc->RxLength = PacketMsg->DataLength;
9000f646:	600a      	str	r2, [r1, #0]
  hcdc->RxBuffer = (uint8_t *)(tmp1 + tmp2 + CDC_RNDIS_PCKTMSG_DATAOFFSET_OFFSET);
9000f648:	3008      	adds	r0, #8
  ((USBD_CDC_RNDIS_ItfTypeDef *)pdev->pUserData[pdev->classId])->Receive(hcdc->RxBuffer, &hcdc->RxLength);
9000f64a:	68db      	ldr	r3, [r3, #12]
  hcdc->RxBuffer = (uint8_t *)(tmp1 + tmp2 + CDC_RNDIS_PCKTMSG_DATAOFFSET_OFFSET);
9000f64c:	f841 0c08 	str.w	r0, [r1, #-8]
  ((USBD_CDC_RNDIS_ItfTypeDef *)pdev->pUserData[pdev->classId])->Receive(hcdc->RxBuffer, &hcdc->RxLength);
9000f650:	4798      	blx	r3
  return (uint8_t)USBD_OK;
9000f652:	2000      	movs	r0, #0
}
9000f654:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                                   hcdc->MaxPcktLen);
9000f656:	f8d5 3800 	ldr.w	r3, [r5, #2048]	@ 0x800
      (void)USBD_LL_PrepareReceive(pdev, RNDISOutEpAdd,
9000f65a:	4432      	add	r2, r6
9000f65c:	4639      	mov	r1, r7
9000f65e:	4620      	mov	r0, r4
9000f660:	f7f2 fcac 	bl	90001fbc <USBD_LL_PrepareReceive>
9000f664:	e7f5      	b.n	9000f652 <USBD_CDC_RNDIS_DataOut+0x66>
    return (uint8_t)USBD_FAIL;
9000f666:	2003      	movs	r0, #3
9000f668:	e7f4      	b.n	9000f654 <USBD_CDC_RNDIS_DataOut+0x68>

9000f66a <USBD_CDC_RNDIS_RegisterInterface>:
  if (fops == NULL)
9000f66a:	b139      	cbz	r1, 9000f67c <USBD_CDC_RNDIS_RegisterInterface+0x12>
  pdev->pUserData[pdev->classId] = fops;
9000f66c:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
9000f670:	eb00 0083 	add.w	r0, r0, r3, lsl #2
9000f674:	f8c0 12c4 	str.w	r1, [r0, #708]	@ 0x2c4
  return (uint8_t)USBD_OK;
9000f678:	2000      	movs	r0, #0
9000f67a:	4770      	bx	lr
    return (uint8_t)USBD_FAIL;
9000f67c:	2003      	movs	r0, #3
}
9000f67e:	4770      	bx	lr

9000f680 <USBD_CDC_RNDIS_SetTxBuffer>:
  USBD_CDC_RNDIS_HandleTypeDef *hcdc = (USBD_CDC_RNDIS_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
9000f680:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
9000f684:	33b0      	adds	r3, #176	@ 0xb0
9000f686:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
  if (hcdc == NULL)
9000f68a:	b12b      	cbz	r3, 9000f698 <USBD_CDC_RNDIS_SetTxBuffer+0x18>
  return (uint8_t)USBD_OK;
9000f68c:	2000      	movs	r0, #0
  hcdc->TxBuffer = pbuff;
9000f68e:	f8c3 17d8 	str.w	r1, [r3, #2008]	@ 0x7d8
  hcdc->TxLength = length;
9000f692:	f8c3 27e0 	str.w	r2, [r3, #2016]	@ 0x7e0
  return (uint8_t)USBD_OK;
9000f696:	4770      	bx	lr
    return (uint8_t)USBD_FAIL;
9000f698:	2003      	movs	r0, #3
}
9000f69a:	4770      	bx	lr

9000f69c <USBD_CDC_RNDIS_SetRxBuffer>:
  USBD_CDC_RNDIS_HandleTypeDef *hcdc = (USBD_CDC_RNDIS_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
9000f69c:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
9000f6a0:	33b0      	adds	r3, #176	@ 0xb0
9000f6a2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
  if (hcdc == NULL)
9000f6a6:	b11b      	cbz	r3, 9000f6b0 <USBD_CDC_RNDIS_SetRxBuffer+0x14>
  return (uint8_t)USBD_OK;
9000f6a8:	2000      	movs	r0, #0
  hcdc->RxBuffer = pbuff;
9000f6aa:	f8c3 17d4 	str.w	r1, [r3, #2004]	@ 0x7d4
  return (uint8_t)USBD_OK;
9000f6ae:	4770      	bx	lr
    return (uint8_t)USBD_FAIL;
9000f6b0:	2003      	movs	r0, #3
}
9000f6b2:	4770      	bx	lr

9000f6b4 <USBD_CDC_RNDIS_TransmitPacket>:
{
9000f6b4:	b538      	push	{r3, r4, r5, lr}
  USBD_CDC_RNDIS_HandleTypeDef *hcdc = (USBD_CDC_RNDIS_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
9000f6b6:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
9000f6ba:	33b0      	adds	r3, #176	@ 0xb0
9000f6bc:	f850 5023 	ldr.w	r5, [r0, r3, lsl #2]
  if (hcdc == NULL)
9000f6c0:	b1ed      	cbz	r5, 9000f6fe <USBD_CDC_RNDIS_TransmitPacket+0x4a>
  if (hcdc->TxState == 0U)
9000f6c2:	f8d5 47f8 	ldr.w	r4, [r5, #2040]	@ 0x7f8
9000f6c6:	2301      	movs	r3, #1
9000f6c8:	b9dc      	cbnz	r4, 9000f702 <USBD_CDC_RNDIS_TransmitPacket+0x4e>
  PacketMsg = (USBD_CDC_RNDIS_PacketMsgTypeDef *)(void *)hcdc->TxBuffer;
9000f6ca:	f8d5 27d8 	ldr.w	r2, [r5, #2008]	@ 0x7d8
    (void)USBD_LL_Transmit(pdev, RNDISInEpAdd, hcdc->TxBuffer, hcdc->TxLength);
9000f6ce:	2181      	movs	r1, #129	@ 0x81
    hcdc->TxState = 1U;
9000f6d0:	f8c5 37f8 	str.w	r3, [r5, #2040]	@ 0x7f8
    PacketMsg->MsgType = CDC_RNDIS_PACKET_MSG_ID;
9000f6d4:	6013      	str	r3, [r2, #0]
    PacketMsg->MsgLength = hcdc->TxLength;
9000f6d6:	f8d5 37e0 	ldr.w	r3, [r5, #2016]	@ 0x7e0
    PacketMsg->DataOffset = sizeof(USBD_CDC_RNDIS_PacketMsgTypeDef) - CDC_RNDIS_PCKTMSG_DATAOFFSET_OFFSET;
9000f6da:	2524      	movs	r5, #36	@ 0x24
9000f6dc:	6095      	str	r5, [r2, #8]
    PacketMsg->DataLength = hcdc->TxLength - sizeof(USBD_CDC_RNDIS_PacketMsgTypeDef);
9000f6de:	f1a3 052c 	sub.w	r5, r3, #44	@ 0x2c
    PacketMsg->MsgLength = hcdc->TxLength;
9000f6e2:	6053      	str	r3, [r2, #4]
    PacketMsg->OOBDataOffset = 0U;
9000f6e4:	e9c2 5403 	strd	r5, r4, [r2, #12]
    PacketMsg->NumOOBDataElements = 0U;
9000f6e8:	e9c2 4405 	strd	r4, r4, [r2, #20]
    PacketMsg->PerPacketInfoLength = 0U;
9000f6ec:	e9c2 4407 	strd	r4, r4, [r2, #28]
    PacketMsg->Reserved = 0U;
9000f6f0:	e9c2 4409 	strd	r4, r4, [r2, #36]	@ 0x24
    pdev->ep_in[RNDISInEpAdd & 0xFU].total_length = hcdc->TxLength;
9000f6f4:	62c3      	str	r3, [r0, #44]	@ 0x2c
    (void)USBD_LL_Transmit(pdev, RNDISInEpAdd, hcdc->TxBuffer, hcdc->TxLength);
9000f6f6:	f7f2 fc54 	bl	90001fa2 <USBD_LL_Transmit>
    ret = USBD_OK;
9000f6fa:	4620      	mov	r0, r4
}
9000f6fc:	bd38      	pop	{r3, r4, r5, pc}
    return (uint8_t)USBD_FAIL;
9000f6fe:	2003      	movs	r0, #3
9000f700:	e7fc      	b.n	9000f6fc <USBD_CDC_RNDIS_TransmitPacket+0x48>
  USBD_StatusTypeDef ret = USBD_BUSY;
9000f702:	4618      	mov	r0, r3
9000f704:	e7fa      	b.n	9000f6fc <USBD_CDC_RNDIS_TransmitPacket+0x48>

9000f706 <USBD_CDC_RNDIS_SendNotification>:
  USBD_CDC_RNDIS_HandleTypeDef *hcdc = (USBD_CDC_RNDIS_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
9000f706:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
9000f70a:	32b0      	adds	r2, #176	@ 0xb0
9000f70c:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
{
9000f710:	b510      	push	{r4, lr}
  if (hcdc == NULL)
9000f712:	b90a      	cbnz	r2, 9000f718 <USBD_CDC_RNDIS_SendNotification+0x12>
    return (uint8_t)USBD_FAIL;
9000f714:	2003      	movs	r0, #3
}
9000f716:	bd10      	pop	{r4, pc}
  (hcdc->Req).bmRequest = CDC_RNDIS_BMREQUEST_TYPE_RNDIS;
9000f718:	23a1      	movs	r3, #161	@ 0xa1
  switch (Notif)
9000f71a:	2901      	cmp	r1, #1
  (hcdc->Req).bRequest = (uint8_t)Notif;
9000f71c:	f882 17e5 	strb.w	r1, [r2, #2021]	@ 0x7e5
  (hcdc->Req).bmRequest = CDC_RNDIS_BMREQUEST_TYPE_RNDIS;
9000f720:	f882 37e4 	strb.w	r3, [r2, #2020]	@ 0x7e4
  switch (Notif)
9000f724:	d1f6      	bne.n	9000f714 <USBD_CDC_RNDIS_SendNotification+0xe>
      (hcdc->Req).wValue = 0U;
9000f726:	2400      	movs	r4, #0
    (void)USBD_LL_Transmit(pdev, RNDISCmdEpAdd, (uint8_t *)&hcdc->Req, ReqSize);
9000f728:	2308      	movs	r3, #8
9000f72a:	f202 72e4 	addw	r2, r2, #2020	@ 0x7e4
9000f72e:	2182      	movs	r1, #130	@ 0x82
      (hcdc->Req).wValue = 0U;
9000f730:	8054      	strh	r4, [r2, #2]
      (hcdc->Req).wIndex = CDC_RNDIS_CMD_ITF_NBR;
9000f732:	6054      	str	r4, [r2, #4]
        (hcdc->Req).data[Idx] = 0U;
9000f734:	6094      	str	r4, [r2, #8]
9000f736:	60d4      	str	r4, [r2, #12]
    (void)USBD_LL_Transmit(pdev, RNDISCmdEpAdd, (uint8_t *)&hcdc->Req, ReqSize);
9000f738:	f7f2 fc33 	bl	90001fa2 <USBD_LL_Transmit>
9000f73c:	4620      	mov	r0, r4
9000f73e:	e7ea      	b.n	9000f716 <USBD_CDC_RNDIS_SendNotification+0x10>

9000f740 <USBD_CDC_RNDIS_DataIn>:
{
9000f740:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000f742:	f8d0 52d4 	ldr.w	r5, [r0, #724]	@ 0x2d4
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef *)pdev->pData;
9000f746:	f8d0 62c8 	ldr.w	r6, [r0, #712]	@ 0x2c8
  if (pdev->pClassDataCmsit[pdev->classId] == NULL)
9000f74a:	eb00 0585 	add.w	r5, r0, r5, lsl #2
9000f74e:	f8d5 42c0 	ldr.w	r4, [r5, #704]	@ 0x2c0
9000f752:	b36c      	cbz	r4, 9000f7b0 <USBD_CDC_RNDIS_DataIn+0x70>
  if (epnum == (RNDISInEpAdd & 0x7FU))
9000f754:	2901      	cmp	r1, #1
9000f756:	d11c      	bne.n	9000f792 <USBD_CDC_RNDIS_DataIn+0x52>
    if ((pdev->ep_in[epnum & 0xFU].total_length > 0U) &&
9000f758:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9000f75a:	b15b      	cbz	r3, 9000f774 <USBD_CDC_RNDIS_DataIn+0x34>
        ((pdev->ep_in[epnum & 0xFU].total_length % hpcd->IN_ep[epnum & 0xFU].maxpacket) == 0U))
9000f75c:	6c36      	ldr	r6, [r6, #64]	@ 0x40
9000f75e:	fbb3 f7f6 	udiv	r7, r3, r6
9000f762:	fb06 3317 	mls	r3, r6, r7, r3
    if ((pdev->ep_in[epnum & 0xFU].total_length > 0U) &&
9000f766:	b92b      	cbnz	r3, 9000f774 <USBD_CDC_RNDIS_DataIn+0x34>
      (void)USBD_LL_Transmit(pdev, epnum, NULL, 0U);
9000f768:	461a      	mov	r2, r3
      pdev->ep_in[epnum & 0xFU].total_length = 0U;
9000f76a:	62c3      	str	r3, [r0, #44]	@ 0x2c
      (void)USBD_LL_Transmit(pdev, epnum, NULL, 0U);
9000f76c:	f7f2 fc19 	bl	90001fa2 <USBD_LL_Transmit>
  return (uint8_t)USBD_OK;
9000f770:	2000      	movs	r0, #0
}
9000f772:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      hcdc->TxState = 0U;
9000f774:	2300      	movs	r3, #0
9000f776:	f8c4 37f8 	str.w	r3, [r4, #2040]	@ 0x7f8
      if (((USBD_CDC_RNDIS_ItfTypeDef *)pdev->pUserData[pdev->classId])->TransmitCplt != NULL)
9000f77a:	f8d5 32c4 	ldr.w	r3, [r5, #708]	@ 0x2c4
9000f77e:	691b      	ldr	r3, [r3, #16]
9000f780:	2b00      	cmp	r3, #0
9000f782:	d0f5      	beq.n	9000f770 <USBD_CDC_RNDIS_DataIn+0x30>
        ((USBD_CDC_RNDIS_ItfTypeDef *)pdev->pUserData[pdev->classId])->TransmitCplt(hcdc->TxBuffer, \
9000f784:	2201      	movs	r2, #1
9000f786:	f504 61fc 	add.w	r1, r4, #2016	@ 0x7e0
9000f78a:	f8d4 07d8 	ldr.w	r0, [r4, #2008]	@ 0x7d8
9000f78e:	4798      	blx	r3
9000f790:	e7ee      	b.n	9000f770 <USBD_CDC_RNDIS_DataIn+0x30>
  else if (epnum == (RNDISCmdEpAdd & 0x7FU))
9000f792:	2902      	cmp	r1, #2
9000f794:	d10c      	bne.n	9000f7b0 <USBD_CDC_RNDIS_DataIn+0x70>
    if (hcdc->NotificationStatus != 0U)
9000f796:	f8d4 3808 	ldr.w	r3, [r4, #2056]	@ 0x808
9000f79a:	2b00      	cmp	r3, #0
9000f79c:	d0e8      	beq.n	9000f770 <USBD_CDC_RNDIS_DataIn+0x30>
      (void)USBD_CDC_RNDIS_SendNotification(pdev, CONNECTION_SPEED_CHANGE,
9000f79e:	4b05      	ldr	r3, [pc, #20]	@ (9000f7b4 <USBD_CDC_RNDIS_DataIn+0x74>)
9000f7a0:	2200      	movs	r2, #0
9000f7a2:	212a      	movs	r1, #42	@ 0x2a
9000f7a4:	f7ff ffaf 	bl	9000f706 <USBD_CDC_RNDIS_SendNotification>
      hcdc->NotificationStatus = 0U;
9000f7a8:	2300      	movs	r3, #0
9000f7aa:	f8c4 3808 	str.w	r3, [r4, #2056]	@ 0x808
9000f7ae:	e7df      	b.n	9000f770 <USBD_CDC_RNDIS_DataIn+0x30>
    return (uint8_t)USBD_FAIL;
9000f7b0:	2003      	movs	r0, #3
9000f7b2:	e7de      	b.n	9000f772 <USBD_CDC_RNDIS_DataIn+0x32>
9000f7b4:	20000130 	.word	0x20000130

9000f7b8 <USBD_CDC_RNDIS_EP0_RxReady>:
  USBD_CDC_RNDIS_HandleTypeDef *hcdc = (USBD_CDC_RNDIS_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
9000f7b8:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
9000f7bc:	eb00 0383 	add.w	r3, r0, r3, lsl #2
{
9000f7c0:	b570      	push	{r4, r5, r6, lr}
  USBD_CDC_RNDIS_HandleTypeDef *hcdc = (USBD_CDC_RNDIS_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
9000f7c2:	f8d3 42c0 	ldr.w	r4, [r3, #704]	@ 0x2c0
{
9000f7c6:	4605      	mov	r5, r0
  if (hcdc == NULL)
9000f7c8:	2c00      	cmp	r4, #0
9000f7ca:	f000 810d 	beq.w	9000f9e8 <USBD_CDC_RNDIS_EP0_RxReady+0x230>
  if ((pdev->pUserData[pdev->classId] != NULL) && (hcdc->CmdOpCode != 0xFFU))
9000f7ce:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
9000f7d2:	b11b      	cbz	r3, 9000f7dc <USBD_CDC_RNDIS_EP0_RxReady+0x24>
9000f7d4:	f894 37d0 	ldrb.w	r3, [r4, #2000]	@ 0x7d0
9000f7d8:	2bff      	cmp	r3, #255	@ 0xff
9000f7da:	d101      	bne.n	9000f7e0 <USBD_CDC_RNDIS_EP0_RxReady+0x28>
  return (uint8_t)USBD_OK;
9000f7dc:	2000      	movs	r0, #0
}
9000f7de:	bd70      	pop	{r4, r5, r6, pc}
    if (hcdc->CmdOpCode == CDC_RNDIS_SEND_ENCAPSULATED_COMMAND)
9000f7e0:	2b00      	cmp	r3, #0
9000f7e2:	f040 80fe 	bne.w	9000f9e2 <USBD_CDC_RNDIS_EP0_RxReady+0x22a>
  switch (Msg->MsgType)
9000f7e6:	6823      	ldr	r3, [r4, #0]
9000f7e8:	3b02      	subs	r3, #2
9000f7ea:	2b06      	cmp	r3, #6
9000f7ec:	f200 80ef 	bhi.w	9000f9ce <USBD_CDC_RNDIS_EP0_RxReady+0x216>
9000f7f0:	e8df f013 	tbh	[pc, r3, lsl #1]
9000f7f4:	002b0007 	.word	0x002b0007
9000f7f8:	00b80035 	.word	0x00b80035
9000f7fc:	00ed00ce 	.word	0x00ed00ce
9000f800:	00e5      	.short	0x00e5
  if ((InitMessage->MsgLength != sizeof(USBD_CDC_RNDIS_InitMsgTypeDef)) || \
9000f802:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
9000f806:	2b18      	cmp	r3, #24
9000f808:	d11d      	bne.n	9000f846 <USBD_CDC_RNDIS_EP0_RxReady+0x8e>
9000f80a:	68e3      	ldr	r3, [r4, #12]
    InitResponse->Status = CDC_RNDIS_STATUS_SUCCESS;
9000f80c:	2b00      	cmp	r3, #0
9000f80e:	4b77      	ldr	r3, [pc, #476]	@ (9000f9ec <USBD_CDC_RNDIS_EP0_RxReady+0x234>)
9000f810:	bf18      	it	ne
9000f812:	2300      	movne	r3, #0
  InitResponse->MsgLength = sizeof(USBD_CDC_RNDIS_InitCpltMsgTypeDef);
9000f814:	4976      	ldr	r1, [pc, #472]	@ (9000f9f0 <USBD_CDC_RNDIS_EP0_RxReady+0x238>)
  InitResponse->PacketAlignmentFactor = 2U; /* Not needed as single packet by transfer set */
9000f816:	f240 602c 	movw	r0, #1580	@ 0x62c
9000f81a:	60e3      	str	r3, [r4, #12]
  InitResponse->MsgLength = sizeof(USBD_CDC_RNDIS_InitCpltMsgTypeDef);
9000f81c:	2334      	movs	r3, #52	@ 0x34
  InitResponse->ReqId = ReqId;
9000f81e:	60a2      	str	r2, [r4, #8]
  InitResponse->PacketAlignmentFactor = 2U; /* Not needed as single packet by transfer set */
9000f820:	2202      	movs	r2, #2
  InitResponse->MsgLength = sizeof(USBD_CDC_RNDIS_InitCpltMsgTypeDef);
9000f822:	e9c4 1300 	strd	r1, r3, [r4]
  InitResponse->MinorVersion = CDC_RNDIS_VERSION_MINOR;
9000f826:	2101      	movs	r1, #1
9000f828:	2300      	movs	r3, #0
  hcdc->State = CDC_RNDIS_STATE_INITIALIZED;
9000f82a:	f884 27f4 	strb.w	r2, [r4, #2036]	@ 0x7f4
  InitResponse->MaxPacketsPerTransfer = 1U;
9000f82e:	6221      	str	r1, [r4, #32]
  InitResponse->MinorVersion = CDC_RNDIS_VERSION_MINOR;
9000f830:	e9c4 1304 	strd	r1, r3, [r4, #16]
  InitResponse->Medium = CDC_RNDIS_MEDIUM_802_3;
9000f834:	e9c4 1306 	strd	r1, r3, [r4, #24]
  InitResponse->PacketAlignmentFactor = 2U; /* Not needed as single packet by transfer set */
9000f838:	e9c4 0209 	strd	r0, r2, [r4, #36]	@ 0x24
  InitResponse->AFListSize = 0U; /* Reserved for connection-oriented devices. Set value to zero. */
9000f83c:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
  Response->Status = CDC_RNDIS_STATUS_NOT_SUPPORTED;
  Response->StsBufLength = 0U;
  Response->StsBufOffset = 20U;

  /* Set Response Ready field in order to send response during next control request */
  hcdc->ResponseRdy = 1U;
9000f840:	f884 17d2 	strb.w	r1, [r4, #2002]	@ 0x7d2
9000f844:	e054      	b.n	9000f8f0 <USBD_CDC_RNDIS_EP0_RxReady+0x138>
    InitResponse->Status = CDC_RNDIS_STATUS_FAILURE;
9000f846:	4b69      	ldr	r3, [pc, #420]	@ (9000f9ec <USBD_CDC_RNDIS_EP0_RxReady+0x234>)
9000f848:	e7e4      	b.n	9000f814 <USBD_CDC_RNDIS_EP0_RxReady+0x5c>
  hcdc->State = CDC_RNDIS_STATE_UNINITIALIZED;
9000f84a:	2300      	movs	r3, #0
9000f84c:	f884 37f4 	strb.w	r3, [r4, #2036]	@ 0x7f4
      ret = USBD_CDC_RNDIS_ProcessInitMsg(pdev, (USBD_CDC_RNDIS_InitMsgTypeDef *)(void *)Msg);
9000f850:	4b68      	ldr	r3, [pc, #416]	@ (9000f9f4 <USBD_CDC_RNDIS_EP0_RxReady+0x23c>)
9000f852:	2200      	movs	r2, #0
9000f854:	701a      	strb	r2, [r3, #0]
      hcdc->CmdOpCode = 0xFFU;
9000f856:	23ff      	movs	r3, #255	@ 0xff
9000f858:	f884 37d0 	strb.w	r3, [r4, #2000]	@ 0x7d0
9000f85c:	e7be      	b.n	9000f7dc <USBD_CDC_RNDIS_EP0_RxReady+0x24>
  switch (Msg->Oid)
9000f85e:	e9d4 6302 	ldrd	r6, r3, [r4, #8]
9000f862:	4a65      	ldr	r2, [pc, #404]	@ (9000f9f8 <USBD_CDC_RNDIS_EP0_RxReady+0x240>)
9000f864:	4293      	cmp	r3, r2
9000f866:	d815      	bhi.n	9000f894 <USBD_CDC_RNDIS_EP0_RxReady+0xdc>
9000f868:	3a15      	subs	r2, #21
9000f86a:	4293      	cmp	r3, r2
9000f86c:	d91c      	bls.n	9000f8a8 <USBD_CDC_RNDIS_EP0_RxReady+0xf0>
9000f86e:	f1a3 1301 	sub.w	r3, r3, #65537	@ 0x10001
9000f872:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
9000f876:	2b14      	cmp	r3, #20
9000f878:	d816      	bhi.n	9000f8a8 <USBD_CDC_RNDIS_EP0_RxReady+0xf0>
9000f87a:	e8df f003 	tbb	[pc, r3]
9000f87e:	2024      	.short	0x2024
9000f880:	44152020 	.word	0x44152020
9000f884:	44151559 	.word	0x44151559
9000f888:	69493e44 	.word	0x69493e44
9000f88c:	156e1515 	.word	0x156e1515
9000f890:	2015      	.short	0x2015
9000f892:	65          	.byte	0x65
9000f893:	00          	.byte	0x00
9000f894:	4a59      	ldr	r2, [pc, #356]	@ (9000f9fc <USBD_CDC_RNDIS_EP0_RxReady+0x244>)
9000f896:	4293      	cmp	r3, r2
9000f898:	d056      	beq.n	9000f948 <USBD_CDC_RNDIS_EP0_RxReady+0x190>
9000f89a:	3201      	adds	r2, #1
9000f89c:	4293      	cmp	r3, r2
9000f89e:	d207      	bcs.n	9000f8b0 <USBD_CDC_RNDIS_EP0_RxReady+0xf8>
9000f8a0:	f1a3 3301 	sub.w	r3, r3, #16843009	@ 0x1010101
9000f8a4:	2b01      	cmp	r3, #1
9000f8a6:	d947      	bls.n	9000f938 <USBD_CDC_RNDIS_EP0_RxReady+0x180>
      QueryResponse->InfoBufLength = 0U;
9000f8a8:	2300      	movs	r3, #0
9000f8aa:	6123      	str	r3, [r4, #16]
      break;
9000f8ac:	4b4f      	ldr	r3, [pc, #316]	@ (9000f9ec <USBD_CDC_RNDIS_EP0_RxReady+0x234>)
9000f8ae:	e012      	b.n	9000f8d6 <USBD_CDC_RNDIS_EP0_RxReady+0x11e>
  switch (Msg->Oid)
9000f8b0:	f1a3 7381 	sub.w	r3, r3, #16908288	@ 0x1020000
9000f8b4:	f46f 7e80 	mvn.w	lr, #256	@ 0x100
9000f8b8:	4473      	add	r3, lr
9000f8ba:	2b02      	cmp	r3, #2
9000f8bc:	d8f4      	bhi.n	9000f8a8 <USBD_CDC_RNDIS_EP0_RxReady+0xf0>
      QueryResponse->InfoBufLength = sizeof(uint32_t);
9000f8be:	2304      	movs	r3, #4
9000f8c0:	6123      	str	r3, [r4, #16]
      QueryResponse->InfoBuf[0] = 0U; /* Unused OIDs, return zero */
9000f8c2:	2300      	movs	r3, #0
9000f8c4:	e01d      	b.n	9000f902 <USBD_CDC_RNDIS_EP0_RxReady+0x14a>
      QueryResponse->InfoBufLength = sizeof(CDC_RNDIS_SupportedOIDs);
9000f8c6:	2254      	movs	r2, #84	@ 0x54
      (void)USBD_memcpy(QueryResponse->InfoBuf, CDC_RNDIS_SupportedOIDs,
9000f8c8:	494d      	ldr	r1, [pc, #308]	@ (9000fa00 <USBD_CDC_RNDIS_EP0_RxReady+0x248>)
9000f8ca:	f104 0018 	add.w	r0, r4, #24
      QueryResponse->InfoBufLength = sizeof(CDC_RNDIS_SupportedOIDs);
9000f8ce:	6122      	str	r2, [r4, #16]
      (void)USBD_memcpy(QueryResponse->InfoBuf, CDC_RNDIS_SupportedOIDs,
9000f8d0:	f019 f8bf 	bl	90028a52 <memcpy>
    InitResponse->Status = CDC_RNDIS_STATUS_FAILURE;
9000f8d4:	2300      	movs	r3, #0
      QueryResponse->Status = CDC_RNDIS_STATUS_SUCCESS;
9000f8d6:	60e3      	str	r3, [r4, #12]
  QueryResponse->MsgType = CDC_RNDIS_QUERY_CMPLT_ID;
9000f8d8:	4b4a      	ldr	r3, [pc, #296]	@ (9000fa04 <USBD_CDC_RNDIS_EP0_RxReady+0x24c>)
9000f8da:	6023      	str	r3, [r4, #0]
  QueryResponse->MsgLength = QueryResponse->InfoBufLength + 24U;
9000f8dc:	6923      	ldr	r3, [r4, #16]
9000f8de:	3318      	adds	r3, #24
  QueryResponse->ReqId = ReqId;
9000f8e0:	e9c4 3601 	strd	r3, r6, [r4, #4]
  QueryResponse->InfoBufOffset = 16U;
9000f8e4:	2310      	movs	r3, #16
9000f8e6:	6163      	str	r3, [r4, #20]
  hcdc->ResponseRdy = 1U;
9000f8e8:	2101      	movs	r1, #1
  (void)USBD_CDC_RNDIS_SendNotification(pdev, RESPONSE_AVAILABLE, 0U, NULL);
9000f8ea:	2300      	movs	r3, #0
  hcdc->ResponseRdy = 1U;
9000f8ec:	f884 17d2 	strb.w	r1, [r4, #2002]	@ 0x7d2

  /* Send Notification on Interrupt EP to inform Host that response is ready */
  (void)USBD_CDC_RNDIS_SendNotification(pdev, RESPONSE_AVAILABLE, 0U, NULL);
9000f8f0:	461a      	mov	r2, r3
9000f8f2:	4628      	mov	r0, r5
9000f8f4:	f7ff ff07 	bl	9000f706 <USBD_CDC_RNDIS_SendNotification>
      break;
9000f8f8:	e7aa      	b.n	9000f850 <USBD_CDC_RNDIS_EP0_RxReady+0x98>
      QueryResponse->InfoBufLength = sizeof(uint32_t);
9000f8fa:	2304      	movs	r3, #4
9000f8fc:	6123      	str	r3, [r4, #16]
      QueryResponse->InfoBuf[0] = USBD_CDC_RNDIS_VID;
9000f8fe:	f240 4383 	movw	r3, #1155	@ 0x483
      QueryResponse->InfoBuf[0] = (CDC_RNDIS_MESSAGE_BUFFER_SIZE + CDC_RNDIS_ETH_FRAME_SIZE_MAX);
9000f902:	61a3      	str	r3, [r4, #24]
      break;
9000f904:	e7e6      	b.n	9000f8d4 <USBD_CDC_RNDIS_EP0_RxReady+0x11c>
      QueryResponse->InfoBufLength = sizeof(uint32_t);
9000f906:	2304      	movs	r3, #4
9000f908:	6123      	str	r3, [r4, #16]
      QueryResponse->InfoBuf[0] = CDC_RNDIS_ETH_FRAME_SIZE_MAX;
9000f90a:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
9000f90e:	e7f8      	b.n	9000f902 <USBD_CDC_RNDIS_EP0_RxReady+0x14a>
      QueryResponse->InfoBufLength = (strlen(USBD_CDC_RNDIS_VENDOR_DESC) + 1U);
9000f910:	2313      	movs	r3, #19
      (void)USBD_memcpy(QueryResponse->InfoBuf, USBD_CDC_RNDIS_VENDOR_DESC,
9000f912:	f104 0218 	add.w	r2, r4, #24
      QueryResponse->InfoBufLength = (strlen(USBD_CDC_RNDIS_VENDOR_DESC) + 1U);
9000f916:	6123      	str	r3, [r4, #16]
      (void)USBD_memcpy(QueryResponse->InfoBuf, USBD_CDC_RNDIS_VENDOR_DESC,
9000f918:	4b3b      	ldr	r3, [pc, #236]	@ (9000fa08 <USBD_CDC_RNDIS_EP0_RxReady+0x250>)
9000f91a:	f103 0110 	add.w	r1, r3, #16
9000f91e:	f853 0b04 	ldr.w	r0, [r3], #4
9000f922:	428b      	cmp	r3, r1
9000f924:	f842 0b04 	str.w	r0, [r2], #4
9000f928:	d1f9      	bne.n	9000f91e <USBD_CDC_RNDIS_EP0_RxReady+0x166>
9000f92a:	881b      	ldrh	r3, [r3, #0]
9000f92c:	8013      	strh	r3, [r2, #0]
      break;
9000f92e:	e7d1      	b.n	9000f8d4 <USBD_CDC_RNDIS_EP0_RxReady+0x11c>
      QueryResponse->InfoBufLength = sizeof(uint32_t);
9000f930:	2304      	movs	r3, #4
9000f932:	6123      	str	r3, [r4, #16]
      QueryResponse->InfoBuf[0] = USBD_CDC_RNDIS_LINK_SPEED;
9000f934:	4b35      	ldr	r3, [pc, #212]	@ (9000fa0c <USBD_CDC_RNDIS_EP0_RxReady+0x254>)
9000f936:	e7e4      	b.n	9000f902 <USBD_CDC_RNDIS_EP0_RxReady+0x14a>
      QueryResponse->InfoBufLength = 6U;
9000f938:	2306      	movs	r3, #6
9000f93a:	6123      	str	r3, [r4, #16]
      (void)USBD_memcpy(QueryResponse->InfoBuf, MAC_StrDesc, 6);
9000f93c:	4b34      	ldr	r3, [pc, #208]	@ (9000fa10 <USBD_CDC_RNDIS_EP0_RxReady+0x258>)
9000f93e:	681a      	ldr	r2, [r3, #0]
9000f940:	889b      	ldrh	r3, [r3, #4]
9000f942:	61a2      	str	r2, [r4, #24]
9000f944:	83a3      	strh	r3, [r4, #28]
      break;
9000f946:	e7c5      	b.n	9000f8d4 <USBD_CDC_RNDIS_EP0_RxReady+0x11c>
      QueryResponse->InfoBufLength = sizeof(uint32_t);
9000f948:	2304      	movs	r3, #4
9000f94a:	6123      	str	r3, [r4, #16]
      QueryResponse->InfoBuf[0] = 1U; /* Only one multicast address supported */
9000f94c:	2301      	movs	r3, #1
9000f94e:	e7d8      	b.n	9000f902 <USBD_CDC_RNDIS_EP0_RxReady+0x14a>
      QueryResponse->InfoBufLength = sizeof(uint32_t);
9000f950:	2304      	movs	r3, #4
9000f952:	6123      	str	r3, [r4, #16]
      QueryResponse->InfoBuf[0] = 0xFFFFFFU; /* USBD_CDC_RNDIS_DEVICE.packetFilter; */
9000f954:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
9000f958:	e7d3      	b.n	9000f902 <USBD_CDC_RNDIS_EP0_RxReady+0x14a>
      QueryResponse->InfoBufLength = sizeof(uint32_t);
9000f95a:	2304      	movs	r3, #4
9000f95c:	6123      	str	r3, [r4, #16]
      QueryResponse->InfoBuf[0] = (CDC_RNDIS_MESSAGE_BUFFER_SIZE + CDC_RNDIS_ETH_FRAME_SIZE_MAX);
9000f95e:	f44f 63d0 	mov.w	r3, #1664	@ 0x680
9000f962:	e7ce      	b.n	9000f902 <USBD_CDC_RNDIS_EP0_RxReady+0x14a>
  switch (SetMessage->Oid)
9000f964:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
9000f968:	492a      	ldr	r1, [pc, #168]	@ (9000fa14 <USBD_CDC_RNDIS_EP0_RxReady+0x25c>)
9000f96a:	428b      	cmp	r3, r1
9000f96c:	d00b      	beq.n	9000f986 <USBD_CDC_RNDIS_EP0_RxReady+0x1ce>
9000f96e:	492a      	ldr	r1, [pc, #168]	@ (9000fa18 <USBD_CDC_RNDIS_EP0_RxReady+0x260>)
9000f970:	428b      	cmp	r3, r1
9000f972:	d00b      	beq.n	9000f98c <USBD_CDC_RNDIS_EP0_RxReady+0x1d4>
9000f974:	4b1d      	ldr	r3, [pc, #116]	@ (9000f9ec <USBD_CDC_RNDIS_EP0_RxReady+0x234>)
  SetResponse->MsgLength = sizeof(USBD_CDC_RNDIS_SetCpltMsgTypeDef);
9000f976:	f8df c0b0 	ldr.w	ip, [pc, #176]	@ 9000fa28 <USBD_CDC_RNDIS_EP0_RxReady+0x270>
      SetResponse->Status = CDC_RNDIS_STATUS_SUCCESS;
9000f97a:	60e3      	str	r3, [r4, #12]
  SetResponse->MsgLength = sizeof(USBD_CDC_RNDIS_SetCpltMsgTypeDef);
9000f97c:	2310      	movs	r3, #16
  SetResponse->ReqId = ReqId;
9000f97e:	60a2      	str	r2, [r4, #8]
  SetResponse->MsgLength = sizeof(USBD_CDC_RNDIS_SetCpltMsgTypeDef);
9000f980:	e9c4 c300 	strd	ip, r3, [r4]
  SetResponse->ReqId = ReqId;
9000f984:	e7b0      	b.n	9000f8e8 <USBD_CDC_RNDIS_EP0_RxReady+0x130>
      hcdc->PacketFilter = SetMessage->InfoBuf[0];
9000f986:	69e3      	ldr	r3, [r4, #28]
9000f988:	f8c4 380c 	str.w	r3, [r4, #2060]	@ 0x80c
      break;
9000f98c:	2300      	movs	r3, #0
9000f98e:	e7f2      	b.n	9000f976 <USBD_CDC_RNDIS_EP0_RxReady+0x1be>
  if ((ResetMessage->MsgLength != sizeof(USBD_CDC_RNDIS_ResetMsgTypeDef)) || \
9000f990:	6863      	ldr	r3, [r4, #4]
9000f992:	2b0c      	cmp	r3, #12
9000f994:	d111      	bne.n	9000f9ba <USBD_CDC_RNDIS_EP0_RxReady+0x202>
      (ResetMessage->Reserved != 0U))
9000f996:	68a3      	ldr	r3, [r4, #8]
    ResetResponse->Status = CDC_RNDIS_STATUS_FAILURE;
9000f998:	4a14      	ldr	r2, [pc, #80]	@ (9000f9ec <USBD_CDC_RNDIS_EP0_RxReady+0x234>)
9000f99a:	2b00      	cmp	r3, #0
9000f99c:	bf18      	it	ne
9000f99e:	4613      	movne	r3, r2
  ResetResponse->MsgLength = sizeof(USBD_CDC_RNDIS_ResetCpltMsgTypeDef);
9000f9a0:	4e1e      	ldr	r6, [pc, #120]	@ (9000fa1c <USBD_CDC_RNDIS_EP0_RxReady+0x264>)
  hcdc->State = CDC_RNDIS_STATE_BUS_INITIALIZED;
9000f9a2:	2101      	movs	r1, #1
9000f9a4:	60a3      	str	r3, [r4, #8]
  ResetResponse->MsgLength = sizeof(USBD_CDC_RNDIS_ResetCpltMsgTypeDef);
9000f9a6:	2310      	movs	r3, #16
  hcdc->State = CDC_RNDIS_STATE_BUS_INITIALIZED;
9000f9a8:	f884 17f4 	strb.w	r1, [r4, #2036]	@ 0x7f4
  ResetResponse->MsgLength = sizeof(USBD_CDC_RNDIS_ResetCpltMsgTypeDef);
9000f9ac:	e9c4 6300 	strd	r6, r3, [r4]
  ResetResponse->AddrReset = 0U;
9000f9b0:	2300      	movs	r3, #0
9000f9b2:	60e3      	str	r3, [r4, #12]
  hcdc->LinkStatus = 0U;
9000f9b4:	f8c4 3804 	str.w	r3, [r4, #2052]	@ 0x804
  hcdc->ResponseRdy = 1U;
9000f9b8:	e742      	b.n	9000f840 <USBD_CDC_RNDIS_EP0_RxReady+0x88>
    ResetResponse->Status = CDC_RNDIS_STATUS_FAILURE;
9000f9ba:	4b0c      	ldr	r3, [pc, #48]	@ (9000f9ec <USBD_CDC_RNDIS_EP0_RxReady+0x234>)
9000f9bc:	e7f0      	b.n	9000f9a0 <USBD_CDC_RNDIS_EP0_RxReady+0x1e8>
  InitResponse->MsgLength = sizeof(USBD_CDC_RNDIS_KpAliveCpltMsgTypeDef);
9000f9be:	2310      	movs	r3, #16
9000f9c0:	4817      	ldr	r0, [pc, #92]	@ (9000fa20 <USBD_CDC_RNDIS_EP0_RxReady+0x268>)
9000f9c2:	e9c4 0300 	strd	r0, r3, [r4]
  InitResponse->Status = CDC_RNDIS_STATUS_SUCCESS;
9000f9c6:	2300      	movs	r3, #0
9000f9c8:	60e3      	str	r3, [r4, #12]
  hcdc->ResponseRdy = 1U;
9000f9ca:	2101      	movs	r1, #1
9000f9cc:	e738      	b.n	9000f840 <USBD_CDC_RNDIS_EP0_RxReady+0x88>
  Response->MsgLength = sizeof(USBD_CDC_RNDIS_StsChangeMsgTypeDef);
9000f9ce:	2307      	movs	r3, #7
9000f9d0:	2214      	movs	r2, #20
  Response->StsBufLength = 0U;
9000f9d2:	4914      	ldr	r1, [pc, #80]	@ (9000fa24 <USBD_CDC_RNDIS_EP0_RxReady+0x26c>)
  Response->StsBufOffset = 20U;
9000f9d4:	6122      	str	r2, [r4, #16]
  Response->MsgLength = sizeof(USBD_CDC_RNDIS_StsChangeMsgTypeDef);
9000f9d6:	e9c4 3200 	strd	r3, r2, [r4]
  Response->StsBufLength = 0U;
9000f9da:	2300      	movs	r3, #0
9000f9dc:	e9c4 1302 	strd	r1, r3, [r4, #8]
  Response->StsBufOffset = 20U;
9000f9e0:	e7f3      	b.n	9000f9ca <USBD_CDC_RNDIS_EP0_RxReady+0x212>
      hcdc->CmdOpCode = 0xFFU;
9000f9e2:	23ff      	movs	r3, #255	@ 0xff
9000f9e4:	f884 37d0 	strb.w	r3, [r4, #2000]	@ 0x7d0
    return (uint8_t)USBD_FAIL;
9000f9e8:	2003      	movs	r0, #3
9000f9ea:	e6f8      	b.n	9000f7de <USBD_CDC_RNDIS_EP0_RxReady+0x26>
9000f9ec:	c0000001 	.word	0xc0000001
9000f9f0:	80000002 	.word	0x80000002
9000f9f4:	2001a930 	.word	0x2001a930
9000f9f8:	00010115 	.word	0x00010115
9000f9fc:	01010104 	.word	0x01010104
9000fa00:	9003576c 	.word	0x9003576c
9000fa04:	80000004 	.word	0x80000004
9000fa08:	90029b02 	.word	0x90029b02
9000fa0c:	000186a0 	.word	0x000186a0
9000fa10:	900294f8 	.word	0x900294f8
9000fa14:	0001010e 	.word	0x0001010e
9000fa18:	01010103 	.word	0x01010103
9000fa1c:	80000006 	.word	0x80000006
9000fa20:	80000008 	.word	0x80000008
9000fa24:	c00000bb 	.word	0xc00000bb
9000fa28:	80000005 	.word	0x80000005

9000fa2c <USBD_Init>:
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
9000fa2c:	b178      	cbz	r0, 9000fa4e <USBD_Init+0x22>
    pdev->NumClasses = 0;
    pdev->classId = 0;
  }
#else
  /* Unlink previous class*/
  pdev->pClass[0] = NULL;
9000fa2e:	2300      	movs	r3, #0
9000fa30:	f8c0 32b8 	str.w	r3, [r0, #696]	@ 0x2b8
  pdev->pUserData[0] = NULL;
9000fa34:	f8c0 32c4 	str.w	r3, [r0, #708]	@ 0x2c4
#endif /* USE_USBD_COMPOSITE */

  pdev->pConfDesc = NULL;
9000fa38:	f8c0 32d0 	str.w	r3, [r0, #720]	@ 0x2d0

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
9000fa3c:	b109      	cbz	r1, 9000fa42 <USBD_Init+0x16>
  {
    pdev->pDesc = pdesc;
9000fa3e:	f8c0 12b4 	str.w	r1, [r0, #692]	@ 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
9000fa42:	2301      	movs	r3, #1
  pdev->id = id;
9000fa44:	7002      	strb	r2, [r0, #0]
  pdev->dev_state = USBD_STATE_DEFAULT;
9000fa46:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
9000fa4a:	f7f2 ba3d 	b.w	90001ec8 <USBD_LL_Init>

  return ret;
}
9000fa4e:	2003      	movs	r0, #3
9000fa50:	4770      	bx	lr

9000fa52 <USBD_RegisterClass>:
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
  uint16_t len = 0U;
9000fa52:	2300      	movs	r3, #0
{
9000fa54:	b513      	push	{r0, r1, r4, lr}
9000fa56:	4604      	mov	r4, r0
  uint16_t len = 0U;
9000fa58:	f8ad 3006 	strh.w	r3, [sp, #6]

  if (pclass == NULL)
9000fa5c:	b181      	cbz	r1, 9000fa80 <USBD_RegisterClass+0x2e>
  if (pdev->pClass[pdev->classId]->GetHSConfigDescriptor != NULL)
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetHSConfigDescriptor(&len);
  }
#else /* Default USE_USB_FS */
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
9000fa5e:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
  pdev->pClass[0] = pclass;
9000fa60:	f8c0 12b8 	str.w	r1, [r0, #696]	@ 0x2b8
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
9000fa64:	b123      	cbz	r3, 9000fa70 <USBD_RegisterClass+0x1e>
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetFSConfigDescriptor(&len);
9000fa66:	f10d 0006 	add.w	r0, sp, #6
9000fa6a:	4798      	blx	r3
9000fa6c:	f8c4 02d0 	str.w	r0, [r4, #720]	@ 0x2d0
  }
#endif /* USE_USB_FS */

  /* Increment the NumClasses */
  pdev->NumClasses++;
9000fa70:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8

  return USBD_OK;
9000fa74:	2000      	movs	r0, #0
  pdev->NumClasses++;
9000fa76:	3301      	adds	r3, #1
9000fa78:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
}
9000fa7c:	b002      	add	sp, #8
9000fa7e:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
9000fa80:	2003      	movs	r0, #3
9000fa82:	e7fb      	b.n	9000fa7c <USBD_RegisterClass+0x2a>

9000fa84 <USBD_Start>:
#ifdef USE_USBD_COMPOSITE
  pdev->classId = 0U;
#endif /* USE_USBD_COMPOSITE */

  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
9000fa84:	f7f2 ba4e 	b.w	90001f24 <USBD_LL_Start>

9000fa88 <USBD_SetClassConfig>:
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
9000fa88:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
9000fa8c:	b10b      	cbz	r3, 9000fa92 <USBD_SetClassConfig+0xa>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass[0]->Init(pdev, cfgidx);
9000fa8e:	681b      	ldr	r3, [r3, #0]
9000fa90:	4718      	bx	r3
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
9000fa92:	4618      	mov	r0, r3
9000fa94:	4770      	bx	lr

9000fa96 <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
9000fa96:	b508      	push	{r3, lr}
      }
    }
  }
#else
  /* Clear configuration  and De-initialize the Class process */
  if (pdev->pClass[0]->DeInit(pdev, cfgidx) != 0U)
9000fa98:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
9000fa9c:	685b      	ldr	r3, [r3, #4]
9000fa9e:	4798      	blx	r3
  {
    ret = USBD_FAIL;
9000faa0:	2800      	cmp	r0, #0
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
9000faa2:	bf18      	it	ne
9000faa4:	2003      	movne	r0, #3
9000faa6:	bd08      	pop	{r3, pc}

9000faa8 <USBD_LL_SetupStage>:
  * @param  pdev: device instance
  * @param  psetup: setup packet buffer pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
9000faa8:	b538      	push	{r3, r4, r5, lr}
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
9000faaa:	f200 25aa 	addw	r5, r0, #682	@ 0x2aa
{
9000faae:	4604      	mov	r4, r0
  USBD_ParseSetupRequest(&pdev->request, psetup);
9000fab0:	4628      	mov	r0, r5
9000fab2:	f000 fbb4 	bl	9001021e <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
9000fab6:	2301      	movs	r3, #1

  pdev->ep0_data_len = pdev->request.wLength;

  switch (pdev->request.bmRequest & 0x1FU)
9000fab8:	f894 12aa 	ldrb.w	r1, [r4, #682]	@ 0x2aa
  pdev->ep0_state = USBD_EP0_SETUP;
9000fabc:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
  pdev->ep0_data_len = pdev->request.wLength;
9000fac0:	f8b4 32b0 	ldrh.w	r3, [r4, #688]	@ 0x2b0
9000fac4:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
  switch (pdev->request.bmRequest & 0x1FU)
9000fac8:	f001 031f 	and.w	r3, r1, #31
9000facc:	2b01      	cmp	r3, #1
9000face:	d008      	beq.n	9000fae2 <USBD_LL_SetupStage+0x3a>
9000fad0:	2b02      	cmp	r3, #2
9000fad2:	d00c      	beq.n	9000faee <USBD_LL_SetupStage+0x46>
9000fad4:	b98b      	cbnz	r3, 9000fafa <USBD_LL_SetupStage+0x52>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      ret = USBD_StdDevReq(pdev, &pdev->request);
9000fad6:	4629      	mov	r1, r5
9000fad8:	4620      	mov	r0, r4
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
      break;
  }

  return ret;
}
9000fada:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdDevReq(pdev, &pdev->request);
9000fade:	f000 b94d 	b.w	9000fd7c <USBD_StdDevReq>
      ret = USBD_StdItfReq(pdev, &pdev->request);
9000fae2:	4629      	mov	r1, r5
9000fae4:	4620      	mov	r0, r4
}
9000fae6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdItfReq(pdev, &pdev->request);
9000faea:	f000 bac5 	b.w	90010078 <USBD_StdItfReq>
      ret = USBD_StdEPReq(pdev, &pdev->request);
9000faee:	4629      	mov	r1, r5
9000faf0:	4620      	mov	r0, r4
}
9000faf2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdEPReq(pdev, &pdev->request);
9000faf6:	f000 baee 	b.w	900100d6 <USBD_StdEPReq>
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
9000fafa:	4620      	mov	r0, r4
9000fafc:	f001 0180 	and.w	r1, r1, #128	@ 0x80
}
9000fb00:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
9000fb04:	f7f2 ba26 	b.w	90001f54 <USBD_LL_StallEP>

9000fb08 <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
9000fb08:	b570      	push	{r4, r5, r6, lr}
9000fb0a:	4604      	mov	r4, r0
9000fb0c:	4616      	mov	r6, r2
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret = USBD_OK;
  uint8_t idx;

  if (epnum == 0U)
9000fb0e:	bb09      	cbnz	r1, 9000fb54 <USBD_LL_DataOutStage+0x4c>
  {
    pep = &pdev->ep_out[0];

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
9000fb10:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
9000fb14:	2b03      	cmp	r3, #3
9000fb16:	d10c      	bne.n	9000fb32 <USBD_LL_DataOutStage+0x2a>
    {
      if (pep->rem_length > pep->maxpacket)
9000fb18:	e9d0 3257 	ldrd	r3, r2, [r0, #348]	@ 0x15c
9000fb1c:	4293      	cmp	r3, r2
9000fb1e:	d90a      	bls.n	9000fb36 <USBD_LL_DataOutStage+0x2e>
      {
        pep->rem_length -= pep->maxpacket;
9000fb20:	1a9b      	subs	r3, r3, r2

        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
9000fb22:	4631      	mov	r1, r6
9000fb24:	429a      	cmp	r2, r3
        pep->rem_length -= pep->maxpacket;
9000fb26:	f8c0 315c 	str.w	r3, [r0, #348]	@ 0x15c
        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
9000fb2a:	bf28      	it	cs
9000fb2c:	461a      	movcs	r2, r3
9000fb2e:	f000 fbcf 	bl	900102d0 <USBD_CtlContinueRx>
      }
    }
  }

  return USBD_OK;
}
9000fb32:	2000      	movs	r0, #0
9000fb34:	bd70      	pop	{r4, r5, r6, pc}
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
9000fb36:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9000fb3a:	2b03      	cmp	r3, #3
9000fb3c:	d106      	bne.n	9000fb4c <USBD_LL_DataOutStage+0x44>
            if (pdev->pClass[idx]->EP0_RxReady != NULL)
9000fb3e:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
9000fb42:	691b      	ldr	r3, [r3, #16]
9000fb44:	b113      	cbz	r3, 9000fb4c <USBD_LL_DataOutStage+0x44>
              pdev->classId = idx;
9000fb46:	f8c0 12d4 	str.w	r1, [r0, #724]	@ 0x2d4
              pdev->pClass[idx]->EP0_RxReady(pdev);
9000fb4a:	4798      	blx	r3
        (void)USBD_CtlSendStatus(pdev);
9000fb4c:	4620      	mov	r0, r4
9000fb4e:	f000 fbc7 	bl	900102e0 <USBD_CtlSendStatus>
9000fb52:	e7ee      	b.n	9000fb32 <USBD_LL_DataOutStage+0x2a>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
9000fb54:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9000fb58:	2b03      	cmp	r3, #3
9000fb5a:	d1ea      	bne.n	9000fb32 <USBD_LL_DataOutStage+0x2a>
        if (pdev->pClass[idx]->DataOut != NULL)
9000fb5c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
9000fb60:	699b      	ldr	r3, [r3, #24]
9000fb62:	2b00      	cmp	r3, #0
9000fb64:	d0e5      	beq.n	9000fb32 <USBD_LL_DataOutStage+0x2a>
          pdev->classId = idx;
9000fb66:	2200      	movs	r2, #0
}
9000fb68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
9000fb6c:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataOut(pdev, epnum);
9000fb70:	4718      	bx	r3

9000fb72 <USBD_LL_DataInStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
9000fb72:	b570      	push	{r4, r5, r6, lr}
9000fb74:	4604      	mov	r4, r0
9000fb76:	4616      	mov	r6, r2
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;
  uint8_t idx;

  if (epnum == 0U)
9000fb78:	460d      	mov	r5, r1
9000fb7a:	2900      	cmp	r1, #0
9000fb7c:	d13d      	bne.n	9000fbfa <USBD_LL_DataInStage+0x88>
  {
    pep = &pdev->ep_in[0];

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
9000fb7e:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
9000fb82:	2b02      	cmp	r3, #2
9000fb84:	d10e      	bne.n	9000fba4 <USBD_LL_DataInStage+0x32>
    {
      if (pep->rem_length > pep->maxpacket)
9000fb86:	e9d0 3207 	ldrd	r3, r2, [r0, #28]
9000fb8a:	4293      	cmp	r3, r2
9000fb8c:	d912      	bls.n	9000fbb4 <USBD_LL_DataInStage+0x42>
      {
        pep->rem_length -= pep->maxpacket;
9000fb8e:	1a9a      	subs	r2, r3, r2

        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
9000fb90:	4631      	mov	r1, r6
        pep->rem_length -= pep->maxpacket;
9000fb92:	61c2      	str	r2, [r0, #28]
        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
9000fb94:	f000 fb87 	bl	900102a6 <USBD_CtlContinueSendData>
        {
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
          pdev->ep0_data_len = 0U;

          /* Prepare endpoint for premature end of transfer */
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
9000fb98:	462b      	mov	r3, r5
9000fb9a:	462a      	mov	r2, r5
9000fb9c:	4629      	mov	r1, r5
9000fb9e:	4620      	mov	r0, r4
9000fba0:	f7f2 fa0c 	bl	90001fbc <USBD_LL_PrepareReceive>
          (void)USBD_CtlReceiveStatus(pdev);
        }
      }
    }

    if (pdev->dev_test_mode != 0U)
9000fba4:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
9000fba8:	b113      	cbz	r3, 9000fbb0 <USBD_LL_DataInStage+0x3e>
    {
      (void)USBD_RunTestMode(pdev);
      pdev->dev_test_mode = 0U;
9000fbaa:	2300      	movs	r3, #0
9000fbac:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
      }
    }
  }

  return USBD_OK;
}
9000fbb0:	2000      	movs	r0, #0
9000fbb2:	bd70      	pop	{r4, r5, r6, pc}
        if ((pep->maxpacket == pep->rem_length) &&
9000fbb4:	d10c      	bne.n	9000fbd0 <USBD_LL_DataInStage+0x5e>
            (pep->total_length >= pep->maxpacket) &&
9000fbb6:	6982      	ldr	r2, [r0, #24]
        if ((pep->maxpacket == pep->rem_length) &&
9000fbb8:	4293      	cmp	r3, r2
9000fbba:	d809      	bhi.n	9000fbd0 <USBD_LL_DataInStage+0x5e>
            (pep->total_length >= pep->maxpacket) &&
9000fbbc:	f8d0 3298 	ldr.w	r3, [r0, #664]	@ 0x298
9000fbc0:	429a      	cmp	r2, r3
9000fbc2:	d205      	bcs.n	9000fbd0 <USBD_LL_DataInStage+0x5e>
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
9000fbc4:	460a      	mov	r2, r1
9000fbc6:	f000 fb6e 	bl	900102a6 <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
9000fbca:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
9000fbce:	e7e3      	b.n	9000fb98 <USBD_LL_DataInStage+0x26>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
9000fbd0:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
9000fbd4:	2b03      	cmp	r3, #3
9000fbd6:	d108      	bne.n	9000fbea <USBD_LL_DataInStage+0x78>
            if (pdev->pClass[0]->EP0_TxSent != NULL)
9000fbd8:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
9000fbdc:	68db      	ldr	r3, [r3, #12]
9000fbde:	b123      	cbz	r3, 9000fbea <USBD_LL_DataInStage+0x78>
              pdev->classId = 0U;
9000fbe0:	2200      	movs	r2, #0
              pdev->pClass[0]->EP0_TxSent(pdev);
9000fbe2:	4620      	mov	r0, r4
              pdev->classId = 0U;
9000fbe4:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
              pdev->pClass[0]->EP0_TxSent(pdev);
9000fbe8:	4798      	blx	r3
          (void)USBD_LL_StallEP(pdev, 0x80U);
9000fbea:	2180      	movs	r1, #128	@ 0x80
9000fbec:	4620      	mov	r0, r4
9000fbee:	f7f2 f9b1 	bl	90001f54 <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
9000fbf2:	4620      	mov	r0, r4
9000fbf4:	f000 fb7f 	bl	900102f6 <USBD_CtlReceiveStatus>
9000fbf8:	e7d4      	b.n	9000fba4 <USBD_LL_DataInStage+0x32>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
9000fbfa:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9000fbfe:	2b03      	cmp	r3, #3
9000fc00:	d1d6      	bne.n	9000fbb0 <USBD_LL_DataInStage+0x3e>
        if (pdev->pClass[idx]->DataIn != NULL)
9000fc02:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
9000fc06:	695b      	ldr	r3, [r3, #20]
9000fc08:	2b00      	cmp	r3, #0
9000fc0a:	d0d1      	beq.n	9000fbb0 <USBD_LL_DataInStage+0x3e>
          pdev->classId = idx;
9000fc0c:	2200      	movs	r2, #0
}
9000fc0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
9000fc12:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataIn(pdev, epnum);
9000fc16:	4718      	bx	r3

9000fc18 <USBD_LL_Reset>:
  *         Handle Reset event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
9000fc18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  USBD_StatusTypeDef ret = USBD_OK;

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
9000fc1a:	2301      	movs	r3, #1
  pdev->ep0_state = USBD_EP0_IDLE;
9000fc1c:	2100      	movs	r1, #0
{
9000fc1e:	4604      	mov	r4, r0
  pdev->dev_state = USBD_STATE_DEFAULT;
9000fc20:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
      }
    }
  }
#else

  if (pdev->pClass[0] != NULL)
9000fc24:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
  pdev->ep0_state = USBD_EP0_IDLE;
9000fc28:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
  pdev->dev_config = 0U;
9000fc2c:	6041      	str	r1, [r0, #4]
  pdev->dev_remote_wakeup = 0U;
9000fc2e:	f8c0 12a4 	str.w	r1, [r0, #676]	@ 0x2a4
  pdev->dev_test_mode = 0U;
9000fc32:	f880 12a0 	strb.w	r1, [r0, #672]	@ 0x2a0
  if (pdev->pClass[0] != NULL)
9000fc36:	b9b3      	cbnz	r3, 9000fc66 <USBD_LL_Reset+0x4e>
  USBD_StatusTypeDef ret = USBD_OK;
9000fc38:	2600      	movs	r6, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
9000fc3a:	2200      	movs	r2, #0
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
9000fc3c:	2540      	movs	r5, #64	@ 0x40
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
9000fc3e:	2701      	movs	r7, #1
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
9000fc40:	2340      	movs	r3, #64	@ 0x40
9000fc42:	4611      	mov	r1, r2
9000fc44:	4620      	mov	r0, r4
9000fc46:	f7f2 f974 	bl	90001f32 <USBD_LL_OpenEP>

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
9000fc4a:	462b      	mov	r3, r5
9000fc4c:	2200      	movs	r2, #0
9000fc4e:	2180      	movs	r1, #128	@ 0x80
9000fc50:	4620      	mov	r0, r4
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
9000fc52:	f8a4 7164 	strh.w	r7, [r4, #356]	@ 0x164
  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
9000fc56:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
9000fc5a:	f7f2 f96a 	bl	90001f32 <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;

  return ret;
}
9000fc5e:	4630      	mov	r0, r6
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
9000fc60:	84a7      	strh	r7, [r4, #36]	@ 0x24
  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
9000fc62:	6225      	str	r5, [r4, #32]
}
9000fc64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (pdev->pClass[0]->DeInit != NULL)
9000fc66:	685b      	ldr	r3, [r3, #4]
9000fc68:	2b00      	cmp	r3, #0
9000fc6a:	d0e5      	beq.n	9000fc38 <USBD_LL_Reset+0x20>
      if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != USBD_OK)
9000fc6c:	4798      	blx	r3
9000fc6e:	2800      	cmp	r0, #0
9000fc70:	d0e2      	beq.n	9000fc38 <USBD_LL_Reset+0x20>
        ret = USBD_FAIL;
9000fc72:	2603      	movs	r6, #3
9000fc74:	e7e1      	b.n	9000fc3a <USBD_LL_Reset+0x22>

9000fc76 <USBD_LL_SetSpeed>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
  pdev->dev_speed = speed;
9000fc76:	7401      	strb	r1, [r0, #16]

  return USBD_OK;
}
9000fc78:	2000      	movs	r0, #0
9000fc7a:	4770      	bx	lr

9000fc7c <USBD_LL_Suspend>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state != USBD_STATE_SUSPENDED)
9000fc7c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9000fc80:	2b04      	cmp	r3, #4
9000fc82:	d004      	beq.n	9000fc8e <USBD_LL_Suspend+0x12>
  {
    pdev->dev_old_state = pdev->dev_state;
9000fc84:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9000fc88:	b2db      	uxtb	r3, r3
9000fc8a:	f880 329d 	strb.w	r3, [r0, #669]	@ 0x29d
  }

  pdev->dev_state = USBD_STATE_SUSPENDED;
9000fc8e:	2304      	movs	r3, #4
9000fc90:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c

  return USBD_OK;
}
9000fc94:	2000      	movs	r0, #0
9000fc96:	4770      	bx	lr

9000fc98 <USBD_LL_Resume>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
9000fc98:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9000fc9c:	2b04      	cmp	r3, #4
9000fc9e:	d104      	bne.n	9000fcaa <USBD_LL_Resume+0x12>
  {
    pdev->dev_state = pdev->dev_old_state;
9000fca0:	f890 329d 	ldrb.w	r3, [r0, #669]	@ 0x29d
9000fca4:	b2db      	uxtb	r3, r3
9000fca6:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
  }

  return USBD_OK;
}
9000fcaa:	2000      	movs	r0, #0
9000fcac:	4770      	bx	lr

9000fcae <USBD_LL_SOF>:
  *         Handle SOF event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
9000fcae:	b508      	push	{r3, lr}
  /* The SOF event can be distributed for all classes that support it */
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
9000fcb0:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
9000fcb4:	2a03      	cmp	r2, #3
9000fcb6:	d105      	bne.n	9000fcc4 <USBD_LL_SOF+0x16>
          }
        }
      }
    }
#else
    if (pdev->pClass[0] != NULL)
9000fcb8:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
9000fcbc:	b113      	cbz	r3, 9000fcc4 <USBD_LL_SOF+0x16>
    {
      if (pdev->pClass[0]->SOF != NULL)
9000fcbe:	69db      	ldr	r3, [r3, #28]
9000fcc0:	b103      	cbz	r3, 9000fcc4 <USBD_LL_SOF+0x16>
      {
        (void)pdev->pClass[0]->SOF(pdev);
9000fcc2:	4798      	blx	r3
    }
#endif /* USE_USBD_COMPOSITE */
  }

  return USBD_OK;
}
9000fcc4:	2000      	movs	r0, #0
9000fcc6:	bd08      	pop	{r3, pc}

9000fcc8 <USBD_LL_IsoINIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
9000fcc8:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
9000fccc:	32ae      	adds	r2, #174	@ 0xae
9000fcce:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
{
9000fcd2:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
9000fcd4:	b14a      	cbz	r2, 9000fcea <USBD_LL_IsoINIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
9000fcd6:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9000fcda:	2b03      	cmp	r3, #3
9000fcdc:	d101      	bne.n	9000fce2 <USBD_LL_IsoINIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoINIncomplete != NULL)
9000fcde:	6a13      	ldr	r3, [r2, #32]
9000fce0:	b90b      	cbnz	r3, 9000fce6 <USBD_LL_IsoINIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
9000fce2:	2000      	movs	r0, #0
}
9000fce4:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
9000fce6:	4798      	blx	r3
9000fce8:	e7fb      	b.n	9000fce2 <USBD_LL_IsoINIncomplete+0x1a>
    return USBD_FAIL;
9000fcea:	2003      	movs	r0, #3
9000fcec:	e7fa      	b.n	9000fce4 <USBD_LL_IsoINIncomplete+0x1c>

9000fcee <USBD_LL_IsoOUTIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
9000fcee:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
9000fcf2:	32ae      	adds	r2, #174	@ 0xae
9000fcf4:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
{
9000fcf8:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
9000fcfa:	b14a      	cbz	r2, 9000fd10 <USBD_LL_IsoOUTIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
9000fcfc:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9000fd00:	2b03      	cmp	r3, #3
9000fd02:	d101      	bne.n	9000fd08 <USBD_LL_IsoOUTIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoOUTIncomplete != NULL)
9000fd04:	6a53      	ldr	r3, [r2, #36]	@ 0x24
9000fd06:	b90b      	cbnz	r3, 9000fd0c <USBD_LL_IsoOUTIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
9000fd08:	2000      	movs	r0, #0
}
9000fd0a:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
9000fd0c:	4798      	blx	r3
9000fd0e:	e7fb      	b.n	9000fd08 <USBD_LL_IsoOUTIncomplete+0x1a>
    return USBD_FAIL;
9000fd10:	2003      	movs	r0, #3
9000fd12:	e7fa      	b.n	9000fd0a <USBD_LL_IsoOUTIncomplete+0x1c>

9000fd14 <USBD_LL_DevConnected>:
  * @brief  USBD_LL_DevConnected
  *         Handle device connection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevConnected(USBD_HandleTypeDef *pdev)
9000fd14:	2000      	movs	r0, #0
9000fd16:	4770      	bx	lr

9000fd18 <USBD_LL_DevDisconnected>:
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
  USBD_StatusTypeDef   ret = USBD_OK;

  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
9000fd18:	2201      	movs	r2, #1
{
9000fd1a:	b508      	push	{r3, lr}
  pdev->dev_state = USBD_STATE_DEFAULT;
9000fd1c:	f880 229c 	strb.w	r2, [r0, #668]	@ 0x29c
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
9000fd20:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
9000fd24:	b90a      	cbnz	r2, 9000fd2a <USBD_LL_DevDisconnected+0x12>
  USBD_StatusTypeDef   ret = USBD_OK;
9000fd26:	2000      	movs	r0, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
9000fd28:	bd08      	pop	{r3, pc}
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
9000fd2a:	6852      	ldr	r2, [r2, #4]
9000fd2c:	7901      	ldrb	r1, [r0, #4]
9000fd2e:	4790      	blx	r2
9000fd30:	2800      	cmp	r0, #0
9000fd32:	d0f8      	beq.n	9000fd26 <USBD_LL_DevDisconnected+0xe>
      ret = USBD_FAIL;
9000fd34:	2003      	movs	r0, #3
9000fd36:	e7f7      	b.n	9000fd28 <USBD_LL_DevDisconnected+0x10>

9000fd38 <USBD_CoreFindIF>:
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
#endif /* USE_USBD_COMPOSITE */
}
9000fd38:	2000      	movs	r0, #0
9000fd3a:	4770      	bx	lr

9000fd3c <USBD_CoreFindEP>:
  *         return the class index relative to the selected endpoint
  * @param  pdev: device instance
  * @param  index : selected endpoint number
  * @retval index of the class using the selected endpoint number. 0xFF if no class found.
  */
uint8_t USBD_CoreFindEP(USBD_HandleTypeDef *pdev, uint8_t index)
9000fd3c:	2000      	movs	r0, #0
9000fd3e:	4770      	bx	lr

9000fd40 <USBD_GetEpDesc>:
  * @param  pConfDesc:  pointer to Bos descriptor
  * @param  EpAddr:  endpoint address
  * @retval pointer to video endpoint descriptor
  */
void *USBD_GetEpDesc(uint8_t *pConfDesc, uint8_t EpAddr)
{
9000fd40:	b510      	push	{r4, lr}
  USBD_DescHeaderTypeDef *pdesc = (USBD_DescHeaderTypeDef *)(void *)pConfDesc;
  USBD_ConfigDescTypeDef *desc = (USBD_ConfigDescTypeDef *)(void *)pConfDesc;
  USBD_EpDescTypeDef *pEpDesc = NULL;
  uint16_t ptr;

  if (desc->wTotalLength > desc->bLength)
9000fd42:	8842      	ldrh	r2, [r0, #2]
9000fd44:	7803      	ldrb	r3, [r0, #0]
9000fd46:	429a      	cmp	r2, r3
9000fd48:	d801      	bhi.n	9000fd4e <USBD_GetEpDesc+0xe>
  USBD_EpDescTypeDef *pEpDesc = NULL;
9000fd4a:	2000      	movs	r0, #0
      }
    }
  }

  return (void *)pEpDesc;
}
9000fd4c:	bd10      	pop	{r4, pc}
  */
USBD_DescHeaderTypeDef *USBD_GetNextDesc(uint8_t *pbuf, uint16_t *ptr)
{
  USBD_DescHeaderTypeDef *pnext = (USBD_DescHeaderTypeDef *)(void *)pbuf;

  *ptr += pnext->bLength;
9000fd4e:	7804      	ldrb	r4, [r0, #0]
  pnext = (USBD_DescHeaderTypeDef *)(void *)(pbuf + pnext->bLength);
9000fd50:	4420      	add	r0, r4
  *ptr += pnext->bLength;
9000fd52:	4423      	add	r3, r4
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
9000fd54:	7844      	ldrb	r4, [r0, #1]
  *ptr += pnext->bLength;
9000fd56:	b29b      	uxth	r3, r3
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
9000fd58:	2c05      	cmp	r4, #5
9000fd5a:	d1f4      	bne.n	9000fd46 <USBD_GetEpDesc+0x6>
        if (pEpDesc->bEndpointAddress == EpAddr)
9000fd5c:	7884      	ldrb	r4, [r0, #2]
9000fd5e:	428c      	cmp	r4, r1
9000fd60:	d1f1      	bne.n	9000fd46 <USBD_GetEpDesc+0x6>
9000fd62:	e7f3      	b.n	9000fd4c <USBD_GetEpDesc+0xc>

9000fd64 <USBD_CtlError.constprop.0>:
  *         Handle USB low level Error
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
9000fd64:	b510      	push	{r4, lr}
9000fd66:	4604      	mov	r4, r0
{
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
9000fd68:	2180      	movs	r1, #128	@ 0x80
9000fd6a:	f7f2 f8f3 	bl	90001f54 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
9000fd6e:	2100      	movs	r1, #0
9000fd70:	4620      	mov	r0, r4
}
9000fd72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
9000fd76:	f7f2 b8ed 	b.w	90001f54 <USBD_LL_StallEP>
	...

9000fd7c <USBD_StdDevReq>:
{
9000fd7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9000fd7e:	780b      	ldrb	r3, [r1, #0]
9000fd80:	4604      	mov	r4, r0
9000fd82:	460d      	mov	r5, r1
9000fd84:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
9000fd88:	2b20      	cmp	r3, #32
9000fd8a:	d009      	beq.n	9000fda0 <USBD_StdDevReq+0x24>
9000fd8c:	2b40      	cmp	r3, #64	@ 0x40
9000fd8e:	d007      	beq.n	9000fda0 <USBD_StdDevReq+0x24>
9000fd90:	b193      	cbz	r3, 9000fdb8 <USBD_StdDevReq+0x3c>
      USBD_CtlError(pdev, req);
9000fd92:	4620      	mov	r0, r4
9000fd94:	f7ff ffe6 	bl	9000fd64 <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
9000fd98:	2500      	movs	r5, #0
}
9000fd9a:	4628      	mov	r0, r5
9000fd9c:	b003      	add	sp, #12
9000fd9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
9000fda0:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
9000fda4:	4629      	mov	r1, r5
9000fda6:	4620      	mov	r0, r4
9000fda8:	33ae      	adds	r3, #174	@ 0xae
9000fdaa:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
9000fdae:	689b      	ldr	r3, [r3, #8]
}
9000fdb0:	b003      	add	sp, #12
9000fdb2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
9000fdb6:	4718      	bx	r3
      switch (req->bRequest)
9000fdb8:	784b      	ldrb	r3, [r1, #1]
9000fdba:	2b09      	cmp	r3, #9
9000fdbc:	d8e9      	bhi.n	9000fd92 <USBD_StdDevReq+0x16>
9000fdbe:	a201      	add	r2, pc, #4	@ (adr r2, 9000fdc4 <USBD_StdDevReq+0x48>)
9000fdc0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9000fdc4:	90010017 	.word	0x90010017
9000fdc8:	9001005b 	.word	0x9001005b
9000fdcc:	9000fd93 	.word	0x9000fd93
9000fdd0:	9001003f 	.word	0x9001003f
9000fdd4:	9000fd93 	.word	0x9000fd93
9000fdd8:	9000ff11 	.word	0x9000ff11
9000fddc:	9000fded 	.word	0x9000fded
9000fde0:	9000fd93 	.word	0x9000fd93
9000fde4:	9000ffeb 	.word	0x9000ffeb
9000fde8:	9000ff53 	.word	0x9000ff53
  uint16_t len = 0U;
9000fdec:	2300      	movs	r3, #0
9000fdee:	f8ad 3006 	strh.w	r3, [sp, #6]
  switch (req->wValue >> 8)
9000fdf2:	884b      	ldrh	r3, [r1, #2]
9000fdf4:	0a1a      	lsrs	r2, r3, #8
9000fdf6:	3a01      	subs	r2, #1
9000fdf8:	2a06      	cmp	r2, #6
9000fdfa:	d8ca      	bhi.n	9000fd92 <USBD_StdDevReq+0x16>
9000fdfc:	a101      	add	r1, pc, #4	@ (adr r1, 9000fe04 <USBD_StdDevReq+0x88>)
9000fdfe:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
9000fe02:	bf00      	nop
9000fe04:	9000fe21 	.word	0x9000fe21
9000fe08:	9000fe53 	.word	0x9000fe53
9000fe0c:	9000fe6d 	.word	0x9000fe6d
9000fe10:	9000fd93 	.word	0x9000fd93
9000fe14:	9000fd93 	.word	0x9000fd93
9000fe18:	9000fee3 	.word	0x9000fee3
9000fe1c:	9000fef9 	.word	0x9000fef9
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
9000fe20:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
9000fe24:	681b      	ldr	r3, [r3, #0]
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
9000fe26:	f10d 0106 	add.w	r1, sp, #6
9000fe2a:	7c20      	ldrb	r0, [r4, #16]
9000fe2c:	4798      	blx	r3
  if (req->wLength != 0U)
9000fe2e:	88ea      	ldrh	r2, [r5, #6]
9000fe30:	2a00      	cmp	r2, #0
9000fe32:	f000 80bd 	beq.w	9000ffb0 <USBD_StdDevReq+0x234>
    if (len != 0U)
9000fe36:	f8bd 3006 	ldrh.w	r3, [sp, #6]
9000fe3a:	2b00      	cmp	r3, #0
9000fe3c:	d0a9      	beq.n	9000fd92 <USBD_StdDevReq+0x16>
      len = MIN(len, req->wLength);
9000fe3e:	429a      	cmp	r2, r3
      (void)USBD_CtlSendData(pdev, pbuf, len);
9000fe40:	4601      	mov	r1, r0
      len = MIN(len, req->wLength);
9000fe42:	bf28      	it	cs
9000fe44:	461a      	movcs	r2, r3
9000fe46:	f8ad 2006 	strh.w	r2, [sp, #6]
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
9000fe4a:	4620      	mov	r0, r4
9000fe4c:	f000 fa1e 	bl	9001028c <USBD_CtlSendData>
        break;
9000fe50:	e7a2      	b.n	9000fd98 <USBD_StdDevReq+0x1c>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
9000fe52:	7c02      	ldrb	r2, [r0, #16]
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
9000fe54:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
      if (pdev->dev_speed == USBD_SPEED_HIGH)
9000fe58:	b932      	cbnz	r2, 9000fe68 <USBD_StdDevReq+0xec>
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
9000fe5a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
9000fe5c:	f10d 0006 	add.w	r0, sp, #6
9000fe60:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
9000fe62:	2302      	movs	r3, #2
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
9000fe64:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
9000fe66:	e7e2      	b.n	9000fe2e <USBD_StdDevReq+0xb2>
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
9000fe68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000fe6a:	e7f7      	b.n	9000fe5c <USBD_StdDevReq+0xe0>
      switch ((uint8_t)(req->wValue))
9000fe6c:	b2db      	uxtb	r3, r3
9000fe6e:	2b05      	cmp	r3, #5
9000fe70:	d804      	bhi.n	9000fe7c <USBD_StdDevReq+0x100>
9000fe72:	e8df f003 	tbb	[pc, r3]
9000fe76:	120c      	.short	0x120c
9000fe78:	221e1a16 	.word	0x221e1a16
9000fe7c:	f500 772d 	add.w	r7, r0, #692	@ 0x2b4
          for (uint32_t idx = 0U; (idx < pdev->NumClasses); idx++)
9000fe80:	2600      	movs	r6, #0
9000fe82:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8
9000fe86:	429e      	cmp	r6, r3
9000fe88:	d31b      	bcc.n	9000fec2 <USBD_StdDevReq+0x146>
9000fe8a:	2000      	movs	r0, #0
9000fe8c:	e7cf      	b.n	9000fe2e <USBD_StdDevReq+0xb2>
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
9000fe8e:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
9000fe92:	685b      	ldr	r3, [r3, #4]
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
9000fe94:	2b00      	cmp	r3, #0
9000fe96:	d1c6      	bne.n	9000fe26 <USBD_StdDevReq+0xaa>
9000fe98:	e77b      	b.n	9000fd92 <USBD_StdDevReq+0x16>
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
9000fe9a:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
9000fe9e:	689b      	ldr	r3, [r3, #8]
9000fea0:	e7f8      	b.n	9000fe94 <USBD_StdDevReq+0x118>
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
9000fea2:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
9000fea6:	68db      	ldr	r3, [r3, #12]
9000fea8:	e7f4      	b.n	9000fe94 <USBD_StdDevReq+0x118>
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
9000feaa:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
9000feae:	691b      	ldr	r3, [r3, #16]
9000feb0:	e7f0      	b.n	9000fe94 <USBD_StdDevReq+0x118>
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
9000feb2:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
9000feb6:	695b      	ldr	r3, [r3, #20]
9000feb8:	e7ec      	b.n	9000fe94 <USBD_StdDevReq+0x118>
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
9000feba:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
9000febe:	699b      	ldr	r3, [r3, #24]
9000fec0:	e7e8      	b.n	9000fe94 <USBD_StdDevReq+0x118>
            if (pdev->pClass[idx]->GetUsrStrDescriptor != NULL)
9000fec2:	f857 3f04 	ldr.w	r3, [r7, #4]!
9000fec6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9000fec8:	b90b      	cbnz	r3, 9000fece <USBD_StdDevReq+0x152>
          for (uint32_t idx = 0U; (idx < pdev->NumClasses); idx++)
9000feca:	3601      	adds	r6, #1
9000fecc:	e7d9      	b.n	9000fe82 <USBD_StdDevReq+0x106>
              pbuf = pdev->pClass[idx]->GetUsrStrDescriptor(pdev, LOBYTE(req->wValue), &len);
9000fece:	f10d 0206 	add.w	r2, sp, #6
9000fed2:	78a9      	ldrb	r1, [r5, #2]
9000fed4:	4620      	mov	r0, r4
              pdev->classId = idx;
9000fed6:	f8c4 62d4 	str.w	r6, [r4, #724]	@ 0x2d4
              pbuf = pdev->pClass[idx]->GetUsrStrDescriptor(pdev, LOBYTE(req->wValue), &len);
9000feda:	4798      	blx	r3
              if (pbuf == NULL) /* This means that no class recognized the string index */
9000fedc:	2800      	cmp	r0, #0
9000fede:	d1a6      	bne.n	9000fe2e <USBD_StdDevReq+0xb2>
9000fee0:	e7f3      	b.n	9000feca <USBD_StdDevReq+0x14e>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
9000fee2:	7c03      	ldrb	r3, [r0, #16]
9000fee4:	2b00      	cmp	r3, #0
9000fee6:	f47f af54 	bne.w	9000fd92 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetDeviceQualifierDescriptor(&len);
9000feea:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
9000feee:	f10d 0006 	add.w	r0, sp, #6
9000fef2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9000fef4:	4798      	blx	r3
  if (err != 0U)
9000fef6:	e79a      	b.n	9000fe2e <USBD_StdDevReq+0xb2>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
9000fef8:	7c03      	ldrb	r3, [r0, #16]
9000fefa:	2b00      	cmp	r3, #0
9000fefc:	f47f af49 	bne.w	9000fd92 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetOtherSpeedConfigDescriptor(&len);
9000ff00:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
9000ff04:	f10d 0006 	add.w	r0, sp, #6
9000ff08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000ff0a:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
9000ff0c:	2307      	movs	r3, #7
9000ff0e:	e7a9      	b.n	9000fe64 <USBD_StdDevReq+0xe8>
  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
9000ff10:	888b      	ldrh	r3, [r1, #4]
9000ff12:	2b00      	cmp	r3, #0
9000ff14:	f47f af3d 	bne.w	9000fd92 <USBD_StdDevReq+0x16>
9000ff18:	88cb      	ldrh	r3, [r1, #6]
9000ff1a:	2b00      	cmp	r3, #0
9000ff1c:	f47f af39 	bne.w	9000fd92 <USBD_StdDevReq+0x16>
9000ff20:	884d      	ldrh	r5, [r1, #2]
9000ff22:	2d7f      	cmp	r5, #127	@ 0x7f
9000ff24:	f63f af35 	bhi.w	9000fd92 <USBD_StdDevReq+0x16>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
9000ff28:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9000ff2c:	2b03      	cmp	r3, #3
9000ff2e:	f43f af30 	beq.w	9000fd92 <USBD_StdDevReq+0x16>
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
9000ff32:	b2ed      	uxtb	r5, r5
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
9000ff34:	4629      	mov	r1, r5
      pdev->dev_address = dev_addr;
9000ff36:	f880 529e 	strb.w	r5, [r0, #670]	@ 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
9000ff3a:	f7f2 f82b 	bl	90001f94 <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
9000ff3e:	4620      	mov	r0, r4
9000ff40:	f000 f9ce 	bl	900102e0 <USBD_CtlSendStatus>
      if (dev_addr != 0U)
9000ff44:	b11d      	cbz	r5, 9000ff4e <USBD_StdDevReq+0x1d2>
        pdev->dev_state = USBD_STATE_ADDRESSED;
9000ff46:	2302      	movs	r3, #2
          pdev->dev_state = USBD_STATE_CONFIGURED;
9000ff48:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
9000ff4c:	e724      	b.n	9000fd98 <USBD_StdDevReq+0x1c>
        pdev->dev_state = USBD_STATE_DEFAULT;
9000ff4e:	2301      	movs	r3, #1
9000ff50:	e7fa      	b.n	9000ff48 <USBD_StdDevReq+0x1cc>
  cfgidx = (uint8_t)(req->wValue);
9000ff52:	7889      	ldrb	r1, [r1, #2]
9000ff54:	4d47      	ldr	r5, [pc, #284]	@ (90010074 <USBD_StdDevReq+0x2f8>)
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
9000ff56:	2901      	cmp	r1, #1
  cfgidx = (uint8_t)(req->wValue);
9000ff58:	7029      	strb	r1, [r5, #0]
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
9000ff5a:	d903      	bls.n	9000ff64 <USBD_StdDevReq+0x1e8>
    USBD_CtlError(pdev, req);
9000ff5c:	f7ff ff02 	bl	9000fd64 <USBD_CtlError.constprop.0>
    return USBD_FAIL;
9000ff60:	2503      	movs	r5, #3
9000ff62:	e71a      	b.n	9000fd9a <USBD_StdDevReq+0x1e>
  switch (pdev->dev_state)
9000ff64:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9000ff68:	2b02      	cmp	r3, #2
9000ff6a:	b2de      	uxtb	r6, r3
9000ff6c:	d008      	beq.n	9000ff80 <USBD_StdDevReq+0x204>
9000ff6e:	2e03      	cmp	r6, #3
9000ff70:	d017      	beq.n	9000ffa2 <USBD_StdDevReq+0x226>
      USBD_CtlError(pdev, req);
9000ff72:	f7ff fef7 	bl	9000fd64 <USBD_CtlError.constprop.0>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
9000ff76:	7829      	ldrb	r1, [r5, #0]
9000ff78:	4620      	mov	r0, r4
9000ff7a:	f7ff fd8c 	bl	9000fa96 <USBD_ClrClassConfig>
      break;
9000ff7e:	e7ef      	b.n	9000ff60 <USBD_StdDevReq+0x1e4>
      if (cfgidx != 0U)
9000ff80:	b1b1      	cbz	r1, 9000ffb0 <USBD_StdDevReq+0x234>
        pdev->dev_config = cfgidx;
9000ff82:	2101      	movs	r1, #1
9000ff84:	6041      	str	r1, [r0, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
9000ff86:	f7ff fd7f 	bl	9000fa88 <USBD_SetClassConfig>
        if (ret != USBD_OK)
9000ff8a:	4605      	mov	r5, r0
          USBD_CtlError(pdev, req);
9000ff8c:	4620      	mov	r0, r4
        if (ret != USBD_OK)
9000ff8e:	b125      	cbz	r5, 9000ff9a <USBD_StdDevReq+0x21e>
          USBD_CtlError(pdev, req);
9000ff90:	f7ff fee8 	bl	9000fd64 <USBD_CtlError.constprop.0>
          pdev->dev_state = USBD_STATE_ADDRESSED;
9000ff94:	f884 629c 	strb.w	r6, [r4, #668]	@ 0x29c
9000ff98:	e6ff      	b.n	9000fd9a <USBD_StdDevReq+0x1e>
          (void)USBD_CtlSendStatus(pdev);
9000ff9a:	f000 f9a1 	bl	900102e0 <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
9000ff9e:	2303      	movs	r3, #3
9000ffa0:	e7d2      	b.n	9000ff48 <USBD_StdDevReq+0x1cc>
      if (cfgidx == 0U)
9000ffa2:	b949      	cbnz	r1, 9000ffb8 <USBD_StdDevReq+0x23c>
        pdev->dev_state = USBD_STATE_ADDRESSED;
9000ffa4:	2302      	movs	r3, #2
        pdev->dev_config = cfgidx;
9000ffa6:	6041      	str	r1, [r0, #4]
        pdev->dev_state = USBD_STATE_ADDRESSED;
9000ffa8:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
        (void)USBD_ClrClassConfig(pdev, cfgidx);
9000ffac:	f7ff fd73 	bl	9000fa96 <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
9000ffb0:	4620      	mov	r0, r4
9000ffb2:	f000 f995 	bl	900102e0 <USBD_CtlSendStatus>
9000ffb6:	e6ef      	b.n	9000fd98 <USBD_StdDevReq+0x1c>
      else if (cfgidx != pdev->dev_config)
9000ffb8:	6841      	ldr	r1, [r0, #4]
9000ffba:	2901      	cmp	r1, #1
9000ffbc:	d0f8      	beq.n	9000ffb0 <USBD_StdDevReq+0x234>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
9000ffbe:	b2c9      	uxtb	r1, r1
9000ffc0:	f7ff fd69 	bl	9000fa96 <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
9000ffc4:	7829      	ldrb	r1, [r5, #0]
        ret = USBD_SetClassConfig(pdev, cfgidx);
9000ffc6:	4620      	mov	r0, r4
        pdev->dev_config = cfgidx;
9000ffc8:	6061      	str	r1, [r4, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
9000ffca:	f7ff fd5d 	bl	9000fa88 <USBD_SetClassConfig>
        if (ret != USBD_OK)
9000ffce:	4605      	mov	r5, r0
9000ffd0:	2800      	cmp	r0, #0
9000ffd2:	d0ed      	beq.n	9000ffb0 <USBD_StdDevReq+0x234>
          USBD_CtlError(pdev, req);
9000ffd4:	4620      	mov	r0, r4
9000ffd6:	f7ff fec5 	bl	9000fd64 <USBD_CtlError.constprop.0>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
9000ffda:	7921      	ldrb	r1, [r4, #4]
9000ffdc:	4620      	mov	r0, r4
9000ffde:	f7ff fd5a 	bl	9000fa96 <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
9000ffe2:	2302      	movs	r3, #2
9000ffe4:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
9000ffe8:	e6d7      	b.n	9000fd9a <USBD_StdDevReq+0x1e>
  if (req->wLength != 1U)
9000ffea:	88ca      	ldrh	r2, [r1, #6]
9000ffec:	2a01      	cmp	r2, #1
9000ffee:	f47f aed0 	bne.w	9000fd92 <USBD_StdDevReq+0x16>
    switch (pdev->dev_state)
9000fff2:	f890 129c 	ldrb.w	r1, [r0, #668]	@ 0x29c
9000fff6:	2902      	cmp	r1, #2
9000fff8:	b2cb      	uxtb	r3, r1
9000fffa:	d807      	bhi.n	9001000c <USBD_StdDevReq+0x290>
9000fffc:	2b00      	cmp	r3, #0
9000fffe:	f43f aec8 	beq.w	9000fd92 <USBD_StdDevReq+0x16>
        pdev->dev_default_config = 0U;
90010002:	4601      	mov	r1, r0
90010004:	2300      	movs	r3, #0
90010006:	f841 3f08 	str.w	r3, [r1, #8]!
9001000a:	e71e      	b.n	9000fe4a <USBD_StdDevReq+0xce>
    switch (pdev->dev_state)
9001000c:	2b03      	cmp	r3, #3
9001000e:	f47f aec0 	bne.w	9000fd92 <USBD_StdDevReq+0x16>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
90010012:	1d01      	adds	r1, r0, #4
90010014:	e719      	b.n	9000fe4a <USBD_StdDevReq+0xce>
  switch (pdev->dev_state)
90010016:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9001001a:	3b01      	subs	r3, #1
9001001c:	2b02      	cmp	r3, #2
9001001e:	f63f aeb8 	bhi.w	9000fd92 <USBD_StdDevReq+0x16>
      if (req->wLength != 0x2U)
90010022:	88ca      	ldrh	r2, [r1, #6]
90010024:	2a02      	cmp	r2, #2
90010026:	f47f aeb4 	bne.w	9000fd92 <USBD_StdDevReq+0x16>
      if (pdev->dev_remote_wakeup != 0U)
9001002a:	f8d0 32a4 	ldr.w	r3, [r0, #676]	@ 0x2a4
9001002e:	4601      	mov	r1, r0
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
90010030:	2b00      	cmp	r3, #0
90010032:	bf0c      	ite	eq
90010034:	2301      	moveq	r3, #1
90010036:	2303      	movne	r3, #3
90010038:	f841 3f0c 	str.w	r3, [r1, #12]!
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
9001003c:	e705      	b.n	9000fe4a <USBD_StdDevReq+0xce>
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
9001003e:	884b      	ldrh	r3, [r1, #2]
90010040:	2b01      	cmp	r3, #1
90010042:	d102      	bne.n	9001004a <USBD_StdDevReq+0x2ce>
        pdev->dev_remote_wakeup = 0U;
90010044:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
90010048:	e7b2      	b.n	9000ffb0 <USBD_StdDevReq+0x234>
  else if (req->wValue == USB_FEATURE_TEST_MODE)
9001004a:	2b02      	cmp	r3, #2
9001004c:	f47f aea1 	bne.w	9000fd92 <USBD_StdDevReq+0x16>
    pdev->dev_test_mode = (uint8_t)(req->wIndex >> 8);
90010050:	888b      	ldrh	r3, [r1, #4]
90010052:	0a1b      	lsrs	r3, r3, #8
90010054:	f880 32a0 	strb.w	r3, [r0, #672]	@ 0x2a0
    (void)USBD_CtlSendStatus(pdev);
90010058:	e7aa      	b.n	9000ffb0 <USBD_StdDevReq+0x234>
  switch (pdev->dev_state)
9001005a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9001005e:	3b01      	subs	r3, #1
90010060:	2b02      	cmp	r3, #2
90010062:	f63f ae96 	bhi.w	9000fd92 <USBD_StdDevReq+0x16>
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
90010066:	884b      	ldrh	r3, [r1, #2]
90010068:	2b01      	cmp	r3, #1
9001006a:	f47f ae95 	bne.w	9000fd98 <USBD_StdDevReq+0x1c>
        pdev->dev_remote_wakeup = 0U;
9001006e:	2300      	movs	r3, #0
90010070:	e7e8      	b.n	90010044 <USBD_StdDevReq+0x2c8>
90010072:	bf00      	nop
90010074:	2001aa31 	.word	0x2001aa31

90010078 <USBD_StdItfReq>:
{
90010078:	b570      	push	{r4, r5, r6, lr}
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
9001007a:	780b      	ldrb	r3, [r1, #0]
{
9001007c:	4604      	mov	r4, r0
9001007e:	460e      	mov	r6, r1
90010080:	f003 0260 	and.w	r2, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
90010084:	065b      	lsls	r3, r3, #25
90010086:	d501      	bpl.n	9001008c <USBD_StdItfReq+0x14>
90010088:	2a40      	cmp	r2, #64	@ 0x40
9001008a:	d11f      	bne.n	900100cc <USBD_StdItfReq+0x54>
      switch (pdev->dev_state)
9001008c:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
90010090:	3b01      	subs	r3, #1
90010092:	2b02      	cmp	r3, #2
90010094:	d81a      	bhi.n	900100cc <USBD_StdItfReq+0x54>
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
90010096:	7931      	ldrb	r1, [r6, #4]
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
90010098:	4620      	mov	r0, r4
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
9001009a:	2901      	cmp	r1, #1
9001009c:	d817      	bhi.n	900100ce <USBD_StdItfReq+0x56>
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
9001009e:	f7ff fe4b 	bl	9000fd38 <USBD_CoreFindIF>
            if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
900100a2:	b988      	cbnz	r0, 900100c8 <USBD_StdItfReq+0x50>
              if (pdev->pClass[idx]->Setup != NULL)
900100a4:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
900100a8:	689b      	ldr	r3, [r3, #8]
900100aa:	b16b      	cbz	r3, 900100c8 <USBD_StdItfReq+0x50>
                pdev->classId = idx;
900100ac:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
900100b0:	4631      	mov	r1, r6
900100b2:	4620      	mov	r0, r4
900100b4:	4798      	blx	r3
900100b6:	4605      	mov	r5, r0
            if ((req->wLength == 0U) && (ret == USBD_OK))
900100b8:	88f3      	ldrh	r3, [r6, #6]
900100ba:	b91b      	cbnz	r3, 900100c4 <USBD_StdItfReq+0x4c>
900100bc:	b915      	cbnz	r5, 900100c4 <USBD_StdItfReq+0x4c>
              (void)USBD_CtlSendStatus(pdev);
900100be:	4620      	mov	r0, r4
900100c0:	f000 f90e 	bl	900102e0 <USBD_CtlSendStatus>
}
900100c4:	4628      	mov	r0, r5
900100c6:	bd70      	pop	{r4, r5, r6, pc}
                ret = USBD_FAIL;
900100c8:	2503      	movs	r5, #3
900100ca:	e7f5      	b.n	900100b8 <USBD_StdItfReq+0x40>
          USBD_CtlError(pdev, req);
900100cc:	4620      	mov	r0, r4
  USBD_StatusTypeDef ret = USBD_OK;
900100ce:	2500      	movs	r5, #0
            USBD_CtlError(pdev, req);
900100d0:	f7ff fe48 	bl	9000fd64 <USBD_CtlError.constprop.0>
900100d4:	e7f6      	b.n	900100c4 <USBD_StdItfReq+0x4c>

900100d6 <USBD_StdEPReq>:
{
900100d6:	b570      	push	{r4, r5, r6, lr}
900100d8:	780b      	ldrb	r3, [r1, #0]
900100da:	4604      	mov	r4, r0
900100dc:	460e      	mov	r6, r1
  ep_addr = LOBYTE(req->wIndex);
900100de:	888a      	ldrh	r2, [r1, #4]
900100e0:	f003 0360 	and.w	r3, r3, #96	@ 0x60
900100e4:	790d      	ldrb	r5, [r1, #4]
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
900100e6:	2b20      	cmp	r3, #32
900100e8:	d059      	beq.n	9001019e <USBD_StdEPReq+0xc8>
900100ea:	2b40      	cmp	r3, #64	@ 0x40
900100ec:	d057      	beq.n	9001019e <USBD_StdEPReq+0xc8>
900100ee:	b11b      	cbz	r3, 900100f8 <USBD_StdEPReq+0x22>
              USBD_CtlError(pdev, req);
900100f0:	4620      	mov	r0, r4
900100f2:	f7ff fe37 	bl	9000fd64 <USBD_CtlError.constprop.0>
              break;
900100f6:	e03e      	b.n	90010176 <USBD_StdEPReq+0xa0>
      switch (req->bRequest)
900100f8:	784b      	ldrb	r3, [r1, #1]
900100fa:	2b01      	cmp	r3, #1
900100fc:	d03d      	beq.n	9001017a <USBD_StdEPReq+0xa4>
900100fe:	2b03      	cmp	r3, #3
90010100:	d026      	beq.n	90010150 <USBD_StdEPReq+0x7a>
90010102:	2b00      	cmp	r3, #0
90010104:	d1f4      	bne.n	900100f0 <USBD_StdEPReq+0x1a>
          switch (pdev->dev_state)
90010106:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9001010a:	2b02      	cmp	r3, #2
9001010c:	b2d9      	uxtb	r1, r3
9001010e:	d062      	beq.n	900101d6 <USBD_StdEPReq+0x100>
90010110:	2903      	cmp	r1, #3
90010112:	d1ed      	bne.n	900100f0 <USBD_StdEPReq+0x1a>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
90010114:	f005 030f 	and.w	r3, r5, #15
              if ((ep_addr & 0x80U) == 0x80U)
90010118:	f012 0f80 	tst.w	r2, #128	@ 0x80
9001011c:	f04f 0214 	mov.w	r2, #20
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
90010120:	fb02 0303 	mla	r3, r2, r3, r0
              if ((ep_addr & 0x80U) == 0x80U)
90010124:	d068      	beq.n	900101f8 <USBD_StdEPReq+0x122>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
90010126:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
90010128:	2b00      	cmp	r3, #0
9001012a:	d0e1      	beq.n	900100f0 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
9001012c:	f005 067f 	and.w	r6, r5, #127	@ 0x7f
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
90010130:	2d80      	cmp	r5, #128	@ 0x80
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
90010132:	f106 0601 	add.w	r6, r6, #1
90010136:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9001013a:	eb00 0686 	add.w	r6, r0, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
9001013e:	d067      	beq.n	90010210 <USBD_StdEPReq+0x13a>
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
90010140:	4629      	mov	r1, r5
90010142:	4620      	mov	r0, r4
90010144:	f7f1 ff14 	bl	90001f70 <USBD_LL_IsStallEP>
90010148:	2800      	cmp	r0, #0
9001014a:	d066      	beq.n	9001021a <USBD_StdEPReq+0x144>
                pep->status = 0x0001U;
9001014c:	2301      	movs	r3, #1
9001014e:	e060      	b.n	90010212 <USBD_StdEPReq+0x13c>
          switch (pdev->dev_state)
90010150:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90010154:	2b02      	cmp	r3, #2
90010156:	b2da      	uxtb	r2, r3
90010158:	d033      	beq.n	900101c2 <USBD_StdEPReq+0xec>
9001015a:	2a03      	cmp	r2, #3
9001015c:	d1c8      	bne.n	900100f0 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
9001015e:	884b      	ldrh	r3, [r1, #2]
90010160:	b933      	cbnz	r3, 90010170 <USBD_StdEPReq+0x9a>
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
90010162:	0669      	lsls	r1, r5, #25
90010164:	d004      	beq.n	90010170 <USBD_StdEPReq+0x9a>
90010166:	88f3      	ldrh	r3, [r6, #6]
90010168:	b913      	cbnz	r3, 90010170 <USBD_StdEPReq+0x9a>
                  (void)USBD_LL_StallEP(pdev, ep_addr);
9001016a:	4629      	mov	r1, r5
9001016c:	f7f1 fef2 	bl	90001f54 <USBD_LL_StallEP>
              (void)USBD_CtlSendStatus(pdev);
90010170:	4620      	mov	r0, r4
90010172:	f000 f8b5 	bl	900102e0 <USBD_CtlSendStatus>
}
90010176:	2000      	movs	r0, #0
90010178:	bd70      	pop	{r4, r5, r6, pc}
          switch (pdev->dev_state)
9001017a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9001017e:	2b02      	cmp	r3, #2
90010180:	b2da      	uxtb	r2, r3
90010182:	d01e      	beq.n	900101c2 <USBD_StdEPReq+0xec>
90010184:	2a03      	cmp	r2, #3
90010186:	d1b3      	bne.n	900100f0 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
90010188:	884b      	ldrh	r3, [r1, #2]
9001018a:	2b00      	cmp	r3, #0
9001018c:	d1f3      	bne.n	90010176 <USBD_StdEPReq+0xa0>
                if ((ep_addr & 0x7FU) != 0x00U)
9001018e:	066b      	lsls	r3, r5, #25
90010190:	d002      	beq.n	90010198 <USBD_StdEPReq+0xc2>
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
90010192:	4629      	mov	r1, r5
90010194:	f7f1 fee5 	bl	90001f62 <USBD_LL_ClearStallEP>
                (void)USBD_CtlSendStatus(pdev);
90010198:	4620      	mov	r0, r4
9001019a:	f000 f8a1 	bl	900102e0 <USBD_CtlSendStatus>
                idx = USBD_CoreFindEP(pdev, ep_addr);
9001019e:	4629      	mov	r1, r5
900101a0:	4620      	mov	r0, r4
900101a2:	f7ff fdcb 	bl	9000fd3c <USBD_CoreFindEP>
                if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
900101a6:	2800      	cmp	r0, #0
900101a8:	d1e5      	bne.n	90010176 <USBD_StdEPReq+0xa0>
                  if (pdev->pClass[idx]->Setup != NULL)
900101aa:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
                  pdev->classId = idx;
900101ae:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                  if (pdev->pClass[idx]->Setup != NULL)
900101b2:	689b      	ldr	r3, [r3, #8]
900101b4:	2b00      	cmp	r3, #0
900101b6:	d0de      	beq.n	90010176 <USBD_StdEPReq+0xa0>
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
900101b8:	4631      	mov	r1, r6
900101ba:	4620      	mov	r0, r4
}
900101bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
900101c0:	4718      	bx	r3
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
900101c2:	066a      	lsls	r2, r5, #25
900101c4:	d094      	beq.n	900100f0 <USBD_StdEPReq+0x1a>
                (void)USBD_LL_StallEP(pdev, ep_addr);
900101c6:	4629      	mov	r1, r5
900101c8:	f7f1 fec4 	bl	90001f54 <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
900101cc:	2180      	movs	r1, #128	@ 0x80
900101ce:	4620      	mov	r0, r4
900101d0:	f7f1 fec0 	bl	90001f54 <USBD_LL_StallEP>
900101d4:	e7cf      	b.n	90010176 <USBD_StdEPReq+0xa0>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
900101d6:	0669      	lsls	r1, r5, #25
900101d8:	d18a      	bne.n	900100f0 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
900101da:	0613      	lsls	r3, r2, #24
              pep->status = 0x0000U;
900101dc:	f04f 0300 	mov.w	r3, #0
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
900101e0:	f04f 0202 	mov.w	r2, #2
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
900101e4:	bf4c      	ite	mi
900101e6:	f100 0114 	addmi.w	r1, r0, #20
900101ea:	f500 71aa 	addpl.w	r1, r0, #340	@ 0x154
              pep->status = 0x0000U;
900101ee:	600b      	str	r3, [r1, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
900101f0:	4620      	mov	r0, r4
900101f2:	f000 f84b 	bl	9001028c <USBD_CtlSendData>
              break;
900101f6:	e7be      	b.n	90010176 <USBD_StdEPReq+0xa0>
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
900101f8:	f8b3 3164 	ldrh.w	r3, [r3, #356]	@ 0x164
900101fc:	2b00      	cmp	r3, #0
900101fe:	f43f af77 	beq.w	900100f0 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
90010202:	2614      	movs	r6, #20
90010204:	fb06 0605 	mla	r6, r6, r5, r0
90010208:	f506 76aa 	add.w	r6, r6, #340	@ 0x154
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
9001020c:	2d00      	cmp	r5, #0
9001020e:	d197      	bne.n	90010140 <USBD_StdEPReq+0x6a>
                pep->status = 0x0000U;
90010210:	2300      	movs	r3, #0
                pep->status = 0x0001U;
90010212:	6033      	str	r3, [r6, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
90010214:	2202      	movs	r2, #2
90010216:	4631      	mov	r1, r6
90010218:	e7ea      	b.n	900101f0 <USBD_StdEPReq+0x11a>
                pep->status = 0x0000U;
9001021a:	6030      	str	r0, [r6, #0]
9001021c:	e7fa      	b.n	90010214 <USBD_StdEPReq+0x13e>

9001021e <USBD_ParseSetupRequest>:
  req->bmRequest = *(uint8_t *)(pbuff);
9001021e:	780b      	ldrb	r3, [r1, #0]
90010220:	7003      	strb	r3, [r0, #0]
  req->bRequest = *(uint8_t *)(pbuff);
90010222:	784b      	ldrb	r3, [r1, #1]
90010224:	7043      	strb	r3, [r0, #1]
  req->wValue = SWAPBYTE(pbuff);
90010226:	884b      	ldrh	r3, [r1, #2]
90010228:	8043      	strh	r3, [r0, #2]
  req->wIndex = SWAPBYTE(pbuff);
9001022a:	888b      	ldrh	r3, [r1, #4]
9001022c:	8083      	strh	r3, [r0, #4]
  req->wLength = SWAPBYTE(pbuff);
9001022e:	88cb      	ldrh	r3, [r1, #6]
90010230:	80c3      	strh	r3, [r0, #6]
}
90010232:	4770      	bx	lr

90010234 <USBD_CtlError>:
{
90010234:	b510      	push	{r4, lr}
90010236:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
90010238:	2180      	movs	r1, #128	@ 0x80
9001023a:	f7f1 fe8b 	bl	90001f54 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
9001023e:	2100      	movs	r1, #0
90010240:	4620      	mov	r0, r4
}
90010242:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
90010246:	f7f1 be85 	b.w	90001f54 <USBD_LL_StallEP>

9001024a <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
9001024a:	b570      	push	{r4, r5, r6, lr}
9001024c:	460d      	mov	r5, r1
9001024e:	4616      	mov	r6, r2
  uint8_t idx = 0U;
  uint8_t *pdesc;

  if (desc == NULL)
90010250:	4604      	mov	r4, r0
90010252:	b198      	cbz	r0, 9001027c <USBD_GetString+0x32>
static uint8_t USBD_GetLen(uint8_t *buf)
{
  uint8_t  len = 0U;
  uint8_t *pbuff = buf;

  while (*pbuff != (uint8_t)'\0')
90010254:	f7ef ffe6 	bl	90000224 <strlen>
  {
    len++;
    pbuff++;
  }

  return len;
90010258:	3c01      	subs	r4, #1
  *len = MIN(USBD_MAX_STR_DESC_SIZ, ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U);
9001025a:	b2c0      	uxtb	r0, r0
    unicode[idx] = 0U;
9001025c:	2100      	movs	r1, #0
  *len = MIN(USBD_MAX_STR_DESC_SIZ, ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U);
9001025e:	3001      	adds	r0, #1
90010260:	0043      	lsls	r3, r0, #1
90010262:	2880      	cmp	r0, #128	@ 0x80
90010264:	bf8c      	ite	hi
90010266:	f44f 7380 	movhi.w	r3, #256	@ 0x100
9001026a:	b29b      	uxthls	r3, r3
9001026c:	8033      	strh	r3, [r6, #0]
  unicode[idx] = *(uint8_t *)len;
9001026e:	702b      	strb	r3, [r5, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
90010270:	2303      	movs	r3, #3
90010272:	706b      	strb	r3, [r5, #1]
  idx++;
90010274:	2302      	movs	r3, #2
  while (*pdesc != (uint8_t)'\0')
90010276:	f814 2f01 	ldrb.w	r2, [r4, #1]!
9001027a:	b902      	cbnz	r2, 9001027e <USBD_GetString+0x34>
}
9001027c:	bd70      	pop	{r4, r5, r6, pc}
    unicode[idx] = *pdesc;
9001027e:	54ea      	strb	r2, [r5, r3]
    idx++;
90010280:	1c5a      	adds	r2, r3, #1
    idx++;
90010282:	3302      	adds	r3, #2
    unicode[idx] = 0U;
90010284:	b2d2      	uxtb	r2, r2
    idx++;
90010286:	b2db      	uxtb	r3, r3
    unicode[idx] = 0U;
90010288:	54a9      	strb	r1, [r5, r2]
    idx++;
9001028a:	e7f4      	b.n	90010276 <USBD_GetString+0x2c>

9001028c <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
9001028c:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
9001028e:	2202      	movs	r2, #2
{
90010290:	b510      	push	{r4, lr}
  pdev->ep0_state = USBD_EP0_DATA_IN;
90010292:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
#else
  pdev->ep_in[0].rem_length = len;
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
90010296:	460a      	mov	r2, r1
90010298:	2100      	movs	r1, #0
  pdev->ep_in[0].rem_length = len;
9001029a:	e9c0 3306 	strd	r3, r3, [r0, #24]
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
9001029e:	f7f1 fe80 	bl	90001fa2 <USBD_LL_Transmit>

  return USBD_OK;
}
900102a2:	2000      	movs	r0, #0
900102a4:	bd10      	pop	{r4, pc}

900102a6 <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
900102a6:	b508      	push	{r3, lr}
900102a8:	4613      	mov	r3, r2
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
900102aa:	460a      	mov	r2, r1
900102ac:	2100      	movs	r1, #0
900102ae:	f7f1 fe78 	bl	90001fa2 <USBD_LL_Transmit>

  return USBD_OK;
}
900102b2:	2000      	movs	r0, #0
900102b4:	bd08      	pop	{r3, pc}

900102b6 <USBD_CtlPrepareRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlPrepareRx(USBD_HandleTypeDef *pdev,
                                     uint8_t *pbuf, uint32_t len)
{
900102b6:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_OUT;
900102b8:	2203      	movs	r2, #3
{
900102ba:	b510      	push	{r4, lr}
  pdev->ep0_state = USBD_EP0_DATA_OUT;
900102bc:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
#else
  pdev->ep_out[0].rem_length = len;
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
900102c0:	460a      	mov	r2, r1
900102c2:	2100      	movs	r1, #0
  pdev->ep_out[0].rem_length = len;
900102c4:	e9c0 3356 	strd	r3, r3, [r0, #344]	@ 0x158
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
900102c8:	f7f1 fe78 	bl	90001fbc <USBD_LL_PrepareReceive>

  return USBD_OK;
}
900102cc:	2000      	movs	r0, #0
900102ce:	bd10      	pop	{r4, pc}

900102d0 <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
900102d0:	b508      	push	{r3, lr}
900102d2:	4613      	mov	r3, r2
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
900102d4:	460a      	mov	r2, r1
900102d6:	2100      	movs	r1, #0
900102d8:	f7f1 fe70 	bl	90001fbc <USBD_LL_PrepareReceive>

  return USBD_OK;
}
900102dc:	2000      	movs	r0, #0
900102de:	bd08      	pop	{r3, pc}

900102e0 <USBD_CtlSendStatus>:
  *         send zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
900102e0:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
900102e2:	2204      	movs	r2, #4

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
900102e4:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_IN;
900102e6:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
900102ea:	4619      	mov	r1, r3
900102ec:	461a      	mov	r2, r3
900102ee:	f7f1 fe58 	bl	90001fa2 <USBD_LL_Transmit>

  return USBD_OK;
}
900102f2:	2000      	movs	r0, #0
900102f4:	bd08      	pop	{r3, pc}

900102f6 <USBD_CtlReceiveStatus>:
  *         receive zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
900102f6:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
900102f8:	2205      	movs	r2, #5

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
900102fa:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
900102fc:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
90010300:	4619      	mov	r1, r3
90010302:	461a      	mov	r2, r3
90010304:	f7f1 fe5a 	bl	90001fbc <USBD_LL_PrepareReceive>

  return USBD_OK;
}
90010308:	2000      	movs	r0, #0
9001030a:	bd08      	pop	{r3, pc}

9001030c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
9001030c:	8880      	ldrh	r0, [r0, #4]
9001030e:	4770      	bx	lr

90010310 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
90010310:	b570      	push	{r4, r5, r6, lr}
90010312:	6803      	ldr	r3, [r0, #0]
90010314:	460c      	mov	r4, r1
90010316:	2100      	movs	r1, #0
90010318:	4605      	mov	r5, r0
9001031a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001031c:	4798      	blx	r3
9001031e:	4606      	mov	r6, r0
90010320:	682b      	ldr	r3, [r5, #0]
90010322:	4628      	mov	r0, r5
90010324:	1ba4      	subs	r4, r4, r6
90010326:	6a1b      	ldr	r3, [r3, #32]
90010328:	b2a4      	uxth	r4, r4
9001032a:	4798      	blx	r3
9001032c:	fbb4 f0f0 	udiv	r0, r4, r0
90010330:	bd70      	pop	{r4, r5, r6, pc}

90010332 <_ZN8touchgfx17AbstractPartition5clearEv>:
90010332:	2300      	movs	r3, #0
90010334:	8083      	strh	r3, [r0, #4]
90010336:	4770      	bx	lr

90010338 <_ZN8touchgfx17AbstractPartition8allocateEt>:
90010338:	b510      	push	{r4, lr}
9001033a:	6803      	ldr	r3, [r0, #0]
9001033c:	4604      	mov	r4, r0
9001033e:	8881      	ldrh	r1, [r0, #4]
90010340:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90010342:	4798      	blx	r3
90010344:	88a3      	ldrh	r3, [r4, #4]
90010346:	3301      	adds	r3, #1
90010348:	80a3      	strh	r3, [r4, #4]
9001034a:	bd10      	pop	{r4, pc}

9001034c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
9001034c:	6803      	ldr	r3, [r0, #0]
9001034e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90010350:	4718      	bx	r3

90010352 <_ZN8touchgfx17AbstractPartitionD1Ev>:
90010352:	4770      	bx	lr

90010354 <_ZN8touchgfx17AbstractPartitionC1Ev>:
90010354:	4a02      	ldr	r2, [pc, #8]	@ (90010360 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
90010356:	6002      	str	r2, [r0, #0]
90010358:	2200      	movs	r2, #0
9001035a:	8082      	strh	r2, [r0, #4]
9001035c:	4770      	bx	lr
9001035e:	bf00      	nop
90010360:	900357c8 	.word	0x900357c8

90010364 <_ZN8touchgfx9Container13getFirstChildEv>:
90010364:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90010366:	4770      	bx	lr

90010368 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90010368:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001036a:	2000      	movs	r0, #0
9001036c:	b12b      	cbz	r3, 9001037a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9001036e:	b920      	cbnz	r0, 9001037a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90010370:	1a5a      	subs	r2, r3, r1
90010372:	699b      	ldr	r3, [r3, #24]
90010374:	4250      	negs	r0, r2
90010376:	4150      	adcs	r0, r2
90010378:	e7f8      	b.n	9001036c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
9001037a:	4770      	bx	lr

9001037c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
9001037c:	2300      	movs	r3, #0
9001037e:	6148      	str	r0, [r1, #20]
90010380:	618b      	str	r3, [r1, #24]
90010382:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010384:	b913      	cbnz	r3, 9001038c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90010386:	6281      	str	r1, [r0, #40]	@ 0x28
90010388:	4770      	bx	lr
9001038a:	4613      	mov	r3, r2
9001038c:	699a      	ldr	r2, [r3, #24]
9001038e:	2a00      	cmp	r2, #0
90010390:	d1fb      	bne.n	9001038a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
90010392:	6199      	str	r1, [r3, #24]
90010394:	4770      	bx	lr

90010396 <_ZN8touchgfx9Container9removeAllEv>:
90010396:	2200      	movs	r2, #0
90010398:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001039a:	b123      	cbz	r3, 900103a6 <_ZN8touchgfx9Container9removeAllEv+0x10>
9001039c:	6999      	ldr	r1, [r3, #24]
9001039e:	6281      	str	r1, [r0, #40]	@ 0x28
900103a0:	e9c3 2205 	strd	r2, r2, [r3, #20]
900103a4:	e7f8      	b.n	90010398 <_ZN8touchgfx9Container9removeAllEv+0x2>
900103a6:	4770      	bx	lr

900103a8 <_ZN8touchgfx9Container6unlinkEv>:
900103a8:	2300      	movs	r3, #0
900103aa:	6283      	str	r3, [r0, #40]	@ 0x28
900103ac:	4770      	bx	lr

900103ae <_ZNK8touchgfx9Container12getSolidRectEv>:
900103ae:	2200      	movs	r2, #0
900103b0:	8002      	strh	r2, [r0, #0]
900103b2:	8042      	strh	r2, [r0, #2]
900103b4:	8082      	strh	r2, [r0, #4]
900103b6:	80c2      	strh	r2, [r0, #6]
900103b8:	4770      	bx	lr

900103ba <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
900103ba:	b570      	push	{r4, r5, r6, lr}
900103bc:	460d      	mov	r5, r1
900103be:	4616      	mov	r6, r2
900103c0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900103c2:	b13c      	cbz	r4, 900103d4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
900103c4:	6823      	ldr	r3, [r4, #0]
900103c6:	4620      	mov	r0, r4
900103c8:	4632      	mov	r2, r6
900103ca:	4629      	mov	r1, r5
900103cc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900103ce:	4798      	blx	r3
900103d0:	69a4      	ldr	r4, [r4, #24]
900103d2:	e7f6      	b.n	900103c2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
900103d4:	bd70      	pop	{r4, r5, r6, pc}

900103d6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
900103d6:	b538      	push	{r3, r4, r5, lr}
900103d8:	460d      	mov	r5, r1
900103da:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900103dc:	b134      	cbz	r4, 900103ec <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
900103de:	682b      	ldr	r3, [r5, #0]
900103e0:	4621      	mov	r1, r4
900103e2:	4628      	mov	r0, r5
900103e4:	689b      	ldr	r3, [r3, #8]
900103e6:	4798      	blx	r3
900103e8:	69a4      	ldr	r4, [r4, #24]
900103ea:	e7f7      	b.n	900103dc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
900103ec:	bd38      	pop	{r3, r4, r5, pc}

900103ee <_ZN8touchgfx9ContainerD1Ev>:
900103ee:	4770      	bx	lr

900103f0 <_ZN8touchgfx9ContainerD0Ev>:
900103f0:	b510      	push	{r4, lr}
900103f2:	4604      	mov	r4, r0
900103f4:	212c      	movs	r1, #44	@ 0x2c
900103f6:	f017 f893 	bl	90027520 <_ZdlPvj>
900103fa:	4620      	mov	r0, r4
900103fc:	bd10      	pop	{r4, pc}

900103fe <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
900103fe:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010400:	b19b      	cbz	r3, 9001042a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90010402:	428b      	cmp	r3, r1
90010404:	d109      	bne.n	9001041a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
90010406:	699a      	ldr	r2, [r3, #24]
90010408:	2100      	movs	r1, #0
9001040a:	6159      	str	r1, [r3, #20]
9001040c:	6282      	str	r2, [r0, #40]	@ 0x28
9001040e:	b902      	cbnz	r2, 90010412 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
90010410:	4770      	bx	lr
90010412:	6199      	str	r1, [r3, #24]
90010414:	4770      	bx	lr
90010416:	4613      	mov	r3, r2
90010418:	b13a      	cbz	r2, 9001042a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9001041a:	699a      	ldr	r2, [r3, #24]
9001041c:	428a      	cmp	r2, r1
9001041e:	d1fa      	bne.n	90010416 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
90010420:	698a      	ldr	r2, [r1, #24]
90010422:	619a      	str	r2, [r3, #24]
90010424:	2300      	movs	r3, #0
90010426:	e9c1 3305 	strd	r3, r3, [r1, #20]
9001042a:	4770      	bx	lr

9001042c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
9001042c:	b410      	push	{r4}
9001042e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010430:	4604      	mov	r4, r0
90010432:	b92b      	cbnz	r3, 90010440 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
90010434:	6803      	ldr	r3, [r0, #0]
90010436:	4611      	mov	r1, r2
90010438:	f85d 4b04 	ldr.w	r4, [sp], #4
9001043c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9001043e:	4718      	bx	r3
90010440:	b941      	cbnz	r1, 90010454 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
90010442:	6193      	str	r3, [r2, #24]
90010444:	6282      	str	r2, [r0, #40]	@ 0x28
90010446:	6154      	str	r4, [r2, #20]
90010448:	f85d 4b04 	ldr.w	r4, [sp], #4
9001044c:	4770      	bx	lr
9001044e:	4603      	mov	r3, r0
90010450:	2800      	cmp	r0, #0
90010452:	d0f9      	beq.n	90010448 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90010454:	4299      	cmp	r1, r3
90010456:	6998      	ldr	r0, [r3, #24]
90010458:	d1f9      	bne.n	9001044e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
9001045a:	6190      	str	r0, [r2, #24]
9001045c:	618a      	str	r2, [r1, #24]
9001045e:	e7f2      	b.n	90010446 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90010460 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90010460:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010464:	461f      	mov	r7, r3
90010466:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
9001046a:	460d      	mov	r5, r1
9001046c:	4616      	mov	r6, r2
9001046e:	b103      	cbz	r3, 90010472 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90010470:	6038      	str	r0, [r7, #0]
90010472:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010474:	b314      	cbz	r4, 900104bc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90010476:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9001047a:	b1eb      	cbz	r3, 900104b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9001047c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90010480:	428d      	cmp	r5, r1
90010482:	db19      	blt.n	900104b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010484:	b289      	uxth	r1, r1
90010486:	8923      	ldrh	r3, [r4, #8]
90010488:	440b      	add	r3, r1
9001048a:	b21b      	sxth	r3, r3
9001048c:	429d      	cmp	r5, r3
9001048e:	da13      	bge.n	900104b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010490:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90010494:	4296      	cmp	r6, r2
90010496:	db0f      	blt.n	900104b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010498:	b292      	uxth	r2, r2
9001049a:	8963      	ldrh	r3, [r4, #10]
9001049c:	4413      	add	r3, r2
9001049e:	b21b      	sxth	r3, r3
900104a0:	429e      	cmp	r6, r3
900104a2:	da09      	bge.n	900104b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
900104a4:	6823      	ldr	r3, [r4, #0]
900104a6:	1ab2      	subs	r2, r6, r2
900104a8:	1a69      	subs	r1, r5, r1
900104aa:	4620      	mov	r0, r4
900104ac:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
900104b0:	b212      	sxth	r2, r2
900104b2:	463b      	mov	r3, r7
900104b4:	b209      	sxth	r1, r1
900104b6:	47c0      	blx	r8
900104b8:	69a4      	ldr	r4, [r4, #24]
900104ba:	e7db      	b.n	90010474 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
900104bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900104c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
900104c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900104c4:	4c6d      	ldr	r4, [pc, #436]	@ (9001067c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
900104c6:	b0a1      	sub	sp, #132	@ 0x84
900104c8:	4606      	mov	r6, r0
900104ca:	6824      	ldr	r4, [r4, #0]
900104cc:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
900104ce:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
900104d2:	2400      	movs	r4, #0
900104d4:	9303      	str	r3, [sp, #12]
900104d6:	802c      	strh	r4, [r5, #0]
900104d8:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
900104da:	802c      	strh	r4, [r5, #0]
900104dc:	601c      	str	r4, [r3, #0]
900104de:	e9cd 1201 	strd	r1, r2, [sp, #4]
900104e2:	f7ff ffbd 	bl	90010460 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900104e6:	f1b9 0f03 	cmp.w	r9, #3
900104ea:	f340 80c1 	ble.w	90010670 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
900104ee:	4631      	mov	r1, r6
900104f0:	a80c      	add	r0, sp, #48	@ 0x30
900104f2:	f006 f821 	bl	90016538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900104f6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
900104fa:	9306      	str	r3, [sp, #24]
900104fc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90010500:	9307      	str	r3, [sp, #28]
90010502:	9b03      	ldr	r3, [sp, #12]
90010504:	f8d3 a000 	ldr.w	sl, [r3]
90010508:	f1ba 0f00 	cmp.w	sl, #0
9001050c:	f000 80b3 	beq.w	90010676 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90010510:	4651      	mov	r1, sl
90010512:	a810      	add	r0, sp, #64	@ 0x40
90010514:	f006 f810 	bl	90016538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90010518:	2002      	movs	r0, #2
9001051a:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
9001051e:	9b01      	ldr	r3, [sp, #4]
90010520:	9a06      	ldr	r2, [sp, #24]
90010522:	fb91 f1f0 	sdiv	r1, r1, r0
90010526:	189d      	adds	r5, r3, r2
90010528:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
9001052c:	9a07      	ldr	r2, [sp, #28]
9001052e:	4419      	add	r1, r3
90010530:	9b02      	ldr	r3, [sp, #8]
90010532:	4413      	add	r3, r2
90010534:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
90010538:	1a6d      	subs	r5, r5, r1
9001053a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
9001053e:	fb92 f2f0 	sdiv	r2, r2, r0
90010542:	440a      	add	r2, r1
90010544:	1a9b      	subs	r3, r3, r2
90010546:	435b      	muls	r3, r3
90010548:	fb05 3505 	mla	r5, r5, r5, r3
9001054c:	4f4c      	ldr	r7, [pc, #304]	@ (90010680 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
9001054e:	ac10      	add	r4, sp, #64	@ 0x40
90010550:	f1b9 0f0c 	cmp.w	r9, #12
90010554:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010556:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010558:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001055a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9001055c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001055e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010560:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90010564:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90010568:	f04f 0303 	mov.w	r3, #3
9001056c:	bfd8      	it	le
9001056e:	f109 32ff 	addle.w	r2, r9, #4294967295
90010572:	f04f 0400 	mov.w	r4, #0
90010576:	f8cd 9000 	str.w	r9, [sp]
9001057a:	bfcc      	ite	gt
9001057c:	4698      	movgt	r8, r3
9001057e:	fb92 f8f3 	sdivle	r8, r2, r3
90010582:	1c63      	adds	r3, r4, #1
90010584:	aa10      	add	r2, sp, #64	@ 0x40
90010586:	f004 0401 	and.w	r4, r4, #1
9001058a:	f04f 0b00 	mov.w	fp, #0
9001058e:	9308      	str	r3, [sp, #32]
90010590:	9b00      	ldr	r3, [sp, #0]
90010592:	eb02 1444 	add.w	r4, r2, r4, lsl #5
90010596:	fb93 f3f8 	sdiv	r3, r3, r8
9001059a:	3404      	adds	r4, #4
9001059c:	b29b      	uxth	r3, r3
9001059e:	9304      	str	r3, [sp, #16]
900105a0:	9a04      	ldr	r2, [sp, #16]
900105a2:	f854 3c04 	ldr.w	r3, [r4, #-4]
900105a6:	fb13 f302 	smulbb	r3, r3, r2
900105aa:	9a01      	ldr	r2, [sp, #4]
900105ac:	b29b      	uxth	r3, r3
900105ae:	1899      	adds	r1, r3, r2
900105b0:	9305      	str	r3, [sp, #20]
900105b2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900105b6:	b209      	sxth	r1, r1
900105b8:	4299      	cmp	r1, r3
900105ba:	db4d      	blt.n	90010658 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900105bc:	8932      	ldrh	r2, [r6, #8]
900105be:	4413      	add	r3, r2
900105c0:	b21b      	sxth	r3, r3
900105c2:	4299      	cmp	r1, r3
900105c4:	da48      	bge.n	90010658 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900105c6:	9b04      	ldr	r3, [sp, #16]
900105c8:	6827      	ldr	r7, [r4, #0]
900105ca:	fb17 f703 	smulbb	r7, r7, r3
900105ce:	9b02      	ldr	r3, [sp, #8]
900105d0:	b2bf      	uxth	r7, r7
900105d2:	18fa      	adds	r2, r7, r3
900105d4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900105d8:	b212      	sxth	r2, r2
900105da:	429a      	cmp	r2, r3
900105dc:	db3c      	blt.n	90010658 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900105de:	8970      	ldrh	r0, [r6, #10]
900105e0:	4403      	add	r3, r0
900105e2:	b21b      	sxth	r3, r3
900105e4:	429a      	cmp	r2, r3
900105e6:	da37      	bge.n	90010658 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900105e8:	2300      	movs	r3, #0
900105ea:	4630      	mov	r0, r6
900105ec:	930b      	str	r3, [sp, #44]	@ 0x2c
900105ee:	ab0b      	add	r3, sp, #44	@ 0x2c
900105f0:	f7ff ff36 	bl	90010460 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900105f4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900105f6:	b37a      	cbz	r2, 90010658 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900105f8:	4552      	cmp	r2, sl
900105fa:	d02d      	beq.n	90010658 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900105fc:	4611      	mov	r1, r2
900105fe:	a80e      	add	r0, sp, #56	@ 0x38
90010600:	9209      	str	r2, [sp, #36]	@ 0x24
90010602:	f005 ff99 	bl	90016538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90010606:	f04f 0e02 	mov.w	lr, #2
9001060a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
9001060e:	9a06      	ldr	r2, [sp, #24]
90010610:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
90010614:	9b01      	ldr	r3, [sp, #4]
90010616:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
9001061a:	4413      	add	r3, r2
9001061c:	9a07      	ldr	r2, [sp, #28]
9001061e:	fb91 f1fe 	sdiv	r1, r1, lr
90010622:	fb9c fcfe 	sdiv	ip, ip, lr
90010626:	4401      	add	r1, r0
90010628:	1a58      	subs	r0, r3, r1
9001062a:	9b02      	ldr	r3, [sp, #8]
9001062c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
90010630:	4413      	add	r3, r2
90010632:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90010634:	448c      	add	ip, r1
90010636:	eba3 030c 	sub.w	r3, r3, ip
9001063a:	435b      	muls	r3, r3
9001063c:	fb00 3300 	mla	r3, r0, r0, r3
90010640:	42ab      	cmp	r3, r5
90010642:	d208      	bcs.n	90010656 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90010644:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90010646:	461d      	mov	r5, r3
90010648:	9803      	ldr	r0, [sp, #12]
9001064a:	6001      	str	r1, [r0, #0]
9001064c:	992a      	ldr	r1, [sp, #168]	@ 0xa8
9001064e:	9805      	ldr	r0, [sp, #20]
90010650:	8008      	strh	r0, [r1, #0]
90010652:	992b      	ldr	r1, [sp, #172]	@ 0xac
90010654:	800f      	strh	r7, [r1, #0]
90010656:	4692      	mov	sl, r2
90010658:	f10b 0b01 	add.w	fp, fp, #1
9001065c:	3408      	adds	r4, #8
9001065e:	f1bb 0f04 	cmp.w	fp, #4
90010662:	d19d      	bne.n	900105a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90010664:	9b00      	ldr	r3, [sp, #0]
90010666:	9c08      	ldr	r4, [sp, #32]
90010668:	444b      	add	r3, r9
9001066a:	4544      	cmp	r4, r8
9001066c:	9300      	str	r3, [sp, #0]
9001066e:	d188      	bne.n	90010582 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90010670:	b021      	add	sp, #132	@ 0x84
90010672:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010676:	f04f 35ff 	mov.w	r5, #4294967295
9001067a:	e767      	b.n	9001054c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
9001067c:	2001aa40 	.word	0x2001aa40
90010680:	90029500 	.word	0x90029500

90010684 <_ZN8touchgfx4RectaNERKS0_>:
90010684:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010688:	f9b1 7000 	ldrsh.w	r7, [r1]
9001068c:	888c      	ldrh	r4, [r1, #4]
9001068e:	f9b0 9000 	ldrsh.w	r9, [r0]
90010692:	443c      	add	r4, r7
90010694:	b2a4      	uxth	r4, r4
90010696:	fa0f f884 	sxth.w	r8, r4
9001069a:	45c1      	cmp	r9, r8
9001069c:	da2f      	bge.n	900106fe <_ZN8touchgfx4RectaNERKS0_+0x7a>
9001069e:	8882      	ldrh	r2, [r0, #4]
900106a0:	444a      	add	r2, r9
900106a2:	b292      	uxth	r2, r2
900106a4:	fa0f fe82 	sxth.w	lr, r2
900106a8:	4577      	cmp	r7, lr
900106aa:	da28      	bge.n	900106fe <_ZN8touchgfx4RectaNERKS0_+0x7a>
900106ac:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
900106b0:	88cb      	ldrh	r3, [r1, #6]
900106b2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
900106b6:	442b      	add	r3, r5
900106b8:	b21b      	sxth	r3, r3
900106ba:	429e      	cmp	r6, r3
900106bc:	da1f      	bge.n	900106fe <_ZN8touchgfx4RectaNERKS0_+0x7a>
900106be:	88c3      	ldrh	r3, [r0, #6]
900106c0:	4433      	add	r3, r6
900106c2:	b29b      	uxth	r3, r3
900106c4:	fa0f fc83 	sxth.w	ip, r3
900106c8:	4565      	cmp	r5, ip
900106ca:	da18      	bge.n	900106fe <_ZN8touchgfx4RectaNERKS0_+0x7a>
900106cc:	454f      	cmp	r7, r9
900106ce:	bfb8      	it	lt
900106d0:	464f      	movlt	r7, r9
900106d2:	42b5      	cmp	r5, r6
900106d4:	bfb8      	it	lt
900106d6:	4635      	movlt	r5, r6
900106d8:	45f0      	cmp	r8, lr
900106da:	bfd8      	it	le
900106dc:	4622      	movle	r2, r4
900106de:	1bd2      	subs	r2, r2, r7
900106e0:	8082      	strh	r2, [r0, #4]
900106e2:	884a      	ldrh	r2, [r1, #2]
900106e4:	88c9      	ldrh	r1, [r1, #6]
900106e6:	8007      	strh	r7, [r0, #0]
900106e8:	440a      	add	r2, r1
900106ea:	8045      	strh	r5, [r0, #2]
900106ec:	b292      	uxth	r2, r2
900106ee:	b211      	sxth	r1, r2
900106f0:	458c      	cmp	ip, r1
900106f2:	bfa8      	it	ge
900106f4:	4613      	movge	r3, r2
900106f6:	1b5b      	subs	r3, r3, r5
900106f8:	80c3      	strh	r3, [r0, #6]
900106fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900106fe:	2300      	movs	r3, #0
90010700:	8003      	strh	r3, [r0, #0]
90010702:	8043      	strh	r3, [r0, #2]
90010704:	8083      	strh	r3, [r0, #4]
90010706:	80c3      	strh	r3, [r0, #6]
90010708:	e7f7      	b.n	900106fa <_ZN8touchgfx4RectaNERKS0_+0x76>

9001070a <_ZNK8touchgfx4Rect7isEmptyEv>:
9001070a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001070e:	2b00      	cmp	r3, #0
90010710:	dd06      	ble.n	90010720 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90010712:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
90010716:	2800      	cmp	r0, #0
90010718:	bfcc      	ite	gt
9001071a:	2000      	movgt	r0, #0
9001071c:	2001      	movle	r0, #1
9001071e:	4770      	bx	lr
90010720:	2001      	movs	r0, #1
90010722:	4770      	bx	lr

90010724 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90010724:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010728:	2300      	movs	r3, #0
9001072a:	4604      	mov	r4, r0
9001072c:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
9001072e:	8003      	strh	r3, [r0, #0]
90010730:	8043      	strh	r3, [r0, #2]
90010732:	8083      	strh	r3, [r0, #4]
90010734:	80c3      	strh	r3, [r0, #6]
90010736:	2d00      	cmp	r5, #0
90010738:	d040      	beq.n	900107bc <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
9001073a:	1d28      	adds	r0, r5, #4
9001073c:	f7ff ffe5 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
90010740:	b988      	cbnz	r0, 90010766 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90010742:	4620      	mov	r0, r4
90010744:	f7ff ffe1 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
90010748:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
9001074c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90010750:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90010754:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
90010758:	b138      	cbz	r0, 9001076a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
9001075a:	8022      	strh	r2, [r4, #0]
9001075c:	8063      	strh	r3, [r4, #2]
9001075e:	f8a4 e004 	strh.w	lr, [r4, #4]
90010762:	f8a4 c006 	strh.w	ip, [r4, #6]
90010766:	69ad      	ldr	r5, [r5, #24]
90010768:	e7e5      	b.n	90010736 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
9001076a:	f9b4 0000 	ldrsh.w	r0, [r4]
9001076e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90010772:	4290      	cmp	r0, r2
90010774:	4607      	mov	r7, r0
90010776:	f8b4 8004 	ldrh.w	r8, [r4, #4]
9001077a:	460e      	mov	r6, r1
9001077c:	bfa8      	it	ge
9001077e:	4617      	movge	r7, r2
90010780:	4299      	cmp	r1, r3
90010782:	4472      	add	r2, lr
90010784:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90010788:	bfa8      	it	ge
9001078a:	461e      	movge	r6, r3
9001078c:	4440      	add	r0, r8
9001078e:	4471      	add	r1, lr
90010790:	4463      	add	r3, ip
90010792:	b200      	sxth	r0, r0
90010794:	8027      	strh	r7, [r4, #0]
90010796:	b212      	sxth	r2, r2
90010798:	8066      	strh	r6, [r4, #2]
9001079a:	b209      	sxth	r1, r1
9001079c:	b21b      	sxth	r3, r3
9001079e:	4290      	cmp	r0, r2
900107a0:	bfac      	ite	ge
900107a2:	ebc7 0200 	rsbge	r2, r7, r0
900107a6:	ebc7 0202 	rsblt	r2, r7, r2
900107aa:	4299      	cmp	r1, r3
900107ac:	bfac      	ite	ge
900107ae:	ebc6 0301 	rsbge	r3, r6, r1
900107b2:	ebc6 0303 	rsblt	r3, r6, r3
900107b6:	80a2      	strh	r2, [r4, #4]
900107b8:	80e3      	strh	r3, [r4, #6]
900107ba:	e7d4      	b.n	90010766 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
900107bc:	4620      	mov	r0, r4
900107be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900107c2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
900107c2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900107c6:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900107ca:	b383      	cbz	r3, 9001082e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900107cc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900107ce:	b374      	cbz	r4, 9001082e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900107d0:	f9b1 5000 	ldrsh.w	r5, [r1]
900107d4:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
900107d8:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
900107dc:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
900107e0:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
900107e4:	b303      	cbz	r3, 90010828 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900107e6:	4668      	mov	r0, sp
900107e8:	1d21      	adds	r1, r4, #4
900107ea:	f8ad 5000 	strh.w	r5, [sp]
900107ee:	f8ad 6002 	strh.w	r6, [sp, #2]
900107f2:	f8ad 7004 	strh.w	r7, [sp, #4]
900107f6:	f8ad 8006 	strh.w	r8, [sp, #6]
900107fa:	f7ff ff43 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
900107fe:	4668      	mov	r0, sp
90010800:	f7ff ff83 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
90010804:	b980      	cbnz	r0, 90010828 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90010806:	f8bd 3000 	ldrh.w	r3, [sp]
9001080a:	4669      	mov	r1, sp
9001080c:	88a2      	ldrh	r2, [r4, #4]
9001080e:	4620      	mov	r0, r4
90010810:	1a9b      	subs	r3, r3, r2
90010812:	88e2      	ldrh	r2, [r4, #6]
90010814:	f8ad 3000 	strh.w	r3, [sp]
90010818:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001081c:	1a9b      	subs	r3, r3, r2
9001081e:	f8ad 3002 	strh.w	r3, [sp, #2]
90010822:	6823      	ldr	r3, [r4, #0]
90010824:	689b      	ldr	r3, [r3, #8]
90010826:	4798      	blx	r3
90010828:	69a4      	ldr	r4, [r4, #24]
9001082a:	2c00      	cmp	r4, #0
9001082c:	d1d8      	bne.n	900107e0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
9001082e:	b002      	add	sp, #8
90010830:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010834 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90010834:	b573      	push	{r0, r1, r4, r5, r6, lr}
90010836:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9001083a:	460d      	mov	r5, r1
9001083c:	4616      	mov	r6, r2
9001083e:	b323      	cbz	r3, 9001088a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010840:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010842:	b314      	cbz	r4, 9001088a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010844:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90010848:	b1eb      	cbz	r3, 90010886 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001084a:	6828      	ldr	r0, [r5, #0]
9001084c:	466b      	mov	r3, sp
9001084e:	6869      	ldr	r1, [r5, #4]
90010850:	c303      	stmia	r3!, {r0, r1}
90010852:	4668      	mov	r0, sp
90010854:	1d21      	adds	r1, r4, #4
90010856:	f7ff ff15 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
9001085a:	4668      	mov	r0, sp
9001085c:	f7ff ff55 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
90010860:	b988      	cbnz	r0, 90010886 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90010862:	f8bd 3000 	ldrh.w	r3, [sp]
90010866:	4669      	mov	r1, sp
90010868:	88a2      	ldrh	r2, [r4, #4]
9001086a:	4620      	mov	r0, r4
9001086c:	1a9b      	subs	r3, r3, r2
9001086e:	88e2      	ldrh	r2, [r4, #6]
90010870:	f8ad 3000 	strh.w	r3, [sp]
90010874:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90010878:	1a9b      	subs	r3, r3, r2
9001087a:	4632      	mov	r2, r6
9001087c:	f8ad 3002 	strh.w	r3, [sp, #2]
90010880:	6823      	ldr	r3, [r4, #0]
90010882:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90010884:	4798      	blx	r3
90010886:	69a4      	ldr	r4, [r4, #24]
90010888:	e7db      	b.n	90010842 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
9001088a:	b002      	add	sp, #8
9001088c:	bd70      	pop	{r4, r5, r6, pc}

9001088e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
9001088e:	6803      	ldr	r3, [r0, #0]
90010890:	b513      	push	{r0, r1, r4, lr}
90010892:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
90010896:	2300      	movs	r3, #0
90010898:	e9cd 3300 	strd	r3, r3, [sp]
9001089c:	466b      	mov	r3, sp
9001089e:	47a0      	blx	r4
900108a0:	b002      	add	sp, #8
900108a2:	bd10      	pop	{r4, pc}

900108a4 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
900108a4:	2301      	movs	r3, #1
900108a6:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
900108aa:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900108ae:	4770      	bx	lr

900108b0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
900108b0:	2301      	movs	r3, #1
900108b2:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
900108b6:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900108ba:	4770      	bx	lr

900108bc <_ZN8touchgfx3HAL17allowDMATransfersEv>:
900108bc:	6843      	ldr	r3, [r0, #4]
900108be:	2201      	movs	r2, #1
900108c0:	725a      	strb	r2, [r3, #9]
900108c2:	6840      	ldr	r0, [r0, #4]
900108c4:	6803      	ldr	r3, [r0, #0]
900108c6:	691b      	ldr	r3, [r3, #16]
900108c8:	4718      	bx	r3

900108ca <_ZN8touchgfx3HAL8flushDMAEv>:
900108ca:	6840      	ldr	r0, [r0, #4]
900108cc:	6803      	ldr	r3, [r0, #0]
900108ce:	689b      	ldr	r3, [r3, #8]
900108d0:	4718      	bx	r3

900108d2 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
900108d2:	b530      	push	{r4, r5, lr}
900108d4:	b08b      	sub	sp, #44	@ 0x2c
900108d6:	6804      	ldr	r4, [r0, #0]
900108d8:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
900108dc:	9509      	str	r5, [sp, #36]	@ 0x24
900108de:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
900108e2:	9508      	str	r5, [sp, #32]
900108e4:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
900108e8:	9507      	str	r5, [sp, #28]
900108ea:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
900108ee:	9506      	str	r5, [sp, #24]
900108f0:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
900108f4:	9505      	str	r5, [sp, #20]
900108f6:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
900108fa:	9504      	str	r5, [sp, #16]
900108fc:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
90010900:	9503      	str	r5, [sp, #12]
90010902:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
90010906:	9502      	str	r5, [sp, #8]
90010908:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9001090c:	e9cd 3500 	strd	r3, r5, [sp]
90010910:	4613      	mov	r3, r2
90010912:	6c24      	ldr	r4, [r4, #64]	@ 0x40
90010914:	2200      	movs	r2, #0
90010916:	47a0      	blx	r4
90010918:	b00b      	add	sp, #44	@ 0x2c
9001091a:	bd30      	pop	{r4, r5, pc}

9001091c <_ZN8touchgfx3HAL10beginFrameEv>:
9001091c:	4b04      	ldr	r3, [pc, #16]	@ (90010930 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
9001091e:	781b      	ldrb	r3, [r3, #0]
90010920:	b123      	cbz	r3, 9001092c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90010922:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
90010926:	f080 0001 	eor.w	r0, r0, #1
9001092a:	4770      	bx	lr
9001092c:	2001      	movs	r0, #1
9001092e:	4770      	bx	lr
90010930:	2001aa3c 	.word	0x2001aa3c

90010934 <_ZN8touchgfx3HAL8endFrameEv>:
90010934:	b510      	push	{r4, lr}
90010936:	4604      	mov	r4, r0
90010938:	6840      	ldr	r0, [r0, #4]
9001093a:	6803      	ldr	r3, [r0, #0]
9001093c:	689b      	ldr	r3, [r3, #8]
9001093e:	4798      	blx	r3
90010940:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
90010944:	b113      	cbz	r3, 9001094c <_ZN8touchgfx3HAL8endFrameEv+0x18>
90010946:	2301      	movs	r3, #1
90010948:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
9001094c:	bd10      	pop	{r4, pc}

9001094e <_ZN8touchgfx3HAL10initializeEv>:
9001094e:	b510      	push	{r4, lr}
90010950:	4604      	mov	r4, r0
90010952:	f7f0 fa67 	bl	90000e24 <_ZN8touchgfx10OSWrappers10initializeEv>
90010956:	f7f0 f923 	bl	90000ba0 <_ZN8touchgfx4GPIO4initEv>
9001095a:	6860      	ldr	r0, [r4, #4]
9001095c:	6803      	ldr	r3, [r0, #0]
9001095e:	68db      	ldr	r3, [r3, #12]
90010960:	4798      	blx	r3
90010962:	68e0      	ldr	r0, [r4, #12]
90010964:	6803      	ldr	r3, [r0, #0]
90010966:	689b      	ldr	r3, [r3, #8]
90010968:	4798      	blx	r3
9001096a:	6823      	ldr	r3, [r4, #0]
9001096c:	4620      	mov	r0, r4
9001096e:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90010970:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90010974:	4718      	bx	r3
	...

90010978 <_ZN8touchgfx3HAL4tickEv>:
90010978:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001097a:	6803      	ldr	r3, [r0, #0]
9001097c:	4604      	mov	r4, r0
9001097e:	4d62      	ldr	r5, [pc, #392]	@ (90010b08 <_ZN8touchgfx3HAL4tickEv+0x190>)
90010980:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
90010984:	4798      	blx	r3
90010986:	2800      	cmp	r0, #0
90010988:	f000 809e 	beq.w	90010ac8 <_ZN8touchgfx3HAL4tickEv+0x150>
9001098c:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
90010990:	2b02      	cmp	r3, #2
90010992:	d002      	beq.n	9001099a <_ZN8touchgfx3HAL4tickEv+0x22>
90010994:	2001      	movs	r0, #1
90010996:	f7f0 f869 	bl	90000a6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
9001099a:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
9001099e:	2600      	movs	r6, #0
900109a0:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
900109a4:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
900109a8:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
900109ac:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
900109b0:	b133      	cbz	r3, 900109c0 <_ZN8touchgfx3HAL4tickEv+0x48>
900109b2:	6823      	ldr	r3, [r4, #0]
900109b4:	4620      	mov	r0, r4
900109b6:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
900109ba:	4798      	blx	r3
900109bc:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
900109c0:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
900109c4:	2601      	movs	r6, #1
900109c6:	6862      	ldr	r2, [r4, #4]
900109c8:	f083 0301 	eor.w	r3, r3, #1
900109cc:	702e      	strb	r6, [r5, #0]
900109ce:	7253      	strb	r3, [r2, #9]
900109d0:	f004 fb5e 	bl	90015090 <_ZN8touchgfx11Application11getInstanceEv>
900109d4:	6803      	ldr	r3, [r0, #0]
900109d6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900109d8:	4798      	blx	r3
900109da:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
900109de:	b90b      	cbnz	r3, 900109e4 <_ZN8touchgfx3HAL4tickEv+0x6c>
900109e0:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
900109e4:	f004 fb54 	bl	90015090 <_ZN8touchgfx11Application11getInstanceEv>
900109e8:	6803      	ldr	r3, [r0, #0]
900109ea:	695b      	ldr	r3, [r3, #20]
900109ec:	4798      	blx	r3
900109ee:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
900109f0:	6803      	ldr	r3, [r0, #0]
900109f2:	691b      	ldr	r3, [r3, #16]
900109f4:	4798      	blx	r3
900109f6:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
900109fa:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
900109fe:	3b01      	subs	r3, #1
90010a00:	b2db      	uxtb	r3, r3
90010a02:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
90010a06:	b10a      	cbz	r2, 90010a0c <_ZN8touchgfx3HAL4tickEv+0x94>
90010a08:	2b00      	cmp	r3, #0
90010a0a:	d1eb      	bne.n	900109e4 <_ZN8touchgfx3HAL4tickEv+0x6c>
90010a0c:	4a3f      	ldr	r2, [pc, #252]	@ (90010b0c <_ZN8touchgfx3HAL4tickEv+0x194>)
90010a0e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
90010a12:	7813      	ldrb	r3, [r2, #0]
90010a14:	3301      	adds	r3, #1
90010a16:	b25b      	sxtb	r3, r3
90010a18:	4299      	cmp	r1, r3
90010a1a:	7013      	strb	r3, [r2, #0]
90010a1c:	dc10      	bgt.n	90010a40 <_ZN8touchgfx3HAL4tickEv+0xc8>
90010a1e:	2300      	movs	r3, #0
90010a20:	68e0      	ldr	r0, [r4, #12]
90010a22:	a902      	add	r1, sp, #8
90010a24:	7013      	strb	r3, [r2, #0]
90010a26:	aa03      	add	r2, sp, #12
90010a28:	6803      	ldr	r3, [r0, #0]
90010a2a:	68db      	ldr	r3, [r3, #12]
90010a2c:	4798      	blx	r3
90010a2e:	6823      	ldr	r3, [r4, #0]
90010a30:	2800      	cmp	r0, #0
90010a32:	d059      	beq.n	90010ae8 <_ZN8touchgfx3HAL4tickEv+0x170>
90010a34:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
90010a38:	4620      	mov	r0, r4
90010a3a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90010a3e:	4798      	blx	r3
90010a40:	2300      	movs	r3, #0
90010a42:	6960      	ldr	r0, [r4, #20]
90010a44:	f88d 3007 	strb.w	r3, [sp, #7]
90010a48:	b158      	cbz	r0, 90010a62 <_ZN8touchgfx3HAL4tickEv+0xea>
90010a4a:	6803      	ldr	r3, [r0, #0]
90010a4c:	f10d 0107 	add.w	r1, sp, #7
90010a50:	68db      	ldr	r3, [r3, #12]
90010a52:	4798      	blx	r3
90010a54:	b128      	cbz	r0, 90010a62 <_ZN8touchgfx3HAL4tickEv+0xea>
90010a56:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
90010a58:	f89d 1007 	ldrb.w	r1, [sp, #7]
90010a5c:	6803      	ldr	r3, [r0, #0]
90010a5e:	68db      	ldr	r3, [r3, #12]
90010a60:	4798      	blx	r3
90010a62:	f104 001c 	add.w	r0, r4, #28
90010a66:	f015 ff3f 	bl	900268e8 <_ZN8touchgfx8Gestures4tickEv>
90010a6a:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
90010a6e:	b30b      	cbz	r3, 90010ab4 <_ZN8touchgfx3HAL4tickEv+0x13c>
90010a70:	6920      	ldr	r0, [r4, #16]
90010a72:	6803      	ldr	r3, [r0, #0]
90010a74:	691b      	ldr	r3, [r3, #16]
90010a76:	4798      	blx	r3
90010a78:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90010a7a:	4606      	mov	r6, r0
90010a7c:	b903      	cbnz	r3, 90010a80 <_ZN8touchgfx3HAL4tickEv+0x108>
90010a7e:	6760      	str	r0, [r4, #116]	@ 0x74
90010a80:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90010a82:	4a23      	ldr	r2, [pc, #140]	@ (90010b10 <_ZN8touchgfx3HAL4tickEv+0x198>)
90010a84:	1af3      	subs	r3, r6, r3
90010a86:	4293      	cmp	r3, r2
90010a88:	d914      	bls.n	90010ab4 <_ZN8touchgfx3HAL4tickEv+0x13c>
90010a8a:	6920      	ldr	r0, [r4, #16]
90010a8c:	6803      	ldr	r3, [r0, #0]
90010a8e:	699b      	ldr	r3, [r3, #24]
90010a90:	4798      	blx	r3
90010a92:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90010a94:	2264      	movs	r2, #100	@ 0x64
90010a96:	1af3      	subs	r3, r6, r3
90010a98:	fbb3 f3f2 	udiv	r3, r3, r2
90010a9c:	fbb0 f0f3 	udiv	r0, r0, r3
90010aa0:	2800      	cmp	r0, #0
90010aa2:	dc26      	bgt.n	90010af2 <_ZN8touchgfx3HAL4tickEv+0x17a>
90010aa4:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
90010aa8:	6920      	ldr	r0, [r4, #16]
90010aaa:	2100      	movs	r1, #0
90010aac:	6803      	ldr	r3, [r0, #0]
90010aae:	69db      	ldr	r3, [r3, #28]
90010ab0:	4798      	blx	r3
90010ab2:	6766      	str	r6, [r4, #116]	@ 0x74
90010ab4:	6823      	ldr	r3, [r4, #0]
90010ab6:	4620      	mov	r0, r4
90010ab8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
90010abc:	4798      	blx	r3
90010abe:	f004 fae7 	bl	90015090 <_ZN8touchgfx11Application11getInstanceEv>
90010ac2:	6803      	ldr	r3, [r0, #0]
90010ac4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90010ac6:	4798      	blx	r3
90010ac8:	6823      	ldr	r3, [r4, #0]
90010aca:	4620      	mov	r0, r4
90010acc:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
90010ad0:	4798      	blx	r3
90010ad2:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
90010ad6:	2b02      	cmp	r3, #2
90010ad8:	d002      	beq.n	90010ae0 <_ZN8touchgfx3HAL4tickEv+0x168>
90010ada:	2001      	movs	r0, #1
90010adc:	f7ef fff6 	bl	90000acc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90010ae0:	2300      	movs	r3, #0
90010ae2:	702b      	strb	r3, [r5, #0]
90010ae4:	b004      	add	sp, #16
90010ae6:	bd70      	pop	{r4, r5, r6, pc}
90010ae8:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
90010aec:	4620      	mov	r0, r4
90010aee:	4798      	blx	r3
90010af0:	e7a6      	b.n	90010a40 <_ZN8touchgfx3HAL4tickEv+0xc8>
90010af2:	2863      	cmp	r0, #99	@ 0x63
90010af4:	bfcb      	itete	gt
90010af6:	2300      	movgt	r3, #0
90010af8:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
90010afc:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
90010b00:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
90010b04:	e7d0      	b.n	90010aa8 <_ZN8touchgfx3HAL4tickEv+0x130>
90010b06:	bf00      	nop
90010b08:	2001aa44 	.word	0x2001aa44
90010b0c:	2001aa45 	.word	0x2001aa45
90010b10:	05f5e100 	.word	0x05f5e100

90010b14 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90010b14:	b510      	push	{r4, lr}
90010b16:	4604      	mov	r4, r0
90010b18:	f7f0 f9b4 	bl	90000e84 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90010b1c:	2200      	movs	r2, #0
90010b1e:	6863      	ldr	r3, [r4, #4]
90010b20:	729a      	strb	r2, [r3, #10]
90010b22:	bd10      	pop	{r4, pc}

90010b24 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90010b24:	65c1      	str	r1, [r0, #92]	@ 0x5c
90010b26:	301c      	adds	r0, #28
90010b28:	f015 bedc 	b.w	900268e4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90010b2c <_ZN8touchgfx3HAL5touchEll>:
90010b2c:	b530      	push	{r4, r5, lr}
90010b2e:	b087      	sub	sp, #28
90010b30:	4604      	mov	r4, r0
90010b32:	a804      	add	r0, sp, #16
90010b34:	e9cd 1204 	strd	r1, r2, [sp, #16]
90010b38:	f004 f892 	bl	90014c60 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90010b3c:	9b04      	ldr	r3, [sp, #16]
90010b3e:	a906      	add	r1, sp, #24
90010b40:	a803      	add	r0, sp, #12
90010b42:	f8ad 300c 	strh.w	r3, [sp, #12]
90010b46:	9b05      	ldr	r3, [sp, #20]
90010b48:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90010b4c:	f004 f8da 	bl	90014d04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90010b50:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
90010b54:	f104 001c 	add.w	r0, r4, #28
90010b58:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90010b5c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90010b60:	b189      	cbz	r1, 90010b86 <_ZN8touchgfx3HAL5touchEll+0x5a>
90010b62:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
90010b66:	9300      	str	r3, [sp, #0]
90010b68:	4613      	mov	r3, r2
90010b6a:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
90010b6e:	462a      	mov	r2, r5
90010b70:	f015 fec8 	bl	90026904 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90010b74:	b128      	cbz	r0, 90010b82 <_ZN8touchgfx3HAL5touchEll+0x56>
90010b76:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90010b7a:	6623      	str	r3, [r4, #96]	@ 0x60
90010b7c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90010b80:	6663      	str	r3, [r4, #100]	@ 0x64
90010b82:	b007      	add	sp, #28
90010b84:	bd30      	pop	{r4, r5, pc}
90010b86:	f015 fefd 	bl	90026984 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90010b8a:	2301      	movs	r3, #1
90010b8c:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90010b90:	e7f1      	b.n	90010b76 <_ZN8touchgfx3HAL5touchEll+0x4a>

90010b92 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
90010b92:	b510      	push	{r4, lr}
90010b94:	2b00      	cmp	r3, #0
90010b96:	d046      	beq.n	90010c26 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010b98:	ea81 0002 	eor.w	r0, r1, r2
90010b9c:	07c4      	lsls	r4, r0, #31
90010b9e:	d508      	bpl.n	90010bb2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90010ba0:	440b      	add	r3, r1
90010ba2:	3a01      	subs	r2, #1
90010ba4:	428b      	cmp	r3, r1
90010ba6:	d93e      	bls.n	90010c26 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010ba8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90010bac:	f801 0b01 	strb.w	r0, [r1], #1
90010bb0:	e7f8      	b.n	90010ba4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
90010bb2:	07d0      	lsls	r0, r2, #31
90010bb4:	bf42      	ittt	mi
90010bb6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
90010bba:	f103 33ff 	addmi.w	r3, r3, #4294967295
90010bbe:	f801 0b01 	strbmi.w	r0, [r1], #1
90010bc2:	2b01      	cmp	r3, #1
90010bc4:	d911      	bls.n	90010bea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90010bc6:	ea81 0402 	eor.w	r4, r1, r2
90010bca:	4610      	mov	r0, r2
90010bcc:	07a4      	lsls	r4, r4, #30
90010bce:	d022      	beq.n	90010c16 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90010bd0:	f023 0401 	bic.w	r4, r3, #1
90010bd4:	440c      	add	r4, r1
90010bd6:	428c      	cmp	r4, r1
90010bd8:	4602      	mov	r2, r0
90010bda:	d904      	bls.n	90010be6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
90010bdc:	8812      	ldrh	r2, [r2, #0]
90010bde:	3002      	adds	r0, #2
90010be0:	f821 2b02 	strh.w	r2, [r1], #2
90010be4:	e7f7      	b.n	90010bd6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90010be6:	f003 0301 	and.w	r3, r3, #1
90010bea:	f023 0003 	bic.w	r0, r3, #3
90010bee:	4408      	add	r0, r1
90010bf0:	4288      	cmp	r0, r1
90010bf2:	4614      	mov	r4, r2
90010bf4:	d904      	bls.n	90010c00 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
90010bf6:	6824      	ldr	r4, [r4, #0]
90010bf8:	3204      	adds	r2, #4
90010bfa:	f841 4b04 	str.w	r4, [r1], #4
90010bfe:	e7f7      	b.n	90010bf0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90010c00:	f003 0303 	and.w	r3, r3, #3
90010c04:	3a01      	subs	r2, #1
90010c06:	440b      	add	r3, r1
90010c08:	428b      	cmp	r3, r1
90010c0a:	d90c      	bls.n	90010c26 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010c0c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90010c10:	f801 0b01 	strb.w	r0, [r1], #1
90010c14:	e7f8      	b.n	90010c08 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
90010c16:	0790      	lsls	r0, r2, #30
90010c18:	d0e7      	beq.n	90010bea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90010c1a:	f832 0b02 	ldrh.w	r0, [r2], #2
90010c1e:	3b02      	subs	r3, #2
90010c20:	f821 0b02 	strh.w	r0, [r1], #2
90010c24:	e7e1      	b.n	90010bea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90010c26:	2001      	movs	r0, #1
90010c28:	bd10      	pop	{r4, pc}

90010c2a <_ZN8touchgfx3HAL7noTouchEv>:
90010c2a:	b510      	push	{r4, lr}
90010c2c:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
90010c30:	4604      	mov	r4, r0
90010c32:	b153      	cbz	r3, 90010c4a <_ZN8touchgfx3HAL7noTouchEv+0x20>
90010c34:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
90010c38:	2101      	movs	r1, #1
90010c3a:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
90010c3e:	301c      	adds	r0, #28
90010c40:	f015 fea0 	bl	90026984 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90010c44:	2300      	movs	r3, #0
90010c46:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90010c4a:	bd10      	pop	{r4, pc}

90010c4c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90010c4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010c50:	b085      	sub	sp, #20
90010c52:	4604      	mov	r4, r0
90010c54:	2000      	movs	r0, #0
90010c56:	4699      	mov	r9, r3
90010c58:	ad04      	add	r5, sp, #16
90010c5a:	460f      	mov	r7, r1
90010c5c:	4690      	mov	r8, r2
90010c5e:	f845 0d04 	str.w	r0, [r5, #-4]!
90010c62:	69a0      	ldr	r0, [r4, #24]
90010c64:	6806      	ldr	r6, [r0, #0]
90010c66:	9501      	str	r5, [sp, #4]
90010c68:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
90010c6c:	9500      	str	r5, [sp, #0]
90010c6e:	6835      	ldr	r5, [r6, #0]
90010c70:	47a8      	blx	r5
90010c72:	4d10      	ldr	r5, [pc, #64]	@ (90010cb4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90010c74:	4606      	mov	r6, r0
90010c76:	f8a5 9000 	strh.w	r9, [r5]
90010c7a:	f7f2 f841 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
90010c7e:	6803      	ldr	r3, [r0, #0]
90010c80:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010c82:	4798      	blx	r3
90010c84:	b128      	cbz	r0, 90010c92 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
90010c86:	2801      	cmp	r0, #1
90010c88:	d00b      	beq.n	90010ca2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
90010c8a:	4630      	mov	r0, r6
90010c8c:	b005      	add	sp, #20
90010c8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010c92:	882b      	ldrh	r3, [r5, #0]
90010c94:	fb08 7203 	mla	r2, r8, r3, r7
90010c98:	9b03      	ldr	r3, [sp, #12]
90010c9a:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90010c9e:	63e3      	str	r3, [r4, #60]	@ 0x3c
90010ca0:	e7f3      	b.n	90010c8a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90010ca2:	882a      	ldrh	r2, [r5, #0]
90010ca4:	9b03      	ldr	r3, [sp, #12]
90010ca6:	fb08 7202 	mla	r2, r8, r2, r7
90010caa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90010cae:	1a9a      	subs	r2, r3, r2
90010cb0:	63e2      	str	r2, [r4, #60]	@ 0x3c
90010cb2:	e7ea      	b.n	90010c8a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90010cb4:	2001aa38 	.word	0x2001aa38

90010cb8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
90010cb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90010cba:	4b15      	ldr	r3, [pc, #84]	@ (90010d10 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
90010cbc:	460f      	mov	r7, r1
90010cbe:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
90010cc2:	4606      	mov	r6, r0
90010cc4:	881b      	ldrh	r3, [r3, #0]
90010cc6:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90010cc8:	fb93 f4f4 	sdiv	r4, r3, r4
90010ccc:	f7f2 f818 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
90010cd0:	6803      	ldr	r3, [r0, #0]
90010cd2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010cd4:	4798      	blx	r3
90010cd6:	2801      	cmp	r0, #1
90010cd8:	d00b      	beq.n	90010cf2 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
90010cda:	d303      	bcc.n	90010ce4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
90010cdc:	2802      	cmp	r0, #2
90010cde:	d010      	beq.n	90010d02 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
90010ce0:	63f5      	str	r5, [r6, #60]	@ 0x3c
90010ce2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90010ce4:	4b0b      	ldr	r3, [pc, #44]	@ (90010d14 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
90010ce6:	437c      	muls	r4, r7
90010ce8:	8819      	ldrh	r1, [r3, #0]
90010cea:	434c      	muls	r4, r1
90010cec:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
90010cf0:	e7f6      	b.n	90010ce0 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90010cf2:	4b08      	ldr	r3, [pc, #32]	@ (90010d14 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
90010cf4:	437c      	muls	r4, r7
90010cf6:	8819      	ldrh	r1, [r3, #0]
90010cf8:	434c      	muls	r4, r1
90010cfa:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90010cfe:	1b2d      	subs	r5, r5, r4
90010d00:	e7ee      	b.n	90010ce0 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90010d02:	4b04      	ldr	r3, [pc, #16]	@ (90010d14 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
90010d04:	437c      	muls	r4, r7
90010d06:	8819      	ldrh	r1, [r3, #0]
90010d08:	434c      	muls	r4, r1
90010d0a:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
90010d0e:	e7e7      	b.n	90010ce0 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90010d10:	2001aa3a 	.word	0x2001aa3a
90010d14:	2001aa38 	.word	0x2001aa38

90010d18 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90010d18:	b5f0      	push	{r4, r5, r6, r7, lr}
90010d1a:	b08b      	sub	sp, #44	@ 0x2c
90010d1c:	4617      	mov	r7, r2
90010d1e:	4604      	mov	r4, r0
90010d20:	460e      	mov	r6, r1
90010d22:	461d      	mov	r5, r3
90010d24:	f7f1 ffec 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
90010d28:	6803      	ldr	r3, [r0, #0]
90010d2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010d2c:	4798      	blx	r3
90010d2e:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90010d32:	9007      	str	r0, [sp, #28]
90010d34:	4631      	mov	r1, r6
90010d36:	6822      	ldr	r2, [r4, #0]
90010d38:	e9cd 0308 	strd	r0, r3, [sp, #32]
90010d3c:	4b0c      	ldr	r3, [pc, #48]	@ (90010d70 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90010d3e:	4620      	mov	r0, r4
90010d40:	881b      	ldrh	r3, [r3, #0]
90010d42:	9306      	str	r3, [sp, #24]
90010d44:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90010d48:	9305      	str	r3, [sp, #20]
90010d4a:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
90010d4e:	9304      	str	r3, [sp, #16]
90010d50:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010d54:	9303      	str	r3, [sp, #12]
90010d56:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010d5a:	9302      	str	r3, [sp, #8]
90010d5c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90010d60:	e9cd 5300 	strd	r5, r3, [sp]
90010d64:	463b      	mov	r3, r7
90010d66:	6c15      	ldr	r5, [r2, #64]	@ 0x40
90010d68:	2200      	movs	r2, #0
90010d6a:	47a8      	blx	r5
90010d6c:	b00b      	add	sp, #44	@ 0x2c
90010d6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010d70:	2001aa38 	.word	0x2001aa38

90010d74 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90010d74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010d78:	4698      	mov	r8, r3
90010d7a:	6803      	ldr	r3, [r0, #0]
90010d7c:	b08b      	sub	sp, #44	@ 0x2c
90010d7e:	4617      	mov	r7, r2
90010d80:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
90010d82:	460e      	mov	r6, r1
90010d84:	4b13      	ldr	r3, [pc, #76]	@ (90010dd4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
90010d86:	4604      	mov	r4, r0
90010d88:	f8b3 9000 	ldrh.w	r9, [r3]
90010d8c:	f7f1 ffb8 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
90010d90:	6803      	ldr	r3, [r0, #0]
90010d92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010d94:	4798      	blx	r3
90010d96:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90010d9a:	2200      	movs	r2, #0
90010d9c:	4631      	mov	r1, r6
90010d9e:	e9cd 0308 	strd	r0, r3, [sp, #32]
90010da2:	2302      	movs	r3, #2
90010da4:	4620      	mov	r0, r4
90010da6:	e9cd 9306 	strd	r9, r3, [sp, #24]
90010daa:	2301      	movs	r3, #1
90010dac:	9305      	str	r3, [sp, #20]
90010dae:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90010db2:	9304      	str	r3, [sp, #16]
90010db4:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90010db8:	9303      	str	r3, [sp, #12]
90010dba:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90010dbe:	9302      	str	r3, [sp, #8]
90010dc0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010dc4:	e9cd 8300 	strd	r8, r3, [sp]
90010dc8:	463b      	mov	r3, r7
90010dca:	47a8      	blx	r5
90010dcc:	b00b      	add	sp, #44	@ 0x2c
90010dce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010dd2:	bf00      	nop
90010dd4:	2001aa38 	.word	0x2001aa38

90010dd8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90010dd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010ddc:	4698      	mov	r8, r3
90010dde:	6803      	ldr	r3, [r0, #0]
90010de0:	b087      	sub	sp, #28
90010de2:	460e      	mov	r6, r1
90010de4:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
90010de6:	4617      	mov	r7, r2
90010de8:	4b0f      	ldr	r3, [pc, #60]	@ (90010e28 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90010dea:	4604      	mov	r4, r0
90010dec:	f8b3 9000 	ldrh.w	r9, [r3]
90010df0:	f7f1 ff86 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
90010df4:	6803      	ldr	r3, [r0, #0]
90010df6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010df8:	4798      	blx	r3
90010dfa:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
90010dfe:	463a      	mov	r2, r7
90010e00:	4631      	mov	r1, r6
90010e02:	f8cd 900c 	str.w	r9, [sp, #12]
90010e06:	e9cd 0304 	strd	r0, r3, [sp, #16]
90010e0a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90010e0e:	4620      	mov	r0, r4
90010e10:	9302      	str	r3, [sp, #8]
90010e12:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
90010e16:	9301      	str	r3, [sp, #4]
90010e18:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90010e1c:	9300      	str	r3, [sp, #0]
90010e1e:	4643      	mov	r3, r8
90010e20:	47a8      	blx	r5
90010e22:	b007      	add	sp, #28
90010e24:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010e28:	2001aa38 	.word	0x2001aa38

90010e2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90010e2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010e30:	4604      	mov	r4, r0
90010e32:	b08f      	sub	sp, #60	@ 0x3c
90010e34:	4610      	mov	r0, r2
90010e36:	460d      	mov	r5, r1
90010e38:	4691      	mov	r9, r2
90010e3a:	461e      	mov	r6, r3
90010e3c:	f007 fa2c 	bl	90018298 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90010e40:	2800      	cmp	r0, #0
90010e42:	f000 809d 	beq.w	90010f80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90010e46:	6823      	ldr	r3, [r4, #0]
90010e48:	4620      	mov	r0, r4
90010e4a:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90010fe4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90010e4e:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
90010e52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010e54:	4798      	blx	r3
90010e56:	6823      	ldr	r3, [r4, #0]
90010e58:	4620      	mov	r0, r4
90010e5a:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 90010fe8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
90010e5e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90010e60:	4798      	blx	r3
90010e62:	f8bb 3000 	ldrh.w	r3, [fp]
90010e66:	4f5c      	ldr	r7, [pc, #368]	@ (90010fd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010e68:	9301      	str	r3, [sp, #4]
90010e6a:	f8ba 3000 	ldrh.w	r3, [sl]
90010e6e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
90010e72:	4640      	mov	r0, r8
90010e74:	9302      	str	r3, [sp, #8]
90010e76:	883b      	ldrh	r3, [r7, #0]
90010e78:	9303      	str	r3, [sp, #12]
90010e7a:	4b58      	ldr	r3, [pc, #352]	@ (90010fdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010e7c:	881a      	ldrh	r2, [r3, #0]
90010e7e:	9305      	str	r3, [sp, #20]
90010e80:	9204      	str	r2, [sp, #16]
90010e82:	f007 fa9d 	bl	900183c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90010e86:	8038      	strh	r0, [r7, #0]
90010e88:	4640      	mov	r0, r8
90010e8a:	f007 facd 	bl	90018428 <_ZNK8touchgfx6Bitmap9getHeightEv>
90010e8e:	9b05      	ldr	r3, [sp, #20]
90010e90:	b280      	uxth	r0, r0
90010e92:	8018      	strh	r0, [r3, #0]
90010e94:	4b52      	ldr	r3, [pc, #328]	@ (90010fe0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
90010e96:	781b      	ldrb	r3, [r3, #0]
90010e98:	2b00      	cmp	r3, #0
90010e9a:	d174      	bne.n	90010f86 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90010e9c:	883b      	ldrh	r3, [r7, #0]
90010e9e:	f8aa 0000 	strh.w	r0, [sl]
90010ea2:	f8ab 3000 	strh.w	r3, [fp]
90010ea6:	4648      	mov	r0, r9
90010ea8:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
90010eac:	f007 f9f4 	bl	90018298 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90010eb0:	2200      	movs	r2, #0
90010eb2:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
90010eb6:	4611      	mov	r1, r2
90010eb8:	4628      	mov	r0, r5
90010eba:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90010ebe:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90010ec2:	f7f1 ffdd 	bl	90002e80 <_ZN8touchgfx8Drawable5setXYEss>
90010ec6:	2301      	movs	r3, #1
90010ec8:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
90010ecc:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
90010ed0:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90010ed4:	2b00      	cmp	r3, #0
90010ed6:	dd5c      	ble.n	90010f92 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90010ed8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90010edc:	2b00      	cmp	r3, #0
90010ede:	dd58      	ble.n	90010f92 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90010ee0:	462a      	mov	r2, r5
90010ee2:	ab0a      	add	r3, sp, #40	@ 0x28
90010ee4:	f852 0f04 	ldr.w	r0, [r2, #4]!
90010ee8:	6851      	ldr	r1, [r2, #4]
90010eea:	c303      	stmia	r3!, {r0, r1}
90010eec:	4631      	mov	r1, r6
90010eee:	a80a      	add	r0, sp, #40	@ 0x28
90010ef0:	f7ff fbc8 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
90010ef4:	4b38      	ldr	r3, [pc, #224]	@ (90010fd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010ef6:	2100      	movs	r1, #0
90010ef8:	f9b3 2000 	ldrsh.w	r2, [r3]
90010efc:	4b37      	ldr	r3, [pc, #220]	@ (90010fdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010efe:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90010f02:	aa0a      	add	r2, sp, #40	@ 0x28
90010f04:	f9b3 3000 	ldrsh.w	r3, [r3]
90010f08:	910c      	str	r1, [sp, #48]	@ 0x30
90010f0a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90010f0e:	ab08      	add	r3, sp, #32
90010f10:	e892 0003 	ldmia.w	r2, {r0, r1}
90010f14:	e883 0003 	stmia.w	r3, {r0, r1}
90010f18:	4618      	mov	r0, r3
90010f1a:	a90c      	add	r1, sp, #48	@ 0x30
90010f1c:	f7ff fbb2 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
90010f20:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90010f22:	2b00      	cmp	r3, #0
90010f24:	d13c      	bne.n	90010fa0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90010f26:	2000      	movs	r0, #0
90010f28:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
90010f2c:	2600      	movs	r6, #0
90010f2e:	696b      	ldr	r3, [r5, #20]
90010f30:	a908      	add	r1, sp, #32
90010f32:	682a      	ldr	r2, [r5, #0]
90010f34:	4628      	mov	r0, r5
90010f36:	9305      	str	r3, [sp, #20]
90010f38:	616e      	str	r6, [r5, #20]
90010f3a:	6892      	ldr	r2, [r2, #8]
90010f3c:	4790      	blx	r2
90010f3e:	9b05      	ldr	r3, [sp, #20]
90010f40:	4652      	mov	r2, sl
90010f42:	4649      	mov	r1, r9
90010f44:	616b      	str	r3, [r5, #20]
90010f46:	4628      	mov	r0, r5
90010f48:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
90010f4c:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
90010f50:	f7f1 ff96 	bl	90002e80 <_ZN8touchgfx8Drawable5setXYEss>
90010f54:	9a01      	ldr	r2, [sp, #4]
90010f56:	4b23      	ldr	r3, [pc, #140]	@ (90010fe4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90010f58:	4620      	mov	r0, r4
90010f5a:	801a      	strh	r2, [r3, #0]
90010f5c:	9a02      	ldr	r2, [sp, #8]
90010f5e:	4b22      	ldr	r3, [pc, #136]	@ (90010fe8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90010f60:	801a      	strh	r2, [r3, #0]
90010f62:	9a03      	ldr	r2, [sp, #12]
90010f64:	4b1c      	ldr	r3, [pc, #112]	@ (90010fd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010f66:	801a      	strh	r2, [r3, #0]
90010f68:	4b1c      	ldr	r3, [pc, #112]	@ (90010fdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010f6a:	9a04      	ldr	r2, [sp, #16]
90010f6c:	801a      	strh	r2, [r3, #0]
90010f6e:	6823      	ldr	r3, [r4, #0]
90010f70:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
90010f74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010f76:	4798      	blx	r3
90010f78:	6823      	ldr	r3, [r4, #0]
90010f7a:	4620      	mov	r0, r4
90010f7c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90010f7e:	4798      	blx	r3
90010f80:	b00f      	add	sp, #60	@ 0x3c
90010f82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010f86:	883b      	ldrh	r3, [r7, #0]
90010f88:	f8ab 0000 	strh.w	r0, [fp]
90010f8c:	f8aa 3000 	strh.w	r3, [sl]
90010f90:	e789      	b.n	90010ea6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90010f92:	462a      	mov	r2, r5
90010f94:	ab0a      	add	r3, sp, #40	@ 0x28
90010f96:	f852 0f04 	ldr.w	r0, [r2, #4]!
90010f9a:	6851      	ldr	r1, [r2, #4]
90010f9c:	c303      	stmia	r3!, {r0, r1}
90010f9e:	e7a9      	b.n	90010ef4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90010fa0:	a807      	add	r0, sp, #28
90010fa2:	f007 fb83 	bl	900186ac <_ZNK8touchgfx6Bitmap9getFormatEv>
90010fa6:	4606      	mov	r6, r0
90010fa8:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
90010faa:	6803      	ldr	r3, [r0, #0]
90010fac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010fae:	4798      	blx	r3
90010fb0:	4286      	cmp	r6, r0
90010fb2:	d1b8      	bne.n	90010f26 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90010fb4:	f7f1 fea4 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
90010fb8:	6803      	ldr	r3, [r0, #0]
90010fba:	4606      	mov	r6, r0
90010fbc:	a807      	add	r0, sp, #28
90010fbe:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010fc0:	9305      	str	r3, [sp, #20]
90010fc2:	f007 fb73 	bl	900186ac <_ZNK8touchgfx6Bitmap9getFormatEv>
90010fc6:	9b05      	ldr	r3, [sp, #20]
90010fc8:	4601      	mov	r1, r0
90010fca:	4630      	mov	r0, r6
90010fcc:	4798      	blx	r3
90010fce:	f080 0001 	eor.w	r0, r0, #1
90010fd2:	b2c0      	uxtb	r0, r0
90010fd4:	e7a8      	b.n	90010f28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
90010fd6:	bf00      	nop
90010fd8:	2001aa32 	.word	0x2001aa32
90010fdc:	2001aa34 	.word	0x2001aa34
90010fe0:	2001aa36 	.word	0x2001aa36
90010fe4:	2001aa38 	.word	0x2001aa38
90010fe8:	2001aa3a 	.word	0x2001aa3a

90010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90010fec:	4b07      	ldr	r3, [pc, #28]	@ (9001100c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90010fee:	b510      	push	{r4, lr}
90010ff0:	781b      	ldrb	r3, [r3, #0]
90010ff2:	4604      	mov	r4, r0
90010ff4:	b13b      	cbz	r3, 90011006 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90010ff6:	6803      	ldr	r3, [r0, #0]
90010ff8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010ffa:	4798      	blx	r3
90010ffc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90010ffe:	4283      	cmp	r3, r0
90011000:	d101      	bne.n	90011006 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90011002:	6c20      	ldr	r0, [r4, #64]	@ 0x40
90011004:	bd10      	pop	{r4, pc}
90011006:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90011008:	e7fc      	b.n	90011004 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
9001100a:	bf00      	nop
9001100c:	2001aa3c 	.word	0x2001aa3c

90011010 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90011010:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011014:	461d      	mov	r5, r3
90011016:	b08a      	sub	sp, #40	@ 0x28
90011018:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9001101c:	4690      	mov	r8, r2
9001101e:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
90011022:	2400      	movs	r4, #0
90011024:	4607      	mov	r7, r0
90011026:	fb06 8505 	mla	r5, r6, r5, r8
9001102a:	9404      	str	r4, [sp, #16]
9001102c:	f88d 4020 	strb.w	r4, [sp, #32]
90011030:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011034:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90011038:	f8ad 3018 	strh.w	r3, [sp, #24]
9001103c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90011040:	f8ad 301a 	strh.w	r3, [sp, #26]
90011044:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011048:	f8ad 301c 	strh.w	r3, [sp, #28]
9001104c:	f7ff ffce 	bl	90010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011050:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90011054:	6878      	ldr	r0, [r7, #4]
90011056:	f8ad 601e 	strh.w	r6, [sp, #30]
9001105a:	a901      	add	r1, sp, #4
9001105c:	9505      	str	r5, [sp, #20]
9001105e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90011062:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
90011066:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
9001106a:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
9001106e:	6803      	ldr	r3, [r0, #0]
90011070:	685b      	ldr	r3, [r3, #4]
90011072:	4798      	blx	r3
90011074:	b00a      	add	sp, #40	@ 0x28
90011076:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001107a <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
9001107a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001107e:	b08b      	sub	sp, #44	@ 0x2c
90011080:	2400      	movs	r4, #0
90011082:	4691      	mov	r9, r2
90011084:	461d      	mov	r5, r3
90011086:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
9001108a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
9001108e:	4688      	mov	r8, r1
90011090:	4607      	mov	r7, r0
90011092:	9404      	str	r4, [sp, #16]
90011094:	fb06 9505 	mla	r5, r6, r5, r9
90011098:	e9cd 3401 	strd	r3, r4, [sp, #4]
9001109c:	f7ff ffa6 	bl	90010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900110a0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900110a4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900110a8:	6878      	ldr	r0, [r7, #4]
900110aa:	f8ad 3018 	strh.w	r3, [sp, #24]
900110ae:	a901      	add	r1, sp, #4
900110b0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
900110b4:	9505      	str	r5, [sp, #20]
900110b6:	f8ad 301a 	strh.w	r3, [sp, #26]
900110ba:	f8ad 401c 	strh.w	r4, [sp, #28]
900110be:	f8ad 601e 	strh.w	r6, [sp, #30]
900110c2:	f8cd 8010 	str.w	r8, [sp, #16]
900110c6:	f8ad 4020 	strh.w	r4, [sp, #32]
900110ca:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
900110ce:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
900110d2:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
900110d6:	6803      	ldr	r3, [r0, #0]
900110d8:	685b      	ldr	r3, [r3, #4]
900110da:	4798      	blx	r3
900110dc:	b00b      	add	sp, #44	@ 0x2c
900110de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

900110e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
900110e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900110e8:	b08a      	sub	sp, #40	@ 0x28
900110ea:	4698      	mov	r8, r3
900110ec:	2300      	movs	r3, #0
900110ee:	4606      	mov	r6, r0
900110f0:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
900110f4:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
900110f8:	2d0b      	cmp	r5, #11
900110fa:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
900110fe:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
90011102:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
90011106:	9304      	str	r3, [sp, #16]
90011108:	d137      	bne.n	9001117a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
9001110a:	2380      	movs	r3, #128	@ 0x80
9001110c:	f88d 0020 	strb.w	r0, [sp, #32]
90011110:	4630      	mov	r0, r6
90011112:	9203      	str	r2, [sp, #12]
90011114:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011118:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001111c:	f8ad 3018 	strh.w	r3, [sp, #24]
90011120:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011124:	f8ad 301a 	strh.w	r3, [sp, #26]
90011128:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
9001112c:	f8ad 301c 	strh.w	r3, [sp, #28]
90011130:	f7ff ff5c 	bl	90010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011134:	2c0b      	cmp	r4, #11
90011136:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
9001113a:	f8ad 701e 	strh.w	r7, [sp, #30]
9001113e:	bf94      	ite	ls
90011140:	4b19      	ldrls	r3, [pc, #100]	@ (900111a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90011142:	2100      	movhi	r1, #0
90011144:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
90011148:	bf98      	it	ls
9001114a:	5d19      	ldrbls	r1, [r3, r4]
9001114c:	fb02 8307 	mla	r3, r2, r7, r8
90011150:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90011154:	10c9      	asrs	r1, r1, #3
90011156:	fb01 0003 	mla	r0, r1, r3, r0
9001115a:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
9001115e:	a901      	add	r1, sp, #4
90011160:	9005      	str	r0, [sp, #20]
90011162:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90011166:	2300      	movs	r3, #0
90011168:	6870      	ldr	r0, [r6, #4]
9001116a:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
9001116e:	6803      	ldr	r3, [r0, #0]
90011170:	685b      	ldr	r3, [r3, #4]
90011172:	4798      	blx	r3
90011174:	b00a      	add	sp, #40	@ 0x28
90011176:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001117a:	2d02      	cmp	r5, #2
9001117c:	d109      	bne.n	90011192 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
9001117e:	28ff      	cmp	r0, #255	@ 0xff
90011180:	d105      	bne.n	9001118e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90011182:	f1bc 0f00 	cmp.w	ip, #0
90011186:	bf14      	ite	ne
90011188:	2340      	movne	r3, #64	@ 0x40
9001118a:	2320      	moveq	r3, #32
9001118c:	e7be      	b.n	9001110c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001118e:	2340      	movs	r3, #64	@ 0x40
90011190:	e7bc      	b.n	9001110c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011192:	28ff      	cmp	r0, #255	@ 0xff
90011194:	d105      	bne.n	900111a2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90011196:	f1bc 0f00 	cmp.w	ip, #0
9001119a:	bf14      	ite	ne
9001119c:	2304      	movne	r3, #4
9001119e:	2301      	moveq	r3, #1
900111a0:	e7b4      	b.n	9001110c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900111a2:	2304      	movs	r3, #4
900111a4:	e7b2      	b.n	9001110c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900111a6:	bf00      	nop
900111a8:	90035884 	.word	0x90035884

900111ac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
900111ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900111b0:	b08b      	sub	sp, #44	@ 0x2c
900111b2:	461d      	mov	r5, r3
900111b4:	2400      	movs	r4, #0
900111b6:	4688      	mov	r8, r1
900111b8:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
900111bc:	4693      	mov	fp, r2
900111be:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
900111c2:	4607      	mov	r7, r0
900111c4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900111c8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
900111cc:	9404      	str	r4, [sp, #16]
900111ce:	bf14      	ite	ne
900111d0:	2308      	movne	r3, #8
900111d2:	2302      	moveq	r3, #2
900111d4:	fb05 b50a 	mla	r5, r5, sl, fp
900111d8:	e9cd 3401 	strd	r3, r4, [sp, #4]
900111dc:	f7ff ff06 	bl	90010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900111e0:	2e0b      	cmp	r6, #11
900111e2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
900111e6:	a901      	add	r1, sp, #4
900111e8:	bf98      	it	ls
900111ea:	4b13      	ldrls	r3, [pc, #76]	@ (90011238 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
900111ec:	f8ad a01e 	strh.w	sl, [sp, #30]
900111f0:	bf98      	it	ls
900111f2:	5d9c      	ldrbls	r4, [r3, r6]
900111f4:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
900111f8:	10e4      	asrs	r4, r4, #3
900111fa:	f8cd 8010 	str.w	r8, [sp, #16]
900111fe:	f8ad 3018 	strh.w	r3, [sp, #24]
90011202:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90011206:	fb04 0405 	mla	r4, r4, r5, r0
9001120a:	6878      	ldr	r0, [r7, #4]
9001120c:	f8ad 301a 	strh.w	r3, [sp, #26]
90011210:	2300      	movs	r3, #0
90011212:	9405      	str	r4, [sp, #20]
90011214:	f8ad 301c 	strh.w	r3, [sp, #28]
90011218:	f88d 9020 	strb.w	r9, [sp, #32]
9001121c:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
90011220:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90011224:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
90011228:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
9001122c:	6803      	ldr	r3, [r0, #0]
9001122e:	685b      	ldr	r3, [r3, #4]
90011230:	4798      	blx	r3
90011232:	b00b      	add	sp, #44	@ 0x2c
90011234:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011238:	90035884 	.word	0x90035884

9001123c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
9001123c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011240:	461e      	mov	r6, r3
90011242:	4b0a      	ldr	r3, [pc, #40]	@ (9001126c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90011244:	460f      	mov	r7, r1
90011246:	4690      	mov	r8, r2
90011248:	881d      	ldrh	r5, [r3, #0]
9001124a:	f7f1 fd59 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
9001124e:	6803      	ldr	r3, [r0, #0]
90011250:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011252:	4798      	blx	r3
90011254:	280b      	cmp	r0, #11
90011256:	bf96      	itet	ls
90011258:	4b05      	ldrls	r3, [pc, #20]	@ (90011270 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
9001125a:	2400      	movhi	r4, #0
9001125c:	5c1c      	ldrbls	r4, [r3, r0]
9001125e:	fb08 7005 	mla	r0, r8, r5, r7
90011262:	10e4      	asrs	r4, r4, #3
90011264:	fb04 6000 	mla	r0, r4, r0, r6
90011268:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001126c:	2001aa38 	.word	0x2001aa38
90011270:	90035884 	.word	0x90035884

90011274 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90011274:	b5f0      	push	{r4, r5, r6, r7, lr}
90011276:	b08b      	sub	sp, #44	@ 0x2c
90011278:	461f      	mov	r7, r3
9001127a:	4604      	mov	r4, r0
9001127c:	4616      	mov	r6, r2
9001127e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90011282:	2500      	movs	r5, #0
90011284:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011288:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
9001128c:	9504      	str	r5, [sp, #16]
9001128e:	f8ad 3018 	strh.w	r3, [sp, #24]
90011292:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90011296:	f8ad 301a 	strh.w	r3, [sp, #26]
9001129a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
9001129e:	f8ad 301c 	strh.w	r3, [sp, #28]
900112a2:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900112a6:	f88d 3020 	strb.w	r3, [sp, #32]
900112aa:	f7ff fe9f 	bl	90010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900112ae:	463a      	mov	r2, r7
900112b0:	4631      	mov	r1, r6
900112b2:	4603      	mov	r3, r0
900112b4:	4620      	mov	r0, r4
900112b6:	f7ff ffc1 	bl	9001123c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900112ba:	4b0e      	ldr	r3, [pc, #56]	@ (900112f4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
900112bc:	9005      	str	r0, [sp, #20]
900112be:	881b      	ldrh	r3, [r3, #0]
900112c0:	f8ad 301e 	strh.w	r3, [sp, #30]
900112c4:	f7f1 fd1c 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
900112c8:	6803      	ldr	r3, [r0, #0]
900112ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900112cc:	4798      	blx	r3
900112ce:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900112d0:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
900112d4:	a901      	add	r1, sp, #4
900112d6:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
900112da:	9304      	str	r3, [sp, #16]
900112dc:	6860      	ldr	r0, [r4, #4]
900112de:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
900112e2:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
900112e6:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
900112ea:	6803      	ldr	r3, [r0, #0]
900112ec:	685b      	ldr	r3, [r3, #4]
900112ee:	4798      	blx	r3
900112f0:	b00b      	add	sp, #44	@ 0x2c
900112f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
900112f4:	2001aa38 	.word	0x2001aa38

900112f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
900112f8:	b5f0      	push	{r4, r5, r6, r7, lr}
900112fa:	b08d      	sub	sp, #52	@ 0x34
900112fc:	2501      	movs	r5, #1
900112fe:	4604      	mov	r4, r0
90011300:	466b      	mov	r3, sp
90011302:	9503      	str	r5, [sp, #12]
90011304:	e883 0006 	stmia.w	r3, {r1, r2}
90011308:	2300      	movs	r3, #0
9001130a:	f8bd 6000 	ldrh.w	r6, [sp]
9001130e:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90011312:	9306      	str	r3, [sp, #24]
90011314:	6803      	ldr	r3, [r0, #0]
90011316:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011318:	4798      	blx	r3
9001131a:	463a      	mov	r2, r7
9001131c:	4631      	mov	r1, r6
9001131e:	4603      	mov	r3, r0
90011320:	4620      	mov	r0, r4
90011322:	f7ff ff8b 	bl	9001123c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011326:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90011328:	9004      	str	r0, [sp, #16]
9001132a:	9307      	str	r3, [sp, #28]
9001132c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90011330:	f8ad 3020 	strh.w	r3, [sp, #32]
90011334:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90011338:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001133c:	4b0e      	ldr	r3, [pc, #56]	@ (90011378 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
9001133e:	881b      	ldrh	r3, [r3, #0]
90011340:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90011344:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90011348:	f7f1 fcda 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
9001134c:	6803      	ldr	r3, [r0, #0]
9001134e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011350:	4798      	blx	r3
90011352:	23ff      	movs	r3, #255	@ 0xff
90011354:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90011358:	a903      	add	r1, sp, #12
9001135a:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
9001135e:	6860      	ldr	r0, [r4, #4]
90011360:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90011364:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90011368:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
9001136c:	6803      	ldr	r3, [r0, #0]
9001136e:	685b      	ldr	r3, [r3, #4]
90011370:	4798      	blx	r3
90011372:	6c60      	ldr	r0, [r4, #68]	@ 0x44
90011374:	b00d      	add	sp, #52	@ 0x34
90011376:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011378:	2001aa38 	.word	0x2001aa38

9001137c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
9001137c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011380:	b08c      	sub	sp, #48	@ 0x30
90011382:	461e      	mov	r6, r3
90011384:	2300      	movs	r3, #0
90011386:	4604      	mov	r4, r0
90011388:	466d      	mov	r5, sp
9001138a:	9306      	str	r3, [sp, #24]
9001138c:	6803      	ldr	r3, [r0, #0]
9001138e:	e885 0006 	stmia.w	r5, {r1, r2}
90011392:	2501      	movs	r5, #1
90011394:	f8bd 7000 	ldrh.w	r7, [sp]
90011398:	f8bd 8002 	ldrh.w	r8, [sp, #2]
9001139c:	9503      	str	r5, [sp, #12]
9001139e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900113a0:	4798      	blx	r3
900113a2:	4642      	mov	r2, r8
900113a4:	4639      	mov	r1, r7
900113a6:	4603      	mov	r3, r0
900113a8:	4620      	mov	r0, r4
900113aa:	f7ff ff47 	bl	9001123c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900113ae:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900113b2:	9004      	str	r0, [sp, #16]
900113b4:	f8ad 3020 	strh.w	r3, [sp, #32]
900113b8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
900113bc:	9607      	str	r6, [sp, #28]
900113be:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
900113c2:	4b10      	ldr	r3, [pc, #64]	@ (90011404 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
900113c4:	881b      	ldrh	r3, [r3, #0]
900113c6:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
900113ca:	9b12      	ldr	r3, [sp, #72]	@ 0x48
900113cc:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
900113d0:	f7f1 fc96 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
900113d4:	6803      	ldr	r3, [r0, #0]
900113d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900113d8:	4798      	blx	r3
900113da:	23ff      	movs	r3, #255	@ 0xff
900113dc:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
900113e0:	a903      	add	r1, sp, #12
900113e2:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
900113e6:	6860      	ldr	r0, [r4, #4]
900113e8:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
900113ec:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
900113f0:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
900113f4:	6803      	ldr	r3, [r0, #0]
900113f6:	685b      	ldr	r3, [r3, #4]
900113f8:	4798      	blx	r3
900113fa:	4630      	mov	r0, r6
900113fc:	b00c      	add	sp, #48	@ 0x30
900113fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011402:	bf00      	nop
90011404:	2001aa38 	.word	0x2001aa38

90011408 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90011408:	b5f0      	push	{r4, r5, r6, r7, lr}
9001140a:	b085      	sub	sp, #20
9001140c:	4605      	mov	r5, r0
9001140e:	ac02      	add	r4, sp, #8
90011410:	e884 0006 	stmia.w	r4, {r1, r2}
90011414:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90011418:	f8bd 700a 	ldrh.w	r7, [sp, #10]
9001141c:	f7ff fde6 	bl	90010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011420:	4631      	mov	r1, r6
90011422:	4603      	mov	r3, r0
90011424:	463a      	mov	r2, r7
90011426:	4628      	mov	r0, r5
90011428:	f7ff ff08 	bl	9001123c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
9001142c:	4a05      	ldr	r2, [pc, #20]	@ (90011444 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
9001142e:	682b      	ldr	r3, [r5, #0]
90011430:	8812      	ldrh	r2, [r2, #0]
90011432:	9200      	str	r2, [sp, #0]
90011434:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
90011436:	4603      	mov	r3, r0
90011438:	4628      	mov	r0, r5
9001143a:	e894 0006 	ldmia.w	r4, {r1, r2}
9001143e:	47b0      	blx	r6
90011440:	b005      	add	sp, #20
90011442:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011444:	2001aa38 	.word	0x2001aa38

90011448 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90011448:	b570      	push	{r4, r5, r6, lr}
9001144a:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
9001144e:	4604      	mov	r4, r0
90011450:	b19b      	cbz	r3, 9001147a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90011452:	2002      	movs	r0, #2
90011454:	f7ef fb6a 	bl	90000b2c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90011458:	2300      	movs	r3, #0
9001145a:	4620      	mov	r0, r4
9001145c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90011460:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
90011464:	6823      	ldr	r3, [r4, #0]
90011466:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
9001146a:	f7ff fdbf 	bl	90010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001146e:	4601      	mov	r1, r0
90011470:	4620      	mov	r0, r4
90011472:	462b      	mov	r3, r5
90011474:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011478:	4718      	bx	r3
9001147a:	bd70      	pop	{r4, r5, r6, pc}

9001147c <_ZN8touchgfx3HAL12setMCUActiveEb>:
9001147c:	b570      	push	{r4, r5, r6, lr}
9001147e:	4605      	mov	r5, r0
90011480:	460c      	mov	r4, r1
90011482:	2003      	movs	r0, #3
90011484:	b149      	cbz	r1, 9001149a <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90011486:	f7ef faf1 	bl	90000a6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
9001148a:	6928      	ldr	r0, [r5, #16]
9001148c:	b168      	cbz	r0, 900114aa <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
9001148e:	6803      	ldr	r3, [r0, #0]
90011490:	2101      	movs	r1, #1
90011492:	695b      	ldr	r3, [r3, #20]
90011494:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011498:	4718      	bx	r3
9001149a:	f7ef fb17 	bl	90000acc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
9001149e:	6928      	ldr	r0, [r5, #16]
900114a0:	b118      	cbz	r0, 900114aa <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900114a2:	6803      	ldr	r3, [r0, #0]
900114a4:	4621      	mov	r1, r4
900114a6:	695b      	ldr	r3, [r3, #20]
900114a8:	e7f4      	b.n	90011494 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
900114aa:	bd70      	pop	{r4, r5, r6, pc}

900114ac <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
900114ac:	b538      	push	{r3, r4, r5, lr}
900114ae:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
900114b2:	4604      	mov	r4, r0
900114b4:	460d      	mov	r5, r1
900114b6:	428b      	cmp	r3, r1
900114b8:	d006      	beq.n	900114c8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
900114ba:	6803      	ldr	r3, [r0, #0]
900114bc:	b929      	cbnz	r1, 900114ca <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
900114be:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
900114c2:	4798      	blx	r3
900114c4:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
900114c8:	bd38      	pop	{r3, r4, r5, pc}
900114ca:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
900114ce:	e7f8      	b.n	900114c2 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

900114d0 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
900114d0:	4b0c      	ldr	r3, [pc, #48]	@ (90011504 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
900114d2:	b510      	push	{r4, lr}
900114d4:	781b      	ldrb	r3, [r3, #0]
900114d6:	4604      	mov	r4, r0
900114d8:	b953      	cbnz	r3, 900114f0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
900114da:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
900114de:	b93b      	cbnz	r3, 900114f0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
900114e0:	6840      	ldr	r0, [r0, #4]
900114e2:	f000 f92b 	bl	9001173c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
900114e6:	b118      	cbz	r0, 900114f0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
900114e8:	6862      	ldr	r2, [r4, #4]
900114ea:	7a53      	ldrb	r3, [r2, #9]
900114ec:	2b00      	cmp	r3, #0
900114ee:	d0fc      	beq.n	900114ea <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
900114f0:	f7ef fcc0 	bl	90000e74 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
900114f4:	4620      	mov	r0, r4
900114f6:	2100      	movs	r1, #0
900114f8:	f7ff ffd8 	bl	900114ac <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
900114fc:	4620      	mov	r0, r4
900114fe:	f7ff fd75 	bl	90010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011502:	bd10      	pop	{r4, pc}
90011504:	2001aa3c 	.word	0x2001aa3c

90011508 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90011508:	b570      	push	{r4, r5, r6, lr}
9001150a:	4604      	mov	r4, r0
9001150c:	6803      	ldr	r3, [r0, #0]
9001150e:	b919      	cbnz	r1, 90011518 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90011510:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011512:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011516:	4718      	bx	r3
90011518:	2200      	movs	r2, #0
9001151a:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
9001151e:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
90011522:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011524:	4798      	blx	r3
90011526:	6863      	ldr	r3, [r4, #4]
90011528:	2101      	movs	r1, #1
9001152a:	4605      	mov	r5, r0
9001152c:	4620      	mov	r0, r4
9001152e:	7299      	strb	r1, [r3, #10]
90011530:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
90011534:	f7ff ffba 	bl	900114ac <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011538:	4628      	mov	r0, r5
9001153a:	bd70      	pop	{r4, r5, r6, pc}

9001153c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
9001153c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90011540:	1a13      	subs	r3, r2, r0
90011542:	4258      	negs	r0, r3
90011544:	4158      	adcs	r0, r3
90011546:	4770      	bx	lr

90011548 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90011548:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
9001154c:	1a9b      	subs	r3, r3, r2
9001154e:	2b00      	cmp	r3, #0
90011550:	bfdc      	itt	le
90011552:	6882      	ldrle	r2, [r0, #8]
90011554:	189b      	addle	r3, r3, r2
90011556:	2b01      	cmp	r3, #1
90011558:	bfcc      	ite	gt
9001155a:	2000      	movgt	r0, #0
9001155c:	2001      	movle	r0, #1
9001155e:	4770      	bx	lr

90011560 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90011560:	6902      	ldr	r2, [r0, #16]
90011562:	6843      	ldr	r3, [r0, #4]
90011564:	2024      	movs	r0, #36	@ 0x24
90011566:	fb00 3002 	mla	r0, r0, r2, r3
9001156a:	4770      	bx	lr

9001156c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
9001156c:	6803      	ldr	r3, [r0, #0]
9001156e:	691b      	ldr	r3, [r3, #16]
90011570:	4718      	bx	r3

90011572 <_ZN8touchgfx13DMA_Interface7executeEv>:
90011572:	2301      	movs	r3, #1
90011574:	b570      	push	{r4, r5, r6, lr}
90011576:	7203      	strb	r3, [r0, #8]
90011578:	4604      	mov	r4, r0
9001157a:	6840      	ldr	r0, [r0, #4]
9001157c:	6803      	ldr	r3, [r0, #0]
9001157e:	699b      	ldr	r3, [r3, #24]
90011580:	4798      	blx	r3
90011582:	6803      	ldr	r3, [r0, #0]
90011584:	4605      	mov	r5, r0
90011586:	2b40      	cmp	r3, #64	@ 0x40
90011588:	d00c      	beq.n	900115a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
9001158a:	d810      	bhi.n	900115ae <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
9001158c:	2b04      	cmp	r3, #4
9001158e:	d01d      	beq.n	900115cc <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90011590:	d804      	bhi.n	9001159c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90011592:	2b01      	cmp	r3, #1
90011594:	d006      	beq.n	900115a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011596:	2b02      	cmp	r3, #2
90011598:	d02c      	beq.n	900115f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
9001159a:	bd70      	pop	{r4, r5, r6, pc}
9001159c:	2b08      	cmp	r3, #8
9001159e:	d01d      	beq.n	900115dc <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
900115a0:	2b20      	cmp	r3, #32
900115a2:	d1fa      	bne.n	9001159a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
900115a4:	6823      	ldr	r3, [r4, #0]
900115a6:	4620      	mov	r0, r4
900115a8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900115aa:	4798      	blx	r3
900115ac:	e013      	b.n	900115d6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
900115ae:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
900115b2:	d0f7      	beq.n	900115a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900115b4:	d804      	bhi.n	900115c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
900115b6:	2b80      	cmp	r3, #128	@ 0x80
900115b8:	d0f4      	beq.n	900115a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900115ba:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
900115be:	e7f0      	b.n	900115a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
900115c0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
900115c4:	d0ee      	beq.n	900115a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900115c6:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
900115ca:	e7e5      	b.n	90011598 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
900115cc:	6823      	ldr	r3, [r4, #0]
900115ce:	7f01      	ldrb	r1, [r0, #28]
900115d0:	4620      	mov	r0, r4
900115d2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900115d4:	4798      	blx	r3
900115d6:	6823      	ldr	r3, [r4, #0]
900115d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900115da:	e006      	b.n	900115ea <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
900115dc:	6823      	ldr	r3, [r4, #0]
900115de:	7f01      	ldrb	r1, [r0, #28]
900115e0:	4620      	mov	r0, r4
900115e2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900115e4:	4798      	blx	r3
900115e6:	6823      	ldr	r3, [r4, #0]
900115e8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900115ea:	4629      	mov	r1, r5
900115ec:	4620      	mov	r0, r4
900115ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900115f2:	4718      	bx	r3
900115f4:	6823      	ldr	r3, [r4, #0]
900115f6:	4620      	mov	r0, r4
900115f8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900115fa:	4798      	blx	r3
900115fc:	e7f3      	b.n	900115e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

900115fe <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
900115fe:	4770      	bx	lr

90011600 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90011600:	4770      	bx	lr

90011602 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90011602:	4770      	bx	lr

90011604 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90011604:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90011608:	b510      	push	{r4, lr}
9001160a:	1ad2      	subs	r2, r2, r3
9001160c:	2a00      	cmp	r2, #0
9001160e:	bfdc      	itt	le
90011610:	6884      	ldrle	r4, [r0, #8]
90011612:	1912      	addle	r2, r2, r4
90011614:	2a01      	cmp	r2, #1
90011616:	dd16      	ble.n	90011646 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90011618:	6842      	ldr	r2, [r0, #4]
9001161a:	2424      	movs	r4, #36	@ 0x24
9001161c:	fb04 2303 	mla	r3, r4, r3, r2
90011620:	f101 0220 	add.w	r2, r1, #32
90011624:	f851 4b04 	ldr.w	r4, [r1], #4
90011628:	4291      	cmp	r1, r2
9001162a:	f843 4b04 	str.w	r4, [r3], #4
9001162e:	d1f9      	bne.n	90011624 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90011630:	780a      	ldrb	r2, [r1, #0]
90011632:	701a      	strb	r2, [r3, #0]
90011634:	68c3      	ldr	r3, [r0, #12]
90011636:	6882      	ldr	r2, [r0, #8]
90011638:	f3bf 8f5b 	dmb	ish
9001163c:	3301      	adds	r3, #1
9001163e:	429a      	cmp	r2, r3
90011640:	bfd8      	it	le
90011642:	1a9b      	suble	r3, r3, r2
90011644:	60c3      	str	r3, [r0, #12]
90011646:	bd10      	pop	{r4, pc}

90011648 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90011648:	6903      	ldr	r3, [r0, #16]
9001164a:	6882      	ldr	r2, [r0, #8]
9001164c:	f3bf 8f5b 	dmb	ish
90011650:	3301      	adds	r3, #1
90011652:	429a      	cmp	r2, r3
90011654:	bfd8      	it	le
90011656:	1a9b      	suble	r3, r3, r2
90011658:	6103      	str	r3, [r0, #16]
9001165a:	4770      	bx	lr

9001165c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
9001165c:	b570      	push	{r4, r5, r6, lr}
9001165e:	4604      	mov	r4, r0
90011660:	460e      	mov	r6, r1
90011662:	6860      	ldr	r0, [r4, #4]
90011664:	6803      	ldr	r3, [r0, #0]
90011666:	685b      	ldr	r3, [r3, #4]
90011668:	4798      	blx	r3
9001166a:	2800      	cmp	r0, #0
9001166c:	d1f9      	bne.n	90011662 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
9001166e:	4d0d      	ldr	r5, [pc, #52]	@ (900116a4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90011670:	6828      	ldr	r0, [r5, #0]
90011672:	6803      	ldr	r3, [r0, #0]
90011674:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90011678:	4798      	blx	r3
9001167a:	f7ef fc09 	bl	90000e90 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
9001167e:	6828      	ldr	r0, [r5, #0]
90011680:	2101      	movs	r1, #1
90011682:	f7ff ff13 	bl	900114ac <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011686:	6860      	ldr	r0, [r4, #4]
90011688:	4631      	mov	r1, r6
9001168a:	6803      	ldr	r3, [r0, #0]
9001168c:	689b      	ldr	r3, [r3, #8]
9001168e:	4798      	blx	r3
90011690:	6823      	ldr	r3, [r4, #0]
90011692:	4620      	mov	r0, r4
90011694:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011696:	4798      	blx	r3
90011698:	6828      	ldr	r0, [r5, #0]
9001169a:	6803      	ldr	r3, [r0, #0]
9001169c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900116a0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900116a2:	4718      	bx	r3
900116a4:	2001aa40 	.word	0x2001aa40

900116a8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
900116a8:	b508      	push	{r3, lr}
900116aa:	f7ef fbe3 	bl	90000e74 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
900116ae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
900116b2:	f7ef bbe7 	b.w	90000e84 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

900116b6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
900116b6:	b510      	push	{r4, lr}
900116b8:	4604      	mov	r4, r0
900116ba:	2114      	movs	r1, #20
900116bc:	f015 ff30 	bl	90027520 <_ZdlPvj>
900116c0:	4620      	mov	r0, r4
900116c2:	bd10      	pop	{r4, pc}

900116c4 <_ZN8touchgfx13DMA_Interface5startEv>:
900116c4:	b510      	push	{r4, lr}
900116c6:	4604      	mov	r4, r0
900116c8:	6840      	ldr	r0, [r0, #4]
900116ca:	6803      	ldr	r3, [r0, #0]
900116cc:	681b      	ldr	r3, [r3, #0]
900116ce:	4798      	blx	r3
900116d0:	b948      	cbnz	r0, 900116e6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
900116d2:	7a63      	ldrb	r3, [r4, #9]
900116d4:	b13b      	cbz	r3, 900116e6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
900116d6:	7a23      	ldrb	r3, [r4, #8]
900116d8:	b92b      	cbnz	r3, 900116e6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
900116da:	6823      	ldr	r3, [r4, #0]
900116dc:	4620      	mov	r0, r4
900116de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900116e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900116e4:	4718      	bx	r3
900116e6:	bd10      	pop	{r4, pc}

900116e8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
900116e8:	b570      	push	{r4, r5, r6, lr}
900116ea:	4604      	mov	r4, r0
900116ec:	6840      	ldr	r0, [r0, #4]
900116ee:	6803      	ldr	r3, [r0, #0]
900116f0:	681b      	ldr	r3, [r3, #0]
900116f2:	4798      	blx	r3
900116f4:	4605      	mov	r5, r0
900116f6:	b930      	cbnz	r0, 90011706 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
900116f8:	7a23      	ldrb	r3, [r4, #8]
900116fa:	b123      	cbz	r3, 90011706 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
900116fc:	6860      	ldr	r0, [r4, #4]
900116fe:	6803      	ldr	r3, [r0, #0]
90011700:	695b      	ldr	r3, [r3, #20]
90011702:	4798      	blx	r3
90011704:	7225      	strb	r5, [r4, #8]
90011706:	6860      	ldr	r0, [r4, #4]
90011708:	6803      	ldr	r3, [r0, #0]
9001170a:	681b      	ldr	r3, [r3, #0]
9001170c:	4798      	blx	r3
9001170e:	b928      	cbnz	r0, 9001171c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90011710:	6823      	ldr	r3, [r4, #0]
90011712:	4620      	mov	r0, r4
90011714:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90011716:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001171a:	4718      	bx	r3
9001171c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011720:	f7ef bbbe 	b.w	90000ea0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90011724 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90011724:	b510      	push	{r4, lr}
90011726:	6082      	str	r2, [r0, #8]
90011728:	2200      	movs	r2, #0
9001172a:	4c03      	ldr	r4, [pc, #12]	@ (90011738 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
9001172c:	e9c0 2203 	strd	r2, r2, [r0, #12]
90011730:	e9c0 4100 	strd	r4, r1, [r0]
90011734:	bd10      	pop	{r4, pc}
90011736:	bf00      	nop
90011738:	90035898 	.word	0x90035898

9001173c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
9001173c:	6840      	ldr	r0, [r0, #4]
9001173e:	6803      	ldr	r3, [r0, #0]
90011740:	681b      	ldr	r3, [r3, #0]
90011742:	4718      	bx	r3
90011744:	0000      	movs	r0, r0
	...

90011748 <_ZN8touchgfxL10applyNoiseEiihhh>:
90011748:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
9001174c:	fb80 0101 	smull	r0, r1, r0, r1
90011750:	4f21      	ldr	r7, [pc, #132]	@ (900117d8 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
90011752:	461c      	mov	r4, r3
90011754:	4616      	mov	r6, r2
90011756:	fba0 bc07 	umull	fp, ip, r0, r7
9001175a:	f89d 5018 	ldrb.w	r5, [sp, #24]
9001175e:	fb07 cc01 	mla	ip, r7, r1, ip
90011762:	fbab 010b 	umull	r0, r1, fp, fp
90011766:	fb0b f70c 	mul.w	r7, fp, ip
9001176a:	fb00 f30c 	mul.w	r3, r0, ip
9001176e:	eb01 0147 	add.w	r1, r1, r7, lsl #1
90011772:	fb0b 3301 	mla	r3, fp, r1, r3
90011776:	fba0 010b 	umull	r0, r1, r0, fp
9001177a:	4419      	add	r1, r3
9001177c:	a314      	add	r3, pc, #80	@ (adr r3, 900117d0 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
9001177e:	e9d3 2300 	ldrd	r2, r3, [r3]
90011782:	f7ee fdad 	bl	900002e0 <__aeabi_ldivmod>
90011786:	2ef7      	cmp	r6, #247	@ 0xf7
90011788:	b290      	uxth	r0, r2
9001178a:	bf9e      	ittt	ls
9001178c:	f002 0207 	andls.w	r2, r2, #7
90011790:	18b6      	addls	r6, r6, r2
90011792:	b2f6      	uxtbls	r6, r6
90011794:	2cfb      	cmp	r4, #251	@ 0xfb
90011796:	bf9e      	ittt	ls
90011798:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
9001179c:	18e4      	addls	r4, r4, r3
9001179e:	b2e4      	uxtbls	r4, r4
900117a0:	2df7      	cmp	r5, #247	@ 0xf7
900117a2:	bf98      	it	ls
900117a4:	f3c0 1042 	ubfxls	r0, r0, #5, #3
900117a8:	ea4f 04c4 	mov.w	r4, r4, lsl #3
900117ac:	bf98      	it	ls
900117ae:	182d      	addls	r5, r5, r0
900117b0:	480a      	ldr	r0, [pc, #40]	@ (900117dc <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
900117b2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900117b6:	ea00 2006 	and.w	r0, r0, r6, lsl #8
900117ba:	bf98      	it	ls
900117bc:	b2ed      	uxtbls	r5, r5
900117be:	4304      	orrs	r4, r0
900117c0:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
900117c4:	b280      	uxth	r0, r0
900117c6:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
900117ca:	bf00      	nop
900117cc:	f3af 8000 	nop.w
900117d0:	797a8d77 	.word	0x797a8d77
900117d4:	00000000 	.word	0x00000000
900117d8:	00ec4ba7 	.word	0x00ec4ba7
900117dc:	fffff800 	.word	0xfffff800

900117e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
900117e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900117e4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
900117e8:	4605      	mov	r5, r0
900117ea:	ed2d 8b02 	vpush	{d8}
900117ee:	b087      	sub	sp, #28
900117f0:	7c41      	ldrb	r1, [r0, #17]
900117f2:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
900117f6:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
900117fa:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
900117fe:	2900      	cmp	r1, #0
90011800:	f000 809a 	beq.w	90011938 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
90011804:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90011808:	ed90 7a08 	vldr	s14, [r0, #32]
9001180c:	454a      	cmp	r2, r9
9001180e:	68c0      	ldr	r0, [r0, #12]
90011810:	db25      	blt.n	9001185e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
90011812:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011816:	f640 72fc 	movw	r2, #4092	@ 0xffc
9001181a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001181e:	bfc8      	it	gt
90011820:	2200      	movgt	r2, #0
90011822:	5882      	ldr	r2, [r0, r2]
90011824:	2100      	movs	r1, #0
90011826:	ea4f 2812 	mov.w	r8, r2, lsr #8
9001182a:	7c2d      	ldrb	r5, [r5, #16]
9001182c:	0950      	lsrs	r0, r2, #5
9001182e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
90011832:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
90011836:	eb04 0746 	add.w	r7, r4, r6, lsl #1
9001183a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001183e:	2d00      	cmp	r5, #0
90011840:	d044      	beq.n	900118cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90011842:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90011846:	d141      	bne.n	900118cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90011848:	bb61      	cbnz	r1, 900118a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
9001184a:	ea4e 0000 	orr.w	r0, lr, r0
9001184e:	ea4c 0500 	orr.w	r5, ip, r0
90011852:	42bc      	cmp	r4, r7
90011854:	f080 8214 	bcs.w	90011c80 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011858:	f824 5b02 	strh.w	r5, [r4], #2
9001185c:	e7f9      	b.n	90011852 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
9001185e:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
90011862:	454f      	cmp	r7, r9
90011864:	dc08      	bgt.n	90011878 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
90011866:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001186a:	f640 72fc 	movw	r2, #4092	@ 0xffc
9001186e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011872:	bfd8      	it	le
90011874:	2200      	movle	r2, #0
90011876:	e7d4      	b.n	90011822 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
90011878:	eba9 0202 	sub.w	r2, r9, r2
9001187c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011880:	ee07 2a90 	vmov	s15, r2
90011884:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011888:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001188c:	ee67 7a87 	vmul.f32	s15, s15, s14
90011890:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90011894:	ee17 2a90 	vmov	r2, s15
90011898:	bfd8      	it	le
9001189a:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
9001189e:	0092      	lsls	r2, r2, #2
900118a0:	5882      	ldr	r2, [r0, r2]
900118a2:	e7c0      	b.n	90011826 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
900118a4:	b2d5      	uxtb	r5, r2
900118a6:	f3c2 4a07 	ubfx	sl, r2, #16, #8
900118aa:	fa5f f888 	uxtb.w	r8, r8
900118ae:	461e      	mov	r6, r3
900118b0:	42bc      	cmp	r4, r7
900118b2:	f080 81e5 	bcs.w	90011c80 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900118b6:	4630      	mov	r0, r6
900118b8:	9500      	str	r5, [sp, #0]
900118ba:	4643      	mov	r3, r8
900118bc:	4652      	mov	r2, sl
900118be:	4649      	mov	r1, r9
900118c0:	3601      	adds	r6, #1
900118c2:	f7ff ff41 	bl	90011748 <_ZN8touchgfxL10applyNoiseEiihhh>
900118c6:	f824 0b02 	strh.w	r0, [r4], #2
900118ca:	e7f1      	b.n	900118b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
900118cc:	0e12      	lsrs	r2, r2, #24
900118ce:	26ff      	movs	r6, #255	@ 0xff
900118d0:	fb02 f20a 	mul.w	r2, r2, sl
900118d4:	1c53      	adds	r3, r2, #1
900118d6:	eb03 2222 	add.w	r2, r3, r2, asr #8
900118da:	1212      	asrs	r2, r2, #8
900118dc:	fb02 f50c 	mul.w	r5, r2, ip
900118e0:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 90011c94 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900118e4:	fb02 f10e 	mul.w	r1, r2, lr
900118e8:	4350      	muls	r0, r2
900118ea:	43d2      	mvns	r2, r2
900118ec:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
900118f0:	42bc      	cmp	r4, r7
900118f2:	f080 81c5 	bcs.w	90011c80 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900118f6:	f8b4 e000 	ldrh.w	lr, [r4]
900118fa:	ea0e 030c 	and.w	r3, lr, ip
900118fe:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90011902:	f00e 0e1f 	and.w	lr, lr, #31
90011906:	fb02 1303 	mla	r3, r2, r3, r1
9001190a:	fb02 0808 	mla	r8, r2, r8, r0
9001190e:	fb02 5e0e 	mla	lr, r2, lr, r5
90011912:	fb93 f3f6 	sdiv	r3, r3, r6
90011916:	fb98 f8f6 	sdiv	r8, r8, r6
9001191a:	fb9e fef6 	sdiv	lr, lr, r6
9001191e:	ea03 030c 	and.w	r3, r3, ip
90011922:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90011926:	f00e 0e1f 	and.w	lr, lr, #31
9001192a:	ea43 0308 	orr.w	r3, r3, r8
9001192e:	ea43 030e 	orr.w	r3, r3, lr
90011932:	f824 3b02 	strh.w	r3, [r4], #2
90011936:	e7db      	b.n	900118f0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
90011938:	7c82      	ldrb	r2, [r0, #18]
9001193a:	2a00      	cmp	r2, #0
9001193c:	d04f      	beq.n	900119de <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
9001193e:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90011942:	ee07 2a90 	vmov	s15, r2
90011946:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001194a:	ee07 3a10 	vmov	s14, r3
9001194e:	461f      	mov	r7, r3
90011950:	eef8 6ac7 	vcvt.f32.s32	s13, s14
90011954:	eef4 6ae7 	vcmpe.f32	s13, s15
90011958:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001195c:	f200 8095 	bhi.w	90011a8a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
90011960:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90011964:	f640 71fc 	movw	r1, #4092	@ 0xffc
90011968:	68ea      	ldr	r2, [r5, #12]
9001196a:	f895 c010 	ldrb.w	ip, [r5, #16]
9001196e:	ee37 7a87 	vadd.f32	s14, s15, s14
90011972:	ee37 7a66 	vsub.f32	s14, s14, s13
90011976:	ee06 6a90 	vmov	s13, r6
9001197a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001197e:	eeb4 7ae6 	vcmpe.f32	s14, s13
90011982:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011986:	bf4a      	itet	mi
90011988:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
9001198c:	9602      	strpl	r6, [sp, #8]
9001198e:	ed8d 7a02 	vstrmi	s14, [sp, #8]
90011992:	ed95 7a08 	vldr	s14, [r5, #32]
90011996:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001199a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001199e:	bfc8      	it	gt
900119a0:	2100      	movgt	r1, #0
900119a2:	5852      	ldr	r2, [r2, r1]
900119a4:	9902      	ldr	r1, [sp, #8]
900119a6:	ea4f 2b12 	mov.w	fp, r2, lsr #8
900119aa:	eb04 0141 	add.w	r1, r4, r1, lsl #1
900119ae:	0950      	lsrs	r0, r2, #5
900119b0:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
900119b4:	9103      	str	r1, [sp, #12]
900119b6:	f3c2 01c4 	ubfx	r1, r2, #3, #5
900119ba:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900119be:	f1bc 0f00 	cmp.w	ip, #0
900119c2:	d024      	beq.n	90011a0e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900119c4:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900119c8:	d121      	bne.n	90011a0e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900119ca:	ea4b 0b00 	orr.w	fp, fp, r0
900119ce:	ea41 010b 	orr.w	r1, r1, fp
900119d2:	9a03      	ldr	r2, [sp, #12]
900119d4:	4294      	cmp	r4, r2
900119d6:	d255      	bcs.n	90011a84 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
900119d8:	f824 1b02 	strh.w	r1, [r4], #2
900119dc:	e7f9      	b.n	900119d2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
900119de:	ee07 9a10 	vmov	s14, r9
900119e2:	edd0 7a06 	vldr	s15, [r0, #24]
900119e6:	edd0 6a05 	vldr	s13, [r0, #20]
900119ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900119ee:	ee37 7a67 	vsub.f32	s14, s14, s15
900119f2:	eec7 7a26 	vdiv.f32	s15, s14, s13
900119f6:	ed90 7a08 	vldr	s14, [r0, #32]
900119fa:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900119fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011a02:	bf44      	itt	mi
90011a04:	ed90 7a07 	vldrmi	s14, [r0, #28]
90011a08:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
90011a0c:	e79d      	b.n	9001194a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
90011a0e:	0e12      	lsrs	r2, r2, #24
90011a10:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 90011c94 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90011a14:	f04f 0eff 	mov.w	lr, #255	@ 0xff
90011a18:	fb02 f20a 	mul.w	r2, r2, sl
90011a1c:	f102 0c01 	add.w	ip, r2, #1
90011a20:	eb0c 2222 	add.w	r2, ip, r2, asr #8
90011a24:	1212      	asrs	r2, r2, #8
90011a26:	4350      	muls	r0, r2
90011a28:	4351      	muls	r1, r2
90011a2a:	fb02 fb0b 	mul.w	fp, r2, fp
90011a2e:	43d2      	mvns	r2, r2
90011a30:	9004      	str	r0, [sp, #16]
90011a32:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90011a36:	9105      	str	r1, [sp, #20]
90011a38:	9903      	ldr	r1, [sp, #12]
90011a3a:	428c      	cmp	r4, r1
90011a3c:	d222      	bcs.n	90011a84 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90011a3e:	8820      	ldrh	r0, [r4, #0]
90011a40:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
90011a44:	ea00 0c08 	and.w	ip, r0, r8
90011a48:	460f      	mov	r7, r1
90011a4a:	9904      	ldr	r1, [sp, #16]
90011a4c:	fb02 bc0c 	mla	ip, r2, ip, fp
90011a50:	fb02 1107 	mla	r1, r2, r7, r1
90011a54:	fb9c fcfe 	sdiv	ip, ip, lr
90011a58:	fb91 f1fe 	sdiv	r1, r1, lr
90011a5c:	ea0c 0c08 	and.w	ip, ip, r8
90011a60:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90011a64:	ea4c 0101 	orr.w	r1, ip, r1
90011a68:	f000 0c1f 	and.w	ip, r0, #31
90011a6c:	9805      	ldr	r0, [sp, #20]
90011a6e:	fb02 0c0c 	mla	ip, r2, ip, r0
90011a72:	fb9c fcfe 	sdiv	ip, ip, lr
90011a76:	f00c 0c1f 	and.w	ip, ip, #31
90011a7a:	ea41 010c 	orr.w	r1, r1, ip
90011a7e:	f824 1b02 	strh.w	r1, [r4], #2
90011a82:	e7d9      	b.n	90011a38 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
90011a84:	9a02      	ldr	r2, [sp, #8]
90011a86:	441a      	add	r2, r3
90011a88:	4617      	mov	r7, r2
90011a8a:	441e      	add	r6, r3
90011a8c:	b236      	sxth	r6, r6
90011a8e:	42be      	cmp	r6, r7
90011a90:	f340 80f6 	ble.w	90011c80 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011a94:	ed95 7a07 	vldr	s14, [r5, #28]
90011a98:	ee06 7a90 	vmov	s13, r7
90011a9c:	ee37 7a87 	vadd.f32	s14, s15, s14
90011aa0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90011aa4:	eeb4 7ae6 	vcmpe.f32	s14, s13
90011aa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011aac:	f340 80b2 	ble.w	90011c14 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
90011ab0:	ee06 6a10 	vmov	s12, r6
90011ab4:	ee76 7ae7 	vsub.f32	s15, s13, s15
90011ab8:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 90011c8c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
90011abc:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
90011ac0:	7c2b      	ldrb	r3, [r5, #16]
90011ac2:	eeb4 7ac6 	vcmpe.f32	s14, s12
90011ac6:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 90011c90 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
90011aca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011ace:	bfd6      	itet	le
90011ad0:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
90011ad4:	46b0      	movgt	r8, r6
90011ad6:	ee17 8a10 	vmovle	r8, s14
90011ada:	ed95 7a08 	vldr	s14, [r5, #32]
90011ade:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011ae2:	eba8 0707 	sub.w	r7, r8, r7
90011ae6:	eb04 0747 	add.w	r7, r4, r7, lsl #1
90011aea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011aee:	fe38 8a06 	vselgt.f32	s16, s16, s12
90011af2:	eea7 8a27 	vfma.f32	s16, s14, s15
90011af6:	b1db      	cbz	r3, 90011b30 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
90011af8:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90011afc:	d118      	bne.n	90011b30 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
90011afe:	42bc      	cmp	r4, r7
90011b00:	d262      	bcs.n	90011bc8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90011b02:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011b06:	68eb      	ldr	r3, [r5, #12]
90011b08:	4649      	mov	r1, r9
90011b0a:	ee17 0a90 	vmov	r0, s15
90011b0e:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
90011b12:	b2d3      	uxtb	r3, r2
90011b14:	9300      	str	r3, [sp, #0]
90011b16:	f3c2 2307 	ubfx	r3, r2, #8, #8
90011b1a:	f3c2 4207 	ubfx	r2, r2, #16, #8
90011b1e:	f7ff fe13 	bl	90011748 <_ZN8touchgfxL10applyNoiseEiihhh>
90011b22:	f824 0b02 	strh.w	r0, [r4], #2
90011b26:	edd5 7a08 	vldr	s15, [r5, #32]
90011b2a:	ee38 8a27 	vadd.f32	s16, s16, s15
90011b2e:	e7e6      	b.n	90011afe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
90011b30:	f8df b160 	ldr.w	fp, [pc, #352]	@ 90011c94 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90011b34:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90011b38:	42bc      	cmp	r4, r7
90011b3a:	d245      	bcs.n	90011bc8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90011b3c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011b40:	68eb      	ldr	r3, [r5, #12]
90011b42:	f8b4 e000 	ldrh.w	lr, [r4]
90011b46:	ee17 2a90 	vmov	r2, s15
90011b4a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90011b4e:	0e13      	lsrs	r3, r2, #24
90011b50:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
90011b54:	fb03 f30a 	mul.w	r3, r3, sl
90011b58:	b289      	uxth	r1, r1
90011b5a:	1c58      	adds	r0, r3, #1
90011b5c:	eb00 2023 	add.w	r0, r0, r3, asr #8
90011b60:	ea0e 030b 	and.w	r3, lr, fp
90011b64:	1200      	asrs	r0, r0, #8
90011b66:	ea6f 0c00 	mvn.w	ip, r0
90011b6a:	fa5f fc8c 	uxtb.w	ip, ip
90011b6e:	fb0c f303 	mul.w	r3, ip, r3
90011b72:	fb00 3101 	mla	r1, r0, r1, r3
90011b76:	fb91 f1f9 	sdiv	r1, r1, r9
90011b7a:	ea01 030b 	and.w	r3, r1, fp
90011b7e:	9302      	str	r3, [sp, #8]
90011b80:	0953      	lsrs	r3, r2, #5
90011b82:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90011b86:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90011b8a:	4619      	mov	r1, r3
90011b8c:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
90011b90:	f00e 0e1f 	and.w	lr, lr, #31
90011b94:	fb0c f303 	mul.w	r3, ip, r3
90011b98:	fb0c fc0e 	mul.w	ip, ip, lr
90011b9c:	fb00 3301 	mla	r3, r0, r1, r3
90011ba0:	9902      	ldr	r1, [sp, #8]
90011ba2:	fb00 c002 	mla	r0, r0, r2, ip
90011ba6:	fb93 f3f9 	sdiv	r3, r3, r9
90011baa:	fb90 f0f9 	sdiv	r0, r0, r9
90011bae:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90011bb2:	f000 001f 	and.w	r0, r0, #31
90011bb6:	4319      	orrs	r1, r3
90011bb8:	4301      	orrs	r1, r0
90011bba:	f824 1b02 	strh.w	r1, [r4], #2
90011bbe:	edd5 7a08 	vldr	s15, [r5, #32]
90011bc2:	ee38 8a27 	vadd.f32	s16, s16, s15
90011bc6:	e7b7      	b.n	90011b38 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
90011bc8:	4546      	cmp	r6, r8
90011bca:	dd59      	ble.n	90011c80 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011bcc:	edd5 7a08 	vldr	s15, [r5, #32]
90011bd0:	f640 73fc 	movw	r3, #4092	@ 0xffc
90011bd4:	68ea      	ldr	r2, [r5, #12]
90011bd6:	eba6 0608 	sub.w	r6, r6, r8
90011bda:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90011bde:	7c29      	ldrb	r1, [r5, #16]
90011be0:	eb04 0646 	add.w	r6, r4, r6, lsl #1
90011be4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011be8:	bfd8      	it	le
90011bea:	2300      	movle	r3, #0
90011bec:	58d2      	ldr	r2, [r2, r3]
90011bee:	0a10      	lsrs	r0, r2, #8
90011bf0:	f3c2 07c4 	ubfx	r7, r2, #3, #5
90011bf4:	0953      	lsrs	r3, r2, #5
90011bf6:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90011bfa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90011bfe:	b159      	cbz	r1, 90011c18 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90011c00:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90011c04:	d108      	bne.n	90011c18 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90011c06:	4318      	orrs	r0, r3
90011c08:	4338      	orrs	r0, r7
90011c0a:	42b4      	cmp	r4, r6
90011c0c:	d238      	bcs.n	90011c80 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011c0e:	f824 0b02 	strh.w	r0, [r4], #2
90011c12:	e7fa      	b.n	90011c0a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
90011c14:	46b8      	mov	r8, r7
90011c16:	e7d9      	b.n	90011bcc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
90011c18:	0e12      	lsrs	r2, r2, #24
90011c1a:	f8df c078 	ldr.w	ip, [pc, #120]	@ 90011c94 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90011c1e:	fb02 f10a 	mul.w	r1, r2, sl
90011c22:	1c4a      	adds	r2, r1, #1
90011c24:	eb02 2221 	add.w	r2, r2, r1, asr #8
90011c28:	1212      	asrs	r2, r2, #8
90011c2a:	fb02 f507 	mul.w	r5, r2, r7
90011c2e:	27ff      	movs	r7, #255	@ 0xff
90011c30:	4350      	muls	r0, r2
90011c32:	4353      	muls	r3, r2
90011c34:	43d2      	mvns	r2, r2
90011c36:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90011c3a:	42b4      	cmp	r4, r6
90011c3c:	d220      	bcs.n	90011c80 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011c3e:	f8b4 e000 	ldrh.w	lr, [r4]
90011c42:	ea0e 010c 	and.w	r1, lr, ip
90011c46:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90011c4a:	f00e 0e1f 	and.w	lr, lr, #31
90011c4e:	fb02 0101 	mla	r1, r2, r1, r0
90011c52:	fb02 3808 	mla	r8, r2, r8, r3
90011c56:	fb02 5e0e 	mla	lr, r2, lr, r5
90011c5a:	fb91 f1f7 	sdiv	r1, r1, r7
90011c5e:	fb98 f8f7 	sdiv	r8, r8, r7
90011c62:	fb9e fef7 	sdiv	lr, lr, r7
90011c66:	ea01 010c 	and.w	r1, r1, ip
90011c6a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90011c6e:	f00e 0e1f 	and.w	lr, lr, #31
90011c72:	ea41 0108 	orr.w	r1, r1, r8
90011c76:	ea41 010e 	orr.w	r1, r1, lr
90011c7a:	f824 1b02 	strh.w	r1, [r4], #2
90011c7e:	e7dc      	b.n	90011c3a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
90011c80:	b007      	add	sp, #28
90011c82:	ecbd 8b02 	vpop	{d8}
90011c86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011c8a:	bf00      	nop
90011c8c:	00000000 	.word	0x00000000
90011c90:	447ffffe 	.word	0x447ffffe
90011c94:	fffff800 	.word	0xfffff800

90011c98 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
90011c98:	4770      	bx	lr

90011c9a <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
90011c9a:	4770      	bx	lr

90011c9c <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
90011c9c:	b510      	push	{r4, lr}
90011c9e:	4604      	mov	r4, r0
90011ca0:	2124      	movs	r1, #36	@ 0x24
90011ca2:	f015 fc3d 	bl	90027520 <_ZdlPvj>
90011ca6:	4620      	mov	r0, r4
90011ca8:	bd10      	pop	{r4, pc}
	...

90011cac <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90011cac:	094a      	lsrs	r2, r1, #5
90011cae:	4b06      	ldr	r3, [pc, #24]	@ (90011cc8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90011cb0:	60c1      	str	r1, [r0, #12]
90011cb2:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90011cb6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90011cba:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90011cbe:	4313      	orrs	r3, r2
90011cc0:	4319      	orrs	r1, r3
90011cc2:	8201      	strh	r1, [r0, #16]
90011cc4:	4770      	bx	lr
90011cc6:	bf00      	nop
90011cc8:	fffff800 	.word	0xfffff800

90011ccc <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90011ccc:	f1a0 0008 	sub.w	r0, r0, #8
90011cd0:	e7ec      	b.n	90011cac <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90011cd2:	bf00      	nop

90011cd4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90011cd4:	b508      	push	{r3, lr}
90011cd6:	4b05      	ldr	r3, [pc, #20]	@ (90011cec <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90011cd8:	6818      	ldr	r0, [r3, #0]
90011cda:	6803      	ldr	r3, [r0, #0]
90011cdc:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
90011ce0:	4798      	blx	r3
90011ce2:	1e43      	subs	r3, r0, #1
90011ce4:	4258      	negs	r0, r3
90011ce6:	4158      	adcs	r0, r3
90011ce8:	bd08      	pop	{r3, pc}
90011cea:	bf00      	nop
90011cec:	2001aa40 	.word	0x2001aa40

90011cf0 <_ZN8touchgfx13PainterRGB565D1Ev>:
90011cf0:	4770      	bx	lr

90011cf2 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90011cf2:	3808      	subs	r0, #8
90011cf4:	4770      	bx	lr

90011cf6 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90011cf6:	b430      	push	{r4, r5}
90011cf8:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90011cfc:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90011d00:	8a02      	ldrh	r2, [r0, #16]
90011d02:	f89d 3010 	ldrb.w	r3, [sp, #16]
90011d06:	4629      	mov	r1, r5
90011d08:	9202      	str	r2, [sp, #8]
90011d0a:	68c2      	ldr	r2, [r0, #12]
90011d0c:	4620      	mov	r0, r4
90011d0e:	bc30      	pop	{r4, r5}
90011d10:	f7ef baa0 	b.w	90001254 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90011d14 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90011d14:	f7ef ba7e 	b.w	90001214 <_ZN8touchgfx5paint8tearDownEv>

90011d18 <_ZN8touchgfx13PainterRGB565D0Ev>:
90011d18:	b510      	push	{r4, lr}
90011d1a:	4604      	mov	r4, r0
90011d1c:	2114      	movs	r1, #20
90011d1e:	f015 fbff 	bl	90027520 <_ZdlPvj>
90011d22:	4620      	mov	r0, r4
90011d24:	bd10      	pop	{r4, pc}

90011d26 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90011d26:	f1a0 0008 	sub.w	r0, r0, #8
90011d2a:	e7f5      	b.n	90011d18 <_ZN8touchgfx13PainterRGB565D0Ev>

90011d2c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
90011d2c:	2300      	movs	r3, #0
90011d2e:	84c3      	strh	r3, [r0, #38]	@ 0x26
90011d30:	8503      	strh	r3, [r0, #40]	@ 0x28
90011d32:	8543      	strh	r3, [r0, #42]	@ 0x2a
90011d34:	8583      	strh	r3, [r0, #44]	@ 0x2c
90011d36:	6980      	ldr	r0, [r0, #24]
90011d38:	b110      	cbz	r0, 90011d40 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
90011d3a:	6803      	ldr	r3, [r0, #0]
90011d3c:	691b      	ldr	r3, [r3, #16]
90011d3e:	4718      	bx	r3
90011d40:	4770      	bx	lr

90011d42 <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
90011d42:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
90011d46:	4770      	bx	lr

90011d48 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
90011d48:	b538      	push	{r3, r4, r5, lr}
90011d4a:	0e0b      	lsrs	r3, r1, #24
90011d4c:	4604      	mov	r4, r0
90011d4e:	460d      	mov	r5, r1
90011d50:	7783      	strb	r3, [r0, #30]
90011d52:	6803      	ldr	r3, [r0, #0]
90011d54:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90011d56:	4798      	blx	r3
90011d58:	6803      	ldr	r3, [r0, #0]
90011d5a:	4629      	mov	r1, r5
90011d5c:	689b      	ldr	r3, [r3, #8]
90011d5e:	4798      	blx	r3
90011d60:	6823      	ldr	r3, [r4, #0]
90011d62:	4620      	mov	r0, r4
90011d64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90011d66:	4798      	blx	r3
90011d68:	61a0      	str	r0, [r4, #24]
90011d6a:	bd38      	pop	{r3, r4, r5, pc}

90011d6c <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
90011d6c:	7741      	strb	r1, [r0, #29]
90011d6e:	4770      	bx	lr

90011d70 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
90011d70:	b530      	push	{r4, r5, lr}
90011d72:	460d      	mov	r5, r1
90011d74:	f100 0434 	add.w	r4, r0, #52	@ 0x34
90011d78:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90011d7a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011d7c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90011d7e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011d80:	682b      	ldr	r3, [r5, #0]
90011d82:	6023      	str	r3, [r4, #0]
90011d84:	bd30      	pop	{r4, r5, pc}

90011d86 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
90011d86:	b538      	push	{r3, r4, r5, lr}
90011d88:	4604      	mov	r4, r0
90011d8a:	1d03      	adds	r3, r0, #4
90011d8c:	6808      	ldr	r0, [r1, #0]
90011d8e:	2500      	movs	r5, #0
90011d90:	6849      	ldr	r1, [r1, #4]
90011d92:	c303      	stmia	r3!, {r0, r1}
90011d94:	6813      	ldr	r3, [r2, #0]
90011d96:	f104 0034 	add.w	r0, r4, #52	@ 0x34
90011d9a:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
90011d9e:	6853      	ldr	r3, [r2, #4]
90011da0:	61a5      	str	r5, [r4, #24]
90011da2:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
90011da6:	f004 feb9 	bl	90016b1c <_ZN8touchgfx9Matrix3x35resetEv>
90011daa:	23ff      	movs	r3, #255	@ 0xff
90011dac:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
90011db0:	7763      	strb	r3, [r4, #29]
90011db2:	77a3      	strb	r3, [r4, #30]
90011db4:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
90011db8:	6323      	str	r3, [r4, #48]	@ 0x30
90011dba:	2301      	movs	r3, #1
90011dbc:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
90011dc0:	bd38      	pop	{r3, r4, r5, pc}
	...

90011dc4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
90011dc4:	ee70 7a41 	vsub.f32	s15, s0, s2
90011dc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011dcc:	eef5 7a40 	vcmp.f32	s15, #0.0
90011dd0:	4605      	mov	r5, r0
90011dd2:	ed2d 8b0a 	vpush	{d8-d12}
90011dd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011dda:	b087      	sub	sp, #28
90011ddc:	eef0 9a40 	vmov.f32	s19, s0
90011de0:	6802      	ldr	r2, [r0, #0]
90011de2:	eeb0 aa60 	vmov.f32	s20, s1
90011de6:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
90011dea:	eeb0 9a41 	vmov.f32	s18, s2
90011dee:	9f19      	ldr	r7, [sp, #100]	@ 0x64
90011df0:	eef0 8a61 	vmov.f32	s17, s3
90011df4:	eeb0 ca42 	vmov.f32	s24, s4
90011df8:	eef0 ca62 	vmov.f32	s25, s5
90011dfc:	d112      	bne.n	90011e24 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90011dfe:	ee70 7ae1 	vsub.f32	s15, s1, s3
90011e02:	eef5 7a40 	vcmp.f32	s15, #0.0
90011e06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011e0a:	d10b      	bne.n	90011e24 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90011e0c:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90011e10:	6a92      	ldr	r2, [r2, #40]	@ 0x28
90011e12:	3901      	subs	r1, #1
90011e14:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
90011e18:	b007      	add	sp, #28
90011e1a:	ecbd 8b0a 	vpop	{d8-d12}
90011e1e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011e22:	4710      	bx	r2
90011e24:	23ff      	movs	r3, #255	@ 0xff
90011e26:	4628      	mov	r0, r5
90011e28:	f105 0834 	add.w	r8, r5, #52	@ 0x34
90011e2c:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 900120f4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x330>
90011e30:	77ab      	strb	r3, [r5, #30]
90011e32:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90011e34:	4798      	blx	r3
90011e36:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
90011e3a:	eeb0 0a69 	vmov.f32	s0, s19
90011e3e:	4604      	mov	r4, r0
90011e40:	80c3      	strh	r3, [r0, #6]
90011e42:	eef0 0a4a 	vmov.f32	s1, s20
90011e46:	4640      	mov	r0, r8
90011e48:	f004 ff17 	bl	90016c7a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011e4c:	eeb0 ba40 	vmov.f32	s22, s0
90011e50:	ed8d 0a00 	vstr	s0, [sp]
90011e54:	eeb0 0a49 	vmov.f32	s0, s18
90011e58:	eef0 ba60 	vmov.f32	s23, s1
90011e5c:	edcd 0a01 	vstr	s1, [sp, #4]
90011e60:	4640      	mov	r0, r8
90011e62:	eef0 0a68 	vmov.f32	s1, s17
90011e66:	f004 ff08 	bl	90016c7a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011e6a:	eeb4 ba40 	vcmp.f32	s22, s0
90011e6e:	eeb0 8a40 	vmov.f32	s16, s0
90011e72:	ed8d 0a02 	vstr	s0, [sp, #8]
90011e76:	eef0 aa60 	vmov.f32	s21, s1
90011e7a:	edcd 0a03 	vstr	s1, [sp, #12]
90011e7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011e82:	eef4 ba60 	vcmp.f32	s23, s1
90011e86:	bf0c      	ite	eq
90011e88:	2301      	moveq	r3, #1
90011e8a:	2300      	movne	r3, #0
90011e8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011e90:	eeb4 ba40 	vcmp.f32	s22, s0
90011e94:	7463      	strb	r3, [r4, #17]
90011e96:	bf0c      	ite	eq
90011e98:	2301      	moveq	r3, #1
90011e9a:	2300      	movne	r3, #0
90011e9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011ea0:	74a3      	strb	r3, [r4, #18]
90011ea2:	d031      	beq.n	90011f08 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90011ea4:	eef4 ba60 	vcmp.f32	s23, s1
90011ea8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011eac:	d02c      	beq.n	90011f08 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90011eae:	ee39 9a69 	vsub.f32	s18, s18, s19
90011eb2:	4640      	mov	r0, r8
90011eb4:	ee78 8aca 	vsub.f32	s17, s17, s20
90011eb8:	eef0 0a4a 	vmov.f32	s1, s20
90011ebc:	ee89 7a0c 	vdiv.f32	s14, s18, s24
90011ec0:	eec8 7aac 	vdiv.f32	s15, s17, s25
90011ec4:	eeb0 0a69 	vmov.f32	s0, s19
90011ec8:	eeec 0a87 	vfma.f32	s1, s25, s14
90011ecc:	eea7 0acc 	vfms.f32	s0, s15, s24
90011ed0:	f004 fed3 	bl	90016c7a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011ed4:	f899 3000 	ldrb.w	r3, [r9]
90011ed8:	edcd 0a05 	vstr	s1, [sp, #20]
90011edc:	ee70 0aeb 	vsub.f32	s1, s1, s23
90011ee0:	2b01      	cmp	r3, #1
90011ee2:	bf08      	it	eq
90011ee4:	eef1 7a60 	vnegeq.f32	s15, s1
90011ee8:	ed8d 0a04 	vstr	s0, [sp, #16]
90011eec:	ee30 0a4b 	vsub.f32	s0, s0, s22
90011ef0:	bf04      	itt	eq
90011ef2:	eef0 0a40 	vmoveq.f32	s1, s0
90011ef6:	eeb0 0a67 	vmoveq.f32	s0, s15
90011efa:	eeb5 0a40 	vcmp.f32	s0, #0.0
90011efe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011f02:	d135      	bne.n	90011f70 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ac>
90011f04:	2301      	movs	r3, #1
90011f06:	74a3      	strb	r3, [r4, #18]
90011f08:	f899 2000 	ldrb.w	r2, [r9]
90011f0c:	7c63      	ldrb	r3, [r4, #17]
90011f0e:	2a01      	cmp	r2, #1
90011f10:	f040 80a3 	bne.w	9001205a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x296>
90011f14:	2b00      	cmp	r3, #0
90011f16:	d073      	beq.n	90012000 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x23c>
90011f18:	ee3a 7aeb 	vsub.f32	s14, s21, s23
90011f1c:	eddf 6a73 	vldr	s13, [pc, #460]	@ 900120ec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90011f20:	eef4 baea 	vcmpe.f32	s23, s21
90011f24:	eec6 7a87 	vdiv.f32	s15, s13, s14
90011f28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011f2c:	edc4 7a08 	vstr	s15, [r4, #32]
90011f30:	eefd 7aea 	vcvt.s32.f32	s15, s21
90011f34:	ee17 3a90 	vmov	r3, s15
90011f38:	eefd 7aeb 	vcvt.s32.f32	s15, s23
90011f3c:	b21a      	sxth	r2, r3
90011f3e:	ee17 3a90 	vmov	r3, s15
90011f42:	bf48      	it	mi
90011f44:	8162      	strhmi	r2, [r4, #10]
90011f46:	b21b      	sxth	r3, r3
90011f48:	bf56      	itet	pl
90011f4a:	8122      	strhpl	r2, [r4, #8]
90011f4c:	8123      	strhmi	r3, [r4, #8]
90011f4e:	8163      	strhpl	r3, [r4, #10]
90011f50:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90011f54:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90011f58:	1a9b      	subs	r3, r3, r2
90011f5a:	ee07 3a90 	vmov	s15, r3
90011f5e:	2300      	movs	r3, #0
90011f60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90011f64:	7463      	strb	r3, [r4, #17]
90011f66:	2301      	movs	r3, #1
90011f68:	edc4 7a07 	vstr	s15, [r4, #28]
90011f6c:	74a3      	strb	r3, [r4, #18]
90011f6e:	e03f      	b.n	90011ff0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90011f70:	ee80 7a80 	vdiv.f32	s14, s1, s0
90011f74:	eeb5 7a40 	vcmp.f32	s14, #0.0
90011f78:	ed84 7a05 	vstr	s14, [r4, #20]
90011f7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011f80:	d102      	bne.n	90011f88 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c4>
90011f82:	2301      	movs	r3, #1
90011f84:	7463      	strb	r3, [r4, #17]
90011f86:	e7bf      	b.n	90011f08 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90011f88:	2b01      	cmp	r3, #1
90011f8a:	ee38 8a4b 	vsub.f32	s16, s16, s22
90011f8e:	ee7a aaeb 	vsub.f32	s21, s21, s23
90011f92:	bf0b      	itete	eq
90011f94:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
90011f98:	eef0 7a6b 	vmovne.f32	s15, s23
90011f9c:	ee07 2a90 	vmoveq	s15, r2
90011fa0:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
90011fa4:	bf02      	ittt	eq
90011fa6:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
90011faa:	ee77 7acb 	vsubeq.f32	s15, s15, s22
90011fae:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
90011fb2:	2b01      	cmp	r3, #1
90011fb4:	edc4 7a06 	vstr	s15, [r4, #24]
90011fb8:	bf02      	ittt	eq
90011fba:	eef1 7a48 	vnegeq.f32	s15, s16
90011fbe:	eeb0 8a6a 	vmoveq.f32	s16, s21
90011fc2:	eef0 aa67 	vmoveq.f32	s21, s15
90011fc6:	eeca 7a87 	vdiv.f32	s15, s21, s14
90011fca:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 900120f0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
90011fce:	ee38 8a67 	vsub.f32	s16, s16, s15
90011fd2:	eec7 7a08 	vdiv.f32	s15, s14, s16
90011fd6:	ed84 8a07 	vstr	s16, [r4, #28]
90011fda:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
90011fde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011fe2:	edc4 7a08 	vstr	s15, [r4, #32]
90011fe6:	d503      	bpl.n	90011ff0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90011fe8:	eeb1 8a48 	vneg.f32	s16, s16
90011fec:	ed84 8a07 	vstr	s16, [r4, #28]
90011ff0:	60e7      	str	r7, [r4, #12]
90011ff2:	7426      	strb	r6, [r4, #16]
90011ff4:	61ac      	str	r4, [r5, #24]
90011ff6:	b007      	add	sp, #28
90011ff8:	ecbd 8b0a 	vpop	{d8-d12}
90011ffc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012000:	7ca3      	ldrb	r3, [r4, #18]
90012002:	2b00      	cmp	r3, #0
90012004:	d0f4      	beq.n	90011ff0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012006:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001200a:	eddf 6a38 	vldr	s13, [pc, #224]	@ 900120ec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
9001200e:	ee00 3a10 	vmov	s0, r3
90012012:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
90012016:	ee30 8a48 	vsub.f32	s16, s0, s16
9001201a:	ee30 0a4b 	vsub.f32	s0, s0, s22
9001201e:	ee38 7a40 	vsub.f32	s14, s16, s0
90012022:	eeb4 8ac0 	vcmpe.f32	s16, s0
90012026:	eec6 7a87 	vdiv.f32	s15, s13, s14
9001202a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001202e:	edc4 7a08 	vstr	s15, [r4, #32]
90012032:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90012036:	ee17 3a90 	vmov	r3, s15
9001203a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
9001203e:	b21a      	sxth	r2, r3
90012040:	ee17 3a90 	vmov	r3, s15
90012044:	bfc8      	it	gt
90012046:	8162      	strhgt	r2, [r4, #10]
90012048:	b21b      	sxth	r3, r3
9001204a:	bfd6      	itet	le
9001204c:	8122      	strhle	r2, [r4, #8]
9001204e:	8123      	strhgt	r3, [r4, #8]
90012050:	8163      	strhle	r3, [r4, #10]
90012052:	2301      	movs	r3, #1
90012054:	7463      	strb	r3, [r4, #17]
90012056:	2300      	movs	r3, #0
90012058:	e788      	b.n	90011f6c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
9001205a:	b1e3      	cbz	r3, 90012096 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2d2>
9001205c:	ee3a 7aeb 	vsub.f32	s14, s21, s23
90012060:	eddf 6a22 	vldr	s13, [pc, #136]	@ 900120ec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90012064:	eef4 baea 	vcmpe.f32	s23, s21
90012068:	eec6 7a87 	vdiv.f32	s15, s13, s14
9001206c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012070:	edc4 7a08 	vstr	s15, [r4, #32]
90012074:	eefd 7aea 	vcvt.s32.f32	s15, s21
90012078:	ee17 3a90 	vmov	r3, s15
9001207c:	eefd 7aeb 	vcvt.s32.f32	s15, s23
90012080:	b21a      	sxth	r2, r3
90012082:	ee17 3a90 	vmov	r3, s15
90012086:	bf48      	it	mi
90012088:	8162      	strhmi	r2, [r4, #10]
9001208a:	b21b      	sxth	r3, r3
9001208c:	bf56      	itet	pl
9001208e:	8122      	strhpl	r2, [r4, #8]
90012090:	8123      	strhmi	r3, [r4, #8]
90012092:	8163      	strhpl	r3, [r4, #10]
90012094:	e7ac      	b.n	90011ff0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012096:	7ca3      	ldrb	r3, [r4, #18]
90012098:	2b00      	cmp	r3, #0
9001209a:	d0a9      	beq.n	90011ff0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
9001209c:	ee38 7a4b 	vsub.f32	s14, s16, s22
900120a0:	eddf 6a12 	vldr	s13, [pc, #72]	@ 900120ec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
900120a4:	eeb4 bac8 	vcmpe.f32	s22, s16
900120a8:	eec6 7a87 	vdiv.f32	s15, s13, s14
900120ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900120b0:	edc4 7a08 	vstr	s15, [r4, #32]
900120b4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
900120b8:	ee17 3a90 	vmov	r3, s15
900120bc:	eefd 7acb 	vcvt.s32.f32	s15, s22
900120c0:	b21a      	sxth	r2, r3
900120c2:	ee17 3a90 	vmov	r3, s15
900120c6:	bf48      	it	mi
900120c8:	8162      	strhmi	r2, [r4, #10]
900120ca:	b21b      	sxth	r3, r3
900120cc:	bf56      	itet	pl
900120ce:	8122      	strhpl	r2, [r4, #8]
900120d0:	8123      	strhmi	r3, [r4, #8]
900120d2:	8163      	strhpl	r3, [r4, #10]
900120d4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900120d8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900120dc:	1a9b      	subs	r3, r3, r2
900120de:	ee07 3a90 	vmov	s15, r3
900120e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900120e6:	edc4 7a07 	vstr	s15, [r4, #28]
900120ea:	e781      	b.n	90011ff0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
900120ec:	447ffffe 	.word	0x447ffffe
900120f0:	44800000 	.word	0x44800000
900120f4:	2001aa36 	.word	0x2001aa36

900120f8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
900120f8:	b510      	push	{r4, lr}
900120fa:	ed2d 8b02 	vpush	{d8}
900120fe:	eef0 8a62 	vmov.f32	s17, s5
90012102:	2100      	movs	r1, #0
90012104:	4604      	mov	r4, r0
90012106:	eeb0 8a42 	vmov.f32	s16, s4
9001210a:	f014 ff7b 	bl	90027004 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
9001210e:	eef0 7a68 	vmov.f32	s15, s17
90012112:	6823      	ldr	r3, [r4, #0]
90012114:	4620      	mov	r0, r4
90012116:	689b      	ldr	r3, [r3, #8]
90012118:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001211c:	ee17 2a90 	vmov	r2, s15
90012120:	eef0 7a48 	vmov.f32	s15, s16
90012124:	ecbd 8b02 	vpop	{d8}
90012128:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001212c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012130:	ee17 1a90 	vmov	r1, s15
90012134:	4718      	bx	r3

90012136 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
90012136:	b510      	push	{r4, lr}
90012138:	ed2d 8b02 	vpush	{d8}
9001213c:	eef0 8a63 	vmov.f32	s17, s7
90012140:	2100      	movs	r1, #0
90012142:	4604      	mov	r4, r0
90012144:	eeb0 8a43 	vmov.f32	s16, s6
90012148:	f015 f81e 	bl	90027188 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
9001214c:	eef0 7a68 	vmov.f32	s15, s17
90012150:	6823      	ldr	r3, [r4, #0]
90012152:	4620      	mov	r0, r4
90012154:	689b      	ldr	r3, [r3, #8]
90012156:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001215a:	ee17 2a90 	vmov	r2, s15
9001215e:	eef0 7a48 	vmov.f32	s15, s16
90012162:	ecbd 8b02 	vpop	{d8}
90012166:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001216a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001216e:	ee17 1a90 	vmov	r1, s15
90012172:	4718      	bx	r3

90012174 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
90012174:	b513      	push	{r0, r1, r4, lr}
90012176:	4604      	mov	r4, r0
90012178:	6f40      	ldr	r0, [r0, #116]	@ 0x74
9001217a:	f004 fd7e 	bl	90016c7a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001217e:	eef0 7a60 	vmov.f32	s15, s1
90012182:	4620      	mov	r0, r4
90012184:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012188:	ee17 2a90 	vmov	r2, s15
9001218c:	eef0 7a40 	vmov.f32	s15, s0
90012190:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012194:	ee17 1a90 	vmov	r1, s15
90012198:	b002      	add	sp, #8
9001219a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001219e:	f014 be8b 	b.w	90026eb8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
900121a2:	b513      	push	{r0, r1, r4, lr}
900121a4:	4604      	mov	r4, r0
900121a6:	6f40      	ldr	r0, [r0, #116]	@ 0x74
900121a8:	f004 fd67 	bl	90016c7a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900121ac:	eef0 7a60 	vmov.f32	s15, s1
900121b0:	4620      	mov	r0, r4
900121b2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900121b6:	ee17 2a90 	vmov	r2, s15
900121ba:	eef0 7a40 	vmov.f32	s15, s0
900121be:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900121c2:	ee17 1a90 	vmov	r1, s15
900121c6:	b002      	add	sp, #8
900121c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900121cc:	f014 bec1 	b.w	90026f52 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

900121d0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
900121d0:	b5f0      	push	{r4, r5, r6, r7, lr}
900121d2:	2400      	movs	r4, #0
900121d4:	9f07      	ldr	r7, [sp, #28]
900121d6:	f04f 0e01 	mov.w	lr, #1
900121da:	4626      	mov	r6, r4
900121dc:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
900121e0:	4463      	add	r3, ip
900121e2:	4563      	cmp	r3, ip
900121e4:	d02d      	beq.n	90012242 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
900121e6:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
900121ea:	2d06      	cmp	r5, #6
900121ec:	d8f9      	bhi.n	900121e2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
900121ee:	fa0e f505 	lsl.w	r5, lr, r5
900121f2:	f015 0f66 	tst.w	r5, #102	@ 0x66
900121f6:	d10d      	bne.n	90012214 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
900121f8:	f015 0f10 	tst.w	r5, #16
900121fc:	d117      	bne.n	9001222e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
900121fe:	072d      	lsls	r5, r5, #28
90012200:	d5ef      	bpl.n	900121e2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012202:	3801      	subs	r0, #1
90012204:	b91e      	cbnz	r6, 9001220e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
90012206:	eb07 0580 	add.w	r5, r7, r0, lsl #2
9001220a:	682d      	ldr	r5, [r5, #0]
9001220c:	600d      	str	r5, [r1, #0]
9001220e:	b96c      	cbnz	r4, 9001222c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90012210:	2601      	movs	r6, #1
90012212:	e7e6      	b.n	900121e2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012214:	b926      	cbnz	r6, 90012220 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
90012216:	eb07 0380 	add.w	r3, r7, r0, lsl #2
9001221a:	f853 3c08 	ldr.w	r3, [r3, #-8]
9001221e:	600b      	str	r3, [r1, #0]
90012220:	b924      	cbnz	r4, 9001222c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90012222:	eb07 0080 	add.w	r0, r7, r0, lsl #2
90012226:	f850 3c04 	ldr.w	r3, [r0, #-4]
9001222a:	6013      	str	r3, [r2, #0]
9001222c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001222e:	3801      	subs	r0, #1
90012230:	b91c      	cbnz	r4, 9001223a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
90012232:	eb07 0480 	add.w	r4, r7, r0, lsl #2
90012236:	6824      	ldr	r4, [r4, #0]
90012238:	6014      	str	r4, [r2, #0]
9001223a:	2e00      	cmp	r6, #0
9001223c:	d1f6      	bne.n	9001222c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
9001223e:	2401      	movs	r4, #1
90012240:	e7cf      	b.n	900121e2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012242:	b90e      	cbnz	r6, 90012248 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
90012244:	2300      	movs	r3, #0
90012246:	600b      	str	r3, [r1, #0]
90012248:	2c00      	cmp	r4, #0
9001224a:	d1ef      	bne.n	9001222c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
9001224c:	2300      	movs	r3, #0
9001224e:	e7ec      	b.n	9001222a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

90012250 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
90012250:	b538      	push	{r3, r4, r5, lr}
90012252:	ed2d 8b0a 	vpush	{d8-d12}
90012256:	eef0 ba40 	vmov.f32	s23, s0
9001225a:	4604      	mov	r4, r0
9001225c:	eeb0 ca60 	vmov.f32	s24, s1
90012260:	460d      	mov	r5, r1
90012262:	eef0 aa41 	vmov.f32	s21, s2
90012266:	eeb0 ba61 	vmov.f32	s22, s3
9001226a:	eeb0 9a42 	vmov.f32	s18, s4
9001226e:	eef0 9a62 	vmov.f32	s19, s5
90012272:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
90012276:	ee7b 8a29 	vadd.f32	s17, s22, s19
9001227a:	ee3a 8a89 	vadd.f32	s16, s21, s18
9001227e:	ee68 8a8a 	vmul.f32	s17, s17, s20
90012282:	ee28 8a0a 	vmul.f32	s16, s16, s20
90012286:	ee3c 0a68 	vsub.f32	s0, s24, s17
9001228a:	ee7b 7ac8 	vsub.f32	s15, s23, s16
9001228e:	ee20 0a00 	vmul.f32	s0, s0, s0
90012292:	eea7 0aa7 	vfma.f32	s0, s15, s15
90012296:	f015 f96d 	bl	90027574 <sqrtf>
9001229a:	eeb5 0a40 	vcmp.f32	s0, #0.0
9001229e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900122a2:	d12e      	bne.n	90012302 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
900122a4:	ee79 7a6a 	vsub.f32	s15, s18, s21
900122a8:	ee39 7acb 	vsub.f32	s14, s19, s22
900122ac:	eeb0 8a6a 	vmov.f32	s16, s21
900122b0:	eef0 8a4b 	vmov.f32	s17, s22
900122b4:	eea7 8a8a 	vfma.f32	s16, s15, s20
900122b8:	eee7 8a0a 	vfma.f32	s17, s14, s20
900122bc:	eea7 8a0a 	vfma.f32	s16, s14, s20
900122c0:	eee7 8aca 	vfms.f32	s17, s15, s20
900122c4:	2d02      	cmp	r5, #2
900122c6:	dc2f      	bgt.n	90012328 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
900122c8:	3501      	adds	r5, #1
900122ca:	eef0 1a4b 	vmov.f32	s3, s22
900122ce:	eeb0 1a6a 	vmov.f32	s2, s21
900122d2:	4620      	mov	r0, r4
900122d4:	4629      	mov	r1, r5
900122d6:	eef0 2a68 	vmov.f32	s5, s17
900122da:	eeb0 2a48 	vmov.f32	s4, s16
900122de:	eef0 0a4c 	vmov.f32	s1, s24
900122e2:	eeb0 0a6b 	vmov.f32	s0, s23
900122e6:	f7ff ffb3 	bl	90012250 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
900122ea:	eef0 0a68 	vmov.f32	s1, s17
900122ee:	eeb0 0a48 	vmov.f32	s0, s16
900122f2:	4620      	mov	r0, r4
900122f4:	f7ff ff55 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900122f8:	eeb0 ba68 	vmov.f32	s22, s17
900122fc:	eef0 aa48 	vmov.f32	s21, s16
90012300:	e7b9      	b.n	90012276 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
90012302:	ee38 8a6b 	vsub.f32	s16, s16, s23
90012306:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
9001230a:	ee78 8acc 	vsub.f32	s17, s17, s24
9001230e:	ee28 7a27 	vmul.f32	s14, s16, s15
90012312:	ee68 7aa7 	vmul.f32	s15, s17, s15
90012316:	ee87 8a00 	vdiv.f32	s16, s14, s0
9001231a:	eec7 8a80 	vdiv.f32	s17, s15, s0
9001231e:	ee3b 8a88 	vadd.f32	s16, s23, s16
90012322:	ee7c 8a28 	vadd.f32	s17, s24, s17
90012326:	e7cd      	b.n	900122c4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
90012328:	eef0 0a68 	vmov.f32	s1, s17
9001232c:	4620      	mov	r0, r4
9001232e:	eeb0 0a48 	vmov.f32	s0, s16
90012332:	f7ff ff36 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012336:	ecbd 8b0a 	vpop	{d8-d12}
9001233a:	bd38      	pop	{r3, r4, r5, pc}

9001233c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
9001233c:	b510      	push	{r4, lr}
9001233e:	ed2d 8b0a 	vpush	{d8-d12}
90012342:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
90012346:	4604      	mov	r4, r0
90012348:	eeb0 ca40 	vmov.f32	s24, s0
9001234c:	2b02      	cmp	r3, #2
9001234e:	eeb0 9a60 	vmov.f32	s18, s1
90012352:	eef0 9a41 	vmov.f32	s19, s2
90012356:	eef0 8a61 	vmov.f32	s17, s3
9001235a:	eeb0 ba42 	vmov.f32	s22, s4
9001235e:	eef0 ba62 	vmov.f32	s23, s5
90012362:	eeb0 aa43 	vmov.f32	s20, s6
90012366:	eef0 aa63 	vmov.f32	s21, s7
9001236a:	eeb0 8a44 	vmov.f32	s16, s8
9001236e:	eef0 ca64 	vmov.f32	s25, s9
90012372:	d12c      	bne.n	900123ce <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
90012374:	eef0 0a62 	vmov.f32	s1, s5
90012378:	eeb0 0a42 	vmov.f32	s0, s4
9001237c:	f7ff ff11 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012380:	ee79 9acb 	vsub.f32	s19, s19, s22
90012384:	ee7a caec 	vsub.f32	s25, s21, s25
90012388:	ee78 8aeb 	vsub.f32	s17, s17, s23
9001238c:	ee3a 8a48 	vsub.f32	s16, s20, s16
90012390:	ee69 9aac 	vmul.f32	s19, s19, s25
90012394:	ee28 8a88 	vmul.f32	s16, s17, s16
90012398:	eef4 9ac8 	vcmpe.f32	s19, s16
9001239c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900123a0:	db0f      	blt.n	900123c2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
900123a2:	2101      	movs	r1, #1
900123a4:	eef0 2a6a 	vmov.f32	s5, s21
900123a8:	eeb0 2a4a 	vmov.f32	s4, s20
900123ac:	4620      	mov	r0, r4
900123ae:	eef0 1a6b 	vmov.f32	s3, s23
900123b2:	eeb0 1a4b 	vmov.f32	s2, s22
900123b6:	eef0 0a49 	vmov.f32	s1, s18
900123ba:	eeb0 0a4c 	vmov.f32	s0, s24
900123be:	f7ff ff47 	bl	90012250 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
900123c2:	eef0 0a6a 	vmov.f32	s1, s21
900123c6:	4620      	mov	r0, r4
900123c8:	eeb0 0a4a 	vmov.f32	s0, s20
900123cc:	e035      	b.n	9001243a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
900123ce:	2b01      	cmp	r3, #1
900123d0:	d138      	bne.n	90012444 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
900123d2:	ee31 4ae2 	vsub.f32	s8, s3, s5
900123d6:	ee33 6a48 	vsub.f32	s12, s6, s16
900123da:	ee71 7a42 	vsub.f32	s15, s2, s4
900123de:	ee73 6ae4 	vsub.f32	s13, s7, s9
900123e2:	ee26 7a44 	vnmul.f32	s14, s12, s8
900123e6:	eea7 7aa6 	vfma.f32	s14, s15, s13
900123ea:	eeb5 7a40 	vcmp.f32	s14, #0.0
900123ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900123f2:	d027      	beq.n	90012444 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
900123f4:	ee28 8a63 	vnmul.f32	s16, s16, s7
900123f8:	ee61 8ac2 	vnmul.f32	s17, s3, s4
900123fc:	eea4 8a83 	vfma.f32	s16, s9, s6
90012400:	eee1 8a22 	vfma.f32	s17, s2, s5
90012404:	ee68 7a67 	vnmul.f32	s15, s16, s15
90012408:	ee28 8a44 	vnmul.f32	s16, s16, s8
9001240c:	eee6 7a28 	vfma.f32	s15, s12, s17
90012410:	eea6 8aa8 	vfma.f32	s16, s13, s17
90012414:	ee87 0a87 	vdiv.f32	s0, s15, s14
90012418:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
9001241c:	eec8 0a07 	vdiv.f32	s1, s16, s14
90012420:	ee3c ca40 	vsub.f32	s24, s24, s0
90012424:	ee39 9a60 	vsub.f32	s18, s18, s1
90012428:	ee29 9a09 	vmul.f32	s18, s18, s18
9001242c:	eeac 9a0c 	vfma.f32	s18, s24, s24
90012430:	eef4 7ac9 	vcmpe.f32	s15, s18
90012434:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012438:	db04      	blt.n	90012444 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
9001243a:	f7ff feb2 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001243e:	ecbd 8b0a 	vpop	{d8-d12}
90012442:	bd10      	pop	{r4, pc}
90012444:	eef0 0a6b 	vmov.f32	s1, s23
90012448:	4620      	mov	r0, r4
9001244a:	eeb0 0a4b 	vmov.f32	s0, s22
9001244e:	f7ff fea8 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012452:	e7b6      	b.n	900123c2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

90012454 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
90012454:	b510      	push	{r4, lr}
90012456:	ed2d 8b0c 	vpush	{d8-d13}
9001245a:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
9001245e:	4604      	mov	r4, r0
90012460:	eeb0 9a40 	vmov.f32	s18, s0
90012464:	eef0 9a60 	vmov.f32	s19, s1
90012468:	eef0 aa41 	vmov.f32	s21, s2
9001246c:	eeb0 ba61 	vmov.f32	s22, s3
90012470:	b933      	cbnz	r3, 90012480 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
90012472:	f7ff fe96 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012476:	eef0 0a4b 	vmov.f32	s1, s22
9001247a:	eeb0 0a6a 	vmov.f32	s0, s21
9001247e:	e015      	b.n	900124ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
90012480:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90012484:	2b02      	cmp	r3, #2
90012486:	ee71 8a40 	vsub.f32	s17, s2, s0
9001248a:	ee31 8ae0 	vsub.f32	s16, s3, s1
9001248e:	ee68 8aa7 	vmul.f32	s17, s17, s15
90012492:	ee28 8a27 	vmul.f32	s16, s16, s15
90012496:	d10f      	bne.n	900124b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
90012498:	ee70 0ae8 	vsub.f32	s1, s1, s17
9001249c:	ee30 0a08 	vadd.f32	s0, s0, s16
900124a0:	f7ff fe7f 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900124a4:	ee7b 0a68 	vsub.f32	s1, s22, s17
900124a8:	ee3a 0a88 	vadd.f32	s0, s21, s16
900124ac:	4620      	mov	r0, r4
900124ae:	f7ff fe78 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900124b2:	ecbd 8b0c 	vpop	{d8-d13}
900124b6:	bd10      	pop	{r4, pc}
900124b8:	f7ff fe73 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900124bc:	eef0 0a69 	vmov.f32	s1, s19
900124c0:	eeb0 0a49 	vmov.f32	s0, s18
900124c4:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 900125f4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
900124c8:	eeb1 aa68 	vneg.f32	s20, s17
900124cc:	eddf ba4a 	vldr	s23, [pc, #296]	@ 900125f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
900124d0:	eee8 0a27 	vfma.f32	s1, s16, s15
900124d4:	4620      	mov	r0, r4
900124d6:	eea8 0aa7 	vfma.f32	s0, s17, s15
900124da:	ed9f ca48 	vldr	s24, [pc, #288]	@ 900125fc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
900124de:	eddf ca48 	vldr	s25, [pc, #288]	@ 90012600 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
900124e2:	ed9f da48 	vldr	s26, [pc, #288]	@ 90012604 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
900124e6:	eeea 0a2b 	vfma.f32	s1, s20, s23
900124ea:	eea8 0a2b 	vfma.f32	s0, s16, s23
900124ee:	f7ff fe58 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900124f2:	eef0 0a69 	vmov.f32	s1, s19
900124f6:	eeb0 0a49 	vmov.f32	s0, s18
900124fa:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90012608 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
900124fe:	4620      	mov	r0, r4
90012500:	eee8 0a27 	vfma.f32	s1, s16, s15
90012504:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012508:	eeea 0a0c 	vfma.f32	s1, s20, s24
9001250c:	eea8 0a0c 	vfma.f32	s0, s16, s24
90012510:	f7ff fe47 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012514:	eef0 0a69 	vmov.f32	s1, s19
90012518:	eeb0 0a49 	vmov.f32	s0, s18
9001251c:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 9001260c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
90012520:	4620      	mov	r0, r4
90012522:	eee8 0a27 	vfma.f32	s1, s16, s15
90012526:	eea8 0aa7 	vfma.f32	s0, s17, s15
9001252a:	eeea 0a2c 	vfma.f32	s1, s20, s25
9001252e:	eea8 0a2c 	vfma.f32	s0, s16, s25
90012532:	f7ff fe36 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012536:	eef0 0a69 	vmov.f32	s1, s19
9001253a:	eeb0 0a49 	vmov.f32	s0, s18
9001253e:	eddf 7a34 	vldr	s15, [pc, #208]	@ 90012610 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
90012542:	4620      	mov	r0, r4
90012544:	eee8 0a27 	vfma.f32	s1, s16, s15
90012548:	eea8 0aa7 	vfma.f32	s0, s17, s15
9001254c:	eeea 0a0d 	vfma.f32	s1, s20, s26
90012550:	eea8 0a0d 	vfma.f32	s0, s16, s26
90012554:	f7ff fe25 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012558:	ee79 0a88 	vadd.f32	s1, s19, s16
9001255c:	ee39 0a28 	vadd.f32	s0, s18, s17
90012560:	4620      	mov	r0, r4
90012562:	ee70 0ae8 	vsub.f32	s1, s1, s17
90012566:	ee30 0a08 	vadd.f32	s0, s0, s16
9001256a:	f7ff fe1a 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001256e:	eef0 0a69 	vmov.f32	s1, s19
90012572:	eeb0 0a49 	vmov.f32	s0, s18
90012576:	eddf 7a27 	vldr	s15, [pc, #156]	@ 90012614 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
9001257a:	4620      	mov	r0, r4
9001257c:	eee8 0a27 	vfma.f32	s1, s16, s15
90012580:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012584:	eeea 0a0d 	vfma.f32	s1, s20, s26
90012588:	eea8 0a0d 	vfma.f32	s0, s16, s26
9001258c:	f7ff fe09 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012590:	eef0 0a69 	vmov.f32	s1, s19
90012594:	eeb0 0a49 	vmov.f32	s0, s18
90012598:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90012618 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
9001259c:	4620      	mov	r0, r4
9001259e:	eee8 0a27 	vfma.f32	s1, s16, s15
900125a2:	eea8 0aa7 	vfma.f32	s0, s17, s15
900125a6:	eeea 0a2c 	vfma.f32	s1, s20, s25
900125aa:	eea8 0a2c 	vfma.f32	s0, s16, s25
900125ae:	f7ff fdf8 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900125b2:	eef0 0a69 	vmov.f32	s1, s19
900125b6:	eeb0 0a49 	vmov.f32	s0, s18
900125ba:	eddf 7a18 	vldr	s15, [pc, #96]	@ 9001261c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
900125be:	4620      	mov	r0, r4
900125c0:	eee8 0a27 	vfma.f32	s1, s16, s15
900125c4:	eea8 0aa7 	vfma.f32	s0, s17, s15
900125c8:	eeea 0a0c 	vfma.f32	s1, s20, s24
900125cc:	eea8 0a0c 	vfma.f32	s0, s16, s24
900125d0:	f7ff fde7 	bl	900121a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900125d4:	eef0 0a69 	vmov.f32	s1, s19
900125d8:	eeb0 0a49 	vmov.f32	s0, s18
900125dc:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90012620 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
900125e0:	4620      	mov	r0, r4
900125e2:	eee8 0a27 	vfma.f32	s1, s16, s15
900125e6:	eea8 0aa7 	vfma.f32	s0, s17, s15
900125ea:	eeea 0a2b 	vfma.f32	s1, s20, s23
900125ee:	eea8 0a2b 	vfma.f32	s0, s16, s23
900125f2:	e73e      	b.n	90012472 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
900125f4:	3d23d70a 	.word	0x3d23d70a
900125f8:	3e8f5c29 	.word	0x3e8f5c29
900125fc:	3f19999a 	.word	0x3f19999a
90012600:	3f4ccccd 	.word	0x3f4ccccd
90012604:	3f75c28f 	.word	0x3f75c28f
90012608:	3e4ccccd 	.word	0x3e4ccccd
9001260c:	3ecccccd 	.word	0x3ecccccd
90012610:	3f3851ec 	.word	0x3f3851ec
90012614:	3fa3d70a 	.word	0x3fa3d70a
90012618:	3fcccccd 	.word	0x3fcccccd
9001261c:	3fe66666 	.word	0x3fe66666
90012620:	3ffae148 	.word	0x3ffae148

90012624 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
90012624:	b570      	push	{r4, r5, r6, lr}
90012626:	ed2d 8b06 	vpush	{d8-d10}
9001262a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
9001262e:	eef0 aa40 	vmov.f32	s21, s0
90012632:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
90012636:	4604      	mov	r4, r0
90012638:	ee30 8ac8 	vsub.f32	s16, s1, s16
9001263c:	ee30 9a49 	vsub.f32	s18, s0, s18
90012640:	eeb0 aa60 	vmov.f32	s20, s1
90012644:	ee28 0a08 	vmul.f32	s0, s16, s16
90012648:	eea9 0a09 	vfma.f32	s0, s18, s18
9001264c:	f014 ff92 	bl	90027574 <sqrtf>
90012650:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90012654:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012658:	dd36      	ble.n	900126c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
9001265a:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
9001265e:	2600      	movs	r6, #0
90012660:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
90012664:	eec0 6a27 	vdiv.f32	s13, s0, s15
90012668:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
9001266c:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
90012670:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90012674:	eec8 8a26 	vdiv.f32	s17, s16, s13
90012678:	ee89 8a26 	vdiv.f32	s16, s18, s13
9001267c:	ee70 9a28 	vadd.f32	s19, s0, s17
90012680:	ee78 8aaa 	vadd.f32	s17, s17, s21
90012684:	ee30 9ac8 	vsub.f32	s18, s1, s16
90012688:	ee3a 8a48 	vsub.f32	s16, s20, s16
9001268c:	b1fd      	cbz	r5, 900126ce <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
9001268e:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
90012692:	eef0 0a49 	vmov.f32	s1, s18
90012696:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
9001269a:	eeb0 0a69 	vmov.f32	s0, s19
9001269e:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
900126a2:	4620      	mov	r0, r4
900126a4:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
900126a8:	f7ff fd64 	bl	90012174 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
900126ac:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
900126b0:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
900126b4:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
900126b8:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
900126bc:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
900126c0:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
900126c4:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
900126c8:	ecbd 8b06 	vpop	{d8-d10}
900126cc:	bd70      	pop	{r4, r5, r6, pc}
900126ce:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
900126d2:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900126d6:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900126da:	b16b      	cbz	r3, 900126f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
900126dc:	eef0 1a49 	vmov.f32	s3, s18
900126e0:	4620      	mov	r0, r4
900126e2:	eeb0 1a69 	vmov.f32	s2, s19
900126e6:	eef0 0a62 	vmov.f32	s1, s5
900126ea:	eeb0 0a42 	vmov.f32	s0, s4
900126ee:	f7ff feb1 	bl	90012454 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
900126f2:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
900126f6:	e7db      	b.n	900126b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
900126f8:	eef0 4a48 	vmov.f32	s9, s16
900126fc:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90012700:	eeb0 4a68 	vmov.f32	s8, s17
90012704:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90012708:	eef0 3a49 	vmov.f32	s7, s18
9001270c:	4620      	mov	r0, r4
9001270e:	eeb0 3a69 	vmov.f32	s6, s19
90012712:	f7ff fe13 	bl	9001233c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90012716:	e7cb      	b.n	900126b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

90012718 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
90012718:	ee07 2a90 	vmov	s15, r2
9001271c:	ee07 1a10 	vmov	s14, r1
90012720:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90012724:	eddf 7a04 	vldr	s15, [pc, #16]	@ 90012738 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
90012728:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
9001272c:	ee60 0aa7 	vmul.f32	s1, s1, s15
90012730:	ee20 0a27 	vmul.f32	s0, s0, s15
90012734:	f7ff bf76 	b.w	90012624 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012738:	3d000000 	.word	0x3d000000

9001273c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
9001273c:	b538      	push	{r3, r4, r5, lr}
9001273e:	ed2d 8b02 	vpush	{d8}
90012742:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
90012746:	4604      	mov	r4, r0
90012748:	b31d      	cbz	r5, 90012792 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
9001274a:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
9001274e:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90012752:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
90012756:	ee78 8a67 	vsub.f32	s17, s16, s15
9001275a:	ee38 8a27 	vadd.f32	s16, s16, s15
9001275e:	eef0 0a68 	vmov.f32	s1, s17
90012762:	f7ff fd07 	bl	90012174 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90012766:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
9001276a:	eef0 1a48 	vmov.f32	s3, s16
9001276e:	4620      	mov	r0, r4
90012770:	eeb0 0a41 	vmov.f32	s0, s2
90012774:	eef0 0a68 	vmov.f32	s1, s17
90012778:	f7ff fe6c 	bl	90012454 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
9001277c:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90012780:	eef0 1a68 	vmov.f32	s3, s17
90012784:	4620      	mov	r0, r4
90012786:	eef0 0a48 	vmov.f32	s1, s16
9001278a:	eeb0 0a41 	vmov.f32	s0, s2
9001278e:	f7ff fe61 	bl	90012454 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90012792:	4628      	mov	r0, r5
90012794:	ecbd 8b02 	vpop	{d8}
90012798:	bd38      	pop	{r3, r4, r5, pc}

9001279a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
9001279a:	b510      	push	{r4, lr}
9001279c:	ed2d 8b02 	vpush	{d8}
900127a0:	4604      	mov	r4, r0
900127a2:	eeb0 8a40 	vmov.f32	s16, s0
900127a6:	eef0 8a60 	vmov.f32	s17, s1
900127aa:	f7ff ffc7 	bl	9001273c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900127ae:	b9d0      	cbnz	r0, 900127e6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
900127b0:	4620      	mov	r0, r4
900127b2:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
900127b6:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
900127ba:	eef0 0a68 	vmov.f32	s1, s17
900127be:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
900127c2:	eeb0 0a48 	vmov.f32	s0, s16
900127c6:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
900127ca:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900127ce:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900127d2:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
900127d6:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
900127da:	f7ff fdaf 	bl	9001233c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
900127de:	2001      	movs	r0, #1
900127e0:	ecbd 8b02 	vpop	{d8}
900127e4:	bd10      	pop	{r4, pc}
900127e6:	2000      	movs	r0, #0
900127e8:	e7fa      	b.n	900127e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

900127ea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
900127ea:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
900127ee:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
900127f2:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
900127f6:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
900127fa:	f7ff be2b 	b.w	90012454 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

90012800 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
90012800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012804:	b089      	sub	sp, #36	@ 0x24
90012806:	461c      	mov	r4, r3
90012808:	4682      	mov	sl, r0
9001280a:	4615      	mov	r5, r2
9001280c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90012810:	f10d 0820 	add.w	r8, sp, #32
90012814:	9e15      	ldr	r6, [sp, #84]	@ 0x54
90012816:	9304      	str	r3, [sp, #16]
90012818:	2300      	movs	r3, #0
9001281a:	9105      	str	r1, [sp, #20]
9001281c:	9306      	str	r3, [sp, #24]
9001281e:	f848 3d04 	str.w	r3, [r8, #-4]!
90012822:	9b04      	ldr	r3, [sp, #16]
90012824:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
90012828:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
9001282c:	9b05      	ldr	r3, [sp, #20]
9001282e:	429d      	cmp	r5, r3
90012830:	d96d      	bls.n	9001290e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
90012832:	3d01      	subs	r5, #1
90012834:	f819 3005 	ldrb.w	r3, [r9, r5]
90012838:	2b06      	cmp	r3, #6
9001283a:	d8f7      	bhi.n	9001282c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
9001283c:	a201      	add	r2, pc, #4	@ (adr r2, 90012844 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
9001283e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90012842:	bf00      	nop
90012844:	90012863 	.word	0x90012863
90012848:	9001282d 	.word	0x9001282d
9001284c:	90012861 	.word	0x90012861
90012850:	90012885 	.word	0x90012885
90012854:	90012885 	.word	0x90012885
90012858:	90012889 	.word	0x90012889
9001285c:	900128c9 	.word	0x900128c9
90012860:	3c02      	subs	r4, #2
90012862:	4650      	mov	r0, sl
90012864:	9400      	str	r4, [sp, #0]
90012866:	462b      	mov	r3, r5
90012868:	4642      	mov	r2, r8
9001286a:	a906      	add	r1, sp, #24
9001286c:	e9cd 9701 	strd	r9, r7, [sp, #4]
90012870:	f7ff fcae 	bl	900121d0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90012874:	eddd 0a07 	vldr	s1, [sp, #28]
90012878:	ed9d 0a06 	vldr	s0, [sp, #24]
9001287c:	4630      	mov	r0, r6
9001287e:	f7ff fed1 	bl	90012624 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012882:	e7d3      	b.n	9001282c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90012884:	3c01      	subs	r4, #1
90012886:	e7ec      	b.n	90012862 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
90012888:	f1a4 0b04 	sub.w	fp, r4, #4
9001288c:	3c02      	subs	r4, #2
9001288e:	4650      	mov	r0, sl
90012890:	462b      	mov	r3, r5
90012892:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90012896:	f8cd b000 	str.w	fp, [sp]
9001289a:	4642      	mov	r2, r8
9001289c:	a906      	add	r1, sp, #24
9001289e:	e9cd 9701 	strd	r9, r7, [sp, #4]
900128a2:	f7ff fc95 	bl	900121d0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900128a6:	eddd 2a07 	vldr	s5, [sp, #28]
900128aa:	ed9d 2a06 	vldr	s4, [sp, #24]
900128ae:	4630      	mov	r0, r6
900128b0:	ed54 1a01 	vldr	s3, [r4, #-4]
900128b4:	ed14 1a02 	vldr	s2, [r4, #-8]
900128b8:	edd4 0a01 	vldr	s1, [r4, #4]
900128bc:	ed94 0a00 	vldr	s0, [r4]
900128c0:	f7ff fc1a 	bl	900120f8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900128c4:	465c      	mov	r4, fp
900128c6:	e7b1      	b.n	9001282c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
900128c8:	f1a4 0b06 	sub.w	fp, r4, #6
900128cc:	3c02      	subs	r4, #2
900128ce:	4650      	mov	r0, sl
900128d0:	462b      	mov	r3, r5
900128d2:	eb07 0484 	add.w	r4, r7, r4, lsl #2
900128d6:	f8cd b000 	str.w	fp, [sp]
900128da:	4642      	mov	r2, r8
900128dc:	a906      	add	r1, sp, #24
900128de:	e9cd 9701 	strd	r9, r7, [sp, #4]
900128e2:	f7ff fc75 	bl	900121d0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900128e6:	eddd 3a07 	vldr	s7, [sp, #28]
900128ea:	ed9d 3a06 	vldr	s6, [sp, #24]
900128ee:	4630      	mov	r0, r6
900128f0:	ed54 2a03 	vldr	s5, [r4, #-12]
900128f4:	ed14 2a04 	vldr	s4, [r4, #-16]
900128f8:	ed54 1a01 	vldr	s3, [r4, #-4]
900128fc:	ed14 1a02 	vldr	s2, [r4, #-8]
90012900:	edd4 0a01 	vldr	s1, [r4, #4]
90012904:	ed94 0a00 	vldr	s0, [r4]
90012908:	f7ff fc15 	bl	90012136 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
9001290c:	e7da      	b.n	900128c4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
9001290e:	9b04      	ldr	r3, [sp, #16]
90012910:	b113      	cbz	r3, 90012918 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
90012912:	4630      	mov	r0, r6
90012914:	f7ff ff69 	bl	900127ea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
90012918:	b009      	add	sp, #36	@ 0x24
9001291a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001291e:	bf00      	nop

90012920 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
90012920:	eef0 7a60 	vmov.f32	s15, s1
90012924:	6803      	ldr	r3, [r0, #0]
90012926:	689b      	ldr	r3, [r3, #8]
90012928:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001292c:	ee17 2a90 	vmov	r2, s15
90012930:	eef0 7a40 	vmov.f32	s15, s0
90012934:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012938:	ee17 1a90 	vmov	r1, s15
9001293c:	4718      	bx	r3
	...

90012940 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
90012940:	4b04      	ldr	r3, [pc, #16]	@ (90012954 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
90012942:	b510      	push	{r4, lr}
90012944:	4604      	mov	r4, r0
90012946:	f840 3b14 	str.w	r3, [r0], #20
9001294a:	f000 fcdf 	bl	9001330c <_ZN8touchgfx7OutlineD1Ev>
9001294e:	4620      	mov	r0, r4
90012950:	bd10      	pop	{r4, pc}
90012952:	bf00      	nop
90012954:	90035f0c 	.word	0x90035f0c

90012958 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
90012958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001295c:	ed2d 8b04 	vpush	{d8-d9}
90012960:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
90012964:	b0b5      	sub	sp, #212	@ 0xd4
90012966:	4605      	mov	r5, r0
90012968:	468b      	mov	fp, r1
9001296a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001296e:	9206      	str	r2, [sp, #24]
90012970:	461e      	mov	r6, r3
90012972:	2400      	movs	r4, #0
90012974:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012978:	f240 814f 	bls.w	90012c1a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
9001297c:	23ff      	movs	r3, #255	@ 0xff
9001297e:	1d02      	adds	r2, r0, #4
90012980:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 90012c20 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
90012984:	f04f 0800 	mov.w	r8, #0
90012988:	9300      	str	r3, [sp, #0]
9001298a:	af08      	add	r7, sp, #32
9001298c:	6981      	ldr	r1, [r0, #24]
9001298e:	a808      	add	r0, sp, #32
90012990:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
90012992:	eef0 9a49 	vmov.f32	s19, s18
90012996:	f014 f943 	bl	90026c20 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001299a:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
9001299e:	4ba1      	ldr	r3, [pc, #644]	@ (90012c24 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
900129a0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
900129a4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900129a8:	2201      	movs	r2, #1
900129aa:	9308      	str	r3, [sp, #32]
900129ac:	f105 0334 	add.w	r3, r5, #52	@ 0x34
900129b0:	edd5 6a08 	vldr	s13, [r5, #32]
900129b4:	eeb0 8a49 	vmov.f32	s16, s18
900129b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900129bc:	9325      	str	r3, [sp, #148]	@ 0x94
900129be:	f04f 0300 	mov.w	r3, #0
900129c2:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
900129c6:	7f6a      	ldrb	r2, [r5, #29]
900129c8:	eef0 8a49 	vmov.f32	s17, s18
900129cc:	bf48      	it	mi
900129ce:	eef1 7a67 	vnegmi.f32	s15, s15
900129d2:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
900129d6:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
900129da:	46c1      	mov	r9, r8
900129dc:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
900129e0:	f04f 0a01 	mov.w	sl, #1
900129e4:	ee67 7a87 	vmul.f32	s15, s15, s14
900129e8:	7fab      	ldrb	r3, [r5, #30]
900129ea:	942a      	str	r4, [sp, #168]	@ 0xa8
900129ec:	435a      	muls	r2, r3
900129ee:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
900129f2:	ee26 7aa7 	vmul.f32	s14, s13, s15
900129f6:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
900129fa:	1c53      	adds	r3, r2, #1
900129fc:	942b      	str	r4, [sp, #172]	@ 0xac
900129fe:	942c      	str	r4, [sp, #176]	@ 0xb0
90012a00:	ee27 7a26 	vmul.f32	s14, s14, s13
90012a04:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90012a08:	942d      	str	r4, [sp, #180]	@ 0xb4
90012a0a:	942e      	str	r4, [sp, #184]	@ 0xb8
90012a0c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90012a10:	ee67 7a27 	vmul.f32	s15, s14, s15
90012a14:	942f      	str	r4, [sp, #188]	@ 0xbc
90012a16:	9430      	str	r4, [sp, #192]	@ 0xc0
90012a18:	9431      	str	r4, [sp, #196]	@ 0xc4
90012a1a:	9432      	str	r4, [sp, #200]	@ 0xc8
90012a1c:	9433      	str	r4, [sp, #204]	@ 0xcc
90012a1e:	4644      	mov	r4, r8
90012a20:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
90012a24:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
90012a28:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
90012a2c:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
90012a30:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
90012a34:	9b06      	ldr	r3, [sp, #24]
90012a36:	454b      	cmp	r3, r9
90012a38:	f000 80cc 	beq.w	90012bd4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
90012a3c:	f109 0301 	add.w	r3, r9, #1
90012a40:	9305      	str	r3, [sp, #20]
90012a42:	f81b 3009 	ldrb.w	r3, [fp, r9]
90012a46:	2b06      	cmp	r3, #6
90012a48:	d839      	bhi.n	90012abe <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012a4a:	e8df f003 	tbb	[pc, r3]
90012a4e:	3b04      	.short	0x3b04
90012a50:	817c6f60 	.word	0x817c6f60
90012a54:	a0          	.byte	0xa0
90012a55:	00          	.byte	0x00
90012a56:	45c1      	cmp	r9, r8
90012a58:	d92b      	bls.n	90012ab2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90012a5a:	eef0 0a49 	vmov.f32	s1, s18
90012a5e:	4638      	mov	r0, r7
90012a60:	eeb0 0a69 	vmov.f32	s0, s19
90012a64:	f7ff fdde 	bl	90012624 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012a68:	4638      	mov	r0, r7
90012a6a:	f7ff fe67 	bl	9001273c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90012a6e:	4681      	mov	r9, r0
90012a70:	b9f8      	cbnz	r0, 90012ab2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90012a72:	eef0 0a49 	vmov.f32	s1, s18
90012a76:	4638      	mov	r0, r7
90012a78:	eeb0 0a69 	vmov.f32	s0, s19
90012a7c:	f7ff fe8d 	bl	9001279a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90012a80:	4628      	mov	r0, r5
90012a82:	4623      	mov	r3, r4
90012a84:	9a05      	ldr	r2, [sp, #20]
90012a86:	4641      	mov	r1, r8
90012a88:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
90012a8c:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
90012a90:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90012a94:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90012a98:	e9cd 9702 	strd	r9, r7, [sp, #8]
90012a9c:	e9cd b600 	strd	fp, r6, [sp]
90012aa0:	f7ff feae 	bl	90012800 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90012aa4:	eef0 0a49 	vmov.f32	s1, s18
90012aa8:	eeb0 0a69 	vmov.f32	s0, s19
90012aac:	4638      	mov	r0, r7
90012aae:	f7ff fe74 	bl	9001279a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90012ab2:	eeb0 8a49 	vmov.f32	s16, s18
90012ab6:	f8dd 8014 	ldr.w	r8, [sp, #20]
90012aba:	eef0 8a69 	vmov.f32	s17, s19
90012abe:	f8dd 9014 	ldr.w	r9, [sp, #20]
90012ac2:	e7b7      	b.n	90012a34 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
90012ac4:	45c1      	cmp	r9, r8
90012ac6:	d90d      	bls.n	90012ae4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
90012ac8:	4638      	mov	r0, r7
90012aca:	f7ff fe37 	bl	9001273c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90012ace:	b948      	cbnz	r0, 90012ae4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
90012ad0:	4623      	mov	r3, r4
90012ad2:	464a      	mov	r2, r9
90012ad4:	4641      	mov	r1, r8
90012ad6:	4628      	mov	r0, r5
90012ad8:	e9cd a702 	strd	sl, r7, [sp, #8]
90012adc:	e9cd b600 	strd	fp, r6, [sp]
90012ae0:	f7ff fe8e 	bl	90012800 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90012ae4:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90012ae8:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90012aec:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90012af0:	3402      	adds	r4, #2
90012af2:	edd3 8a00 	vldr	s17, [r3]
90012af6:	46c8      	mov	r8, r9
90012af8:	ed93 8a01 	vldr	s16, [r3, #4]
90012afc:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
90012b00:	eef0 9a68 	vmov.f32	s19, s17
90012b04:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
90012b08:	eeb0 9a48 	vmov.f32	s18, s16
90012b0c:	e7d7      	b.n	90012abe <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012b0e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90012b12:	4638      	mov	r0, r7
90012b14:	3402      	adds	r4, #2
90012b16:	edd3 8a00 	vldr	s17, [r3]
90012b1a:	ed93 8a01 	vldr	s16, [r3, #4]
90012b1e:	eeb0 0a68 	vmov.f32	s0, s17
90012b22:	eef0 0a48 	vmov.f32	s1, s16
90012b26:	f7ff fd7d 	bl	90012624 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012b2a:	e7c8      	b.n	90012abe <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012b2c:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90012b30:	edd3 8a00 	vldr	s17, [r3]
90012b34:	eef0 0a48 	vmov.f32	s1, s16
90012b38:	4638      	mov	r0, r7
90012b3a:	eeb0 0a68 	vmov.f32	s0, s17
90012b3e:	3401      	adds	r4, #1
90012b40:	f7ff fd70 	bl	90012624 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012b44:	e7bb      	b.n	90012abe <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012b46:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90012b4a:	ed93 8a00 	vldr	s16, [r3]
90012b4e:	e7f1      	b.n	90012b34 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
90012b50:	00a3      	lsls	r3, r4, #2
90012b52:	eef0 0a48 	vmov.f32	s1, s16
90012b56:	eeb0 0a68 	vmov.f32	s0, s17
90012b5a:	4638      	mov	r0, r7
90012b5c:	f103 0208 	add.w	r2, r3, #8
90012b60:	f103 090c 	add.w	r9, r3, #12
90012b64:	4433      	add	r3, r6
90012b66:	3404      	adds	r4, #4
90012b68:	4432      	add	r2, r6
90012b6a:	44b1      	add	r9, r6
90012b6c:	edd3 1a01 	vldr	s3, [r3, #4]
90012b70:	ed92 2a00 	vldr	s4, [r2]
90012b74:	edd9 2a00 	vldr	s5, [r9]
90012b78:	ed93 1a00 	vldr	s2, [r3]
90012b7c:	9207      	str	r2, [sp, #28]
90012b7e:	f7ff fabb 	bl	900120f8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90012b82:	9a07      	ldr	r2, [sp, #28]
90012b84:	ed99 8a00 	vldr	s16, [r9]
90012b88:	edd2 8a00 	vldr	s17, [r2]
90012b8c:	e797      	b.n	90012abe <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012b8e:	00a3      	lsls	r3, r4, #2
90012b90:	eef0 0a48 	vmov.f32	s1, s16
90012b94:	eeb0 0a68 	vmov.f32	s0, s17
90012b98:	4638      	mov	r0, r7
90012b9a:	f103 0210 	add.w	r2, r3, #16
90012b9e:	f103 0914 	add.w	r9, r3, #20
90012ba2:	4433      	add	r3, r6
90012ba4:	3406      	adds	r4, #6
90012ba6:	4432      	add	r2, r6
90012ba8:	44b1      	add	r9, r6
90012baa:	edd3 2a03 	vldr	s5, [r3, #12]
90012bae:	ed92 3a00 	vldr	s6, [r2]
90012bb2:	edd9 3a00 	vldr	s7, [r9]
90012bb6:	ed93 2a02 	vldr	s4, [r3, #8]
90012bba:	edd3 1a01 	vldr	s3, [r3, #4]
90012bbe:	ed93 1a00 	vldr	s2, [r3]
90012bc2:	9207      	str	r2, [sp, #28]
90012bc4:	f7ff fab7 	bl	90012136 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90012bc8:	9a07      	ldr	r2, [sp, #28]
90012bca:	ed99 8a00 	vldr	s16, [r9]
90012bce:	edd2 8a00 	vldr	s17, [r2]
90012bd2:	e774      	b.n	90012abe <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012bd4:	9b06      	ldr	r3, [sp, #24]
90012bd6:	af08      	add	r7, sp, #32
90012bd8:	4543      	cmp	r3, r8
90012bda:	d90f      	bls.n	90012bfc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
90012bdc:	4638      	mov	r0, r7
90012bde:	f7ff fdad 	bl	9001273c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90012be2:	b958      	cbnz	r0, 90012bfc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
90012be4:	2301      	movs	r3, #1
90012be6:	9703      	str	r7, [sp, #12]
90012be8:	f8cd b000 	str.w	fp, [sp]
90012bec:	4641      	mov	r1, r8
90012bee:	9a06      	ldr	r2, [sp, #24]
90012bf0:	4628      	mov	r0, r5
90012bf2:	e9cd 6301 	strd	r6, r3, [sp, #4]
90012bf6:	4623      	mov	r3, r4
90012bf8:	f7ff fe02 	bl	90012800 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90012bfc:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
90012c00:	4638      	mov	r0, r7
90012c02:	f014 f8a1 	bl	90026d48 <_ZN8touchgfx6Canvas6renderEh>
90012c06:	4604      	mov	r4, r0
90012c08:	4638      	mov	r0, r7
90012c0a:	f7ff fe99 	bl	90012940 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
90012c0e:	4620      	mov	r0, r4
90012c10:	b035      	add	sp, #212	@ 0xd4
90012c12:	ecbd 8b04 	vpop	{d8-d9}
90012c16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012c1a:	2401      	movs	r4, #1
90012c1c:	e7f7      	b.n	90012c0e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
90012c1e:	bf00      	nop
90012c20:	00000000 	.word	0x00000000
90012c24:	90035914 	.word	0x90035914

90012c28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
90012c28:	b510      	push	{r4, lr}
90012c2a:	4604      	mov	r4, r0
90012c2c:	f7ff fe88 	bl	90012940 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
90012c30:	21b0      	movs	r1, #176	@ 0xb0
90012c32:	4620      	mov	r0, r4
90012c34:	f014 fc74 	bl	90027520 <_ZdlPvj>
90012c38:	4620      	mov	r0, r4
90012c3a:	bd10      	pop	{r4, pc}

90012c3c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
90012c3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012c40:	4698      	mov	r8, r3
90012c42:	23ff      	movs	r3, #255	@ 0xff
90012c44:	4607      	mov	r7, r0
90012c46:	4689      	mov	r9, r1
90012c48:	4692      	mov	sl, r2
90012c4a:	1d02      	adds	r2, r0, #4
90012c4c:	f107 0534 	add.w	r5, r7, #52	@ 0x34
90012c50:	2400      	movs	r4, #0
90012c52:	44ca      	add	sl, r9
90012c54:	ed2d 8b06 	vpush	{d8-d10}
90012c58:	b0aa      	sub	sp, #168	@ 0xa8
90012c5a:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 90012e60 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90012c5e:	9300      	str	r3, [sp, #0]
90012c60:	eef0 8a48 	vmov.f32	s17, s16
90012c64:	6981      	ldr	r1, [r0, #24]
90012c66:	a80d      	add	r0, sp, #52	@ 0x34
90012c68:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
90012c6a:	f013 ffd9 	bl	90026c20 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90012c6e:	7f3b      	ldrb	r3, [r7, #28]
90012c70:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 90012e60 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90012c74:	4628      	mov	r0, r5
90012c76:	1e5a      	subs	r2, r3, #1
90012c78:	eeb0 0a60 	vmov.f32	s0, s1
90012c7c:	4253      	negs	r3, r2
90012c7e:	4153      	adcs	r3, r2
90012c80:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
90012c84:	f003 fff9 	bl	90016c7a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012c88:	eeb0 9a40 	vmov.f32	s18, s0
90012c8c:	eef0 9a60 	vmov.f32	s19, s1
90012c90:	45ca      	cmp	sl, r9
90012c92:	f000 80cd 	beq.w	90012e30 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
90012c96:	f819 3b01 	ldrb.w	r3, [r9], #1
90012c9a:	2b06      	cmp	r3, #6
90012c9c:	d8f8      	bhi.n	90012c90 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012c9e:	e8df f003 	tbb	[pc, r3]
90012ca2:	0804      	.short	0x0804
90012ca4:	58533f2a 	.word	0x58533f2a
90012ca8:	8a          	.byte	0x8a
90012ca9:	00          	.byte	0x00
90012caa:	a80d      	add	r0, sp, #52	@ 0x34
90012cac:	f014 f82a 	bl	90026d04 <_ZN8touchgfx6Canvas5closeEv>
90012cb0:	e7ee      	b.n	90012c90 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012cb2:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012cb6:	4628      	mov	r0, r5
90012cb8:	ed93 8a01 	vldr	s16, [r3, #4]
90012cbc:	edd3 8a00 	vldr	s17, [r3]
90012cc0:	eef0 0a48 	vmov.f32	s1, s16
90012cc4:	eeb0 0a68 	vmov.f32	s0, s17
90012cc8:	f003 ffd7 	bl	90016c7a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012ccc:	a80d      	add	r0, sp, #52	@ 0x34
90012cce:	eef0 7a60 	vmov.f32	s15, s1
90012cd2:	eeb0 9a40 	vmov.f32	s18, s0
90012cd6:	eef0 9a60 	vmov.f32	s19, s1
90012cda:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012cde:	ee17 2a90 	vmov	r2, s15
90012ce2:	eef0 7a40 	vmov.f32	s15, s0
90012ce6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012cea:	ee17 1a90 	vmov	r1, s15
90012cee:	f014 f8e3 	bl	90026eb8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90012cf2:	3402      	adds	r4, #2
90012cf4:	e7cc      	b.n	90012c90 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012cf6:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012cfa:	4628      	mov	r0, r5
90012cfc:	edd3 8a00 	vldr	s17, [r3]
90012d00:	ed93 8a01 	vldr	s16, [r3, #4]
90012d04:	eeb0 0a68 	vmov.f32	s0, s17
90012d08:	eef0 0a48 	vmov.f32	s1, s16
90012d0c:	f003 ffb5 	bl	90016c7a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012d10:	a80d      	add	r0, sp, #52	@ 0x34
90012d12:	eeb0 9a40 	vmov.f32	s18, s0
90012d16:	eef0 9a60 	vmov.f32	s19, s1
90012d1a:	f7ff fe01 	bl	90012920 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90012d1e:	e7e8      	b.n	90012cf2 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
90012d20:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012d24:	edd3 8a00 	vldr	s17, [r3]
90012d28:	eef0 0a48 	vmov.f32	s1, s16
90012d2c:	4628      	mov	r0, r5
90012d2e:	eeb0 0a68 	vmov.f32	s0, s17
90012d32:	3401      	adds	r4, #1
90012d34:	f003 ffa1 	bl	90016c7a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012d38:	a80d      	add	r0, sp, #52	@ 0x34
90012d3a:	eef0 9a60 	vmov.f32	s19, s1
90012d3e:	eeb0 9a40 	vmov.f32	s18, s0
90012d42:	f7ff fded 	bl	90012920 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90012d46:	e7a3      	b.n	90012c90 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012d48:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012d4c:	ed93 8a00 	vldr	s16, [r3]
90012d50:	e7ea      	b.n	90012d28 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
90012d52:	1ca3      	adds	r3, r4, #2
90012d54:	4628      	mov	r0, r5
90012d56:	3404      	adds	r4, #4
90012d58:	eb08 0383 	add.w	r3, r8, r3, lsl #2
90012d5c:	ed53 0a01 	vldr	s1, [r3, #-4]
90012d60:	ed13 0a02 	vldr	s0, [r3, #-8]
90012d64:	edd3 8a00 	vldr	s17, [r3]
90012d68:	ed93 8a01 	vldr	s16, [r3, #4]
90012d6c:	f003 ff85 	bl	90016c7a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012d70:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90012d74:	eeb0 0a68 	vmov.f32	s0, s17
90012d78:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90012d7c:	eef0 0a48 	vmov.f32	s1, s16
90012d80:	4628      	mov	r0, r5
90012d82:	f003 ff7a 	bl	90016c7a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012d86:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
90012d8a:	eef0 2a60 	vmov.f32	s5, s1
90012d8e:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
90012d92:	eeb0 2a40 	vmov.f32	s4, s0
90012d96:	a80d      	add	r0, sp, #52	@ 0x34
90012d98:	eeb0 aa40 	vmov.f32	s20, s0
90012d9c:	eef0 aa60 	vmov.f32	s21, s1
90012da0:	eeb0 0a49 	vmov.f32	s0, s18
90012da4:	eef0 0a69 	vmov.f32	s1, s19
90012da8:	f7ff f9a6 	bl	900120f8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90012dac:	eef0 9a6a 	vmov.f32	s19, s21
90012db0:	eeb0 9a4a 	vmov.f32	s18, s20
90012db4:	e76c      	b.n	90012c90 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012db6:	1d26      	adds	r6, r4, #4
90012db8:	4628      	mov	r0, r5
90012dba:	3406      	adds	r4, #6
90012dbc:	eb08 0686 	add.w	r6, r8, r6, lsl #2
90012dc0:	ed56 0a03 	vldr	s1, [r6, #-12]
90012dc4:	ed16 0a04 	vldr	s0, [r6, #-16]
90012dc8:	edd6 8a00 	vldr	s17, [r6]
90012dcc:	ed96 8a01 	vldr	s16, [r6, #4]
90012dd0:	f003 ff53 	bl	90016c7a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012dd4:	ed8d 0a07 	vstr	s0, [sp, #28]
90012dd8:	4628      	mov	r0, r5
90012dda:	ed16 0a02 	vldr	s0, [r6, #-8]
90012dde:	edcd 0a08 	vstr	s1, [sp, #32]
90012de2:	ed56 0a01 	vldr	s1, [r6, #-4]
90012de6:	f003 ff48 	bl	90016c7a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012dea:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90012dee:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90012df2:	eeb0 0a68 	vmov.f32	s0, s17
90012df6:	eef0 0a48 	vmov.f32	s1, s16
90012dfa:	4628      	mov	r0, r5
90012dfc:	f003 ff3d 	bl	90016c7a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012e00:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
90012e04:	eeb0 3a40 	vmov.f32	s6, s0
90012e08:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
90012e0c:	eef0 3a60 	vmov.f32	s7, s1
90012e10:	eddd 1a08 	vldr	s3, [sp, #32]
90012e14:	eeb0 aa40 	vmov.f32	s20, s0
90012e18:	ed9d 1a07 	vldr	s2, [sp, #28]
90012e1c:	eef0 aa60 	vmov.f32	s21, s1
90012e20:	a80d      	add	r0, sp, #52	@ 0x34
90012e22:	eef0 0a69 	vmov.f32	s1, s19
90012e26:	eeb0 0a49 	vmov.f32	s0, s18
90012e2a:	f7ff f984 	bl	90012136 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90012e2e:	e7bd      	b.n	90012dac <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
90012e30:	7f7b      	ldrb	r3, [r7, #29]
90012e32:	a80d      	add	r0, sp, #52	@ 0x34
90012e34:	7fb9      	ldrb	r1, [r7, #30]
90012e36:	4359      	muls	r1, r3
90012e38:	1c4b      	adds	r3, r1, #1
90012e3a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90012e3e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90012e42:	f013 ff81 	bl	90026d48 <_ZN8touchgfx6Canvas6renderEh>
90012e46:	4b07      	ldr	r3, [pc, #28]	@ (90012e64 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
90012e48:	4604      	mov	r4, r0
90012e4a:	a812      	add	r0, sp, #72	@ 0x48
90012e4c:	930d      	str	r3, [sp, #52]	@ 0x34
90012e4e:	f000 fa5d 	bl	9001330c <_ZN8touchgfx7OutlineD1Ev>
90012e52:	4620      	mov	r0, r4
90012e54:	b02a      	add	sp, #168	@ 0xa8
90012e56:	ecbd 8b06 	vpop	{d8-d10}
90012e5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90012e5e:	bf00      	nop
90012e60:	00000000 	.word	0x00000000
90012e64:	90035f0c 	.word	0x90035f0c

90012e68 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
90012e68:	b410      	push	{r4}
90012e6a:	7f04      	ldrb	r4, [r0, #28]
90012e6c:	b11c      	cbz	r4, 90012e76 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
90012e6e:	f85d 4b04 	ldr.w	r4, [sp], #4
90012e72:	f7ff bee3 	b.w	90012c3c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
90012e76:	f85d 4b04 	ldr.w	r4, [sp], #4
90012e7a:	f7ff bd6d 	b.w	90012958 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

90012e80 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
90012e80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012e84:	4691      	mov	r9, r2
90012e86:	4602      	mov	r2, r0
90012e88:	b085      	sub	sp, #20
90012e8a:	4605      	mov	r5, r0
90012e8c:	f852 0f26 	ldr.w	r0, [r2, #38]!
90012e90:	4688      	mov	r8, r1
90012e92:	469a      	mov	sl, r3
90012e94:	ab02      	add	r3, sp, #8
90012e96:	6851      	ldr	r1, [r2, #4]
90012e98:	af02      	add	r7, sp, #8
90012e9a:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
90012e9e:	c303      	stmia	r3!, {r0, r1}
90012ea0:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90012ea4:	2b00      	cmp	r3, #0
90012ea6:	dd08      	ble.n	90012eba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90012ea8:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
90012eac:	2c00      	cmp	r4, #0
90012eae:	dd04      	ble.n	90012eba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90012eb0:	4a2e      	ldr	r2, [pc, #184]	@ (90012f6c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
90012eb2:	7812      	ldrb	r2, [r2, #0]
90012eb4:	b122      	cbz	r2, 90012ec0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
90012eb6:	2a01      	cmp	r2, #1
90012eb8:	d02d      	beq.n	90012f16 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
90012eba:	b005      	add	sp, #20
90012ebc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012ec0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90012ec4:	441c      	add	r4, r3
90012ec6:	b2a4      	uxth	r4, r4
90012ec8:	b226      	sxth	r6, r4
90012eca:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90012ece:	42b3      	cmp	r3, r6
90012ed0:	daf3      	bge.n	90012eba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90012ed2:	4653      	mov	r3, sl
90012ed4:	464a      	mov	r2, r9
90012ed6:	4641      	mov	r1, r8
90012ed8:	4628      	mov	r0, r5
90012eda:	e9cd b700 	strd	fp, r7, [sp]
90012ede:	f7ff ffc3 	bl	90012e68 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90012ee2:	b940      	cbnz	r0, 90012ef6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
90012ee4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90012ee8:	2b01      	cmp	r3, #1
90012eea:	d004      	beq.n	90012ef6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
90012eec:	3301      	adds	r3, #1
90012eee:	105b      	asrs	r3, r3, #1
90012ef0:	f8ad 300e 	strh.w	r3, [sp, #14]
90012ef4:	e7ed      	b.n	90012ed2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
90012ef6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90012efa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90012efe:	4413      	add	r3, r2
90012f00:	b29b      	uxth	r3, r3
90012f02:	441a      	add	r2, r3
90012f04:	f8ad 300a 	strh.w	r3, [sp, #10]
90012f08:	b212      	sxth	r2, r2
90012f0a:	4296      	cmp	r6, r2
90012f0c:	dadd      	bge.n	90012eca <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
90012f0e:	1ae3      	subs	r3, r4, r3
90012f10:	f8ad 300e 	strh.w	r3, [sp, #14]
90012f14:	e7d9      	b.n	90012eca <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
90012f16:	f8bd 4008 	ldrh.w	r4, [sp, #8]
90012f1a:	441c      	add	r4, r3
90012f1c:	b2a4      	uxth	r4, r4
90012f1e:	b226      	sxth	r6, r4
90012f20:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
90012f24:	42b3      	cmp	r3, r6
90012f26:	dac8      	bge.n	90012eba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90012f28:	4653      	mov	r3, sl
90012f2a:	464a      	mov	r2, r9
90012f2c:	4641      	mov	r1, r8
90012f2e:	4628      	mov	r0, r5
90012f30:	e9cd b700 	strd	fp, r7, [sp]
90012f34:	f7ff ff98 	bl	90012e68 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90012f38:	b940      	cbnz	r0, 90012f4c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
90012f3a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90012f3e:	2b01      	cmp	r3, #1
90012f40:	d004      	beq.n	90012f4c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
90012f42:	3301      	adds	r3, #1
90012f44:	105b      	asrs	r3, r3, #1
90012f46:	f8ad 300c 	strh.w	r3, [sp, #12]
90012f4a:	e7ed      	b.n	90012f28 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
90012f4c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90012f50:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90012f54:	4413      	add	r3, r2
90012f56:	b29b      	uxth	r3, r3
90012f58:	441a      	add	r2, r3
90012f5a:	f8ad 3008 	strh.w	r3, [sp, #8]
90012f5e:	b212      	sxth	r2, r2
90012f60:	4296      	cmp	r6, r2
90012f62:	dadd      	bge.n	90012f20 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
90012f64:	1ae3      	subs	r3, r4, r3
90012f66:	f8ad 300c 	strh.w	r3, [sp, #12]
90012f6a:	e7d9      	b.n	90012f20 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
90012f6c:	2001aa36 	.word	0x2001aa36

90012f70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90012f70:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90012f72:	6803      	ldr	r3, [r0, #0]
90012f74:	460d      	mov	r5, r1
90012f76:	4604      	mov	r4, r0
90012f78:	4601      	mov	r1, r0
90012f7a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90012f7c:	a802      	add	r0, sp, #8
90012f7e:	4798      	blx	r3
90012f80:	6828      	ldr	r0, [r5, #0]
90012f82:	6869      	ldr	r1, [r5, #4]
90012f84:	466b      	mov	r3, sp
90012f86:	c303      	stmia	r3!, {r0, r1}
90012f88:	4668      	mov	r0, sp
90012f8a:	4619      	mov	r1, r3
90012f8c:	f7fd fb7a 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
90012f90:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90012f92:	b188      	cbz	r0, 90012fb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012f94:	6803      	ldr	r3, [r0, #0]
90012f96:	1d21      	adds	r1, r4, #4
90012f98:	68db      	ldr	r3, [r3, #12]
90012f9a:	4798      	blx	r3
90012f9c:	b160      	cbz	r0, 90012fb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012f9e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90012fa2:	2b00      	cmp	r3, #0
90012fa4:	dd08      	ble.n	90012fb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012fa6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90012faa:	2d00      	cmp	r5, #0
90012fac:	dd04      	ble.n	90012fb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012fae:	4a2b      	ldr	r2, [pc, #172]	@ (9001305c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90012fb0:	7812      	ldrb	r2, [r2, #0]
90012fb2:	b11a      	cbz	r2, 90012fbc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90012fb4:	2a01      	cmp	r2, #1
90012fb6:	d029      	beq.n	9001300c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90012fb8:	b004      	add	sp, #16
90012fba:	bd70      	pop	{r4, r5, r6, pc}
90012fbc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012fc0:	441d      	add	r5, r3
90012fc2:	b2ad      	uxth	r5, r5
90012fc4:	b22e      	sxth	r6, r5
90012fc6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90012fca:	42b3      	cmp	r3, r6
90012fcc:	daf4      	bge.n	90012fb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012fce:	6823      	ldr	r3, [r4, #0]
90012fd0:	4669      	mov	r1, sp
90012fd2:	4620      	mov	r0, r4
90012fd4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90012fd6:	4798      	blx	r3
90012fd8:	b940      	cbnz	r0, 90012fec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90012fda:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90012fde:	2b01      	cmp	r3, #1
90012fe0:	d004      	beq.n	90012fec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90012fe2:	3301      	adds	r3, #1
90012fe4:	105b      	asrs	r3, r3, #1
90012fe6:	f8ad 3006 	strh.w	r3, [sp, #6]
90012fea:	e7f0      	b.n	90012fce <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90012fec:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90012ff0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012ff4:	4413      	add	r3, r2
90012ff6:	b29b      	uxth	r3, r3
90012ff8:	441a      	add	r2, r3
90012ffa:	f8ad 3002 	strh.w	r3, [sp, #2]
90012ffe:	b212      	sxth	r2, r2
90013000:	4296      	cmp	r6, r2
90013002:	dae0      	bge.n	90012fc6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90013004:	1aeb      	subs	r3, r5, r3
90013006:	f8ad 3006 	strh.w	r3, [sp, #6]
9001300a:	e7dc      	b.n	90012fc6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
9001300c:	f8bd 5000 	ldrh.w	r5, [sp]
90013010:	441d      	add	r5, r3
90013012:	b2ad      	uxth	r5, r5
90013014:	b22e      	sxth	r6, r5
90013016:	f9bd 3000 	ldrsh.w	r3, [sp]
9001301a:	42b3      	cmp	r3, r6
9001301c:	dacc      	bge.n	90012fb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001301e:	6823      	ldr	r3, [r4, #0]
90013020:	4669      	mov	r1, sp
90013022:	4620      	mov	r0, r4
90013024:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90013026:	4798      	blx	r3
90013028:	b940      	cbnz	r0, 9001303c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
9001302a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001302e:	2b01      	cmp	r3, #1
90013030:	d004      	beq.n	9001303c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90013032:	3301      	adds	r3, #1
90013034:	105b      	asrs	r3, r3, #1
90013036:	f8ad 3004 	strh.w	r3, [sp, #4]
9001303a:	e7f0      	b.n	9001301e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
9001303c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90013040:	f8bd 3000 	ldrh.w	r3, [sp]
90013044:	4413      	add	r3, r2
90013046:	b29b      	uxth	r3, r3
90013048:	441a      	add	r2, r3
9001304a:	f8ad 3000 	strh.w	r3, [sp]
9001304e:	b212      	sxth	r2, r2
90013050:	4296      	cmp	r6, r2
90013052:	dae0      	bge.n	90013016 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013054:	1aeb      	subs	r3, r5, r3
90013056:	f8ad 3004 	strh.w	r3, [sp, #4]
9001305a:	e7dc      	b.n	90013016 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
9001305c:	2001aa36 	.word	0x2001aa36

90013060 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90013060:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90013062:	6803      	ldr	r3, [r0, #0]
90013064:	4604      	mov	r4, r0
90013066:	4601      	mov	r1, r0
90013068:	4668      	mov	r0, sp
9001306a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
9001306c:	4798      	blx	r3
9001306e:	2100      	movs	r1, #0
90013070:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013074:	4668      	mov	r0, sp
90013076:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001307a:	9102      	str	r1, [sp, #8]
9001307c:	a902      	add	r1, sp, #8
9001307e:	f8ad 200c 	strh.w	r2, [sp, #12]
90013082:	f8ad 300e 	strh.w	r3, [sp, #14]
90013086:	f7fd fafd 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
9001308a:	6823      	ldr	r3, [r4, #0]
9001308c:	4669      	mov	r1, sp
9001308e:	4620      	mov	r0, r4
90013090:	691b      	ldr	r3, [r3, #16]
90013092:	4798      	blx	r3
90013094:	b004      	add	sp, #16
90013096:	bd10      	pop	{r4, pc}

90013098 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90013098:	2101      	movs	r1, #1
9001309a:	2200      	movs	r2, #0
9001309c:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
900130a0:	490a      	ldr	r1, [pc, #40]	@ (900130cc <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
900130a2:	8082      	strh	r2, [r0, #4]
900130a4:	6001      	str	r1, [r0, #0]
900130a6:	21ff      	movs	r1, #255	@ 0xff
900130a8:	80c2      	strh	r2, [r0, #6]
900130aa:	8102      	strh	r2, [r0, #8]
900130ac:	8142      	strh	r2, [r0, #10]
900130ae:	8182      	strh	r2, [r0, #12]
900130b0:	81c2      	strh	r2, [r0, #14]
900130b2:	8202      	strh	r2, [r0, #16]
900130b4:	8242      	strh	r2, [r0, #18]
900130b6:	61c2      	str	r2, [r0, #28]
900130b8:	8402      	strh	r2, [r0, #32]
900130ba:	8442      	strh	r2, [r0, #34]	@ 0x22
900130bc:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
900130c0:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
900130c4:	6282      	str	r2, [r0, #40]	@ 0x28
900130c6:	e9c0 2205 	strd	r2, r2, [r0, #20]
900130ca:	4770      	bx	lr
900130cc:	90035974 	.word	0x90035974

900130d0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
900130d0:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
900130d4:	4770      	bx	lr

900130d6 <_ZN8touchgfx12ToggleButtonD1Ev>:
900130d6:	4770      	bx	lr

900130d8 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
900130d8:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
900130dc:	b133      	cbz	r3, 900130ec <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
900130de:	790b      	ldrb	r3, [r1, #4]
900130e0:	2b01      	cmp	r3, #1
900130e2:	bf01      	itttt	eq
900130e4:	8dc3      	ldrheq	r3, [r0, #46]	@ 0x2e
900130e6:	8e02      	ldrheq	r2, [r0, #48]	@ 0x30
900130e8:	8603      	strheq	r3, [r0, #48]	@ 0x30
900130ea:	85c2      	strheq	r2, [r0, #46]	@ 0x2e
900130ec:	f014 b9f4 	b.w	900274d8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

900130f0 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
900130f0:	8813      	ldrh	r3, [r2, #0]
900130f2:	8683      	strh	r3, [r0, #52]	@ 0x34
900130f4:	f000 b860 	b.w	900131b8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

900130f8 <_ZN8touchgfx12ToggleButtonD0Ev>:
900130f8:	b510      	push	{r4, lr}
900130fa:	4604      	mov	r4, r0
900130fc:	2138      	movs	r1, #56	@ 0x38
900130fe:	f014 fa0f 	bl	90027520 <_ZdlPvj>
90013102:	4620      	mov	r0, r4
90013104:	bd10      	pop	{r4, pc}

90013106 <_ZN8touchgfx14AbstractButton13executeActionEv>:
90013106:	b510      	push	{r4, lr}
90013108:	4604      	mov	r4, r0
9001310a:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9001310c:	b150      	cbz	r0, 90013124 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
9001310e:	6803      	ldr	r3, [r0, #0]
90013110:	68db      	ldr	r3, [r3, #12]
90013112:	4798      	blx	r3
90013114:	b130      	cbz	r0, 90013124 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90013116:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90013118:	4621      	mov	r1, r4
9001311a:	6803      	ldr	r3, [r0, #0]
9001311c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90013120:	689b      	ldr	r3, [r3, #8]
90013122:	4718      	bx	r3
90013124:	bd10      	pop	{r4, pc}

90013126 <_ZNK8touchgfx6Button17invalidateContentEv>:
90013126:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
9001312a:	b12a      	cbz	r2, 90013138 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
9001312c:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90013130:	b112      	cbz	r2, 90013138 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90013132:	6803      	ldr	r3, [r0, #0]
90013134:	695b      	ldr	r3, [r3, #20]
90013136:	4718      	bx	r3
90013138:	4770      	bx	lr

9001313a <_ZNK8touchgfx3Box12getSolidRectEv>:
9001313a:	2300      	movs	r3, #0
9001313c:	8083      	strh	r3, [r0, #4]
9001313e:	80c3      	strh	r3, [r0, #6]
90013140:	8003      	strh	r3, [r0, #0]
90013142:	8043      	strh	r3, [r0, #2]
90013144:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
90013148:	2bff      	cmp	r3, #255	@ 0xff
9001314a:	bf01      	itttt	eq
9001314c:	890b      	ldrheq	r3, [r1, #8]
9001314e:	8083      	strheq	r3, [r0, #4]
90013150:	894b      	ldrheq	r3, [r1, #10]
90013152:	80c3      	strheq	r3, [r0, #6]
90013154:	4770      	bx	lr
	...

90013158 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90013158:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001315a:	4604      	mov	r4, r0
9001315c:	466b      	mov	r3, sp
9001315e:	6808      	ldr	r0, [r1, #0]
90013160:	6849      	ldr	r1, [r1, #4]
90013162:	c303      	stmia	r3!, {r0, r1}
90013164:	6823      	ldr	r3, [r4, #0]
90013166:	4669      	mov	r1, sp
90013168:	4620      	mov	r0, r4
9001316a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001316c:	4798      	blx	r3
9001316e:	4b08      	ldr	r3, [pc, #32]	@ (90013190 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90013170:	681b      	ldr	r3, [r3, #0]
90013172:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90013176:	b10a      	cbz	r2, 9001317c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90013178:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9001317a:	b900      	cbnz	r0, 9001317e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
9001317c:	6898      	ldr	r0, [r3, #8]
9001317e:	6803      	ldr	r3, [r0, #0]
90013180:	4669      	mov	r1, sp
90013182:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90013184:	6a1d      	ldr	r5, [r3, #32]
90013186:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
9001318a:	47a8      	blx	r5
9001318c:	b003      	add	sp, #12
9001318e:	bd30      	pop	{r4, r5, pc}
90013190:	2001aa40 	.word	0x2001aa40

90013194 <_ZN8touchgfx3BoxD1Ev>:
90013194:	4770      	bx	lr

90013196 <_ZN8touchgfx3BoxD0Ev>:
90013196:	b510      	push	{r4, lr}
90013198:	4604      	mov	r4, r0
9001319a:	212c      	movs	r1, #44	@ 0x2c
9001319c:	f014 f9c0 	bl	90027520 <_ZdlPvj>
900131a0:	4620      	mov	r0, r4
900131a2:	bd10      	pop	{r4, pc}

900131a4 <_ZNK8touchgfx3Box17invalidateContentEv>:
900131a4:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
900131a8:	b12a      	cbz	r2, 900131b6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900131aa:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
900131ae:	b112      	cbz	r2, 900131b6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900131b0:	6803      	ldr	r3, [r0, #0]
900131b2:	695b      	ldr	r3, [r3, #20]
900131b4:	4718      	bx	r3
900131b6:	4770      	bx	lr

900131b8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
900131b8:	b570      	push	{r4, r5, r6, lr}
900131ba:	880b      	ldrh	r3, [r1, #0]
900131bc:	4605      	mov	r5, r0
900131be:	4604      	mov	r4, r0
900131c0:	85c3      	strh	r3, [r0, #46]	@ 0x2e
900131c2:	8813      	ldrh	r3, [r2, #0]
900131c4:	f825 3f30 	strh.w	r3, [r5, #48]!
900131c8:	4628      	mov	r0, r5
900131ca:	f005 f8f9 	bl	900183c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
900131ce:	4606      	mov	r6, r0
900131d0:	4628      	mov	r0, r5
900131d2:	f005 f929 	bl	90018428 <_ZNK8touchgfx6Bitmap9getHeightEv>
900131d6:	6823      	ldr	r3, [r4, #0]
900131d8:	4605      	mov	r5, r0
900131da:	4631      	mov	r1, r6
900131dc:	4620      	mov	r0, r4
900131de:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900131e0:	4798      	blx	r3
900131e2:	6823      	ldr	r3, [r4, #0]
900131e4:	4629      	mov	r1, r5
900131e6:	4620      	mov	r0, r4
900131e8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900131ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900131ee:	4718      	bx	r3

900131f0 <_ZNK8touchgfx6Button12getSolidRectEv>:
900131f0:	b510      	push	{r4, lr}
900131f2:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
900131f6:	4604      	mov	r4, r0
900131f8:	2bff      	cmp	r3, #255	@ 0xff
900131fa:	d006      	beq.n	9001320a <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
900131fc:	2300      	movs	r3, #0
900131fe:	8003      	strh	r3, [r0, #0]
90013200:	8043      	strh	r3, [r0, #2]
90013202:	8083      	strh	r3, [r0, #4]
90013204:	80c3      	strh	r3, [r0, #6]
90013206:	4620      	mov	r0, r4
90013208:	bd10      	pop	{r4, pc}
9001320a:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
9001320e:	b11b      	cbz	r3, 90013218 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
90013210:	3130      	adds	r1, #48	@ 0x30
90013212:	f005 f93d 	bl	90018490 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90013216:	e7f6      	b.n	90013206 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
90013218:	312e      	adds	r1, #46	@ 0x2e
9001321a:	e7fa      	b.n	90013212 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

9001321c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
9001321c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013220:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
90013224:	b08a      	sub	sp, #40	@ 0x28
90013226:	4604      	mov	r4, r0
90013228:	4688      	mov	r8, r1
9001322a:	2b00      	cmp	r3, #0
9001322c:	d066      	beq.n	900132fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
9001322e:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
90013230:	a805      	add	r0, sp, #20
90013232:	f8ad 3014 	strh.w	r3, [sp, #20]
90013236:	f005 f8c3 	bl	900183c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001323a:	4607      	mov	r7, r0
9001323c:	a805      	add	r0, sp, #20
9001323e:	f005 f8f3 	bl	90018428 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013242:	f9b8 6000 	ldrsh.w	r6, [r8]
90013246:	f8b8 2004 	ldrh.w	r2, [r8, #4]
9001324a:	2300      	movs	r3, #0
9001324c:	4432      	add	r2, r6
9001324e:	9306      	str	r3, [sp, #24]
90013250:	b292      	uxth	r2, r2
90013252:	fa0f fc82 	sxth.w	ip, r2
90013256:	459c      	cmp	ip, r3
90013258:	dd52      	ble.n	90013300 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9001325a:	42b7      	cmp	r7, r6
9001325c:	dd50      	ble.n	90013300 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9001325e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
90013262:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90013266:	442b      	add	r3, r5
90013268:	b29b      	uxth	r3, r3
9001326a:	b219      	sxth	r1, r3
9001326c:	2900      	cmp	r1, #0
9001326e:	dd47      	ble.n	90013300 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013270:	42a8      	cmp	r0, r5
90013272:	dd45      	ble.n	90013300 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013274:	4567      	cmp	r7, ip
90013276:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
9001327a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9001327e:	bfb8      	it	lt
90013280:	b2ba      	uxthlt	r2, r7
90013282:	4288      	cmp	r0, r1
90013284:	f8ad 6018 	strh.w	r6, [sp, #24]
90013288:	bfb8      	it	lt
9001328a:	b283      	uxthlt	r3, r0
9001328c:	1b92      	subs	r2, r2, r6
9001328e:	f8ad 501a 	strh.w	r5, [sp, #26]
90013292:	1b5b      	subs	r3, r3, r5
90013294:	f8ad 201c 	strh.w	r2, [sp, #28]
90013298:	f8ad 301e 	strh.w	r3, [sp, #30]
9001329c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
900132a0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
900132a4:	429a      	cmp	r2, r3
900132a6:	d026      	beq.n	900132f6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900132a8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900132ac:	2b00      	cmp	r3, #0
900132ae:	dd22      	ble.n	900132f6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900132b0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
900132b4:	2b00      	cmp	r3, #0
900132b6:	dd1e      	ble.n	900132f6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900132b8:	2300      	movs	r3, #0
900132ba:	a908      	add	r1, sp, #32
900132bc:	4620      	mov	r0, r4
900132be:	e9cd 3308 	strd	r3, r3, [sp, #32]
900132c2:	6823      	ldr	r3, [r4, #0]
900132c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900132c6:	4798      	blx	r3
900132c8:	4b0f      	ldr	r3, [pc, #60]	@ (90013308 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
900132ca:	681b      	ldr	r3, [r3, #0]
900132cc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900132d0:	b10a      	cbz	r2, 900132d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
900132d2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900132d4:	b900      	cbnz	r0, 900132d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
900132d6:	6898      	ldr	r0, [r3, #8]
900132d8:	2501      	movs	r5, #1
900132da:	6801      	ldr	r1, [r0, #0]
900132dc:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
900132e0:	9502      	str	r5, [sp, #8]
900132e2:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
900132e6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
900132ea:	9401      	str	r4, [sp, #4]
900132ec:	ac06      	add	r4, sp, #24
900132ee:	9400      	str	r4, [sp, #0]
900132f0:	688c      	ldr	r4, [r1, #8]
900132f2:	a905      	add	r1, sp, #20
900132f4:	47a0      	blx	r4
900132f6:	b00a      	add	sp, #40	@ 0x28
900132f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900132fc:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
900132fe:	e797      	b.n	90013230 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
90013300:	2300      	movs	r3, #0
90013302:	9307      	str	r3, [sp, #28]
90013304:	e7ca      	b.n	9001329c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
90013306:	bf00      	nop
90013308:	2001aa40 	.word	0x2001aa40

9001330c <_ZN8touchgfx7OutlineD1Ev>:
9001330c:	4770      	bx	lr

9001330e <_ZN8touchgfx7OutlineD0Ev>:
9001330e:	b510      	push	{r4, lr}
90013310:	4604      	mov	r4, r0
90013312:	2130      	movs	r1, #48	@ 0x30
90013314:	f014 f904 	bl	90027520 <_ZdlPvj>
90013318:	4620      	mov	r0, r4
9001331a:	bd10      	pop	{r4, pc}

9001331c <_ZN8touchgfx7Outline5resetEv>:
9001331c:	b510      	push	{r4, lr}
9001331e:	4604      	mov	r4, r0
90013320:	f000 fe72 	bl	90014008 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90013324:	60e0      	str	r0, [r4, #12]
90013326:	f000 fe75 	bl	90014014 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
9001332a:	68e3      	ldr	r3, [r4, #12]
9001332c:	08c0      	lsrs	r0, r0, #3
9001332e:	2200      	movs	r2, #0
90013330:	f647 71ff 	movw	r1, #32767	@ 0x7fff
90013334:	6123      	str	r3, [r4, #16]
90013336:	3801      	subs	r0, #1
90013338:	60a2      	str	r2, [r4, #8]
9001333a:	6060      	str	r0, [r4, #4]
9001333c:	8019      	strh	r1, [r3, #0]
9001333e:	8059      	strh	r1, [r3, #2]
90013340:	809a      	strh	r2, [r3, #4]
90013342:	80da      	strh	r2, [r3, #6]
90013344:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90013346:	f023 0301 	bic.w	r3, r3, #1
9001334a:	f043 0302 	orr.w	r3, r3, #2
9001334e:	6263      	str	r3, [r4, #36]	@ 0x24
90013350:	bd10      	pop	{r4, pc}
	...

90013354 <_ZN8touchgfx7OutlineC1Ev>:
90013354:	4b0a      	ldr	r3, [pc, #40]	@ (90013380 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90013356:	b510      	push	{r4, lr}
90013358:	6003      	str	r3, [r0, #0]
9001335a:	2300      	movs	r3, #0
9001335c:	4604      	mov	r4, r0
9001335e:	6243      	str	r3, [r0, #36]	@ 0x24
90013360:	e9c0 3301 	strd	r3, r3, [r0, #4]
90013364:	e9c0 3303 	strd	r3, r3, [r0, #12]
90013368:	e9c0 3305 	strd	r3, r3, [r0, #20]
9001336c:	e9c0 3307 	strd	r3, r3, [r0, #28]
90013370:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90013374:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
90013378:	f7ff ffd0 	bl	9001331c <_ZN8touchgfx7Outline5resetEv>
9001337c:	4620      	mov	r0, r4
9001337e:	bd10      	pop	{r4, pc}
90013380:	90035ac8 	.word	0x90035ac8

90013384 <_ZN8touchgfx7Outline10renderLineEiiii>:
90013384:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013388:	b093      	sub	sp, #76	@ 0x4c
9001338a:	1156      	asrs	r6, r2, #5
9001338c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
9001338e:	9305      	str	r3, [sp, #20]
90013390:	1153      	asrs	r3, r2, #5
90013392:	f004 051f 	and.w	r5, r4, #31
90013396:	9303      	str	r3, [sp, #12]
90013398:	1163      	asrs	r3, r4, #5
9001339a:	9504      	str	r5, [sp, #16]
9001339c:	1165      	asrs	r5, r4, #5
9001339e:	9306      	str	r3, [sp, #24]
900133a0:	f002 031f 	and.w	r3, r2, #31
900133a4:	42ae      	cmp	r6, r5
900133a6:	f040 80f4 	bne.w	90013592 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
900133aa:	9c04      	ldr	r4, [sp, #16]
900133ac:	9a05      	ldr	r2, [sp, #20]
900133ae:	42a3      	cmp	r3, r4
900133b0:	ea4f 1e62 	mov.w	lr, r2, asr #5
900133b4:	6902      	ldr	r2, [r0, #16]
900133b6:	d125      	bne.n	90013404 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
900133b8:	f9b2 3000 	ldrsh.w	r3, [r2]
900133bc:	459e      	cmp	lr, r3
900133be:	d103      	bne.n	900133c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
900133c0:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
900133c4:	429e      	cmp	r6, r3
900133c6:	d035      	beq.n	90013434 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900133c8:	88d1      	ldrh	r1, [r2, #6]
900133ca:	8893      	ldrh	r3, [r2, #4]
900133cc:	430b      	orrs	r3, r1
900133ce:	d010      	beq.n	900133f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900133d0:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
900133d4:	2b00      	cmp	r3, #0
900133d6:	db0c      	blt.n	900133f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900133d8:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
900133da:	428b      	cmp	r3, r1
900133dc:	da09      	bge.n	900133f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900133de:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
900133e2:	428b      	cmp	r3, r1
900133e4:	f103 0301 	add.w	r3, r3, #1
900133e8:	bf38      	it	cc
900133ea:	3208      	addcc	r2, #8
900133ec:	6083      	str	r3, [r0, #8]
900133ee:	bf38      	it	cc
900133f0:	6102      	strcc	r2, [r0, #16]
900133f2:	6903      	ldr	r3, [r0, #16]
900133f4:	9a03      	ldr	r2, [sp, #12]
900133f6:	f8a3 e000 	strh.w	lr, [r3]
900133fa:	805a      	strh	r2, [r3, #2]
900133fc:	2200      	movs	r2, #0
900133fe:	809a      	strh	r2, [r3, #4]
90013400:	80da      	strh	r2, [r3, #6]
90013402:	e017      	b.n	90013434 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013404:	9c05      	ldr	r4, [sp, #20]
90013406:	114e      	asrs	r6, r1, #5
90013408:	f001 0c1f 	and.w	ip, r1, #31
9001340c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90013410:	f004 041f 	and.w	r4, r4, #31
90013414:	4576      	cmp	r6, lr
90013416:	f8b2 a006 	ldrh.w	sl, [r2, #6]
9001341a:	9402      	str	r4, [sp, #8]
9001341c:	9c04      	ldr	r4, [sp, #16]
9001341e:	eba4 0403 	sub.w	r4, r4, r3
90013422:	d10a      	bne.n	9001343a <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90013424:	9b02      	ldr	r3, [sp, #8]
90013426:	44a0      	add	r8, r4
90013428:	449c      	add	ip, r3
9001342a:	f8a2 8004 	strh.w	r8, [r2, #4]
9001342e:	fb04 a40c 	mla	r4, r4, ip, sl
90013432:	80d4      	strh	r4, [r2, #6]
90013434:	b013      	add	sp, #76	@ 0x4c
90013436:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001343a:	9d05      	ldr	r5, [sp, #20]
9001343c:	1a69      	subs	r1, r5, r1
9001343e:	bf51      	iteee	pl
90013440:	f1cc 0520 	rsbpl	r5, ip, #32
90013444:	fb04 f40c 	mulmi.w	r4, r4, ip
90013448:	4249      	negmi	r1, r1
9001344a:	2500      	movmi	r5, #0
9001344c:	bf5d      	ittte	pl
9001344e:	436c      	mulpl	r4, r5
90013450:	2520      	movpl	r5, #32
90013452:	f04f 0901 	movpl.w	r9, #1
90013456:	f04f 39ff 	movmi.w	r9, #4294967295
9001345a:	9501      	str	r5, [sp, #4]
9001345c:	9f01      	ldr	r7, [sp, #4]
9001345e:	444e      	add	r6, r9
90013460:	fb94 f5f1 	sdiv	r5, r4, r1
90013464:	fb01 4415 	mls	r4, r1, r5, r4
90013468:	44bc      	add	ip, r7
9001346a:	2c00      	cmp	r4, #0
9001346c:	bfbc      	itt	lt
9001346e:	f105 35ff 	addlt.w	r5, r5, #4294967295
90013472:	1864      	addlt	r4, r4, r1
90013474:	44a8      	add	r8, r5
90013476:	fb05 ac0c 	mla	ip, r5, ip, sl
9001347a:	f8a2 8004 	strh.w	r8, [r2, #4]
9001347e:	f8a2 c006 	strh.w	ip, [r2, #6]
90013482:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013486:	f8bc 8006 	ldrh.w	r8, [ip, #6]
9001348a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
9001348e:	ea58 0202 	orrs.w	r2, r8, r2
90013492:	d011      	beq.n	900134b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013494:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90013498:	f1b8 0f00 	cmp.w	r8, #0
9001349c:	db0c      	blt.n	900134b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
9001349e:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
900134a0:	4590      	cmp	r8, r2
900134a2:	da09      	bge.n	900134b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900134a4:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
900134a8:	4590      	cmp	r8, r2
900134aa:	bf3c      	itt	cc
900134ac:	f10c 0208 	addcc.w	r2, ip, #8
900134b0:	6102      	strcc	r2, [r0, #16]
900134b2:	f108 0201 	add.w	r2, r8, #1
900134b6:	6082      	str	r2, [r0, #8]
900134b8:	f8d0 c010 	ldr.w	ip, [r0, #16]
900134bc:	2700      	movs	r7, #0
900134be:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
900134c2:	45b6      	cmp	lr, r6
900134c4:	f8ac 6000 	strh.w	r6, [ip]
900134c8:	442b      	add	r3, r5
900134ca:	f8ac 2002 	strh.w	r2, [ip, #2]
900134ce:	f8ac 7004 	strh.w	r7, [ip, #4]
900134d2:	f8ac 7006 	strh.w	r7, [ip, #6]
900134d6:	d04b      	beq.n	90013570 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
900134d8:	9f04      	ldr	r7, [sp, #16]
900134da:	1a64      	subs	r4, r4, r1
900134dc:	f04f 0a00 	mov.w	sl, #0
900134e0:	1aff      	subs	r7, r7, r3
900134e2:	443d      	add	r5, r7
900134e4:	016d      	lsls	r5, r5, #5
900134e6:	fb95 f8f1 	sdiv	r8, r5, r1
900134ea:	fb01 5518 	mls	r5, r1, r8, r5
900134ee:	2d00      	cmp	r5, #0
900134f0:	bfbc      	itt	lt
900134f2:	f108 38ff 	addlt.w	r8, r8, #4294967295
900134f6:	186d      	addlt	r5, r5, r1
900134f8:	f108 0701 	add.w	r7, r8, #1
900134fc:	9703      	str	r7, [sp, #12]
900134fe:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013502:	1964      	adds	r4, r4, r5
90013504:	444e      	add	r6, r9
90013506:	bf54      	ite	pl
90013508:	9f03      	ldrpl	r7, [sp, #12]
9001350a:	4647      	movmi	r7, r8
9001350c:	f8bc b004 	ldrh.w	fp, [ip, #4]
90013510:	bf58      	it	pl
90013512:	1a64      	subpl	r4, r4, r1
90013514:	443b      	add	r3, r7
90013516:	44bb      	add	fp, r7
90013518:	f8ac b004 	strh.w	fp, [ip, #4]
9001351c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013520:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90013524:	f8ac b006 	strh.w	fp, [ip, #6]
90013528:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001352c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013530:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013534:	ea5b 0707 	orrs.w	r7, fp, r7
90013538:	d011      	beq.n	9001355e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
9001353a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
9001353e:	f1bb 0f00 	cmp.w	fp, #0
90013542:	db0c      	blt.n	9001355e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90013544:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013546:	45bb      	cmp	fp, r7
90013548:	da09      	bge.n	9001355e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
9001354a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001354e:	45bb      	cmp	fp, r7
90013550:	bf3c      	itt	cc
90013552:	f10c 0708 	addcc.w	r7, ip, #8
90013556:	6107      	strcc	r7, [r0, #16]
90013558:	f10b 0701 	add.w	r7, fp, #1
9001355c:	6087      	str	r7, [r0, #8]
9001355e:	6907      	ldr	r7, [r0, #16]
90013560:	45b6      	cmp	lr, r6
90013562:	803e      	strh	r6, [r7, #0]
90013564:	807a      	strh	r2, [r7, #2]
90013566:	f8a7 a004 	strh.w	sl, [r7, #4]
9001356a:	f8a7 a006 	strh.w	sl, [r7, #6]
9001356e:	d1c6      	bne.n	900134fe <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90013570:	9a04      	ldr	r2, [sp, #16]
90013572:	1ad3      	subs	r3, r2, r3
90013574:	6902      	ldr	r2, [r0, #16]
90013576:	8891      	ldrh	r1, [r2, #4]
90013578:	88d6      	ldrh	r6, [r2, #6]
9001357a:	4419      	add	r1, r3
9001357c:	8091      	strh	r1, [r2, #4]
9001357e:	9902      	ldr	r1, [sp, #8]
90013580:	f101 0c20 	add.w	ip, r1, #32
90013584:	9901      	ldr	r1, [sp, #4]
90013586:	ebac 0c01 	sub.w	ip, ip, r1
9001358a:	fb03 630c 	mla	r3, r3, ip, r6
9001358e:	80d3      	strh	r3, [r2, #6]
90013590:	e750      	b.n	90013434 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013592:	9d05      	ldr	r5, [sp, #20]
90013594:	1aa2      	subs	r2, r4, r2
90013596:	eba5 0501 	sub.w	r5, r5, r1
9001359a:	9202      	str	r2, [sp, #8]
9001359c:	9508      	str	r5, [sp, #32]
9001359e:	f140 8128 	bpl.w	900137f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
900135a2:	9a03      	ldr	r2, [sp, #12]
900135a4:	2a00      	cmp	r2, #0
900135a6:	f6ff af45 	blt.w	90013434 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900135aa:	9a02      	ldr	r2, [sp, #8]
900135ac:	f04f 34ff 	mov.w	r4, #4294967295
900135b0:	4252      	negs	r2, r2
900135b2:	940b      	str	r4, [sp, #44]	@ 0x2c
900135b4:	2400      	movs	r4, #0
900135b6:	9202      	str	r2, [sp, #8]
900135b8:	9a06      	ldr	r2, [sp, #24]
900135ba:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
900135be:	9206      	str	r2, [sp, #24]
900135c0:	462a      	mov	r2, r5
900135c2:	435a      	muls	r2, r3
900135c4:	9401      	str	r4, [sp, #4]
900135c6:	9c02      	ldr	r4, [sp, #8]
900135c8:	9d02      	ldr	r5, [sp, #8]
900135ca:	fb92 f4f4 	sdiv	r4, r2, r4
900135ce:	fb05 2214 	mls	r2, r5, r4, r2
900135d2:	2a00      	cmp	r2, #0
900135d4:	9207      	str	r2, [sp, #28]
900135d6:	bfbc      	itt	lt
900135d8:	1952      	addlt	r2, r2, r5
900135da:	f104 34ff 	addlt.w	r4, r4, #4294967295
900135de:	6905      	ldr	r5, [r0, #16]
900135e0:	bfb8      	it	lt
900135e2:	9207      	strlt	r2, [sp, #28]
900135e4:	eb04 0901 	add.w	r9, r4, r1
900135e8:	9a01      	ldr	r2, [sp, #4]
900135ea:	ea4f 1669 	mov.w	r6, r9, asr #5
900135ee:	429a      	cmp	r2, r3
900135f0:	f040 8111 	bne.w	90013816 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
900135f4:	f9b5 3000 	ldrsh.w	r3, [r5]
900135f8:	429e      	cmp	r6, r3
900135fa:	d104      	bne.n	90013606 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
900135fc:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90013600:	9a03      	ldr	r2, [sp, #12]
90013602:	429a      	cmp	r2, r3
90013604:	d01b      	beq.n	9001363e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90013606:	88ea      	ldrh	r2, [r5, #6]
90013608:	88ab      	ldrh	r3, [r5, #4]
9001360a:	4313      	orrs	r3, r2
9001360c:	d010      	beq.n	90013630 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001360e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90013612:	2a00      	cmp	r2, #0
90013614:	db0c      	blt.n	90013630 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90013616:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90013618:	429a      	cmp	r2, r3
9001361a:	da09      	bge.n	90013630 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001361c:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90013620:	429a      	cmp	r2, r3
90013622:	f102 0201 	add.w	r2, r2, #1
90013626:	bf38      	it	cc
90013628:	3508      	addcc	r5, #8
9001362a:	6082      	str	r2, [r0, #8]
9001362c:	bf38      	it	cc
9001362e:	6105      	strcc	r5, [r0, #16]
90013630:	6903      	ldr	r3, [r0, #16]
90013632:	9a03      	ldr	r2, [sp, #12]
90013634:	801e      	strh	r6, [r3, #0]
90013636:	805a      	strh	r2, [r3, #2]
90013638:	2200      	movs	r2, #0
9001363a:	809a      	strh	r2, [r3, #4]
9001363c:	80da      	strh	r2, [r3, #6]
9001363e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90013640:	9a03      	ldr	r2, [sp, #12]
90013642:	6901      	ldr	r1, [r0, #16]
90013644:	441a      	add	r2, r3
90013646:	f9b1 3000 	ldrsh.w	r3, [r1]
9001364a:	42b3      	cmp	r3, r6
9001364c:	d103      	bne.n	90013656 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
9001364e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90013652:	429a      	cmp	r2, r3
90013654:	d01a      	beq.n	9001368c <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90013656:	88cc      	ldrh	r4, [r1, #6]
90013658:	888b      	ldrh	r3, [r1, #4]
9001365a:	4323      	orrs	r3, r4
9001365c:	d010      	beq.n	90013680 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
9001365e:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90013662:	2c00      	cmp	r4, #0
90013664:	db0c      	blt.n	90013680 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90013666:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90013668:	429c      	cmp	r4, r3
9001366a:	da09      	bge.n	90013680 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
9001366c:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90013670:	429c      	cmp	r4, r3
90013672:	f104 0401 	add.w	r4, r4, #1
90013676:	bf38      	it	cc
90013678:	3108      	addcc	r1, #8
9001367a:	6084      	str	r4, [r0, #8]
9001367c:	bf38      	it	cc
9001367e:	6101      	strcc	r1, [r0, #16]
90013680:	6903      	ldr	r3, [r0, #16]
90013682:	2100      	movs	r1, #0
90013684:	801e      	strh	r6, [r3, #0]
90013686:	805a      	strh	r2, [r3, #2]
90013688:	8099      	strh	r1, [r3, #4]
9001368a:	80d9      	strh	r1, [r3, #6]
9001368c:	9b06      	ldr	r3, [sp, #24]
9001368e:	4293      	cmp	r3, r2
90013690:	f000 8082 	beq.w	90013798 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90013694:	9b08      	ldr	r3, [sp, #32]
90013696:	9902      	ldr	r1, [sp, #8]
90013698:	015b      	lsls	r3, r3, #5
9001369a:	9c02      	ldr	r4, [sp, #8]
9001369c:	fb93 f1f1 	sdiv	r1, r3, r1
900136a0:	fb04 3311 	mls	r3, r4, r1, r3
900136a4:	9103      	str	r1, [sp, #12]
900136a6:	2b00      	cmp	r3, #0
900136a8:	9308      	str	r3, [sp, #32]
900136aa:	da04      	bge.n	900136b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
900136ac:	1e4b      	subs	r3, r1, #1
900136ae:	9303      	str	r3, [sp, #12]
900136b0:	9b08      	ldr	r3, [sp, #32]
900136b2:	4423      	add	r3, r4
900136b4:	9308      	str	r3, [sp, #32]
900136b6:	9b07      	ldr	r3, [sp, #28]
900136b8:	464f      	mov	r7, r9
900136ba:	9902      	ldr	r1, [sp, #8]
900136bc:	2600      	movs	r6, #0
900136be:	1a5b      	subs	r3, r3, r1
900136c0:	9307      	str	r3, [sp, #28]
900136c2:	9b01      	ldr	r3, [sp, #4]
900136c4:	f1c3 0320 	rsb	r3, r3, #32
900136c8:	930e      	str	r3, [sp, #56]	@ 0x38
900136ca:	990e      	ldr	r1, [sp, #56]	@ 0x38
900136cc:	9b01      	ldr	r3, [sp, #4]
900136ce:	1a5b      	subs	r3, r3, r1
900136d0:	930a      	str	r3, [sp, #40]	@ 0x28
900136d2:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
900136d6:	185b      	adds	r3, r3, r1
900136d8:	bf58      	it	pl
900136da:	9902      	ldrpl	r1, [sp, #8]
900136dc:	9307      	str	r3, [sp, #28]
900136de:	bf57      	itett	pl
900136e0:	1a5b      	subpl	r3, r3, r1
900136e2:	9903      	ldrmi	r1, [sp, #12]
900136e4:	9307      	strpl	r3, [sp, #28]
900136e6:	9b03      	ldrpl	r3, [sp, #12]
900136e8:	bf58      	it	pl
900136ea:	1c59      	addpl	r1, r3, #1
900136ec:	2a00      	cmp	r2, #0
900136ee:	4489      	add	r9, r1
900136f0:	ea4f 1a69 	mov.w	sl, r9, asr #5
900136f4:	db2e      	blt.n	90013754 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900136f6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900136f8:	4293      	cmp	r3, r2
900136fa:	dd2b      	ble.n	90013754 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900136fc:	9c01      	ldr	r4, [sp, #4]
900136fe:	6905      	ldr	r5, [r0, #16]
90013700:	46a0      	mov	r8, r4
90013702:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90013704:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90013708:	45a0      	cmp	r8, r4
9001370a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
9001370e:	f040 814c 	bne.w	900139aa <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90013712:	f9b5 1000 	ldrsh.w	r1, [r5]
90013716:	4551      	cmp	r1, sl
90013718:	d103      	bne.n	90013722 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
9001371a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001371e:	4291      	cmp	r1, r2
90013720:	d018      	beq.n	90013754 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90013722:	ea5c 010e 	orrs.w	r1, ip, lr
90013726:	d00f      	beq.n	90013748 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013728:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001372c:	2900      	cmp	r1, #0
9001372e:	db0b      	blt.n	90013748 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013730:	428b      	cmp	r3, r1
90013732:	dd09      	ble.n	90013748 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013734:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90013738:	4299      	cmp	r1, r3
9001373a:	f101 0101 	add.w	r1, r1, #1
9001373e:	bf38      	it	cc
90013740:	3508      	addcc	r5, #8
90013742:	6081      	str	r1, [r0, #8]
90013744:	bf38      	it	cc
90013746:	6105      	strcc	r5, [r0, #16]
90013748:	6903      	ldr	r3, [r0, #16]
9001374a:	f8a3 a000 	strh.w	sl, [r3]
9001374e:	805a      	strh	r2, [r3, #2]
90013750:	809e      	strh	r6, [r3, #4]
90013752:	80de      	strh	r6, [r3, #6]
90013754:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90013756:	6901      	ldr	r1, [r0, #16]
90013758:	441a      	add	r2, r3
9001375a:	88cc      	ldrh	r4, [r1, #6]
9001375c:	888b      	ldrh	r3, [r1, #4]
9001375e:	4323      	orrs	r3, r4
90013760:	d010      	beq.n	90013784 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90013762:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90013766:	2c00      	cmp	r4, #0
90013768:	db0c      	blt.n	90013784 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
9001376a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001376c:	429c      	cmp	r4, r3
9001376e:	da09      	bge.n	90013784 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90013770:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90013774:	429c      	cmp	r4, r3
90013776:	f104 0401 	add.w	r4, r4, #1
9001377a:	bf38      	it	cc
9001377c:	3108      	addcc	r1, #8
9001377e:	6084      	str	r4, [r0, #8]
90013780:	bf38      	it	cc
90013782:	6101      	strcc	r1, [r0, #16]
90013784:	6903      	ldr	r3, [r0, #16]
90013786:	464f      	mov	r7, r9
90013788:	f8a3 a000 	strh.w	sl, [r3]
9001378c:	805a      	strh	r2, [r3, #2]
9001378e:	809e      	strh	r6, [r3, #4]
90013790:	80de      	strh	r6, [r3, #6]
90013792:	9b06      	ldr	r3, [sp, #24]
90013794:	4293      	cmp	r3, r2
90013796:	d19c      	bne.n	900136d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90013798:	9b01      	ldr	r3, [sp, #4]
9001379a:	6907      	ldr	r7, [r0, #16]
9001379c:	f1c3 0620 	rsb	r6, r3, #32
900137a0:	9b05      	ldr	r3, [sp, #20]
900137a2:	ea4f 1e63 	mov.w	lr, r3, asr #5
900137a6:	9b04      	ldr	r3, [sp, #16]
900137a8:	429e      	cmp	r6, r3
900137aa:	f040 81c7 	bne.w	90013b3c <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
900137ae:	f9b7 3000 	ldrsh.w	r3, [r7]
900137b2:	459e      	cmp	lr, r3
900137b4:	d104      	bne.n	900137c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
900137b6:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900137ba:	429a      	cmp	r2, r3
900137bc:	f43f ae3a 	beq.w	90013434 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900137c0:	88f9      	ldrh	r1, [r7, #6]
900137c2:	88bb      	ldrh	r3, [r7, #4]
900137c4:	430b      	orrs	r3, r1
900137c6:	d010      	beq.n	900137ea <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900137c8:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900137cc:	2b00      	cmp	r3, #0
900137ce:	db0c      	blt.n	900137ea <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900137d0:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
900137d2:	428b      	cmp	r3, r1
900137d4:	da09      	bge.n	900137ea <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900137d6:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
900137da:	428b      	cmp	r3, r1
900137dc:	f103 0301 	add.w	r3, r3, #1
900137e0:	bf38      	it	cc
900137e2:	3708      	addcc	r7, #8
900137e4:	6083      	str	r3, [r0, #8]
900137e6:	bf38      	it	cc
900137e8:	6107      	strcc	r7, [r0, #16]
900137ea:	6903      	ldr	r3, [r0, #16]
900137ec:	f8a3 e000 	strh.w	lr, [r3]
900137f0:	e603      	b.n	900133fa <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
900137f2:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
900137f4:	9c03      	ldr	r4, [sp, #12]
900137f6:	42a2      	cmp	r2, r4
900137f8:	f6ff ae1c 	blt.w	90013434 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900137fc:	9c06      	ldr	r4, [sp, #24]
900137fe:	42a2      	cmp	r2, r4
90013800:	9c08      	ldr	r4, [sp, #32]
90013802:	bfbc      	itt	lt
90013804:	3201      	addlt	r2, #1
90013806:	9206      	strlt	r2, [sp, #24]
90013808:	f1c3 0220 	rsb	r2, r3, #32
9001380c:	4362      	muls	r2, r4
9001380e:	2401      	movs	r4, #1
90013810:	940b      	str	r4, [sp, #44]	@ 0x2c
90013812:	2420      	movs	r4, #32
90013814:	e6d6      	b.n	900135c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90013816:	ea4f 1861 	mov.w	r8, r1, asr #5
9001381a:	f009 021f 	and.w	r2, r9, #31
9001381e:	f001 011f 	and.w	r1, r1, #31
90013822:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90013826:	920c      	str	r2, [sp, #48]	@ 0x30
90013828:	45b0      	cmp	r8, r6
9001382a:	9a01      	ldr	r2, [sp, #4]
9001382c:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90013830:	eba2 0203 	sub.w	r2, r2, r3
90013834:	d108      	bne.n	90013848 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90013836:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90013838:	4496      	add	lr, r2
9001383a:	4419      	add	r1, r3
9001383c:	f8a5 e004 	strh.w	lr, [r5, #4]
90013840:	fb02 a101 	mla	r1, r2, r1, sl
90013844:	80e9      	strh	r1, [r5, #6]
90013846:	e6fa      	b.n	9001363e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90013848:	2c00      	cmp	r4, #0
9001384a:	f2c0 80a7 	blt.w	9001399c <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
9001384e:	2701      	movs	r7, #1
90013850:	f1c1 0c20 	rsb	ip, r1, #32
90013854:	970a      	str	r7, [sp, #40]	@ 0x28
90013856:	2720      	movs	r7, #32
90013858:	fb02 f20c 	mul.w	r2, r2, ip
9001385c:	9709      	str	r7, [sp, #36]	@ 0x24
9001385e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90013860:	fb92 fcf4 	sdiv	ip, r2, r4
90013864:	fb04 221c 	mls	r2, r4, ip, r2
90013868:	4439      	add	r1, r7
9001386a:	2a00      	cmp	r2, #0
9001386c:	bfbc      	itt	lt
9001386e:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90013872:	1912      	addlt	r2, r2, r4
90013874:	fb0c a101 	mla	r1, ip, r1, sl
90013878:	44e6      	add	lr, ip
9001387a:	80e9      	strh	r1, [r5, #6]
9001387c:	990a      	ldr	r1, [sp, #40]	@ 0x28
9001387e:	f8a5 e004 	strh.w	lr, [r5, #4]
90013882:	eb08 0501 	add.w	r5, r8, r1
90013886:	6901      	ldr	r1, [r0, #16]
90013888:	f8b1 8006 	ldrh.w	r8, [r1, #6]
9001388c:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90013890:	ea58 070e 	orrs.w	r7, r8, lr
90013894:	d010      	beq.n	900138b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90013896:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
9001389a:	f1be 0f00 	cmp.w	lr, #0
9001389e:	db0b      	blt.n	900138b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900138a0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900138a2:	45be      	cmp	lr, r7
900138a4:	da08      	bge.n	900138b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900138a6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900138aa:	45be      	cmp	lr, r7
900138ac:	bf3c      	itt	cc
900138ae:	3108      	addcc	r1, #8
900138b0:	6101      	strcc	r1, [r0, #16]
900138b2:	f10e 0101 	add.w	r1, lr, #1
900138b6:	6081      	str	r1, [r0, #8]
900138b8:	6901      	ldr	r1, [r0, #16]
900138ba:	f04f 0e00 	mov.w	lr, #0
900138be:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
900138c2:	42ae      	cmp	r6, r5
900138c4:	800d      	strh	r5, [r1, #0]
900138c6:	4463      	add	r3, ip
900138c8:	f8a1 8002 	strh.w	r8, [r1, #2]
900138cc:	f8a1 e004 	strh.w	lr, [r1, #4]
900138d0:	f8a1 e006 	strh.w	lr, [r1, #6]
900138d4:	d053      	beq.n	9001397e <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
900138d6:	9901      	ldr	r1, [sp, #4]
900138d8:	1b12      	subs	r2, r2, r4
900138da:	1ac9      	subs	r1, r1, r3
900138dc:	4461      	add	r1, ip
900138de:	0149      	lsls	r1, r1, #5
900138e0:	fb91 fef4 	sdiv	lr, r1, r4
900138e4:	fb04 111e 	mls	r1, r4, lr, r1
900138e8:	2900      	cmp	r1, #0
900138ea:	bfbc      	itt	lt
900138ec:	f10e 3eff 	addlt.w	lr, lr, #4294967295
900138f0:	1909      	addlt	r1, r1, r4
900138f2:	f10e 0701 	add.w	r7, lr, #1
900138f6:	970d      	str	r7, [sp, #52]	@ 0x34
900138f8:	f8d0 a010 	ldr.w	sl, [r0, #16]
900138fc:	1852      	adds	r2, r2, r1
900138fe:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90013900:	bf54      	ite	pl
90013902:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
90013906:	46f4      	movmi	ip, lr
90013908:	f8ba b004 	ldrh.w	fp, [sl, #4]
9001390c:	bf58      	it	pl
9001390e:	1b12      	subpl	r2, r2, r4
90013910:	4463      	add	r3, ip
90013912:	443d      	add	r5, r7
90013914:	44e3      	add	fp, ip
90013916:	f8aa b004 	strh.w	fp, [sl, #4]
9001391a:	f8ba b006 	ldrh.w	fp, [sl, #6]
9001391e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90013922:	f8aa b006 	strh.w	fp, [sl, #6]
90013926:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001392a:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001392e:	f8bc a004 	ldrh.w	sl, [ip, #4]
90013932:	ea5b 070a 	orrs.w	r7, fp, sl
90013936:	d014      	beq.n	90013962 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90013938:	f9bc a002 	ldrsh.w	sl, [ip, #2]
9001393c:	f1ba 0f00 	cmp.w	sl, #0
90013940:	db0f      	blt.n	90013962 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90013942:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013944:	45ba      	cmp	sl, r7
90013946:	da0c      	bge.n	90013962 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90013948:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
9001394c:	45ba      	cmp	sl, r7
9001394e:	f10a 0a01 	add.w	sl, sl, #1
90013952:	bf38      	it	cc
90013954:	f10c 0c08 	addcc.w	ip, ip, #8
90013958:	f8c0 a008 	str.w	sl, [r0, #8]
9001395c:	bf38      	it	cc
9001395e:	f8c0 c010 	strcc.w	ip, [r0, #16]
90013962:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013966:	f04f 0700 	mov.w	r7, #0
9001396a:	42ae      	cmp	r6, r5
9001396c:	f8ac 5000 	strh.w	r5, [ip]
90013970:	f8ac 8002 	strh.w	r8, [ip, #2]
90013974:	f8ac 7004 	strh.w	r7, [ip, #4]
90013978:	f8ac 7006 	strh.w	r7, [ip, #6]
9001397c:	d1bc      	bne.n	900138f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
9001397e:	6904      	ldr	r4, [r0, #16]
90013980:	9a01      	ldr	r2, [sp, #4]
90013982:	990c      	ldr	r1, [sp, #48]	@ 0x30
90013984:	1ad3      	subs	r3, r2, r3
90013986:	88a2      	ldrh	r2, [r4, #4]
90013988:	3120      	adds	r1, #32
9001398a:	441a      	add	r2, r3
9001398c:	80a2      	strh	r2, [r4, #4]
9001398e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90013990:	1a89      	subs	r1, r1, r2
90013992:	88e2      	ldrh	r2, [r4, #6]
90013994:	fb03 2301 	mla	r3, r3, r1, r2
90013998:	80e3      	strh	r3, [r4, #6]
9001399a:	e650      	b.n	9001363e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
9001399c:	f04f 37ff 	mov.w	r7, #4294967295
900139a0:	434a      	muls	r2, r1
900139a2:	4264      	negs	r4, r4
900139a4:	970a      	str	r7, [sp, #40]	@ 0x28
900139a6:	2700      	movs	r7, #0
900139a8:	e758      	b.n	9001385c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
900139aa:	ea4f 1867 	mov.w	r8, r7, asr #5
900139ae:	f009 031f 	and.w	r3, r9, #31
900139b2:	f007 071f 	and.w	r7, r7, #31
900139b6:	fa1f fc8c 	uxth.w	ip, ip
900139ba:	45d0      	cmp	r8, sl
900139bc:	930f      	str	r3, [sp, #60]	@ 0x3c
900139be:	fa1f fe8e 	uxth.w	lr, lr
900139c2:	d10a      	bne.n	900139da <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
900139c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900139c6:	449c      	add	ip, r3
900139c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900139ca:	441f      	add	r7, r3
900139cc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900139ce:	f8a5 c004 	strh.w	ip, [r5, #4]
900139d2:	fb03 e707 	mla	r7, r3, r7, lr
900139d6:	80ef      	strh	r7, [r5, #6]
900139d8:	e6bc      	b.n	90013754 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900139da:	2900      	cmp	r1, #0
900139dc:	f2c0 80a6 	blt.w	90013b2c <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
900139e0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900139e2:	f1c7 0320 	rsb	r3, r7, #32
900139e6:	4363      	muls	r3, r4
900139e8:	2401      	movs	r4, #1
900139ea:	940d      	str	r4, [sp, #52]	@ 0x34
900139ec:	2420      	movs	r4, #32
900139ee:	940c      	str	r4, [sp, #48]	@ 0x30
900139f0:	fb93 f4f1 	sdiv	r4, r3, r1
900139f4:	fb01 3b14 	mls	fp, r1, r4, r3
900139f8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900139fa:	f1bb 0f00 	cmp.w	fp, #0
900139fe:	441f      	add	r7, r3
90013a00:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90013a02:	bfbc      	itt	lt
90013a04:	f104 34ff 	addlt.w	r4, r4, #4294967295
90013a08:	448b      	addlt	fp, r1
90013a0a:	fb04 e707 	mla	r7, r4, r7, lr
90013a0e:	44a4      	add	ip, r4
90013a10:	80ef      	strh	r7, [r5, #6]
90013a12:	f8a5 c004 	strh.w	ip, [r5, #4]
90013a16:	eb08 0503 	add.w	r5, r8, r3
90013a1a:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013a1e:	f8bc e006 	ldrh.w	lr, [ip, #6]
90013a22:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013a26:	ea5e 0307 	orrs.w	r3, lr, r7
90013a2a:	d011      	beq.n	90013a50 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90013a2c:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90013a30:	f1be 0f00 	cmp.w	lr, #0
90013a34:	db0c      	blt.n	90013a50 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90013a36:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013a38:	45be      	cmp	lr, r7
90013a3a:	da09      	bge.n	90013a50 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90013a3c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90013a40:	45be      	cmp	lr, r7
90013a42:	bf3c      	itt	cc
90013a44:	f10c 0708 	addcc.w	r7, ip, #8
90013a48:	6107      	strcc	r7, [r0, #16]
90013a4a:	f10e 0701 	add.w	r7, lr, #1
90013a4e:	6087      	str	r7, [r0, #8]
90013a50:	6907      	ldr	r7, [r0, #16]
90013a52:	b213      	sxth	r3, r2
90013a54:	4555      	cmp	r5, sl
90013a56:	9310      	str	r3, [sp, #64]	@ 0x40
90013a58:	807b      	strh	r3, [r7, #2]
90013a5a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90013a5c:	803d      	strh	r5, [r7, #0]
90013a5e:	80be      	strh	r6, [r7, #4]
90013a60:	eb04 0c03 	add.w	ip, r4, r3
90013a64:	80fe      	strh	r6, [r7, #6]
90013a66:	d050      	beq.n	90013b0a <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90013a68:	9b01      	ldr	r3, [sp, #4]
90013a6a:	eba3 070c 	sub.w	r7, r3, ip
90013a6e:	ebab 0301 	sub.w	r3, fp, r1
90013a72:	443c      	add	r4, r7
90013a74:	9309      	str	r3, [sp, #36]	@ 0x24
90013a76:	0164      	lsls	r4, r4, #5
90013a78:	fb94 f8f1 	sdiv	r8, r4, r1
90013a7c:	fb01 4418 	mls	r4, r1, r8, r4
90013a80:	2c00      	cmp	r4, #0
90013a82:	bfbc      	itt	lt
90013a84:	f108 38ff 	addlt.w	r8, r8, #4294967295
90013a88:	1864      	addlt	r4, r4, r1
90013a8a:	f108 0701 	add.w	r7, r8, #1
90013a8e:	9711      	str	r7, [sp, #68]	@ 0x44
90013a90:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90013a92:	f8d0 e010 	ldr.w	lr, [r0, #16]
90013a96:	191b      	adds	r3, r3, r4
90013a98:	f8be b004 	ldrh.w	fp, [lr, #4]
90013a9c:	bf54      	ite	pl
90013a9e:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
90013aa0:	4647      	movmi	r7, r8
90013aa2:	9309      	str	r3, [sp, #36]	@ 0x24
90013aa4:	bf58      	it	pl
90013aa6:	1a5b      	subpl	r3, r3, r1
90013aa8:	44bb      	add	fp, r7
90013aaa:	44bc      	add	ip, r7
90013aac:	bf58      	it	pl
90013aae:	9309      	strpl	r3, [sp, #36]	@ 0x24
90013ab0:	f8ae b004 	strh.w	fp, [lr, #4]
90013ab4:	f8be b006 	ldrh.w	fp, [lr, #6]
90013ab8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90013abc:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
90013abe:	f8ae b006 	strh.w	fp, [lr, #6]
90013ac2:	443d      	add	r5, r7
90013ac4:	f8d0 e010 	ldr.w	lr, [r0, #16]
90013ac8:	f8be b006 	ldrh.w	fp, [lr, #6]
90013acc:	f8be 7004 	ldrh.w	r7, [lr, #4]
90013ad0:	ea5b 0307 	orrs.w	r3, fp, r7
90013ad4:	d011      	beq.n	90013afa <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90013ad6:	f9be b002 	ldrsh.w	fp, [lr, #2]
90013ada:	f1bb 0f00 	cmp.w	fp, #0
90013ade:	db0c      	blt.n	90013afa <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90013ae0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013ae2:	45bb      	cmp	fp, r7
90013ae4:	da09      	bge.n	90013afa <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90013ae6:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90013aea:	45bb      	cmp	fp, r7
90013aec:	bf3c      	itt	cc
90013aee:	f10e 0708 	addcc.w	r7, lr, #8
90013af2:	6107      	strcc	r7, [r0, #16]
90013af4:	f10b 0701 	add.w	r7, fp, #1
90013af8:	6087      	str	r7, [r0, #8]
90013afa:	6907      	ldr	r7, [r0, #16]
90013afc:	4555      	cmp	r5, sl
90013afe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90013b00:	803d      	strh	r5, [r7, #0]
90013b02:	807b      	strh	r3, [r7, #2]
90013b04:	80be      	strh	r6, [r7, #4]
90013b06:	80fe      	strh	r6, [r7, #6]
90013b08:	d1c2      	bne.n	90013a90 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
90013b0a:	9b01      	ldr	r3, [sp, #4]
90013b0c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90013b0e:	eba3 0c0c 	sub.w	ip, r3, ip
90013b12:	6903      	ldr	r3, [r0, #16]
90013b14:	3720      	adds	r7, #32
90013b16:	8899      	ldrh	r1, [r3, #4]
90013b18:	4461      	add	r1, ip
90013b1a:	8099      	strh	r1, [r3, #4]
90013b1c:	990c      	ldr	r1, [sp, #48]	@ 0x30
90013b1e:	1a7f      	subs	r7, r7, r1
90013b20:	88d9      	ldrh	r1, [r3, #6]
90013b22:	fb0c 1c07 	mla	ip, ip, r7, r1
90013b26:	f8a3 c006 	strh.w	ip, [r3, #6]
90013b2a:	e613      	b.n	90013754 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90013b2c:	f04f 34ff 	mov.w	r4, #4294967295
90013b30:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90013b32:	4249      	negs	r1, r1
90013b34:	940d      	str	r4, [sp, #52]	@ 0x34
90013b36:	2400      	movs	r4, #0
90013b38:	437b      	muls	r3, r7
90013b3a:	e758      	b.n	900139ee <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
90013b3c:	9905      	ldr	r1, [sp, #20]
90013b3e:	ea4f 1b69 	mov.w	fp, r9, asr #5
90013b42:	f009 0c1f 	and.w	ip, r9, #31
90013b46:	f8b7 8004 	ldrh.w	r8, [r7, #4]
90013b4a:	f001 011f 	and.w	r1, r1, #31
90013b4e:	45f3      	cmp	fp, lr
90013b50:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90013b54:	9102      	str	r1, [sp, #8]
90013b56:	9904      	ldr	r1, [sp, #16]
90013b58:	eba1 0406 	sub.w	r4, r1, r6
90013b5c:	d108      	bne.n	90013b70 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
90013b5e:	9b02      	ldr	r3, [sp, #8]
90013b60:	44a0      	add	r8, r4
90013b62:	449c      	add	ip, r3
90013b64:	f8a7 8004 	strh.w	r8, [r7, #4]
90013b68:	fb04 a40c 	mla	r4, r4, ip, sl
90013b6c:	80fc      	strh	r4, [r7, #6]
90013b6e:	e461      	b.n	90013434 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013b70:	9905      	ldr	r1, [sp, #20]
90013b72:	ebb1 0109 	subs.w	r1, r1, r9
90013b76:	bf51      	iteee	pl
90013b78:	f1cc 0520 	rsbpl	r5, ip, #32
90013b7c:	fb04 f40c 	mulmi.w	r4, r4, ip
90013b80:	4249      	negmi	r1, r1
90013b82:	2500      	movmi	r5, #0
90013b84:	bf5d      	ittte	pl
90013b86:	436c      	mulpl	r4, r5
90013b88:	2520      	movpl	r5, #32
90013b8a:	f04f 0901 	movpl.w	r9, #1
90013b8e:	f04f 39ff 	movmi.w	r9, #4294967295
90013b92:	9501      	str	r5, [sp, #4]
90013b94:	9b01      	ldr	r3, [sp, #4]
90013b96:	fb94 f5f1 	sdiv	r5, r4, r1
90013b9a:	fb01 4415 	mls	r4, r1, r5, r4
90013b9e:	449c      	add	ip, r3
90013ba0:	eb0b 0309 	add.w	r3, fp, r9
90013ba4:	2c00      	cmp	r4, #0
90013ba6:	bfbc      	itt	lt
90013ba8:	f105 35ff 	addlt.w	r5, r5, #4294967295
90013bac:	1864      	addlt	r4, r4, r1
90013bae:	44a8      	add	r8, r5
90013bb0:	fb05 ac0c 	mla	ip, r5, ip, sl
90013bb4:	f8a7 8004 	strh.w	r8, [r7, #4]
90013bb8:	f8a7 c006 	strh.w	ip, [r7, #6]
90013bbc:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013bc0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90013bc4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013bc8:	ea58 0707 	orrs.w	r7, r8, r7
90013bcc:	d011      	beq.n	90013bf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90013bce:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90013bd2:	f1b8 0f00 	cmp.w	r8, #0
90013bd6:	db0c      	blt.n	90013bf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90013bd8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013bda:	45b8      	cmp	r8, r7
90013bdc:	da09      	bge.n	90013bf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90013bde:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90013be2:	45b8      	cmp	r8, r7
90013be4:	bf3c      	itt	cc
90013be6:	f10c 0708 	addcc.w	r7, ip, #8
90013bea:	6107      	strcc	r7, [r0, #16]
90013bec:	f108 0701 	add.w	r7, r8, #1
90013bf0:	6087      	str	r7, [r0, #8]
90013bf2:	6907      	ldr	r7, [r0, #16]
90013bf4:	f04f 0c00 	mov.w	ip, #0
90013bf8:	b212      	sxth	r2, r2
90013bfa:	459e      	cmp	lr, r3
90013bfc:	803b      	strh	r3, [r7, #0]
90013bfe:	442e      	add	r6, r5
90013c00:	807a      	strh	r2, [r7, #2]
90013c02:	f8a7 c004 	strh.w	ip, [r7, #4]
90013c06:	f8a7 c006 	strh.w	ip, [r7, #6]
90013c0a:	d04b      	beq.n	90013ca4 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90013c0c:	9f04      	ldr	r7, [sp, #16]
90013c0e:	1a64      	subs	r4, r4, r1
90013c10:	f04f 0a00 	mov.w	sl, #0
90013c14:	1bbf      	subs	r7, r7, r6
90013c16:	443d      	add	r5, r7
90013c18:	016d      	lsls	r5, r5, #5
90013c1a:	fb95 f8f1 	sdiv	r8, r5, r1
90013c1e:	fb01 5518 	mls	r5, r1, r8, r5
90013c22:	4565      	cmp	r5, ip
90013c24:	bfbc      	itt	lt
90013c26:	f108 38ff 	addlt.w	r8, r8, #4294967295
90013c2a:	186d      	addlt	r5, r5, r1
90013c2c:	f108 0701 	add.w	r7, r8, #1
90013c30:	9703      	str	r7, [sp, #12]
90013c32:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013c36:	1964      	adds	r4, r4, r5
90013c38:	444b      	add	r3, r9
90013c3a:	bf54      	ite	pl
90013c3c:	9f03      	ldrpl	r7, [sp, #12]
90013c3e:	4647      	movmi	r7, r8
90013c40:	f8bc b004 	ldrh.w	fp, [ip, #4]
90013c44:	bf58      	it	pl
90013c46:	1a64      	subpl	r4, r4, r1
90013c48:	443e      	add	r6, r7
90013c4a:	44bb      	add	fp, r7
90013c4c:	f8ac b004 	strh.w	fp, [ip, #4]
90013c50:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013c54:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90013c58:	f8ac b006 	strh.w	fp, [ip, #6]
90013c5c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013c60:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013c64:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013c68:	ea5b 0707 	orrs.w	r7, fp, r7
90013c6c:	d011      	beq.n	90013c92 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90013c6e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90013c72:	f1bb 0f00 	cmp.w	fp, #0
90013c76:	db0c      	blt.n	90013c92 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90013c78:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013c7a:	45bb      	cmp	fp, r7
90013c7c:	da09      	bge.n	90013c92 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90013c7e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90013c82:	45bb      	cmp	fp, r7
90013c84:	bf3c      	itt	cc
90013c86:	f10c 0708 	addcc.w	r7, ip, #8
90013c8a:	6107      	strcc	r7, [r0, #16]
90013c8c:	f10b 0701 	add.w	r7, fp, #1
90013c90:	6087      	str	r7, [r0, #8]
90013c92:	6907      	ldr	r7, [r0, #16]
90013c94:	459e      	cmp	lr, r3
90013c96:	803b      	strh	r3, [r7, #0]
90013c98:	807a      	strh	r2, [r7, #2]
90013c9a:	f8a7 a004 	strh.w	sl, [r7, #4]
90013c9e:	f8a7 a006 	strh.w	sl, [r7, #6]
90013ca2:	d1c6      	bne.n	90013c32 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90013ca4:	9b04      	ldr	r3, [sp, #16]
90013ca6:	1b9e      	subs	r6, r3, r6
90013ca8:	6903      	ldr	r3, [r0, #16]
90013caa:	889a      	ldrh	r2, [r3, #4]
90013cac:	4432      	add	r2, r6
90013cae:	809a      	strh	r2, [r3, #4]
90013cb0:	9a02      	ldr	r2, [sp, #8]
90013cb2:	f102 0c20 	add.w	ip, r2, #32
90013cb6:	9a01      	ldr	r2, [sp, #4]
90013cb8:	ebac 0c02 	sub.w	ip, ip, r2
90013cbc:	88da      	ldrh	r2, [r3, #6]
90013cbe:	fb06 260c 	mla	r6, r6, ip, r2
90013cc2:	80de      	strh	r6, [r3, #6]
90013cc4:	f7ff bbb6 	b.w	90013434 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90013cc8 <_ZN8touchgfx7Outline6lineToEii>:
90013cc8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90013cca:	079b      	lsls	r3, r3, #30
90013ccc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90013cce:	460e      	mov	r6, r1
90013cd0:	4615      	mov	r5, r2
90013cd2:	d511      	bpl.n	90013cf8 <_ZN8touchgfx7Outline6lineToEii+0x30>
90013cd4:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90013cd8:	ea86 0701 	eor.w	r7, r6, r1
90013cdc:	ea85 0302 	eor.w	r3, r5, r2
90013ce0:	433b      	orrs	r3, r7
90013ce2:	d009      	beq.n	90013cf8 <_ZN8touchgfx7Outline6lineToEii+0x30>
90013ce4:	4633      	mov	r3, r6
90013ce6:	9500      	str	r5, [sp, #0]
90013ce8:	f7ff fb4c 	bl	90013384 <_ZN8touchgfx7Outline10renderLineEiiii>
90013cec:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90013cee:	f043 0301 	orr.w	r3, r3, #1
90013cf2:	e9c0 6505 	strd	r6, r5, [r0, #20]
90013cf6:	6243      	str	r3, [r0, #36]	@ 0x24
90013cf8:	b003      	add	sp, #12
90013cfa:	bdf0      	pop	{r4, r5, r6, r7, pc}

90013cfc <_ZN8touchgfx7Outline6moveToEii>:
90013cfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90013cfe:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90013d00:	4615      	mov	r5, r2
90013d02:	4604      	mov	r4, r0
90013d04:	460e      	mov	r6, r1
90013d06:	079a      	lsls	r2, r3, #30
90013d08:	d401      	bmi.n	90013d0e <_ZN8touchgfx7Outline6moveToEii+0x12>
90013d0a:	f7ff fb07 	bl	9001331c <_ZN8touchgfx7Outline5resetEv>
90013d0e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90013d10:	07db      	lsls	r3, r3, #31
90013d12:	d504      	bpl.n	90013d1e <_ZN8touchgfx7Outline6moveToEii+0x22>
90013d14:	4620      	mov	r0, r4
90013d16:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
90013d1a:	f7ff ffd5 	bl	90013cc8 <_ZN8touchgfx7Outline6lineToEii>
90013d1e:	6923      	ldr	r3, [r4, #16]
90013d20:	1170      	asrs	r0, r6, #5
90013d22:	1169      	asrs	r1, r5, #5
90013d24:	f9b3 2000 	ldrsh.w	r2, [r3]
90013d28:	4290      	cmp	r0, r2
90013d2a:	d103      	bne.n	90013d34 <_ZN8touchgfx7Outline6moveToEii+0x38>
90013d2c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90013d30:	4291      	cmp	r1, r2
90013d32:	d01a      	beq.n	90013d6a <_ZN8touchgfx7Outline6moveToEii+0x6e>
90013d34:	88df      	ldrh	r7, [r3, #6]
90013d36:	889a      	ldrh	r2, [r3, #4]
90013d38:	433a      	orrs	r2, r7
90013d3a:	d010      	beq.n	90013d5e <_ZN8touchgfx7Outline6moveToEii+0x62>
90013d3c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90013d40:	2a00      	cmp	r2, #0
90013d42:	db0c      	blt.n	90013d5e <_ZN8touchgfx7Outline6moveToEii+0x62>
90013d44:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90013d46:	42ba      	cmp	r2, r7
90013d48:	da09      	bge.n	90013d5e <_ZN8touchgfx7Outline6moveToEii+0x62>
90013d4a:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90013d4e:	42ba      	cmp	r2, r7
90013d50:	f102 0201 	add.w	r2, r2, #1
90013d54:	bf38      	it	cc
90013d56:	3308      	addcc	r3, #8
90013d58:	60a2      	str	r2, [r4, #8]
90013d5a:	bf38      	it	cc
90013d5c:	6123      	strcc	r3, [r4, #16]
90013d5e:	6923      	ldr	r3, [r4, #16]
90013d60:	2200      	movs	r2, #0
90013d62:	8018      	strh	r0, [r3, #0]
90013d64:	8059      	strh	r1, [r3, #2]
90013d66:	809a      	strh	r2, [r3, #4]
90013d68:	80da      	strh	r2, [r3, #6]
90013d6a:	6166      	str	r6, [r4, #20]
90013d6c:	6225      	str	r5, [r4, #32]
90013d6e:	e9c4 5606 	strd	r5, r6, [r4, #24]
90013d72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90013d74 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90013d74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90013d78:	b0d0      	sub	sp, #320	@ 0x140
90013d7a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90013d7e:	466c      	mov	r4, sp
90013d80:	4627      	mov	r7, r4
90013d82:	1a0d      	subs	r5, r1, r0
90013d84:	f100 0308 	add.w	r3, r0, #8
90013d88:	2d48      	cmp	r5, #72	@ 0x48
90013d8a:	f340 80d5 	ble.w	90013f38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90013d8e:	112d      	asrs	r5, r5, #4
90013d90:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90013d94:	f9b0 9000 	ldrsh.w	r9, [r0]
90013d98:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90013d9c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90013da0:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90013da4:	6816      	ldr	r6, [r2, #0]
90013da6:	6006      	str	r6, [r0, #0]
90013da8:	6856      	ldr	r6, [r2, #4]
90013daa:	6046      	str	r6, [r0, #4]
90013dac:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90013db0:	f8a2 8002 	strh.w	r8, [r2, #2]
90013db4:	f8a2 e004 	strh.w	lr, [r2, #4]
90013db8:	f8a2 c006 	strh.w	ip, [r2, #6]
90013dbc:	f1a1 0208 	sub.w	r2, r1, #8
90013dc0:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90013dc4:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90013dc8:	4565      	cmp	r5, ip
90013dca:	db06      	blt.n	90013dda <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90013dcc:	d119      	bne.n	90013e02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90013dce:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90013dd2:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90013dd6:	42ae      	cmp	r6, r5
90013dd8:	dd13      	ble.n	90013e02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90013dda:	460e      	mov	r6, r1
90013ddc:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90013de0:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90013de4:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90013de8:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90013dec:	601d      	str	r5, [r3, #0]
90013dee:	6875      	ldr	r5, [r6, #4]
90013df0:	605d      	str	r5, [r3, #4]
90013df2:	f821 9c08 	strh.w	r9, [r1, #-8]
90013df6:	f821 cc06 	strh.w	ip, [r1, #-6]
90013dfa:	f821 8c04 	strh.w	r8, [r1, #-4]
90013dfe:	f821 ec02 	strh.w	lr, [r1, #-2]
90013e02:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90013e06:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
90013e0a:	42ae      	cmp	r6, r5
90013e0c:	db06      	blt.n	90013e1c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
90013e0e:	d116      	bne.n	90013e3e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90013e10:	f9b0 c000 	ldrsh.w	ip, [r0]
90013e14:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90013e18:	45ac      	cmp	ip, r5
90013e1a:	da10      	bge.n	90013e3e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90013e1c:	681d      	ldr	r5, [r3, #0]
90013e1e:	f9b0 8000 	ldrsh.w	r8, [r0]
90013e22:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90013e26:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90013e2a:	6005      	str	r5, [r0, #0]
90013e2c:	685d      	ldr	r5, [r3, #4]
90013e2e:	f8a0 8008 	strh.w	r8, [r0, #8]
90013e32:	6045      	str	r5, [r0, #4]
90013e34:	8146      	strh	r6, [r0, #10]
90013e36:	f8a0 e00c 	strh.w	lr, [r0, #12]
90013e3a:	f8a0 c00e 	strh.w	ip, [r0, #14]
90013e3e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90013e42:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90013e46:	4565      	cmp	r5, ip
90013e48:	db06      	blt.n	90013e58 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
90013e4a:	d119      	bne.n	90013e80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90013e4c:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90013e50:	f9b0 5000 	ldrsh.w	r5, [r0]
90013e54:	42ae      	cmp	r6, r5
90013e56:	da13      	bge.n	90013e80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90013e58:	460e      	mov	r6, r1
90013e5a:	f9b0 9000 	ldrsh.w	r9, [r0]
90013e5e:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
90013e62:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90013e66:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
90013e6a:	6005      	str	r5, [r0, #0]
90013e6c:	6875      	ldr	r5, [r6, #4]
90013e6e:	6045      	str	r5, [r0, #4]
90013e70:	f821 9c08 	strh.w	r9, [r1, #-8]
90013e74:	f821 cc06 	strh.w	ip, [r1, #-6]
90013e78:	f821 8c04 	strh.w	r8, [r1, #-4]
90013e7c:	f821 ec02 	strh.w	lr, [r1, #-2]
90013e80:	3308      	adds	r3, #8
90013e82:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90013e86:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
90013e8a:	45e6      	cmp	lr, ip
90013e8c:	dbf8      	blt.n	90013e80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90013e8e:	d105      	bne.n	90013e9c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90013e90:	f9b3 6000 	ldrsh.w	r6, [r3]
90013e94:	f9b0 5000 	ldrsh.w	r5, [r0]
90013e98:	42ae      	cmp	r6, r5
90013e9a:	dbf1      	blt.n	90013e80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90013e9c:	4615      	mov	r5, r2
90013e9e:	3a08      	subs	r2, #8
90013ea0:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90013ea4:	45b4      	cmp	ip, r6
90013ea6:	dbf9      	blt.n	90013e9c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90013ea8:	d105      	bne.n	90013eb6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
90013eaa:	f9b0 8000 	ldrsh.w	r8, [r0]
90013eae:	f9b2 6000 	ldrsh.w	r6, [r2]
90013eb2:	45b0      	cmp	r8, r6
90013eb4:	dbf2      	blt.n	90013e9c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90013eb6:	4293      	cmp	r3, r2
90013eb8:	f1a5 0608 	sub.w	r6, r5, #8
90013ebc:	d816      	bhi.n	90013eec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90013ebe:	f8d6 c000 	ldr.w	ip, [r6]
90013ec2:	f9b3 a000 	ldrsh.w	sl, [r3]
90013ec6:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
90013eca:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90013ece:	f8c3 c000 	str.w	ip, [r3]
90013ed2:	f8d6 c004 	ldr.w	ip, [r6, #4]
90013ed6:	f8c3 c004 	str.w	ip, [r3, #4]
90013eda:	f825 ac08 	strh.w	sl, [r5, #-8]
90013ede:	f825 ec06 	strh.w	lr, [r5, #-6]
90013ee2:	f825 9c04 	strh.w	r9, [r5, #-4]
90013ee6:	f825 8c02 	strh.w	r8, [r5, #-2]
90013eea:	e7c9      	b.n	90013e80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90013eec:	f8d6 e000 	ldr.w	lr, [r6]
90013ef0:	f9b0 a000 	ldrsh.w	sl, [r0]
90013ef4:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90013ef8:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90013efc:	f8c0 e000 	str.w	lr, [r0]
90013f00:	f8d6 e004 	ldr.w	lr, [r6, #4]
90013f04:	1a16      	subs	r6, r2, r0
90013f06:	f8c0 e004 	str.w	lr, [r0, #4]
90013f0a:	f825 ac08 	strh.w	sl, [r5, #-8]
90013f0e:	f825 cc06 	strh.w	ip, [r5, #-6]
90013f12:	f825 9c04 	strh.w	r9, [r5, #-4]
90013f16:	f825 8c02 	strh.w	r8, [r5, #-2]
90013f1a:	1acd      	subs	r5, r1, r3
90013f1c:	10ed      	asrs	r5, r5, #3
90013f1e:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
90013f22:	bfb5      	itete	lt
90013f24:	e9c4 0200 	strdlt	r0, r2, [r4]
90013f28:	e9c4 3100 	strdge	r3, r1, [r4]
90013f2c:	460a      	movlt	r2, r1
90013f2e:	4603      	movge	r3, r0
90013f30:	3408      	adds	r4, #8
90013f32:	4618      	mov	r0, r3
90013f34:	4611      	mov	r1, r2
90013f36:	e724      	b.n	90013d82 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90013f38:	4299      	cmp	r1, r3
90013f3a:	d927      	bls.n	90013f8c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
90013f3c:	f1a3 0210 	sub.w	r2, r3, #16
90013f40:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90013f44:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90013f48:	45ac      	cmp	ip, r5
90013f4a:	db06      	blt.n	90013f5a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
90013f4c:	d11c      	bne.n	90013f88 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90013f4e:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90013f52:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
90013f56:	42ae      	cmp	r6, r5
90013f58:	da16      	bge.n	90013f88 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90013f5a:	4615      	mov	r5, r2
90013f5c:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90013f60:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90013f64:	3a08      	subs	r2, #8
90013f66:	f855 6f08 	ldr.w	r6, [r5, #8]!
90013f6a:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
90013f6e:	6196      	str	r6, [r2, #24]
90013f70:	42a8      	cmp	r0, r5
90013f72:	686e      	ldr	r6, [r5, #4]
90013f74:	f8a2 9010 	strh.w	r9, [r2, #16]
90013f78:	61d6      	str	r6, [r2, #28]
90013f7a:	f8a2 c012 	strh.w	ip, [r2, #18]
90013f7e:	f8a2 8014 	strh.w	r8, [r2, #20]
90013f82:	f8a2 e016 	strh.w	lr, [r2, #22]
90013f86:	d1db      	bne.n	90013f40 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
90013f88:	3308      	adds	r3, #8
90013f8a:	e7d5      	b.n	90013f38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90013f8c:	42bc      	cmp	r4, r7
90013f8e:	d903      	bls.n	90013f98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90013f90:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90013f94:	3c08      	subs	r4, #8
90013f96:	e6f4      	b.n	90013d82 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90013f98:	b050      	add	sp, #320	@ 0x140
90013f9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90013f9e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90013f9e:	b510      	push	{r4, lr}
90013fa0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90013fa2:	4604      	mov	r4, r0
90013fa4:	07da      	lsls	r2, r3, #31
90013fa6:	d507      	bpl.n	90013fb8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
90013fa8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90013fac:	f7ff fe8c 	bl	90013cc8 <_ZN8touchgfx7Outline6lineToEii>
90013fb0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90013fb2:	f023 0301 	bic.w	r3, r3, #1
90013fb6:	6243      	str	r3, [r0, #36]	@ 0x24
90013fb8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90013fba:	079b      	lsls	r3, r3, #30
90013fbc:	d521      	bpl.n	90014002 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90013fbe:	6923      	ldr	r3, [r4, #16]
90013fc0:	88d9      	ldrh	r1, [r3, #6]
90013fc2:	889a      	ldrh	r2, [r3, #4]
90013fc4:	430a      	orrs	r2, r1
90013fc6:	d010      	beq.n	90013fea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90013fc8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90013fcc:	2a00      	cmp	r2, #0
90013fce:	db0c      	blt.n	90013fea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90013fd0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90013fd2:	428a      	cmp	r2, r1
90013fd4:	da09      	bge.n	90013fea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90013fd6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
90013fda:	4291      	cmp	r1, r2
90013fdc:	f102 0201 	add.w	r2, r2, #1
90013fe0:	bf88      	it	hi
90013fe2:	3308      	addhi	r3, #8
90013fe4:	60a2      	str	r2, [r4, #8]
90013fe6:	bf88      	it	hi
90013fe8:	6123      	strhi	r3, [r4, #16]
90013fea:	68a1      	ldr	r1, [r4, #8]
90013fec:	b129      	cbz	r1, 90013ffa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90013fee:	6863      	ldr	r3, [r4, #4]
90013ff0:	4299      	cmp	r1, r3
90013ff2:	d802      	bhi.n	90013ffa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90013ff4:	68e0      	ldr	r0, [r4, #12]
90013ff6:	f7ff febd 	bl	90013d74 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
90013ffa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90013ffc:	f023 0302 	bic.w	r3, r3, #2
90014000:	6263      	str	r3, [r4, #36]	@ 0x24
90014002:	68e0      	ldr	r0, [r4, #12]
90014004:	bd10      	pop	{r4, pc}
	...

90014008 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90014008:	4b01      	ldr	r3, [pc, #4]	@ (90014010 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
9001400a:	6818      	ldr	r0, [r3, #0]
9001400c:	4770      	bx	lr
9001400e:	bf00      	nop
90014010:	2001aa48 	.word	0x2001aa48

90014014 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90014014:	4b01      	ldr	r3, [pc, #4]	@ (9001401c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90014016:	6818      	ldr	r0, [r3, #0]
90014018:	4770      	bx	lr
9001401a:	bf00      	nop
9001401c:	2001aa4c 	.word	0x2001aa4c

90014020 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90014020:	b510      	push	{r4, lr}
90014022:	6803      	ldr	r3, [r0, #0]
90014024:	460c      	mov	r4, r1
90014026:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014028:	4798      	blx	r3
9001402a:	1b03      	subs	r3, r0, r4
9001402c:	4258      	negs	r0, r3
9001402e:	4158      	adcs	r0, r3
90014030:	bd10      	pop	{r4, pc}
	...

90014034 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90014034:	4b01      	ldr	r3, [pc, #4]	@ (9001403c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
90014036:	6019      	str	r1, [r3, #0]
90014038:	4770      	bx	lr
9001403a:	bf00      	nop
9001403c:	2001aa50 	.word	0x2001aa50

90014040 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90014040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014044:	4696      	mov	lr, r2
90014046:	b097      	sub	sp, #92	@ 0x5c
90014048:	4605      	mov	r5, r0
9001404a:	4614      	mov	r4, r2
9001404c:	460e      	mov	r6, r1
9001404e:	461f      	mov	r7, r3
90014050:	f10d 0c1c 	add.w	ip, sp, #28
90014054:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
90014058:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
9001405c:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
90014060:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014064:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014068:	f8de 3000 	ldr.w	r3, [lr]
9001406c:	f104 0e14 	add.w	lr, r4, #20
90014070:	f8cc 3000 	str.w	r3, [ip]
90014074:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90014078:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001407c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014080:	f8de 3000 	ldr.w	r3, [lr]
90014084:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90014088:	f8cc 3000 	str.w	r3, [ip]
9001408c:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90014090:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014094:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014098:	f8de 3000 	ldr.w	r3, [lr]
9001409c:	4631      	mov	r1, r6
9001409e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900140a0:	4628      	mov	r0, r5
900140a2:	f8cc 3000 	str.w	r3, [ip]
900140a6:	682b      	ldr	r3, [r5, #0]
900140a8:	9201      	str	r2, [sp, #4]
900140aa:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900140ac:	f8cd 8008 	str.w	r8, [sp, #8]
900140b0:	9200      	str	r2, [sp, #0]
900140b2:	aa07      	add	r2, sp, #28
900140b4:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900140b8:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
900140bc:	463b      	mov	r3, r7
900140be:	47d8      	blx	fp
900140c0:	46a6      	mov	lr, r4
900140c2:	f10d 0c1c 	add.w	ip, sp, #28
900140c6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900140ca:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900140ce:	f8de 3000 	ldr.w	r3, [lr]
900140d2:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
900140d6:	343c      	adds	r4, #60	@ 0x3c
900140d8:	f8cc 3000 	str.w	r3, [ip]
900140dc:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
900140e0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900140e4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900140e8:	f8de 3000 	ldr.w	r3, [lr]
900140ec:	f8cc 3000 	str.w	r3, [ip]
900140f0:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
900140f4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
900140f6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900140fa:	6823      	ldr	r3, [r4, #0]
900140fc:	4631      	mov	r1, r6
900140fe:	4628      	mov	r0, r5
90014100:	f8cc 3000 	str.w	r3, [ip]
90014104:	682b      	ldr	r3, [r5, #0]
90014106:	e9cd 9a03 	strd	r9, sl, [sp, #12]
9001410a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
9001410c:	f8cd 8008 	str.w	r8, [sp, #8]
90014110:	9201      	str	r2, [sp, #4]
90014112:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90014114:	9200      	str	r2, [sp, #0]
90014116:	aa07      	add	r2, sp, #28
90014118:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
9001411a:	463b      	mov	r3, r7
9001411c:	47a0      	blx	r4
9001411e:	b017      	add	sp, #92	@ 0x5c
90014120:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90014124 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90014124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014128:	b08d      	sub	sp, #52	@ 0x34
9001412a:	4688      	mov	r8, r1
9001412c:	f8d3 c000 	ldr.w	ip, [r3]
90014130:	9916      	ldr	r1, [sp, #88]	@ 0x58
90014132:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
90014136:	680f      	ldr	r7, [r1, #0]
90014138:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
9001413c:	eba7 070c 	sub.w	r7, r7, ip
90014140:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
90014144:	edd3 6a07 	vldr	s13, [r3, #28]
90014148:	42bc      	cmp	r4, r7
9001414a:	9918      	ldr	r1, [sp, #96]	@ 0x60
9001414c:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
90014150:	bfa8      	it	ge
90014152:	463c      	movge	r4, r7
90014154:	f9b1 9000 	ldrsh.w	r9, [r1]
90014158:	f9ba 1000 	ldrsh.w	r1, [sl]
9001415c:	ee07 4a90 	vmov	s15, r4
90014160:	eb09 0e0c 	add.w	lr, r9, ip
90014164:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
90014168:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
9001416c:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
90014170:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
90014174:	4571      	cmp	r1, lr
90014176:	ee25 4a04 	vmul.f32	s8, s10, s8
9001417a:	ee65 4a24 	vmul.f32	s9, s10, s9
9001417e:	ee25 5a27 	vmul.f32	s10, s10, s15
90014182:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90014186:	ee71 0aa4 	vadd.f32	s1, s3, s9
9001418a:	ee32 1a05 	vadd.f32	s2, s4, s10
9001418e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90014192:	ee36 0a84 	vadd.f32	s0, s13, s8
90014196:	ee61 1a87 	vmul.f32	s3, s3, s14
9001419a:	ee22 2a07 	vmul.f32	s4, s4, s14
9001419e:	f340 808c 	ble.w	900142ba <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
900141a2:	eba1 060e 	sub.w	r6, r1, lr
900141a6:	fb96 f5f4 	sdiv	r5, r6, r4
900141aa:	ee07 5a10 	vmov	s14, r5
900141ae:	2d00      	cmp	r5, #0
900141b0:	fb04 6615 	mls	r6, r4, r5, r6
900141b4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900141b8:	eea7 0a04 	vfma.f32	s0, s14, s8
900141bc:	eee7 0a24 	vfma.f32	s1, s14, s9
900141c0:	eea7 1a05 	vfma.f32	s2, s14, s10
900141c4:	dd12      	ble.n	900141ec <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
900141c6:	ee70 6a44 	vsub.f32	s13, s0, s8
900141ca:	ee70 1ae4 	vsub.f32	s3, s1, s9
900141ce:	ee31 2a45 	vsub.f32	s4, s2, s10
900141d2:	eef5 6a40 	vcmp.f32	s13, #0.0
900141d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900141da:	bf14      	ite	ne
900141dc:	ee87 7aa6 	vdivne.f32	s14, s15, s13
900141e0:	eeb0 7a67 	vmoveq.f32	s14, s15
900141e4:	ee61 1a87 	vmul.f32	s3, s3, s14
900141e8:	ee22 2a07 	vmul.f32	s4, s4, s14
900141ec:	fb05 f204 	mul.w	r2, r5, r4
900141f0:	1abf      	subs	r7, r7, r2
900141f2:	4494      	add	ip, r2
900141f4:	f8ba 2004 	ldrh.w	r2, [sl, #4]
900141f8:	4411      	add	r1, r2
900141fa:	eb09 020c 	add.w	r2, r9, ip
900141fe:	b209      	sxth	r1, r1
90014200:	443a      	add	r2, r7
90014202:	428a      	cmp	r2, r1
90014204:	bfc4      	itt	gt
90014206:	eba1 0209 	subgt.w	r2, r1, r9
9001420a:	eba2 070c 	subgt.w	r7, r2, ip
9001420e:	2f00      	cmp	r7, #0
90014210:	dd50      	ble.n	900142b4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90014212:	fb97 f1f4 	sdiv	r1, r7, r4
90014216:	fb04 7211 	mls	r2, r4, r1, r7
9001421a:	b90a      	cbnz	r2, 90014220 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
9001421c:	3901      	subs	r1, #1
9001421e:	4622      	mov	r2, r4
90014220:	eec7 3a80 	vdiv.f32	s7, s15, s0
90014224:	6840      	ldr	r0, [r0, #4]
90014226:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
9001422a:	44b6      	add	lr, r6
9001422c:	f8d0 a000 	ldr.w	sl, [r0]
90014230:	2900      	cmp	r1, #0
90014232:	bfcc      	ite	gt
90014234:	46a1      	movgt	r9, r4
90014236:	4691      	movle	r9, r2
90014238:	900b      	str	r0, [sp, #44]	@ 0x2c
9001423a:	9817      	ldr	r0, [sp, #92]	@ 0x5c
9001423c:	fb04 e505 	mla	r5, r4, r5, lr
90014240:	eef0 6a42 	vmov.f32	s13, s4
90014244:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
90014248:	9008      	str	r0, [sp, #32]
9001424a:	eeb0 7a61 	vmov.f32	s14, s3
9001424e:	9818      	ldr	r0, [sp, #96]	@ 0x60
90014250:	695b      	ldr	r3, [r3, #20]
90014252:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90014256:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
9001425a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
9001425e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90014260:	445b      	add	r3, fp
90014262:	9307      	str	r3, [sp, #28]
90014264:	ee16 3a90 	vmov	r3, s13
90014268:	e9cd 8505 	strd	r8, r5, [sp, #20]
9001426c:	ee60 2aa3 	vmul.f32	s5, s1, s7
90014270:	ee21 3a23 	vmul.f32	s6, s2, s7
90014274:	ee72 7ae1 	vsub.f32	s15, s5, s3
90014278:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
9001427c:	ee17 7a90 	vmov	r7, s15
90014280:	ee73 7a42 	vsub.f32	s15, s6, s4
90014284:	fb97 f7f4 	sdiv	r7, r7, r4
90014288:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
9001428c:	ee17 ca90 	vmov	ip, s15
90014290:	fb9c fcf4 	sdiv	ip, ip, r4
90014294:	fb0c 3306 	mla	r3, ip, r6, r3
90014298:	9302      	str	r3, [sp, #8]
9001429a:	ee17 3a10 	vmov	r3, s14
9001429e:	e9cd 7c03 	strd	r7, ip, [sp, #12]
900142a2:	fb07 3706 	mla	r7, r7, r6, r3
900142a6:	eba9 0306 	sub.w	r3, r9, r6
900142aa:	e9cd 4700 	strd	r4, r7, [sp]
900142ae:	f8da 4008 	ldr.w	r4, [sl, #8]
900142b2:	47a0      	blx	r4
900142b4:	b00d      	add	sp, #52	@ 0x34
900142b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900142ba:	2500      	movs	r5, #0
900142bc:	462e      	mov	r6, r5
900142be:	e799      	b.n	900141f4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

900142c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
900142c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900142c4:	b0db      	sub	sp, #364	@ 0x16c
900142c6:	461d      	mov	r5, r3
900142c8:	4614      	mov	r4, r2
900142ca:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
900142ce:	910f      	str	r1, [sp, #60]	@ 0x3c
900142d0:	4629      	mov	r1, r5
900142d2:	930a      	str	r3, [sp, #40]	@ 0x28
900142d4:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
900142d8:	9009      	str	r0, [sp, #36]	@ 0x24
900142da:	930b      	str	r3, [sp, #44]	@ 0x2c
900142dc:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
900142e0:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
900142e4:	9310      	str	r3, [sp, #64]	@ 0x40
900142e6:	6803      	ldr	r3, [r0, #0]
900142e8:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
900142ea:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
900142ee:	47b8      	blx	r7
900142f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900142f2:	6058      	str	r0, [r3, #4]
900142f4:	2800      	cmp	r0, #0
900142f6:	f000 83a1 	beq.w	90014a3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900142fa:	682b      	ldr	r3, [r5, #0]
900142fc:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
90014300:	ed94 7a02 	vldr	s14, [r4, #8]
90014304:	9314      	str	r3, [sp, #80]	@ 0x50
90014306:	686b      	ldr	r3, [r5, #4]
90014308:	eeb4 7ae7 	vcmpe.f32	s14, s15
9001430c:	9315      	str	r3, [sp, #84]	@ 0x54
9001430e:	4bc1      	ldr	r3, [pc, #772]	@ (90014614 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90014310:	7819      	ldrb	r1, [r3, #0]
90014312:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90014316:	2900      	cmp	r1, #0
90014318:	bf16      	itet	ne
9001431a:	4619      	movne	r1, r3
9001431c:	4611      	moveq	r1, r2
9001431e:	4613      	movne	r3, r2
90014320:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014324:	9116      	str	r1, [sp, #88]	@ 0x58
90014326:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
9001432a:	f240 8387 	bls.w	90014a3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001432e:	ed94 7a07 	vldr	s14, [r4, #28]
90014332:	eeb4 7ae7 	vcmpe.f32	s14, s15
90014336:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001433a:	f240 837f 	bls.w	90014a3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001433e:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
90014342:	eeb4 7ae7 	vcmpe.f32	s14, s15
90014346:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001434a:	f240 8377 	bls.w	90014a3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001434e:	6822      	ldr	r2, [r4, #0]
90014350:	4bb1      	ldr	r3, [pc, #708]	@ (90014618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90014352:	429a      	cmp	r2, r3
90014354:	f2c0 8372 	blt.w	90014a3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014358:	49b0      	ldr	r1, [pc, #704]	@ (9001461c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
9001435a:	6963      	ldr	r3, [r4, #20]
9001435c:	428a      	cmp	r2, r1
9001435e:	f300 836d 	bgt.w	90014a3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014362:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90014366:	48ae      	ldr	r0, [pc, #696]	@ (90014620 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90014368:	33ff      	adds	r3, #255	@ 0xff
9001436a:	4283      	cmp	r3, r0
9001436c:	f200 8366 	bhi.w	90014a3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014370:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90014372:	4dac      	ldr	r5, [pc, #688]	@ (90014624 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90014374:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90014378:	33ff      	adds	r3, #255	@ 0xff
9001437a:	42ab      	cmp	r3, r5
9001437c:	f200 835e 	bhi.w	90014a3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014380:	6862      	ldr	r2, [r4, #4]
90014382:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
90014386:	33ff      	adds	r3, #255	@ 0xff
90014388:	4283      	cmp	r3, r0
9001438a:	f200 8357 	bhi.w	90014a3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001438e:	69a1      	ldr	r1, [r4, #24]
90014390:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
90014394:	33ff      	adds	r3, #255	@ 0xff
90014396:	4283      	cmp	r3, r0
90014398:	f200 8350 	bhi.w	90014a3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001439c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9001439e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
900143a2:	30ff      	adds	r0, #255	@ 0xff
900143a4:	42a8      	cmp	r0, r5
900143a6:	f200 8349 	bhi.w	90014a3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900143aa:	428a      	cmp	r2, r1
900143ac:	f280 8110 	bge.w	900145d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
900143b0:	429a      	cmp	r2, r3
900143b2:	f300 8119 	bgt.w	900145e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
900143b6:	4299      	cmp	r1, r3
900143b8:	f280 811d 	bge.w	900145f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
900143bc:	2502      	movs	r5, #2
900143be:	2701      	movs	r7, #1
900143c0:	46a9      	mov	r9, r5
900143c2:	46b8      	mov	r8, r7
900143c4:	f04f 0a00 	mov.w	sl, #0
900143c8:	4621      	mov	r1, r4
900143ca:	a849      	add	r0, sp, #292	@ 0x124
900143cc:	f003 fd30 	bl	90017e30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
900143d0:	4622      	mov	r2, r4
900143d2:	4653      	mov	r3, sl
900143d4:	a949      	add	r1, sp, #292	@ 0x124
900143d6:	f8cd 9000 	str.w	r9, [sp]
900143da:	a819      	add	r0, sp, #100	@ 0x64
900143dc:	f003 fe58 	bl	90018090 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900143e0:	4622      	mov	r2, r4
900143e2:	4653      	mov	r3, sl
900143e4:	a949      	add	r1, sp, #292	@ 0x124
900143e6:	f8cd 8000 	str.w	r8, [sp]
900143ea:	a829      	add	r0, sp, #164	@ 0xa4
900143ec:	f003 fe50 	bl	90018090 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900143f0:	4643      	mov	r3, r8
900143f2:	4622      	mov	r2, r4
900143f4:	a949      	add	r1, sp, #292	@ 0x124
900143f6:	f8cd 9000 	str.w	r9, [sp]
900143fa:	a839      	add	r0, sp, #228	@ 0xe4
900143fc:	f003 fe48 	bl	90018090 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90014400:	42af      	cmp	r7, r5
90014402:	af12      	add	r7, sp, #72	@ 0x48
90014404:	bfb7      	itett	lt
90014406:	2300      	movlt	r3, #0
90014408:	2301      	movge	r3, #1
9001440a:	ad29      	addlt	r5, sp, #164	@ 0xa4
9001440c:	ac19      	addlt	r4, sp, #100	@ 0x64
9001440e:	bfb1      	iteee	lt
90014410:	930e      	strlt	r3, [sp, #56]	@ 0x38
90014412:	ad19      	addge	r5, sp, #100	@ 0x64
90014414:	930e      	strge	r3, [sp, #56]	@ 0x38
90014416:	ac29      	addge	r4, sp, #164	@ 0xa4
90014418:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001441a:	e893 0003 	ldmia.w	r3, {r0, r1}
9001441e:	e887 0003 	stmia.w	r7, {r0, r1}
90014422:	b928      	cbnz	r0, 90014430 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90014424:	4b80      	ldr	r3, [pc, #512]	@ (90014628 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90014426:	6818      	ldr	r0, [r3, #0]
90014428:	6803      	ldr	r3, [r0, #0]
9001442a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001442c:	4798      	blx	r3
9001442e:	6038      	str	r0, [r7, #0]
90014430:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90014432:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90014436:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001443a:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
9001443c:	930c      	str	r3, [sp, #48]	@ 0x30
9001443e:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014440:	6963      	ldr	r3, [r4, #20]
90014442:	440b      	add	r3, r1
90014444:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90014448:	4408      	add	r0, r1
9001444a:	b200      	sxth	r0, r0
9001444c:	4283      	cmp	r3, r0
9001444e:	900d      	str	r0, [sp, #52]	@ 0x34
90014450:	f280 80dd 	bge.w	9001460e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90014454:	428b      	cmp	r3, r1
90014456:	da08      	bge.n	9001446a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014458:	2a00      	cmp	r2, #0
9001445a:	dd06      	ble.n	9001446a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
9001445c:	1acb      	subs	r3, r1, r3
9001445e:	429a      	cmp	r2, r3
90014460:	f2c0 80e4 	blt.w	9001462c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90014464:	2b00      	cmp	r3, #0
90014466:	f300 80e2 	bgt.w	9001462e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
9001446a:	6967      	ldr	r7, [r4, #20]
9001446c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90014470:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014472:	443b      	add	r3, r7
90014474:	461f      	mov	r7, r3
90014476:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90014478:	1bdf      	subs	r7, r3, r7
9001447a:	4297      	cmp	r7, r2
9001447c:	bfa8      	it	ge
9001447e:	4617      	movge	r7, r2
90014480:	2f00      	cmp	r7, #0
90014482:	f340 8166 	ble.w	90014752 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90014486:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90014488:	6829      	ldr	r1, [r5, #0]
9001448a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001448e:	f9bb 3000 	ldrsh.w	r3, [fp]
90014492:	4411      	add	r1, r2
90014494:	6820      	ldr	r0, [r4, #0]
90014496:	4299      	cmp	r1, r3
90014498:	dd1a      	ble.n	900144d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
9001449a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
9001449e:	4402      	add	r2, r0
900144a0:	440b      	add	r3, r1
900144a2:	b21b      	sxth	r3, r3
900144a4:	429a      	cmp	r2, r3
900144a6:	dc13      	bgt.n	900144d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
900144a8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900144aa:	a912      	add	r1, sp, #72	@ 0x48
900144ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900144ae:	9809      	ldr	r0, [sp, #36]	@ 0x24
900144b0:	681b      	ldr	r3, [r3, #0]
900144b2:	9206      	str	r2, [sp, #24]
900144b4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900144b6:	9500      	str	r5, [sp, #0]
900144b8:	9205      	str	r2, [sp, #20]
900144ba:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900144bc:	e9cd b203 	strd	fp, r2, [sp, #12]
900144c0:	9a64      	ldr	r2, [sp, #400]	@ 0x190
900144c2:	e9cd 8201 	strd	r8, r2, [sp, #4]
900144c6:	aa49      	add	r2, sp, #292	@ 0x124
900144c8:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
900144cc:	4623      	mov	r3, r4
900144ce:	47c8      	blx	r9
900144d0:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
900144d4:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
900144d8:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
900144dc:	ee37 7a27 	vadd.f32	s14, s14, s15
900144e0:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
900144e4:	68a1      	ldr	r1, [r4, #8]
900144e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
900144ea:	ed94 6a08 	vldr	s12, [r4, #32]
900144ee:	edd4 6a07 	vldr	s13, [r4, #28]
900144f2:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
900144f6:	ee76 6a86 	vadd.f32	s13, s13, s12
900144fa:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
900144fe:	e9d4 2300 	ldrd	r2, r3, [r4]
90014502:	edc4 6a07 	vstr	s13, [r4, #28]
90014506:	441a      	add	r2, r3
90014508:	6963      	ldr	r3, [r4, #20]
9001450a:	3301      	adds	r3, #1
9001450c:	6022      	str	r2, [r4, #0]
9001450e:	6163      	str	r3, [r4, #20]
90014510:	69a3      	ldr	r3, [r4, #24]
90014512:	3b01      	subs	r3, #1
90014514:	61a3      	str	r3, [r4, #24]
90014516:	6923      	ldr	r3, [r4, #16]
90014518:	440b      	add	r3, r1
9001451a:	68e1      	ldr	r1, [r4, #12]
9001451c:	428b      	cmp	r3, r1
9001451e:	6123      	str	r3, [r4, #16]
90014520:	db15      	blt.n	9001454e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90014522:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90014526:	3201      	adds	r2, #1
90014528:	1a5b      	subs	r3, r3, r1
9001452a:	ee76 6a26 	vadd.f32	s13, s12, s13
9001452e:	6022      	str	r2, [r4, #0]
90014530:	6123      	str	r3, [r4, #16]
90014532:	edc4 6a07 	vstr	s13, [r4, #28]
90014536:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
9001453a:	ee36 7a87 	vadd.f32	s14, s13, s14
9001453e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90014542:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90014546:	ee77 7a27 	vadd.f32	s15, s14, s15
9001454a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
9001454e:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90014552:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90014556:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
9001455a:	ee37 7a27 	vadd.f32	s14, s14, s15
9001455e:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90014562:	68a9      	ldr	r1, [r5, #8]
90014564:	ee77 7aa6 	vadd.f32	s15, s15, s13
90014568:	ed95 6a08 	vldr	s12, [r5, #32]
9001456c:	edd5 6a07 	vldr	s13, [r5, #28]
90014570:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90014574:	ee76 6a86 	vadd.f32	s13, s13, s12
90014578:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
9001457c:	e9d5 2300 	ldrd	r2, r3, [r5]
90014580:	edc5 6a07 	vstr	s13, [r5, #28]
90014584:	441a      	add	r2, r3
90014586:	696b      	ldr	r3, [r5, #20]
90014588:	3301      	adds	r3, #1
9001458a:	602a      	str	r2, [r5, #0]
9001458c:	616b      	str	r3, [r5, #20]
9001458e:	69ab      	ldr	r3, [r5, #24]
90014590:	3b01      	subs	r3, #1
90014592:	61ab      	str	r3, [r5, #24]
90014594:	692b      	ldr	r3, [r5, #16]
90014596:	440b      	add	r3, r1
90014598:	68e9      	ldr	r1, [r5, #12]
9001459a:	428b      	cmp	r3, r1
9001459c:	612b      	str	r3, [r5, #16]
9001459e:	db15      	blt.n	900145cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
900145a0:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
900145a4:	3201      	adds	r2, #1
900145a6:	1a5b      	subs	r3, r3, r1
900145a8:	ee76 6a26 	vadd.f32	s13, s12, s13
900145ac:	602a      	str	r2, [r5, #0]
900145ae:	612b      	str	r3, [r5, #16]
900145b0:	edc5 6a07 	vstr	s13, [r5, #28]
900145b4:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
900145b8:	ee36 7a87 	vadd.f32	s14, s13, s14
900145bc:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
900145c0:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
900145c4:	ee77 7a27 	vadd.f32	s15, s14, s15
900145c8:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
900145cc:	3f01      	subs	r7, #1
900145ce:	e757      	b.n	90014480 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
900145d0:	4299      	cmp	r1, r3
900145d2:	dc13      	bgt.n	900145fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
900145d4:	429a      	cmp	r2, r3
900145d6:	da14      	bge.n	90014602 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
900145d8:	2502      	movs	r5, #2
900145da:	2703      	movs	r7, #3
900145dc:	f04f 0800 	mov.w	r8, #0
900145e0:	46a9      	mov	r9, r5
900145e2:	f04f 0a01 	mov.w	sl, #1
900145e6:	e6ef      	b.n	900143c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
900145e8:	2501      	movs	r5, #1
900145ea:	2700      	movs	r7, #0
900145ec:	46a9      	mov	r9, r5
900145ee:	46b8      	mov	r8, r7
900145f0:	f04f 0a02 	mov.w	sl, #2
900145f4:	e6e8      	b.n	900143c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
900145f6:	2501      	movs	r5, #1
900145f8:	2702      	movs	r7, #2
900145fa:	e6e1      	b.n	900143c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
900145fc:	2500      	movs	r5, #0
900145fe:	2701      	movs	r7, #1
90014600:	e7f4      	b.n	900145ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90014602:	2702      	movs	r7, #2
90014604:	2503      	movs	r5, #3
90014606:	f04f 0900 	mov.w	r9, #0
9001460a:	46b8      	mov	r8, r7
9001460c:	e7e9      	b.n	900145e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
9001460e:	4613      	mov	r3, r2
90014610:	e728      	b.n	90014464 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90014612:	bf00      	nop
90014614:	2001aa36 	.word	0x2001aa36
90014618:	fffd8f01 	.word	0xfffd8f01
9001461c:	00027100 	.word	0x00027100
90014620:	0004e1ff 	.word	0x0004e1ff
90014624:	0004e1fe 	.word	0x0004e1fe
90014628:	2001aa40 	.word	0x2001aa40
9001462c:	4613      	mov	r3, r2
9001462e:	992b      	ldr	r1, [sp, #172]	@ 0xac
90014630:	469e      	mov	lr, r3
90014632:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
90014634:	469c      	mov	ip, r3
90014636:	9111      	str	r1, [sp, #68]	@ 0x44
90014638:	f04f 0900 	mov.w	r9, #0
9001463c:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
90014640:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
90014644:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
90014648:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
9001464c:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
90014650:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
90014654:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
90014658:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
9001465c:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
90014660:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
90014664:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
90014668:	f1bc 0f00 	cmp.w	ip, #0
9001466c:	d147      	bne.n	900146fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
9001466e:	eb03 0c07 	add.w	ip, r3, r7
90014672:	1ad7      	subs	r7, r2, r3
90014674:	f1b9 0f00 	cmp.w	r9, #0
90014678:	d009      	beq.n	9001468e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
9001467a:	9029      	str	r0, [sp, #164]	@ 0xa4
9001467c:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
90014680:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
90014684:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
90014688:	912d      	str	r1, [sp, #180]	@ 0xb4
9001468a:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
9001468e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90014690:	f04f 0800 	mov.w	r8, #0
90014694:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90014698:	9111      	str	r1, [sp, #68]	@ 0x44
9001469a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
9001469e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
900146a2:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
900146a6:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
900146aa:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
900146ae:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
900146b2:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
900146b6:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
900146ba:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
900146be:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
900146c2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
900146c6:	f1be 0f00 	cmp.w	lr, #0
900146ca:	d031      	beq.n	90014730 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
900146cc:	9e11      	ldr	r6, [sp, #68]	@ 0x44
900146ce:	4450      	add	r0, sl
900146d0:	ee76 6aa4 	vadd.f32	s13, s13, s9
900146d4:	4431      	add	r1, r6
900146d6:	ee37 7a04 	vadd.f32	s14, s14, s8
900146da:	ee77 7aa3 	vadd.f32	s15, s15, s7
900146de:	4549      	cmp	r1, r9
900146e0:	db08      	blt.n	900146f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
900146e2:	ee77 7a85 	vadd.f32	s15, s15, s10
900146e6:	3001      	adds	r0, #1
900146e8:	ee76 6aa5 	vadd.f32	s13, s13, s11
900146ec:	eba1 0109 	sub.w	r1, r1, r9
900146f0:	ee37 7a06 	vadd.f32	s14, s14, s12
900146f4:	f10e 3eff 	add.w	lr, lr, #4294967295
900146f8:	f04f 0801 	mov.w	r8, #1
900146fc:	e7e3      	b.n	900146c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
900146fe:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90014700:	4450      	add	r0, sl
90014702:	ee37 7a24 	vadd.f32	s14, s14, s9
90014706:	4431      	add	r1, r6
90014708:	ee77 7a84 	vadd.f32	s15, s15, s8
9001470c:	ee76 6aa3 	vadd.f32	s13, s13, s7
90014710:	4541      	cmp	r1, r8
90014712:	db08      	blt.n	90014726 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90014714:	ee76 6a85 	vadd.f32	s13, s13, s10
90014718:	3001      	adds	r0, #1
9001471a:	ee37 7a25 	vadd.f32	s14, s14, s11
9001471e:	eba1 0108 	sub.w	r1, r1, r8
90014722:	ee77 7a86 	vadd.f32	s15, s15, s12
90014726:	f10c 3cff 	add.w	ip, ip, #4294967295
9001472a:	f04f 0901 	mov.w	r9, #1
9001472e:	e79b      	b.n	90014668 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90014730:	449c      	add	ip, r3
90014732:	1aff      	subs	r7, r7, r3
90014734:	f1b8 0f00 	cmp.w	r8, #0
90014738:	d009      	beq.n	9001474e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
9001473a:	9019      	str	r0, [sp, #100]	@ 0x64
9001473c:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90014740:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90014744:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90014748:	911d      	str	r1, [sp, #116]	@ 0x74
9001474a:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
9001474e:	1ad2      	subs	r2, r2, r3
90014750:	e68b      	b.n	9001446a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014752:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90014754:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
90014756:	2b00      	cmp	r3, #0
90014758:	f000 80d1 	beq.w	900148fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
9001475c:	ad19      	add	r5, sp, #100	@ 0x64
9001475e:	ac39      	add	r4, sp, #228	@ 0xe4
90014760:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90014762:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90014766:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001476a:	930c      	str	r3, [sp, #48]	@ 0x30
9001476c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001476e:	6963      	ldr	r3, [r4, #20]
90014770:	440b      	add	r3, r1
90014772:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90014776:	4408      	add	r0, r1
90014778:	b200      	sxth	r0, r0
9001477a:	4283      	cmp	r3, r0
9001477c:	900d      	str	r0, [sp, #52]	@ 0x34
9001477e:	f280 80c1 	bge.w	90014904 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90014782:	428b      	cmp	r3, r1
90014784:	da08      	bge.n	90014798 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90014786:	2a00      	cmp	r2, #0
90014788:	dd06      	ble.n	90014798 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
9001478a:	1acb      	subs	r3, r1, r3
9001478c:	429a      	cmp	r2, r3
9001478e:	f2c0 80bb 	blt.w	90014908 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90014792:	2b00      	cmp	r3, #0
90014794:	f300 80b9 	bgt.w	9001490a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90014798:	6967      	ldr	r7, [r4, #20]
9001479a:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
9001479e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900147a0:	443b      	add	r3, r7
900147a2:	461f      	mov	r7, r3
900147a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900147a6:	1bdf      	subs	r7, r3, r7
900147a8:	4297      	cmp	r7, r2
900147aa:	bfa8      	it	ge
900147ac:	4617      	movge	r7, r2
900147ae:	2f00      	cmp	r7, #0
900147b0:	f340 813c 	ble.w	90014a2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
900147b4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
900147b6:	6829      	ldr	r1, [r5, #0]
900147b8:	f9b3 2000 	ldrsh.w	r2, [r3]
900147bc:	f9bb 3000 	ldrsh.w	r3, [fp]
900147c0:	4411      	add	r1, r2
900147c2:	6820      	ldr	r0, [r4, #0]
900147c4:	4299      	cmp	r1, r3
900147c6:	dd1a      	ble.n	900147fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
900147c8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
900147cc:	4402      	add	r2, r0
900147ce:	440b      	add	r3, r1
900147d0:	b21b      	sxth	r3, r3
900147d2:	429a      	cmp	r2, r3
900147d4:	dc13      	bgt.n	900147fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
900147d6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900147d8:	a912      	add	r1, sp, #72	@ 0x48
900147da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900147dc:	9809      	ldr	r0, [sp, #36]	@ 0x24
900147de:	681b      	ldr	r3, [r3, #0]
900147e0:	9206      	str	r2, [sp, #24]
900147e2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900147e4:	9500      	str	r5, [sp, #0]
900147e6:	9205      	str	r2, [sp, #20]
900147e8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900147ea:	e9cd b203 	strd	fp, r2, [sp, #12]
900147ee:	9a64      	ldr	r2, [sp, #400]	@ 0x190
900147f0:	e9cd 8201 	strd	r8, r2, [sp, #4]
900147f4:	aa49      	add	r2, sp, #292	@ 0x124
900147f6:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
900147fa:	4623      	mov	r3, r4
900147fc:	47c8      	blx	r9
900147fe:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90014802:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90014806:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
9001480a:	ee37 7a27 	vadd.f32	s14, s14, s15
9001480e:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90014812:	68a1      	ldr	r1, [r4, #8]
90014814:	ee77 7aa6 	vadd.f32	s15, s15, s13
90014818:	ed94 6a08 	vldr	s12, [r4, #32]
9001481c:	edd4 6a07 	vldr	s13, [r4, #28]
90014820:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90014824:	ee76 6a86 	vadd.f32	s13, s13, s12
90014828:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
9001482c:	e9d4 2300 	ldrd	r2, r3, [r4]
90014830:	edc4 6a07 	vstr	s13, [r4, #28]
90014834:	441a      	add	r2, r3
90014836:	6963      	ldr	r3, [r4, #20]
90014838:	3301      	adds	r3, #1
9001483a:	6022      	str	r2, [r4, #0]
9001483c:	6163      	str	r3, [r4, #20]
9001483e:	69a3      	ldr	r3, [r4, #24]
90014840:	3b01      	subs	r3, #1
90014842:	61a3      	str	r3, [r4, #24]
90014844:	6923      	ldr	r3, [r4, #16]
90014846:	440b      	add	r3, r1
90014848:	68e1      	ldr	r1, [r4, #12]
9001484a:	428b      	cmp	r3, r1
9001484c:	6123      	str	r3, [r4, #16]
9001484e:	db15      	blt.n	9001487c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90014850:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90014854:	3201      	adds	r2, #1
90014856:	1a5b      	subs	r3, r3, r1
90014858:	ee76 6a26 	vadd.f32	s13, s12, s13
9001485c:	6022      	str	r2, [r4, #0]
9001485e:	6123      	str	r3, [r4, #16]
90014860:	edc4 6a07 	vstr	s13, [r4, #28]
90014864:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90014868:	ee36 7a87 	vadd.f32	s14, s13, s14
9001486c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90014870:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90014874:	ee77 7a27 	vadd.f32	s15, s14, s15
90014878:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
9001487c:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90014880:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90014884:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90014888:	ee37 7a27 	vadd.f32	s14, s14, s15
9001488c:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90014890:	68a9      	ldr	r1, [r5, #8]
90014892:	ee77 7aa6 	vadd.f32	s15, s15, s13
90014896:	ed95 6a08 	vldr	s12, [r5, #32]
9001489a:	edd5 6a07 	vldr	s13, [r5, #28]
9001489e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
900148a2:	ee76 6a86 	vadd.f32	s13, s13, s12
900148a6:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
900148aa:	e9d5 2300 	ldrd	r2, r3, [r5]
900148ae:	edc5 6a07 	vstr	s13, [r5, #28]
900148b2:	441a      	add	r2, r3
900148b4:	696b      	ldr	r3, [r5, #20]
900148b6:	3301      	adds	r3, #1
900148b8:	602a      	str	r2, [r5, #0]
900148ba:	616b      	str	r3, [r5, #20]
900148bc:	69ab      	ldr	r3, [r5, #24]
900148be:	3b01      	subs	r3, #1
900148c0:	61ab      	str	r3, [r5, #24]
900148c2:	692b      	ldr	r3, [r5, #16]
900148c4:	440b      	add	r3, r1
900148c6:	68e9      	ldr	r1, [r5, #12]
900148c8:	428b      	cmp	r3, r1
900148ca:	612b      	str	r3, [r5, #16]
900148cc:	db15      	blt.n	900148fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
900148ce:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
900148d2:	3201      	adds	r2, #1
900148d4:	1a5b      	subs	r3, r3, r1
900148d6:	ee76 6a26 	vadd.f32	s13, s12, s13
900148da:	602a      	str	r2, [r5, #0]
900148dc:	612b      	str	r3, [r5, #16]
900148de:	edc5 6a07 	vstr	s13, [r5, #28]
900148e2:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
900148e6:	ee36 7a87 	vadd.f32	s14, s13, s14
900148ea:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
900148ee:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
900148f2:	ee77 7a27 	vadd.f32	s15, s14, s15
900148f6:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
900148fa:	3f01      	subs	r7, #1
900148fc:	e757      	b.n	900147ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
900148fe:	ad39      	add	r5, sp, #228	@ 0xe4
90014900:	ac19      	add	r4, sp, #100	@ 0x64
90014902:	e72d      	b.n	90014760 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90014904:	4613      	mov	r3, r2
90014906:	e744      	b.n	90014792 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90014908:	4613      	mov	r3, r2
9001490a:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
9001490c:	469e      	mov	lr, r3
9001490e:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
90014912:	461f      	mov	r7, r3
90014914:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
90014918:	f04f 0900 	mov.w	r9, #0
9001491c:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
90014920:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
90014924:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
90014928:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
9001492c:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
90014930:	993d      	ldr	r1, [sp, #244]	@ 0xf4
90014932:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
90014936:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
9001493a:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
9001493e:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
90014942:	960e      	str	r6, [sp, #56]	@ 0x38
90014944:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
90014948:	2f00      	cmp	r7, #0
9001494a:	d146      	bne.n	900149da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
9001494c:	449c      	add	ip, r3
9001494e:	1ad7      	subs	r7, r2, r3
90014950:	f1b9 0f00 	cmp.w	r9, #0
90014954:	d009      	beq.n	9001496a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90014956:	9039      	str	r0, [sp, #228]	@ 0xe4
90014958:	913d      	str	r1, [sp, #244]	@ 0xf4
9001495a:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
9001495e:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
90014962:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
90014966:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
9001496a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
9001496c:	f04f 0800 	mov.w	r8, #0
90014970:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90014974:	910e      	str	r1, [sp, #56]	@ 0x38
90014976:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
9001497a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
9001497e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90014982:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90014986:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
9001498a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
9001498e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90014992:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90014996:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
9001499a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
9001499e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
900149a2:	f1be 0f00 	cmp.w	lr, #0
900149a6:	d030      	beq.n	90014a0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
900149a8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
900149aa:	4450      	add	r0, sl
900149ac:	ee76 6aa4 	vadd.f32	s13, s13, s9
900149b0:	4431      	add	r1, r6
900149b2:	ee37 7a04 	vadd.f32	s14, s14, s8
900149b6:	ee77 7aa3 	vadd.f32	s15, s15, s7
900149ba:	4549      	cmp	r1, r9
900149bc:	db08      	blt.n	900149d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
900149be:	ee77 7a85 	vadd.f32	s15, s15, s10
900149c2:	3001      	adds	r0, #1
900149c4:	ee76 6aa5 	vadd.f32	s13, s13, s11
900149c8:	eba1 0109 	sub.w	r1, r1, r9
900149cc:	ee37 7a06 	vadd.f32	s14, s14, s12
900149d0:	f10e 3eff 	add.w	lr, lr, #4294967295
900149d4:	f04f 0801 	mov.w	r8, #1
900149d8:	e7e3      	b.n	900149a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
900149da:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
900149dc:	4450      	add	r0, sl
900149de:	ee37 7a24 	vadd.f32	s14, s14, s9
900149e2:	4431      	add	r1, r6
900149e4:	ee77 7a84 	vadd.f32	s15, s15, s8
900149e8:	ee76 6aa3 	vadd.f32	s13, s13, s7
900149ec:	4541      	cmp	r1, r8
900149ee:	db08      	blt.n	90014a02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
900149f0:	ee76 6a85 	vadd.f32	s13, s13, s10
900149f4:	3001      	adds	r0, #1
900149f6:	ee37 7a25 	vadd.f32	s14, s14, s11
900149fa:	eba1 0108 	sub.w	r1, r1, r8
900149fe:	ee77 7a86 	vadd.f32	s15, s15, s12
90014a02:	3f01      	subs	r7, #1
90014a04:	f04f 0901 	mov.w	r9, #1
90014a08:	e79e      	b.n	90014948 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90014a0a:	449c      	add	ip, r3
90014a0c:	1aff      	subs	r7, r7, r3
90014a0e:	f1b8 0f00 	cmp.w	r8, #0
90014a12:	d009      	beq.n	90014a28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90014a14:	9019      	str	r0, [sp, #100]	@ 0x64
90014a16:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90014a1a:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90014a1e:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90014a22:	911d      	str	r1, [sp, #116]	@ 0x74
90014a24:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90014a28:	1ad2      	subs	r2, r2, r3
90014a2a:	e6b5      	b.n	90014798 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90014a2c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90014a2e:	681b      	ldr	r3, [r3, #0]
90014a30:	b923      	cbnz	r3, 90014a3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014a32:	4b04      	ldr	r3, [pc, #16]	@ (90014a44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90014a34:	6818      	ldr	r0, [r3, #0]
90014a36:	6803      	ldr	r3, [r0, #0]
90014a38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90014a3a:	4798      	blx	r3
90014a3c:	b05b      	add	sp, #364	@ 0x16c
90014a3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014a42:	bf00      	nop
90014a44:	2001aa40 	.word	0x2001aa40

90014a48 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90014a48:	2b03      	cmp	r3, #3
90014a4a:	d818      	bhi.n	90014a7e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90014a4c:	e8df f003 	tbb	[pc, r3]
90014a50:	130d0602 	.word	0x130d0602
90014a54:	f9b0 2000 	ldrsh.w	r2, [r0]
90014a58:	1850      	adds	r0, r2, r1
90014a5a:	4770      	bx	lr
90014a5c:	8803      	ldrh	r3, [r0, #0]
90014a5e:	8880      	ldrh	r0, [r0, #4]
90014a60:	4418      	add	r0, r3
90014a62:	b200      	sxth	r0, r0
90014a64:	1a80      	subs	r0, r0, r2
90014a66:	3801      	subs	r0, #1
90014a68:	4770      	bx	lr
90014a6a:	8803      	ldrh	r3, [r0, #0]
90014a6c:	8880      	ldrh	r0, [r0, #4]
90014a6e:	4418      	add	r0, r3
90014a70:	b200      	sxth	r0, r0
90014a72:	1a40      	subs	r0, r0, r1
90014a74:	e7f7      	b.n	90014a66 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90014a76:	f9b0 0000 	ldrsh.w	r0, [r0]
90014a7a:	4410      	add	r0, r2
90014a7c:	4770      	bx	lr
90014a7e:	2000      	movs	r0, #0
90014a80:	4770      	bx	lr

90014a82 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90014a82:	2b03      	cmp	r3, #3
90014a84:	d817      	bhi.n	90014ab6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90014a86:	e8df f003 	tbb	[pc, r3]
90014a8a:	0602      	.short	0x0602
90014a8c:	1009      	.short	0x1009
90014a8e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90014a92:	1850      	adds	r0, r2, r1
90014a94:	4770      	bx	lr
90014a96:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90014a9a:	e7fa      	b.n	90014a92 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90014a9c:	8843      	ldrh	r3, [r0, #2]
90014a9e:	88c0      	ldrh	r0, [r0, #6]
90014aa0:	4418      	add	r0, r3
90014aa2:	b200      	sxth	r0, r0
90014aa4:	1a80      	subs	r0, r0, r2
90014aa6:	3801      	subs	r0, #1
90014aa8:	4770      	bx	lr
90014aaa:	8843      	ldrh	r3, [r0, #2]
90014aac:	88c0      	ldrh	r0, [r0, #6]
90014aae:	4418      	add	r0, r3
90014ab0:	b200      	sxth	r0, r0
90014ab2:	1a40      	subs	r0, r0, r1
90014ab4:	e7f7      	b.n	90014aa6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90014ab6:	2000      	movs	r0, #0
90014ab8:	4770      	bx	lr
	...

90014abc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90014abc:	4b01      	ldr	r3, [pc, #4]	@ (90014ac4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90014abe:	2200      	movs	r2, #0
90014ac0:	601a      	str	r2, [r3, #0]
90014ac2:	4770      	bx	lr
90014ac4:	2001aa50 	.word	0x2001aa50

90014ac8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90014ac8:	4603      	mov	r3, r0
90014aca:	b1c8      	cbz	r0, 90014b00 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90014acc:	0c02      	lsrs	r2, r0, #16
90014ace:	0412      	lsls	r2, r2, #16
90014ad0:	b9a2      	cbnz	r2, 90014afc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90014ad2:	0403      	lsls	r3, r0, #16
90014ad4:	2010      	movs	r0, #16
90014ad6:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90014ada:	bf04      	itt	eq
90014adc:	021b      	lsleq	r3, r3, #8
90014ade:	3008      	addeq	r0, #8
90014ae0:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90014ae4:	bf04      	itt	eq
90014ae6:	011b      	lsleq	r3, r3, #4
90014ae8:	3004      	addeq	r0, #4
90014aea:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90014aee:	bf04      	itt	eq
90014af0:	009b      	lsleq	r3, r3, #2
90014af2:	3002      	addeq	r0, #2
90014af4:	2b00      	cmp	r3, #0
90014af6:	db04      	blt.n	90014b02 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90014af8:	3001      	adds	r0, #1
90014afa:	4770      	bx	lr
90014afc:	2000      	movs	r0, #0
90014afe:	e7ea      	b.n	90014ad6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90014b00:	2020      	movs	r0, #32
90014b02:	4770      	bx	lr

90014b04 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90014b04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014b08:	b087      	sub	sp, #28
90014b0a:	460d      	mov	r5, r1
90014b0c:	4616      	mov	r6, r2
90014b0e:	4698      	mov	r8, r3
90014b10:	4601      	mov	r1, r0
90014b12:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
90014b16:	b120      	cbz	r0, 90014b22 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90014b18:	b11a      	cbz	r2, 90014b22 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90014b1a:	2d1f      	cmp	r5, #31
90014b1c:	d801      	bhi.n	90014b22 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90014b1e:	2b1f      	cmp	r3, #31
90014b20:	d904      	bls.n	90014b2c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90014b22:	2000      	movs	r0, #0
90014b24:	6038      	str	r0, [r7, #0]
90014b26:	b007      	add	sp, #28
90014b28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014b2c:	b97d      	cbnz	r5, 90014b4e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90014b2e:	b143      	cbz	r3, 90014b42 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90014b30:	4602      	mov	r2, r0
90014b32:	462b      	mov	r3, r5
90014b34:	4641      	mov	r1, r8
90014b36:	4630      	mov	r0, r6
90014b38:	e9cd 4700 	strd	r4, r7, [sp]
90014b3c:	f7ff ffe2 	bl	90014b04 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014b40:	e7f1      	b.n	90014b26 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90014b42:	f04f 33ff 	mov.w	r3, #4294967295
90014b46:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90014b4a:	603b      	str	r3, [r7, #0]
90014b4c:	e7eb      	b.n	90014b26 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90014b4e:	fa32 fa05 	lsrs.w	sl, r2, r5
90014b52:	d106      	bne.n	90014b62 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90014b54:	4346      	muls	r6, r0
90014b56:	fbb6 f0f4 	udiv	r0, r6, r4
90014b5a:	fb04 6610 	mls	r6, r4, r0, r6
90014b5e:	603e      	str	r6, [r7, #0]
90014b60:	e7e1      	b.n	90014b26 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90014b62:	2201      	movs	r2, #1
90014b64:	fa00 fb05 	lsl.w	fp, r0, r5
90014b68:	40aa      	lsls	r2, r5
90014b6a:	fbbb f9f4 	udiv	r9, fp, r4
90014b6e:	3a01      	subs	r2, #1
90014b70:	fb0a f309 	mul.w	r3, sl, r9
90014b74:	fb04 b919 	mls	r9, r4, r9, fp
90014b78:	4016      	ands	r6, r2
90014b7a:	9303      	str	r3, [sp, #12]
90014b7c:	4630      	mov	r0, r6
90014b7e:	f7ff ffa3 	bl	90014ac8 <_ZN8touchgfx16TouchCalibration4clzuEm>
90014b82:	462b      	mov	r3, r5
90014b84:	460a      	mov	r2, r1
90014b86:	4601      	mov	r1, r0
90014b88:	4630      	mov	r0, r6
90014b8a:	e9cd 4700 	strd	r4, r7, [sp]
90014b8e:	f7ff ffb9 	bl	90014b04 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014b92:	4606      	mov	r6, r0
90014b94:	4648      	mov	r0, r9
90014b96:	eb05 0108 	add.w	r1, r5, r8
90014b9a:	f7ff ff95 	bl	90014ac8 <_ZN8touchgfx16TouchCalibration4clzuEm>
90014b9e:	ab05      	add	r3, sp, #20
90014ba0:	464a      	mov	r2, r9
90014ba2:	e9cd 4300 	strd	r4, r3, [sp]
90014ba6:	4603      	mov	r3, r0
90014ba8:	4650      	mov	r0, sl
90014baa:	f7ff ffab 	bl	90014b04 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014bae:	6839      	ldr	r1, [r7, #0]
90014bb0:	9a05      	ldr	r2, [sp, #20]
90014bb2:	9b03      	ldr	r3, [sp, #12]
90014bb4:	4411      	add	r1, r2
90014bb6:	fbb1 f2f4 	udiv	r2, r1, r4
90014bba:	18d3      	adds	r3, r2, r3
90014bbc:	fb04 1412 	mls	r4, r4, r2, r1
90014bc0:	441e      	add	r6, r3
90014bc2:	603c      	str	r4, [r7, #0]
90014bc4:	4430      	add	r0, r6
90014bc6:	e7ae      	b.n	90014b26 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90014bc8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90014bc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014bcc:	b085      	sub	sp, #20
90014bce:	f1b0 0900 	subs.w	r9, r0, #0
90014bd2:	461d      	mov	r5, r3
90014bd4:	4617      	mov	r7, r2
90014bd6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90014bd8:	bfbb      	ittet	lt
90014bda:	f1c9 0900 	rsblt	r9, r9, #0
90014bde:	f04f 36ff 	movlt.w	r6, #4294967295
90014be2:	2601      	movge	r6, #1
90014be4:	6823      	ldrlt	r3, [r4, #0]
90014be6:	bfbc      	itt	lt
90014be8:	425b      	neglt	r3, r3
90014bea:	6023      	strlt	r3, [r4, #0]
90014bec:	2a00      	cmp	r2, #0
90014bee:	da04      	bge.n	90014bfa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90014bf0:	6823      	ldr	r3, [r4, #0]
90014bf2:	4257      	negs	r7, r2
90014bf4:	4276      	negs	r6, r6
90014bf6:	425b      	negs	r3, r3
90014bf8:	6023      	str	r3, [r4, #0]
90014bfa:	2d00      	cmp	r5, #0
90014bfc:	4638      	mov	r0, r7
90014bfe:	bfba      	itte	lt
90014c00:	426d      	neglt	r5, r5
90014c02:	f04f 38ff 	movlt.w	r8, #4294967295
90014c06:	f04f 0801 	movge.w	r8, #1
90014c0a:	f7ff ff5d 	bl	90014ac8 <_ZN8touchgfx16TouchCalibration4clzuEm>
90014c0e:	ab03      	add	r3, sp, #12
90014c10:	463a      	mov	r2, r7
90014c12:	e9cd 5300 	strd	r5, r3, [sp]
90014c16:	4603      	mov	r3, r0
90014c18:	4648      	mov	r0, r9
90014c1a:	f7ff ff73 	bl	90014b04 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014c1e:	6823      	ldr	r3, [r4, #0]
90014c20:	9a03      	ldr	r2, [sp, #12]
90014c22:	4546      	cmp	r6, r8
90014c24:	441a      	add	r2, r3
90014c26:	fb92 f3f5 	sdiv	r3, r2, r5
90014c2a:	4418      	add	r0, r3
90014c2c:	fb05 2313 	mls	r3, r5, r3, r2
90014c30:	bf18      	it	ne
90014c32:	4240      	negne	r0, r0
90014c34:	1c72      	adds	r2, r6, #1
90014c36:	6023      	str	r3, [r4, #0]
90014c38:	d105      	bne.n	90014c46 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90014c3a:	2b00      	cmp	r3, #0
90014c3c:	f1c3 0200 	rsb	r2, r3, #0
90014c40:	db0b      	blt.n	90014c5a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90014c42:	6022      	str	r2, [r4, #0]
90014c44:	e006      	b.n	90014c54 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014c46:	2e01      	cmp	r6, #1
90014c48:	d104      	bne.n	90014c54 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014c4a:	2b00      	cmp	r3, #0
90014c4c:	da02      	bge.n	90014c54 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014c4e:	442b      	add	r3, r5
90014c50:	3801      	subs	r0, #1
90014c52:	6023      	str	r3, [r4, #0]
90014c54:	b005      	add	sp, #20
90014c56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014c5a:	3801      	subs	r0, #1
90014c5c:	1b52      	subs	r2, r2, r5
90014c5e:	e7f0      	b.n	90014c42 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90014c60 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90014c60:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90014c64:	4c1c      	ldr	r4, [pc, #112]	@ (90014cd8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90014c66:	4605      	mov	r5, r0
90014c68:	6807      	ldr	r7, [r0, #0]
90014c6a:	69a3      	ldr	r3, [r4, #24]
90014c6c:	b92b      	cbnz	r3, 90014c7a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90014c6e:	6840      	ldr	r0, [r0, #4]
90014c70:	e9c5 7000 	strd	r7, r0, [r5]
90014c74:	b004      	add	sp, #16
90014c76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014c7a:	f04f 0802 	mov.w	r8, #2
90014c7e:	68a2      	ldr	r2, [r4, #8]
90014c80:	ae04      	add	r6, sp, #16
90014c82:	6820      	ldr	r0, [r4, #0]
90014c84:	fb93 f1f8 	sdiv	r1, r3, r8
90014c88:	440a      	add	r2, r1
90014c8a:	69e1      	ldr	r1, [r4, #28]
90014c8c:	f846 2d04 	str.w	r2, [r6, #-4]!
90014c90:	463a      	mov	r2, r7
90014c92:	9600      	str	r6, [sp, #0]
90014c94:	f7ff ff98 	bl	90014bc8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014c98:	69a3      	ldr	r3, [r4, #24]
90014c9a:	4607      	mov	r7, r0
90014c9c:	686a      	ldr	r2, [r5, #4]
90014c9e:	6a21      	ldr	r1, [r4, #32]
90014ca0:	9600      	str	r6, [sp, #0]
90014ca2:	6860      	ldr	r0, [r4, #4]
90014ca4:	f7ff ff90 	bl	90014bc8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014ca8:	69a3      	ldr	r3, [r4, #24]
90014caa:	6962      	ldr	r2, [r4, #20]
90014cac:	4407      	add	r7, r0
90014cae:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90014cb0:	9600      	str	r6, [sp, #0]
90014cb2:	68e0      	ldr	r0, [r4, #12]
90014cb4:	fb93 f8f8 	sdiv	r8, r3, r8
90014cb8:	4442      	add	r2, r8
90014cba:	9203      	str	r2, [sp, #12]
90014cbc:	682a      	ldr	r2, [r5, #0]
90014cbe:	f7ff ff83 	bl	90014bc8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014cc2:	4680      	mov	r8, r0
90014cc4:	9600      	str	r6, [sp, #0]
90014cc6:	69a3      	ldr	r3, [r4, #24]
90014cc8:	686a      	ldr	r2, [r5, #4]
90014cca:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
90014ccc:	6920      	ldr	r0, [r4, #16]
90014cce:	f7ff ff7b 	bl	90014bc8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014cd2:	4440      	add	r0, r8
90014cd4:	e7cc      	b.n	90014c70 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90014cd6:	bf00      	nop
90014cd8:	2001aa54 	.word	0x2001aa54

90014cdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90014cdc:	4b07      	ldr	r3, [pc, #28]	@ (90014cfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90014cde:	781b      	ldrb	r3, [r3, #0]
90014ce0:	2b01      	cmp	r3, #1
90014ce2:	d109      	bne.n	90014cf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90014ce4:	f9b1 3000 	ldrsh.w	r3, [r1]
90014ce8:	f9b0 2000 	ldrsh.w	r2, [r0]
90014cec:	8003      	strh	r3, [r0, #0]
90014cee:	4b04      	ldr	r3, [pc, #16]	@ (90014d00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90014cf0:	881b      	ldrh	r3, [r3, #0]
90014cf2:	3b01      	subs	r3, #1
90014cf4:	1a9b      	subs	r3, r3, r2
90014cf6:	800b      	strh	r3, [r1, #0]
90014cf8:	4770      	bx	lr
90014cfa:	bf00      	nop
90014cfc:	2001aa36 	.word	0x2001aa36
90014d00:	2001aa32 	.word	0x2001aa32

90014d04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90014d04:	4b07      	ldr	r3, [pc, #28]	@ (90014d24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90014d06:	b510      	push	{r4, lr}
90014d08:	781b      	ldrb	r3, [r3, #0]
90014d0a:	2b01      	cmp	r3, #1
90014d0c:	d108      	bne.n	90014d20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90014d0e:	4b06      	ldr	r3, [pc, #24]	@ (90014d28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90014d10:	880c      	ldrh	r4, [r1, #0]
90014d12:	881b      	ldrh	r3, [r3, #0]
90014d14:	f9b0 2000 	ldrsh.w	r2, [r0]
90014d18:	3b01      	subs	r3, #1
90014d1a:	1b1b      	subs	r3, r3, r4
90014d1c:	8003      	strh	r3, [r0, #0]
90014d1e:	800a      	strh	r2, [r1, #0]
90014d20:	bd10      	pop	{r4, pc}
90014d22:	bf00      	nop
90014d24:	2001aa36 	.word	0x2001aa36
90014d28:	2001aa32 	.word	0x2001aa32

90014d2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90014d2c:	4b0a      	ldr	r3, [pc, #40]	@ (90014d58 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90014d2e:	b510      	push	{r4, lr}
90014d30:	781b      	ldrb	r3, [r3, #0]
90014d32:	2b01      	cmp	r3, #1
90014d34:	d10e      	bne.n	90014d54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90014d36:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90014d3a:	8843      	ldrh	r3, [r0, #2]
90014d3c:	f9b0 4000 	ldrsh.w	r4, [r0]
90014d40:	18ca      	adds	r2, r1, r3
90014d42:	4b06      	ldr	r3, [pc, #24]	@ (90014d5c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90014d44:	8044      	strh	r4, [r0, #2]
90014d46:	881b      	ldrh	r3, [r3, #0]
90014d48:	1a9b      	subs	r3, r3, r2
90014d4a:	8003      	strh	r3, [r0, #0]
90014d4c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014d50:	8081      	strh	r1, [r0, #4]
90014d52:	80c3      	strh	r3, [r0, #6]
90014d54:	bd10      	pop	{r4, pc}
90014d56:	bf00      	nop
90014d58:	2001aa36 	.word	0x2001aa36
90014d5c:	2001aa32 	.word	0x2001aa32

90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90014d60:	4b08      	ldr	r3, [pc, #32]	@ (90014d84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90014d62:	781b      	ldrb	r3, [r3, #0]
90014d64:	2b01      	cmp	r3, #1
90014d66:	d10c      	bne.n	90014d82 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90014d68:	8803      	ldrh	r3, [r0, #0]
90014d6a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90014d6e:	8842      	ldrh	r2, [r0, #2]
90014d70:	8002      	strh	r2, [r0, #0]
90014d72:	185a      	adds	r2, r3, r1
90014d74:	4b04      	ldr	r3, [pc, #16]	@ (90014d88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90014d76:	881b      	ldrh	r3, [r3, #0]
90014d78:	1a9b      	subs	r3, r3, r2
90014d7a:	8043      	strh	r3, [r0, #2]
90014d7c:	88c3      	ldrh	r3, [r0, #6]
90014d7e:	80c1      	strh	r1, [r0, #6]
90014d80:	8083      	strh	r3, [r0, #4]
90014d82:	4770      	bx	lr
90014d84:	2001aa36 	.word	0x2001aa36
90014d88:	2001aa32 	.word	0x2001aa32

90014d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90014d8c:	4b07      	ldr	r3, [pc, #28]	@ (90014dac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90014d8e:	b510      	push	{r4, lr}
90014d90:	781b      	ldrb	r3, [r3, #0]
90014d92:	2b01      	cmp	r3, #1
90014d94:	d108      	bne.n	90014da8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90014d96:	f9b1 3000 	ldrsh.w	r3, [r1]
90014d9a:	f9b0 4000 	ldrsh.w	r4, [r0]
90014d9e:	8003      	strh	r3, [r0, #0]
90014da0:	8893      	ldrh	r3, [r2, #4]
90014da2:	3b01      	subs	r3, #1
90014da4:	1b1b      	subs	r3, r3, r4
90014da6:	800b      	strh	r3, [r1, #0]
90014da8:	bd10      	pop	{r4, pc}
90014daa:	bf00      	nop
90014dac:	2001aa36 	.word	0x2001aa36

90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90014db0:	4b0a      	ldr	r3, [pc, #40]	@ (90014ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90014db2:	460a      	mov	r2, r1
90014db4:	b510      	push	{r4, lr}
90014db6:	781b      	ldrb	r3, [r3, #0]
90014db8:	2b01      	cmp	r3, #1
90014dba:	d10d      	bne.n	90014dd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90014dbc:	8881      	ldrh	r1, [r0, #4]
90014dbe:	8803      	ldrh	r3, [r0, #0]
90014dc0:	440b      	add	r3, r1
90014dc2:	4601      	mov	r1, r0
90014dc4:	3b01      	subs	r3, #1
90014dc6:	f821 3b02 	strh.w	r3, [r1], #2
90014dca:	f7ff ffdf 	bl	90014d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90014dce:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014dd2:	88c2      	ldrh	r2, [r0, #6]
90014dd4:	80c3      	strh	r3, [r0, #6]
90014dd6:	8082      	strh	r2, [r0, #4]
90014dd8:	bd10      	pop	{r4, pc}
90014dda:	bf00      	nop
90014ddc:	2001aa36 	.word	0x2001aa36

90014de0 <_ZN8touchgfx11Application13requestRedrawEv>:
90014de0:	4b06      	ldr	r3, [pc, #24]	@ (90014dfc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90014de2:	2100      	movs	r1, #0
90014de4:	f9b3 2000 	ldrsh.w	r2, [r3]
90014de8:	4b05      	ldr	r3, [pc, #20]	@ (90014e00 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90014dea:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
90014dee:	f9b3 3000 	ldrsh.w	r3, [r3]
90014df2:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
90014df6:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
90014dfa:	4770      	bx	lr
90014dfc:	2001aa32 	.word	0x2001aa32
90014e00:	2001aa34 	.word	0x2001aa34

90014e04 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90014e04:	4b03      	ldr	r3, [pc, #12]	@ (90014e14 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90014e06:	6818      	ldr	r0, [r3, #0]
90014e08:	b110      	cbz	r0, 90014e10 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90014e0a:	6803      	ldr	r3, [r0, #0]
90014e0c:	699b      	ldr	r3, [r3, #24]
90014e0e:	4718      	bx	r3
90014e10:	4770      	bx	lr
90014e12:	bf00      	nop
90014e14:	2001aa84 	.word	0x2001aa84

90014e18 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90014e18:	4770      	bx	lr
	...

90014e1c <_ZN8touchgfx11Application4drawEv>:
90014e1c:	4b09      	ldr	r3, [pc, #36]	@ (90014e44 <_ZN8touchgfx11Application4drawEv+0x28>)
90014e1e:	b507      	push	{r0, r1, r2, lr}
90014e20:	f9b3 2000 	ldrsh.w	r2, [r3]
90014e24:	2100      	movs	r1, #0
90014e26:	4b08      	ldr	r3, [pc, #32]	@ (90014e48 <_ZN8touchgfx11Application4drawEv+0x2c>)
90014e28:	9100      	str	r1, [sp, #0]
90014e2a:	4669      	mov	r1, sp
90014e2c:	f9b3 3000 	ldrsh.w	r3, [r3]
90014e30:	f8ad 2004 	strh.w	r2, [sp, #4]
90014e34:	f8ad 3006 	strh.w	r3, [sp, #6]
90014e38:	6803      	ldr	r3, [r0, #0]
90014e3a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90014e3c:	4798      	blx	r3
90014e3e:	b003      	add	sp, #12
90014e40:	f85d fb04 	ldr.w	pc, [sp], #4
90014e44:	2001aa32 	.word	0x2001aa32
90014e48:	2001aa34 	.word	0x2001aa34

90014e4c <_ZN8touchgfx11Application10invalidateEv>:
90014e4c:	4b09      	ldr	r3, [pc, #36]	@ (90014e74 <_ZN8touchgfx11Application10invalidateEv+0x28>)
90014e4e:	b082      	sub	sp, #8
90014e50:	2100      	movs	r1, #0
90014e52:	f9b3 2000 	ldrsh.w	r2, [r3]
90014e56:	4b08      	ldr	r3, [pc, #32]	@ (90014e78 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90014e58:	f8ad 2004 	strh.w	r2, [sp, #4]
90014e5c:	aa02      	add	r2, sp, #8
90014e5e:	f9b3 3000 	ldrsh.w	r3, [r3]
90014e62:	9100      	str	r1, [sp, #0]
90014e64:	f8ad 3006 	strh.w	r3, [sp, #6]
90014e68:	6803      	ldr	r3, [r0, #0]
90014e6a:	e912 0006 	ldmdb	r2, {r1, r2}
90014e6e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90014e70:	b002      	add	sp, #8
90014e72:	4718      	bx	r3
90014e74:	2001aa32 	.word	0x2001aa32
90014e78:	2001aa34 	.word	0x2001aa34

90014e7c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90014e7c:	4b03      	ldr	r3, [pc, #12]	@ (90014e8c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90014e7e:	6818      	ldr	r0, [r3, #0]
90014e80:	b110      	cbz	r0, 90014e88 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90014e82:	6803      	ldr	r3, [r0, #0]
90014e84:	69db      	ldr	r3, [r3, #28]
90014e86:	4718      	bx	r3
90014e88:	4770      	bx	lr
90014e8a:	bf00      	nop
90014e8c:	2001aa84 	.word	0x2001aa84

90014e90 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90014e90:	4b03      	ldr	r3, [pc, #12]	@ (90014ea0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90014e92:	6818      	ldr	r0, [r3, #0]
90014e94:	b110      	cbz	r0, 90014e9c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90014e96:	6803      	ldr	r3, [r0, #0]
90014e98:	6a1b      	ldr	r3, [r3, #32]
90014e9a:	4718      	bx	r3
90014e9c:	4770      	bx	lr
90014e9e:	bf00      	nop
90014ea0:	2001aa84 	.word	0x2001aa84

90014ea4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
90014ea4:	2300      	movs	r3, #0
90014ea6:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
90014eaa:	4770      	bx	lr

90014eac <_ZN8touchgfx11Application14handleKeyEventEh>:
90014eac:	4b03      	ldr	r3, [pc, #12]	@ (90014ebc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90014eae:	6818      	ldr	r0, [r3, #0]
90014eb0:	b110      	cbz	r0, 90014eb8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90014eb2:	6803      	ldr	r3, [r0, #0]
90014eb4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90014eb6:	4718      	bx	r3
90014eb8:	4770      	bx	lr
90014eba:	bf00      	nop
90014ebc:	2001aa84 	.word	0x2001aa84

90014ec0 <_ZN8touchgfx11ApplicationD1Ev>:
90014ec0:	4770      	bx	lr

90014ec2 <_ZN8touchgfx11ApplicationD0Ev>:
90014ec2:	b510      	push	{r4, lr}
90014ec4:	4604      	mov	r4, r0
90014ec6:	f44f 719e 	mov.w	r1, #316	@ 0x13c
90014eca:	f012 fb29 	bl	90027520 <_ZdlPvj>
90014ece:	4620      	mov	r0, r4
90014ed0:	bd10      	pop	{r4, pc}

90014ed2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
90014ed2:	b510      	push	{r4, lr}
90014ed4:	f9b1 4000 	ldrsh.w	r4, [r1]
90014ed8:	888a      	ldrh	r2, [r1, #4]
90014eda:	f9b0 3000 	ldrsh.w	r3, [r0]
90014ede:	4422      	add	r2, r4
90014ee0:	b212      	sxth	r2, r2
90014ee2:	4293      	cmp	r3, r2
90014ee4:	da15      	bge.n	90014f12 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90014ee6:	8882      	ldrh	r2, [r0, #4]
90014ee8:	4413      	add	r3, r2
90014eea:	b21b      	sxth	r3, r3
90014eec:	429c      	cmp	r4, r3
90014eee:	da10      	bge.n	90014f12 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90014ef0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90014ef4:	88c9      	ldrh	r1, [r1, #6]
90014ef6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90014efa:	4419      	add	r1, r3
90014efc:	b209      	sxth	r1, r1
90014efe:	428a      	cmp	r2, r1
90014f00:	da07      	bge.n	90014f12 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90014f02:	88c0      	ldrh	r0, [r0, #6]
90014f04:	4410      	add	r0, r2
90014f06:	b200      	sxth	r0, r0
90014f08:	4283      	cmp	r3, r0
90014f0a:	bfac      	ite	ge
90014f0c:	2000      	movge	r0, #0
90014f0e:	2001      	movlt	r0, #1
90014f10:	bd10      	pop	{r4, pc}
90014f12:	2000      	movs	r0, #0
90014f14:	e7fc      	b.n	90014f10 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90014f16 <_ZN8touchgfx4Rect10restrictToEss>:
90014f16:	f9b0 3000 	ldrsh.w	r3, [r0]
90014f1a:	2b00      	cmp	r3, #0
90014f1c:	b510      	push	{r4, lr}
90014f1e:	da04      	bge.n	90014f2a <_ZN8touchgfx4Rect10restrictToEss+0x14>
90014f20:	8884      	ldrh	r4, [r0, #4]
90014f22:	4423      	add	r3, r4
90014f24:	8083      	strh	r3, [r0, #4]
90014f26:	2300      	movs	r3, #0
90014f28:	8003      	strh	r3, [r0, #0]
90014f2a:	f9b0 4000 	ldrsh.w	r4, [r0]
90014f2e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014f32:	1b09      	subs	r1, r1, r4
90014f34:	428b      	cmp	r3, r1
90014f36:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90014f3a:	bfc8      	it	gt
90014f3c:	8081      	strhgt	r1, [r0, #4]
90014f3e:	2b00      	cmp	r3, #0
90014f40:	da04      	bge.n	90014f4c <_ZN8touchgfx4Rect10restrictToEss+0x36>
90014f42:	88c1      	ldrh	r1, [r0, #6]
90014f44:	440b      	add	r3, r1
90014f46:	80c3      	strh	r3, [r0, #6]
90014f48:	2300      	movs	r3, #0
90014f4a:	8043      	strh	r3, [r0, #2]
90014f4c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90014f50:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90014f54:	1a52      	subs	r2, r2, r1
90014f56:	4293      	cmp	r3, r2
90014f58:	bfc8      	it	gt
90014f5a:	80c2      	strhgt	r2, [r0, #6]
90014f5c:	bd10      	pop	{r4, pc}
	...

90014f60 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90014f60:	4b10      	ldr	r3, [pc, #64]	@ (90014fa4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90014f62:	b510      	push	{r4, lr}
90014f64:	460c      	mov	r4, r1
90014f66:	f9b3 2000 	ldrsh.w	r2, [r3]
90014f6a:	4b0f      	ldr	r3, [pc, #60]	@ (90014fa8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90014f6c:	4620      	mov	r0, r4
90014f6e:	f9b3 1000 	ldrsh.w	r1, [r3]
90014f72:	f7ff ffd0 	bl	90014f16 <_ZN8touchgfx4Rect10restrictToEss>
90014f76:	4b0d      	ldr	r3, [pc, #52]	@ (90014fac <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90014f78:	6818      	ldr	r0, [r3, #0]
90014f7a:	b190      	cbz	r0, 90014fa2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90014f7c:	6803      	ldr	r3, [r0, #0]
90014f7e:	4621      	mov	r1, r4
90014f80:	689b      	ldr	r3, [r3, #8]
90014f82:	4798      	blx	r3
90014f84:	4b0a      	ldr	r3, [pc, #40]	@ (90014fb0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
90014f86:	6818      	ldr	r0, [r3, #0]
90014f88:	b118      	cbz	r0, 90014f92 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90014f8a:	6803      	ldr	r3, [r0, #0]
90014f8c:	4621      	mov	r1, r4
90014f8e:	689b      	ldr	r3, [r3, #8]
90014f90:	4798      	blx	r3
90014f92:	4b08      	ldr	r3, [pc, #32]	@ (90014fb4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90014f94:	4621      	mov	r1, r4
90014f96:	6818      	ldr	r0, [r3, #0]
90014f98:	6803      	ldr	r3, [r0, #0]
90014f9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014f9e:	69db      	ldr	r3, [r3, #28]
90014fa0:	4718      	bx	r3
90014fa2:	bd10      	pop	{r4, pc}
90014fa4:	2001aa34 	.word	0x2001aa34
90014fa8:	2001aa32 	.word	0x2001aa32
90014fac:	2001aa84 	.word	0x2001aa84
90014fb0:	2001aa80 	.word	0x2001aa80
90014fb4:	2001aa40 	.word	0x2001aa40

90014fb8 <_ZNK8touchgfx4Rect8includesERKS0_>:
90014fb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014fba:	4606      	mov	r6, r0
90014fbc:	4608      	mov	r0, r1
90014fbe:	460f      	mov	r7, r1
90014fc0:	f7fb fba3 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
90014fc4:	b9e8      	cbnz	r0, 90015002 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014fc6:	f9b7 5000 	ldrsh.w	r5, [r7]
90014fca:	f9b6 4000 	ldrsh.w	r4, [r6]
90014fce:	42a5      	cmp	r5, r4
90014fd0:	db17      	blt.n	90015002 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014fd2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
90014fd6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90014fda:	429a      	cmp	r2, r3
90014fdc:	db11      	blt.n	90015002 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014fde:	88b9      	ldrh	r1, [r7, #4]
90014fe0:	440d      	add	r5, r1
90014fe2:	88b1      	ldrh	r1, [r6, #4]
90014fe4:	440c      	add	r4, r1
90014fe6:	b22d      	sxth	r5, r5
90014fe8:	b224      	sxth	r4, r4
90014fea:	42a5      	cmp	r5, r4
90014fec:	dc09      	bgt.n	90015002 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014fee:	88f8      	ldrh	r0, [r7, #6]
90014ff0:	4410      	add	r0, r2
90014ff2:	88f2      	ldrh	r2, [r6, #6]
90014ff4:	4413      	add	r3, r2
90014ff6:	b200      	sxth	r0, r0
90014ff8:	b21b      	sxth	r3, r3
90014ffa:	4298      	cmp	r0, r3
90014ffc:	bfcc      	ite	gt
90014ffe:	2000      	movgt	r0, #0
90015000:	2001      	movle	r0, #1
90015002:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90015004 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90015004:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90015006:	4604      	mov	r4, r0
90015008:	4608      	mov	r0, r1
9001500a:	460d      	mov	r5, r1
9001500c:	f7fb fb7d 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
90015010:	b978      	cbnz	r0, 90015032 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
90015012:	4620      	mov	r0, r4
90015014:	f7fb fb79 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
90015018:	f9b5 6000 	ldrsh.w	r6, [r5]
9001501c:	b150      	cbz	r0, 90015034 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
9001501e:	8026      	strh	r6, [r4, #0]
90015020:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90015024:	8063      	strh	r3, [r4, #2]
90015026:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
9001502a:	80a3      	strh	r3, [r4, #4]
9001502c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90015030:	80e3      	strh	r3, [r4, #6]
90015032:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90015034:	f9b4 1000 	ldrsh.w	r1, [r4]
90015038:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001503c:	42b1      	cmp	r1, r6
9001503e:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90015042:	f8b5 c004 	ldrh.w	ip, [r5, #4]
90015046:	460f      	mov	r7, r1
90015048:	88ed      	ldrh	r5, [r5, #6]
9001504a:	bfa8      	it	ge
9001504c:	4637      	movge	r7, r6
9001504e:	4293      	cmp	r3, r2
90015050:	4618      	mov	r0, r3
90015052:	4466      	add	r6, ip
90015054:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90015058:	bfa8      	it	ge
9001505a:	4610      	movge	r0, r2
9001505c:	442a      	add	r2, r5
9001505e:	88e5      	ldrh	r5, [r4, #6]
90015060:	4461      	add	r1, ip
90015062:	b236      	sxth	r6, r6
90015064:	8027      	strh	r7, [r4, #0]
90015066:	442b      	add	r3, r5
90015068:	b209      	sxth	r1, r1
9001506a:	b212      	sxth	r2, r2
9001506c:	8060      	strh	r0, [r4, #2]
9001506e:	b21b      	sxth	r3, r3
90015070:	428e      	cmp	r6, r1
90015072:	bfac      	ite	ge
90015074:	ebc7 0106 	rsbge	r1, r7, r6
90015078:	ebc7 0101 	rsblt	r1, r7, r1
9001507c:	429a      	cmp	r2, r3
9001507e:	bfac      	ite	ge
90015080:	ebc0 0202 	rsbge	r2, r0, r2
90015084:	ebc0 0203 	rsblt	r2, r0, r3
90015088:	80a1      	strh	r1, [r4, #4]
9001508a:	80e2      	strh	r2, [r4, #6]
9001508c:	e7d1      	b.n	90015032 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90015090 <_ZN8touchgfx11Application11getInstanceEv>:
90015090:	4b01      	ldr	r3, [pc, #4]	@ (90015098 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
90015092:	6818      	ldr	r0, [r3, #0]
90015094:	4770      	bx	lr
90015096:	bf00      	nop
90015098:	2001aa94 	.word	0x2001aa94

9001509c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
9001509c:	2300      	movs	r3, #0
9001509e:	b510      	push	{r4, lr}
900150a0:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
900150a4:	4604      	mov	r4, r0
900150a6:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
900150aa:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
900150ae:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
900150b2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
900150b6:	429a      	cmp	r2, r3
900150b8:	d90e      	bls.n	900150d8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
900150ba:	18e2      	adds	r2, r4, r3
900150bc:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
900150c0:	b122      	cbz	r2, 900150cc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
900150c2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
900150c6:	6803      	ldr	r3, [r0, #0]
900150c8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900150ca:	4798      	blx	r3
900150cc:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
900150d0:	3301      	adds	r3, #1
900150d2:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
900150d6:	e7ea      	b.n	900150ae <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
900150d8:	bd10      	pop	{r4, pc}

900150da <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
900150da:	2300      	movs	r3, #0
900150dc:	f100 0284 	add.w	r2, r0, #132	@ 0x84
900150e0:	30a4      	adds	r0, #164	@ 0xa4
900150e2:	f820 3c24 	strh.w	r3, [r0, #-36]
900150e6:	f802 3b01 	strb.w	r3, [r2], #1
900150ea:	4282      	cmp	r2, r0
900150ec:	d1fb      	bne.n	900150e6 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
900150ee:	4770      	bx	lr

900150f0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
900150f0:	b570      	push	{r4, r5, r6, lr}
900150f2:	4c0b      	ldr	r4, [pc, #44]	@ (90015120 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
900150f4:	4605      	mov	r5, r0
900150f6:	460e      	mov	r6, r1
900150f8:	6820      	ldr	r0, [r4, #0]
900150fa:	b110      	cbz	r0, 90015102 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
900150fc:	6803      	ldr	r3, [r0, #0]
900150fe:	695b      	ldr	r3, [r3, #20]
90015100:	4798      	blx	r3
90015102:	1d28      	adds	r0, r5, #4
90015104:	f7ff ffe9 	bl	900150da <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90015108:	6026      	str	r6, [r4, #0]
9001510a:	6833      	ldr	r3, [r6, #0]
9001510c:	4630      	mov	r0, r6
9001510e:	68db      	ldr	r3, [r3, #12]
90015110:	4798      	blx	r3
90015112:	682b      	ldr	r3, [r5, #0]
90015114:	4628      	mov	r0, r5
90015116:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90015118:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001511c:	4718      	bx	r3
9001511e:	bf00      	nop
90015120:	2001aa84 	.word	0x2001aa84

90015124 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
90015124:	2300      	movs	r3, #0
90015126:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
9001512a:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
9001512e:	461a      	mov	r2, r3
90015130:	b5f0      	push	{r4, r5, r6, r7, lr}
90015132:	461c      	mov	r4, r3
90015134:	461d      	mov	r5, r3
90015136:	459c      	cmp	ip, r3
90015138:	dd1a      	ble.n	90015170 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
9001513a:	18c6      	adds	r6, r0, r3
9001513c:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
90015140:	b16e      	cbz	r6, 9001515e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
90015142:	429a      	cmp	r2, r3
90015144:	d008      	beq.n	90015158 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
90015146:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
9001514a:	fa1f fe82 	uxth.w	lr, r2
9001514e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
90015152:	1887      	adds	r7, r0, r2
90015154:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
90015158:	3201      	adds	r2, #1
9001515a:	3301      	adds	r3, #1
9001515c:	e7eb      	b.n	90015136 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
9001515e:	4299      	cmp	r1, r3
90015160:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
90015164:	bfa8      	it	ge
90015166:	3501      	addge	r5, #1
90015168:	429e      	cmp	r6, r3
9001516a:	bfc8      	it	gt
9001516c:	3401      	addgt	r4, #1
9001516e:	e7f4      	b.n	9001515a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90015170:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
90015174:	1b49      	subs	r1, r1, r5
90015176:	1b1b      	subs	r3, r3, r4
90015178:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
9001517c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
90015180:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90015184:	4293      	cmp	r3, r2
90015186:	dd03      	ble.n	90015190 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90015188:	3b01      	subs	r3, #1
9001518a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
9001518e:	e7f7      	b.n	90015180 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90015190:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

90015194 <_ZN8touchgfx11Application15handleTickEventEv>:
90015194:	b570      	push	{r4, r5, r6, lr}
90015196:	4d16      	ldr	r5, [pc, #88]	@ (900151f0 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
90015198:	4604      	mov	r4, r0
9001519a:	6828      	ldr	r0, [r5, #0]
9001519c:	b140      	cbz	r0, 900151b0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001519e:	7a03      	ldrb	r3, [r0, #8]
900151a0:	b933      	cbnz	r3, 900151b0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900151a2:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900151a6:	6803      	ldr	r3, [r0, #0]
900151a8:	689b      	ldr	r3, [r3, #8]
900151aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900151ae:	4718      	bx	r3
900151b0:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
900151b4:	4e0f      	ldr	r6, [pc, #60]	@ (900151f4 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
900151b6:	b973      	cbnz	r3, 900151d6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900151b8:	b168      	cbz	r0, 900151d6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900151ba:	7a03      	ldrb	r3, [r0, #8]
900151bc:	b15b      	cbz	r3, 900151d6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900151be:	6830      	ldr	r0, [r6, #0]
900151c0:	b110      	cbz	r0, 900151c8 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
900151c2:	6803      	ldr	r3, [r0, #0]
900151c4:	691b      	ldr	r3, [r3, #16]
900151c6:	4798      	blx	r3
900151c8:	6828      	ldr	r0, [r5, #0]
900151ca:	6803      	ldr	r3, [r0, #0]
900151cc:	68db      	ldr	r3, [r3, #12]
900151ce:	4798      	blx	r3
900151d0:	2301      	movs	r3, #1
900151d2:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900151d6:	3404      	adds	r4, #4
900151d8:	4620      	mov	r0, r4
900151da:	f7ff ff5f 	bl	9001509c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
900151de:	4620      	mov	r0, r4
900151e0:	f7ff ffa0 	bl	90015124 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
900151e4:	6830      	ldr	r0, [r6, #0]
900151e6:	b110      	cbz	r0, 900151ee <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
900151e8:	6803      	ldr	r3, [r0, #0]
900151ea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900151ec:	e7dd      	b.n	900151aa <_ZN8touchgfx11Application15handleTickEventEv+0x16>
900151ee:	bd70      	pop	{r4, r5, r6, pc}
900151f0:	2001aa88 	.word	0x2001aa88
900151f4:	2001aa84 	.word	0x2001aa84

900151f8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
900151f8:	4603      	mov	r3, r0
900151fa:	f100 0140 	add.w	r1, r0, #64	@ 0x40
900151fe:	2200      	movs	r2, #0
90015200:	801a      	strh	r2, [r3, #0]
90015202:	3308      	adds	r3, #8
90015204:	f823 2c06 	strh.w	r2, [r3, #-6]
90015208:	f823 2c04 	strh.w	r2, [r3, #-4]
9001520c:	f823 2c02 	strh.w	r2, [r3, #-2]
90015210:	428b      	cmp	r3, r1
90015212:	d1f5      	bne.n	90015200 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90015214:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
90015218:	4770      	bx	lr
	...

9001521c <_ZN8touchgfx11ApplicationC1Ev>:
9001521c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001521e:	4b1d      	ldr	r3, [pc, #116]	@ (90015294 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90015220:	4606      	mov	r6, r0
90015222:	4604      	mov	r4, r0
90015224:	2500      	movs	r5, #0
90015226:	f846 3b04 	str.w	r3, [r6], #4
9001522a:	22a8      	movs	r2, #168	@ 0xa8
9001522c:	2100      	movs	r1, #0
9001522e:	4630      	mov	r0, r6
90015230:	f013 fb19 	bl	90028866 <memset>
90015234:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
90015238:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
9001523c:	4f16      	ldr	r7, [pc, #88]	@ (90015298 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
9001523e:	f7ff ffdb 	bl	900151f8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90015242:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
90015246:	f7ff ffd7 	bl	900151f8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001524a:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
9001524e:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
90015252:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
90015256:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
9001525a:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
9001525e:	490f      	ldr	r1, [pc, #60]	@ (9001529c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90015260:	480f      	ldr	r0, [pc, #60]	@ (900152a0 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
90015262:	f011 facd 	bl	90026800 <CRC_Lock>
90015266:	4b0f      	ldr	r3, [pc, #60]	@ (900152a4 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90015268:	b158      	cbz	r0, 90015282 <_ZN8touchgfx11ApplicationC1Ev+0x66>
9001526a:	801d      	strh	r5, [r3, #0]
9001526c:	2300      	movs	r3, #0
9001526e:	4a0e      	ldr	r2, [pc, #56]	@ (900152a8 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90015270:	4630      	mov	r0, r6
90015272:	6013      	str	r3, [r2, #0]
90015274:	4a0d      	ldr	r2, [pc, #52]	@ (900152ac <_ZN8touchgfx11ApplicationC1Ev+0x90>)
90015276:	603b      	str	r3, [r7, #0]
90015278:	6013      	str	r3, [r2, #0]
9001527a:	f7ff ff2e 	bl	900150da <_ZN8touchgfx11Application12TimerWidgets5clearEv>
9001527e:	4620      	mov	r0, r4
90015280:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90015282:	f44f 6280 	mov.w	r2, #1024	@ 0x400
90015286:	2002      	movs	r0, #2
90015288:	801a      	strh	r2, [r3, #0]
9001528a:	6038      	str	r0, [r7, #0]
9001528c:	f001 ff42 	bl	90017114 <_ZN8touchgfx6Screen4drawEv>
90015290:	e7ec      	b.n	9001526c <_ZN8touchgfx11ApplicationC1Ev+0x50>
90015292:	bf00      	nop
90015294:	90035ad8 	.word	0x90035ad8
90015298:	2001aa84 	.word	0x2001aa84
9001529c:	b5e8b5cd 	.word	0xb5e8b5cd
900152a0:	f407a5c2 	.word	0xf407a5c2
900152a4:	20000142 	.word	0x20000142
900152a8:	2001aa94 	.word	0x2001aa94
900152ac:	2001aa88 	.word	0x2001aa88

900152b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
900152b0:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
900152b4:	3b01      	subs	r3, #1
900152b6:	b29b      	uxth	r3, r3
900152b8:	428b      	cmp	r3, r1
900152ba:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
900152be:	b510      	push	{r4, lr}
900152c0:	d908      	bls.n	900152d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
900152c2:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
900152c6:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
900152ca:	681a      	ldr	r2, [r3, #0]
900152cc:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
900152d0:	685a      	ldr	r2, [r3, #4]
900152d2:	6062      	str	r2, [r4, #4]
900152d4:	bd10      	pop	{r4, pc}
	...

900152d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
900152d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900152dc:	b08f      	sub	sp, #60	@ 0x3c
900152de:	4b92      	ldr	r3, [pc, #584]	@ (90015528 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
900152e0:	4683      	mov	fp, r0
900152e2:	ac0a      	add	r4, sp, #40	@ 0x28
900152e4:	e884 0006 	stmia.w	r4, {r1, r2}
900152e8:	f9b3 2000 	ldrsh.w	r2, [r3]
900152ec:	4620      	mov	r0, r4
900152ee:	4b8f      	ldr	r3, [pc, #572]	@ (9001552c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
900152f0:	f9b3 1000 	ldrsh.w	r1, [r3]
900152f4:	f7ff fe0f 	bl	90014f16 <_ZN8touchgfx4Rect10restrictToEss>
900152f8:	4620      	mov	r0, r4
900152fa:	f7fb fa06 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
900152fe:	2800      	cmp	r0, #0
90015300:	d170      	bne.n	900153e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90015302:	4b8b      	ldr	r3, [pc, #556]	@ (90015530 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
90015304:	681b      	ldr	r3, [r3, #0]
90015306:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
9001530a:	2b02      	cmp	r3, #2
9001530c:	d06a      	beq.n	900153e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
9001530e:	9403      	str	r4, [sp, #12]
90015310:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90015314:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90015318:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
9001531c:	9301      	str	r3, [sp, #4]
9001531e:	35a4      	adds	r5, #164	@ 0xa4
90015320:	b15c      	cbz	r4, 9001533a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
90015322:	4629      	mov	r1, r5
90015324:	9803      	ldr	r0, [sp, #12]
90015326:	f7ff fe47 	bl	90014fb8 <_ZNK8touchgfx4Rect8includesERKS0_>
9001532a:	3c01      	subs	r4, #1
9001532c:	b118      	cbz	r0, 90015336 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
9001532e:	b2a1      	uxth	r1, r4
90015330:	9801      	ldr	r0, [sp, #4]
90015332:	f7ff ffbd 	bl	900152b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015336:	3d08      	subs	r5, #8
90015338:	e7f2      	b.n	90015320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
9001533a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
9001533e:	f10a 33ff 	add.w	r3, sl, #4294967295
90015342:	f8cd a010 	str.w	sl, [sp, #16]
90015346:	9302      	str	r3, [sp, #8]
90015348:	ea4f 03ca 	mov.w	r3, sl, lsl #3
9001534c:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
90015350:	9306      	str	r3, [sp, #24]
90015352:	445c      	add	r4, fp
90015354:	2500      	movs	r5, #0
90015356:	4626      	mov	r6, r4
90015358:	f8cd a014 	str.w	sl, [sp, #20]
9001535c:	462f      	mov	r7, r5
9001535e:	9b05      	ldr	r3, [sp, #20]
90015360:	2b00      	cmp	r3, #0
90015362:	d073      	beq.n	9001544c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
90015364:	9903      	ldr	r1, [sp, #12]
90015366:	4630      	mov	r0, r6
90015368:	f7ff fdb3 	bl	90014ed2 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001536c:	b350      	cbz	r0, 900153c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
9001536e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
90015372:	f9b6 c000 	ldrsh.w	ip, [r6]
90015376:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
9001537a:	45e6      	cmp	lr, ip
9001537c:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
90015380:	db33      	blt.n	900153ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
90015382:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90015386:	88b3      	ldrh	r3, [r6, #4]
90015388:	4472      	add	r2, lr
9001538a:	4463      	add	r3, ip
9001538c:	b212      	sxth	r2, r2
9001538e:	b21b      	sxth	r3, r3
90015390:	429a      	cmp	r2, r3
90015392:	dc2a      	bgt.n	900153ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
90015394:	fa1f f289 	uxth.w	r2, r9
90015398:	88f3      	ldrh	r3, [r6, #6]
9001539a:	45c8      	cmp	r8, r9
9001539c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
900153a0:	4413      	add	r3, r2
900153a2:	fa1f fc88 	uxth.w	ip, r8
900153a6:	b29b      	uxth	r3, r3
900153a8:	fa0f fe83 	sxth.w	lr, r3
900153ac:	db0f      	blt.n	900153ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
900153ae:	eba3 030c 	sub.w	r3, r3, ip
900153b2:	1ac9      	subs	r1, r1, r3
900153b4:	b209      	sxth	r1, r1
900153b6:	2900      	cmp	r1, #0
900153b8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
900153bc:	dd12      	ble.n	900153e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
900153be:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
900153c2:	4605      	mov	r5, r0
900153c4:	9b05      	ldr	r3, [sp, #20]
900153c6:	3e08      	subs	r6, #8
900153c8:	3b01      	subs	r3, #1
900153ca:	9305      	str	r3, [sp, #20]
900153cc:	e7c7      	b.n	9001535e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
900153ce:	4461      	add	r1, ip
900153d0:	b209      	sxth	r1, r1
900153d2:	4571      	cmp	r1, lr
900153d4:	dc38      	bgt.n	90015448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
900153d6:	eba2 020c 	sub.w	r2, r2, ip
900153da:	b212      	sxth	r2, r2
900153dc:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
900153e0:	2a00      	cmp	r2, #0
900153e2:	dcee      	bgt.n	900153c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
900153e4:	b00f      	add	sp, #60	@ 0x3c
900153e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900153ea:	45c8      	cmp	r8, r9
900153ec:	db2c      	blt.n	90015448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
900153ee:	88f3      	ldrh	r3, [r6, #6]
900153f0:	4499      	add	r9, r3
900153f2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
900153f6:	4498      	add	r8, r3
900153f8:	fa0f f989 	sxth.w	r9, r9
900153fc:	fa0f f888 	sxth.w	r8, r8
90015400:	45c1      	cmp	r9, r8
90015402:	db21      	blt.n	90015448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
90015404:	fa1f f28c 	uxth.w	r2, ip
90015408:	88b3      	ldrh	r3, [r6, #4]
9001540a:	45e6      	cmp	lr, ip
9001540c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90015410:	4413      	add	r3, r2
90015412:	fa1f f88e 	uxth.w	r8, lr
90015416:	b29b      	uxth	r3, r3
90015418:	fa0f f983 	sxth.w	r9, r3
9001541c:	db0a      	blt.n	90015434 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
9001541e:	eba3 0308 	sub.w	r3, r3, r8
90015422:	1ac9      	subs	r1, r1, r3
90015424:	b209      	sxth	r1, r1
90015426:	2900      	cmp	r1, #0
90015428:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
9001542c:	ddda      	ble.n	900153e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
9001542e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90015432:	e7c6      	b.n	900153c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90015434:	4441      	add	r1, r8
90015436:	b209      	sxth	r1, r1
90015438:	4549      	cmp	r1, r9
9001543a:	dc05      	bgt.n	90015448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
9001543c:	eba2 0208 	sub.w	r2, r2, r8
90015440:	b212      	sxth	r2, r2
90015442:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
90015446:	e7cb      	b.n	900153e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
90015448:	4607      	mov	r7, r0
9001544a:	e7bb      	b.n	900153c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
9001544c:	2d00      	cmp	r5, #0
9001544e:	d181      	bne.n	90015354 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
90015450:	2f00      	cmp	r7, #0
90015452:	f000 81df 	beq.w	90015814 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90015456:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
9001545a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
9001545e:	b2b3      	uxth	r3, r6
90015460:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
90015464:	9305      	str	r3, [sp, #20]
90015466:	9a05      	ldr	r2, [sp, #20]
90015468:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
9001546c:	4413      	add	r3, r2
9001546e:	b2ba      	uxth	r2, r7
90015470:	4492      	add	sl, r2
90015472:	b29b      	uxth	r3, r3
90015474:	fa1f fa8a 	uxth.w	sl, sl
90015478:	fa0f f883 	sxth.w	r8, r3
9001547c:	fa0f f98a 	sxth.w	r9, sl
90015480:	e9cd 2307 	strd	r2, r3, [sp, #28]
90015484:	9b04      	ldr	r3, [sp, #16]
90015486:	2b00      	cmp	r3, #0
90015488:	d054      	beq.n	90015534 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
9001548a:	9903      	ldr	r1, [sp, #12]
9001548c:	4620      	mov	r0, r4
9001548e:	f7ff fd20 	bl	90014ed2 <_ZNK8touchgfx4Rect9intersectERKS0_>
90015492:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90015496:	b1c0      	cbz	r0, 900154ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90015498:	f9b4 e000 	ldrsh.w	lr, [r4]
9001549c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
900154a0:	4576      	cmp	r6, lr
900154a2:	dc22      	bgt.n	900154ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
900154a4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
900154a8:	44f4      	add	ip, lr
900154aa:	fa0f fc8c 	sxth.w	ip, ip
900154ae:	45e0      	cmp	r8, ip
900154b0:	db1b      	blt.n	900154ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
900154b2:	428f      	cmp	r7, r1
900154b4:	fa1f fc81 	uxth.w	ip, r1
900154b8:	88e1      	ldrh	r1, [r4, #6]
900154ba:	dc0d      	bgt.n	900154d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
900154bc:	ebaa 0c0c 	sub.w	ip, sl, ip
900154c0:	f8a4 9002 	strh.w	r9, [r4, #2]
900154c4:	eba1 010c 	sub.w	r1, r1, ip
900154c8:	80e1      	strh	r1, [r4, #6]
900154ca:	4628      	mov	r0, r5
900154cc:	9904      	ldr	r1, [sp, #16]
900154ce:	3c08      	subs	r4, #8
900154d0:	4605      	mov	r5, r0
900154d2:	3901      	subs	r1, #1
900154d4:	9104      	str	r1, [sp, #16]
900154d6:	e7d3      	b.n	90015480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
900154d8:	4461      	add	r1, ip
900154da:	b209      	sxth	r1, r1
900154dc:	4549      	cmp	r1, r9
900154de:	dcf5      	bgt.n	900154cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
900154e0:	eba2 0c0c 	sub.w	ip, r2, ip
900154e4:	f8a4 c006 	strh.w	ip, [r4, #6]
900154e8:	e7ef      	b.n	900154ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
900154ea:	428f      	cmp	r7, r1
900154ec:	dcee      	bgt.n	900154cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
900154ee:	f8b4 c006 	ldrh.w	ip, [r4, #6]
900154f2:	4461      	add	r1, ip
900154f4:	b209      	sxth	r1, r1
900154f6:	4589      	cmp	r9, r1
900154f8:	dbe8      	blt.n	900154cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
900154fa:	4576      	cmp	r6, lr
900154fc:	fa1f fc8e 	uxth.w	ip, lr
90015500:	88a1      	ldrh	r1, [r4, #4]
90015502:	dc07      	bgt.n	90015514 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
90015504:	eba3 0c0c 	sub.w	ip, r3, ip
90015508:	f8a4 8000 	strh.w	r8, [r4]
9001550c:	eba1 010c 	sub.w	r1, r1, ip
90015510:	80a1      	strh	r1, [r4, #4]
90015512:	e7da      	b.n	900154ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90015514:	4461      	add	r1, ip
90015516:	b209      	sxth	r1, r1
90015518:	4588      	cmp	r8, r1
9001551a:	dbd7      	blt.n	900154cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
9001551c:	9905      	ldr	r1, [sp, #20]
9001551e:	eba1 0c0c 	sub.w	ip, r1, ip
90015522:	f8a4 c004 	strh.w	ip, [r4, #4]
90015526:	e7d0      	b.n	900154ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90015528:	2001aa34 	.word	0x2001aa34
9001552c:	2001aa32 	.word	0x2001aa32
90015530:	2001aa40 	.word	0x2001aa40
90015534:	2d00      	cmp	r5, #0
90015536:	f000 816d 	beq.w	90015814 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
9001553a:	9b06      	ldr	r3, [sp, #24]
9001553c:	445b      	add	r3, fp
9001553e:	461c      	mov	r4, r3
90015540:	9b02      	ldr	r3, [sp, #8]
90015542:	3301      	adds	r3, #1
90015544:	f000 8166 	beq.w	90015814 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90015548:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
9001554c:	9803      	ldr	r0, [sp, #12]
9001554e:	4629      	mov	r1, r5
90015550:	f7ff fd32 	bl	90014fb8 <_ZNK8touchgfx4Rect8includesERKS0_>
90015554:	b120      	cbz	r0, 90015560 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
90015556:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001555a:	9801      	ldr	r0, [sp, #4]
9001555c:	f7ff fea8 	bl	900152b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015560:	9903      	ldr	r1, [sp, #12]
90015562:	4628      	mov	r0, r5
90015564:	f7ff fcb5 	bl	90014ed2 <_ZNK8touchgfx4Rect9intersectERKS0_>
90015568:	2800      	cmp	r0, #0
9001556a:	f000 809c 	beq.w	900156a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
9001556e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
90015572:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90015576:	fa1f f189 	uxth.w	r1, r9
9001557a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
9001557e:	9309      	str	r3, [sp, #36]	@ 0x24
90015580:	eb01 0c03 	add.w	ip, r1, r3
90015584:	b283      	uxth	r3, r0
90015586:	4548      	cmp	r0, r9
90015588:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
9001558c:	fa1f fa8c 	uxth.w	sl, ip
90015590:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90015594:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
90015598:	eb03 050c 	add.w	r5, r3, ip
9001559c:	b2ad      	uxth	r5, r5
9001559e:	9505      	str	r5, [sp, #20]
900155a0:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
900155a4:	9504      	str	r5, [sp, #16]
900155a6:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
900155aa:	f340 8099 	ble.w	900156e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
900155ae:	1a5b      	subs	r3, r3, r1
900155b0:	4596      	cmp	lr, r2
900155b2:	fa0f f08a 	sxth.w	r0, sl
900155b6:	b29b      	uxth	r3, r3
900155b8:	b21e      	sxth	r6, r3
900155ba:	dd2e      	ble.n	9001561a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
900155bc:	9f02      	ldr	r7, [sp, #8]
900155be:	fa1f fe8e 	uxth.w	lr, lr
900155c2:	b292      	uxth	r2, r2
900155c4:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
900155c8:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
900155cc:	9f04      	ldr	r7, [sp, #16]
900155ce:	ebae 0102 	sub.w	r1, lr, r2
900155d2:	44a6      	add	lr, r4
900155d4:	1a3f      	subs	r7, r7, r0
900155d6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
900155da:	b289      	uxth	r1, r1
900155dc:	4402      	add	r2, r0
900155de:	fa0f fe8e 	sxth.w	lr, lr
900155e2:	b20d      	sxth	r5, r1
900155e4:	b212      	sxth	r2, r2
900155e6:	436f      	muls	r7, r5
900155e8:	ebae 0202 	sub.w	r2, lr, r2
900155ec:	4372      	muls	r2, r6
900155ee:	4297      	cmp	r7, r2
900155f0:	db09      	blt.n	90015606 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
900155f2:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
900155f6:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
900155fa:	449c      	add	ip, r3
900155fc:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90015600:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
90015604:	e684      	b.n	90015310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90015606:	4421      	add	r1, r4
90015608:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
9001560c:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
90015610:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90015614:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90015618:	e67a      	b.n	90015310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
9001561a:	9f04      	ldr	r7, [sp, #16]
9001561c:	42b8      	cmp	r0, r7
9001561e:	da27      	bge.n	90015670 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
90015620:	9902      	ldr	r1, [sp, #8]
90015622:	1a3f      	subs	r7, r7, r0
90015624:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
90015628:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
9001562c:	eb05 010e 	add.w	r1, r5, lr
90015630:	fa1f f881 	uxth.w	r8, r1
90015634:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
90015638:	4411      	add	r1, r2
9001563a:	fa0f f988 	sxth.w	r9, r8
9001563e:	eba2 020e 	sub.w	r2, r2, lr
90015642:	eba1 0108 	sub.w	r1, r1, r8
90015646:	4372      	muls	r2, r6
90015648:	b289      	uxth	r1, r1
9001564a:	fa0f f881 	sxth.w	r8, r1
9001564e:	fb08 f707 	mul.w	r7, r8, r7
90015652:	42ba      	cmp	r2, r7
90015654:	dc06      	bgt.n	90015664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
90015656:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
9001565a:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
9001565e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
90015662:	e7ca      	b.n	900155fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
90015664:	4429      	add	r1, r5
90015666:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
9001566a:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
9001566e:	e64f      	b.n	90015310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90015670:	9805      	ldr	r0, [sp, #20]
90015672:	2d06      	cmp	r5, #6
90015674:	ebaa 0000 	sub.w	r0, sl, r0
90015678:	b280      	uxth	r0, r0
9001567a:	fa0f fe80 	sxth.w	lr, r0
9001567e:	d817      	bhi.n	900156b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
90015680:	9b04      	ldr	r3, [sp, #16]
90015682:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
90015686:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
9001568a:	1c6b      	adds	r3, r5, #1
9001568c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
90015690:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90015694:	9b01      	ldr	r3, [sp, #4]
90015696:	9801      	ldr	r0, [sp, #4]
90015698:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001569c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900156a0:	805a      	strh	r2, [r3, #2]
900156a2:	809e      	strh	r6, [r3, #4]
900156a4:	80d9      	strh	r1, [r3, #6]
900156a6:	9b02      	ldr	r3, [sp, #8]
900156a8:	3c08      	subs	r4, #8
900156aa:	3b01      	subs	r3, #1
900156ac:	9302      	str	r3, [sp, #8]
900156ae:	e747      	b.n	90015540 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
900156b0:	9a02      	ldr	r2, [sp, #8]
900156b2:	45b6      	cmp	lr, r6
900156b4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900156b8:	db0d      	blt.n	900156d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
900156ba:	449c      	add	ip, r3
900156bc:	445a      	add	r2, fp
900156be:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
900156c2:	fa1f fc8c 	uxth.w	ip, ip
900156c6:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
900156ca:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
900156ce:	448c      	add	ip, r1
900156d0:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
900156d4:	e61c      	b.n	90015310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900156d6:	445a      	add	r2, fp
900156d8:	4484      	add	ip, r0
900156da:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
900156de:	e78f      	b.n	90015600 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
900156e0:	fa1f f18e 	uxth.w	r1, lr
900156e4:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
900156e8:	b293      	uxth	r3, r2
900156ea:	4596      	cmp	lr, r2
900156ec:	eb01 0806 	add.w	r8, r1, r6
900156f0:	9306      	str	r3, [sp, #24]
900156f2:	fa1f f888 	uxth.w	r8, r8
900156f6:	9f06      	ldr	r7, [sp, #24]
900156f8:	fa0f f388 	sxth.w	r3, r8
900156fc:	9307      	str	r3, [sp, #28]
900156fe:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90015702:	443b      	add	r3, r7
90015704:	b29b      	uxth	r3, r3
90015706:	9308      	str	r3, [sp, #32]
90015708:	da24      	bge.n	90015754 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
9001570a:	9905      	ldr	r1, [sp, #20]
9001570c:	eba3 0308 	sub.w	r3, r3, r8
90015710:	eba2 020e 	sub.w	r2, r2, lr
90015714:	eba9 0000 	sub.w	r0, r9, r0
90015718:	ebaa 0401 	sub.w	r4, sl, r1
9001571c:	b29b      	uxth	r3, r3
9001571e:	b2a4      	uxth	r4, r4
90015720:	b219      	sxth	r1, r3
90015722:	b225      	sxth	r5, r4
90015724:	4348      	muls	r0, r1
90015726:	436a      	muls	r2, r5
90015728:	4282      	cmp	r2, r0
9001572a:	9a02      	ldr	r2, [sp, #8]
9001572c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90015730:	445a      	add	r2, fp
90015732:	dc06      	bgt.n	90015742 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
90015734:	9b07      	ldr	r3, [sp, #28]
90015736:	44a4      	add	ip, r4
90015738:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
9001573c:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
90015740:	e75e      	b.n	90015600 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
90015742:	9904      	ldr	r1, [sp, #16]
90015744:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
90015748:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
9001574c:	4433      	add	r3, r6
9001574e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90015752:	e5dd      	b.n	90015310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90015754:	9f06      	ldr	r7, [sp, #24]
90015756:	9b04      	ldr	r3, [sp, #16]
90015758:	1bc9      	subs	r1, r1, r7
9001575a:	fa0f f78a 	sxth.w	r7, sl
9001575e:	b289      	uxth	r1, r1
90015760:	429f      	cmp	r7, r3
90015762:	fa0f fe81 	sxth.w	lr, r1
90015766:	dd23      	ble.n	900157b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
90015768:	9a05      	ldr	r2, [sp, #20]
9001576a:	eba9 0000 	sub.w	r0, r9, r0
9001576e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90015772:	ebaa 0202 	sub.w	r2, sl, r2
90015776:	9d07      	ldr	r5, [sp, #28]
90015778:	fb0e f000 	mul.w	r0, lr, r0
9001577c:	b292      	uxth	r2, r2
9001577e:	eba5 0a03 	sub.w	sl, r5, r3
90015782:	9b02      	ldr	r3, [sp, #8]
90015784:	b214      	sxth	r4, r2
90015786:	00db      	lsls	r3, r3, #3
90015788:	fb04 fa0a 	mul.w	sl, r4, sl
9001578c:	445b      	add	r3, fp
9001578e:	4550      	cmp	r0, sl
90015790:	db03      	blt.n	9001579a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
90015792:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
90015796:	4494      	add	ip, r2
90015798:	e732      	b.n	90015600 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
9001579a:	9a04      	ldr	r2, [sp, #16]
9001579c:	4431      	add	r1, r6
9001579e:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
900157a2:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
900157a6:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
900157aa:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
900157ae:	e75c      	b.n	9001566a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
900157b0:	9b08      	ldr	r3, [sp, #32]
900157b2:	2d06      	cmp	r5, #6
900157b4:	eba3 0308 	sub.w	r3, r3, r8
900157b8:	b29b      	uxth	r3, r3
900157ba:	b218      	sxth	r0, r3
900157bc:	d813      	bhi.n	900157e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
900157be:	9b07      	ldr	r3, [sp, #28]
900157c0:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
900157c4:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
900157c8:	1c6b      	adds	r3, r5, #1
900157ca:	9901      	ldr	r1, [sp, #4]
900157cc:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
900157d0:	9b01      	ldr	r3, [sp, #4]
900157d2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
900157d6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900157da:	805a      	strh	r2, [r3, #2]
900157dc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900157de:	f8a3 e006 	strh.w	lr, [r3, #6]
900157e2:	809a      	strh	r2, [r3, #4]
900157e4:	e75f      	b.n	900156a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
900157e6:	9c02      	ldr	r4, [sp, #8]
900157e8:	4570      	cmp	r0, lr
900157ea:	ea4f 04c4 	mov.w	r4, r4, lsl #3
900157ee:	db0d      	blt.n	9001580c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
900157f0:	4431      	add	r1, r6
900157f2:	9b06      	ldr	r3, [sp, #24]
900157f4:	445c      	add	r4, fp
900157f6:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
900157fa:	b289      	uxth	r1, r1
900157fc:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
90015800:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90015804:	4419      	add	r1, r3
90015806:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
9001580a:	e581      	b.n	90015310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
9001580c:	445c      	add	r4, fp
9001580e:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
90015812:	e79b      	b.n	9001574c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
90015814:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90015818:	f64f 76ff 	movw	r6, #65535	@ 0xffff
9001581c:	1e65      	subs	r5, r4, #1
9001581e:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
90015822:	b2ad      	uxth	r5, r5
90015824:	42b5      	cmp	r5, r6
90015826:	d044      	beq.n	900158b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
90015828:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001582c:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
90015830:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
90015834:	4282      	cmp	r2, r0
90015836:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
9001583a:	d11f      	bne.n	9001587c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
9001583c:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
90015840:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90015844:	459c      	cmp	ip, r3
90015846:	d119      	bne.n	9001587c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
90015848:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
9001584c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90015850:	19d8      	adds	r0, r3, r7
90015852:	b200      	sxth	r0, r0
90015854:	4288      	cmp	r0, r1
90015856:	d109      	bne.n	9001586c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90015858:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
9001585c:	4413      	add	r3, r2
9001585e:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90015862:	4629      	mov	r1, r5
90015864:	9801      	ldr	r0, [sp, #4]
90015866:	f7ff fd23 	bl	900152b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001586a:	e003      	b.n	90015874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
9001586c:	4411      	add	r1, r2
9001586e:	b209      	sxth	r1, r1
90015870:	42b9      	cmp	r1, r7
90015872:	d0f3      	beq.n	9001585c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90015874:	3d01      	subs	r5, #1
90015876:	3c08      	subs	r4, #8
90015878:	b2ad      	uxth	r5, r5
9001587a:	e7d3      	b.n	90015824 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
9001587c:	42b9      	cmp	r1, r7
9001587e:	d1f9      	bne.n	90015874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90015880:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
90015884:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90015888:	4299      	cmp	r1, r3
9001588a:	d1f3      	bne.n	90015874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
9001588c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90015890:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90015894:	181f      	adds	r7, r3, r0
90015896:	b23f      	sxth	r7, r7
90015898:	42ba      	cmp	r2, r7
9001589a:	d105      	bne.n	900158a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
9001589c:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
900158a0:	440b      	add	r3, r1
900158a2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900158a6:	e7dc      	b.n	90015862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
900158a8:	440a      	add	r2, r1
900158aa:	b212      	sxth	r2, r2
900158ac:	4290      	cmp	r0, r2
900158ae:	d1e1      	bne.n	90015874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
900158b0:	e7f6      	b.n	900158a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
900158b2:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
900158b6:	2e07      	cmp	r6, #7
900158b8:	ea4f 04c6 	mov.w	r4, r6, lsl #3
900158bc:	d812      	bhi.n	900158e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
900158be:	1c75      	adds	r5, r6, #1
900158c0:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
900158c4:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
900158c8:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
900158cc:	9d01      	ldr	r5, [sp, #4]
900158ce:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
900158d2:	442c      	add	r4, r5
900158d4:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
900158d8:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
900158dc:	8061      	strh	r1, [r4, #2]
900158de:	80a2      	strh	r2, [r4, #4]
900158e0:	80e3      	strh	r3, [r4, #6]
900158e2:	e57f      	b.n	900153e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
900158e4:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
900158e8:	3e01      	subs	r6, #1
900158ea:	445c      	add	r4, fp
900158ec:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
900158f0:	f04f 37ff 	mov.w	r7, #4294967295
900158f4:	2500      	movs	r5, #0
900158f6:	9305      	str	r3, [sp, #20]
900158f8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
900158fc:	1e72      	subs	r2, r6, #1
900158fe:	9302      	str	r3, [sp, #8]
90015900:	4691      	mov	r9, r2
90015902:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90015906:	9304      	str	r3, [sp, #16]
90015908:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
9001590c:	f1b9 3fff 	cmp.w	r9, #4294967295
90015910:	6818      	ldr	r0, [r3, #0]
90015912:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90015916:	9207      	str	r2, [sp, #28]
90015918:	bf16      	itet	ne
9001591a:	9905      	ldrne	r1, [sp, #20]
9001591c:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90015920:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90015924:	9306      	str	r3, [sp, #24]
90015926:	f8be 1006 	ldrh.w	r1, [lr, #6]
9001592a:	f8be 8004 	ldrh.w	r8, [lr, #4]
9001592e:	fb18 f801 	smulbb	r8, r8, r1
90015932:	6859      	ldr	r1, [r3, #4]
90015934:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90015938:	4671      	mov	r1, lr
9001593a:	a80c      	add	r0, sp, #48	@ 0x30
9001593c:	f7ff fb62 	bl	90015004 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90015940:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90015944:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90015948:	f04f 0c08 	mov.w	ip, #8
9001594c:	9b04      	ldr	r3, [sp, #16]
9001594e:	9a02      	ldr	r2, [sp, #8]
90015950:	fb10 f001 	smulbb	r0, r0, r1
90015954:	fb02 8803 	mla	r8, r2, r3, r8
90015958:	eba0 0108 	sub.w	r1, r0, r8
9001595c:	fb90 f0fc 	sdiv	r0, r0, ip
90015960:	4288      	cmp	r0, r1
90015962:	dc20      	bgt.n	900159a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
90015964:	4551      	cmp	r1, sl
90015966:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
9001596a:	da03      	bge.n	90015974 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69c>
9001596c:	b1d9      	cbz	r1, 900159a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
9001596e:	468a      	mov	sl, r1
90015970:	464f      	mov	r7, r9
90015972:	4635      	mov	r5, r6
90015974:	f109 39ff 	add.w	r9, r9, #4294967295
90015978:	f119 0f02 	cmn.w	r9, #2
9001597c:	d1c6      	bne.n	9001590c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
9001597e:	4616      	mov	r6, r2
90015980:	3201      	adds	r2, #1
90015982:	f1a4 0408 	sub.w	r4, r4, #8
90015986:	d1b7      	bne.n	900158f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
90015988:	9b01      	ldr	r3, [sp, #4]
9001598a:	b2ac      	uxth	r4, r5
9001598c:	00ed      	lsls	r5, r5, #3
9001598e:	1958      	adds	r0, r3, r5
90015990:	1c7b      	adds	r3, r7, #1
90015992:	d10b      	bne.n	900159ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d4>
90015994:	4601      	mov	r1, r0
90015996:	9803      	ldr	r0, [sp, #12]
90015998:	f7ff fb34 	bl	90015004 <_ZN8touchgfx4Rect11expandToFitERKS0_>
9001599c:	4621      	mov	r1, r4
9001599e:	9801      	ldr	r0, [sp, #4]
900159a0:	f7ff fc86 	bl	900152b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900159a4:	e4b4      	b.n	90015310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900159a6:	464f      	mov	r7, r9
900159a8:	4635      	mov	r5, r6
900159aa:	e7ed      	b.n	90015988 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b0>
900159ac:	9b01      	ldr	r3, [sp, #4]
900159ae:	00ff      	lsls	r7, r7, #3
900159b0:	445d      	add	r5, fp
900159b2:	19d9      	adds	r1, r3, r7
900159b4:	445f      	add	r7, fp
900159b6:	f7ff fb25 	bl	90015004 <_ZN8touchgfx4Rect11expandToFitERKS0_>
900159ba:	9b03      	ldr	r3, [sp, #12]
900159bc:	cb03      	ldmia	r3!, {r0, r1}
900159be:	9b03      	ldr	r3, [sp, #12]
900159c0:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
900159c4:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
900159c8:	f855 0fac 	ldr.w	r0, [r5, #172]!
900159cc:	6869      	ldr	r1, [r5, #4]
900159ce:	c303      	stmia	r3!, {r0, r1}
900159d0:	e7e4      	b.n	9001599c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
900159d2:	bf00      	nop

900159d4 <_ZN8touchgfx11Application15drawCachedAreasEv>:
900159d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900159d8:	f500 7698 	add.w	r6, r0, #304	@ 0x130
900159dc:	b0a1      	sub	sp, #132	@ 0x84
900159de:	4604      	mov	r4, r0
900159e0:	4630      	mov	r0, r6
900159e2:	f7fa fe92 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
900159e6:	4605      	mov	r5, r0
900159e8:	b948      	cbnz	r0, 900159fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
900159ea:	6823      	ldr	r3, [r4, #0]
900159ec:	4620      	mov	r0, r4
900159ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
900159f0:	e896 0006 	ldmia.w	r6, {r1, r2}
900159f4:	4798      	blx	r3
900159f6:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
900159fa:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
900159fe:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90015a02:	2b00      	cmp	r3, #0
90015a04:	d149      	bne.n	90015a9a <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
90015a06:	4bb2      	ldr	r3, [pc, #712]	@ (90015cd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90015a08:	681b      	ldr	r3, [r3, #0]
90015a0a:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
90015a0e:	1ebb      	subs	r3, r7, #2
90015a10:	425f      	negs	r7, r3
90015a12:	415f      	adcs	r7, r3
90015a14:	4baf      	ldr	r3, [pc, #700]	@ (90015cd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
90015a16:	681b      	ldr	r3, [r3, #0]
90015a18:	2b00      	cmp	r3, #0
90015a1a:	d040      	beq.n	90015a9e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
90015a1c:	4dae      	ldr	r5, [pc, #696]	@ (90015cd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
90015a1e:	4628      	mov	r0, r5
90015a20:	f7fa fe73 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
90015a24:	4606      	mov	r6, r0
90015a26:	2800      	cmp	r0, #0
90015a28:	d139      	bne.n	90015a9e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
90015a2a:	4628      	mov	r0, r5
90015a2c:	f7ff f97e 	bl	90014d2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90015a30:	6823      	ldr	r3, [r4, #0]
90015a32:	6829      	ldr	r1, [r5, #0]
90015a34:	4620      	mov	r0, r4
90015a36:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90015a38:	686a      	ldr	r2, [r5, #4]
90015a3a:	4798      	blx	r3
90015a3c:	802e      	strh	r6, [r5, #0]
90015a3e:	806e      	strh	r6, [r5, #2]
90015a40:	80ae      	strh	r6, [r5, #4]
90015a42:	80ee      	strh	r6, [r5, #6]
90015a44:	af0f      	add	r7, sp, #60	@ 0x3c
90015a46:	4ea5      	ldr	r6, [pc, #660]	@ (90015cdc <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
90015a48:	4638      	mov	r0, r7
90015a4a:	f7ff fbd5 	bl	900151f8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90015a4e:	8835      	ldrh	r5, [r6, #0]
90015a50:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
90015a54:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90015a58:	462b      	mov	r3, r5
90015a5a:	4563      	cmp	r3, ip
90015a5c:	d224      	bcs.n	90015aa8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
90015a5e:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
90015a62:	2907      	cmp	r1, #7
90015a64:	d816      	bhi.n	90015a94 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90015a66:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90015a6a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90015a6e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90015a72:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
90015a76:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
90015a7a:	1c4a      	adds	r2, r1, #1
90015a7c:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
90015a80:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
90015a84:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
90015a88:	f8a2 a002 	strh.w	sl, [r2, #2]
90015a8c:	f8a2 8004 	strh.w	r8, [r2, #4]
90015a90:	f8a2 e006 	strh.w	lr, [r2, #6]
90015a94:	3301      	adds	r3, #1
90015a96:	b29b      	uxth	r3, r3
90015a98:	e7df      	b.n	90015a5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
90015a9a:	2701      	movs	r7, #1
90015a9c:	e7ba      	b.n	90015a14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
90015a9e:	2f00      	cmp	r7, #0
90015aa0:	d1d0      	bne.n	90015a44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
90015aa2:	b021      	add	sp, #132	@ 0x84
90015aa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015aa8:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
90015aac:	42ab      	cmp	r3, r5
90015aae:	d90c      	bls.n	90015aca <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
90015ab0:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
90015ab4:	6822      	ldr	r2, [r4, #0]
90015ab6:	3501      	adds	r5, #1
90015ab8:	4620      	mov	r0, r4
90015aba:	6c17      	ldr	r7, [r2, #64]	@ 0x40
90015abc:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
90015ac0:	b2ad      	uxth	r5, r5
90015ac2:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
90015ac6:	47b8      	blx	r7
90015ac8:	e7ee      	b.n	90015aa8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
90015aca:	4d81      	ldr	r5, [pc, #516]	@ (90015cd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90015acc:	6828      	ldr	r0, [r5, #0]
90015ace:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90015ad2:	2b01      	cmp	r3, #1
90015ad4:	f040 813d 	bne.w	90015d52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x37e>
90015ad8:	4a81      	ldr	r2, [pc, #516]	@ (90015ce0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
90015ada:	8833      	ldrh	r3, [r6, #0]
90015adc:	7812      	ldrb	r2, [r2, #0]
90015ade:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
90015ae2:	2a01      	cmp	r2, #1
90015ae4:	d014      	beq.n	90015b10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
90015ae6:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
90015aea:	f04f 0900 	mov.w	r9, #0
90015aee:	32ae      	adds	r2, #174	@ 0xae
90015af0:	4283      	cmp	r3, r0
90015af2:	f102 0208 	add.w	r2, r2, #8
90015af6:	f280 8083 	bge.w	90015c00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
90015afa:	f832 1c04 	ldrh.w	r1, [r2, #-4]
90015afe:	3301      	adds	r3, #1
90015b00:	f832 7c08 	ldrh.w	r7, [r2, #-8]
90015b04:	4439      	add	r1, r7
90015b06:	b209      	sxth	r1, r1
90015b08:	4589      	cmp	r9, r1
90015b0a:	bfb8      	it	lt
90015b0c:	4689      	movlt	r9, r1
90015b0e:	e7ef      	b.n	90015af0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
90015b10:	4f74      	ldr	r7, [pc, #464]	@ (90015ce4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
90015b12:	883a      	ldrh	r2, [r7, #0]
90015b14:	4693      	mov	fp, r2
90015b16:	4283      	cmp	r3, r0
90015b18:	da08      	bge.n	90015b2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
90015b1a:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
90015b1e:	3301      	adds	r3, #1
90015b20:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
90015b24:	458b      	cmp	fp, r1
90015b26:	bfa8      	it	ge
90015b28:	468b      	movge	fp, r1
90015b2a:	e7f4      	b.n	90015b16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
90015b2c:	2a0f      	cmp	r2, #15
90015b2e:	f04f 0300 	mov.w	r3, #0
90015b32:	f8df 91b4 	ldr.w	r9, [pc, #436]	@ 90015ce8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
90015b36:	bf8c      	ite	hi
90015b38:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
90015b3c:	f04f 0801 	movls.w	r8, #1
90015b40:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
90015b44:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90015b48:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90015b4c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90015b50:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90015b54:	6828      	ldr	r0, [r5, #0]
90015b56:	455b      	cmp	r3, fp
90015b58:	f340 80c8 	ble.w	90015cec <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90015b5c:	6803      	ldr	r3, [r0, #0]
90015b5e:	f8b7 a000 	ldrh.w	sl, [r7]
90015b62:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90015b66:	4798      	blx	r3
90015b68:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90015b6c:	ebaa 0000 	sub.w	r0, sl, r0
90015b70:	682b      	ldr	r3, [r5, #0]
90015b72:	ebac 0e08 	sub.w	lr, ip, r8
90015b76:	b280      	uxth	r0, r0
90015b78:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
90015b7c:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
90015b80:	4570      	cmp	r0, lr
90015b82:	dd05      	ble.n	90015b90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90015b84:	4558      	cmp	r0, fp
90015b86:	dd03      	ble.n	90015b90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90015b88:	b901      	cbnz	r1, 90015b8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90015b8a:	b392      	cbz	r2, 90015bf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21e>
90015b8c:	4658      	mov	r0, fp
90015b8e:	e006      	b.n	90015b9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ca>
90015b90:	2900      	cmp	r1, #0
90015b92:	d1fb      	bne.n	90015b8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90015b94:	2a00      	cmp	r2, #0
90015b96:	d1f9      	bne.n	90015b8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90015b98:	4558      	cmp	r0, fp
90015b9a:	bfb8      	it	lt
90015b9c:	4658      	movlt	r0, fp
90015b9e:	f9b9 3000 	ldrsh.w	r3, [r9]
90015ba2:	2200      	movs	r2, #0
90015ba4:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
90015ba8:	ebac 0000 	sub.w	r0, ip, r0
90015bac:	f8b6 a000 	ldrh.w	sl, [r6]
90015bb0:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90015bb4:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
90015bb8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90015bbc:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90015bc0:	4553      	cmp	r3, sl
90015bc2:	ddc5      	ble.n	90015b50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
90015bc4:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90015bc8:	ab0d      	add	r3, sp, #52	@ 0x34
90015bca:	f852 0fac 	ldr.w	r0, [r2, #172]!
90015bce:	6851      	ldr	r1, [r2, #4]
90015bd0:	c303      	stmia	r3!, {r0, r1}
90015bd2:	a80d      	add	r0, sp, #52	@ 0x34
90015bd4:	a90b      	add	r1, sp, #44	@ 0x2c
90015bd6:	f7fa fd55 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
90015bda:	a80d      	add	r0, sp, #52	@ 0x34
90015bdc:	f7fa fd95 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
90015be0:	b920      	cbnz	r0, 90015bec <_ZN8touchgfx11Application15drawCachedAreasEv+0x218>
90015be2:	6823      	ldr	r3, [r4, #0]
90015be4:	a90d      	add	r1, sp, #52	@ 0x34
90015be6:	4620      	mov	r0, r4
90015be8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90015bea:	4798      	blx	r3
90015bec:	f10a 0a01 	add.w	sl, sl, #1
90015bf0:	e7e4      	b.n	90015bbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e8>
90015bf2:	681a      	ldr	r2, [r3, #0]
90015bf4:	2101      	movs	r1, #1
90015bf6:	4618      	mov	r0, r3
90015bf8:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
90015bfc:	4790      	blx	r2
90015bfe:	e7a7      	b.n	90015b50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
90015c00:	4b39      	ldr	r3, [pc, #228]	@ (90015ce8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>)
90015c02:	f8df 80e0 	ldr.w	r8, [pc, #224]	@ 90015ce4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
90015c06:	881f      	ldrh	r7, [r3, #0]
90015c08:	2300      	movs	r3, #0
90015c0a:	2f0f      	cmp	r7, #15
90015c0c:	bf8c      	ite	hi
90015c0e:	08ff      	lsrhi	r7, r7, #3
90015c10:	2701      	movls	r7, #1
90015c12:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
90015c16:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90015c1a:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
90015c1e:	6828      	ldr	r0, [r5, #0]
90015c20:	4413      	add	r3, r2
90015c22:	b21b      	sxth	r3, r3
90015c24:	454b      	cmp	r3, r9
90015c26:	da61      	bge.n	90015cec <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90015c28:	6803      	ldr	r3, [r0, #0]
90015c2a:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90015c2e:	4798      	blx	r3
90015c30:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
90015c34:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90015c38:	682a      	ldr	r2, [r5, #0]
90015c3a:	4473      	add	r3, lr
90015c3c:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
90015c40:	b21b      	sxth	r3, r3
90015c42:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
90015c46:	eb03 0e07 	add.w	lr, r3, r7
90015c4a:	4570      	cmp	r0, lr
90015c4c:	da0d      	bge.n	90015c6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
90015c4e:	4548      	cmp	r0, r9
90015c50:	da0b      	bge.n	90015c6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
90015c52:	f1bc 0f00 	cmp.w	ip, #0
90015c56:	d138      	bne.n	90015cca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90015c58:	2900      	cmp	r1, #0
90015c5a:	d136      	bne.n	90015cca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90015c5c:	6813      	ldr	r3, [r2, #0]
90015c5e:	2101      	movs	r1, #1
90015c60:	4610      	mov	r0, r2
90015c62:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
90015c66:	4798      	blx	r3
90015c68:	e7d5      	b.n	90015c16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
90015c6a:	f1bc 0f00 	cmp.w	ip, #0
90015c6e:	d12c      	bne.n	90015cca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90015c70:	bb59      	cbnz	r1, 90015cca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90015c72:	4548      	cmp	r0, r9
90015c74:	bfa8      	it	ge
90015c76:	4648      	movge	r0, r9
90015c78:	f9b8 2000 	ldrsh.w	r2, [r8]
90015c7c:	2100      	movs	r1, #0
90015c7e:	1ac0      	subs	r0, r0, r3
90015c80:	f8b6 a000 	ldrh.w	sl, [r6]
90015c84:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90015c88:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90015c8c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90015c90:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
90015c94:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90015c98:	4553      	cmp	r3, sl
90015c9a:	ddbc      	ble.n	90015c16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
90015c9c:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90015ca0:	ab0d      	add	r3, sp, #52	@ 0x34
90015ca2:	f852 0fac 	ldr.w	r0, [r2, #172]!
90015ca6:	6851      	ldr	r1, [r2, #4]
90015ca8:	c303      	stmia	r3!, {r0, r1}
90015caa:	a80d      	add	r0, sp, #52	@ 0x34
90015cac:	a90b      	add	r1, sp, #44	@ 0x2c
90015cae:	f7fa fce9 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
90015cb2:	a80d      	add	r0, sp, #52	@ 0x34
90015cb4:	f7fa fd29 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
90015cb8:	b920      	cbnz	r0, 90015cc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f0>
90015cba:	6823      	ldr	r3, [r4, #0]
90015cbc:	a90d      	add	r1, sp, #52	@ 0x34
90015cbe:	4620      	mov	r0, r4
90015cc0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90015cc2:	4798      	blx	r3
90015cc4:	f10a 0a01 	add.w	sl, sl, #1
90015cc8:	e7e4      	b.n	90015c94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c0>
90015cca:	4648      	mov	r0, r9
90015ccc:	e7d4      	b.n	90015c78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a4>
90015cce:	bf00      	nop
90015cd0:	2001aa40 	.word	0x2001aa40
90015cd4:	2001aa80 	.word	0x2001aa80
90015cd8:	2001aa8c 	.word	0x2001aa8c
90015cdc:	20000142 	.word	0x20000142
90015ce0:	2001aa36 	.word	0x2001aa36
90015ce4:	2001aa32 	.word	0x2001aa32
90015ce8:	2001aa34 	.word	0x2001aa34
90015cec:	6828      	ldr	r0, [r5, #0]
90015cee:	6803      	ldr	r3, [r0, #0]
90015cf0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90015cf2:	4798      	blx	r3
90015cf4:	4ba4      	ldr	r3, [pc, #656]	@ (90015f88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
90015cf6:	781b      	ldrb	r3, [r3, #0]
90015cf8:	2b00      	cmp	r3, #0
90015cfa:	f43f aed2 	beq.w	90015aa2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90015cfe:	2300      	movs	r3, #0
90015d00:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
90015d04:	a80f      	add	r0, sp, #60	@ 0x3c
90015d06:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
90015d0a:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
90015d0e:	4b9f      	ldr	r3, [pc, #636]	@ (90015f8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
90015d10:	881b      	ldrh	r3, [r3, #0]
90015d12:	42b3      	cmp	r3, r6
90015d14:	f4bf aec5 	bcs.w	90015aa2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90015d18:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
90015d1c:	2907      	cmp	r1, #7
90015d1e:	d815      	bhi.n	90015d4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x378>
90015d20:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90015d24:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
90015d28:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
90015d2c:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
90015d30:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
90015d34:	1c4a      	adds	r2, r1, #1
90015d36:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
90015d3a:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
90015d3e:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
90015d42:	f8a2 e002 	strh.w	lr, [r2, #2]
90015d46:	f8a2 c004 	strh.w	ip, [r2, #4]
90015d4a:	80d7      	strh	r7, [r2, #6]
90015d4c:	3301      	adds	r3, #1
90015d4e:	b29b      	uxth	r3, r3
90015d50:	e7df      	b.n	90015d12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33e>
90015d52:	2b02      	cmp	r3, #2
90015d54:	f040 80ce 	bne.w	90015ef4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90015d58:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90015d5c:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
90015d60:	9308      	str	r3, [sp, #32]
90015d62:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
90015d66:	f10b 37ff 	add.w	r7, fp, #4294967295
90015d6a:	9307      	str	r3, [sp, #28]
90015d6c:	b2bf      	uxth	r7, r7
90015d6e:	6803      	ldr	r3, [r0, #0]
90015d70:	fa0f f887 	sxth.w	r8, r7
90015d74:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90015d78:	4798      	blx	r3
90015d7a:	4b85      	ldr	r3, [pc, #532]	@ (90015f90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
90015d7c:	4682      	mov	sl, r0
90015d7e:	2000      	movs	r0, #0
90015d80:	881b      	ldrh	r3, [r3, #0]
90015d82:	9302      	str	r3, [sp, #8]
90015d84:	4b83      	ldr	r3, [pc, #524]	@ (90015f94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
90015d86:	881e      	ldrh	r6, [r3, #0]
90015d88:	4b83      	ldr	r3, [pc, #524]	@ (90015f98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90015d8a:	781b      	ldrb	r3, [r3, #0]
90015d8c:	2b01      	cmp	r3, #1
90015d8e:	bf1e      	ittt	ne
90015d90:	9b02      	ldrne	r3, [sp, #8]
90015d92:	9602      	strne	r6, [sp, #8]
90015d94:	461e      	movne	r6, r3
90015d96:	f7ea fe69 	bl	90000a6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90015d9a:	fb96 fbfb 	sdiv	fp, r6, fp
90015d9e:	fb0b f808 	mul.w	r8, fp, r8
90015da2:	45c2      	cmp	sl, r8
90015da4:	da0c      	bge.n	90015dc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
90015da6:	6828      	ldr	r0, [r5, #0]
90015da8:	210a      	movs	r1, #10
90015daa:	6803      	ldr	r3, [r0, #0]
90015dac:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90015db0:	4798      	blx	r3
90015db2:	6828      	ldr	r0, [r5, #0]
90015db4:	6803      	ldr	r3, [r0, #0]
90015db6:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90015dba:	4798      	blx	r3
90015dbc:	4682      	mov	sl, r0
90015dbe:	e7f0      	b.n	90015da2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
90015dc0:	2000      	movs	r0, #0
90015dc2:	f04f 0800 	mov.w	r8, #0
90015dc6:	f7ea fe81 	bl	90000acc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90015dca:	fa1f f38b 	uxth.w	r3, fp
90015dce:	4645      	mov	r5, r8
90015dd0:	fb17 f703 	smulbb	r7, r7, r3
90015dd4:	9304      	str	r3, [sp, #16]
90015dd6:	b2bb      	uxth	r3, r7
90015dd8:	4f70      	ldr	r7, [pc, #448]	@ (90015f9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
90015dda:	9305      	str	r3, [sp, #20]
90015ddc:	0973      	lsrs	r3, r6, #5
90015dde:	9306      	str	r3, [sp, #24]
90015de0:	42b5      	cmp	r5, r6
90015de2:	d087      	beq.n	90015cf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90015de4:	6838      	ldr	r0, [r7, #0]
90015de6:	6803      	ldr	r3, [r0, #0]
90015de8:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90015dec:	4798      	blx	r3
90015dee:	4582      	cmp	sl, r0
90015df0:	4681      	mov	r9, r0
90015df2:	d907      	bls.n	90015e04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
90015df4:	f1b8 0f00 	cmp.w	r8, #0
90015df8:	d007      	beq.n	90015e0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
90015dfa:	6838      	ldr	r0, [r7, #0]
90015dfc:	6803      	ldr	r3, [r0, #0]
90015dfe:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
90015e02:	e776      	b.n	90015cf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90015e04:	f1b8 0f00 	cmp.w	r8, #0
90015e08:	d003      	beq.n	90015e12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
90015e0a:	454d      	cmp	r5, r9
90015e0c:	d3f5      	bcc.n	90015dfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
90015e0e:	f04f 0801 	mov.w	r8, #1
90015e12:	9a04      	ldr	r2, [sp, #16]
90015e14:	fb95 f3fb 	sdiv	r3, r5, fp
90015e18:	9303      	str	r3, [sp, #12]
90015e1a:	3301      	adds	r3, #1
90015e1c:	fb13 f302 	smulbb	r3, r3, r2
90015e20:	b299      	uxth	r1, r3
90015e22:	f1b8 0f00 	cmp.w	r8, #0
90015e26:	d04d      	beq.n	90015ec4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f0>
90015e28:	eb09 030b 	add.w	r3, r9, fp
90015e2c:	42b3      	cmp	r3, r6
90015e2e:	bfa8      	it	ge
90015e30:	4633      	movge	r3, r6
90015e32:	b29b      	uxth	r3, r3
90015e34:	9807      	ldr	r0, [sp, #28]
90015e36:	428b      	cmp	r3, r1
90015e38:	bf94      	ite	ls
90015e3a:	ebc5 0203 	rsbls	r2, r5, r3
90015e3e:	ebc5 0201 	rsbhi	r2, r5, r1
90015e42:	4282      	cmp	r2, r0
90015e44:	bfa8      	it	ge
90015e46:	4602      	movge	r2, r0
90015e48:	9808      	ldr	r0, [sp, #32]
90015e4a:	fa1f fa82 	uxth.w	sl, r2
90015e4e:	4582      	cmp	sl, r0
90015e50:	d205      	bcs.n	90015e5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
90015e52:	fa15 f082 	uxtah	r0, r5, r2
90015e56:	4286      	cmp	r6, r0
90015e58:	d001      	beq.n	90015e5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
90015e5a:	4299      	cmp	r1, r3
90015e5c:	d23f      	bcs.n	90015ede <_ZN8touchgfx11Application15drawCachedAreasEv+0x50a>
90015e5e:	2001      	movs	r0, #1
90015e60:	9209      	str	r2, [sp, #36]	@ 0x24
90015e62:	f7ea fe03 	bl	90000a6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90015e66:	6838      	ldr	r0, [r7, #0]
90015e68:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
90015e6c:	6803      	ldr	r3, [r0, #0]
90015e6e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90015e72:	4798      	blx	r3
90015e74:	4b48      	ldr	r3, [pc, #288]	@ (90015f98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90015e76:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90015e78:	2000      	movs	r0, #0
90015e7a:	781b      	ldrb	r3, [r3, #0]
90015e7c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
90015e80:	b212      	sxth	r2, r2
90015e82:	2b01      	cmp	r3, #1
90015e84:	d122      	bne.n	90015ecc <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f8>
90015e86:	1b73      	subs	r3, r6, r5
90015e88:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
90015e8c:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
90015e90:	eba3 030a 	sub.w	r3, r3, sl
90015e94:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
90015e98:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
90015e9c:	6823      	ldr	r3, [r4, #0]
90015e9e:	a90d      	add	r1, sp, #52	@ 0x34
90015ea0:	4620      	mov	r0, r4
90015ea2:	4455      	add	r5, sl
90015ea4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90015ea6:	4798      	blx	r3
90015ea8:	6838      	ldr	r0, [r7, #0]
90015eaa:	9b03      	ldr	r3, [sp, #12]
90015eac:	b2ad      	uxth	r5, r5
90015eae:	4259      	negs	r1, r3
90015eb0:	6803      	ldr	r3, [r0, #0]
90015eb2:	b209      	sxth	r1, r1
90015eb4:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90015eb8:	4798      	blx	r3
90015eba:	2001      	movs	r0, #1
90015ebc:	f7ea fe06 	bl	90000acc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90015ec0:	46ca      	mov	sl, r9
90015ec2:	e78d      	b.n	90015de0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
90015ec4:	9b05      	ldr	r3, [sp, #20]
90015ec6:	eba9 0303 	sub.w	r3, r9, r3
90015eca:	e7b2      	b.n	90015e32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
90015ecc:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
90015ed0:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
90015ed4:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
90015ed8:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
90015edc:	e7de      	b.n	90015e9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x4c8>
90015ede:	6838      	ldr	r0, [r7, #0]
90015ee0:	6803      	ldr	r3, [r0, #0]
90015ee2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90015ee4:	4798      	blx	r3
90015ee6:	6838      	ldr	r0, [r7, #0]
90015ee8:	9906      	ldr	r1, [sp, #24]
90015eea:	6803      	ldr	r3, [r0, #0]
90015eec:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90015ef0:	4798      	blx	r3
90015ef2:	e7e5      	b.n	90015ec0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ec>
90015ef4:	2b03      	cmp	r3, #3
90015ef6:	f040 8133 	bne.w	90016160 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78c>
90015efa:	4b27      	ldr	r3, [pc, #156]	@ (90015f98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90015efc:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
90015f00:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
90015f04:	781b      	ldrb	r3, [r3, #0]
90015f06:	2b01      	cmp	r3, #1
90015f08:	f000 8095 	beq.w	90016036 <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
90015f0c:	8832      	ldrh	r2, [r6, #0]
90015f0e:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
90015f12:	3201      	adds	r2, #1
90015f14:	b292      	uxth	r2, r2
90015f16:	2900      	cmp	r1, #0
90015f18:	f43f aeec 	beq.w	90015cf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90015f1c:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
90015f20:	4694      	mov	ip, r2
90015f22:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
90015f26:	f04f 0800 	mov.w	r8, #0
90015f2a:	441d      	add	r5, r3
90015f2c:	b22d      	sxth	r5, r5
90015f2e:	fa1f f38c 	uxth.w	r3, ip
90015f32:	ea4f 07c8 	mov.w	r7, r8, lsl #3
90015f36:	4299      	cmp	r1, r3
90015f38:	f240 80bc 	bls.w	900160b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e0>
90015f3c:	4427      	add	r7, r4
90015f3e:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90015f42:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
90015f46:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
90015f4a:	4283      	cmp	r3, r0
90015f4c:	f340 809e 	ble.w	9001608c <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b8>
90015f50:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
90015f54:	46e0      	mov	r8, ip
90015f56:	4405      	add	r5, r0
90015f58:	b22d      	sxth	r5, r5
90015f5a:	429d      	cmp	r5, r3
90015f5c:	bfa8      	it	ge
90015f5e:	461d      	movge	r5, r3
90015f60:	f10c 0c01 	add.w	ip, ip, #1
90015f64:	e7e3      	b.n	90015f2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x55a>
90015f66:	d10a      	bne.n	90015f7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5aa>
90015f68:	4562      	cmp	r2, ip
90015f6a:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
90015f6e:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
90015f72:	bfb8      	it	lt
90015f74:	4662      	movlt	r2, ip
90015f76:	4288      	cmp	r0, r1
90015f78:	bfb8      	it	lt
90015f7a:	4698      	movlt	r8, r3
90015f7c:	e084      	b.n	90016088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
90015f7e:	428a      	cmp	r2, r1
90015f80:	bfb8      	it	lt
90015f82:	460a      	movlt	r2, r1
90015f84:	e080      	b.n	90016088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
90015f86:	bf00      	nop
90015f88:	2001aa3c 	.word	0x2001aa3c
90015f8c:	20000142 	.word	0x20000142
90015f90:	2001aa34 	.word	0x2001aa34
90015f94:	2001aa32 	.word	0x2001aa32
90015f98:	2001aa36 	.word	0x2001aa36
90015f9c:	2001aa40 	.word	0x2001aa40
90015fa0:	19e1      	adds	r1, r4, r7
90015fa2:	ab0d      	add	r3, sp, #52	@ 0x34
90015fa4:	f851 0fac 	ldr.w	r0, [r1, #172]!
90015fa8:	6849      	ldr	r1, [r1, #4]
90015faa:	c303      	stmia	r3!, {r0, r1}
90015fac:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
90015fb0:	a80d      	add	r0, sp, #52	@ 0x34
90015fb2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90015fb6:	454b      	cmp	r3, r9
90015fb8:	440b      	add	r3, r1
90015fba:	bfb8      	it	lt
90015fbc:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
90015fc0:	1a9b      	subs	r3, r3, r2
90015fc2:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90015fc6:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
90015fca:	f7fe fec9 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90015fce:	a80d      	add	r0, sp, #52	@ 0x34
90015fd0:	f7fa fb9b 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
90015fd4:	bb78      	cbnz	r0, 90016036 <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
90015fd6:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
90015fda:	4427      	add	r7, r4
90015fdc:	6828      	ldr	r0, [r5, #0]
90015fde:	45cc      	cmp	ip, r9
90015fe0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90015fe4:	f8d0 e000 	ldr.w	lr, [r0]
90015fe8:	bfd8      	it	le
90015fea:	fa1f fc8c 	uxthle.w	ip, ip
90015fee:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90015ff2:	bfc8      	it	gt
90015ff4:	fa1f fc89 	uxthgt.w	ip, r9
90015ff8:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90015ffc:	f8cd c000 	str.w	ip, [sp]
90016000:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
90016004:	47d8      	blx	fp
90016006:	4683      	mov	fp, r0
90016008:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
9001600c:	a80d      	add	r0, sp, #52	@ 0x34
9001600e:	f7fe fe8d 	bl	90014d2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90016012:	6823      	ldr	r3, [r4, #0]
90016014:	4620      	mov	r0, r4
90016016:	a90d      	add	r1, sp, #52	@ 0x34
90016018:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001601a:	4798      	blx	r3
9001601c:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
90016020:	eba0 000b 	sub.w	r0, r0, fp
90016024:	b200      	sxth	r0, r0
90016026:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
9001602a:	b920      	cbnz	r0, 90016036 <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
9001602c:	fa1f f188 	uxth.w	r1, r8
90016030:	4650      	mov	r0, sl
90016032:	f7ff f93d 	bl	900152b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016036:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
9001603a:	f1bb 0f00 	cmp.w	fp, #0
9001603e:	f43f ae59 	beq.w	90015cf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90016042:	8833      	ldrh	r3, [r6, #0]
90016044:	f04f 0800 	mov.w	r8, #0
90016048:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
9001604c:	3301      	adds	r3, #1
9001604e:	b29b      	uxth	r3, r3
90016050:	b299      	uxth	r1, r3
90016052:	ea4f 07c8 	mov.w	r7, r8, lsl #3
90016056:	458b      	cmp	fp, r1
90016058:	d9a2      	bls.n	90015fa0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
9001605a:	4427      	add	r7, r4
9001605c:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90016060:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
90016064:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
90016068:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
9001606c:	4408      	add	r0, r1
9001606e:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
90016072:	4461      	add	r1, ip
90016074:	b200      	sxth	r0, r0
90016076:	b209      	sxth	r1, r1
90016078:	4288      	cmp	r0, r1
9001607a:	f6bf af74 	bge.w	90015f66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x592>
9001607e:	4584      	cmp	ip, r0
90016080:	4662      	mov	r2, ip
90016082:	4698      	mov	r8, r3
90016084:	bfb8      	it	lt
90016086:	4602      	movlt	r2, r0
90016088:	3301      	adds	r3, #1
9001608a:	e7e1      	b.n	90016050 <_ZN8touchgfx11Application15drawCachedAreasEv+0x67c>
9001608c:	d10e      	bne.n	900160ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d8>
9001608e:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
90016092:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
90016096:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
9001609a:	4473      	add	r3, lr
9001609c:	b21b      	sxth	r3, r3
9001609e:	429d      	cmp	r5, r3
900160a0:	bfa8      	it	ge
900160a2:	461d      	movge	r5, r3
900160a4:	4287      	cmp	r7, r0
900160a6:	bfb8      	it	lt
900160a8:	46e0      	movlt	r8, ip
900160aa:	e759      	b.n	90015f60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
900160ac:	4285      	cmp	r5, r0
900160ae:	bfa8      	it	ge
900160b0:	4605      	movge	r5, r0
900160b2:	e755      	b.n	90015f60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
900160b4:	eb0a 0007 	add.w	r0, sl, r7
900160b8:	4427      	add	r7, r4
900160ba:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
900160be:	45cb      	cmp	fp, r9
900160c0:	bfbc      	itt	lt
900160c2:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
900160c6:	445d      	addlt	r5, fp
900160c8:	e9cd 2102 	strd	r2, r1, [sp, #8]
900160cc:	bfb8      	it	lt
900160ce:	b22d      	sxthlt	r5, r5
900160d0:	f7fa fb1b 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
900160d4:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
900160d8:	2800      	cmp	r0, #0
900160da:	f47f af1c 	bne.w	90015f16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x542>
900160de:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
900160e2:	fa1f fb8b 	uxth.w	fp, fp
900160e6:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
900160ea:	1aad      	subs	r5, r5, r2
900160ec:	4829      	ldr	r0, [pc, #164]	@ (90016194 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7c0>)
900160ee:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
900160f2:	454d      	cmp	r5, r9
900160f4:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
900160f8:	6800      	ldr	r0, [r0, #0]
900160fa:	bfa8      	it	ge
900160fc:	464d      	movge	r5, r9
900160fe:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
90016102:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90016106:	b289      	uxth	r1, r1
90016108:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
9001610c:	b2ad      	uxth	r5, r5
9001610e:	f8d0 c000 	ldr.w	ip, [r0]
90016112:	b292      	uxth	r2, r2
90016114:	455d      	cmp	r5, fp
90016116:	bf94      	ite	ls
90016118:	9500      	strls	r5, [sp, #0]
9001611a:	f8cd b000 	strhi.w	fp, [sp]
9001611e:	b29b      	uxth	r3, r3
90016120:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
90016124:	47a8      	blx	r5
90016126:	6823      	ldr	r3, [r4, #0]
90016128:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
9001612c:	a90d      	add	r1, sp, #52	@ 0x34
9001612e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016130:	4620      	mov	r0, r4
90016132:	4798      	blx	r3
90016134:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
90016138:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
9001613c:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
90016140:	1a5b      	subs	r3, r3, r1
90016142:	440a      	add	r2, r1
90016144:	b21b      	sxth	r3, r3
90016146:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
9001614a:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
9001614e:	2b00      	cmp	r3, #0
90016150:	f47f aedc 	bne.w	90015f0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
90016154:	fa1f f188 	uxth.w	r1, r8
90016158:	4650      	mov	r0, sl
9001615a:	f7ff f8a9 	bl	900152b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001615e:	e6d5      	b.n	90015f0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
90016160:	8835      	ldrh	r5, [r6, #0]
90016162:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90016166:	42ab      	cmp	r3, r5
90016168:	f67f adc4 	bls.w	90015cf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
9001616c:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
90016170:	ab0d      	add	r3, sp, #52	@ 0x34
90016172:	f852 0fac 	ldr.w	r0, [r2, #172]!
90016176:	6851      	ldr	r1, [r2, #4]
90016178:	c303      	stmia	r3!, {r0, r1}
9001617a:	a80d      	add	r0, sp, #52	@ 0x34
9001617c:	f7fa fac5 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
90016180:	b920      	cbnz	r0, 9001618c <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b8>
90016182:	6823      	ldr	r3, [r4, #0]
90016184:	a90d      	add	r1, sp, #52	@ 0x34
90016186:	4620      	mov	r0, r4
90016188:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001618a:	4798      	blx	r3
9001618c:	3501      	adds	r5, #1
9001618e:	b2ad      	uxth	r5, r5
90016190:	e7e7      	b.n	90016162 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78e>
90016192:	bf00      	nop
90016194:	2001aa40 	.word	0x2001aa40

90016198 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90016198:	4b03      	ldr	r3, [pc, #12]	@ (900161a8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
9001619a:	2200      	movs	r2, #0
9001619c:	801a      	strh	r2, [r3, #0]
9001619e:	805a      	strh	r2, [r3, #2]
900161a0:	809a      	strh	r2, [r3, #4]
900161a2:	80da      	strh	r2, [r3, #6]
900161a4:	4770      	bx	lr
900161a6:	bf00      	nop
900161a8:	2001aa8c 	.word	0x2001aa8c

900161ac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
900161ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900161b0:	b09d      	sub	sp, #116	@ 0x74
900161b2:	4606      	mov	r6, r0
900161b4:	4614      	mov	r4, r2
900161b6:	468a      	mov	sl, r1
900161b8:	a803      	add	r0, sp, #12
900161ba:	461d      	mov	r5, r3
900161bc:	f001 f924 	bl	90017408 <_ZN8touchgfx12TextProviderC1Ev>
900161c0:	6833      	ldr	r3, [r6, #0]
900161c2:	4630      	mov	r0, r6
900161c4:	f242 0b0b 	movw	fp, #8203	@ 0x200b
900161c8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900161ca:	4798      	blx	r3
900161cc:	6833      	ldr	r3, [r6, #0]
900161ce:	4607      	mov	r7, r0
900161d0:	4630      	mov	r0, r6
900161d2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900161d4:	4798      	blx	r3
900161d6:	462a      	mov	r2, r5
900161d8:	2500      	movs	r5, #0
900161da:	4621      	mov	r1, r4
900161dc:	9000      	str	r0, [sp, #0]
900161de:	463b      	mov	r3, r7
900161e0:	462c      	mov	r4, r5
900161e2:	46a9      	mov	r9, r5
900161e4:	46a8      	mov	r8, r5
900161e6:	a803      	add	r0, sp, #12
900161e8:	f001 f961 	bl	900174ae <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900161ec:	2300      	movs	r3, #0
900161ee:	9302      	str	r3, [sp, #8]
900161f0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900161f4:	429c      	cmp	r4, r3
900161f6:	d002      	beq.n	900161fe <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
900161f8:	455c      	cmp	r4, fp
900161fa:	bf18      	it	ne
900161fc:	4625      	movne	r5, r4
900161fe:	ab02      	add	r3, sp, #8
90016200:	4632      	mov	r2, r6
90016202:	4651      	mov	r1, sl
90016204:	a803      	add	r0, sp, #12
90016206:	f001 fc75 	bl	90017af4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001620a:	4604      	mov	r4, r0
9001620c:	b108      	cbz	r0, 90016212 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
9001620e:	280a      	cmp	r0, #10
90016210:	d10a      	bne.n	90016228 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
90016212:	45c1      	cmp	r9, r8
90016214:	bf38      	it	cc
90016216:	46c1      	movcc	r9, r8
90016218:	f04f 0800 	mov.w	r8, #0
9001621c:	2c00      	cmp	r4, #0
9001621e:	d1e5      	bne.n	900161ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90016220:	4648      	mov	r0, r9
90016222:	b01d      	add	sp, #116	@ 0x74
90016224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016228:	9a02      	ldr	r2, [sp, #8]
9001622a:	2a00      	cmp	r2, #0
9001622c:	d0de      	beq.n	900161ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
9001622e:	7b57      	ldrb	r7, [r2, #13]
90016230:	4629      	mov	r1, r5
90016232:	6833      	ldr	r3, [r6, #0]
90016234:	007f      	lsls	r7, r7, #1
90016236:	8894      	ldrh	r4, [r2, #4]
90016238:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001623a:	f407 7080 	and.w	r0, r7, #256	@ 0x100
9001623e:	7a97      	ldrb	r7, [r2, #10]
90016240:	4307      	orrs	r7, r0
90016242:	4630      	mov	r0, r6
90016244:	4798      	blx	r3
90016246:	4438      	add	r0, r7
90016248:	4480      	add	r8, r0
9001624a:	fa1f f888 	uxth.w	r8, r8
9001624e:	e7e5      	b.n	9001621c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90016250 <_ZNK8touchgfx4Font12getCharWidthEt>:
90016250:	b508      	push	{r3, lr}
90016252:	6803      	ldr	r3, [r0, #0]
90016254:	68db      	ldr	r3, [r3, #12]
90016256:	4798      	blx	r3
90016258:	b128      	cbz	r0, 90016266 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
9001625a:	7b43      	ldrb	r3, [r0, #13]
9001625c:	7a80      	ldrb	r0, [r0, #10]
9001625e:	005b      	lsls	r3, r3, #1
90016260:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90016264:	4318      	orrs	r0, r3
90016266:	bd08      	pop	{r3, pc}

90016268 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90016268:	b40e      	push	{r1, r2, r3}
9001626a:	b5f0      	push	{r4, r5, r6, r7, lr}
9001626c:	b09e      	sub	sp, #120	@ 0x78
9001626e:	4605      	mov	r5, r0
90016270:	ab23      	add	r3, sp, #140	@ 0x8c
90016272:	a805      	add	r0, sp, #20
90016274:	f853 4b04 	ldr.w	r4, [r3], #4
90016278:	9303      	str	r3, [sp, #12]
9001627a:	f001 f8c5 	bl	90017408 <_ZN8touchgfx12TextProviderC1Ev>
9001627e:	682b      	ldr	r3, [r5, #0]
90016280:	4628      	mov	r0, r5
90016282:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90016284:	4798      	blx	r3
90016286:	682b      	ldr	r3, [r5, #0]
90016288:	4606      	mov	r6, r0
9001628a:	4628      	mov	r0, r5
9001628c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001628e:	4798      	blx	r3
90016290:	4633      	mov	r3, r6
90016292:	4621      	mov	r1, r4
90016294:	ae1e      	add	r6, sp, #120	@ 0x78
90016296:	2400      	movs	r4, #0
90016298:	9000      	str	r0, [sp, #0]
9001629a:	9a03      	ldr	r2, [sp, #12]
9001629c:	a805      	add	r0, sp, #20
9001629e:	f001 f906 	bl	900174ae <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900162a2:	f846 4d68 	str.w	r4, [r6, #-104]!
900162a6:	462a      	mov	r2, r5
900162a8:	4633      	mov	r3, r6
900162aa:	4621      	mov	r1, r4
900162ac:	a805      	add	r0, sp, #20
900162ae:	f001 fc21 	bl	90017af4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900162b2:	b300      	cbz	r0, 900162f6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
900162b4:	280a      	cmp	r0, #10
900162b6:	d01a      	beq.n	900162ee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900162b8:	9f04      	ldr	r7, [sp, #16]
900162ba:	b1c7      	cbz	r7, 900162ee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900162bc:	7b78      	ldrb	r0, [r7, #13]
900162be:	7a3b      	ldrb	r3, [r7, #8]
900162c0:	00c1      	lsls	r1, r0, #3
900162c2:	88ea      	ldrh	r2, [r5, #6]
900162c4:	f401 7180 	and.w	r1, r1, #256	@ 0x100
900162c8:	4319      	orrs	r1, r3
900162ca:	0643      	lsls	r3, r0, #25
900162cc:	ea4f 1000 	mov.w	r0, r0, lsl #4
900162d0:	bf48      	it	mi
900162d2:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
900162d6:	f400 7080 	and.w	r0, r0, #256	@ 0x100
900162da:	bf48      	it	mi
900162dc:	b219      	sxthmi	r1, r3
900162de:	79fb      	ldrb	r3, [r7, #7]
900162e0:	4303      	orrs	r3, r0
900162e2:	4413      	add	r3, r2
900162e4:	1a5b      	subs	r3, r3, r1
900162e6:	b21b      	sxth	r3, r3
900162e8:	429c      	cmp	r4, r3
900162ea:	bfb8      	it	lt
900162ec:	461c      	movlt	r4, r3
900162ee:	4633      	mov	r3, r6
900162f0:	462a      	mov	r2, r5
900162f2:	2100      	movs	r1, #0
900162f4:	e7da      	b.n	900162ac <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
900162f6:	b2a0      	uxth	r0, r4
900162f8:	b01e      	add	sp, #120	@ 0x78
900162fa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
900162fe:	b003      	add	sp, #12
90016300:	4770      	bx	lr

90016302 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
90016302:	7a43      	ldrb	r3, [r0, #9]
90016304:	8880      	ldrh	r0, [r0, #4]
90016306:	4418      	add	r0, r3
90016308:	b280      	uxth	r0, r0
9001630a:	4770      	bx	lr

9001630c <_ZNK8touchgfx4Font13getFontHeightEv>:
9001630c:	6803      	ldr	r3, [r0, #0]
9001630e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90016310:	4718      	bx	r3

90016312 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
90016312:	b40e      	push	{r1, r2, r3}
90016314:	b570      	push	{r4, r5, r6, lr}
90016316:	b09d      	sub	sp, #116	@ 0x74
90016318:	4604      	mov	r4, r0
9001631a:	ab21      	add	r3, sp, #132	@ 0x84
9001631c:	a803      	add	r0, sp, #12
9001631e:	f853 5b04 	ldr.w	r5, [r3], #4
90016322:	9302      	str	r3, [sp, #8]
90016324:	f001 f870 	bl	90017408 <_ZN8touchgfx12TextProviderC1Ev>
90016328:	6823      	ldr	r3, [r4, #0]
9001632a:	4620      	mov	r0, r4
9001632c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001632e:	4798      	blx	r3
90016330:	6823      	ldr	r3, [r4, #0]
90016332:	4606      	mov	r6, r0
90016334:	4620      	mov	r0, r4
90016336:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90016338:	2401      	movs	r4, #1
9001633a:	4798      	blx	r3
9001633c:	4633      	mov	r3, r6
9001633e:	9000      	str	r0, [sp, #0]
90016340:	4629      	mov	r1, r5
90016342:	9a02      	ldr	r2, [sp, #8]
90016344:	a803      	add	r0, sp, #12
90016346:	f001 f8b2 	bl	900174ae <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001634a:	a803      	add	r0, sp, #12
9001634c:	f001 fc52 	bl	90017bf4 <_ZN8touchgfx12TextProvider11getNextCharEv>
90016350:	b2a3      	uxth	r3, r4
90016352:	b138      	cbz	r0, 90016364 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
90016354:	280a      	cmp	r0, #10
90016356:	a803      	add	r0, sp, #12
90016358:	bf04      	itt	eq
9001635a:	3301      	addeq	r3, #1
9001635c:	b21c      	sxtheq	r4, r3
9001635e:	f001 fc49 	bl	90017bf4 <_ZN8touchgfx12TextProvider11getNextCharEv>
90016362:	e7f5      	b.n	90016350 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
90016364:	4618      	mov	r0, r3
90016366:	b01d      	add	sp, #116	@ 0x74
90016368:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001636c:	b003      	add	sp, #12
9001636e:	4770      	bx	lr

90016370 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90016370:	b40e      	push	{r1, r2, r3}
90016372:	b5f0      	push	{r4, r5, r6, r7, lr}
90016374:	b09e      	sub	sp, #120	@ 0x78
90016376:	4604      	mov	r4, r0
90016378:	ab23      	add	r3, sp, #140	@ 0x8c
9001637a:	a805      	add	r0, sp, #20
9001637c:	f853 5b04 	ldr.w	r5, [r3], #4
90016380:	9303      	str	r3, [sp, #12]
90016382:	f001 f841 	bl	90017408 <_ZN8touchgfx12TextProviderC1Ev>
90016386:	6823      	ldr	r3, [r4, #0]
90016388:	4620      	mov	r0, r4
9001638a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001638c:	4798      	blx	r3
9001638e:	6823      	ldr	r3, [r4, #0]
90016390:	4606      	mov	r6, r0
90016392:	4620      	mov	r0, r4
90016394:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90016396:	4798      	blx	r3
90016398:	4633      	mov	r3, r6
9001639a:	4629      	mov	r1, r5
9001639c:	9000      	str	r0, [sp, #0]
9001639e:	9a03      	ldr	r2, [sp, #12]
900163a0:	a805      	add	r0, sp, #20
900163a2:	f001 f884 	bl	900174ae <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900163a6:	ad1e      	add	r5, sp, #120	@ 0x78
900163a8:	2100      	movs	r1, #0
900163aa:	f647 76ff 	movw	r6, #32767	@ 0x7fff
900163ae:	4622      	mov	r2, r4
900163b0:	a805      	add	r0, sp, #20
900163b2:	f845 1d68 	str.w	r1, [r5, #-104]!
900163b6:	462b      	mov	r3, r5
900163b8:	f001 fb9c 	bl	90017af4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900163bc:	b1d8      	cbz	r0, 900163f6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
900163be:	280a      	cmp	r0, #10
900163c0:	d012      	beq.n	900163e8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900163c2:	9804      	ldr	r0, [sp, #16]
900163c4:	b180      	cbz	r0, 900163e8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900163c6:	7b47      	ldrb	r7, [r0, #13]
900163c8:	88e2      	ldrh	r2, [r4, #6]
900163ca:	00fb      	lsls	r3, r7, #3
900163cc:	f403 7180 	and.w	r1, r3, #256	@ 0x100
900163d0:	7a03      	ldrb	r3, [r0, #8]
900163d2:	430b      	orrs	r3, r1
900163d4:	0679      	lsls	r1, r7, #25
900163d6:	bf44      	itt	mi
900163d8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900163dc:	b21b      	sxthmi	r3, r3
900163de:	1ad3      	subs	r3, r2, r3
900163e0:	b21b      	sxth	r3, r3
900163e2:	429e      	cmp	r6, r3
900163e4:	bfa8      	it	ge
900163e6:	461e      	movge	r6, r3
900163e8:	462b      	mov	r3, r5
900163ea:	4622      	mov	r2, r4
900163ec:	2100      	movs	r1, #0
900163ee:	a805      	add	r0, sp, #20
900163f0:	f001 fb80 	bl	90017af4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900163f4:	e7e2      	b.n	900163bc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
900163f6:	4630      	mov	r0, r6
900163f8:	b01e      	add	sp, #120	@ 0x78
900163fa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
900163fe:	b003      	add	sp, #12
90016400:	4770      	bx	lr

90016402 <_ZNK8touchgfx8Drawable10invalidateEv>:
90016402:	b513      	push	{r0, r1, r4, lr}
90016404:	6803      	ldr	r3, [r0, #0]
90016406:	2400      	movs	r4, #0
90016408:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001640c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90016410:	f8ad 1004 	strh.w	r1, [sp, #4]
90016414:	4669      	mov	r1, sp
90016416:	691b      	ldr	r3, [r3, #16]
90016418:	9400      	str	r4, [sp, #0]
9001641a:	f8ad 2006 	strh.w	r2, [sp, #6]
9001641e:	4798      	blx	r3
90016420:	b002      	add	sp, #8
90016422:	bd10      	pop	{r4, pc}

90016424 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
90016424:	b538      	push	{r3, r4, r5, lr}
90016426:	680b      	ldr	r3, [r1, #0]
90016428:	460c      	mov	r4, r1
9001642a:	4605      	mov	r5, r0
9001642c:	68db      	ldr	r3, [r3, #12]
9001642e:	4798      	blx	r3
90016430:	6823      	ldr	r3, [r4, #0]
90016432:	4620      	mov	r0, r4
90016434:	4629      	mov	r1, r5
90016436:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016438:	4798      	blx	r3
9001643a:	4628      	mov	r0, r5
9001643c:	bd38      	pop	{r3, r4, r5, pc}

9001643e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
9001643e:	b410      	push	{r4}
90016440:	880a      	ldrh	r2, [r1, #0]
90016442:	8884      	ldrh	r4, [r0, #4]
90016444:	4422      	add	r2, r4
90016446:	800a      	strh	r2, [r1, #0]
90016448:	884a      	ldrh	r2, [r1, #2]
9001644a:	88c4      	ldrh	r4, [r0, #6]
9001644c:	4422      	add	r2, r4
9001644e:	804a      	strh	r2, [r1, #2]
90016450:	6940      	ldr	r0, [r0, #20]
90016452:	b120      	cbz	r0, 9001645e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
90016454:	6803      	ldr	r3, [r0, #0]
90016456:	f85d 4b04 	ldr.w	r4, [sp], #4
9001645a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001645c:	4718      	bx	r3
9001645e:	f85d 4b04 	ldr.w	r4, [sp], #4
90016462:	4770      	bx	lr

90016464 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
90016464:	b570      	push	{r4, r5, r6, lr}
90016466:	8882      	ldrh	r2, [r0, #4]
90016468:	460c      	mov	r4, r1
9001646a:	880b      	ldrh	r3, [r1, #0]
9001646c:	4605      	mov	r5, r0
9001646e:	4413      	add	r3, r2
90016470:	800b      	strh	r3, [r1, #0]
90016472:	884b      	ldrh	r3, [r1, #2]
90016474:	88c2      	ldrh	r2, [r0, #6]
90016476:	4413      	add	r3, r2
90016478:	804b      	strh	r3, [r1, #2]
9001647a:	1d01      	adds	r1, r0, #4
9001647c:	4620      	mov	r0, r4
9001647e:	f7fa f901 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
90016482:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90016486:	2b00      	cmp	r3, #0
90016488:	dd0b      	ble.n	900164a2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001648a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001648e:	2b00      	cmp	r3, #0
90016490:	dd07      	ble.n	900164a2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90016492:	6968      	ldr	r0, [r5, #20]
90016494:	b128      	cbz	r0, 900164a2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90016496:	6803      	ldr	r3, [r0, #0]
90016498:	4621      	mov	r1, r4
9001649a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001649c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900164a0:	4718      	bx	r3
900164a2:	bd70      	pop	{r4, r5, r6, pc}

900164a4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
900164a4:	b570      	push	{r4, r5, r6, lr}
900164a6:	8882      	ldrh	r2, [r0, #4]
900164a8:	460c      	mov	r4, r1
900164aa:	880b      	ldrh	r3, [r1, #0]
900164ac:	4605      	mov	r5, r0
900164ae:	4413      	add	r3, r2
900164b0:	800b      	strh	r3, [r1, #0]
900164b2:	884b      	ldrh	r3, [r1, #2]
900164b4:	88c2      	ldrh	r2, [r0, #6]
900164b6:	4413      	add	r3, r2
900164b8:	804b      	strh	r3, [r1, #2]
900164ba:	1d01      	adds	r1, r0, #4
900164bc:	4620      	mov	r0, r4
900164be:	f7fa f8e1 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
900164c2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900164c6:	2b00      	cmp	r3, #0
900164c8:	dd19      	ble.n	900164fe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900164ca:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900164ce:	2b00      	cmp	r3, #0
900164d0:	dd15      	ble.n	900164fe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900164d2:	6968      	ldr	r0, [r5, #20]
900164d4:	b128      	cbz	r0, 900164e2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
900164d6:	6803      	ldr	r3, [r0, #0]
900164d8:	4621      	mov	r1, r4
900164da:	691b      	ldr	r3, [r3, #16]
900164dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900164e0:	4718      	bx	r3
900164e2:	4b07      	ldr	r3, [pc, #28]	@ (90016500 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
900164e4:	681b      	ldr	r3, [r3, #0]
900164e6:	3304      	adds	r3, #4
900164e8:	429d      	cmp	r5, r3
900164ea:	d108      	bne.n	900164fe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900164ec:	f7fe fdd0 	bl	90015090 <_ZN8touchgfx11Application11getInstanceEv>
900164f0:	6803      	ldr	r3, [r0, #0]
900164f2:	6821      	ldr	r1, [r4, #0]
900164f4:	6862      	ldr	r2, [r4, #4]
900164f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
900164f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900164fc:	4718      	bx	r3
900164fe:	bd70      	pop	{r4, r5, r6, pc}
90016500:	2001aa84 	.word	0x2001aa84

90016504 <_ZN8touchgfx8Drawable12moveRelativeEss>:
90016504:	b570      	push	{r4, r5, r6, lr}
90016506:	4604      	mov	r4, r0
90016508:	4616      	mov	r6, r2
9001650a:	460d      	mov	r5, r1
9001650c:	b901      	cbnz	r1, 90016510 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
9001650e:	b192      	cbz	r2, 90016536 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90016510:	6823      	ldr	r3, [r4, #0]
90016512:	4620      	mov	r0, r4
90016514:	699b      	ldr	r3, [r3, #24]
90016516:	4798      	blx	r3
90016518:	88e2      	ldrh	r2, [r4, #6]
9001651a:	88a1      	ldrh	r1, [r4, #4]
9001651c:	4620      	mov	r0, r4
9001651e:	4432      	add	r2, r6
90016520:	4429      	add	r1, r5
90016522:	b212      	sxth	r2, r2
90016524:	b209      	sxth	r1, r1
90016526:	f7ec fcab 	bl	90002e80 <_ZN8touchgfx8Drawable5setXYEss>
9001652a:	6823      	ldr	r3, [r4, #0]
9001652c:	4620      	mov	r0, r4
9001652e:	699b      	ldr	r3, [r3, #24]
90016530:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016534:	4718      	bx	r3
90016536:	bd70      	pop	{r4, r5, r6, pc}

90016538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90016538:	b510      	push	{r4, lr}
9001653a:	2300      	movs	r3, #0
9001653c:	4604      	mov	r4, r0
9001653e:	4608      	mov	r0, r1
90016540:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
90016544:	8023      	strh	r3, [r4, #0]
90016546:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001654a:	8063      	strh	r3, [r4, #2]
9001654c:	6803      	ldr	r3, [r0, #0]
9001654e:	80a1      	strh	r1, [r4, #4]
90016550:	4621      	mov	r1, r4
90016552:	80e2      	strh	r2, [r4, #6]
90016554:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016556:	4798      	blx	r3
90016558:	4620      	mov	r0, r4
9001655a:	bd10      	pop	{r4, pc}

9001655c <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
9001655c:	4770      	bx	lr

9001655e <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
9001655e:	b510      	push	{r4, lr}
90016560:	4604      	mov	r4, r0
90016562:	211c      	movs	r1, #28
90016564:	f010 ffdc 	bl	90027520 <_ZdlPvj>
90016568:	4620      	mov	r0, r4
9001656a:	bd10      	pop	{r4, pc}

9001656c <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
9001656c:	4a04      	ldr	r2, [pc, #16]	@ (90016580 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
9001656e:	6002      	str	r2, [r0, #0]
90016570:	2200      	movs	r2, #0
90016572:	e9c0 2201 	strd	r2, r2, [r0, #4]
90016576:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001657a:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001657e:	4770      	bx	lr
90016580:	90035b2c 	.word	0x90035b2c

90016584 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
90016584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016588:	4604      	mov	r4, r0
9001658a:	b087      	sub	sp, #28
9001658c:	8b45      	ldrh	r5, [r0, #26]
9001658e:	f8b2 c000 	ldrh.w	ip, [r2]
90016592:	9105      	str	r1, [sp, #20]
90016594:	1c68      	adds	r0, r5, #1
90016596:	68e1      	ldr	r1, [r4, #12]
90016598:	9203      	str	r2, [sp, #12]
9001659a:	b280      	uxth	r0, r0
9001659c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
900165a0:	f01c 0501 	ands.w	r5, ip, #1
900165a4:	f9b3 2000 	ldrsh.w	r2, [r3]
900165a8:	9502      	str	r5, [sp, #8]
900165aa:	d07d      	beq.n	900166a8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
900165ac:	ee07 2a90 	vmov	s15, r2
900165b0:	8360      	strh	r0, [r4, #26]
900165b2:	f04f 0e00 	mov.w	lr, #0
900165b6:	eef8 6ae7 	vcvt.f32.s32	s13, s15
900165ba:	ee06 ea10 	vmov	s12, lr
900165be:	edc1 6a00 	vstr	s13, [r1]
900165c2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900165c6:	8b61      	ldrh	r1, [r4, #26]
900165c8:	ee07 2a10 	vmov	s14, r2
900165cc:	68e2      	ldr	r2, [r4, #12]
900165ce:	1c48      	adds	r0, r1, #1
900165d0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900165d4:	eb02 0281 	add.w	r2, r2, r1, lsl #2
900165d8:	8360      	strh	r0, [r4, #26]
900165da:	ed82 7a00 	vstr	s14, [r2]
900165de:	8b21      	ldrh	r1, [r4, #24]
900165e0:	2501      	movs	r5, #1
900165e2:	68a2      	ldr	r2, [r4, #8]
900165e4:	3304      	adds	r3, #4
900165e6:	1c48      	adds	r0, r1, #1
900165e8:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
900165ec:	9300      	str	r3, [sp, #0]
900165ee:	46aa      	mov	sl, r5
900165f0:	8320      	strh	r0, [r4, #24]
900165f2:	462e      	mov	r6, r5
900165f4:	5455      	strb	r5, [r2, r1]
900165f6:	2200      	movs	r2, #0
900165f8:	ee07 2a90 	vmov	s15, r2
900165fc:	4613      	mov	r3, r2
900165fe:	4611      	mov	r1, r2
90016600:	9201      	str	r2, [sp, #4]
90016602:	f8b4 8018 	ldrh.w	r8, [r4, #24]
90016606:	9805      	ldr	r0, [sp, #20]
90016608:	f108 0701 	add.w	r7, r8, #1
9001660c:	f8d4 b008 	ldr.w	fp, [r4, #8]
90016610:	42a8      	cmp	r0, r5
90016612:	b2bf      	uxth	r7, r7
90016614:	eb0b 0908 	add.w	r9, fp, r8
90016618:	f340 80db 	ble.w	900167d2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
9001661c:	fa4c f906 	asr.w	r9, ip, r6
90016620:	f009 0901 	and.w	r9, r9, #1
90016624:	fa5f f389 	uxtb.w	r3, r9
90016628:	9304      	str	r3, [sp, #16]
9001662a:	9b00      	ldr	r3, [sp, #0]
9001662c:	f9b3 1000 	ldrsh.w	r1, [r3]
90016630:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90016634:	f1b9 0f00 	cmp.w	r9, #0
90016638:	d07d      	beq.n	90016736 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
9001663a:	ee05 1a10 	vmov	s10, r1
9001663e:	8327      	strh	r7, [r4, #24]
90016640:	eef8 4ac5 	vcvt.f32.s32	s9, s10
90016644:	ee05 3a10 	vmov	s10, r3
90016648:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
9001664c:	f1ba 0f00 	cmp.w	sl, #0
90016650:	d050      	beq.n	900166f4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
90016652:	f04f 0002 	mov.w	r0, #2
90016656:	f80b 0008 	strb.w	r0, [fp, r8]
9001665a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001665e:	68e7      	ldr	r7, [r4, #12]
90016660:	f108 0901 	add.w	r9, r8, #1
90016664:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016668:	f8a4 901a 	strh.w	r9, [r4, #26]
9001666c:	edc7 4a00 	vstr	s9, [r7]
90016670:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016674:	68e7      	ldr	r7, [r4, #12]
90016676:	f108 0901 	add.w	r9, r8, #1
9001667a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001667e:	f8a4 901a 	strh.w	r9, [r4, #26]
90016682:	ed87 5a00 	vstr	s10, [r7]
90016686:	3601      	adds	r6, #1
90016688:	2e10      	cmp	r6, #16
9001668a:	d106      	bne.n	9001669a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
9001668c:	9e01      	ldr	r6, [sp, #4]
9001668e:	9803      	ldr	r0, [sp, #12]
90016690:	3601      	adds	r6, #1
90016692:	9601      	str	r6, [sp, #4]
90016694:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
90016698:	2600      	movs	r6, #0
9001669a:	9800      	ldr	r0, [sp, #0]
9001669c:	3501      	adds	r5, #1
9001669e:	f8dd a010 	ldr.w	sl, [sp, #16]
900166a2:	3004      	adds	r0, #4
900166a4:	9000      	str	r0, [sp, #0]
900166a6:	e7ac      	b.n	90016602 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
900166a8:	ee06 2a10 	vmov	s12, r2
900166ac:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
900166b0:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
900166b4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
900166b8:	ee16 5a10 	vmov	r5, s12
900166bc:	442a      	add	r2, r5
900166be:	ee06 2a90 	vmov	s13, r2
900166c2:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
900166c6:	8360      	strh	r0, [r4, #26]
900166c8:	4472      	add	r2, lr
900166ca:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900166ce:	ee07 2a10 	vmov	s14, r2
900166d2:	ee66 6aa7 	vmul.f32	s13, s13, s15
900166d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900166da:	edc1 6a00 	vstr	s13, [r1]
900166de:	8b61      	ldrh	r1, [r4, #26]
900166e0:	ee27 7a27 	vmul.f32	s14, s14, s15
900166e4:	68e2      	ldr	r2, [r4, #12]
900166e6:	1c48      	adds	r0, r1, #1
900166e8:	eb02 0281 	add.w	r2, r2, r1, lsl #2
900166ec:	8360      	strh	r0, [r4, #26]
900166ee:	ed82 7a00 	vstr	s14, [r2]
900166f2:	e774      	b.n	900165de <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
900166f4:	f04f 0005 	mov.w	r0, #5
900166f8:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
900166fc:	f80b 0008 	strb.w	r0, [fp, r8]
90016700:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016704:	68e7      	ldr	r7, [r4, #12]
90016706:	f108 0901 	add.w	r9, r8, #1
9001670a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001670e:	f8a4 901a 	strh.w	r9, [r4, #26]
90016712:	ed87 4a00 	vstr	s8, [r7]
90016716:	ee04 2a10 	vmov	s8, r2
9001671a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001671e:	68e7      	ldr	r7, [r4, #12]
90016720:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
90016724:	f108 0901 	add.w	r9, r8, #1
90016728:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001672c:	f8a4 901a 	strh.w	r9, [r4, #26]
90016730:	ed87 4a00 	vstr	s8, [r7]
90016734:	e791      	b.n	9001665a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
90016736:	f1ba 0f00 	cmp.w	sl, #0
9001673a:	d146      	bne.n	900167ca <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
9001673c:	f04f 0005 	mov.w	r0, #5
90016740:	8327      	strh	r7, [r4, #24]
90016742:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90016746:	f80b 0008 	strb.w	r0, [fp, r8]
9001674a:	ee17 0a90 	vmov	r0, s15
9001674e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016752:	68e7      	ldr	r7, [r4, #12]
90016754:	4408      	add	r0, r1
90016756:	f108 0901 	add.w	r9, r8, #1
9001675a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001675e:	ee07 0a90 	vmov	s15, r0
90016762:	f8a4 901a 	strh.w	r9, [r4, #26]
90016766:	ed87 5a00 	vstr	s10, [r7]
9001676a:	ee05 2a10 	vmov	s10, r2
9001676e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016772:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016776:	68e7      	ldr	r7, [r4, #12]
90016778:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
9001677c:	f108 0901 	add.w	r9, r8, #1
90016780:	441a      	add	r2, r3
90016782:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016786:	ee67 7aa5 	vmul.f32	s15, s15, s11
9001678a:	f8a4 901a 	strh.w	r9, [r4, #26]
9001678e:	ed87 5a00 	vstr	s10, [r7]
90016792:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016796:	68e7      	ldr	r7, [r4, #12]
90016798:	f108 0901 	add.w	r9, r8, #1
9001679c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900167a0:	f8a4 901a 	strh.w	r9, [r4, #26]
900167a4:	edc7 7a00 	vstr	s15, [r7]
900167a8:	ee07 2a90 	vmov	s15, r2
900167ac:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900167b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900167b4:	68e7      	ldr	r7, [r4, #12]
900167b6:	f108 0901 	add.w	r9, r8, #1
900167ba:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900167be:	ee67 7aa5 	vmul.f32	s15, s15, s11
900167c2:	f8a4 901a 	strh.w	r9, [r4, #26]
900167c6:	edc7 7a00 	vstr	s15, [r7]
900167ca:	461a      	mov	r2, r3
900167cc:	ee07 1a90 	vmov	s15, r1
900167d0:	e759      	b.n	90016686 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
900167d2:	f1ba 0f00 	cmp.w	sl, #0
900167d6:	d045      	beq.n	90016864 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
900167d8:	ee05 1a90 	vmov	s11, r1
900167dc:	eef8 5ae5 	vcvt.f32.s32	s11, s11
900167e0:	eef4 5a66 	vcmp.f32	s11, s13
900167e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900167e8:	d108      	bne.n	900167fc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
900167ea:	ee05 3a90 	vmov	s11, r3
900167ee:	eef8 5ae5 	vcvt.f32.s32	s11, s11
900167f2:	eef4 5a47 	vcmp.f32	s11, s14
900167f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900167fa:	d033      	beq.n	90016864 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
900167fc:	9b02      	ldr	r3, [sp, #8]
900167fe:	8327      	strh	r7, [r4, #24]
90016800:	b1b3      	cbz	r3, 90016830 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
90016802:	2302      	movs	r3, #2
90016804:	f889 3000 	strb.w	r3, [r9]
90016808:	8b62      	ldrh	r2, [r4, #26]
9001680a:	68e3      	ldr	r3, [r4, #12]
9001680c:	1c51      	adds	r1, r2, #1
9001680e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90016812:	8361      	strh	r1, [r4, #26]
90016814:	edc3 6a00 	vstr	s13, [r3]
90016818:	8b62      	ldrh	r2, [r4, #26]
9001681a:	68e3      	ldr	r3, [r4, #12]
9001681c:	1c51      	adds	r1, r2, #1
9001681e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90016822:	8361      	strh	r1, [r4, #26]
90016824:	ed83 7a00 	vstr	s14, [r3]
90016828:	9800      	ldr	r0, [sp, #0]
9001682a:	b007      	add	sp, #28
9001682c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016830:	2305      	movs	r3, #5
90016832:	f889 3000 	strb.w	r3, [r9]
90016836:	8b62      	ldrh	r2, [r4, #26]
90016838:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9001683c:	68e3      	ldr	r3, [r4, #12]
9001683e:	ee07 ea90 	vmov	s15, lr
90016842:	1c51      	adds	r1, r2, #1
90016844:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90016848:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001684c:	8361      	strh	r1, [r4, #26]
9001684e:	ed83 6a00 	vstr	s12, [r3]
90016852:	8b62      	ldrh	r2, [r4, #26]
90016854:	68e3      	ldr	r3, [r4, #12]
90016856:	1c51      	adds	r1, r2, #1
90016858:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001685c:	8361      	strh	r1, [r4, #26]
9001685e:	edc3 7a00 	vstr	s15, [r3]
90016862:	e7d1      	b.n	90016808 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
90016864:	ee05 2a90 	vmov	s11, r2
90016868:	2305      	movs	r3, #5
9001686a:	9902      	ldr	r1, [sp, #8]
9001686c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90016870:	8327      	strh	r7, [r4, #24]
90016872:	eef8 5ae5 	vcvt.f32.s32	s11, s11
90016876:	f889 3000 	strb.w	r3, [r9]
9001687a:	b181      	cbz	r1, 9001689e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
9001687c:	8b62      	ldrh	r2, [r4, #26]
9001687e:	68e3      	ldr	r3, [r4, #12]
90016880:	1c51      	adds	r1, r2, #1
90016882:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90016886:	8361      	strh	r1, [r4, #26]
90016888:	ed83 5a00 	vstr	s10, [r3]
9001688c:	8b62      	ldrh	r2, [r4, #26]
9001688e:	68e3      	ldr	r3, [r4, #12]
90016890:	1c51      	adds	r1, r2, #1
90016892:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90016896:	8361      	strh	r1, [r4, #26]
90016898:	edc3 5a00 	vstr	s11, [r3]
9001689c:	e7b4      	b.n	90016808 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
9001689e:	8b65      	ldrh	r5, [r4, #26]
900168a0:	ee17 0a90 	vmov	r0, s15
900168a4:	68e1      	ldr	r1, [r4, #12]
900168a6:	4472      	add	r2, lr
900168a8:	1c6e      	adds	r6, r5, #1
900168aa:	eb01 0185 	add.w	r1, r1, r5, lsl #2
900168ae:	8366      	strh	r6, [r4, #26]
900168b0:	ed81 5a00 	vstr	s10, [r1]
900168b4:	8b65      	ldrh	r5, [r4, #26]
900168b6:	68e1      	ldr	r1, [r4, #12]
900168b8:	1c6e      	adds	r6, r5, #1
900168ba:	eb01 0185 	add.w	r1, r1, r5, lsl #2
900168be:	8366      	strh	r6, [r4, #26]
900168c0:	edc1 5a00 	vstr	s11, [r1]
900168c4:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
900168c8:	8b65      	ldrh	r5, [r4, #26]
900168ca:	68e1      	ldr	r1, [r4, #12]
900168cc:	1c6e      	adds	r6, r5, #1
900168ce:	eb01 0185 	add.w	r1, r1, r5, lsl #2
900168d2:	ee16 5a10 	vmov	r5, s12
900168d6:	8366      	strh	r6, [r4, #26]
900168d8:	4428      	add	r0, r5
900168da:	ee07 0a90 	vmov	s15, r0
900168de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900168e2:	ee67 7aa5 	vmul.f32	s15, s15, s11
900168e6:	edc1 7a00 	vstr	s15, [r1]
900168ea:	ee07 2a90 	vmov	s15, r2
900168ee:	8b61      	ldrh	r1, [r4, #26]
900168f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900168f4:	68e5      	ldr	r5, [r4, #12]
900168f6:	1c4e      	adds	r6, r1, #1
900168f8:	eb05 0181 	add.w	r1, r5, r1, lsl #2
900168fc:	ee67 7aa5 	vmul.f32	s15, s15, s11
90016900:	8366      	strh	r6, [r4, #26]
90016902:	edc1 7a00 	vstr	s15, [r1]
90016906:	8b22      	ldrh	r2, [r4, #24]
90016908:	68a1      	ldr	r1, [r4, #8]
9001690a:	1c55      	adds	r5, r2, #1
9001690c:	8325      	strh	r5, [r4, #24]
9001690e:	548b      	strb	r3, [r1, r2]
90016910:	e791      	b.n	90016836 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

90016914 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
90016914:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90016918:	4604      	mov	r4, r0
9001691a:	b08e      	sub	sp, #56	@ 0x38
9001691c:	4699      	mov	r9, r3
9001691e:	4688      	mov	r8, r1
90016920:	4615      	mov	r5, r2
90016922:	9e16      	ldr	r6, [sp, #88]	@ 0x58
90016924:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
90016928:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
9001692a:	f7ea ffc9 	bl	900018c0 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
9001692e:	6060      	str	r0, [r4, #4]
90016930:	f1b9 0f00 	cmp.w	r9, #0
90016934:	f000 80e8 	beq.w	90016b08 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90016938:	2800      	cmp	r0, #0
9001693a:	f000 80e5 	beq.w	90016b08 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
9001693e:	a805      	add	r0, sp, #20
90016940:	f000 f8f9 	bl	90016b36 <_ZN8touchgfx9Matrix3x3C1Ev>
90016944:	6833      	ldr	r3, [r6, #0]
90016946:	4630      	mov	r0, r6
90016948:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
9001694a:	4798      	blx	r3
9001694c:	a805      	add	r0, sp, #20
9001694e:	eef0 0a40 	vmov.f32	s1, s0
90016952:	f000 f8f4 	bl	90016b3e <_ZN8touchgfx9Matrix3x35scaleEff>
90016956:	6860      	ldr	r0, [r4, #4]
90016958:	f1ba 0f03 	cmp.w	sl, #3
9001695c:	d83b      	bhi.n	900169d6 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
9001695e:	e8df f00a 	tbb	[pc, sl]
90016962:	1002      	.short	0x1002
90016964:	9f71      	.short	0x9f71
90016966:	6803      	ldr	r3, [r0, #0]
90016968:	462a      	mov	r2, r5
9001696a:	4641      	mov	r1, r8
9001696c:	689b      	ldr	r3, [r3, #8]
9001696e:	4798      	blx	r3
90016970:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90016974:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90016978:	ee07 7a90 	vmov	s15, r7
9001697c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
90016980:	e026      	b.n	900169d0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
90016982:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
90016986:	f8b8 3004 	ldrh.w	r3, [r8, #4]
9001698a:	8869      	ldrh	r1, [r5, #2]
9001698c:	1a9b      	subs	r3, r3, r2
9001698e:	f8ad 2010 	strh.w	r2, [sp, #16]
90016992:	aa03      	add	r2, sp, #12
90016994:	1a5b      	subs	r3, r3, r1
90016996:	4641      	mov	r1, r8
90016998:	f8ad 300c 	strh.w	r3, [sp, #12]
9001699c:	882b      	ldrh	r3, [r5, #0]
9001699e:	f8ad 300e 	strh.w	r3, [sp, #14]
900169a2:	88ab      	ldrh	r3, [r5, #4]
900169a4:	f8ad 3012 	strh.w	r3, [sp, #18]
900169a8:	6803      	ldr	r3, [r0, #0]
900169aa:	689b      	ldr	r3, [r3, #8]
900169ac:	4798      	blx	r3
900169ae:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 90016b10 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
900169b2:	a805      	add	r0, sp, #20
900169b4:	f000 f8e8 	bl	90016b88 <_ZN8touchgfx9Matrix3x36rotateEf>
900169b8:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
900169bc:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
900169be:	ee07 7a90 	vmov	s15, r7
900169c2:	1a9b      	subs	r3, r3, r2
900169c4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
900169c8:	ee00 3a10 	vmov	s0, r3
900169cc:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
900169d0:	a805      	add	r0, sp, #20
900169d2:	f000 f927 	bl	90016c24 <_ZN8touchgfx9Matrix3x39translateEff>
900169d6:	6860      	ldr	r0, [r4, #4]
900169d8:	a905      	add	r1, sp, #20
900169da:	2500      	movs	r5, #0
900169dc:	f109 0602 	add.w	r6, r9, #2
900169e0:	6803      	ldr	r3, [r0, #0]
900169e2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900169e4:	4798      	blx	r3
900169e6:	6860      	ldr	r0, [r4, #4]
900169e8:	9917      	ldr	r1, [sp, #92]	@ 0x5c
900169ea:	6803      	ldr	r3, [r0, #0]
900169ec:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
900169f0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900169f2:	4798      	blx	r3
900169f4:	6860      	ldr	r0, [r4, #4]
900169f6:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
900169fa:	6803      	ldr	r3, [r0, #0]
900169fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900169fe:	4798      	blx	r3
90016a00:	6860      	ldr	r0, [r4, #4]
90016a02:	2101      	movs	r1, #1
90016a04:	6803      	ldr	r3, [r0, #0]
90016a06:	68db      	ldr	r3, [r3, #12]
90016a08:	4798      	blx	r3
90016a0a:	f8b9 7000 	ldrh.w	r7, [r9]
90016a0e:	f104 0310 	add.w	r3, r4, #16
90016a12:	61a5      	str	r5, [r4, #24]
90016a14:	f104 0208 	add.w	r2, r4, #8
90016a18:	f104 0114 	add.w	r1, r4, #20
90016a1c:	f104 000c 	add.w	r0, r4, #12
90016a20:	f7ec fc40 	bl	900032a4 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
90016a24:	42af      	cmp	r7, r5
90016a26:	dd60      	ble.n	90016aea <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
90016a28:	8831      	ldrh	r1, [r6, #0]
90016a2a:	1cb2      	adds	r2, r6, #2
90016a2c:	4620      	mov	r0, r4
90016a2e:	3501      	adds	r5, #1
90016a30:	f101 030f 	add.w	r3, r1, #15
90016a34:	f3c3 1307 	ubfx	r3, r3, #4, #8
90016a38:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90016a3c:	f7ff fda2 	bl	90016584 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
90016a40:	4606      	mov	r6, r0
90016a42:	e7ef      	b.n	90016a24 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
90016a44:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90016a48:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90016a4c:	8829      	ldrh	r1, [r5, #0]
90016a4e:	1a9b      	subs	r3, r3, r2
90016a50:	f8ad 2010 	strh.w	r2, [sp, #16]
90016a54:	aa03      	add	r2, sp, #12
90016a56:	1a5b      	subs	r3, r3, r1
90016a58:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90016a5c:	886d      	ldrh	r5, [r5, #2]
90016a5e:	f8ad 300c 	strh.w	r3, [sp, #12]
90016a62:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90016a66:	f8ad 1012 	strh.w	r1, [sp, #18]
90016a6a:	1a5b      	subs	r3, r3, r1
90016a6c:	4641      	mov	r1, r8
90016a6e:	1b5b      	subs	r3, r3, r5
90016a70:	f8ad 300e 	strh.w	r3, [sp, #14]
90016a74:	6803      	ldr	r3, [r0, #0]
90016a76:	689b      	ldr	r3, [r3, #8]
90016a78:	4798      	blx	r3
90016a7a:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 90016b14 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
90016a7e:	a805      	add	r0, sp, #20
90016a80:	f000 f882 	bl	90016b88 <_ZN8touchgfx9Matrix3x36rotateEf>
90016a84:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90016a88:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90016a8a:	1a9b      	subs	r3, r3, r2
90016a8c:	ee00 3a90 	vmov	s1, r3
90016a90:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90016a94:	1bdb      	subs	r3, r3, r7
90016a96:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90016a9a:	ee00 3a10 	vmov	s0, r3
90016a9e:	e795      	b.n	900169cc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
90016aa0:	886b      	ldrh	r3, [r5, #2]
90016aa2:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90016aa6:	f8ad 300c 	strh.w	r3, [sp, #12]
90016aaa:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90016aae:	8829      	ldrh	r1, [r5, #0]
90016ab0:	1a9b      	subs	r3, r3, r2
90016ab2:	f8ad 2012 	strh.w	r2, [sp, #18]
90016ab6:	aa03      	add	r2, sp, #12
90016ab8:	1a5b      	subs	r3, r3, r1
90016aba:	4641      	mov	r1, r8
90016abc:	f8ad 300e 	strh.w	r3, [sp, #14]
90016ac0:	88eb      	ldrh	r3, [r5, #6]
90016ac2:	f8ad 3010 	strh.w	r3, [sp, #16]
90016ac6:	6803      	ldr	r3, [r0, #0]
90016ac8:	689b      	ldr	r3, [r3, #8]
90016aca:	4798      	blx	r3
90016acc:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 90016b18 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
90016ad0:	a805      	add	r0, sp, #20
90016ad2:	f000 f859 	bl	90016b88 <_ZN8touchgfx9Matrix3x36rotateEf>
90016ad6:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90016ada:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90016ade:	1bdb      	subs	r3, r3, r7
90016ae0:	ee00 3a90 	vmov	s1, r3
90016ae4:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90016ae8:	e748      	b.n	9001697c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
90016aea:	6860      	ldr	r0, [r4, #4]
90016aec:	2100      	movs	r1, #0
90016aee:	8b22      	ldrh	r2, [r4, #24]
90016af0:	6803      	ldr	r3, [r0, #0]
90016af2:	9101      	str	r1, [sp, #4]
90016af4:	8b61      	ldrh	r1, [r4, #26]
90016af6:	9100      	str	r1, [sp, #0]
90016af8:	6a1d      	ldr	r5, [r3, #32]
90016afa:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
90016afe:	47a8      	blx	r5
90016b00:	6860      	ldr	r0, [r4, #4]
90016b02:	6803      	ldr	r3, [r0, #0]
90016b04:	69db      	ldr	r3, [r3, #28]
90016b06:	4798      	blx	r3
90016b08:	b00e      	add	sp, #56	@ 0x38
90016b0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90016b0e:	bf00      	nop
90016b10:	42b40000 	.word	0x42b40000
90016b14:	43340000 	.word	0x43340000
90016b18:	43870000 	.word	0x43870000

90016b1c <_ZN8touchgfx9Matrix3x35resetEv>:
90016b1c:	2300      	movs	r3, #0
90016b1e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
90016b22:	6043      	str	r3, [r0, #4]
90016b24:	6002      	str	r2, [r0, #0]
90016b26:	6083      	str	r3, [r0, #8]
90016b28:	60c3      	str	r3, [r0, #12]
90016b2a:	6102      	str	r2, [r0, #16]
90016b2c:	6143      	str	r3, [r0, #20]
90016b2e:	6183      	str	r3, [r0, #24]
90016b30:	61c3      	str	r3, [r0, #28]
90016b32:	6202      	str	r2, [r0, #32]
90016b34:	4770      	bx	lr

90016b36 <_ZN8touchgfx9Matrix3x3C1Ev>:
90016b36:	b508      	push	{r3, lr}
90016b38:	f7ff fff0 	bl	90016b1c <_ZN8touchgfx9Matrix3x35resetEv>
90016b3c:	bd08      	pop	{r3, pc}

90016b3e <_ZN8touchgfx9Matrix3x35scaleEff>:
90016b3e:	edd0 7a00 	vldr	s15, [r0]
90016b42:	ee67 7a80 	vmul.f32	s15, s15, s0
90016b46:	edc0 7a00 	vstr	s15, [r0]
90016b4a:	edd0 7a01 	vldr	s15, [r0, #4]
90016b4e:	ee67 7a80 	vmul.f32	s15, s15, s0
90016b52:	edc0 7a01 	vstr	s15, [r0, #4]
90016b56:	edd0 7a02 	vldr	s15, [r0, #8]
90016b5a:	ee27 0a80 	vmul.f32	s0, s15, s0
90016b5e:	edd0 7a03 	vldr	s15, [r0, #12]
90016b62:	ee67 7aa0 	vmul.f32	s15, s15, s1
90016b66:	ed80 0a02 	vstr	s0, [r0, #8]
90016b6a:	edc0 7a03 	vstr	s15, [r0, #12]
90016b6e:	edd0 7a04 	vldr	s15, [r0, #16]
90016b72:	ee67 7aa0 	vmul.f32	s15, s15, s1
90016b76:	edc0 7a04 	vstr	s15, [r0, #16]
90016b7a:	edd0 7a05 	vldr	s15, [r0, #20]
90016b7e:	ee67 0aa0 	vmul.f32	s1, s15, s1
90016b82:	edc0 0a05 	vstr	s1, [r0, #20]
90016b86:	4770      	bx	lr

90016b88 <_ZN8touchgfx9Matrix3x36rotateEf>:
90016b88:	eddf 7a24 	vldr	s15, [pc, #144]	@ 90016c1c <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
90016b8c:	ee20 0a27 	vmul.f32	s0, s0, s15
90016b90:	eddf 7a23 	vldr	s15, [pc, #140]	@ 90016c20 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
90016b94:	b510      	push	{r4, lr}
90016b96:	ed2d 8b02 	vpush	{d8}
90016b9a:	eec0 8a27 	vdiv.f32	s17, s0, s15
90016b9e:	4604      	mov	r4, r0
90016ba0:	eeb0 0a68 	vmov.f32	s0, s17
90016ba4:	f010 fd04 	bl	900275b0 <cosf>
90016ba8:	eeb0 8a40 	vmov.f32	s16, s0
90016bac:	eeb0 0a68 	vmov.f32	s0, s17
90016bb0:	f010 fd42 	bl	90027638 <sinf>
90016bb4:	edd4 6a03 	vldr	s13, [r4, #12]
90016bb8:	edd4 4a00 	vldr	s9, [r4]
90016bbc:	ee60 7a66 	vnmul.f32	s15, s0, s13
90016bc0:	ed94 7a04 	vldr	s14, [r4, #16]
90016bc4:	ed94 5a01 	vldr	s10, [r4, #4]
90016bc8:	ee66 6a88 	vmul.f32	s13, s13, s16
90016bcc:	edd4 5a02 	vldr	s11, [r4, #8]
90016bd0:	eee8 7a24 	vfma.f32	s15, s16, s9
90016bd4:	eee0 6a24 	vfma.f32	s13, s0, s9
90016bd8:	edc4 7a00 	vstr	s15, [r4]
90016bdc:	ee60 7a47 	vnmul.f32	s15, s0, s14
90016be0:	ee27 7a08 	vmul.f32	s14, s14, s16
90016be4:	edc4 6a03 	vstr	s13, [r4, #12]
90016be8:	eee8 7a05 	vfma.f32	s15, s16, s10
90016bec:	eea0 7a05 	vfma.f32	s14, s0, s10
90016bf0:	edc4 7a01 	vstr	s15, [r4, #4]
90016bf4:	edd4 7a05 	vldr	s15, [r4, #20]
90016bf8:	ed84 7a04 	vstr	s14, [r4, #16]
90016bfc:	ee20 6a67 	vnmul.f32	s12, s0, s15
90016c00:	ee67 7a88 	vmul.f32	s15, s15, s16
90016c04:	eea8 6a25 	vfma.f32	s12, s16, s11
90016c08:	eee0 7a25 	vfma.f32	s15, s0, s11
90016c0c:	ecbd 8b02 	vpop	{d8}
90016c10:	ed84 6a02 	vstr	s12, [r4, #8]
90016c14:	edc4 7a05 	vstr	s15, [r4, #20]
90016c18:	bd10      	pop	{r4, pc}
90016c1a:	bf00      	nop
90016c1c:	40490fdb 	.word	0x40490fdb
90016c20:	43340000 	.word	0x43340000

90016c24 <_ZN8touchgfx9Matrix3x39translateEff>:
90016c24:	ed90 6a06 	vldr	s12, [r0, #24]
90016c28:	edd0 7a00 	vldr	s15, [r0]
90016c2c:	edd0 6a07 	vldr	s13, [r0, #28]
90016c30:	eee6 7a00 	vfma.f32	s15, s12, s0
90016c34:	ed90 7a08 	vldr	s14, [r0, #32]
90016c38:	edc0 7a00 	vstr	s15, [r0]
90016c3c:	edd0 7a01 	vldr	s15, [r0, #4]
90016c40:	eee6 7a80 	vfma.f32	s15, s13, s0
90016c44:	edc0 7a01 	vstr	s15, [r0, #4]
90016c48:	edd0 7a02 	vldr	s15, [r0, #8]
90016c4c:	eee7 7a00 	vfma.f32	s15, s14, s0
90016c50:	edc0 7a02 	vstr	s15, [r0, #8]
90016c54:	edd0 7a03 	vldr	s15, [r0, #12]
90016c58:	eee6 7a20 	vfma.f32	s15, s12, s1
90016c5c:	edc0 7a03 	vstr	s15, [r0, #12]
90016c60:	edd0 7a04 	vldr	s15, [r0, #16]
90016c64:	eee6 7aa0 	vfma.f32	s15, s13, s1
90016c68:	edc0 7a04 	vstr	s15, [r0, #16]
90016c6c:	edd0 7a05 	vldr	s15, [r0, #20]
90016c70:	eee7 7a20 	vfma.f32	s15, s14, s1
90016c74:	edc0 7a05 	vstr	s15, [r0, #20]
90016c78:	4770      	bx	lr

90016c7a <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
90016c7a:	edd0 6a01 	vldr	s13, [r0, #4]
90016c7e:	b084      	sub	sp, #16
90016c80:	edd0 7a04 	vldr	s15, [r0, #16]
90016c84:	ed90 7a03 	vldr	s14, [r0, #12]
90016c88:	ee60 7aa7 	vmul.f32	s15, s1, s15
90016c8c:	ee60 0aa6 	vmul.f32	s1, s1, s13
90016c90:	edd0 6a00 	vldr	s13, [r0]
90016c94:	eee7 7a00 	vfma.f32	s15, s14, s0
90016c98:	ed90 7a05 	vldr	s14, [r0, #20]
90016c9c:	eee6 0a80 	vfma.f32	s1, s13, s0
90016ca0:	ed90 0a02 	vldr	s0, [r0, #8]
90016ca4:	ee30 0a80 	vadd.f32	s0, s1, s0
90016ca8:	ee77 0a87 	vadd.f32	s1, s15, s14
90016cac:	b004      	add	sp, #16
90016cae:	4770      	bx	lr

90016cb0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90016cb0:	b530      	push	{r4, r5, lr}
90016cb2:	8083      	strh	r3, [r0, #4]
90016cb4:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90016cb8:	f89d 5018 	ldrb.w	r5, [sp, #24]
90016cbc:	80c3      	strh	r3, [r0, #6]
90016cbe:	f89d 3010 	ldrb.w	r3, [sp, #16]
90016cc2:	6141      	str	r1, [r0, #20]
90016cc4:	7203      	strb	r3, [r0, #8]
90016cc6:	f89d 3014 	ldrb.w	r3, [sp, #20]
90016cca:	8302      	strh	r2, [r0, #24]
90016ccc:	7243      	strb	r3, [r0, #9]
90016cce:	7a83      	ldrb	r3, [r0, #10]
90016cd0:	f365 0306 	bfi	r3, r5, #0, #7
90016cd4:	f89d 501c 	ldrb.w	r5, [sp, #28]
90016cd8:	f365 13c7 	bfi	r3, r5, #7, #1
90016cdc:	7283      	strb	r3, [r0, #10]
90016cde:	f89d 3020 	ldrb.w	r3, [sp, #32]
90016ce2:	72c3      	strb	r3, [r0, #11]
90016ce4:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
90016ce8:	7303      	strb	r3, [r0, #12]
90016cea:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90016cee:	81c3      	strh	r3, [r0, #14]
90016cf0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90016cf4:	8203      	strh	r3, [r0, #16]
90016cf6:	4b01      	ldr	r3, [pc, #4]	@ (90016cfc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90016cf8:	6003      	str	r3, [r0, #0]
90016cfa:	bd30      	pop	{r4, r5, pc}
90016cfc:	90035b40 	.word	0x90035b40

90016d00 <_ZNK8touchgfx9ConstFont4findEt>:
90016d00:	b5f0      	push	{r4, r5, r6, r7, lr}
90016d02:	6944      	ldr	r4, [r0, #20]
90016d04:	b3bc      	cbz	r4, 90016d76 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016d06:	88a3      	ldrh	r3, [r4, #4]
90016d08:	8b02      	ldrh	r2, [r0, #24]
90016d0a:	1acb      	subs	r3, r1, r3
90016d0c:	f102 32ff 	add.w	r2, r2, #4294967295
90016d10:	d431      	bmi.n	90016d76 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016d12:	4293      	cmp	r3, r2
90016d14:	dd0c      	ble.n	90016d30 <_ZNK8touchgfx9ConstFont4findEt+0x30>
90016d16:	230e      	movs	r3, #14
90016d18:	fb03 4302 	mla	r3, r3, r2, r4
90016d1c:	889b      	ldrh	r3, [r3, #4]
90016d1e:	1a5b      	subs	r3, r3, r1
90016d20:	1ad3      	subs	r3, r2, r3
90016d22:	429a      	cmp	r2, r3
90016d24:	db27      	blt.n	90016d76 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016d26:	2b00      	cmp	r3, #0
90016d28:	bfbc      	itt	lt
90016d2a:	2302      	movlt	r3, #2
90016d2c:	fb92 f3f3 	sdivlt	r3, r2, r3
90016d30:	2500      	movs	r5, #0
90016d32:	260e      	movs	r6, #14
90016d34:	4295      	cmp	r5, r2
90016d36:	dc1e      	bgt.n	90016d76 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016d38:	fb06 4003 	mla	r0, r6, r3, r4
90016d3c:	8887      	ldrh	r7, [r0, #4]
90016d3e:	42b9      	cmp	r1, r7
90016d40:	d01a      	beq.n	90016d78 <_ZNK8touchgfx9ConstFont4findEt+0x78>
90016d42:	d20d      	bcs.n	90016d60 <_ZNK8touchgfx9ConstFont4findEt+0x60>
90016d44:	1e5a      	subs	r2, r3, #1
90016d46:	4295      	cmp	r5, r2
90016d48:	dc15      	bgt.n	90016d76 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016d4a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90016d4e:	1a5b      	subs	r3, r3, r1
90016d50:	1ad3      	subs	r3, r2, r3
90016d52:	429a      	cmp	r2, r3
90016d54:	db0f      	blt.n	90016d76 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016d56:	429d      	cmp	r5, r3
90016d58:	ddec      	ble.n	90016d34 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90016d5a:	1953      	adds	r3, r2, r5
90016d5c:	105b      	asrs	r3, r3, #1
90016d5e:	e7e9      	b.n	90016d34 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90016d60:	1c5d      	adds	r5, r3, #1
90016d62:	42aa      	cmp	r2, r5
90016d64:	db07      	blt.n	90016d76 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016d66:	8a43      	ldrh	r3, [r0, #18]
90016d68:	1acb      	subs	r3, r1, r3
90016d6a:	442b      	add	r3, r5
90016d6c:	429d      	cmp	r5, r3
90016d6e:	dc02      	bgt.n	90016d76 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016d70:	429a      	cmp	r2, r3
90016d72:	dadf      	bge.n	90016d34 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90016d74:	e7f1      	b.n	90016d5a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90016d76:	2000      	movs	r0, #0
90016d78:	bdf0      	pop	{r4, r5, r6, r7, pc}

90016d7a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
90016d7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016d7c:	4604      	mov	r4, r0
90016d7e:	4617      	mov	r7, r2
90016d80:	461e      	mov	r6, r3
90016d82:	b911      	cbnz	r1, 90016d8a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90016d84:	2500      	movs	r5, #0
90016d86:	4628      	mov	r0, r5
90016d88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016d8a:	290a      	cmp	r1, #10
90016d8c:	d0fa      	beq.n	90016d84 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016d8e:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90016d92:	4291      	cmp	r1, r2
90016d94:	d0f6      	beq.n	90016d84 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016d96:	f242 020b 	movw	r2, #8203	@ 0x200b
90016d9a:	4291      	cmp	r1, r2
90016d9c:	d0f2      	beq.n	90016d84 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016d9e:	f7ff ffaf 	bl	90016d00 <_ZNK8touchgfx9ConstFont4findEt>
90016da2:	4605      	mov	r5, r0
90016da4:	b950      	cbnz	r0, 90016dbc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
90016da6:	6823      	ldr	r3, [r4, #0]
90016da8:	4620      	mov	r0, r4
90016daa:	691b      	ldr	r3, [r3, #16]
90016dac:	4798      	blx	r3
90016dae:	4601      	mov	r1, r0
90016db0:	4620      	mov	r0, r4
90016db2:	f7ff ffa5 	bl	90016d00 <_ZNK8touchgfx9ConstFont4findEt>
90016db6:	4605      	mov	r5, r0
90016db8:	2800      	cmp	r0, #0
90016dba:	d0e3      	beq.n	90016d84 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016dbc:	6823      	ldr	r3, [r4, #0]
90016dbe:	4629      	mov	r1, r5
90016dc0:	4620      	mov	r0, r4
90016dc2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90016dc4:	4798      	blx	r3
90016dc6:	6038      	str	r0, [r7, #0]
90016dc8:	6823      	ldr	r3, [r4, #0]
90016dca:	4620      	mov	r0, r4
90016dcc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90016dce:	4798      	blx	r3
90016dd0:	7030      	strb	r0, [r6, #0]
90016dd2:	e7d8      	b.n	90016d86 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90016dd4 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90016dd4:	2000      	movs	r0, #0
90016dd6:	4770      	bx	lr

90016dd8 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90016dd8:	2001      	movs	r0, #1
90016dda:	4770      	bx	lr

90016ddc <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
90016ddc:	2002      	movs	r0, #2
90016dde:	4770      	bx	lr

90016de0 <_ZN8touchgfx6ScreenD1Ev>:
90016de0:	4770      	bx	lr

90016de2 <_ZN8touchgfx12GestureEventD1Ev>:
90016de2:	4770      	bx	lr

90016de4 <_ZN8touchgfx9DragEventD1Ev>:
90016de4:	4770      	bx	lr

90016de6 <_ZN8touchgfx10ClickEventD1Ev>:
90016de6:	4770      	bx	lr

90016de8 <_ZN8touchgfx10ClickEventD0Ev>:
90016de8:	b510      	push	{r4, lr}
90016dea:	4604      	mov	r4, r0
90016dec:	210c      	movs	r1, #12
90016dee:	f010 fb97 	bl	90027520 <_ZdlPvj>
90016df2:	4620      	mov	r0, r4
90016df4:	bd10      	pop	{r4, pc}

90016df6 <_ZN8touchgfx9DragEventD0Ev>:
90016df6:	b510      	push	{r4, lr}
90016df8:	4604      	mov	r4, r0
90016dfa:	2110      	movs	r1, #16
90016dfc:	f010 fb90 	bl	90027520 <_ZdlPvj>
90016e00:	4620      	mov	r0, r4
90016e02:	bd10      	pop	{r4, pc}

90016e04 <_ZN8touchgfx12GestureEventD0Ev>:
90016e04:	b510      	push	{r4, lr}
90016e06:	4604      	mov	r4, r0
90016e08:	210c      	movs	r1, #12
90016e0a:	f010 fb89 	bl	90027520 <_ZdlPvj>
90016e0e:	4620      	mov	r0, r4
90016e10:	bd10      	pop	{r4, pc}

90016e12 <_ZN8touchgfx6ScreenD0Ev>:
90016e12:	b510      	push	{r4, lr}
90016e14:	4604      	mov	r4, r0
90016e16:	213c      	movs	r1, #60	@ 0x3c
90016e18:	f010 fb82 	bl	90027520 <_ZdlPvj>
90016e1c:	4620      	mov	r0, r4
90016e1e:	bd10      	pop	{r4, pc}

90016e20 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90016e20:	b530      	push	{r4, r5, lr}
90016e22:	460d      	mov	r5, r1
90016e24:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90016e26:	b087      	sub	sp, #28
90016e28:	4604      	mov	r4, r0
90016e2a:	b301      	cbz	r1, 90016e6e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
90016e2c:	a801      	add	r0, sp, #4
90016e2e:	f7ff fb83 	bl	90016538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016e32:	892a      	ldrh	r2, [r5, #8]
90016e34:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90016e38:	7928      	ldrb	r0, [r5, #4]
90016e3a:	1ad2      	subs	r2, r2, r3
90016e3c:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90016e3e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90016e42:	441a      	add	r2, r3
90016e44:	896b      	ldrh	r3, [r5, #10]
90016e46:	f8bd 5006 	ldrh.w	r5, [sp, #6]
90016e4a:	f88d 0010 	strb.w	r0, [sp, #16]
90016e4e:	1b5b      	subs	r3, r3, r5
90016e50:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
90016e52:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90016e54:	442b      	add	r3, r5
90016e56:	4d07      	ldr	r5, [pc, #28]	@ (90016e74 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
90016e58:	f8ad 1012 	strh.w	r1, [sp, #18]
90016e5c:	a903      	add	r1, sp, #12
90016e5e:	9503      	str	r5, [sp, #12]
90016e60:	f8ad 2014 	strh.w	r2, [sp, #20]
90016e64:	f8ad 3016 	strh.w	r3, [sp, #22]
90016e68:	6803      	ldr	r3, [r0, #0]
90016e6a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016e6c:	4798      	blx	r3
90016e6e:	b007      	add	sp, #28
90016e70:	bd30      	pop	{r4, r5, pc}
90016e72:	bf00      	nop
90016e74:	90035bd0 	.word	0x90035bd0

90016e78 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90016e78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016e7c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90016e7e:	b08a      	sub	sp, #40	@ 0x28
90016e80:	4604      	mov	r4, r0
90016e82:	460d      	mov	r5, r1
90016e84:	b113      	cbz	r3, 90016e8c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
90016e86:	790b      	ldrb	r3, [r1, #4]
90016e88:	2b00      	cmp	r3, #0
90016e8a:	d044      	beq.n	90016f16 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90016e8c:	f104 0804 	add.w	r8, r4, #4
90016e90:	a803      	add	r0, sp, #12
90016e92:	4641      	mov	r1, r8
90016e94:	f7ff fb50 	bl	90016538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016e98:	792b      	ldrb	r3, [r5, #4]
90016e9a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90016e9e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90016ea2:	b983      	cbnz	r3, 90016ec6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90016ea4:	f104 0336 	add.w	r3, r4, #54	@ 0x36
90016ea8:	892a      	ldrh	r2, [r5, #8]
90016eaa:	88e9      	ldrh	r1, [r5, #6]
90016eac:	4640      	mov	r0, r8
90016eae:	1b92      	subs	r2, r2, r6
90016eb0:	9301      	str	r3, [sp, #4]
90016eb2:	1bc9      	subs	r1, r1, r7
90016eb4:	f104 0334 	add.w	r3, r4, #52	@ 0x34
90016eb8:	b212      	sxth	r2, r2
90016eba:	9300      	str	r3, [sp, #0]
90016ebc:	b209      	sxth	r1, r1
90016ebe:	f104 0330 	add.w	r3, r4, #48	@ 0x30
90016ec2:	f7f9 fafd 	bl	900104c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
90016ec6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
90016ec8:	b329      	cbz	r1, 90016f16 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90016eca:	a805      	add	r0, sp, #20
90016ecc:	f7ff fb34 	bl	90016538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016ed0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90016ed4:	792b      	ldrb	r3, [r5, #4]
90016ed6:	a907      	add	r1, sp, #28
90016ed8:	1abf      	subs	r7, r7, r2
90016eda:	88ea      	ldrh	r2, [r5, #6]
90016edc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90016ede:	4417      	add	r7, r2
90016ee0:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
90016ee2:	f88d 3020 	strb.w	r3, [sp, #32]
90016ee6:	4417      	add	r7, r2
90016ee8:	f8bd 2016 	ldrh.w	r2, [sp, #22]
90016eec:	1ab6      	subs	r6, r6, r2
90016eee:	892a      	ldrh	r2, [r5, #8]
90016ef0:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
90016ef4:	4416      	add	r6, r2
90016ef6:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90016ef8:	4416      	add	r6, r2
90016efa:	4a08      	ldr	r2, [pc, #32]	@ (90016f1c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
90016efc:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
90016f00:	2600      	movs	r6, #0
90016f02:	9207      	str	r2, [sp, #28]
90016f04:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
90016f08:	6803      	ldr	r3, [r0, #0]
90016f0a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016f0c:	4798      	blx	r3
90016f0e:	792b      	ldrb	r3, [r5, #4]
90016f10:	b10b      	cbz	r3, 90016f16 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90016f12:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
90016f16:	b00a      	add	sp, #40	@ 0x28
90016f18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016f1c:	90035ba8 	.word	0x90035ba8

90016f20 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
90016f20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016f24:	460c      	mov	r4, r1
90016f26:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90016f28:	b088      	sub	sp, #32
90016f2a:	4605      	mov	r5, r0
90016f2c:	2900      	cmp	r1, #0
90016f2e:	d06d      	beq.n	9001700c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
90016f30:	4668      	mov	r0, sp
90016f32:	f7ff fb01 	bl	90016538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016f36:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
90016f38:	88e3      	ldrh	r3, [r4, #6]
90016f3a:	f9bd 8000 	ldrsh.w	r8, [sp]
90016f3e:	440b      	add	r3, r1
90016f40:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
90016f44:	b21b      	sxth	r3, r3
90016f46:	4543      	cmp	r3, r8
90016f48:	db31      	blt.n	90016fae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016f4a:	f8bd c004 	ldrh.w	ip, [sp, #4]
90016f4e:	44c4      	add	ip, r8
90016f50:	fa0f fc8c 	sxth.w	ip, ip
90016f54:	4563      	cmp	r3, ip
90016f56:	da2a      	bge.n	90016fae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016f58:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
90016f5a:	8926      	ldrh	r6, [r4, #8]
90016f5c:	4416      	add	r6, r2
90016f5e:	b236      	sxth	r6, r6
90016f60:	42be      	cmp	r6, r7
90016f62:	db24      	blt.n	90016fae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016f64:	f8bd 0006 	ldrh.w	r0, [sp, #6]
90016f68:	4438      	add	r0, r7
90016f6a:	b200      	sxth	r0, r0
90016f6c:	4286      	cmp	r6, r0
90016f6e:	da1e      	bge.n	90016fae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016f70:	8963      	ldrh	r3, [r4, #10]
90016f72:	4419      	add	r1, r3
90016f74:	b209      	sxth	r1, r1
90016f76:	4541      	cmp	r1, r8
90016f78:	db08      	blt.n	90016f8c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90016f7a:	4561      	cmp	r1, ip
90016f7c:	da06      	bge.n	90016f8c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90016f7e:	89a3      	ldrh	r3, [r4, #12]
90016f80:	441a      	add	r2, r3
90016f82:	b212      	sxth	r2, r2
90016f84:	42ba      	cmp	r2, r7
90016f86:	db01      	blt.n	90016f8c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90016f88:	4282      	cmp	r2, r0
90016f8a:	db10      	blt.n	90016fae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016f8c:	4b21      	ldr	r3, [pc, #132]	@ (90017014 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
90016f8e:	a904      	add	r1, sp, #16
90016f90:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90016f92:	9304      	str	r3, [sp, #16]
90016f94:	2302      	movs	r3, #2
90016f96:	f88d 3014 	strb.w	r3, [sp, #20]
90016f9a:	2300      	movs	r3, #0
90016f9c:	f8ad 3016 	strh.w	r3, [sp, #22]
90016fa0:	f8ad 3018 	strh.w	r3, [sp, #24]
90016fa4:	f8ad 301a 	strh.w	r3, [sp, #26]
90016fa8:	6803      	ldr	r3, [r0, #0]
90016faa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016fac:	4798      	blx	r3
90016fae:	1d29      	adds	r1, r5, #4
90016fb0:	a802      	add	r0, sp, #8
90016fb2:	f7ff fac1 	bl	90016538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016fb6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90016fba:	88e0      	ldrh	r0, [r4, #6]
90016fbc:	eba3 0808 	sub.w	r8, r3, r8
90016fc0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90016fc4:	7921      	ldrb	r1, [r4, #4]
90016fc6:	fa1f f888 	uxth.w	r8, r8
90016fca:	1bdf      	subs	r7, r3, r7
90016fcc:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
90016fd0:	b2bb      	uxth	r3, r7
90016fd2:	4440      	add	r0, r8
90016fd4:	8922      	ldrh	r2, [r4, #8]
90016fd6:	8967      	ldrh	r7, [r4, #10]
90016fd8:	4460      	add	r0, ip
90016fda:	89a4      	ldrh	r4, [r4, #12]
90016fdc:	441a      	add	r2, r3
90016fde:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
90016fe0:	44b8      	add	r8, r7
90016fe2:	4423      	add	r3, r4
90016fe4:	f8ad 0016 	strh.w	r0, [sp, #22]
90016fe8:	4432      	add	r2, r6
90016fea:	44e0      	add	r8, ip
90016fec:	4433      	add	r3, r6
90016fee:	4c0a      	ldr	r4, [pc, #40]	@ (90017018 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90016ff0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90016ff2:	f88d 1014 	strb.w	r1, [sp, #20]
90016ff6:	a904      	add	r1, sp, #16
90016ff8:	9404      	str	r4, [sp, #16]
90016ffa:	f8ad 2018 	strh.w	r2, [sp, #24]
90016ffe:	f8ad 801a 	strh.w	r8, [sp, #26]
90017002:	f8ad 301c 	strh.w	r3, [sp, #28]
90017006:	6803      	ldr	r3, [r0, #0]
90017008:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001700a:	4798      	blx	r3
9001700c:	b008      	add	sp, #32
9001700e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017012:	bf00      	nop
90017014:	90035ba8 	.word	0x90035ba8
90017018:	90035bbc 	.word	0x90035bbc

9001701c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
9001701c:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001701e:	4604      	mov	r4, r0
90017020:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
90017024:	3201      	adds	r2, #1
90017026:	d112      	bne.n	9001704e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
90017028:	2500      	movs	r5, #0
9001702a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001702e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90017032:	6803      	ldr	r3, [r0, #0]
90017034:	9500      	str	r5, [sp, #0]
90017036:	466d      	mov	r5, sp
90017038:	f8ad 1004 	strh.w	r1, [sp, #4]
9001703c:	f8ad 2006 	strh.w	r2, [sp, #6]
90017040:	4629      	mov	r1, r5
90017042:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90017044:	4798      	blx	r3
90017046:	e895 0003 	ldmia.w	r5, {r0, r1}
9001704a:	e884 0003 	stmia.w	r4, {r0, r1}
9001704e:	4620      	mov	r0, r4
90017050:	b003      	add	sp, #12
90017052:	bd30      	pop	{r4, r5, pc}

90017054 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
90017054:	b513      	push	{r0, r1, r4, lr}
90017056:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
9001705a:	4604      	mov	r4, r0
9001705c:	3301      	adds	r3, #1
9001705e:	d109      	bne.n	90017074 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
90017060:	4601      	mov	r1, r0
90017062:	4668      	mov	r0, sp
90017064:	f7ff fa68 	bl	90016538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017068:	f8bd 3000 	ldrh.w	r3, [sp]
9001706c:	8423      	strh	r3, [r4, #32]
9001706e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90017072:	8463      	strh	r3, [r4, #34]	@ 0x22
90017074:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
90017078:	b002      	add	sp, #8
9001707a:	bd10      	pop	{r4, pc}

9001707c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
9001707c:	b513      	push	{r0, r1, r4, lr}
9001707e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
90017082:	4604      	mov	r4, r0
90017084:	3301      	adds	r3, #1
90017086:	d109      	bne.n	9001709c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
90017088:	4601      	mov	r1, r0
9001708a:	4668      	mov	r0, sp
9001708c:	f7ff fa54 	bl	90016538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017090:	f8bd 3000 	ldrh.w	r3, [sp]
90017094:	8423      	strh	r3, [r4, #32]
90017096:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001709a:	8463      	strh	r3, [r4, #34]	@ 0x22
9001709c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
900170a0:	b002      	add	sp, #8
900170a2:	bd10      	pop	{r4, pc}

900170a4 <_ZN8touchgfx6ScreenC1Ev>:
900170a4:	b570      	push	{r4, r5, r6, lr}
900170a6:	4b17      	ldr	r3, [pc, #92]	@ (90017104 <_ZN8touchgfx6ScreenC1Ev+0x60>)
900170a8:	4605      	mov	r5, r0
900170aa:	4a17      	ldr	r2, [pc, #92]	@ (90017108 <_ZN8touchgfx6ScreenC1Ev+0x64>)
900170ac:	2101      	movs	r1, #1
900170ae:	f845 3b04 	str.w	r3, [r5], #4
900170b2:	2300      	movs	r3, #0
900170b4:	6042      	str	r2, [r0, #4]
900170b6:	4604      	mov	r4, r0
900170b8:	8103      	strh	r3, [r0, #8]
900170ba:	8143      	strh	r3, [r0, #10]
900170bc:	8183      	strh	r3, [r0, #12]
900170be:	81c3      	strh	r3, [r0, #14]
900170c0:	8203      	strh	r3, [r0, #16]
900170c2:	8243      	strh	r3, [r0, #18]
900170c4:	8283      	strh	r3, [r0, #20]
900170c6:	82c3      	strh	r3, [r0, #22]
900170c8:	6203      	str	r3, [r0, #32]
900170ca:	8483      	strh	r3, [r0, #36]	@ 0x24
900170cc:	84c3      	strh	r3, [r0, #38]	@ 0x26
900170ce:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
900170d2:	6343      	str	r3, [r0, #52]	@ 0x34
900170d4:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
900170d8:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
900170dc:	e9c0 3306 	strd	r3, r3, [r0, #24]
900170e0:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
900170e4:	4b09      	ldr	r3, [pc, #36]	@ (9001710c <_ZN8touchgfx6ScreenC1Ev+0x68>)
900170e6:	4628      	mov	r0, r5
900170e8:	f9b3 6000 	ldrsh.w	r6, [r3]
900170ec:	6b93      	ldr	r3, [r2, #56]	@ 0x38
900170ee:	4a08      	ldr	r2, [pc, #32]	@ (90017110 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
900170f0:	f9b2 1000 	ldrsh.w	r1, [r2]
900170f4:	4798      	blx	r3
900170f6:	6863      	ldr	r3, [r4, #4]
900170f8:	4628      	mov	r0, r5
900170fa:	4631      	mov	r1, r6
900170fc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900170fe:	4798      	blx	r3
90017100:	4620      	mov	r0, r4
90017102:	bd70      	pop	{r4, r5, r6, pc}
90017104:	90035be4 	.word	0x90035be4
90017108:	900357fc 	.word	0x900357fc
9001710c:	2001aa34 	.word	0x2001aa34
90017110:	2001aa32 	.word	0x2001aa32

90017114 <_ZN8touchgfx6Screen4drawEv>:
90017114:	4b09      	ldr	r3, [pc, #36]	@ (9001713c <_ZN8touchgfx6Screen4drawEv+0x28>)
90017116:	b507      	push	{r0, r1, r2, lr}
90017118:	f9b3 2000 	ldrsh.w	r2, [r3]
9001711c:	2100      	movs	r1, #0
9001711e:	4b08      	ldr	r3, [pc, #32]	@ (90017140 <_ZN8touchgfx6Screen4drawEv+0x2c>)
90017120:	9100      	str	r1, [sp, #0]
90017122:	4669      	mov	r1, sp
90017124:	f9b3 3000 	ldrsh.w	r3, [r3]
90017128:	f8ad 2004 	strh.w	r2, [sp, #4]
9001712c:	f8ad 3006 	strh.w	r3, [sp, #6]
90017130:	6803      	ldr	r3, [r0, #0]
90017132:	689b      	ldr	r3, [r3, #8]
90017134:	4798      	blx	r3
90017136:	b003      	add	sp, #12
90017138:	f85d fb04 	ldr.w	pc, [sp], #4
9001713c:	2001aa32 	.word	0x2001aa32
90017140:	2001aa34 	.word	0x2001aa34

90017144 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
90017144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017148:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
9001714c:	b089      	sub	sp, #36	@ 0x24
9001714e:	4680      	mov	r8, r0
90017150:	460c      	mov	r4, r1
90017152:	2b00      	cmp	r3, #0
90017154:	4615      	mov	r5, r2
90017156:	dd0e      	ble.n	90017176 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90017158:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
9001715c:	2b00      	cmp	r3, #0
9001715e:	dd0a      	ble.n	90017176 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90017160:	4628      	mov	r0, r5
90017162:	f7ff ff5b 	bl	9001701c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90017166:	4621      	mov	r1, r4
90017168:	f7fd feb3 	bl	90014ed2 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001716c:	69eb      	ldr	r3, [r5, #28]
9001716e:	b928      	cbnz	r0, 9001717c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
90017170:	461d      	mov	r5, r3
90017172:	2b00      	cmp	r3, #0
90017174:	d1f4      	bne.n	90017160 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
90017176:	b009      	add	sp, #36	@ 0x24
90017178:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001717c:	ae04      	add	r6, sp, #16
9001717e:	2b00      	cmp	r3, #0
90017180:	f000 80b5 	beq.w	900172ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90017184:	682b      	ldr	r3, [r5, #0]
90017186:	4629      	mov	r1, r5
90017188:	a802      	add	r0, sp, #8
9001718a:	68db      	ldr	r3, [r3, #12]
9001718c:	4798      	blx	r3
9001718e:	4628      	mov	r0, r5
90017190:	f7ff ff60 	bl	90017054 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90017194:	f8bd 7008 	ldrh.w	r7, [sp, #8]
90017198:	4407      	add	r7, r0
9001719a:	4628      	mov	r0, r5
9001719c:	f7ff ff6e 	bl	9001707c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
900171a0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
900171a4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
900171a8:	b23f      	sxth	r7, r7
900171aa:	4418      	add	r0, r3
900171ac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900171b0:	4621      	mov	r1, r4
900171b2:	f8ad 2014 	strh.w	r2, [sp, #20]
900171b6:	f8ad 0012 	strh.w	r0, [sp, #18]
900171ba:	4630      	mov	r0, r6
900171bc:	f8ad 3016 	strh.w	r3, [sp, #22]
900171c0:	f8ad 7010 	strh.w	r7, [sp, #16]
900171c4:	f7f9 fa5e 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
900171c8:	4628      	mov	r0, r5
900171ca:	f7ff ff27 	bl	9001701c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
900171ce:	ab06      	add	r3, sp, #24
900171d0:	4602      	mov	r2, r0
900171d2:	e896 0003 	ldmia.w	r6, {r0, r1}
900171d6:	e883 0003 	stmia.w	r3, {r0, r1}
900171da:	4611      	mov	r1, r2
900171dc:	4618      	mov	r0, r3
900171de:	f7f9 fa51 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
900171e2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900171e6:	f9b4 1000 	ldrsh.w	r1, [r4]
900171ea:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
900171ee:	4299      	cmp	r1, r3
900171f0:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
900171f4:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
900171f8:	d10b      	bne.n	90017212 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
900171fa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900171fe:	4552      	cmp	r2, sl
90017200:	d107      	bne.n	90017212 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90017202:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90017206:	455a      	cmp	r2, fp
90017208:	d103      	bne.n	90017212 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001720a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001720e:	454a      	cmp	r2, r9
90017210:	d06d      	beq.n	900172ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90017212:	f1bb 0f00 	cmp.w	fp, #0
90017216:	dd65      	ble.n	900172e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90017218:	f1b9 0f00 	cmp.w	r9, #0
9001721c:	dd62      	ble.n	900172e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001721e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90017222:	fa1f f08a 	uxth.w	r0, sl
90017226:	4552      	cmp	r2, sl
90017228:	9000      	str	r0, [sp, #0]
9001722a:	da12      	bge.n	90017252 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
9001722c:	9301      	str	r3, [sp, #4]
9001722e:	9b00      	ldr	r3, [sp, #0]
90017230:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90017234:	f8ad 2012 	strh.w	r2, [sp, #18]
90017238:	1a9a      	subs	r2, r3, r2
9001723a:	f8ad 1010 	strh.w	r1, [sp, #16]
9001723e:	4631      	mov	r1, r6
90017240:	f8ad 0014 	strh.w	r0, [sp, #20]
90017244:	4640      	mov	r0, r8
90017246:	f8ad 2016 	strh.w	r2, [sp, #22]
9001724a:	69ea      	ldr	r2, [r5, #28]
9001724c:	f7ff ff7a 	bl	90017144 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017250:	9b01      	ldr	r3, [sp, #4]
90017252:	f9b4 2000 	ldrsh.w	r2, [r4]
90017256:	b29f      	uxth	r7, r3
90017258:	429a      	cmp	r2, r3
9001725a:	da0d      	bge.n	90017278 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
9001725c:	f8ad 2010 	strh.w	r2, [sp, #16]
90017260:	1aba      	subs	r2, r7, r2
90017262:	f8ad a012 	strh.w	sl, [sp, #18]
90017266:	4631      	mov	r1, r6
90017268:	f8ad 2014 	strh.w	r2, [sp, #20]
9001726c:	4640      	mov	r0, r8
9001726e:	f8ad 9016 	strh.w	r9, [sp, #22]
90017272:	69ea      	ldr	r2, [r5, #28]
90017274:	f7ff ff66 	bl	90017144 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017278:	8822      	ldrh	r2, [r4, #0]
9001727a:	445f      	add	r7, fp
9001727c:	88a3      	ldrh	r3, [r4, #4]
9001727e:	b2bf      	uxth	r7, r7
90017280:	4413      	add	r3, r2
90017282:	b23a      	sxth	r2, r7
90017284:	b29b      	uxth	r3, r3
90017286:	b219      	sxth	r1, r3
90017288:	4291      	cmp	r1, r2
9001728a:	dd0d      	ble.n	900172a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
9001728c:	1bdb      	subs	r3, r3, r7
9001728e:	f8ad 2010 	strh.w	r2, [sp, #16]
90017292:	f8ad a012 	strh.w	sl, [sp, #18]
90017296:	4631      	mov	r1, r6
90017298:	f8ad 3014 	strh.w	r3, [sp, #20]
9001729c:	4640      	mov	r0, r8
9001729e:	f8ad 9016 	strh.w	r9, [sp, #22]
900172a2:	69ea      	ldr	r2, [r5, #28]
900172a4:	f7ff ff4e 	bl	90017144 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900172a8:	88e2      	ldrh	r2, [r4, #6]
900172aa:	8863      	ldrh	r3, [r4, #2]
900172ac:	4413      	add	r3, r2
900172ae:	9a00      	ldr	r2, [sp, #0]
900172b0:	444a      	add	r2, r9
900172b2:	b29b      	uxth	r3, r3
900172b4:	fa1f f982 	uxth.w	r9, r2
900172b8:	b219      	sxth	r1, r3
900172ba:	fa0f f289 	sxth.w	r2, r9
900172be:	428a      	cmp	r2, r1
900172c0:	da15      	bge.n	900172ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
900172c2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900172c6:	eba3 0309 	sub.w	r3, r3, r9
900172ca:	f9b4 0000 	ldrsh.w	r0, [r4]
900172ce:	f8ad 1014 	strh.w	r1, [sp, #20]
900172d2:	4631      	mov	r1, r6
900172d4:	f8ad 0010 	strh.w	r0, [sp, #16]
900172d8:	f8ad 2012 	strh.w	r2, [sp, #18]
900172dc:	f8ad 3016 	strh.w	r3, [sp, #22]
900172e0:	69ea      	ldr	r2, [r5, #28]
900172e2:	e001      	b.n	900172e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
900172e4:	69ea      	ldr	r2, [r5, #28]
900172e6:	4621      	mov	r1, r4
900172e8:	4640      	mov	r0, r8
900172ea:	f7ff ff2b 	bl	90017144 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900172ee:	4628      	mov	r0, r5
900172f0:	f7ff fe94 	bl	9001701c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
900172f4:	6861      	ldr	r1, [r4, #4]
900172f6:	4602      	mov	r2, r0
900172f8:	4633      	mov	r3, r6
900172fa:	6820      	ldr	r0, [r4, #0]
900172fc:	c303      	stmia	r3!, {r0, r1}
900172fe:	4611      	mov	r1, r2
90017300:	4630      	mov	r0, r6
90017302:	f7f9 f9bf 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
90017306:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001730a:	2b00      	cmp	r3, #0
9001730c:	f77f af33 	ble.w	90017176 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90017310:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90017314:	2b00      	cmp	r3, #0
90017316:	f77f af2e 	ble.w	90017176 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001731a:	4628      	mov	r0, r5
9001731c:	f7ff fe9a 	bl	90017054 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90017320:	f8bd 3010 	ldrh.w	r3, [sp, #16]
90017324:	1a18      	subs	r0, r3, r0
90017326:	f8ad 0010 	strh.w	r0, [sp, #16]
9001732a:	4628      	mov	r0, r5
9001732c:	f7ff fea6 	bl	9001707c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90017330:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90017334:	4631      	mov	r1, r6
90017336:	1a18      	subs	r0, r3, r0
90017338:	f8ad 0012 	strh.w	r0, [sp, #18]
9001733c:	4628      	mov	r0, r5
9001733e:	682b      	ldr	r3, [r5, #0]
90017340:	689b      	ldr	r3, [r3, #8]
90017342:	4798      	blx	r3
90017344:	e717      	b.n	90017176 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

90017346 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
90017346:	b570      	push	{r4, r5, r6, lr}
90017348:	1d06      	adds	r6, r0, #4
9001734a:	b086      	sub	sp, #24
9001734c:	460c      	mov	r4, r1
9001734e:	2300      	movs	r3, #0
90017350:	4631      	mov	r1, r6
90017352:	4605      	mov	r5, r0
90017354:	a802      	add	r0, sp, #8
90017356:	9301      	str	r3, [sp, #4]
90017358:	f7ff f8ee 	bl	90016538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001735c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90017360:	8822      	ldrh	r2, [r4, #0]
90017362:	f8bd 100a 	ldrh.w	r1, [sp, #10]
90017366:	1ad2      	subs	r2, r2, r3
90017368:	8863      	ldrh	r3, [r4, #2]
9001736a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001736e:	1a5b      	subs	r3, r3, r1
90017370:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90017374:	f8ad 2010 	strh.w	r2, [sp, #16]
90017378:	aa01      	add	r2, sp, #4
9001737a:	f8ad 0014 	strh.w	r0, [sp, #20]
9001737e:	4630      	mov	r0, r6
90017380:	f8ad 1016 	strh.w	r1, [sp, #22]
90017384:	a904      	add	r1, sp, #16
90017386:	f8ad 3012 	strh.w	r3, [sp, #18]
9001738a:	f7f9 fa53 	bl	90010834 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
9001738e:	9a01      	ldr	r2, [sp, #4]
90017390:	b11a      	cbz	r2, 9001739a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90017392:	4621      	mov	r1, r4
90017394:	4628      	mov	r0, r5
90017396:	f7ff fed5 	bl	90017144 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001739a:	b006      	add	sp, #24
9001739c:	bd70      	pop	{r4, r5, r6, pc}

9001739e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
9001739e:	4602      	mov	r2, r0
900173a0:	b530      	push	{r4, r5, lr}
900173a2:	4604      	mov	r4, r0
900173a4:	b085      	sub	sp, #20
900173a6:	f852 0f08 	ldr.w	r0, [r2, #8]!
900173aa:	460d      	mov	r5, r1
900173ac:	466b      	mov	r3, sp
900173ae:	6851      	ldr	r1, [r2, #4]
900173b0:	c303      	stmia	r3!, {r0, r1}
900173b2:	4629      	mov	r1, r5
900173b4:	4668      	mov	r0, sp
900173b6:	f7f9 f965 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
900173ba:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
900173be:	b12b      	cbz	r3, 900173cc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
900173c0:	4669      	mov	r1, sp
900173c2:	4620      	mov	r0, r4
900173c4:	f7ff ffbf 	bl	90017346 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
900173c8:	b005      	add	sp, #20
900173ca:	bd30      	pop	{r4, r5, pc}
900173cc:	3404      	adds	r4, #4
900173ce:	a802      	add	r0, sp, #8
900173d0:	4621      	mov	r1, r4
900173d2:	f7ff f8b1 	bl	90016538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900173d6:	f8bd 3000 	ldrh.w	r3, [sp]
900173da:	f8bd 2008 	ldrh.w	r2, [sp, #8]
900173de:	4669      	mov	r1, sp
900173e0:	4620      	mov	r0, r4
900173e2:	1a9b      	subs	r3, r3, r2
900173e4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
900173e8:	f8ad 3000 	strh.w	r3, [sp]
900173ec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900173f0:	1a9b      	subs	r3, r3, r2
900173f2:	f8ad 3002 	strh.w	r3, [sp, #2]
900173f6:	f7f9 f9e4 	bl	900107c2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
900173fa:	e7e5      	b.n	900173c8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

900173fc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
900173fc:	460b      	mov	r3, r1
900173fe:	680a      	ldr	r2, [r1, #0]
90017400:	1d01      	adds	r1, r0, #4
90017402:	6992      	ldr	r2, [r2, #24]
90017404:	4618      	mov	r0, r3
90017406:	4710      	bx	r2

90017408 <_ZN8touchgfx12TextProviderC1Ev>:
90017408:	b538      	push	{r3, r4, r5, lr}
9001740a:	2500      	movs	r5, #0
9001740c:	2302      	movs	r3, #2
9001740e:	4604      	mov	r4, r0
90017410:	220e      	movs	r2, #14
90017412:	7403      	strb	r3, [r0, #16]
90017414:	4629      	mov	r1, r5
90017416:	6145      	str	r5, [r0, #20]
90017418:	7605      	strb	r5, [r0, #24]
9001741a:	83c5      	strh	r5, [r0, #30]
9001741c:	8405      	strh	r5, [r0, #32]
9001741e:	86c5      	strh	r5, [r0, #54]	@ 0x36
90017420:	8705      	strh	r5, [r0, #56]	@ 0x38
90017422:	87c5      	strh	r5, [r0, #62]	@ 0x3e
90017424:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
90017428:	e9c0 5500 	strd	r5, r5, [r0]
9001742c:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
90017430:	304c      	adds	r0, #76	@ 0x4c
90017432:	f011 fa18 	bl	90028866 <memset>
90017436:	2301      	movs	r3, #1
90017438:	4620      	mov	r0, r4
9001743a:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
9001743e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90017442:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
90017446:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
9001744a:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
9001744e:	f7eb fed7 	bl	90003200 <_ZN8touchgfx12TextProvider18initializeInternalEv>
90017452:	4620      	mov	r0, r4
90017454:	bd38      	pop	{r3, r4, r5, pc}

90017456 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
90017456:	b530      	push	{r4, r5, lr}
90017458:	2500      	movs	r5, #0
9001745a:	2401      	movs	r4, #1
9001745c:	6843      	ldr	r3, [r0, #4]
9001745e:	b913      	cbnz	r3, 90017466 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90017460:	6803      	ldr	r3, [r0, #0]
90017462:	b313      	cbz	r3, 900174aa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90017464:	6043      	str	r3, [r0, #4]
90017466:	7e03      	ldrb	r3, [r0, #24]
90017468:	b143      	cbz	r3, 9001747c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
9001746a:	6943      	ldr	r3, [r0, #20]
9001746c:	b12b      	cbz	r3, 9001747a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001746e:	881a      	ldrh	r2, [r3, #0]
90017470:	b11a      	cbz	r2, 9001747a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90017472:	1c9a      	adds	r2, r3, #2
90017474:	6142      	str	r2, [r0, #20]
90017476:	8818      	ldrh	r0, [r3, #0]
90017478:	bd30      	pop	{r4, r5, pc}
9001747a:	7605      	strb	r5, [r0, #24]
9001747c:	6843      	ldr	r3, [r0, #4]
9001747e:	8819      	ldrh	r1, [r3, #0]
90017480:	b199      	cbz	r1, 900174aa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90017482:	1c9a      	adds	r2, r3, #2
90017484:	2902      	cmp	r1, #2
90017486:	6042      	str	r2, [r0, #4]
90017488:	d1f5      	bne.n	90017476 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001748a:	7c03      	ldrb	r3, [r0, #16]
9001748c:	2b01      	cmp	r3, #1
9001748e:	d8e5      	bhi.n	9001745c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90017490:	1c5a      	adds	r2, r3, #1
90017492:	3302      	adds	r3, #2
90017494:	7402      	strb	r2, [r0, #16]
90017496:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001749a:	6143      	str	r3, [r0, #20]
9001749c:	2b00      	cmp	r3, #0
9001749e:	d0dd      	beq.n	9001745c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
900174a0:	881b      	ldrh	r3, [r3, #0]
900174a2:	2b00      	cmp	r3, #0
900174a4:	d0da      	beq.n	9001745c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
900174a6:	7604      	strb	r4, [r0, #24]
900174a8:	e7d8      	b.n	9001745c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
900174aa:	2000      	movs	r0, #0
900174ac:	e7e4      	b.n	90017478 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

900174ae <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
900174ae:	6001      	str	r1, [r0, #0]
900174b0:	2100      	movs	r1, #0
900174b2:	b430      	push	{r4, r5}
900174b4:	6041      	str	r1, [r0, #4]
900174b6:	6815      	ldr	r5, [r2, #0]
900174b8:	6085      	str	r5, [r0, #8]
900174ba:	6852      	ldr	r2, [r2, #4]
900174bc:	6443      	str	r3, [r0, #68]	@ 0x44
900174be:	9b02      	ldr	r3, [sp, #8]
900174c0:	60c2      	str	r2, [r0, #12]
900174c2:	7401      	strb	r1, [r0, #16]
900174c4:	6141      	str	r1, [r0, #20]
900174c6:	7601      	strb	r1, [r0, #24]
900174c8:	8701      	strh	r1, [r0, #56]	@ 0x38
900174ca:	8401      	strh	r1, [r0, #32]
900174cc:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
900174d0:	6483      	str	r3, [r0, #72]	@ 0x48
900174d2:	bc30      	pop	{r4, r5}
900174d4:	f7eb be94 	b.w	90003200 <_ZN8touchgfx12TextProvider18initializeInternalEv>

900174d8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
900174d8:	b5f0      	push	{r4, r5, r6, r7, lr}
900174da:	4605      	mov	r5, r0
900174dc:	4608      	mov	r0, r1
900174de:	b1f1      	cbz	r1, 9001751e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
900174e0:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
900174e4:	460b      	mov	r3, r1
900174e6:	f101 0708 	add.w	r7, r1, #8
900174ea:	4622      	mov	r2, r4
900174ec:	6818      	ldr	r0, [r3, #0]
900174ee:	3308      	adds	r3, #8
900174f0:	f853 1c04 	ldr.w	r1, [r3, #-4]
900174f4:	4626      	mov	r6, r4
900174f6:	42bb      	cmp	r3, r7
900174f8:	c603      	stmia	r6!, {r0, r1}
900174fa:	4634      	mov	r4, r6
900174fc:	d1f6      	bne.n	900174ec <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
900174fe:	6818      	ldr	r0, [r3, #0]
90017500:	6030      	str	r0, [r6, #0]
90017502:	4610      	mov	r0, r2
90017504:	889b      	ldrh	r3, [r3, #4]
90017506:	80b3      	strh	r3, [r6, #4]
90017508:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
9001750c:	015b      	lsls	r3, r3, #5
9001750e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90017512:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
90017516:	430b      	orrs	r3, r1
90017518:	425b      	negs	r3, r3
9001751a:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
9001751e:	bdf0      	pop	{r4, r5, r6, r7, pc}

90017520 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
90017520:	b538      	push	{r3, r4, r5, lr}
90017522:	460c      	mov	r4, r1
90017524:	6811      	ldr	r1, [r2, #0]
90017526:	4610      	mov	r0, r2
90017528:	68cd      	ldr	r5, [r1, #12]
9001752a:	4619      	mov	r1, r3
9001752c:	47a8      	blx	r5
9001752e:	2800      	cmp	r0, #0
90017530:	bf08      	it	eq
90017532:	4620      	moveq	r0, r4
90017534:	bd38      	pop	{r3, r4, r5, pc}
	...

90017538 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
90017538:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001753c:	468c      	mov	ip, r1
9001753e:	4605      	mov	r5, r0
90017540:	4614      	mov	r4, r2
90017542:	b942      	cbnz	r2, 90017556 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
90017544:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
90017548:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
9001754c:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
90017550:	4620      	mov	r0, r4
90017552:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017556:	7b50      	ldrb	r0, [r2, #13]
90017558:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
9001755c:	8893      	ldrh	r3, [r2, #4]
9001755e:	0106      	lsls	r6, r0, #4
90017560:	f406 7280 	and.w	r2, r6, #256	@ 0x100
90017564:	79e6      	ldrb	r6, [r4, #7]
90017566:	4316      	orrs	r6, r2
90017568:	185a      	adds	r2, r3, r1
9001756a:	b291      	uxth	r1, r2
9001756c:	b2b7      	uxth	r7, r6
9001756e:	291d      	cmp	r1, #29
90017570:	d87f      	bhi.n	90017672 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90017572:	2201      	movs	r2, #1
90017574:	10f6      	asrs	r6, r6, #3
90017576:	408a      	lsls	r2, r1
90017578:	498b      	ldr	r1, [pc, #556]	@ (900177a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x270>)
9001757a:	420a      	tst	r2, r1
9001757c:	d12e      	bne.n	900175dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
9001757e:	f412 7f60 	tst.w	r2, #896	@ 0x380
90017582:	d076      	beq.n	90017672 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90017584:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
90017588:	4623      	mov	r3, r4
9001758a:	f104 0e08 	add.w	lr, r4, #8
9001758e:	4614      	mov	r4, r2
90017590:	6818      	ldr	r0, [r3, #0]
90017592:	3308      	adds	r3, #8
90017594:	f853 1c04 	ldr.w	r1, [r3, #-4]
90017598:	4694      	mov	ip, r2
9001759a:	4573      	cmp	r3, lr
9001759c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
900175a0:	4662      	mov	r2, ip
900175a2:	d1f5      	bne.n	90017590 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
900175a4:	6818      	ldr	r0, [r3, #0]
900175a6:	f8cc 0000 	str.w	r0, [ip]
900175aa:	889b      	ldrh	r3, [r3, #4]
900175ac:	f8ac 3004 	strh.w	r3, [ip, #4]
900175b0:	b2b3      	uxth	r3, r6
900175b2:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
900175b6:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
900175ba:	1aca      	subs	r2, r1, r3
900175bc:	1bcf      	subs	r7, r1, r7
900175be:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
900175c2:	b292      	uxth	r2, r2
900175c4:	1afb      	subs	r3, r7, r3
900175c6:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
900175ca:	10d2      	asrs	r2, r2, #3
900175cc:	f002 0260 	and.w	r2, r2, #96	@ 0x60
900175d0:	4302      	orrs	r2, r0
900175d2:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
900175d6:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
900175da:	e7b9      	b.n	90017550 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
900175dc:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
900175e0:	4623      	mov	r3, r4
900175e2:	f104 0808 	add.w	r8, r4, #8
900175e6:	4614      	mov	r4, r2
900175e8:	6818      	ldr	r0, [r3, #0]
900175ea:	3308      	adds	r3, #8
900175ec:	f853 1c04 	ldr.w	r1, [r3, #-4]
900175f0:	4696      	mov	lr, r2
900175f2:	4543      	cmp	r3, r8
900175f4:	e8ae 0003 	stmia.w	lr!, {r0, r1}
900175f8:	4672      	mov	r2, lr
900175fa:	d1f5      	bne.n	900175e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
900175fc:	6818      	ldr	r0, [r3, #0]
900175fe:	f8ce 0000 	str.w	r0, [lr]
90017602:	889b      	ldrh	r3, [r3, #4]
90017604:	f8ae 3004 	strh.w	r3, [lr, #4]
90017608:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
9001760a:	eb05 0343 	add.w	r3, r5, r3, lsl #1
9001760e:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
90017610:	f640 6333 	movw	r3, #3635	@ 0xe33
90017614:	4299      	cmp	r1, r3
90017616:	d111      	bne.n	9001763c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
90017618:	f8dc 3000 	ldr.w	r3, [ip]
9001761c:	4660      	mov	r0, ip
9001761e:	68db      	ldr	r3, [r3, #12]
90017620:	4798      	blx	r3
90017622:	7b41      	ldrb	r1, [r0, #13]
90017624:	00cb      	lsls	r3, r1, #3
90017626:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001762a:	7a03      	ldrb	r3, [r0, #8]
9001762c:	4313      	orrs	r3, r2
9001762e:	064a      	lsls	r2, r1, #25
90017630:	bf44      	itt	mi
90017632:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017636:	b21b      	sxthmi	r3, r3
90017638:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
9001763c:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
90017640:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
90017644:	443b      	add	r3, r7
90017646:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001764a:	4433      	add	r3, r6
9001764c:	b29b      	uxth	r3, r3
9001764e:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
90017652:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
90017656:	10db      	asrs	r3, r3, #3
90017658:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001765c:	4313      	orrs	r3, r2
9001765e:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
90017662:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
90017666:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
9001766a:	1a9b      	subs	r3, r3, r2
9001766c:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
90017670:	e76e      	b.n	90017550 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
90017672:	f023 0204 	bic.w	r2, r3, #4
90017676:	f640 611b 	movw	r1, #3611	@ 0xe1b
9001767a:	428a      	cmp	r2, r1
9001767c:	d003      	beq.n	90017686 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
9001767e:	f640 621d 	movw	r2, #3613	@ 0xe1d
90017682:	4293      	cmp	r3, r2
90017684:	d138      	bne.n	900176f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1c0>
90017686:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
9001768a:	4622      	mov	r2, r4
9001768c:	f104 0808 	add.w	r8, r4, #8
90017690:	4634      	mov	r4, r6
90017692:	6810      	ldr	r0, [r2, #0]
90017694:	3208      	adds	r2, #8
90017696:	f852 1c04 	ldr.w	r1, [r2, #-4]
9001769a:	46b6      	mov	lr, r6
9001769c:	4542      	cmp	r2, r8
9001769e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
900176a2:	4676      	mov	r6, lr
900176a4:	d1f5      	bne.n	90017692 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15a>
900176a6:	6810      	ldr	r0, [r2, #0]
900176a8:	3b01      	subs	r3, #1
900176aa:	4621      	mov	r1, r4
900176ac:	f8ce 0000 	str.w	r0, [lr]
900176b0:	b29b      	uxth	r3, r3
900176b2:	8892      	ldrh	r2, [r2, #4]
900176b4:	4628      	mov	r0, r5
900176b6:	f8ae 2004 	strh.w	r2, [lr, #4]
900176ba:	4662      	mov	r2, ip
900176bc:	f7ff ff30 	bl	90017520 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
900176c0:	7b41      	ldrb	r1, [r0, #13]
900176c2:	00cb      	lsls	r3, r1, #3
900176c4:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900176c8:	7a03      	ldrb	r3, [r0, #8]
900176ca:	0648      	lsls	r0, r1, #25
900176cc:	ea43 0302 	orr.w	r3, r3, r2
900176d0:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
900176d4:	bf44      	itt	mi
900176d6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900176da:	b21b      	sxthmi	r3, r3
900176dc:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
900176e0:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
900176e4:	005b      	lsls	r3, r3, #1
900176e6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900176ea:	4313      	orrs	r3, r2
900176ec:	115a      	asrs	r2, r3, #5
900176ee:	eb02 0393 	add.w	r3, r2, r3, lsr #2
900176f2:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
900176f6:	e047      	b.n	90017788 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x250>
900176f8:	00c2      	lsls	r2, r0, #3
900176fa:	f402 7180 	and.w	r1, r2, #256	@ 0x100
900176fe:	7a22      	ldrb	r2, [r4, #8]
90017700:	430a      	orrs	r2, r1
90017702:	0641      	lsls	r1, r0, #25
90017704:	f640 6109 	movw	r1, #3593	@ 0xe09
90017708:	bf44      	itt	mi
9001770a:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
9001770e:	b212      	sxthmi	r2, r2
90017710:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
90017714:	f023 0210 	bic.w	r2, r3, #16
90017718:	428a      	cmp	r2, r1
9001771a:	d003      	beq.n	90017724 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ec>
9001771c:	f640 6213 	movw	r2, #3603	@ 0xe13
90017720:	4293      	cmp	r3, r2
90017722:	d13e      	bne.n	900177a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x26a>
90017724:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
90017728:	f104 0808 	add.w	r8, r4, #8
9001772c:	4696      	mov	lr, r2
9001772e:	6820      	ldr	r0, [r4, #0]
90017730:	3408      	adds	r4, #8
90017732:	f854 1c04 	ldr.w	r1, [r4, #-4]
90017736:	4616      	mov	r6, r2
90017738:	4544      	cmp	r4, r8
9001773a:	c603      	stmia	r6!, {r0, r1}
9001773c:	4632      	mov	r2, r6
9001773e:	d1f6      	bne.n	9001772e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
90017740:	6820      	ldr	r0, [r4, #0]
90017742:	6030      	str	r0, [r6, #0]
90017744:	4628      	mov	r0, r5
90017746:	88a1      	ldrh	r1, [r4, #4]
90017748:	4674      	mov	r4, lr
9001774a:	80b1      	strh	r1, [r6, #4]
9001774c:	4671      	mov	r1, lr
9001774e:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
90017752:	0076      	lsls	r6, r6, #1
90017754:	f406 7280 	and.w	r2, r6, #256	@ 0x100
90017758:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
9001775c:	4316      	orrs	r6, r2
9001775e:	f640 6213 	movw	r2, #3603	@ 0xe13
90017762:	4293      	cmp	r3, r2
90017764:	4662      	mov	r2, ip
90017766:	bf16      	itet	ne
90017768:	f103 33ff 	addne.w	r3, r3, #4294967295
9001776c:	f640 630c 	movweq	r3, #3596	@ 0xe0c
90017770:	b29b      	uxthne	r3, r3
90017772:	f7ff fed5 	bl	90017520 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90017776:	7b43      	ldrb	r3, [r0, #13]
90017778:	7a82      	ldrb	r2, [r0, #10]
9001777a:	005b      	lsls	r3, r3, #1
9001777c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90017780:	4313      	orrs	r3, r2
90017782:	1af6      	subs	r6, r6, r3
90017784:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
90017788:	7b61      	ldrb	r1, [r4, #13]
9001778a:	00cb      	lsls	r3, r1, #3
9001778c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017790:	7a23      	ldrb	r3, [r4, #8]
90017792:	4313      	orrs	r3, r2
90017794:	064a      	lsls	r2, r1, #25
90017796:	bf44      	itt	mi
90017798:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001779c:	b21b      	sxthmi	r3, r3
9001779e:	1bdb      	subs	r3, r3, r7
900177a0:	e719      	b.n	900175d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
900177a2:	2300      	movs	r3, #0
900177a4:	e7a5      	b.n	900176f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
900177a6:	bf00      	nop
900177a8:	3fc00079 	.word	0x3fc00079

900177ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
900177ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900177b0:	4604      	mov	r4, r0
900177b2:	b942      	cbnz	r2, 900177c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
900177b4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
900177b8:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
900177bc:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
900177c0:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
900177c4:	e047      	b.n	90017856 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
900177c6:	7b51      	ldrb	r1, [r2, #13]
900177c8:	8893      	ldrh	r3, [r2, #4]
900177ca:	010d      	lsls	r5, r1, #4
900177cc:	f405 7080 	and.w	r0, r5, #256	@ 0x100
900177d0:	79d5      	ldrb	r5, [r2, #7]
900177d2:	4305      	orrs	r5, r0
900177d4:	2d04      	cmp	r5, #4
900177d6:	bfcc      	ite	gt
900177d8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
900177dc:	f04f 0e01 	movle.w	lr, #1
900177e0:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
900177e4:	f200 80ab 	bhi.w	9001793e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
900177e8:	f240 60e7 	movw	r0, #1767	@ 0x6e7
900177ec:	4283      	cmp	r3, r0
900177ee:	d216      	bcs.n	9001781e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900177f0:	f240 605b 	movw	r0, #1627	@ 0x65b
900177f4:	4283      	cmp	r3, r0
900177f6:	d859      	bhi.n	900178ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
900177f8:	f240 6057 	movw	r0, #1623	@ 0x657
900177fc:	4283      	cmp	r3, r0
900177fe:	d20e      	bcs.n	9001781e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017800:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
90017804:	d24a      	bcs.n	9001789c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
90017806:	f240 604e 	movw	r0, #1614	@ 0x64e
9001780a:	4283      	cmp	r3, r0
9001780c:	d207      	bcs.n	9001781e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001780e:	f240 601a 	movw	r0, #1562	@ 0x61a
90017812:	4283      	cmp	r3, r0
90017814:	d02a      	beq.n	9001786c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017816:	d821      	bhi.n	9001785c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
90017818:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
9001781c:	d35b      	bcc.n	900178d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001781e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
90017822:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90017826:	f040 80d0 	bne.w	900179ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001782a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
9001782e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90017832:	f040 80ca 	bne.w	900179ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90017836:	00cb      	lsls	r3, r1, #3
90017838:	0649      	lsls	r1, r1, #25
9001783a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001783e:	7a13      	ldrb	r3, [r2, #8]
90017840:	ea43 0300 	orr.w	r3, r3, r0
90017844:	bf44      	itt	mi
90017846:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001784a:	b21b      	sxthmi	r3, r3
9001784c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90017850:	1b5d      	subs	r5, r3, r5
90017852:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90017856:	4610      	mov	r0, r2
90017858:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001785c:	f240 604b 	movw	r0, #1611	@ 0x64b
90017860:	4283      	cmp	r3, r0
90017862:	d338      	bcc.n	900178d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90017864:	f240 604c 	movw	r0, #1612	@ 0x64c
90017868:	4283      	cmp	r3, r0
9001786a:	d9d8      	bls.n	9001781e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001786c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
90017870:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
90017874:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90017878:	f040 80f3 	bne.w	90017a62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001787c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90017880:	f040 80ef 	bne.w	90017a62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90017884:	00cb      	lsls	r3, r1, #3
90017886:	064e      	lsls	r6, r1, #25
90017888:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001788c:	7a13      	ldrb	r3, [r2, #8]
9001788e:	ea43 0300 	orr.w	r3, r3, r0
90017892:	bf44      	itt	mi
90017894:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017898:	b21b      	sxthmi	r3, r3
9001789a:	e7d9      	b.n	90017850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
9001789c:	f240 6054 	movw	r0, #1620	@ 0x654
900178a0:	4283      	cmp	r3, r0
900178a2:	d8e3      	bhi.n	9001786c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900178a4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
900178a8:	d9e0      	bls.n	9001786c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900178aa:	e7b8      	b.n	9001781e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900178ac:	f240 6074 	movw	r0, #1652	@ 0x674
900178b0:	4283      	cmp	r3, r0
900178b2:	d0b4      	beq.n	9001781e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900178b4:	d82d      	bhi.n	90017912 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
900178b6:	f240 605e 	movw	r0, #1630	@ 0x65e
900178ba:	4283      	cmp	r3, r0
900178bc:	d804      	bhi.n	900178c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
900178be:	f240 605d 	movw	r0, #1629	@ 0x65d
900178c2:	4283      	cmp	r3, r0
900178c4:	d3d2      	bcc.n	9001786c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900178c6:	e7aa      	b.n	9001781e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900178c8:	f240 605f 	movw	r0, #1631	@ 0x65f
900178cc:	4283      	cmp	r3, r0
900178ce:	d0cd      	beq.n	9001786c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900178d0:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
900178d4:	d0a3      	beq.n	9001781e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900178d6:	00cb      	lsls	r3, r1, #3
900178d8:	0649      	lsls	r1, r1, #25
900178da:	f403 7080 	and.w	r0, r3, #256	@ 0x100
900178de:	7a13      	ldrb	r3, [r2, #8]
900178e0:	ea43 0300 	orr.w	r3, r3, r0
900178e4:	bf44      	itt	mi
900178e6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900178ea:	b21b      	sxthmi	r3, r3
900178ec:	1b5d      	subs	r5, r3, r5
900178ee:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
900178f2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
900178f6:	7b53      	ldrb	r3, [r2, #13]
900178f8:	015b      	lsls	r3, r3, #5
900178fa:	f403 7180 	and.w	r1, r3, #256	@ 0x100
900178fe:	7993      	ldrb	r3, [r2, #6]
90017900:	430b      	orrs	r3, r1
90017902:	2105      	movs	r1, #5
90017904:	005b      	lsls	r3, r3, #1
90017906:	fb93 f3f1 	sdiv	r3, r3, r1
9001790a:	f992 1009 	ldrsb.w	r1, [r2, #9]
9001790e:	440b      	add	r3, r1
90017910:	e756      	b.n	900177c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
90017912:	f240 60e2 	movw	r0, #1762	@ 0x6e2
90017916:	4283      	cmp	r3, r0
90017918:	d809      	bhi.n	9001792e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
9001791a:	f240 60df 	movw	r0, #1759	@ 0x6df
9001791e:	4283      	cmp	r3, r0
90017920:	f4bf af7d 	bcs.w	9001781e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017924:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
90017928:	2b05      	cmp	r3, #5
9001792a:	d8d4      	bhi.n	900178d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001792c:	e777      	b.n	9001781e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001792e:	f240 60e3 	movw	r0, #1763	@ 0x6e3
90017932:	4283      	cmp	r3, r0
90017934:	d09a      	beq.n	9001786c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017936:	f240 60e4 	movw	r0, #1764	@ 0x6e4
9001793a:	4283      	cmp	r3, r0
9001793c:	e7ca      	b.n	900178d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
9001793e:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
90017942:	d22b      	bcs.n	9001799c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
90017944:	f640 00ed 	movw	r0, #2285	@ 0x8ed
90017948:	4283      	cmp	r3, r0
9001794a:	d28f      	bcs.n	9001786c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001794c:	f640 00e5 	movw	r0, #2277	@ 0x8e5
90017950:	4283      	cmp	r3, r0
90017952:	d816      	bhi.n	90017982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90017954:	f640 00e4 	movw	r0, #2276	@ 0x8e4
90017958:	4283      	cmp	r3, r0
9001795a:	f4bf af60 	bcs.w	9001781e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001795e:	f240 60ec 	movw	r0, #1772	@ 0x6ec
90017962:	4283      	cmp	r3, r0
90017964:	d80a      	bhi.n	9001797c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
90017966:	f240 60eb 	movw	r0, #1771	@ 0x6eb
9001796a:	4283      	cmp	r3, r0
9001796c:	f4bf af57 	bcs.w	9001781e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017970:	f240 60ea 	movw	r0, #1770	@ 0x6ea
90017974:	4283      	cmp	r3, r0
90017976:	f43f af79 	beq.w	9001786c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001797a:	e7ac      	b.n	900178d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001797c:	f240 60ed 	movw	r0, #1773	@ 0x6ed
90017980:	e7f8      	b.n	90017974 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
90017982:	f640 00e8 	movw	r0, #2280	@ 0x8e8
90017986:	4283      	cmp	r3, r0
90017988:	d802      	bhi.n	90017990 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
9001798a:	f640 00e7 	movw	r0, #2279	@ 0x8e7
9001798e:	e798      	b.n	900178c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
90017990:	f640 00e9 	movw	r0, #2281	@ 0x8e9
90017994:	4283      	cmp	r3, r0
90017996:	f47f af42 	bne.w	9001781e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001799a:	e767      	b.n	9001786c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001799c:	f640 00f6 	movw	r0, #2294	@ 0x8f6
900179a0:	4283      	cmp	r3, r0
900179a2:	f43f af63 	beq.w	9001786c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900179a6:	d802      	bhi.n	900179ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
900179a8:	f640 00f2 	movw	r0, #2290	@ 0x8f2
900179ac:	e7f2      	b.n	90017994 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
900179ae:	f640 00fa 	movw	r0, #2298	@ 0x8fa
900179b2:	4283      	cmp	r3, r0
900179b4:	d805      	bhi.n	900179c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
900179b6:	f640 00f9 	movw	r0, #2297	@ 0x8f9
900179ba:	4283      	cmp	r3, r0
900179bc:	f4ff af2f 	bcc.w	9001781e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900179c0:	e754      	b.n	9001786c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900179c2:	f640 00fe 	movw	r0, #2302	@ 0x8fe
900179c6:	4283      	cmp	r3, r0
900179c8:	e7af      	b.n	9001792a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
900179ca:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
900179ce:	4617      	mov	r7, r2
900179d0:	f102 0808 	add.w	r8, r2, #8
900179d4:	4666      	mov	r6, ip
900179d6:	6838      	ldr	r0, [r7, #0]
900179d8:	3708      	adds	r7, #8
900179da:	f857 1c04 	ldr.w	r1, [r7, #-4]
900179de:	46e6      	mov	lr, ip
900179e0:	4547      	cmp	r7, r8
900179e2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
900179e6:	46f4      	mov	ip, lr
900179e8:	d1f5      	bne.n	900179d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
900179ea:	6838      	ldr	r0, [r7, #0]
900179ec:	f8ce 0000 	str.w	r0, [lr]
900179f0:	88b9      	ldrh	r1, [r7, #4]
900179f2:	f8ae 1004 	strh.w	r1, [lr, #4]
900179f6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
900179fa:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
900179fe:	d009      	beq.n	90017a14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
90017a00:	7b51      	ldrb	r1, [r2, #13]
90017a02:	7992      	ldrb	r2, [r2, #6]
90017a04:	0149      	lsls	r1, r1, #5
90017a06:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90017a0a:	4311      	orrs	r1, r2
90017a0c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90017a10:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90017a14:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90017a18:	b2ad      	uxth	r5, r5
90017a1a:	d00d      	beq.n	90017a38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90017a1c:	442b      	add	r3, r5
90017a1e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90017a22:	b29b      	uxth	r3, r3
90017a24:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90017a28:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90017a2c:	10db      	asrs	r3, r3, #3
90017a2e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90017a32:	4313      	orrs	r3, r2
90017a34:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90017a38:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90017a3c:	00cb      	lsls	r3, r1, #3
90017a3e:	064f      	lsls	r7, r1, #25
90017a40:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017a44:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90017a48:	ea43 0302 	orr.w	r3, r3, r2
90017a4c:	bf44      	itt	mi
90017a4e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017a52:	b21b      	sxthmi	r3, r3
90017a54:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90017a58:	1b5b      	subs	r3, r3, r5
90017a5a:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
90017a5e:	4632      	mov	r2, r6
90017a60:	e6f9      	b.n	90017856 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90017a62:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90017a66:	4617      	mov	r7, r2
90017a68:	f102 0908 	add.w	r9, r2, #8
90017a6c:	4666      	mov	r6, ip
90017a6e:	6838      	ldr	r0, [r7, #0]
90017a70:	3708      	adds	r7, #8
90017a72:	f857 1c04 	ldr.w	r1, [r7, #-4]
90017a76:	46e0      	mov	r8, ip
90017a78:	454f      	cmp	r7, r9
90017a7a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
90017a7e:	46c4      	mov	ip, r8
90017a80:	d1f5      	bne.n	90017a6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
90017a82:	6838      	ldr	r0, [r7, #0]
90017a84:	f8c8 0000 	str.w	r0, [r8]
90017a88:	88b9      	ldrh	r1, [r7, #4]
90017a8a:	f8a8 1004 	strh.w	r1, [r8, #4]
90017a8e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90017a92:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90017a96:	d009      	beq.n	90017aac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
90017a98:	7b51      	ldrb	r1, [r2, #13]
90017a9a:	7992      	ldrb	r2, [r2, #6]
90017a9c:	0149      	lsls	r1, r1, #5
90017a9e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90017aa2:	4311      	orrs	r1, r2
90017aa4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90017aa8:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90017aac:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90017ab0:	d00e      	beq.n	90017ad0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
90017ab2:	eba3 030e 	sub.w	r3, r3, lr
90017ab6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90017aba:	b29b      	uxth	r3, r3
90017abc:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90017ac0:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90017ac4:	10db      	asrs	r3, r3, #3
90017ac6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90017aca:	4313      	orrs	r3, r2
90017acc:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90017ad0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90017ad4:	00cb      	lsls	r3, r1, #3
90017ad6:	0648      	lsls	r0, r1, #25
90017ad8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017adc:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90017ae0:	ea43 0302 	orr.w	r3, r3, r2
90017ae4:	bf44      	itt	mi
90017ae6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017aea:	b21b      	sxthmi	r3, r3
90017aec:	1b5d      	subs	r5, r3, r5
90017aee:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90017af2:	e7b4      	b.n	90017a5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90017af4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90017af4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017af8:	461e      	mov	r6, r3
90017afa:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90017afc:	4604      	mov	r4, r0
90017afe:	4617      	mov	r7, r2
90017b00:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90017b04:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90017b08:	f7eb fb38 	bl	9000317c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90017b0c:	4605      	mov	r5, r0
90017b0e:	b918      	cbnz	r0, 90017b18 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
90017b10:	6030      	str	r0, [r6, #0]
90017b12:	4628      	mov	r0, r5
90017b14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017b18:	683b      	ldr	r3, [r7, #0]
90017b1a:	4601      	mov	r1, r0
90017b1c:	4638      	mov	r0, r7
90017b1e:	68db      	ldr	r3, [r3, #12]
90017b20:	4798      	blx	r3
90017b22:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90017b26:	4602      	mov	r2, r0
90017b28:	6030      	str	r0, [r6, #0]
90017b2a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90017b2e:	d213      	bcs.n	90017b58 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
90017b30:	4643      	mov	r3, r8
90017b32:	4639      	mov	r1, r7
90017b34:	4620      	mov	r0, r4
90017b36:	f7ff fe39 	bl	900177ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90017b3a:	6030      	str	r0, [r6, #0]
90017b3c:	6833      	ldr	r3, [r6, #0]
90017b3e:	b143      	cbz	r3, 90017b52 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
90017b40:	7b5a      	ldrb	r2, [r3, #13]
90017b42:	7a9b      	ldrb	r3, [r3, #10]
90017b44:	0052      	lsls	r2, r2, #1
90017b46:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90017b4a:	4313      	orrs	r3, r2
90017b4c:	bf0c      	ite	eq
90017b4e:	2301      	moveq	r3, #1
90017b50:	2300      	movne	r3, #0
90017b52:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90017b56:	e7dc      	b.n	90017b12 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90017b58:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90017b5c:	b29b      	uxth	r3, r3
90017b5e:	2b7f      	cmp	r3, #127	@ 0x7f
90017b60:	d804      	bhi.n	90017b6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
90017b62:	4639      	mov	r1, r7
90017b64:	4620      	mov	r0, r4
90017b66:	f7ff fce7 	bl	90017538 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90017b6a:	e7e6      	b.n	90017b3a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
90017b6c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90017b70:	2b00      	cmp	r3, #0
90017b72:	d0e3      	beq.n	90017b3c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90017b74:	f640 1302 	movw	r3, #2306	@ 0x902
90017b78:	429d      	cmp	r5, r3
90017b7a:	d1df      	bne.n	90017b3c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90017b7c:	4601      	mov	r1, r0
90017b7e:	4620      	mov	r0, r4
90017b80:	f7ff fcaa 	bl	900174d8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90017b84:	e7d9      	b.n	90017b3a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

90017b86 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
90017b86:	b510      	push	{r4, lr}
90017b88:	4604      	mov	r4, r0
90017b8a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
90017b8e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90017b90:	b1e1      	cbz	r1, 90017bcc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90017b92:	2b0a      	cmp	r3, #10
90017b94:	d02d      	beq.n	90017bf2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90017b96:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
90017b98:	3901      	subs	r1, #1
90017b9a:	eb04 0042 	add.w	r0, r4, r2, lsl #1
90017b9e:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
90017ba0:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
90017ba4:	1c51      	adds	r1, r2, #1
90017ba6:	b289      	uxth	r1, r1
90017ba8:	2901      	cmp	r1, #1
90017baa:	bf8a      	itet	hi
90017bac:	f102 32ff 	addhi.w	r2, r2, #4294967295
90017bb0:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
90017bb2:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
90017bb4:	1c5a      	adds	r2, r3, #1
90017bb6:	8722      	strh	r2, [r4, #56]	@ 0x38
90017bb8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90017bba:	4413      	add	r3, r2
90017bbc:	b29b      	uxth	r3, r3
90017bbe:	2b09      	cmp	r3, #9
90017bc0:	bf88      	it	hi
90017bc2:	3b0a      	subhi	r3, #10
90017bc4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017bc8:	8458      	strh	r0, [r3, #34]	@ 0x22
90017bca:	e7de      	b.n	90017b8a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
90017bcc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90017bce:	2b0a      	cmp	r3, #10
90017bd0:	d00f      	beq.n	90017bf2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90017bd2:	4620      	mov	r0, r4
90017bd4:	f7ff fc3f 	bl	90017456 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
90017bd8:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90017bda:	1c5a      	adds	r2, r3, #1
90017bdc:	8722      	strh	r2, [r4, #56]	@ 0x38
90017bde:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90017be0:	4413      	add	r3, r2
90017be2:	b29b      	uxth	r3, r3
90017be4:	2b09      	cmp	r3, #9
90017be6:	bf88      	it	hi
90017be8:	3b0a      	subhi	r3, #10
90017bea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017bee:	8458      	strh	r0, [r3, #34]	@ 0x22
90017bf0:	e7ec      	b.n	90017bcc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90017bf2:	bd10      	pop	{r4, pc}

90017bf4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
90017bf4:	b538      	push	{r3, r4, r5, lr}
90017bf6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90017bf8:	4604      	mov	r4, r0
90017bfa:	eb00 0243 	add.w	r2, r0, r3, lsl #1
90017bfe:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
90017c00:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
90017c02:	3a01      	subs	r2, #1
90017c04:	8702      	strh	r2, [r0, #56]	@ 0x38
90017c06:	1c5a      	adds	r2, r3, #1
90017c08:	b292      	uxth	r2, r2
90017c0a:	2a09      	cmp	r2, #9
90017c0c:	bf8a      	itet	hi
90017c0e:	3b09      	subhi	r3, #9
90017c10:	86c2      	strhls	r2, [r0, #54]	@ 0x36
90017c12:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
90017c14:	f7ff ffb7 	bl	90017b86 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
90017c18:	8c23      	ldrh	r3, [r4, #32]
90017c1a:	2b01      	cmp	r3, #1
90017c1c:	bf9c      	itt	ls
90017c1e:	3301      	addls	r3, #1
90017c20:	8423      	strhls	r3, [r4, #32]
90017c22:	8be3      	ldrh	r3, [r4, #30]
90017c24:	b90b      	cbnz	r3, 90017c2a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
90017c26:	2302      	movs	r3, #2
90017c28:	83e3      	strh	r3, [r4, #30]
90017c2a:	8be3      	ldrh	r3, [r4, #30]
90017c2c:	4628      	mov	r0, r5
90017c2e:	3b01      	subs	r3, #1
90017c30:	b29b      	uxth	r3, r3
90017c32:	83e3      	strh	r3, [r4, #30]
90017c34:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90017c38:	8365      	strh	r5, [r4, #26]
90017c3a:	bd38      	pop	{r3, r4, r5, pc}

90017c3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
90017c3c:	428a      	cmp	r2, r1
90017c3e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017c42:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
90017c44:	d932      	bls.n	90017cac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
90017c46:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
90017c48:	1a54      	subs	r4, r2, r1
90017c4a:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
90017c4e:	19ee      	adds	r6, r5, r7
90017c50:	fa1f fe84 	uxth.w	lr, r4
90017c54:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
90017c58:	3e01      	subs	r6, #1
90017c5a:	b2b4      	uxth	r4, r6
90017c5c:	eba4 090e 	sub.w	r9, r4, lr
90017c60:	fa1f f989 	uxth.w	r9, r9
90017c64:	2c09      	cmp	r4, #9
90017c66:	4626      	mov	r6, r4
90017c68:	bf88      	it	hi
90017c6a:	f1a4 060a 	subhi.w	r6, r4, #10
90017c6e:	f1bc 0f00 	cmp.w	ip, #0
90017c72:	f104 34ff 	add.w	r4, r4, #4294967295
90017c76:	bf08      	it	eq
90017c78:	f04f 0c02 	moveq.w	ip, #2
90017c7c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90017c80:	b2a4      	uxth	r4, r4
90017c82:	f10c 3cff 	add.w	ip, ip, #4294967295
90017c86:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
90017c8a:	454c      	cmp	r4, r9
90017c8c:	fa1f fc8c 	uxth.w	ip, ip
90017c90:	eb00 064c 	add.w	r6, r0, ip, lsl #1
90017c94:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
90017c98:	d1e4      	bne.n	90017c64 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
90017c9a:	eba5 050e 	sub.w	r5, r5, lr
90017c9e:	eb0e 0408 	add.w	r4, lr, r8
90017ca2:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
90017ca6:	8705      	strh	r5, [r0, #56]	@ 0x38
90017ca8:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
90017cac:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
90017cae:	250a      	movs	r5, #10
90017cb0:	1a64      	subs	r4, r4, r1
90017cb2:	4439      	add	r1, r7
90017cb4:	b289      	uxth	r1, r1
90017cb6:	8704      	strh	r4, [r0, #56]	@ 0x38
90017cb8:	2909      	cmp	r1, #9
90017cba:	bf88      	it	hi
90017cbc:	390a      	subhi	r1, #10
90017cbe:	86c1      	strh	r1, [r0, #54]	@ 0x36
90017cc0:	b18a      	cbz	r2, 90017ce6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
90017cc2:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
90017cc4:	3a01      	subs	r2, #1
90017cc6:	3101      	adds	r1, #1
90017cc8:	b292      	uxth	r2, r2
90017cca:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
90017cce:	8701      	strh	r1, [r0, #56]	@ 0x38
90017cd0:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
90017cd2:	b901      	cbnz	r1, 90017cd6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
90017cd4:	86c5      	strh	r5, [r0, #54]	@ 0x36
90017cd6:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
90017cd8:	3901      	subs	r1, #1
90017cda:	b289      	uxth	r1, r1
90017cdc:	86c1      	strh	r1, [r0, #54]	@ 0x36
90017cde:	eb00 0141 	add.w	r1, r0, r1, lsl #1
90017ce2:	844c      	strh	r4, [r1, #34]	@ 0x22
90017ce4:	e7ec      	b.n	90017cc0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
90017ce6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017cea:	f7ff bf4c 	b.w	90017b86 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90017cee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
90017cee:	b570      	push	{r4, r5, r6, lr}
90017cf0:	2500      	movs	r5, #0
90017cf2:	4295      	cmp	r5, r2
90017cf4:	d011      	beq.n	90017d1a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
90017cf6:	8bc4      	ldrh	r4, [r0, #30]
90017cf8:	f831 6b02 	ldrh.w	r6, [r1], #2
90017cfc:	4414      	add	r4, r2
90017cfe:	3c01      	subs	r4, #1
90017d00:	1b64      	subs	r4, r4, r5
90017d02:	b2a4      	uxth	r4, r4
90017d04:	2c01      	cmp	r4, #1
90017d06:	bf88      	it	hi
90017d08:	3c02      	subhi	r4, #2
90017d0a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90017d0e:	8b64      	ldrh	r4, [r4, #26]
90017d10:	42b4      	cmp	r4, r6
90017d12:	d117      	bne.n	90017d44 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
90017d14:	3501      	adds	r5, #1
90017d16:	b2ad      	uxth	r5, r5
90017d18:	e7eb      	b.n	90017cf2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
90017d1a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90017d1e:	2400      	movs	r4, #0
90017d20:	4413      	add	r3, r2
90017d22:	b2a2      	uxth	r2, r4
90017d24:	429a      	cmp	r2, r3
90017d26:	da0f      	bge.n	90017d48 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
90017d28:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
90017d2a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
90017d2e:	3401      	adds	r4, #1
90017d30:	4432      	add	r2, r6
90017d32:	b292      	uxth	r2, r2
90017d34:	2a09      	cmp	r2, #9
90017d36:	bf88      	it	hi
90017d38:	3a0a      	subhi	r2, #10
90017d3a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90017d3e:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
90017d40:	42aa      	cmp	r2, r5
90017d42:	d0ee      	beq.n	90017d22 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
90017d44:	2000      	movs	r0, #0
90017d46:	bd70      	pop	{r4, r5, r6, pc}
90017d48:	2001      	movs	r0, #1
90017d4a:	e7fc      	b.n	90017d46 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

90017d4c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
90017d4c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017d50:	4605      	mov	r5, r0
90017d52:	4616      	mov	r6, r2
90017d54:	1c8c      	adds	r4, r1, #2
90017d56:	8809      	ldrh	r1, [r1, #0]
90017d58:	ea4f 3a11 	mov.w	sl, r1, lsr #12
90017d5c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
90017d60:	42b3      	cmp	r3, r6
90017d62:	d124      	bne.n	90017dae <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
90017d64:	f3c1 2903 	ubfx	r9, r1, #8, #4
90017d68:	f3c1 1803 	ubfx	r8, r1, #4, #4
90017d6c:	f001 070f 	and.w	r7, r1, #15
90017d70:	4652      	mov	r2, sl
90017d72:	f8cd 8000 	str.w	r8, [sp]
90017d76:	464b      	mov	r3, r9
90017d78:	4621      	mov	r1, r4
90017d7a:	4628      	mov	r0, r5
90017d7c:	f7ff ffb7 	bl	90017cee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
90017d80:	4683      	mov	fp, r0
90017d82:	b168      	cbz	r0, 90017da0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
90017d84:	eb0a 0109 	add.w	r1, sl, r9
90017d88:	463a      	mov	r2, r7
90017d8a:	4628      	mov	r0, r5
90017d8c:	4441      	add	r1, r8
90017d8e:	eb04 0341 	add.w	r3, r4, r1, lsl #1
90017d92:	4649      	mov	r1, r9
90017d94:	f7ff ff52 	bl	90017c3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
90017d98:	4658      	mov	r0, fp
90017d9a:	b003      	add	sp, #12
90017d9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017da0:	eb07 010a 	add.w	r1, r7, sl
90017da4:	4449      	add	r1, r9
90017da6:	4441      	add	r1, r8
90017da8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90017dac:	e7d2      	b.n	90017d54 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
90017dae:	f04f 0b00 	mov.w	fp, #0
90017db2:	e7f1      	b.n	90017d98 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

90017db4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
90017db4:	b570      	push	{r4, r5, r6, lr}
90017db6:	8810      	ldrh	r0, [r2, #0]
90017db8:	4298      	cmp	r0, r3
90017dba:	d817      	bhi.n	90017dec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90017dbc:	1e48      	subs	r0, r1, #1
90017dbe:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
90017dc2:	4298      	cmp	r0, r3
90017dc4:	d312      	bcc.n	90017dec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90017dc6:	2400      	movs	r4, #0
90017dc8:	428c      	cmp	r4, r1
90017dca:	d20f      	bcs.n	90017dec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90017dcc:	1860      	adds	r0, r4, r1
90017dce:	1040      	asrs	r0, r0, #1
90017dd0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
90017dd4:	0085      	lsls	r5, r0, #2
90017dd6:	42b3      	cmp	r3, r6
90017dd8:	d902      	bls.n	90017de0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
90017dda:	3001      	adds	r0, #1
90017ddc:	b284      	uxth	r4, r0
90017dde:	e7f3      	b.n	90017dc8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90017de0:	d201      	bcs.n	90017de6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
90017de2:	b281      	uxth	r1, r0
90017de4:	e7f0      	b.n	90017dc8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90017de6:	442a      	add	r2, r5
90017de8:	8850      	ldrh	r0, [r2, #2]
90017dea:	bd70      	pop	{r4, r5, r6, pc}
90017dec:	2000      	movs	r0, #0
90017dee:	e7fc      	b.n	90017dea <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

90017df0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
90017df0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017df4:	6c45      	ldr	r5, [r0, #68]	@ 0x44
90017df6:	4604      	mov	r4, r0
90017df8:	260b      	movs	r6, #11
90017dfa:	886f      	ldrh	r7, [r5, #2]
90017dfc:	087f      	lsrs	r7, r7, #1
90017dfe:	3e01      	subs	r6, #1
90017e00:	d013      	beq.n	90017e2a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90017e02:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
90017e04:	462a      	mov	r2, r5
90017e06:	4639      	mov	r1, r7
90017e08:	4620      	mov	r0, r4
90017e0a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017e0e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90017e12:	4643      	mov	r3, r8
90017e14:	f7ff ffce 	bl	90017db4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
90017e18:	b138      	cbz	r0, 90017e2a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90017e1a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
90017e1e:	4642      	mov	r2, r8
90017e20:	4620      	mov	r0, r4
90017e22:	f7ff ff93 	bl	90017d4c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
90017e26:	2800      	cmp	r0, #0
90017e28:	d1e9      	bne.n	90017dfe <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
90017e2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

90017e30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
90017e30:	b570      	push	{r4, r5, r6, lr}
90017e32:	694a      	ldr	r2, [r1, #20]
90017e34:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90017e36:	684b      	ldr	r3, [r1, #4]
90017e38:	1b54      	subs	r4, r2, r5
90017e3a:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
90017e3c:	f000 8106 	beq.w	9001804c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
90017e40:	1b9b      	subs	r3, r3, r6
90017e42:	d003      	beq.n	90017e4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90017e44:	4363      	muls	r3, r4
90017e46:	2210      	movs	r2, #16
90017e48:	fb93 f3f2 	sdiv	r3, r3, r2
90017e4c:	680c      	ldr	r4, [r1, #0]
90017e4e:	698a      	ldr	r2, [r1, #24]
90017e50:	1b65      	subs	r5, r4, r5
90017e52:	f000 80fd 	beq.w	90018050 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
90017e56:	1b92      	subs	r2, r2, r6
90017e58:	d003      	beq.n	90017e62 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90017e5a:	436a      	muls	r2, r5
90017e5c:	2410      	movs	r4, #16
90017e5e:	fb92 f2f4 	sdiv	r2, r2, r4
90017e62:	1a9b      	subs	r3, r3, r2
90017e64:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 9001808c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
90017e68:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90017e6c:	460a      	mov	r2, r1
90017e6e:	ee07 3a90 	vmov	s15, r3
90017e72:	f100 040c 	add.w	r4, r0, #12
90017e76:	4603      	mov	r3, r0
90017e78:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017e7c:	ee67 7a84 	vmul.f32	s15, s15, s8
90017e80:	ee87 3a27 	vdiv.f32	s6, s14, s15
90017e84:	eeb1 6a43 	vneg.f32	s12, s6
90017e88:	edd2 7a02 	vldr	s15, [r2, #8]
90017e8c:	3214      	adds	r2, #20
90017e8e:	eec7 6a27 	vdiv.f32	s13, s14, s15
90017e92:	ece3 6a01 	vstmia	r3!, {s13}
90017e96:	429c      	cmp	r4, r3
90017e98:	ed52 7a02 	vldr	s15, [r2, #-8]
90017e9c:	ee67 7aa6 	vmul.f32	s15, s15, s13
90017ea0:	edc3 7a02 	vstr	s15, [r3, #8]
90017ea4:	ed52 7a01 	vldr	s15, [r2, #-4]
90017ea8:	ee67 7aa6 	vmul.f32	s15, s15, s13
90017eac:	edc3 7a05 	vstr	s15, [r3, #20]
90017eb0:	d1ea      	bne.n	90017e88 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
90017eb2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90017eb4:	698b      	ldr	r3, [r1, #24]
90017eb6:	edd0 4a02 	vldr	s9, [r0, #8]
90017eba:	1a9b      	subs	r3, r3, r2
90017ebc:	edd0 3a00 	vldr	s7, [r0]
90017ec0:	edd0 6a01 	vldr	s13, [r0, #4]
90017ec4:	ee07 3a90 	vmov	s15, r3
90017ec8:	684b      	ldr	r3, [r1, #4]
90017eca:	ee76 6ae4 	vsub.f32	s13, s13, s9
90017ece:	ed90 5a05 	vldr	s10, [r0, #20]
90017ed2:	1a9b      	subs	r3, r3, r2
90017ed4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017ed8:	ee73 4ae4 	vsub.f32	s9, s7, s9
90017edc:	ed90 2a03 	vldr	s4, [r0, #12]
90017ee0:	ee07 3a10 	vmov	s14, r3
90017ee4:	edd0 5a04 	vldr	s11, [r0, #16]
90017ee8:	ee67 7a84 	vmul.f32	s15, s15, s8
90017eec:	ed90 1a07 	vldr	s2, [r0, #28]
90017ef0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017ef4:	edd0 2a06 	vldr	s5, [r0, #24]
90017ef8:	ee75 5ac5 	vsub.f32	s11, s11, s10
90017efc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
90017f00:	ee27 7a04 	vmul.f32	s14, s14, s8
90017f04:	ee32 5a45 	vsub.f32	s10, s4, s10
90017f08:	eee6 7a87 	vfma.f32	s15, s13, s14
90017f0c:	ee67 7a83 	vmul.f32	s15, s15, s6
90017f10:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
90017f14:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90017f16:	694a      	ldr	r2, [r1, #20]
90017f18:	1b13      	subs	r3, r2, r4
90017f1a:	ee07 3a10 	vmov	s14, r3
90017f1e:	680b      	ldr	r3, [r1, #0]
90017f20:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017f24:	1b1b      	subs	r3, r3, r4
90017f26:	ee27 7a04 	vmul.f32	s14, s14, s8
90017f2a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
90017f2e:	ee07 3a10 	vmov	s14, r3
90017f32:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017f36:	ee27 7a04 	vmul.f32	s14, s14, s8
90017f3a:	eee6 4a87 	vfma.f32	s9, s13, s14
90017f3e:	ee64 4a86 	vmul.f32	s9, s9, s12
90017f42:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
90017f46:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90017f48:	698b      	ldr	r3, [r1, #24]
90017f4a:	1a9b      	subs	r3, r3, r2
90017f4c:	ee06 3a90 	vmov	s13, r3
90017f50:	684b      	ldr	r3, [r1, #4]
90017f52:	1a9b      	subs	r3, r3, r2
90017f54:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90017f58:	ee07 3a10 	vmov	s14, r3
90017f5c:	ee66 6a84 	vmul.f32	s13, s13, s8
90017f60:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017f64:	ee65 6a66 	vnmul.f32	s13, s10, s13
90017f68:	ee27 7a04 	vmul.f32	s14, s14, s8
90017f6c:	eee5 6a87 	vfma.f32	s13, s11, s14
90017f70:	ee66 6a83 	vmul.f32	s13, s13, s6
90017f74:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
90017f78:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90017f7a:	694a      	ldr	r2, [r1, #20]
90017f7c:	1b13      	subs	r3, r2, r4
90017f7e:	ee07 3a10 	vmov	s14, r3
90017f82:	680b      	ldr	r3, [r1, #0]
90017f84:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017f88:	1b1b      	subs	r3, r3, r4
90017f8a:	ee27 7a04 	vmul.f32	s14, s14, s8
90017f8e:	ee25 5a47 	vnmul.f32	s10, s10, s14
90017f92:	ee07 3a10 	vmov	s14, r3
90017f96:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017f9a:	ee27 7a04 	vmul.f32	s14, s14, s8
90017f9e:	eea5 5a87 	vfma.f32	s10, s11, s14
90017fa2:	edd0 5a08 	vldr	s11, [r0, #32]
90017fa6:	ee31 1a65 	vsub.f32	s2, s2, s11
90017faa:	ee72 5ae5 	vsub.f32	s11, s5, s11
90017fae:	ee25 5a06 	vmul.f32	s10, s10, s12
90017fb2:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
90017fb6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90017fb8:	698b      	ldr	r3, [r1, #24]
90017fba:	1a9b      	subs	r3, r3, r2
90017fbc:	ee07 3a10 	vmov	s14, r3
90017fc0:	684b      	ldr	r3, [r1, #4]
90017fc2:	1a9b      	subs	r3, r3, r2
90017fc4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017fc8:	ee01 3a90 	vmov	s3, r3
90017fcc:	ee27 7a04 	vmul.f32	s14, s14, s8
90017fd0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
90017fd4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90017fd8:	ee61 1a84 	vmul.f32	s3, s3, s8
90017fdc:	eea1 7a21 	vfma.f32	s14, s2, s3
90017fe0:	ee27 7a03 	vmul.f32	s14, s14, s6
90017fe4:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
90017fe8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90017fea:	694a      	ldr	r2, [r1, #20]
90017fec:	1b13      	subs	r3, r2, r4
90017fee:	ee03 3a10 	vmov	s6, r3
90017ff2:	680b      	ldr	r3, [r1, #0]
90017ff4:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90017ff8:	1b1b      	subs	r3, r3, r4
90017ffa:	ee23 3a04 	vmul.f32	s6, s6, s8
90017ffe:	ee65 5ac3 	vnmul.f32	s11, s11, s6
90018002:	ee03 3a10 	vmov	s6, r3
90018006:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001800a:	ee23 4a04 	vmul.f32	s8, s6, s8
9001800e:	eee1 5a04 	vfma.f32	s11, s2, s8
90018012:	ee25 6a86 	vmul.f32	s12, s11, s12
90018016:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001801a:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
9001801e:	eee3 5aa6 	vfma.f32	s11, s7, s13
90018022:	eef5 5ac0 	vcmpe.f32	s11, #0.0
90018026:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001802a:	dd13      	ble.n	90018054 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001802c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
90018030:	ee62 7ae7 	vnmul.f32	s15, s5, s15
90018034:	63c3      	str	r3, [r0, #60]	@ 0x3c
90018036:	eee3 7a87 	vfma.f32	s15, s7, s14
9001803a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001803e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018042:	dd15      	ble.n	90018070 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
90018044:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
90018048:	6403      	str	r3, [r0, #64]	@ 0x40
9001804a:	bd70      	pop	{r4, r5, r6, pc}
9001804c:	4623      	mov	r3, r4
9001804e:	e6fd      	b.n	90017e4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90018050:	462a      	mov	r2, r5
90018052:	e706      	b.n	90017e62 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90018054:	d502      	bpl.n	9001805c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
90018056:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001805a:	e7e9      	b.n	90018030 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001805c:	ee22 2a64 	vnmul.f32	s4, s4, s9
90018060:	eea3 2a85 	vfma.f32	s4, s7, s10
90018064:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
90018068:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001806c:	dade      	bge.n	9001802c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001806e:	e7f2      	b.n	90018056 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
90018070:	d502      	bpl.n	90018078 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
90018072:	f647 73ff 	movw	r3, #32767	@ 0x7fff
90018076:	e7e7      	b.n	90018048 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
90018078:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001807c:	eee3 4a86 	vfma.f32	s9, s7, s12
90018080:	eef5 4ac0 	vcmpe.f32	s9, #0.0
90018084:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018088:	dadc      	bge.n	90018044 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001808a:	e7f2      	b.n	90018072 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001808c:	3d800000 	.word	0x3d800000

90018090 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
90018090:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018094:	2714      	movs	r7, #20
90018096:	435f      	muls	r7, r3
90018098:	eb02 0c07 	add.w	ip, r2, r7
9001809c:	f8dc 5004 	ldr.w	r5, [ip, #4]
900180a0:	f115 0e0f 	adds.w	lr, r5, #15
900180a4:	f100 80a2 	bmi.w	900181ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
900180a8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
900180ac:	9c08      	ldr	r4, [sp, #32]
900180ae:	2614      	movs	r6, #20
900180b0:	f8c0 e014 	str.w	lr, [r0, #20]
900180b4:	4366      	muls	r6, r4
900180b6:	eb02 0806 	add.w	r8, r2, r6
900180ba:	f8d8 5004 	ldr.w	r5, [r8, #4]
900180be:	f115 040f 	adds.w	r4, r5, #15
900180c2:	f100 809f 	bmi.w	90018204 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
900180c6:	1124      	asrs	r4, r4, #4
900180c8:	eba4 040e 	sub.w	r4, r4, lr
900180cc:	6184      	str	r4, [r0, #24]
900180ce:	2c00      	cmp	r4, #0
900180d0:	f000 808a 	beq.w	900181e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
900180d4:	f8dc 9004 	ldr.w	r9, [ip, #4]
900180d8:	f8d8 4004 	ldr.w	r4, [r8, #4]
900180dc:	5995      	ldr	r5, [r2, r6]
900180de:	eba4 0809 	sub.w	r8, r4, r9
900180e2:	59d4      	ldr	r4, [r2, r7]
900180e4:	eba5 0a04 	sub.w	sl, r5, r4
900180e8:	ea4f 1608 	mov.w	r6, r8, lsl #4
900180ec:	ea4f 150a 	mov.w	r5, sl, lsl #4
900180f0:	fb0e fe05 	mul.w	lr, lr, r5
900180f4:	fb0a ee19 	mls	lr, sl, r9, lr
900180f8:	fb08 e404 	mla	r4, r8, r4, lr
900180fc:	3c01      	subs	r4, #1
900180fe:	19a4      	adds	r4, r4, r6
90018100:	f100 808c 	bmi.w	9001821c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
90018104:	fb94 fef6 	sdiv	lr, r4, r6
90018108:	fb06 441e 	mls	r4, r6, lr, r4
9001810c:	f8c0 e000 	str.w	lr, [r0]
90018110:	6104      	str	r4, [r0, #16]
90018112:	2d00      	cmp	r5, #0
90018114:	f2c0 8095 	blt.w	90018242 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
90018118:	fb95 f4f6 	sdiv	r4, r5, r6
9001811c:	fb06 5514 	mls	r5, r6, r4, r5
90018120:	6044      	str	r4, [r0, #4]
90018122:	6085      	str	r5, [r0, #8]
90018124:	60c6      	str	r6, [r0, #12]
90018126:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001812a:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001812e:	6945      	ldr	r5, [r0, #20]
90018130:	59d2      	ldr	r2, [r2, r7]
90018132:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
90018136:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 90018264 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001813a:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001813e:	ee07 4a10 	vmov	s14, r4
90018142:	6804      	ldr	r4, [r0, #0]
90018144:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
90018148:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001814c:	ee07 2a90 	vmov	s15, r2
90018150:	ee27 7a26 	vmul.f32	s14, s14, s13
90018154:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018158:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001815c:	edd3 6a00 	vldr	s13, [r3]
90018160:	eee6 6a07 	vfma.f32	s13, s12, s14
90018164:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
90018168:	eee6 6a27 	vfma.f32	s13, s12, s15
9001816c:	edc0 6a07 	vstr	s13, [r0, #28]
90018170:	edd0 6a01 	vldr	s13, [r0, #4]
90018174:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
90018178:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001817c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
90018180:	eea6 6aa5 	vfma.f32	s12, s13, s11
90018184:	ed80 6a08 	vstr	s12, [r0, #32]
90018188:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
9001818a:	6242      	str	r2, [r0, #36]	@ 0x24
9001818c:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
90018190:	ed93 6a03 	vldr	s12, [r3, #12]
90018194:	eea5 6a87 	vfma.f32	s12, s11, s14
90018198:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001819c:	eea5 6aa7 	vfma.f32	s12, s11, s15
900181a0:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
900181a4:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
900181a8:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
900181ac:	eea6 6aa5 	vfma.f32	s12, s13, s11
900181b0:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
900181b4:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
900181b6:	6302      	str	r2, [r0, #48]	@ 0x30
900181b8:	ed93 6a06 	vldr	s12, [r3, #24]
900181bc:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
900181c0:	eea5 6a87 	vfma.f32	s12, s11, s14
900181c4:	eeb0 7a46 	vmov.f32	s14, s12
900181c8:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
900181cc:	eea6 7a27 	vfma.f32	s14, s12, s15
900181d0:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
900181d4:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
900181d8:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
900181dc:	eee6 7a87 	vfma.f32	s15, s13, s14
900181e0:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
900181e4:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
900181e6:	63c3      	str	r3, [r0, #60]	@ 0x3c
900181e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900181ec:	2410      	movs	r4, #16
900181ee:	f1c5 0501 	rsb	r5, r5, #1
900181f2:	fb9e fef4 	sdiv	lr, lr, r4
900181f6:	f015 050f 	ands.w	r5, r5, #15
900181fa:	bf18      	it	ne
900181fc:	2501      	movne	r5, #1
900181fe:	ebae 0e05 	sub.w	lr, lr, r5
90018202:	e753      	b.n	900180ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
90018204:	f04f 0910 	mov.w	r9, #16
90018208:	f1c5 0501 	rsb	r5, r5, #1
9001820c:	fb94 f4f9 	sdiv	r4, r4, r9
90018210:	f015 050f 	ands.w	r5, r5, #15
90018214:	bf18      	it	ne
90018216:	2501      	movne	r5, #1
90018218:	1b64      	subs	r4, r4, r5
9001821a:	e755      	b.n	900180c8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001821c:	4264      	negs	r4, r4
9001821e:	fb94 fef6 	sdiv	lr, r4, r6
90018222:	f1ce 0800 	rsb	r8, lr, #0
90018226:	fb06 441e 	mls	r4, r6, lr, r4
9001822a:	f8c0 8000 	str.w	r8, [r0]
9001822e:	6104      	str	r4, [r0, #16]
90018230:	2c00      	cmp	r4, #0
90018232:	f43f af6e 	beq.w	90018112 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
90018236:	ea6f 0e0e 	mvn.w	lr, lr
9001823a:	1b34      	subs	r4, r6, r4
9001823c:	f8c0 e000 	str.w	lr, [r0]
90018240:	e766      	b.n	90018110 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
90018242:	426d      	negs	r5, r5
90018244:	fb95 f4f6 	sdiv	r4, r5, r6
90018248:	f1c4 0e00 	rsb	lr, r4, #0
9001824c:	fb06 5514 	mls	r5, r6, r4, r5
90018250:	f8c0 e004 	str.w	lr, [r0, #4]
90018254:	6085      	str	r5, [r0, #8]
90018256:	2d00      	cmp	r5, #0
90018258:	f43f af64 	beq.w	90018124 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001825c:	43e4      	mvns	r4, r4
9001825e:	1b75      	subs	r5, r6, r5
90018260:	6044      	str	r4, [r0, #4]
90018262:	e75e      	b.n	90018122 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
90018264:	3d800000 	.word	0x3d800000

90018268 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
90018268:	4b01      	ldr	r3, [pc, #4]	@ (90018270 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001826a:	6018      	str	r0, [r3, #0]
9001826c:	4770      	bx	lr
9001826e:	bf00      	nop
90018270:	2001aaa8 	.word	0x2001aaa8

90018274 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
90018274:	4b06      	ldr	r3, [pc, #24]	@ (90018290 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
90018276:	881a      	ldrh	r2, [r3, #0]
90018278:	4282      	cmp	r2, r0
9001827a:	d807      	bhi.n	9001828c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001827c:	4b05      	ldr	r3, [pc, #20]	@ (90018294 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001827e:	881b      	ldrh	r3, [r3, #0]
90018280:	4413      	add	r3, r2
90018282:	4298      	cmp	r0, r3
90018284:	bfac      	ite	ge
90018286:	2000      	movge	r0, #0
90018288:	2001      	movlt	r0, #1
9001828a:	4770      	bx	lr
9001828c:	2000      	movs	r0, #0
9001828e:	4770      	bx	lr
90018290:	2001aac8 	.word	0x2001aac8
90018294:	2001aacc 	.word	0x2001aacc

90018298 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
90018298:	b508      	push	{r3, lr}
9001829a:	4601      	mov	r1, r0
9001829c:	f7ff ffea 	bl	90018274 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
900182a0:	b118      	cbz	r0, 900182aa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
900182a2:	4b02      	ldr	r3, [pc, #8]	@ (900182ac <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
900182a4:	681b      	ldr	r3, [r3, #0]
900182a6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
900182aa:	bd08      	pop	{r3, pc}
900182ac:	2001aaac 	.word	0x2001aaac

900182b0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
900182b0:	b5f0      	push	{r4, r5, r6, r7, lr}
900182b2:	4c24      	ldr	r4, [pc, #144]	@ (90018344 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
900182b4:	6823      	ldr	r3, [r4, #0]
900182b6:	2b00      	cmp	r3, #0
900182b8:	d042      	beq.n	90018340 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
900182ba:	4a23      	ldr	r2, [pc, #140]	@ (90018348 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
900182bc:	4d23      	ldr	r5, [pc, #140]	@ (9001834c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
900182be:	8811      	ldrh	r1, [r2, #0]
900182c0:	f8b5 c000 	ldrh.w	ip, [r5]
900182c4:	4822      	ldr	r0, [pc, #136]	@ (90018350 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
900182c6:	4461      	add	r1, ip
900182c8:	1c4a      	adds	r2, r1, #1
900182ca:	008f      	lsls	r7, r1, #2
900182cc:	f022 0201 	bic.w	r2, r2, #1
900182d0:	19de      	adds	r6, r3, r7
900182d2:	0412      	lsls	r2, r2, #16
900182d4:	6006      	str	r6, [r0, #0]
900182d6:	4e1f      	ldr	r6, [pc, #124]	@ (90018354 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
900182d8:	0c12      	lsrs	r2, r2, #16
900182da:	eb07 0742 	add.w	r7, r7, r2, lsl #1
900182de:	19da      	adds	r2, r3, r7
900182e0:	6032      	str	r2, [r6, #0]
900182e2:	220e      	movs	r2, #14
900182e4:	fb02 f20c 	mul.w	r2, r2, ip
900182e8:	3203      	adds	r2, #3
900182ea:	f022 0203 	bic.w	r2, r2, #3
900182ee:	443a      	add	r2, r7
900182f0:	4f19      	ldr	r7, [pc, #100]	@ (90018358 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
900182f2:	4413      	add	r3, r2
900182f4:	603b      	str	r3, [r7, #0]
900182f6:	2300      	movs	r3, #0
900182f8:	4f18      	ldr	r7, [pc, #96]	@ (9001835c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
900182fa:	469c      	mov	ip, r3
900182fc:	803b      	strh	r3, [r7, #0]
900182fe:	4f18      	ldr	r7, [pc, #96]	@ (90018360 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
90018300:	683f      	ldr	r7, [r7, #0]
90018302:	1aba      	subs	r2, r7, r2
90018304:	4f17      	ldr	r7, [pc, #92]	@ (90018364 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
90018306:	603a      	str	r2, [r7, #0]
90018308:	f64f 77ff 	movw	r7, #65535	@ 0xffff
9001830c:	4a16      	ldr	r2, [pc, #88]	@ (90018368 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001830e:	8013      	strh	r3, [r2, #0]
90018310:	428b      	cmp	r3, r1
90018312:	d10d      	bne.n	90018330 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
90018314:	882d      	ldrh	r5, [r5, #0]
90018316:	2300      	movs	r3, #0
90018318:	6830      	ldr	r0, [r6, #0]
9001831a:	240e      	movs	r4, #14
9001831c:	429d      	cmp	r5, r3
9001831e:	d90f      	bls.n	90018340 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90018320:	fb04 0203 	mla	r2, r4, r3, r0
90018324:	3301      	adds	r3, #1
90018326:	7b11      	ldrb	r1, [r2, #12]
90018328:	f36f 1145 	bfc	r1, #5, #1
9001832c:	7311      	strb	r1, [r2, #12]
9001832e:	e7f5      	b.n	9001831c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
90018330:	6822      	ldr	r2, [r4, #0]
90018332:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
90018336:	6802      	ldr	r2, [r0, #0]
90018338:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001833c:	3301      	adds	r3, #1
9001833e:	e7e7      	b.n	90018310 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
90018340:	bdf0      	pop	{r4, r5, r6, r7, pc}
90018342:	bf00      	nop
90018344:	2001aaac 	.word	0x2001aaac
90018348:	2001aac8 	.word	0x2001aac8
9001834c:	2001aacc 	.word	0x2001aacc
90018350:	2001aac0 	.word	0x2001aac0
90018354:	2001aab0 	.word	0x2001aab0
90018358:	2001aab8 	.word	0x2001aab8
9001835c:	2001aaca 	.word	0x2001aaca
90018360:	2001aab4 	.word	0x2001aab4
90018364:	2001aac4 	.word	0x2001aac4
90018368:	2001aabc 	.word	0x2001aabc

9001836c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001836c:	4b06      	ldr	r3, [pc, #24]	@ (90018388 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001836e:	681b      	ldr	r3, [r3, #0]
90018370:	b943      	cbnz	r3, 90018384 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90018372:	b139      	cbz	r1, 90018384 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90018374:	4b05      	ldr	r3, [pc, #20]	@ (9001838c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
90018376:	801a      	strh	r2, [r3, #0]
90018378:	4b05      	ldr	r3, [pc, #20]	@ (90018390 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001837a:	6019      	str	r1, [r3, #0]
9001837c:	4b05      	ldr	r3, [pc, #20]	@ (90018394 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001837e:	6018      	str	r0, [r3, #0]
90018380:	f7ff bf96 	b.w	900182b0 <_ZN8touchgfx6Bitmap10clearCacheEv>
90018384:	4770      	bx	lr
90018386:	bf00      	nop
90018388:	2001aab8 	.word	0x2001aab8
9001838c:	2001aacc 	.word	0x2001aacc
90018390:	2001aab4 	.word	0x2001aab4
90018394:	2001aaac 	.word	0x2001aaac

90018398 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
90018398:	b470      	push	{r4, r5, r6}
9001839a:	4c07      	ldr	r4, [pc, #28]	@ (900183b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001839c:	4605      	mov	r5, r0
9001839e:	4610      	mov	r0, r2
900183a0:	9a03      	ldr	r2, [sp, #12]
900183a2:	6826      	ldr	r6, [r4, #0]
900183a4:	b936      	cbnz	r6, 900183b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
900183a6:	6025      	str	r5, [r4, #0]
900183a8:	4c04      	ldr	r4, [pc, #16]	@ (900183bc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
900183aa:	8021      	strh	r1, [r4, #0]
900183ac:	4619      	mov	r1, r3
900183ae:	bc70      	pop	{r4, r5, r6}
900183b0:	f7ff bfdc 	b.w	9001836c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
900183b4:	bc70      	pop	{r4, r5, r6}
900183b6:	4770      	bx	lr
900183b8:	2001aad0 	.word	0x2001aad0
900183bc:	2001aac8 	.word	0x2001aac8

900183c0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
900183c0:	4a12      	ldr	r2, [pc, #72]	@ (9001840c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
900183c2:	8803      	ldrh	r3, [r0, #0]
900183c4:	8812      	ldrh	r2, [r2, #0]
900183c6:	4293      	cmp	r3, r2
900183c8:	d207      	bcs.n	900183da <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
900183ca:	4a11      	ldr	r2, [pc, #68]	@ (90018410 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
900183cc:	2114      	movs	r1, #20
900183ce:	6812      	ldr	r2, [r2, #0]
900183d0:	fb01 2303 	mla	r3, r1, r3, r2
900183d4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
900183d8:	4770      	bx	lr
900183da:	490e      	ldr	r1, [pc, #56]	@ (90018414 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
900183dc:	8809      	ldrh	r1, [r1, #0]
900183de:	4411      	add	r1, r2
900183e0:	428b      	cmp	r3, r1
900183e2:	da04      	bge.n	900183ee <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
900183e4:	1a9b      	subs	r3, r3, r2
900183e6:	4a0c      	ldr	r2, [pc, #48]	@ (90018418 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
900183e8:	210e      	movs	r1, #14
900183ea:	6812      	ldr	r2, [r2, #0]
900183ec:	e7f0      	b.n	900183d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
900183ee:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
900183f2:	4293      	cmp	r3, r2
900183f4:	d108      	bne.n	90018408 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
900183f6:	4b09      	ldr	r3, [pc, #36]	@ (9001841c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
900183f8:	781b      	ldrb	r3, [r3, #0]
900183fa:	b91b      	cbnz	r3, 90018404 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
900183fc:	4b08      	ldr	r3, [pc, #32]	@ (90018420 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
900183fe:	f9b3 0000 	ldrsh.w	r0, [r3]
90018402:	4770      	bx	lr
90018404:	4b07      	ldr	r3, [pc, #28]	@ (90018424 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
90018406:	e7fa      	b.n	900183fe <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
90018408:	2000      	movs	r0, #0
9001840a:	4770      	bx	lr
9001840c:	2001aac8 	.word	0x2001aac8
90018410:	2001aad0 	.word	0x2001aad0
90018414:	2001aacc 	.word	0x2001aacc
90018418:	2001aab0 	.word	0x2001aab0
9001841c:	2001aa36 	.word	0x2001aa36
90018420:	2001aa38 	.word	0x2001aa38
90018424:	2001aa3a 	.word	0x2001aa3a

90018428 <_ZNK8touchgfx6Bitmap9getHeightEv>:
90018428:	4a12      	ldr	r2, [pc, #72]	@ (90018474 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001842a:	8803      	ldrh	r3, [r0, #0]
9001842c:	8812      	ldrh	r2, [r2, #0]
9001842e:	4293      	cmp	r3, r2
90018430:	d207      	bcs.n	90018442 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
90018432:	4a11      	ldr	r2, [pc, #68]	@ (90018478 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
90018434:	2114      	movs	r1, #20
90018436:	6812      	ldr	r2, [r2, #0]
90018438:	fb01 2303 	mla	r3, r1, r3, r2
9001843c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
90018440:	4770      	bx	lr
90018442:	490e      	ldr	r1, [pc, #56]	@ (9001847c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
90018444:	8809      	ldrh	r1, [r1, #0]
90018446:	4411      	add	r1, r2
90018448:	428b      	cmp	r3, r1
9001844a:	da04      	bge.n	90018456 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001844c:	1a9b      	subs	r3, r3, r2
9001844e:	4a0c      	ldr	r2, [pc, #48]	@ (90018480 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
90018450:	210e      	movs	r1, #14
90018452:	6812      	ldr	r2, [r2, #0]
90018454:	e7f0      	b.n	90018438 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
90018456:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001845a:	4293      	cmp	r3, r2
9001845c:	d108      	bne.n	90018470 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001845e:	4b09      	ldr	r3, [pc, #36]	@ (90018484 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
90018460:	781b      	ldrb	r3, [r3, #0]
90018462:	b91b      	cbnz	r3, 9001846c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
90018464:	4b08      	ldr	r3, [pc, #32]	@ (90018488 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
90018466:	f9b3 0000 	ldrsh.w	r0, [r3]
9001846a:	4770      	bx	lr
9001846c:	4b07      	ldr	r3, [pc, #28]	@ (9001848c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001846e:	e7fa      	b.n	90018466 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
90018470:	2000      	movs	r0, #0
90018472:	4770      	bx	lr
90018474:	2001aac8 	.word	0x2001aac8
90018478:	2001aad0 	.word	0x2001aad0
9001847c:	2001aacc 	.word	0x2001aacc
90018480:	2001aab0 	.word	0x2001aab0
90018484:	2001aa36 	.word	0x2001aa36
90018488:	2001aa3a 	.word	0x2001aa3a
9001848c:	2001aa38 	.word	0x2001aa38

90018490 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
90018490:	4a22      	ldr	r2, [pc, #136]	@ (9001851c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
90018492:	b530      	push	{r4, r5, lr}
90018494:	880b      	ldrh	r3, [r1, #0]
90018496:	8812      	ldrh	r2, [r2, #0]
90018498:	4293      	cmp	r3, r2
9001849a:	d213      	bcs.n	900184c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001849c:	4a20      	ldr	r2, [pc, #128]	@ (90018520 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001849e:	2114      	movs	r1, #20
900184a0:	6812      	ldr	r2, [r2, #0]
900184a2:	fb01 2303 	mla	r3, r1, r3, r2
900184a6:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
900184aa:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
900184ae:	8a1a      	ldrh	r2, [r3, #16]
900184b0:	8a5b      	ldrh	r3, [r3, #18]
900184b2:	f3c2 020c 	ubfx	r2, r2, #0, #13
900184b6:	8004      	strh	r4, [r0, #0]
900184b8:	f3c3 030c 	ubfx	r3, r3, #0, #13
900184bc:	8041      	strh	r1, [r0, #2]
900184be:	8082      	strh	r2, [r0, #4]
900184c0:	80c3      	strh	r3, [r0, #6]
900184c2:	e024      	b.n	9001850e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
900184c4:	4917      	ldr	r1, [pc, #92]	@ (90018524 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
900184c6:	8809      	ldrh	r1, [r1, #0]
900184c8:	4411      	add	r1, r2
900184ca:	428b      	cmp	r3, r1
900184cc:	da10      	bge.n	900184f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
900184ce:	1a9b      	subs	r3, r3, r2
900184d0:	220e      	movs	r2, #14
900184d2:	4353      	muls	r3, r2
900184d4:	4a14      	ldr	r2, [pc, #80]	@ (90018528 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
900184d6:	6811      	ldr	r1, [r2, #0]
900184d8:	18ca      	adds	r2, r1, r3
900184da:	5ecd      	ldrsh	r5, [r1, r3]
900184dc:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
900184e0:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
900184e4:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
900184e8:	8005      	strh	r5, [r0, #0]
900184ea:	8044      	strh	r4, [r0, #2]
900184ec:	8081      	strh	r1, [r0, #4]
900184ee:	e7e7      	b.n	900184c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
900184f0:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
900184f4:	4293      	cmp	r3, r2
900184f6:	d10b      	bne.n	90018510 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
900184f8:	4b0c      	ldr	r3, [pc, #48]	@ (9001852c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
900184fa:	f9b3 1000 	ldrsh.w	r1, [r3]
900184fe:	4b0c      	ldr	r3, [pc, #48]	@ (90018530 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
90018500:	8081      	strh	r1, [r0, #4]
90018502:	f9b3 2000 	ldrsh.w	r2, [r3]
90018506:	2300      	movs	r3, #0
90018508:	80c2      	strh	r2, [r0, #6]
9001850a:	8003      	strh	r3, [r0, #0]
9001850c:	8043      	strh	r3, [r0, #2]
9001850e:	bd30      	pop	{r4, r5, pc}
90018510:	2300      	movs	r3, #0
90018512:	8003      	strh	r3, [r0, #0]
90018514:	8043      	strh	r3, [r0, #2]
90018516:	8083      	strh	r3, [r0, #4]
90018518:	e7d2      	b.n	900184c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001851a:	bf00      	nop
9001851c:	2001aac8 	.word	0x2001aac8
90018520:	2001aad0 	.word	0x2001aad0
90018524:	2001aacc 	.word	0x2001aacc
90018528:	2001aab0 	.word	0x2001aab0
9001852c:	2001aa32 	.word	0x2001aa32
90018530:	2001aa34 	.word	0x2001aa34

90018534 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
90018534:	4a17      	ldr	r2, [pc, #92]	@ (90018594 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
90018536:	8803      	ldrh	r3, [r0, #0]
90018538:	8812      	ldrh	r2, [r2, #0]
9001853a:	4293      	cmp	r3, r2
9001853c:	d213      	bcs.n	90018566 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001853e:	4a16      	ldr	r2, [pc, #88]	@ (90018598 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
90018540:	2114      	movs	r1, #20
90018542:	6812      	ldr	r2, [r2, #0]
90018544:	fb01 2303 	mla	r3, r1, r3, r2
90018548:	8a1a      	ldrh	r2, [r3, #16]
9001854a:	8919      	ldrh	r1, [r3, #8]
9001854c:	f3c2 020c 	ubfx	r2, r2, #0, #13
90018550:	428a      	cmp	r2, r1
90018552:	db1d      	blt.n	90018590 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90018554:	8a58      	ldrh	r0, [r3, #18]
90018556:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001855a:	895b      	ldrh	r3, [r3, #10]
9001855c:	4298      	cmp	r0, r3
9001855e:	bfac      	ite	ge
90018560:	2000      	movge	r0, #0
90018562:	2001      	movlt	r0, #1
90018564:	4770      	bx	lr
90018566:	490d      	ldr	r1, [pc, #52]	@ (9001859c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
90018568:	8809      	ldrh	r1, [r1, #0]
9001856a:	4411      	add	r1, r2
9001856c:	428b      	cmp	r3, r1
9001856e:	da0d      	bge.n	9001858c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
90018570:	1a9b      	subs	r3, r3, r2
90018572:	4a0b      	ldr	r2, [pc, #44]	@ (900185a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
90018574:	210e      	movs	r1, #14
90018576:	6812      	ldr	r2, [r2, #0]
90018578:	fb01 2303 	mla	r3, r1, r3, r2
9001857c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
90018580:	891a      	ldrh	r2, [r3, #8]
90018582:	4291      	cmp	r1, r2
90018584:	db04      	blt.n	90018590 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90018586:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001858a:	e7e6      	b.n	9001855a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001858c:	2000      	movs	r0, #0
9001858e:	4770      	bx	lr
90018590:	2001      	movs	r0, #1
90018592:	4770      	bx	lr
90018594:	2001aac8 	.word	0x2001aac8
90018598:	2001aad0 	.word	0x2001aad0
9001859c:	2001aacc 	.word	0x2001aacc
900185a0:	2001aab0 	.word	0x2001aab0

900185a4 <_ZNK8touchgfx6Bitmap7getDataEv>:
900185a4:	4a12      	ldr	r2, [pc, #72]	@ (900185f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
900185a6:	8803      	ldrh	r3, [r0, #0]
900185a8:	8811      	ldrh	r1, [r2, #0]
900185aa:	428b      	cmp	r3, r1
900185ac:	d20b      	bcs.n	900185c6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
900185ae:	4a11      	ldr	r2, [pc, #68]	@ (900185f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
900185b0:	6812      	ldr	r2, [r2, #0]
900185b2:	b112      	cbz	r2, 900185ba <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
900185b4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
900185b8:	b9c0      	cbnz	r0, 900185ec <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
900185ba:	4a0f      	ldr	r2, [pc, #60]	@ (900185f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
900185bc:	6811      	ldr	r1, [r2, #0]
900185be:	2214      	movs	r2, #20
900185c0:	4353      	muls	r3, r2
900185c2:	58c8      	ldr	r0, [r1, r3]
900185c4:	4770      	bx	lr
900185c6:	4a0d      	ldr	r2, [pc, #52]	@ (900185fc <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
900185c8:	8812      	ldrh	r2, [r2, #0]
900185ca:	440a      	add	r2, r1
900185cc:	4293      	cmp	r3, r2
900185ce:	da04      	bge.n	900185da <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
900185d0:	4a08      	ldr	r2, [pc, #32]	@ (900185f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
900185d2:	6812      	ldr	r2, [r2, #0]
900185d4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
900185d8:	4770      	bx	lr
900185da:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
900185de:	4293      	cmp	r3, r2
900185e0:	d103      	bne.n	900185ea <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
900185e2:	4b07      	ldr	r3, [pc, #28]	@ (90018600 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
900185e4:	681b      	ldr	r3, [r3, #0]
900185e6:	6c58      	ldr	r0, [r3, #68]	@ 0x44
900185e8:	4770      	bx	lr
900185ea:	2000      	movs	r0, #0
900185ec:	4770      	bx	lr
900185ee:	bf00      	nop
900185f0:	2001aac8 	.word	0x2001aac8
900185f4:	2001aaac 	.word	0x2001aaac
900185f8:	2001aad0 	.word	0x2001aad0
900185fc:	2001aacc 	.word	0x2001aacc
90018600:	2001aa40 	.word	0x2001aa40

90018604 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
90018604:	4b24      	ldr	r3, [pc, #144]	@ (90018698 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
90018606:	8802      	ldrh	r2, [r0, #0]
90018608:	8818      	ldrh	r0, [r3, #0]
9001860a:	4282      	cmp	r2, r0
9001860c:	d221      	bcs.n	90018652 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001860e:	4b23      	ldr	r3, [pc, #140]	@ (9001869c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
90018610:	6819      	ldr	r1, [r3, #0]
90018612:	2314      	movs	r3, #20
90018614:	fb03 1302 	mla	r3, r3, r2, r1
90018618:	6858      	ldr	r0, [r3, #4]
9001861a:	2800      	cmp	r0, #0
9001861c:	d03a      	beq.n	90018694 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001861e:	4920      	ldr	r1, [pc, #128]	@ (900186a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
90018620:	6809      	ldr	r1, [r1, #0]
90018622:	2900      	cmp	r1, #0
90018624:	d036      	beq.n	90018694 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
90018626:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001862a:	2900      	cmp	r1, #0
9001862c:	d032      	beq.n	90018694 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001862e:	891a      	ldrh	r2, [r3, #8]
90018630:	8958      	ldrh	r0, [r3, #10]
90018632:	4350      	muls	r0, r2
90018634:	7c5a      	ldrb	r2, [r3, #17]
90018636:	7cdb      	ldrb	r3, [r3, #19]
90018638:	0952      	lsrs	r2, r2, #5
9001863a:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001863e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
90018642:	2b0b      	cmp	r3, #11
90018644:	bf18      	it	ne
90018646:	0040      	lslne	r0, r0, #1
90018648:	3003      	adds	r0, #3
9001864a:	f020 0003 	bic.w	r0, r0, #3
9001864e:	4408      	add	r0, r1
90018650:	4770      	bx	lr
90018652:	4b14      	ldr	r3, [pc, #80]	@ (900186a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
90018654:	881b      	ldrh	r3, [r3, #0]
90018656:	4403      	add	r3, r0
90018658:	429a      	cmp	r2, r3
9001865a:	da1a      	bge.n	90018692 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001865c:	4b12      	ldr	r3, [pc, #72]	@ (900186a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001865e:	1a10      	subs	r0, r2, r0
90018660:	210e      	movs	r1, #14
90018662:	681b      	ldr	r3, [r3, #0]
90018664:	fb01 3000 	mla	r0, r1, r0, r3
90018668:	7b03      	ldrb	r3, [r0, #12]
9001866a:	f003 031f 	and.w	r3, r3, #31
9001866e:	2b0b      	cmp	r3, #11
90018670:	d10b      	bne.n	9001868a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
90018672:	8903      	ldrh	r3, [r0, #8]
90018674:	8940      	ldrh	r0, [r0, #10]
90018676:	4358      	muls	r0, r3
90018678:	4b09      	ldr	r3, [pc, #36]	@ (900186a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001867a:	3003      	adds	r0, #3
9001867c:	6819      	ldr	r1, [r3, #0]
9001867e:	f020 0303 	bic.w	r3, r0, #3
90018682:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
90018686:	4418      	add	r0, r3
90018688:	4770      	bx	lr
9001868a:	2b0d      	cmp	r3, #13
9001868c:	d101      	bne.n	90018692 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001868e:	300d      	adds	r0, #13
90018690:	4770      	bx	lr
90018692:	2000      	movs	r0, #0
90018694:	4770      	bx	lr
90018696:	bf00      	nop
90018698:	2001aac8 	.word	0x2001aac8
9001869c:	2001aad0 	.word	0x2001aad0
900186a0:	2001aaac 	.word	0x2001aaac
900186a4:	2001aacc 	.word	0x2001aacc
900186a8:	2001aab0 	.word	0x2001aab0

900186ac <_ZNK8touchgfx6Bitmap9getFormatEv>:
900186ac:	4b1f      	ldr	r3, [pc, #124]	@ (9001872c <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
900186ae:	b510      	push	{r4, lr}
900186b0:	8802      	ldrh	r2, [r0, #0]
900186b2:	881b      	ldrh	r3, [r3, #0]
900186b4:	429a      	cmp	r2, r3
900186b6:	d21a      	bcs.n	900186ee <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
900186b8:	4b1d      	ldr	r3, [pc, #116]	@ (90018730 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
900186ba:	2114      	movs	r1, #20
900186bc:	681b      	ldr	r3, [r3, #0]
900186be:	fb01 3102 	mla	r1, r1, r2, r3
900186c2:	7c4b      	ldrb	r3, [r1, #17]
900186c4:	0958      	lsrs	r0, r3, #5
900186c6:	7ccb      	ldrb	r3, [r1, #19]
900186c8:	491a      	ldr	r1, [pc, #104]	@ (90018734 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
900186ca:	f3c3 1342 	ubfx	r3, r3, #5, #3
900186ce:	6809      	ldr	r1, [r1, #0]
900186d0:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
900186d4:	b2d8      	uxtb	r0, r3
900186d6:	b149      	cbz	r1, 900186ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
900186d8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
900186dc:	b132      	cbz	r2, 900186ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
900186de:	2b0e      	cmp	r3, #14
900186e0:	d021      	beq.n	90018726 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
900186e2:	280f      	cmp	r0, #15
900186e4:	d01d      	beq.n	90018722 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
900186e6:	2810      	cmp	r0, #16
900186e8:	bf08      	it	eq
900186ea:	2002      	moveq	r0, #2
900186ec:	bd10      	pop	{r4, pc}
900186ee:	4912      	ldr	r1, [pc, #72]	@ (90018738 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
900186f0:	8809      	ldrh	r1, [r1, #0]
900186f2:	4419      	add	r1, r3
900186f4:	428a      	cmp	r2, r1
900186f6:	da09      	bge.n	9001870c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
900186f8:	1ad3      	subs	r3, r2, r3
900186fa:	4a10      	ldr	r2, [pc, #64]	@ (9001873c <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
900186fc:	210e      	movs	r1, #14
900186fe:	6812      	ldr	r2, [r2, #0]
90018700:	fb01 2303 	mla	r3, r1, r3, r2
90018704:	7b18      	ldrb	r0, [r3, #12]
90018706:	f000 001f 	and.w	r0, r0, #31
9001870a:	e7ef      	b.n	900186ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001870c:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
90018710:	429a      	cmp	r2, r3
90018712:	d108      	bne.n	90018726 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
90018714:	f7ea faf4 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
90018718:	6803      	ldr	r3, [r0, #0]
9001871a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001871e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90018720:	4718      	bx	r3
90018722:	2001      	movs	r0, #1
90018724:	e7e2      	b.n	900186ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
90018726:	2000      	movs	r0, #0
90018728:	e7e0      	b.n	900186ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001872a:	bf00      	nop
9001872c:	2001aac8 	.word	0x2001aac8
90018730:	2001aad0 	.word	0x2001aad0
90018734:	2001aaac 	.word	0x2001aaac
90018738:	2001aacc 	.word	0x2001aacc
9001873c:	2001aab0 	.word	0x2001aab0

90018740 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
90018740:	2010      	movs	r0, #16
90018742:	4770      	bx	lr

90018744 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
90018744:	2000      	movs	r0, #0
90018746:	4770      	bx	lr

90018748 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
90018748:	4b02      	ldr	r3, [pc, #8]	@ (90018754 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001874a:	8818      	ldrh	r0, [r3, #0]
9001874c:	0040      	lsls	r0, r0, #1
9001874e:	b280      	uxth	r0, r0
90018750:	4770      	bx	lr
90018752:	bf00      	nop
90018754:	2001aa38 	.word	0x2001aa38

90018758 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
90018758:	2bff      	cmp	r3, #255	@ 0xff
9001875a:	d05e      	beq.n	9001881a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
9001875c:	2a0b      	cmp	r2, #11
9001875e:	d058      	beq.n	90018812 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
90018760:	d80e      	bhi.n	90018780 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
90018762:	2a03      	cmp	r2, #3
90018764:	d04d      	beq.n	90018802 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
90018766:	d804      	bhi.n	90018772 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
90018768:	2a01      	cmp	r2, #1
9001876a:	d04c      	beq.n	90018806 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
9001876c:	d94d      	bls.n	9001880a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
9001876e:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
90018770:	e031      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018772:	2a09      	cmp	r2, #9
90018774:	d04d      	beq.n	90018812 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
90018776:	d84a      	bhi.n	9001880e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
90018778:	2a08      	cmp	r2, #8
9001877a:	d048      	beq.n	9001880e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001877c:	2300      	movs	r3, #0
9001877e:	e02a      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018780:	2a2f      	cmp	r2, #47	@ 0x2f
90018782:	d02c      	beq.n	900187de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
90018784:	d811      	bhi.n	900187aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
90018786:	2a2d      	cmp	r2, #45	@ 0x2d
90018788:	d018      	beq.n	900187bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
9001878a:	d831      	bhi.n	900187f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
9001878c:	2a2c      	cmp	r2, #44	@ 0x2c
9001878e:	d1f5      	bne.n	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018790:	684a      	ldr	r2, [r1, #4]
90018792:	7813      	ldrb	r3, [r2, #0]
90018794:	7852      	ldrb	r2, [r2, #1]
90018796:	2a00      	cmp	r2, #0
90018798:	d1f0      	bne.n	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001879a:	2b01      	cmp	r3, #1
9001879c:	d01d      	beq.n	900187da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001879e:	2b00      	cmp	r3, #0
900187a0:	d02d      	beq.n	900187fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
900187a2:	2b02      	cmp	r3, #2
900187a4:	d1ea      	bne.n	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900187a6:	68c3      	ldr	r3, [r0, #12]
900187a8:	e015      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900187aa:	2a31      	cmp	r2, #49	@ 0x31
900187ac:	d004      	beq.n	900187b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
900187ae:	d332      	bcc.n	90018816 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
900187b0:	2a32      	cmp	r2, #50	@ 0x32
900187b2:	d030      	beq.n	90018816 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
900187b4:	2a33      	cmp	r2, #51	@ 0x33
900187b6:	d1e1      	bne.n	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900187b8:	6f43      	ldr	r3, [r0, #116]	@ 0x74
900187ba:	e00c      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900187bc:	684a      	ldr	r2, [r1, #4]
900187be:	7813      	ldrb	r3, [r2, #0]
900187c0:	7852      	ldrb	r2, [r2, #1]
900187c2:	2a00      	cmp	r2, #0
900187c4:	d1da      	bne.n	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900187c6:	2b01      	cmp	r3, #1
900187c8:	d004      	beq.n	900187d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
900187ca:	d30f      	bcc.n	900187ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
900187cc:	2b02      	cmp	r3, #2
900187ce:	d1d5      	bne.n	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900187d0:	6943      	ldr	r3, [r0, #20]
900187d2:	e000      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900187d4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900187d6:	4618      	mov	r0, r3
900187d8:	4770      	bx	lr
900187da:	69c3      	ldr	r3, [r0, #28]
900187dc:	e7fb      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900187de:	684b      	ldr	r3, [r1, #4]
900187e0:	781a      	ldrb	r2, [r3, #0]
900187e2:	785b      	ldrb	r3, [r3, #1]
900187e4:	2b00      	cmp	r3, #0
900187e6:	d1c9      	bne.n	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900187e8:	2a00      	cmp	r2, #0
900187ea:	d1f4      	bne.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900187ec:	6b43      	ldr	r3, [r0, #52]	@ 0x34
900187ee:	e7f2      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900187f0:	684b      	ldr	r3, [r1, #4]
900187f2:	781a      	ldrb	r2, [r3, #0]
900187f4:	785b      	ldrb	r3, [r3, #1]
900187f6:	2b00      	cmp	r3, #0
900187f8:	d1c0      	bne.n	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900187fa:	2a00      	cmp	r2, #0
900187fc:	d1eb      	bne.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900187fe:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90018800:	e7e9      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018802:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
90018804:	e7e7      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018806:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90018808:	e7e5      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001880a:	6c43      	ldr	r3, [r0, #68]	@ 0x44
9001880c:	e7e3      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001880e:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
90018810:	e7e1      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018812:	6e43      	ldr	r3, [r0, #100]	@ 0x64
90018814:	e7df      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018816:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
90018818:	e7dd      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001881a:	2a0b      	cmp	r2, #11
9001881c:	d059      	beq.n	900188d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001881e:	d80e      	bhi.n	9001883e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
90018820:	2a03      	cmp	r2, #3
90018822:	d050      	beq.n	900188c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
90018824:	d804      	bhi.n	90018830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
90018826:	2a01      	cmp	r2, #1
90018828:	d04f      	beq.n	900188ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
9001882a:	d950      	bls.n	900188ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
9001882c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001882e:	e7d2      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018830:	2a09      	cmp	r2, #9
90018832:	d04e      	beq.n	900188d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
90018834:	d801      	bhi.n	9001883a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
90018836:	2a08      	cmp	r2, #8
90018838:	d1a0      	bne.n	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001883a:	6e03      	ldr	r3, [r0, #96]	@ 0x60
9001883c:	e7cb      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001883e:	2a2f      	cmp	r2, #47	@ 0x2f
90018840:	d02d      	beq.n	9001889e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
90018842:	d811      	bhi.n	90018868 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
90018844:	2a2d      	cmp	r2, #45	@ 0x2d
90018846:	d018      	beq.n	9001887a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
90018848:	d833      	bhi.n	900188b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
9001884a:	2a2c      	cmp	r2, #44	@ 0x2c
9001884c:	d196      	bne.n	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001884e:	684a      	ldr	r2, [r1, #4]
90018850:	7813      	ldrb	r3, [r2, #0]
90018852:	7852      	ldrb	r2, [r2, #1]
90018854:	2a00      	cmp	r2, #0
90018856:	d191      	bne.n	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018858:	2b01      	cmp	r3, #1
9001885a:	d01e      	beq.n	9001889a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001885c:	2b00      	cmp	r3, #0
9001885e:	d030      	beq.n	900188c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
90018860:	2b02      	cmp	r3, #2
90018862:	d18b      	bne.n	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018864:	6903      	ldr	r3, [r0, #16]
90018866:	e7b6      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018868:	2a31      	cmp	r2, #49	@ 0x31
9001886a:	d004      	beq.n	90018876 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
9001886c:	d333      	bcc.n	900188d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001886e:	2a32      	cmp	r2, #50	@ 0x32
90018870:	d031      	beq.n	900188d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
90018872:	2a33      	cmp	r2, #51	@ 0x33
90018874:	d182      	bne.n	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018876:	6f83      	ldr	r3, [r0, #120]	@ 0x78
90018878:	e7ad      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001887a:	684a      	ldr	r2, [r1, #4]
9001887c:	7813      	ldrb	r3, [r2, #0]
9001887e:	7852      	ldrb	r2, [r2, #1]
90018880:	2a00      	cmp	r2, #0
90018882:	f47f af7b 	bne.w	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018886:	2b01      	cmp	r3, #1
90018888:	d005      	beq.n	90018896 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001888a:	d310      	bcc.n	900188ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
9001888c:	2b02      	cmp	r3, #2
9001888e:	f47f af75 	bne.w	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018892:	6983      	ldr	r3, [r0, #24]
90018894:	e79f      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018896:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90018898:	e79d      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001889a:	6a03      	ldr	r3, [r0, #32]
9001889c:	e79b      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001889e:	684b      	ldr	r3, [r1, #4]
900188a0:	781a      	ldrb	r2, [r3, #0]
900188a2:	785b      	ldrb	r3, [r3, #1]
900188a4:	2b00      	cmp	r3, #0
900188a6:	f47f af69 	bne.w	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900188aa:	2a00      	cmp	r2, #0
900188ac:	d193      	bne.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900188ae:	6b83      	ldr	r3, [r0, #56]	@ 0x38
900188b0:	e791      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900188b2:	684b      	ldr	r3, [r1, #4]
900188b4:	781a      	ldrb	r2, [r3, #0]
900188b6:	785b      	ldrb	r3, [r3, #1]
900188b8:	2b00      	cmp	r3, #0
900188ba:	f47f af5f 	bne.w	9001877c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900188be:	2a00      	cmp	r2, #0
900188c0:	d189      	bne.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900188c2:	6b03      	ldr	r3, [r0, #48]	@ 0x30
900188c4:	e787      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900188c6:	6d03      	ldr	r3, [r0, #80]	@ 0x50
900188c8:	e785      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900188ca:	6d83      	ldr	r3, [r0, #88]	@ 0x58
900188cc:	e783      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900188ce:	6c83      	ldr	r3, [r0, #72]	@ 0x48
900188d0:	e781      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900188d2:	6e83      	ldr	r3, [r0, #104]	@ 0x68
900188d4:	e77f      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900188d6:	6f03      	ldr	r3, [r0, #112]	@ 0x70
900188d8:	e77d      	b.n	900187d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

900188da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900188da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900188de:	b087      	sub	sp, #28
900188e0:	9815      	ldr	r0, [sp, #84]	@ 0x54
900188e2:	9205      	str	r2, [sp, #20]
900188e4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
900188e8:	9101      	str	r1, [sp, #4]
900188ea:	9202      	str	r2, [sp, #8]
900188ec:	6841      	ldr	r1, [r0, #4]
900188ee:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
900188f2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
900188f6:	fb01 2404 	mla	r4, r1, r4, r2
900188fa:	6802      	ldr	r2, [r0, #0]
900188fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018900:	f8de 2000 	ldr.w	r2, [lr]
90018904:	9203      	str	r2, [sp, #12]
90018906:	f8de 2004 	ldr.w	r2, [lr, #4]
9001890a:	3204      	adds	r2, #4
9001890c:	9204      	str	r2, [sp, #16]
9001890e:	9a02      	ldr	r2, [sp, #8]
90018910:	43d6      	mvns	r6, r2
90018912:	b2f6      	uxtb	r6, r6
90018914:	9a01      	ldr	r2, [sp, #4]
90018916:	2a00      	cmp	r2, #0
90018918:	dc03      	bgt.n	90018922 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001891a:	9a05      	ldr	r2, [sp, #20]
9001891c:	2a00      	cmp	r2, #0
9001891e:	f340 8129 	ble.w	90018b74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90018922:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90018924:	f9be c008 	ldrsh.w	ip, [lr, #8]
90018928:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001892c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001892e:	f9be 700c 	ldrsh.w	r7, [lr, #12]
90018932:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90018936:	2b00      	cmp	r3, #0
90018938:	dd0e      	ble.n	90018958 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001893a:	1408      	asrs	r0, r1, #16
9001893c:	d405      	bmi.n	9001894a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001893e:	4560      	cmp	r0, ip
90018940:	da03      	bge.n	9001894a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90018942:	1410      	asrs	r0, r2, #16
90018944:	d401      	bmi.n	9001894a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90018946:	42b8      	cmp	r0, r7
90018948:	db07      	blt.n	9001895a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001894a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001894c:	3b01      	subs	r3, #1
9001894e:	3402      	adds	r4, #2
90018950:	4401      	add	r1, r0
90018952:	9814      	ldr	r0, [sp, #80]	@ 0x50
90018954:	4402      	add	r2, r0
90018956:	e7ee      	b.n	90018936 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
90018958:	d071      	beq.n	90018a3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001895a:	1e58      	subs	r0, r3, #1
9001895c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001895e:	fb05 1500 	mla	r5, r5, r0, r1
90018962:	142d      	asrs	r5, r5, #16
90018964:	d45f      	bmi.n	90018a26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90018966:	4565      	cmp	r5, ip
90018968:	da5d      	bge.n	90018a26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001896a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001896c:	fb05 2000 	mla	r0, r5, r0, r2
90018970:	1400      	asrs	r0, r0, #16
90018972:	d458      	bmi.n	90018a26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90018974:	42b8      	cmp	r0, r7
90018976:	da56      	bge.n	90018a26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90018978:	4699      	mov	r9, r3
9001897a:	46a2      	mov	sl, r4
9001897c:	f8bd b008 	ldrh.w	fp, [sp, #8]
90018980:	f1b9 0f00 	cmp.w	r9, #0
90018984:	dd57      	ble.n	90018a36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
90018986:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001898a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001898e:	9803      	ldr	r0, [sp, #12]
90018990:	140d      	asrs	r5, r1, #16
90018992:	f109 39ff 	add.w	r9, r9, #4294967295
90018996:	fb07 000c 	mla	r0, r7, ip, r0
9001899a:	5d40      	ldrb	r0, [r0, r5]
9001899c:	9d04      	ldr	r5, [sp, #16]
9001899e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
900189a2:	f8ba 5000 	ldrh.w	r5, [sl]
900189a6:	ea4f 2c20 	mov.w	ip, r0, asr #8
900189aa:	122f      	asrs	r7, r5, #8
900189ac:	ea4f 08e5 	mov.w	r8, r5, asr #3
900189b0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900189b4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900189b8:	00ed      	lsls	r5, r5, #3
900189ba:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
900189be:	fb17 f706 	smulbb	r7, r7, r6
900189c2:	b2ed      	uxtb	r5, r5
900189c4:	fb18 f806 	smulbb	r8, r8, r6
900189c8:	fb0c 7c0b 	mla	ip, ip, fp, r7
900189cc:	10c7      	asrs	r7, r0, #3
900189ce:	fb15 f506 	smulbb	r5, r5, r6
900189d2:	00c0      	lsls	r0, r0, #3
900189d4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900189d8:	fa1f fc8c 	uxth.w	ip, ip
900189dc:	b2c0      	uxtb	r0, r0
900189de:	fb07 870b 	mla	r7, r7, fp, r8
900189e2:	fb00 500b 	mla	r0, r0, fp, r5
900189e6:	f10c 0501 	add.w	r5, ip, #1
900189ea:	b2bf      	uxth	r7, r7
900189ec:	b280      	uxth	r0, r0
900189ee:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
900189f2:	f107 0801 	add.w	r8, r7, #1
900189f6:	1c45      	adds	r5, r0, #1
900189f8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
900189fc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90018a00:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90018a04:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90018a06:	ea4f 1858 	mov.w	r8, r8, lsr #5
90018a0a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90018a0e:	4401      	add	r1, r0
90018a10:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90018a14:	9814      	ldr	r0, [sp, #80]	@ 0x50
90018a16:	ea45 0c0c 	orr.w	ip, r5, ip
90018a1a:	4402      	add	r2, r0
90018a1c:	ea4c 0c08 	orr.w	ip, ip, r8
90018a20:	f82a cb02 	strh.w	ip, [sl], #2
90018a24:	e7ac      	b.n	90018980 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
90018a26:	f04f 0800 	mov.w	r8, #0
90018a2a:	f8bd a008 	ldrh.w	sl, [sp, #8]
90018a2e:	eb03 0008 	add.w	r0, r3, r8
90018a32:	2800      	cmp	r0, #0
90018a34:	dc41      	bgt.n	90018aba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90018a36:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018a3a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018a3e:	9b01      	ldr	r3, [sp, #4]
90018a40:	2b00      	cmp	r3, #0
90018a42:	f340 8097 	ble.w	90018b74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90018a46:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90018a4a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90018a4c:	ee30 0a04 	vadd.f32	s0, s0, s8
90018a50:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018a54:	eef0 6a62 	vmov.f32	s13, s5
90018a58:	eec7 7a00 	vdiv.f32	s15, s14, s0
90018a5c:	ee31 1a05 	vadd.f32	s2, s2, s10
90018a60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018a64:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
90018a68:	eef0 6a43 	vmov.f32	s13, s6
90018a6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018a70:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
90018a74:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018a78:	ee61 7a27 	vmul.f32	s15, s2, s15
90018a7c:	ee77 2a62 	vsub.f32	s5, s14, s5
90018a80:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018a84:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018a88:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018a8c:	ee12 2a90 	vmov	r2, s5
90018a90:	eef0 2a47 	vmov.f32	s5, s14
90018a94:	fb92 f3f3 	sdiv	r3, r2, r3
90018a98:	ee13 2a10 	vmov	r2, s6
90018a9c:	9313      	str	r3, [sp, #76]	@ 0x4c
90018a9e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90018aa0:	eeb0 3a67 	vmov.f32	s6, s15
90018aa4:	fb92 f3f3 	sdiv	r3, r2, r3
90018aa8:	9314      	str	r3, [sp, #80]	@ 0x50
90018aaa:	9b01      	ldr	r3, [sp, #4]
90018aac:	9a05      	ldr	r2, [sp, #20]
90018aae:	3b01      	subs	r3, #1
90018ab0:	9301      	str	r3, [sp, #4]
90018ab2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90018ab4:	bf08      	it	eq
90018ab6:	4613      	moveq	r3, r2
90018ab8:	e72c      	b.n	90018914 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90018aba:	140f      	asrs	r7, r1, #16
90018abc:	d453      	bmi.n	90018b66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90018abe:	f8de 5008 	ldr.w	r5, [lr, #8]
90018ac2:	42bd      	cmp	r5, r7
90018ac4:	dd4f      	ble.n	90018b66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90018ac6:	ea5f 4c22 	movs.w	ip, r2, asr #16
90018aca:	d44c      	bmi.n	90018b66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90018acc:	f8de 000c 	ldr.w	r0, [lr, #12]
90018ad0:	4560      	cmp	r0, ip
90018ad2:	dd48      	ble.n	90018b66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90018ad4:	9803      	ldr	r0, [sp, #12]
90018ad6:	b22d      	sxth	r5, r5
90018ad8:	fb0c 0505 	mla	r5, ip, r5, r0
90018adc:	5de8      	ldrb	r0, [r5, r7]
90018ade:	9d04      	ldr	r5, [sp, #16]
90018ae0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
90018ae4:	f06f 0501 	mvn.w	r5, #1
90018ae8:	fb05 fb08 	mul.w	fp, r5, r8
90018aec:	ea4f 2c20 	mov.w	ip, r0, asr #8
90018af0:	f834 500b 	ldrh.w	r5, [r4, fp]
90018af4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90018af8:	122f      	asrs	r7, r5, #8
90018afa:	ea4f 09e5 	mov.w	r9, r5, asr #3
90018afe:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90018b02:	00ed      	lsls	r5, r5, #3
90018b04:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
90018b08:	fb17 f706 	smulbb	r7, r7, r6
90018b0c:	b2ed      	uxtb	r5, r5
90018b0e:	fb19 f906 	smulbb	r9, r9, r6
90018b12:	fb0c 7c0a 	mla	ip, ip, sl, r7
90018b16:	10c7      	asrs	r7, r0, #3
90018b18:	fb15 f506 	smulbb	r5, r5, r6
90018b1c:	00c0      	lsls	r0, r0, #3
90018b1e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90018b22:	fa1f fc8c 	uxth.w	ip, ip
90018b26:	b2c0      	uxtb	r0, r0
90018b28:	fb07 970a 	mla	r7, r7, sl, r9
90018b2c:	fb00 500a 	mla	r0, r0, sl, r5
90018b30:	f10c 0501 	add.w	r5, ip, #1
90018b34:	b2bf      	uxth	r7, r7
90018b36:	b280      	uxth	r0, r0
90018b38:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90018b3c:	f107 0901 	add.w	r9, r7, #1
90018b40:	1c45      	adds	r5, r0, #1
90018b42:	eb09 2917 	add.w	r9, r9, r7, lsr #8
90018b46:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90018b4a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90018b4e:	ea4f 1959 	mov.w	r9, r9, lsr #5
90018b52:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90018b56:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90018b5a:	ea45 0c0c 	orr.w	ip, r5, ip
90018b5e:	ea4c 0c09 	orr.w	ip, ip, r9
90018b62:	f824 c00b 	strh.w	ip, [r4, fp]
90018b66:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90018b68:	f108 38ff 	add.w	r8, r8, #4294967295
90018b6c:	4401      	add	r1, r0
90018b6e:	9814      	ldr	r0, [sp, #80]	@ 0x50
90018b70:	4402      	add	r2, r0
90018b72:	e75c      	b.n	90018a2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90018b74:	b007      	add	sp, #28
90018b76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90018b7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018b7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018b7e:	b085      	sub	sp, #20
90018b80:	4693      	mov	fp, r2
90018b82:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90018b86:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
90018b88:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90018b8a:	6870      	ldr	r0, [r6, #4]
90018b8c:	9100      	str	r1, [sp, #0]
90018b8e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
90018b92:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
90018b96:	fb00 2404 	mla	r4, r0, r4, r2
90018b9a:	6832      	ldr	r2, [r6, #0]
90018b9c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018ba0:	682a      	ldr	r2, [r5, #0]
90018ba2:	9201      	str	r2, [sp, #4]
90018ba4:	686a      	ldr	r2, [r5, #4]
90018ba6:	3204      	adds	r2, #4
90018ba8:	9202      	str	r2, [sp, #8]
90018baa:	9a00      	ldr	r2, [sp, #0]
90018bac:	2a00      	cmp	r2, #0
90018bae:	dc03      	bgt.n	90018bb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90018bb0:	f1bb 0f00 	cmp.w	fp, #0
90018bb4:	f340 80a0 	ble.w	90018cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
90018bb8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90018bba:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90018bbe:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
90018bc2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90018bc4:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90018bc8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90018bcc:	2b00      	cmp	r3, #0
90018bce:	dd0c      	ble.n	90018bea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90018bd0:	1406      	asrs	r6, r0, #16
90018bd2:	d405      	bmi.n	90018be0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90018bd4:	454e      	cmp	r6, r9
90018bd6:	da03      	bge.n	90018be0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90018bd8:	1416      	asrs	r6, r2, #16
90018bda:	d401      	bmi.n	90018be0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90018bdc:	4546      	cmp	r6, r8
90018bde:	db05      	blt.n	90018bec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018be0:	4470      	add	r0, lr
90018be2:	4462      	add	r2, ip
90018be4:	3b01      	subs	r3, #1
90018be6:	3402      	adds	r4, #2
90018be8:	e7f0      	b.n	90018bcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90018bea:	d00f      	beq.n	90018c0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90018bec:	1e5e      	subs	r6, r3, #1
90018bee:	fb0e 0706 	mla	r7, lr, r6, r0
90018bf2:	143f      	asrs	r7, r7, #16
90018bf4:	d541      	bpl.n	90018c7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
90018bf6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
90018bfa:	4698      	mov	r8, r3
90018bfc:	9603      	str	r6, [sp, #12]
90018bfe:	f1b8 0f00 	cmp.w	r8, #0
90018c02:	dc59      	bgt.n	90018cb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90018c04:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018c08:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018c0c:	9b00      	ldr	r3, [sp, #0]
90018c0e:	2b00      	cmp	r3, #0
90018c10:	dd72      	ble.n	90018cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
90018c12:	ee30 0a04 	vadd.f32	s0, s0, s8
90018c16:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90018c18:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018c1c:	eeb0 6a62 	vmov.f32	s12, s5
90018c20:	eec6 7a80 	vdiv.f32	s15, s13, s0
90018c24:	ee31 1a05 	vadd.f32	s2, s2, s10
90018c28:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018c2c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
90018c30:	eeb0 6a43 	vmov.f32	s12, s6
90018c34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018c38:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
90018c3c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018c40:	ee61 7a27 	vmul.f32	s15, s2, s15
90018c44:	ee77 2a62 	vsub.f32	s5, s14, s5
90018c48:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018c4c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018c50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018c54:	ee12 2a90 	vmov	r2, s5
90018c58:	eef0 2a47 	vmov.f32	s5, s14
90018c5c:	fb92 fef3 	sdiv	lr, r2, r3
90018c60:	ee13 2a10 	vmov	r2, s6
90018c64:	eeb0 3a67 	vmov.f32	s6, s15
90018c68:	fb92 fcf3 	sdiv	ip, r2, r3
90018c6c:	9b00      	ldr	r3, [sp, #0]
90018c6e:	3b01      	subs	r3, #1
90018c70:	9300      	str	r3, [sp, #0]
90018c72:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90018c74:	bf08      	it	eq
90018c76:	465b      	moveq	r3, fp
90018c78:	e797      	b.n	90018baa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90018c7a:	454f      	cmp	r7, r9
90018c7c:	dabb      	bge.n	90018bf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018c7e:	fb0c 2606 	mla	r6, ip, r6, r2
90018c82:	1436      	asrs	r6, r6, #16
90018c84:	d4b7      	bmi.n	90018bf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018c86:	4546      	cmp	r6, r8
90018c88:	dab5      	bge.n	90018bf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018c8a:	461e      	mov	r6, r3
90018c8c:	46a0      	mov	r8, r4
90018c8e:	2e00      	cmp	r6, #0
90018c90:	ddb8      	ble.n	90018c04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90018c92:	1417      	asrs	r7, r2, #16
90018c94:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90018c98:	9901      	ldr	r1, [sp, #4]
90018c9a:	ea4f 4920 	mov.w	r9, r0, asr #16
90018c9e:	4462      	add	r2, ip
90018ca0:	4470      	add	r0, lr
90018ca2:	fb0a 1707 	mla	r7, sl, r7, r1
90018ca6:	9902      	ldr	r1, [sp, #8]
90018ca8:	3e01      	subs	r6, #1
90018caa:	f817 7009 	ldrb.w	r7, [r7, r9]
90018cae:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
90018cb2:	f828 7b02 	strh.w	r7, [r8], #2
90018cb6:	e7ea      	b.n	90018c8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
90018cb8:	ea5f 4920 	movs.w	r9, r0, asr #16
90018cbc:	d417      	bmi.n	90018cee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018cbe:	68ae      	ldr	r6, [r5, #8]
90018cc0:	454e      	cmp	r6, r9
90018cc2:	dd14      	ble.n	90018cee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018cc4:	ea5f 4a22 	movs.w	sl, r2, asr #16
90018cc8:	d411      	bmi.n	90018cee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018cca:	68ef      	ldr	r7, [r5, #12]
90018ccc:	4557      	cmp	r7, sl
90018cce:	dd0e      	ble.n	90018cee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018cd0:	9f01      	ldr	r7, [sp, #4]
90018cd2:	b236      	sxth	r6, r6
90018cd4:	f06f 0101 	mvn.w	r1, #1
90018cd8:	fb0a 7606 	mla	r6, sl, r6, r7
90018cdc:	9f02      	ldr	r7, [sp, #8]
90018cde:	f816 6009 	ldrb.w	r6, [r6, r9]
90018ce2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
90018ce6:	fb01 f608 	mul.w	r6, r1, r8
90018cea:	9903      	ldr	r1, [sp, #12]
90018cec:	538f      	strh	r7, [r1, r6]
90018cee:	4470      	add	r0, lr
90018cf0:	4462      	add	r2, ip
90018cf2:	f108 38ff 	add.w	r8, r8, #4294967295
90018cf6:	e782      	b.n	90018bfe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90018cf8:	b005      	add	sp, #20
90018cfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90018cfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018cfe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018d02:	b087      	sub	sp, #28
90018d04:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90018d06:	9205      	str	r2, [sp, #20]
90018d08:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90018d0c:	9102      	str	r1, [sp, #8]
90018d0e:	9203      	str	r2, [sp, #12]
90018d10:	6861      	ldr	r1, [r4, #4]
90018d12:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
90018d16:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
90018d1a:	fb01 2000 	mla	r0, r1, r0, r2
90018d1e:	6822      	ldr	r2, [r4, #0]
90018d20:	eb02 0240 	add.w	r2, r2, r0, lsl #1
90018d24:	9200      	str	r2, [sp, #0]
90018d26:	f8dc 2000 	ldr.w	r2, [ip]
90018d2a:	9204      	str	r2, [sp, #16]
90018d2c:	f8dc 2004 	ldr.w	r2, [ip, #4]
90018d30:	3204      	adds	r2, #4
90018d32:	9201      	str	r2, [sp, #4]
90018d34:	9a03      	ldr	r2, [sp, #12]
90018d36:	43d5      	mvns	r5, r2
90018d38:	b2ed      	uxtb	r5, r5
90018d3a:	9a02      	ldr	r2, [sp, #8]
90018d3c:	2a00      	cmp	r2, #0
90018d3e:	dc03      	bgt.n	90018d48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90018d40:	9a05      	ldr	r2, [sp, #20]
90018d42:	2a00      	cmp	r2, #0
90018d44:	f340 812c 	ble.w	90018fa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90018d48:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90018d4a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
90018d4e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
90018d52:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90018d54:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
90018d58:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90018d5c:	2b00      	cmp	r3, #0
90018d5e:	dd10      	ble.n	90018d82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90018d60:	140c      	asrs	r4, r1, #16
90018d62:	d405      	bmi.n	90018d70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018d64:	4574      	cmp	r4, lr
90018d66:	da03      	bge.n	90018d70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018d68:	1414      	asrs	r4, r2, #16
90018d6a:	d401      	bmi.n	90018d70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018d6c:	42bc      	cmp	r4, r7
90018d6e:	db09      	blt.n	90018d84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90018d70:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90018d72:	3b01      	subs	r3, #1
90018d74:	9800      	ldr	r0, [sp, #0]
90018d76:	4421      	add	r1, r4
90018d78:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90018d7a:	3002      	adds	r0, #2
90018d7c:	4422      	add	r2, r4
90018d7e:	9000      	str	r0, [sp, #0]
90018d80:	e7ec      	b.n	90018d5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
90018d82:	d071      	beq.n	90018e68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
90018d84:	1e5c      	subs	r4, r3, #1
90018d86:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
90018d88:	fb06 1604 	mla	r6, r6, r4, r1
90018d8c:	1436      	asrs	r6, r6, #16
90018d8e:	d45d      	bmi.n	90018e4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018d90:	4576      	cmp	r6, lr
90018d92:	da5b      	bge.n	90018e4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018d94:	9e14      	ldr	r6, [sp, #80]	@ 0x50
90018d96:	fb06 2404 	mla	r4, r6, r4, r2
90018d9a:	1424      	asrs	r4, r4, #16
90018d9c:	d456      	bmi.n	90018e4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018d9e:	42bc      	cmp	r4, r7
90018da0:	da54      	bge.n	90018e4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018da2:	4698      	mov	r8, r3
90018da4:	f8dd 9000 	ldr.w	r9, [sp]
90018da8:	f8bd a00c 	ldrh.w	sl, [sp, #12]
90018dac:	f1b8 0f00 	cmp.w	r8, #0
90018db0:	dd54      	ble.n	90018e5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
90018db2:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
90018db6:	1414      	asrs	r4, r2, #16
90018db8:	9804      	ldr	r0, [sp, #16]
90018dba:	140e      	asrs	r6, r1, #16
90018dbc:	f108 38ff 	add.w	r8, r8, #4294967295
90018dc0:	fb07 0404 	mla	r4, r7, r4, r0
90018dc4:	9801      	ldr	r0, [sp, #4]
90018dc6:	f814 e006 	ldrb.w	lr, [r4, r6]
90018dca:	f8b9 4000 	ldrh.w	r4, [r9]
90018dce:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90018dd2:	1227      	asrs	r7, r4, #8
90018dd4:	eb00 0b0e 	add.w	fp, r0, lr
90018dd8:	f810 e00e 	ldrb.w	lr, [r0, lr]
90018ddc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90018de0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90018de2:	f89b 6002 	ldrb.w	r6, [fp, #2]
90018de6:	f89b b001 	ldrb.w	fp, [fp, #1]
90018dea:	4401      	add	r1, r0
90018dec:	fb16 f60a 	smulbb	r6, r6, sl
90018df0:	9814      	ldr	r0, [sp, #80]	@ 0x50
90018df2:	fb1b fb0a 	smulbb	fp, fp, sl
90018df6:	fb07 6705 	mla	r7, r7, r5, r6
90018dfa:	10e6      	asrs	r6, r4, #3
90018dfc:	00e4      	lsls	r4, r4, #3
90018dfe:	4402      	add	r2, r0
90018e00:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90018e04:	b2bf      	uxth	r7, r7
90018e06:	b2e4      	uxtb	r4, r4
90018e08:	fb06 b605 	mla	r6, r6, r5, fp
90018e0c:	fb14 f405 	smulbb	r4, r4, r5
90018e10:	b2b6      	uxth	r6, r6
90018e12:	fb0e 4e0a 	mla	lr, lr, sl, r4
90018e16:	1c7c      	adds	r4, r7, #1
90018e18:	f106 0b01 	add.w	fp, r6, #1
90018e1c:	fa1f fe8e 	uxth.w	lr, lr
90018e20:	eb04 2717 	add.w	r7, r4, r7, lsr #8
90018e24:	f10e 0401 	add.w	r4, lr, #1
90018e28:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90018e2c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90018e30:	eb04 241e 	add.w	r4, r4, lr, lsr #8
90018e34:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90018e38:	f3c4 24c4 	ubfx	r4, r4, #11, #5
90018e3c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90018e40:	4327      	orrs	r7, r4
90018e42:	ea47 070b 	orr.w	r7, r7, fp
90018e46:	f829 7b02 	strh.w	r7, [r9], #2
90018e4a:	e7af      	b.n	90018dac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
90018e4c:	f04f 0e00 	mov.w	lr, #0
90018e50:	f8bd 900c 	ldrh.w	r9, [sp, #12]
90018e54:	eb03 040e 	add.w	r4, r3, lr
90018e58:	2c00      	cmp	r4, #0
90018e5a:	dc43      	bgt.n	90018ee4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90018e5c:	9a00      	ldr	r2, [sp, #0]
90018e5e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018e62:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90018e66:	9300      	str	r3, [sp, #0]
90018e68:	9b02      	ldr	r3, [sp, #8]
90018e6a:	2b00      	cmp	r3, #0
90018e6c:	f340 8098 	ble.w	90018fa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90018e70:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90018e74:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90018e76:	ee30 0a04 	vadd.f32	s0, s0, s8
90018e7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018e7e:	eef0 6a62 	vmov.f32	s13, s5
90018e82:	eec7 7a00 	vdiv.f32	s15, s14, s0
90018e86:	ee31 1a05 	vadd.f32	s2, s2, s10
90018e8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018e8e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
90018e92:	eef0 6a43 	vmov.f32	s13, s6
90018e96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018e9a:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
90018e9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018ea2:	ee61 7a27 	vmul.f32	s15, s2, s15
90018ea6:	ee77 2a62 	vsub.f32	s5, s14, s5
90018eaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018eae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018eb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018eb6:	ee12 2a90 	vmov	r2, s5
90018eba:	eef0 2a47 	vmov.f32	s5, s14
90018ebe:	fb92 f3f3 	sdiv	r3, r2, r3
90018ec2:	ee13 2a10 	vmov	r2, s6
90018ec6:	9313      	str	r3, [sp, #76]	@ 0x4c
90018ec8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90018eca:	eeb0 3a67 	vmov.f32	s6, s15
90018ece:	fb92 f3f3 	sdiv	r3, r2, r3
90018ed2:	9314      	str	r3, [sp, #80]	@ 0x50
90018ed4:	9b02      	ldr	r3, [sp, #8]
90018ed6:	9a05      	ldr	r2, [sp, #20]
90018ed8:	3b01      	subs	r3, #1
90018eda:	9302      	str	r3, [sp, #8]
90018edc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90018ede:	bf08      	it	eq
90018ee0:	4613      	moveq	r3, r2
90018ee2:	e72a      	b.n	90018d3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90018ee4:	140f      	asrs	r7, r1, #16
90018ee6:	d454      	bmi.n	90018f92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018ee8:	f8dc 6008 	ldr.w	r6, [ip, #8]
90018eec:	42be      	cmp	r6, r7
90018eee:	dd50      	ble.n	90018f92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018ef0:	ea5f 4822 	movs.w	r8, r2, asr #16
90018ef4:	d44d      	bmi.n	90018f92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018ef6:	f8dc 400c 	ldr.w	r4, [ip, #12]
90018efa:	4544      	cmp	r4, r8
90018efc:	dd49      	ble.n	90018f92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018efe:	9c04      	ldr	r4, [sp, #16]
90018f00:	b236      	sxth	r6, r6
90018f02:	f06f 0001 	mvn.w	r0, #1
90018f06:	fb08 4606 	mla	r6, r8, r6, r4
90018f0a:	9c01      	ldr	r4, [sp, #4]
90018f0c:	fb00 fa0e 	mul.w	sl, r0, lr
90018f10:	9800      	ldr	r0, [sp, #0]
90018f12:	f816 8007 	ldrb.w	r8, [r6, r7]
90018f16:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90018f1a:	eb04 0b08 	add.w	fp, r4, r8
90018f1e:	f830 400a 	ldrh.w	r4, [r0, sl]
90018f22:	9801      	ldr	r0, [sp, #4]
90018f24:	f89b 6002 	ldrb.w	r6, [fp, #2]
90018f28:	1227      	asrs	r7, r4, #8
90018f2a:	f89b b001 	ldrb.w	fp, [fp, #1]
90018f2e:	fb16 f609 	smulbb	r6, r6, r9
90018f32:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90018f36:	f810 8008 	ldrb.w	r8, [r0, r8]
90018f3a:	fb1b fb09 	smulbb	fp, fp, r9
90018f3e:	fb07 6705 	mla	r7, r7, r5, r6
90018f42:	10e6      	asrs	r6, r4, #3
90018f44:	00e4      	lsls	r4, r4, #3
90018f46:	9800      	ldr	r0, [sp, #0]
90018f48:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90018f4c:	b2bf      	uxth	r7, r7
90018f4e:	b2e4      	uxtb	r4, r4
90018f50:	fb06 b605 	mla	r6, r6, r5, fp
90018f54:	fb14 f405 	smulbb	r4, r4, r5
90018f58:	b2b6      	uxth	r6, r6
90018f5a:	fb08 4809 	mla	r8, r8, r9, r4
90018f5e:	1c7c      	adds	r4, r7, #1
90018f60:	f106 0b01 	add.w	fp, r6, #1
90018f64:	fa1f f888 	uxth.w	r8, r8
90018f68:	eb04 2717 	add.w	r7, r4, r7, lsr #8
90018f6c:	f108 0401 	add.w	r4, r8, #1
90018f70:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90018f74:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90018f78:	eb04 2418 	add.w	r4, r4, r8, lsr #8
90018f7c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90018f80:	f3c4 24c4 	ubfx	r4, r4, #11, #5
90018f84:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90018f88:	4327      	orrs	r7, r4
90018f8a:	ea47 070b 	orr.w	r7, r7, fp
90018f8e:	f820 700a 	strh.w	r7, [r0, sl]
90018f92:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90018f94:	f10e 3eff 	add.w	lr, lr, #4294967295
90018f98:	4401      	add	r1, r0
90018f9a:	9814      	ldr	r0, [sp, #80]	@ 0x50
90018f9c:	4402      	add	r2, r0
90018f9e:	e759      	b.n	90018e54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
90018fa0:	b007      	add	sp, #28
90018fa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90018fa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018fa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018fac:	b085      	sub	sp, #20
90018fae:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90018fb2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
90018fb4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90018fb6:	9203      	str	r2, [sp, #12]
90018fb8:	6870      	ldr	r0, [r6, #4]
90018fba:	686f      	ldr	r7, [r5, #4]
90018fbc:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
90018fc0:	3704      	adds	r7, #4
90018fc2:	9101      	str	r1, [sp, #4]
90018fc4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
90018fc8:	fb00 2404 	mla	r4, r0, r4, r2
90018fcc:	6832      	ldr	r2, [r6, #0]
90018fce:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018fd2:	682a      	ldr	r2, [r5, #0]
90018fd4:	9202      	str	r2, [sp, #8]
90018fd6:	9a01      	ldr	r2, [sp, #4]
90018fd8:	2a00      	cmp	r2, #0
90018fda:	dc03      	bgt.n	90018fe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90018fdc:	9a03      	ldr	r2, [sp, #12]
90018fde:	2a00      	cmp	r2, #0
90018fe0:	f340 80cc 	ble.w	9001917c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
90018fe4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90018fe6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90018fea:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
90018fee:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90018ff0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90018ff4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90018ff8:	2b00      	cmp	r3, #0
90018ffa:	dd0d      	ble.n	90019018 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90018ffc:	1406      	asrs	r6, r0, #16
90018ffe:	d405      	bmi.n	9001900c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90019000:	454e      	cmp	r6, r9
90019002:	da03      	bge.n	9001900c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90019004:	1416      	asrs	r6, r2, #16
90019006:	d401      	bmi.n	9001900c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90019008:	4546      	cmp	r6, r8
9001900a:	db06      	blt.n	9001901a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001900c:	9e12      	ldr	r6, [sp, #72]	@ 0x48
9001900e:	4460      	add	r0, ip
90019010:	3b01      	subs	r3, #1
90019012:	3402      	adds	r4, #2
90019014:	4432      	add	r2, r6
90019016:	e7ef      	b.n	90018ff8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
90019018:	d00f      	beq.n	9001903a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001901a:	1e5e      	subs	r6, r3, #1
9001901c:	fb0c 0e06 	mla	lr, ip, r6, r0
90019020:	ea5f 4e2e 	movs.w	lr, lr, asr #16
90019024:	d543      	bpl.n	900190ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
90019026:	4698      	mov	r8, r3
90019028:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001902c:	f1b8 0f00 	cmp.w	r8, #0
90019030:	dc71      	bgt.n	90019116 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
90019032:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019036:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001903a:	9b01      	ldr	r3, [sp, #4]
9001903c:	2b00      	cmp	r3, #0
9001903e:	f340 809d 	ble.w	9001917c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
90019042:	ee30 0a04 	vadd.f32	s0, s0, s8
90019046:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019048:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001904c:	eeb0 6a62 	vmov.f32	s12, s5
90019050:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019054:	ee31 1a05 	vadd.f32	s2, s2, s10
90019058:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001905c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
90019060:	eeb0 6a43 	vmov.f32	s12, s6
90019064:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019068:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001906c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019070:	ee61 7a27 	vmul.f32	s15, s2, s15
90019074:	ee77 2a62 	vsub.f32	s5, s14, s5
90019078:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001907c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019080:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019084:	ee12 2a90 	vmov	r2, s5
90019088:	eef0 2a47 	vmov.f32	s5, s14
9001908c:	fb92 fcf3 	sdiv	ip, r2, r3
90019090:	ee13 2a10 	vmov	r2, s6
90019094:	eeb0 3a67 	vmov.f32	s6, s15
90019098:	fb92 f3f3 	sdiv	r3, r2, r3
9001909c:	9312      	str	r3, [sp, #72]	@ 0x48
9001909e:	9b01      	ldr	r3, [sp, #4]
900190a0:	9a03      	ldr	r2, [sp, #12]
900190a2:	3b01      	subs	r3, #1
900190a4:	9301      	str	r3, [sp, #4]
900190a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900190a8:	bf08      	it	eq
900190aa:	4613      	moveq	r3, r2
900190ac:	e793      	b.n	90018fd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
900190ae:	45ce      	cmp	lr, r9
900190b0:	dab9      	bge.n	90019026 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
900190b2:	9912      	ldr	r1, [sp, #72]	@ 0x48
900190b4:	fb01 2606 	mla	r6, r1, r6, r2
900190b8:	1436      	asrs	r6, r6, #16
900190ba:	d4b4      	bmi.n	90019026 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
900190bc:	4546      	cmp	r6, r8
900190be:	dab2      	bge.n	90019026 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
900190c0:	4698      	mov	r8, r3
900190c2:	46a2      	mov	sl, r4
900190c4:	f1b8 0f00 	cmp.w	r8, #0
900190c8:	ddb3      	ble.n	90019032 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
900190ca:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
900190ce:	1416      	asrs	r6, r2, #16
900190d0:	9902      	ldr	r1, [sp, #8]
900190d2:	ea4f 4e20 	mov.w	lr, r0, asr #16
900190d6:	f108 38ff 	add.w	r8, r8, #4294967295
900190da:	4460      	add	r0, ip
900190dc:	fb09 1606 	mla	r6, r9, r6, r1
900190e0:	4928      	ldr	r1, [pc, #160]	@ (90019184 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
900190e2:	f816 e00e 	ldrb.w	lr, [r6, lr]
900190e6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
900190ea:	eb07 0b0e 	add.w	fp, r7, lr
900190ee:	f89b 6001 	ldrb.w	r6, [fp, #1]
900190f2:	f89b 9002 	ldrb.w	r9, [fp, #2]
900190f6:	00f6      	lsls	r6, r6, #3
900190f8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
900190fc:	9912      	ldr	r1, [sp, #72]	@ 0x48
900190fe:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90019102:	440a      	add	r2, r1
90019104:	ea49 0606 	orr.w	r6, r9, r6
90019108:	f817 900e 	ldrb.w	r9, [r7, lr]
9001910c:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
90019110:	f82a 6b02 	strh.w	r6, [sl], #2
90019114:	e7d6      	b.n	900190c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90019116:	ea5f 4920 	movs.w	r9, r0, asr #16
9001911a:	d429      	bmi.n	90019170 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001911c:	68ae      	ldr	r6, [r5, #8]
9001911e:	454e      	cmp	r6, r9
90019120:	dd26      	ble.n	90019170 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90019122:	ea5f 4b22 	movs.w	fp, r2, asr #16
90019126:	d423      	bmi.n	90019170 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90019128:	68e9      	ldr	r1, [r5, #12]
9001912a:	4559      	cmp	r1, fp
9001912c:	dd20      	ble.n	90019170 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001912e:	fa0f fe86 	sxth.w	lr, r6
90019132:	9902      	ldr	r1, [sp, #8]
90019134:	fb0b 1e0e 	mla	lr, fp, lr, r1
90019138:	f06f 0101 	mvn.w	r1, #1
9001913c:	f81e e009 	ldrb.w	lr, [lr, r9]
90019140:	fb01 f908 	mul.w	r9, r1, r8
90019144:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
90019148:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001914c:	eb07 060e 	add.w	r6, r7, lr
90019150:	f896 b002 	ldrb.w	fp, [r6, #2]
90019154:	7876      	ldrb	r6, [r6, #1]
90019156:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001915a:	00f6      	lsls	r6, r6, #3
9001915c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90019160:	ea4b 0606 	orr.w	r6, fp, r6
90019164:	f817 b00e 	ldrb.w	fp, [r7, lr]
90019168:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001916c:	f82a 6009 	strh.w	r6, [sl, r9]
90019170:	9912      	ldr	r1, [sp, #72]	@ 0x48
90019172:	4460      	add	r0, ip
90019174:	f108 38ff 	add.w	r8, r8, #4294967295
90019178:	440a      	add	r2, r1
9001917a:	e757      	b.n	9001902c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001917c:	b005      	add	sp, #20
9001917e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019182:	bf00      	nop
90019184:	fffff800 	.word	0xfffff800

90019188 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001918c:	b087      	sub	sp, #28
9001918e:	468b      	mov	fp, r1
90019190:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90019194:	9815      	ldr	r0, [sp, #84]	@ 0x54
90019196:	9204      	str	r2, [sp, #16]
90019198:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001919c:	6841      	ldr	r1, [r0, #4]
9001919e:	9205      	str	r2, [sp, #20]
900191a0:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
900191a4:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
900191a8:	fb01 2404 	mla	r4, r1, r4, r2
900191ac:	6802      	ldr	r2, [r0, #0]
900191ae:	eb02 0444 	add.w	r4, r2, r4, lsl #1
900191b2:	f8dc 2000 	ldr.w	r2, [ip]
900191b6:	9201      	str	r2, [sp, #4]
900191b8:	f8dc 2004 	ldr.w	r2, [ip, #4]
900191bc:	3204      	adds	r2, #4
900191be:	9202      	str	r2, [sp, #8]
900191c0:	f1bb 0f00 	cmp.w	fp, #0
900191c4:	dc03      	bgt.n	900191ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
900191c6:	9a04      	ldr	r2, [sp, #16]
900191c8:	2a00      	cmp	r2, #0
900191ca:	f340 8138 	ble.w	9001943e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
900191ce:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900191d0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
900191d4:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
900191d8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900191da:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
900191de:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
900191e2:	2b00      	cmp	r3, #0
900191e4:	dd0e      	ble.n	90019204 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900191e6:	1402      	asrs	r2, r0, #16
900191e8:	d405      	bmi.n	900191f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
900191ea:	42ba      	cmp	r2, r7
900191ec:	da03      	bge.n	900191f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
900191ee:	140a      	asrs	r2, r1, #16
900191f0:	d401      	bmi.n	900191f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
900191f2:	42b2      	cmp	r2, r6
900191f4:	db07      	blt.n	90019206 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
900191f6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900191f8:	3b01      	subs	r3, #1
900191fa:	3402      	adds	r4, #2
900191fc:	4410      	add	r0, r2
900191fe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90019200:	4411      	add	r1, r2
90019202:	e7ee      	b.n	900191e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90019204:	d019      	beq.n	9001923a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
90019206:	1e5a      	subs	r2, r3, #1
90019208:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001920a:	fb05 0502 	mla	r5, r5, r2, r0
9001920e:	142d      	asrs	r5, r5, #16
90019210:	d409      	bmi.n	90019226 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019212:	42bd      	cmp	r5, r7
90019214:	da07      	bge.n	90019226 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019216:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90019218:	fb05 1202 	mla	r2, r5, r2, r1
9001921c:	1412      	asrs	r2, r2, #16
9001921e:	d402      	bmi.n	90019226 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019220:	42b2      	cmp	r2, r6
90019222:	f2c0 80ac 	blt.w	9001937e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
90019226:	f04f 0e00 	mov.w	lr, #0
9001922a:	eb03 020e 	add.w	r2, r3, lr
9001922e:	2a00      	cmp	r2, #0
90019230:	dc3e      	bgt.n	900192b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
90019232:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019236:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001923a:	f1bb 0f00 	cmp.w	fp, #0
9001923e:	f340 80fe 	ble.w	9001943e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90019242:	ee30 0a04 	vadd.f32	s0, s0, s8
90019246:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019248:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001924c:	f1bb 0b01 	subs.w	fp, fp, #1
90019250:	eeb0 6a62 	vmov.f32	s12, s5
90019254:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019258:	ee31 1a05 	vadd.f32	s2, s2, s10
9001925c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019260:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
90019264:	eeb0 6a43 	vmov.f32	s12, s6
90019268:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001926c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
90019270:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019274:	ee61 7a27 	vmul.f32	s15, s2, s15
90019278:	ee77 2a62 	vsub.f32	s5, s14, s5
9001927c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019280:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019284:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019288:	ee12 2a90 	vmov	r2, s5
9001928c:	eef0 2a47 	vmov.f32	s5, s14
90019290:	fb92 f3f3 	sdiv	r3, r2, r3
90019294:	ee13 2a10 	vmov	r2, s6
90019298:	9313      	str	r3, [sp, #76]	@ 0x4c
9001929a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001929c:	eeb0 3a67 	vmov.f32	s6, s15
900192a0:	fb92 f3f3 	sdiv	r3, r2, r3
900192a4:	9a04      	ldr	r2, [sp, #16]
900192a6:	9314      	str	r3, [sp, #80]	@ 0x50
900192a8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900192aa:	bf08      	it	eq
900192ac:	4613      	moveq	r3, r2
900192ae:	e787      	b.n	900191c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900192b0:	1406      	asrs	r6, r0, #16
900192b2:	d45d      	bmi.n	90019370 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
900192b4:	f8dc 5008 	ldr.w	r5, [ip, #8]
900192b8:	42b5      	cmp	r5, r6
900192ba:	dd59      	ble.n	90019370 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
900192bc:	140f      	asrs	r7, r1, #16
900192be:	d457      	bmi.n	90019370 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
900192c0:	f8dc 200c 	ldr.w	r2, [ip, #12]
900192c4:	42ba      	cmp	r2, r7
900192c6:	dd53      	ble.n	90019370 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
900192c8:	9a01      	ldr	r2, [sp, #4]
900192ca:	b22d      	sxth	r5, r5
900192cc:	fb07 2505 	mla	r5, r7, r5, r2
900192d0:	5daa      	ldrb	r2, [r5, r6]
900192d2:	9d02      	ldr	r5, [sp, #8]
900192d4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
900192d8:	0e2e      	lsrs	r6, r5, #24
900192da:	d049      	beq.n	90019370 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
900192dc:	f06f 0201 	mvn.w	r2, #1
900192e0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
900192e4:	fb02 f20e 	mul.w	r2, r2, lr
900192e8:	f834 8002 	ldrh.w	r8, [r4, r2]
900192ec:	9203      	str	r2, [sp, #12]
900192ee:	9a05      	ldr	r2, [sp, #20]
900192f0:	ea4f 2728 	mov.w	r7, r8, asr #8
900192f4:	4356      	muls	r6, r2
900192f6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900192fa:	1c72      	adds	r2, r6, #1
900192fc:	eb02 2226 	add.w	r2, r2, r6, asr #8
90019300:	f3c5 4607 	ubfx	r6, r5, #16, #8
90019304:	b2ed      	uxtb	r5, r5
90019306:	1212      	asrs	r2, r2, #8
90019308:	fa1f f982 	uxth.w	r9, r2
9001930c:	43d2      	mvns	r2, r2
9001930e:	fb16 f609 	smulbb	r6, r6, r9
90019312:	b2d2      	uxtb	r2, r2
90019314:	fb15 f509 	smulbb	r5, r5, r9
90019318:	fb07 6702 	mla	r7, r7, r2, r6
9001931c:	ea4f 06e8 	mov.w	r6, r8, asr #3
90019320:	fb1a fa09 	smulbb	sl, sl, r9
90019324:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90019328:	b2bf      	uxth	r7, r7
9001932a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001932e:	fa5f f888 	uxtb.w	r8, r8
90019332:	fb06 a602 	mla	r6, r6, r2, sl
90019336:	fb08 5502 	mla	r5, r8, r2, r5
9001933a:	1c7a      	adds	r2, r7, #1
9001933c:	b2b6      	uxth	r6, r6
9001933e:	b2ad      	uxth	r5, r5
90019340:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90019344:	9a03      	ldr	r2, [sp, #12]
90019346:	f105 0a01 	add.w	sl, r5, #1
9001934a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001934e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019352:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019356:	ea4a 0707 	orr.w	r7, sl, r7
9001935a:	f106 0a01 	add.w	sl, r6, #1
9001935e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019362:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019366:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001936a:	ea47 070a 	orr.w	r7, r7, sl
9001936e:	52a7      	strh	r7, [r4, r2]
90019370:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90019372:	f10e 3eff 	add.w	lr, lr, #4294967295
90019376:	4410      	add	r0, r2
90019378:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001937a:	4411      	add	r1, r2
9001937c:	e755      	b.n	9001922a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001937e:	f04f 0800 	mov.w	r8, #0
90019382:	eba3 0208 	sub.w	r2, r3, r8
90019386:	2a00      	cmp	r2, #0
90019388:	f77f af53 	ble.w	90019232 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001938c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
90019390:	140a      	asrs	r2, r1, #16
90019392:	9f01      	ldr	r7, [sp, #4]
90019394:	1405      	asrs	r5, r0, #16
90019396:	fb06 7202 	mla	r2, r6, r2, r7
9001939a:	5d52      	ldrb	r2, [r2, r5]
9001939c:	9d02      	ldr	r5, [sp, #8]
9001939e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
900193a2:	0e2e      	lsrs	r6, r5, #24
900193a4:	d044      	beq.n	90019430 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
900193a6:	9a05      	ldr	r2, [sp, #20]
900193a8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
900193ac:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
900193b0:	4356      	muls	r6, r2
900193b2:	ea4f 272e 	mov.w	r7, lr, asr #8
900193b6:	1c72      	adds	r2, r6, #1
900193b8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900193bc:	eb02 2226 	add.w	r2, r2, r6, asr #8
900193c0:	f3c5 4607 	ubfx	r6, r5, #16, #8
900193c4:	b2ed      	uxtb	r5, r5
900193c6:	1212      	asrs	r2, r2, #8
900193c8:	fa1f f982 	uxth.w	r9, r2
900193cc:	43d2      	mvns	r2, r2
900193ce:	fb16 f609 	smulbb	r6, r6, r9
900193d2:	b2d2      	uxtb	r2, r2
900193d4:	fb15 f509 	smulbb	r5, r5, r9
900193d8:	fb07 6702 	mla	r7, r7, r2, r6
900193dc:	ea4f 06ee 	mov.w	r6, lr, asr #3
900193e0:	fb1a fa09 	smulbb	sl, sl, r9
900193e4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900193e8:	b2bf      	uxth	r7, r7
900193ea:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900193ee:	fa5f fe8e 	uxtb.w	lr, lr
900193f2:	fb06 a602 	mla	r6, r6, r2, sl
900193f6:	fb0e 5502 	mla	r5, lr, r2, r5
900193fa:	1c7a      	adds	r2, r7, #1
900193fc:	b2b6      	uxth	r6, r6
900193fe:	b2ad      	uxth	r5, r5
90019400:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90019404:	f105 0a01 	add.w	sl, r5, #1
90019408:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001940c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019410:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019414:	ea4a 0707 	orr.w	r7, sl, r7
90019418:	f106 0a01 	add.w	sl, r6, #1
9001941c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019420:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019424:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90019428:	ea47 070a 	orr.w	r7, r7, sl
9001942c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
90019430:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90019432:	f108 0801 	add.w	r8, r8, #1
90019436:	4410      	add	r0, r2
90019438:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001943a:	4411      	add	r1, r2
9001943c:	e7a1      	b.n	90019382 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001943e:	b007      	add	sp, #28
90019440:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019444 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019444:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019448:	b085      	sub	sp, #20
9001944a:	468b      	mov	fp, r1
9001944c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90019450:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90019452:	9203      	str	r2, [sp, #12]
90019454:	6841      	ldr	r1, [r0, #4]
90019456:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001945a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001945e:	fb01 2404 	mla	r4, r1, r4, r2
90019462:	6802      	ldr	r2, [r0, #0]
90019464:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019468:	f8de 2000 	ldr.w	r2, [lr]
9001946c:	9200      	str	r2, [sp, #0]
9001946e:	f8de 2004 	ldr.w	r2, [lr, #4]
90019472:	3204      	adds	r2, #4
90019474:	9201      	str	r2, [sp, #4]
90019476:	f1bb 0f00 	cmp.w	fp, #0
9001947a:	dc03      	bgt.n	90019484 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001947c:	9a03      	ldr	r2, [sp, #12]
9001947e:	2a00      	cmp	r2, #0
90019480:	f340 8153 	ble.w	9001972a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
90019484:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90019486:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001948a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001948e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90019490:	f9be 600c 	ldrsh.w	r6, [lr, #12]
90019494:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90019498:	2b00      	cmp	r3, #0
9001949a:	dd0e      	ble.n	900194ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001949c:	1408      	asrs	r0, r1, #16
9001949e:	d405      	bmi.n	900194ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900194a0:	42b8      	cmp	r0, r7
900194a2:	da03      	bge.n	900194ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900194a4:	1410      	asrs	r0, r2, #16
900194a6:	d401      	bmi.n	900194ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900194a8:	42b0      	cmp	r0, r6
900194aa:	db07      	blt.n	900194bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900194ac:	9811      	ldr	r0, [sp, #68]	@ 0x44
900194ae:	3b01      	subs	r3, #1
900194b0:	3402      	adds	r4, #2
900194b2:	4401      	add	r1, r0
900194b4:	9812      	ldr	r0, [sp, #72]	@ 0x48
900194b6:	4402      	add	r2, r0
900194b8:	e7ee      	b.n	90019498 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
900194ba:	d017      	beq.n	900194ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
900194bc:	1e58      	subs	r0, r3, #1
900194be:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900194c0:	fb05 1500 	mla	r5, r5, r0, r1
900194c4:	142d      	asrs	r5, r5, #16
900194c6:	d409      	bmi.n	900194dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900194c8:	42bd      	cmp	r5, r7
900194ca:	da07      	bge.n	900194dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900194cc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900194ce:	fb05 2000 	mla	r0, r5, r0, r2
900194d2:	1400      	asrs	r0, r0, #16
900194d4:	d402      	bmi.n	900194dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900194d6:	42b0      	cmp	r0, r6
900194d8:	f2c0 80bc 	blt.w	90019654 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
900194dc:	2600      	movs	r6, #0
900194de:	1998      	adds	r0, r3, r6
900194e0:	2800      	cmp	r0, #0
900194e2:	dc3e      	bgt.n	90019562 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
900194e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900194e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900194ec:	f1bb 0f00 	cmp.w	fp, #0
900194f0:	f340 811b 	ble.w	9001972a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
900194f4:	ee30 0a04 	vadd.f32	s0, s0, s8
900194f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900194fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
900194fe:	f1bb 0b01 	subs.w	fp, fp, #1
90019502:	eeb0 6a62 	vmov.f32	s12, s5
90019506:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001950a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001950e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019512:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
90019516:	eeb0 6a43 	vmov.f32	s12, s6
9001951a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001951e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
90019522:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019526:	ee61 7a27 	vmul.f32	s15, s2, s15
9001952a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001952e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019532:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019536:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001953a:	ee12 2a90 	vmov	r2, s5
9001953e:	eef0 2a47 	vmov.f32	s5, s14
90019542:	fb92 f3f3 	sdiv	r3, r2, r3
90019546:	ee13 2a10 	vmov	r2, s6
9001954a:	9311      	str	r3, [sp, #68]	@ 0x44
9001954c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001954e:	eeb0 3a67 	vmov.f32	s6, s15
90019552:	fb92 f3f3 	sdiv	r3, r2, r3
90019556:	9a03      	ldr	r2, [sp, #12]
90019558:	9312      	str	r3, [sp, #72]	@ 0x48
9001955a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001955c:	bf08      	it	eq
9001955e:	4613      	moveq	r3, r2
90019560:	e789      	b.n	90019476 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90019562:	140f      	asrs	r7, r1, #16
90019564:	d426      	bmi.n	900195b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019566:	f8de 5008 	ldr.w	r5, [lr, #8]
9001956a:	42bd      	cmp	r5, r7
9001956c:	dd22      	ble.n	900195b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001956e:	ea5f 4c22 	movs.w	ip, r2, asr #16
90019572:	d41f      	bmi.n	900195b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019574:	f8de 000c 	ldr.w	r0, [lr, #12]
90019578:	4560      	cmp	r0, ip
9001957a:	dd1b      	ble.n	900195b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001957c:	9800      	ldr	r0, [sp, #0]
9001957e:	b22d      	sxth	r5, r5
90019580:	fb0c 0505 	mla	r5, ip, r5, r0
90019584:	5de8      	ldrb	r0, [r5, r7]
90019586:	9d01      	ldr	r5, [sp, #4]
90019588:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001958c:	0e07      	lsrs	r7, r0, #24
9001958e:	2fff      	cmp	r7, #255	@ 0xff
90019590:	d116      	bne.n	900195c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019592:	f06f 0501 	mvn.w	r5, #1
90019596:	fb05 f706 	mul.w	r7, r5, r6
9001959a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001959e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
900195a2:	0945      	lsrs	r5, r0, #5
900195a4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
900195a8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900195ac:	ea4c 0505 	orr.w	r5, ip, r5
900195b0:	4305      	orrs	r5, r0
900195b2:	53e5      	strh	r5, [r4, r7]
900195b4:	9811      	ldr	r0, [sp, #68]	@ 0x44
900195b6:	3e01      	subs	r6, #1
900195b8:	4401      	add	r1, r0
900195ba:	9812      	ldr	r0, [sp, #72]	@ 0x48
900195bc:	4402      	add	r2, r0
900195be:	e78e      	b.n	900194de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900195c0:	b2fd      	uxtb	r5, r7
900195c2:	2f00      	cmp	r7, #0
900195c4:	d0f6      	beq.n	900195b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
900195c6:	f06f 0701 	mvn.w	r7, #1
900195ca:	fa1f f985 	uxth.w	r9, r5
900195ce:	43ed      	mvns	r5, r5
900195d0:	f3c0 2a07 	ubfx	sl, r0, #8, #8
900195d4:	4377      	muls	r7, r6
900195d6:	fb1a fa09 	smulbb	sl, sl, r9
900195da:	b2ed      	uxtb	r5, r5
900195dc:	f834 8007 	ldrh.w	r8, [r4, r7]
900195e0:	9702      	str	r7, [sp, #8]
900195e2:	f3c0 4707 	ubfx	r7, r0, #16, #8
900195e6:	ea4f 2c28 	mov.w	ip, r8, asr #8
900195ea:	fb17 f709 	smulbb	r7, r7, r9
900195ee:	b2c0      	uxtb	r0, r0
900195f0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900195f4:	fb10 f009 	smulbb	r0, r0, r9
900195f8:	fb0c 7c05 	mla	ip, ip, r5, r7
900195fc:	ea4f 07e8 	mov.w	r7, r8, asr #3
90019600:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90019604:	fa1f fc8c 	uxth.w	ip, ip
90019608:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001960c:	fa5f f888 	uxtb.w	r8, r8
90019610:	fb07 a705 	mla	r7, r7, r5, sl
90019614:	fb08 0005 	mla	r0, r8, r5, r0
90019618:	f10c 0501 	add.w	r5, ip, #1
9001961c:	b2bf      	uxth	r7, r7
9001961e:	b280      	uxth	r0, r0
90019620:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019624:	f100 0a01 	add.w	sl, r0, #1
90019628:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001962c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
90019630:	9802      	ldr	r0, [sp, #8]
90019632:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019636:	ea4a 0c0c 	orr.w	ip, sl, ip
9001963a:	f107 0a01 	add.w	sl, r7, #1
9001963e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
90019642:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019646:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001964a:	ea4c 0c0a 	orr.w	ip, ip, sl
9001964e:	f824 c000 	strh.w	ip, [r4, r0]
90019652:	e7af      	b.n	900195b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019654:	f04f 0800 	mov.w	r8, #0
90019658:	eba3 0008 	sub.w	r0, r3, r8
9001965c:	2800      	cmp	r0, #0
9001965e:	f77f af41 	ble.w	900194e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
90019662:	f9be 6008 	ldrsh.w	r6, [lr, #8]
90019666:	1410      	asrs	r0, r2, #16
90019668:	9f00      	ldr	r7, [sp, #0]
9001966a:	140d      	asrs	r5, r1, #16
9001966c:	fb06 7000 	mla	r0, r6, r0, r7
90019670:	5d40      	ldrb	r0, [r0, r5]
90019672:	9d01      	ldr	r5, [sp, #4]
90019674:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
90019678:	0e2e      	lsrs	r6, r5, #24
9001967a:	2eff      	cmp	r6, #255	@ 0xff
9001967c:	d112      	bne.n	900196a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001967e:	482c      	ldr	r0, [pc, #176]	@ (90019730 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
90019680:	ea00 2615 	and.w	r6, r0, r5, lsr #8
90019684:	0968      	lsrs	r0, r5, #5
90019686:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001968a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001968e:	4330      	orrs	r0, r6
90019690:	4328      	orrs	r0, r5
90019692:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
90019696:	9811      	ldr	r0, [sp, #68]	@ 0x44
90019698:	f108 0801 	add.w	r8, r8, #1
9001969c:	4401      	add	r1, r0
9001969e:	9812      	ldr	r0, [sp, #72]	@ 0x48
900196a0:	4402      	add	r2, r0
900196a2:	e7d9      	b.n	90019658 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900196a4:	b2f0      	uxtb	r0, r6
900196a6:	2e00      	cmp	r6, #0
900196a8:	d0f5      	beq.n	90019696 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
900196aa:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
900196ae:	fa1f f980 	uxth.w	r9, r0
900196b2:	f3c5 4607 	ubfx	r6, r5, #16, #8
900196b6:	43c0      	mvns	r0, r0
900196b8:	ea4f 272c 	mov.w	r7, ip, asr #8
900196bc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
900196c0:	fb16 f609 	smulbb	r6, r6, r9
900196c4:	b2c0      	uxtb	r0, r0
900196c6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900196ca:	b2ed      	uxtb	r5, r5
900196cc:	fb1a fa09 	smulbb	sl, sl, r9
900196d0:	fb07 6700 	mla	r7, r7, r0, r6
900196d4:	ea4f 06ec 	mov.w	r6, ip, asr #3
900196d8:	fb15 f509 	smulbb	r5, r5, r9
900196dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900196e0:	b2bf      	uxth	r7, r7
900196e2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900196e6:	fa5f fc8c 	uxtb.w	ip, ip
900196ea:	fb06 a600 	mla	r6, r6, r0, sl
900196ee:	fb0c 5500 	mla	r5, ip, r0, r5
900196f2:	1c78      	adds	r0, r7, #1
900196f4:	b2b6      	uxth	r6, r6
900196f6:	b2ad      	uxth	r5, r5
900196f8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
900196fc:	f105 0a01 	add.w	sl, r5, #1
90019700:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90019704:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019708:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001970c:	ea4a 0707 	orr.w	r7, sl, r7
90019710:	f106 0a01 	add.w	sl, r6, #1
90019714:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019718:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001971c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90019720:	ea47 070a 	orr.w	r7, r7, sl
90019724:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
90019728:	e7b5      	b.n	90019696 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001972a:	b005      	add	sp, #20
9001972c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019730:	fffff800 	.word	0xfffff800

90019734 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019738:	b087      	sub	sp, #28
9001973a:	468b      	mov	fp, r1
9001973c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90019740:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90019742:	9204      	str	r2, [sp, #16]
90019744:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90019748:	6861      	ldr	r1, [r4, #4]
9001974a:	9205      	str	r2, [sp, #20]
9001974c:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
90019750:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
90019754:	fb01 2000 	mla	r0, r1, r0, r2
90019758:	6822      	ldr	r2, [r4, #0]
9001975a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001975e:	f8de 2000 	ldr.w	r2, [lr]
90019762:	9201      	str	r2, [sp, #4]
90019764:	f8de 2004 	ldr.w	r2, [lr, #4]
90019768:	9202      	str	r2, [sp, #8]
9001976a:	f1bb 0f00 	cmp.w	fp, #0
9001976e:	dc03      	bgt.n	90019778 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
90019770:	9a04      	ldr	r2, [sp, #16]
90019772:	2a00      	cmp	r2, #0
90019774:	f340 8142 	ble.w	900199fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
90019778:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001977a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001977e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
90019782:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90019784:	f9be 600c 	ldrsh.w	r6, [lr, #12]
90019788:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001978c:	2b00      	cmp	r3, #0
9001978e:	dd0e      	ble.n	900197ae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90019790:	140c      	asrs	r4, r1, #16
90019792:	d405      	bmi.n	900197a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019794:	42bc      	cmp	r4, r7
90019796:	da03      	bge.n	900197a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019798:	1414      	asrs	r4, r2, #16
9001979a:	d401      	bmi.n	900197a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001979c:	42b4      	cmp	r4, r6
9001979e:	db07      	blt.n	900197b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900197a0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900197a2:	3b01      	subs	r3, #1
900197a4:	3002      	adds	r0, #2
900197a6:	4421      	add	r1, r4
900197a8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900197aa:	4422      	add	r2, r4
900197ac:	e7ee      	b.n	9001978c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900197ae:	d019      	beq.n	900197e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
900197b0:	1e5c      	subs	r4, r3, #1
900197b2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900197b4:	fb05 1504 	mla	r5, r5, r4, r1
900197b8:	142d      	asrs	r5, r5, #16
900197ba:	d409      	bmi.n	900197d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
900197bc:	42bd      	cmp	r5, r7
900197be:	da07      	bge.n	900197d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
900197c0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900197c2:	fb05 2404 	mla	r4, r5, r4, r2
900197c6:	1424      	asrs	r4, r4, #16
900197c8:	d402      	bmi.n	900197d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
900197ca:	42b4      	cmp	r4, r6
900197cc:	f2c0 80b1 	blt.w	90019932 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
900197d0:	f04f 0800 	mov.w	r8, #0
900197d4:	eb03 0408 	add.w	r4, r3, r8
900197d8:	2c00      	cmp	r4, #0
900197da:	dc3e      	bgt.n	9001985a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
900197dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900197e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900197e4:	f1bb 0f00 	cmp.w	fp, #0
900197e8:	f340 8108 	ble.w	900199fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
900197ec:	ee30 0a04 	vadd.f32	s0, s0, s8
900197f0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900197f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900197f6:	f1bb 0b01 	subs.w	fp, fp, #1
900197fa:	eeb0 6a62 	vmov.f32	s12, s5
900197fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019802:	ee31 1a05 	vadd.f32	s2, s2, s10
90019806:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001980a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001980e:	eeb0 6a43 	vmov.f32	s12, s6
90019812:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019816:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001981a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001981e:	ee61 7a27 	vmul.f32	s15, s2, s15
90019822:	ee77 2a62 	vsub.f32	s5, s14, s5
90019826:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001982a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001982e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019832:	ee12 2a90 	vmov	r2, s5
90019836:	eef0 2a47 	vmov.f32	s5, s14
9001983a:	fb92 f3f3 	sdiv	r3, r2, r3
9001983e:	ee13 2a10 	vmov	r2, s6
90019842:	9313      	str	r3, [sp, #76]	@ 0x4c
90019844:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019846:	eeb0 3a67 	vmov.f32	s6, s15
9001984a:	fb92 f3f3 	sdiv	r3, r2, r3
9001984e:	9a04      	ldr	r2, [sp, #16]
90019850:	9314      	str	r3, [sp, #80]	@ 0x50
90019852:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019854:	bf08      	it	eq
90019856:	4613      	moveq	r3, r2
90019858:	e787      	b.n	9001976a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001985a:	140e      	asrs	r6, r1, #16
9001985c:	d462      	bmi.n	90019924 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001985e:	f8de 5008 	ldr.w	r5, [lr, #8]
90019862:	42b5      	cmp	r5, r6
90019864:	dd5e      	ble.n	90019924 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90019866:	1417      	asrs	r7, r2, #16
90019868:	d45c      	bmi.n	90019924 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001986a:	f8de 400c 	ldr.w	r4, [lr, #12]
9001986e:	42bc      	cmp	r4, r7
90019870:	dd58      	ble.n	90019924 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90019872:	b22d      	sxth	r5, r5
90019874:	9c02      	ldr	r4, [sp, #8]
90019876:	fb07 6505 	mla	r5, r7, r5, r6
9001987a:	5d66      	ldrb	r6, [r4, r5]
9001987c:	2e00      	cmp	r6, #0
9001987e:	d051      	beq.n	90019924 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90019880:	9c01      	ldr	r4, [sp, #4]
90019882:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
90019886:	f06f 0401 	mvn.w	r4, #1
9001988a:	fb04 f408 	mul.w	r4, r4, r8
9001988e:	ea4f 2c29 	mov.w	ip, r9, asr #8
90019892:	5b05      	ldrh	r5, [r0, r4]
90019894:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90019898:	9403      	str	r4, [sp, #12]
9001989a:	9c05      	ldr	r4, [sp, #20]
9001989c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900198a0:	4366      	muls	r6, r4
900198a2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
900198a6:	1c74      	adds	r4, r6, #1
900198a8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
900198ac:	122e      	asrs	r6, r5, #8
900198ae:	1224      	asrs	r4, r4, #8
900198b0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900198b4:	00ed      	lsls	r5, r5, #3
900198b6:	b2a7      	uxth	r7, r4
900198b8:	43e4      	mvns	r4, r4
900198ba:	b2ed      	uxtb	r5, r5
900198bc:	b2e4      	uxtb	r4, r4
900198be:	fb16 f604 	smulbb	r6, r6, r4
900198c2:	fb15 f504 	smulbb	r5, r5, r4
900198c6:	fb0c 6c07 	mla	ip, ip, r7, r6
900198ca:	ea4f 06e9 	mov.w	r6, r9, asr #3
900198ce:	fb1a fa04 	smulbb	sl, sl, r4
900198d2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
900198d6:	fa1f fc8c 	uxth.w	ip, ip
900198da:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900198de:	fa5f f989 	uxtb.w	r9, r9
900198e2:	fb06 a607 	mla	r6, r6, r7, sl
900198e6:	f10c 0401 	add.w	r4, ip, #1
900198ea:	fb09 5507 	mla	r5, r9, r7, r5
900198ee:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
900198f2:	9c03      	ldr	r4, [sp, #12]
900198f4:	b2ad      	uxth	r5, r5
900198f6:	b2b6      	uxth	r6, r6
900198f8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
900198fc:	f105 0a01 	add.w	sl, r5, #1
90019900:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019904:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019908:	ea4a 0c0c 	orr.w	ip, sl, ip
9001990c:	f106 0a01 	add.w	sl, r6, #1
90019910:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019914:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019918:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001991c:	ea4c 0c0a 	orr.w	ip, ip, sl
90019920:	f820 c004 	strh.w	ip, [r0, r4]
90019924:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90019926:	f108 38ff 	add.w	r8, r8, #4294967295
9001992a:	4421      	add	r1, r4
9001992c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001992e:	4422      	add	r2, r4
90019930:	e750      	b.n	900197d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
90019932:	f04f 0900 	mov.w	r9, #0
90019936:	eba3 0409 	sub.w	r4, r3, r9
9001993a:	2c00      	cmp	r4, #0
9001993c:	f77f af4e 	ble.w	900197dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
90019940:	f9be 6008 	ldrsh.w	r6, [lr, #8]
90019944:	140d      	asrs	r5, r1, #16
90019946:	1414      	asrs	r4, r2, #16
90019948:	fb06 5404 	mla	r4, r6, r4, r5
9001994c:	9d02      	ldr	r5, [sp, #8]
9001994e:	5d2e      	ldrb	r6, [r5, r4]
90019950:	2e00      	cmp	r6, #0
90019952:	d04c      	beq.n	900199ee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
90019954:	9d01      	ldr	r5, [sp, #4]
90019956:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001995a:	9c05      	ldr	r4, [sp, #20]
9001995c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
90019960:	ea4f 2c28 	mov.w	ip, r8, asr #8
90019964:	4366      	muls	r6, r4
90019966:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001996a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001996e:	1c74      	adds	r4, r6, #1
90019970:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90019974:	eb04 2416 	add.w	r4, r4, r6, lsr #8
90019978:	122e      	asrs	r6, r5, #8
9001997a:	1224      	asrs	r4, r4, #8
9001997c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90019980:	00ed      	lsls	r5, r5, #3
90019982:	b2a7      	uxth	r7, r4
90019984:	43e4      	mvns	r4, r4
90019986:	b2ed      	uxtb	r5, r5
90019988:	b2e4      	uxtb	r4, r4
9001998a:	fb16 f604 	smulbb	r6, r6, r4
9001998e:	fb15 f504 	smulbb	r5, r5, r4
90019992:	fb0c 6c07 	mla	ip, ip, r7, r6
90019996:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001999a:	fb1a fa04 	smulbb	sl, sl, r4
9001999e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
900199a2:	fa1f fc8c 	uxth.w	ip, ip
900199a6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900199aa:	fa5f f888 	uxtb.w	r8, r8
900199ae:	fb06 a607 	mla	r6, r6, r7, sl
900199b2:	f10c 0401 	add.w	r4, ip, #1
900199b6:	fb08 5507 	mla	r5, r8, r7, r5
900199ba:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
900199be:	b2ad      	uxth	r5, r5
900199c0:	b2b6      	uxth	r6, r6
900199c2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
900199c6:	f105 0a01 	add.w	sl, r5, #1
900199ca:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
900199ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
900199d2:	ea4a 0c0c 	orr.w	ip, sl, ip
900199d6:	f106 0a01 	add.w	sl, r6, #1
900199da:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
900199de:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900199e2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
900199e6:	ea4c 0c0a 	orr.w	ip, ip, sl
900199ea:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
900199ee:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900199f0:	f109 0901 	add.w	r9, r9, #1
900199f4:	4421      	add	r1, r4
900199f6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900199f8:	4422      	add	r2, r4
900199fa:	e79c      	b.n	90019936 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
900199fc:	b007      	add	sp, #28
900199fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019a02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019a02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019a06:	b085      	sub	sp, #20
90019a08:	468b      	mov	fp, r1
90019a0a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90019a0e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90019a10:	9203      	str	r2, [sp, #12]
90019a12:	6861      	ldr	r1, [r4, #4]
90019a14:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
90019a18:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
90019a1c:	fb01 2000 	mla	r0, r1, r0, r2
90019a20:	6822      	ldr	r2, [r4, #0]
90019a22:	eb02 0040 	add.w	r0, r2, r0, lsl #1
90019a26:	f8d8 2000 	ldr.w	r2, [r8]
90019a2a:	9200      	str	r2, [sp, #0]
90019a2c:	f8d8 2004 	ldr.w	r2, [r8, #4]
90019a30:	9201      	str	r2, [sp, #4]
90019a32:	f1bb 0f00 	cmp.w	fp, #0
90019a36:	dc03      	bgt.n	90019a40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90019a38:	9a03      	ldr	r2, [sp, #12]
90019a3a:	2a00      	cmp	r2, #0
90019a3c:	f340 8146 	ble.w	90019ccc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
90019a40:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90019a42:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
90019a46:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
90019a4a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90019a4c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
90019a50:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90019a54:	2b00      	cmp	r3, #0
90019a56:	dd0e      	ble.n	90019a76 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90019a58:	140c      	asrs	r4, r1, #16
90019a5a:	d405      	bmi.n	90019a68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019a5c:	42bc      	cmp	r4, r7
90019a5e:	da03      	bge.n	90019a68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019a60:	1414      	asrs	r4, r2, #16
90019a62:	d401      	bmi.n	90019a68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019a64:	42b4      	cmp	r4, r6
90019a66:	db07      	blt.n	90019a78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019a68:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90019a6a:	3b01      	subs	r3, #1
90019a6c:	3002      	adds	r0, #2
90019a6e:	4421      	add	r1, r4
90019a70:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90019a72:	4422      	add	r2, r4
90019a74:	e7ee      	b.n	90019a54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90019a76:	d017      	beq.n	90019aa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
90019a78:	1e5c      	subs	r4, r3, #1
90019a7a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90019a7c:	fb05 1504 	mla	r5, r5, r4, r1
90019a80:	142d      	asrs	r5, r5, #16
90019a82:	d409      	bmi.n	90019a98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019a84:	42bd      	cmp	r5, r7
90019a86:	da07      	bge.n	90019a98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019a88:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90019a8a:	fb05 2404 	mla	r4, r5, r4, r2
90019a8e:	1424      	asrs	r4, r4, #16
90019a90:	d402      	bmi.n	90019a98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019a92:	42b4      	cmp	r4, r6
90019a94:	f2c0 80b3 	blt.w	90019bfe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90019a98:	2600      	movs	r6, #0
90019a9a:	199c      	adds	r4, r3, r6
90019a9c:	2c00      	cmp	r4, #0
90019a9e:	dc3e      	bgt.n	90019b1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90019aa0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019aa4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90019aa8:	f1bb 0f00 	cmp.w	fp, #0
90019aac:	f340 810e 	ble.w	90019ccc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
90019ab0:	ee30 0a04 	vadd.f32	s0, s0, s8
90019ab4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019ab6:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019aba:	f1bb 0b01 	subs.w	fp, fp, #1
90019abe:	eeb0 6a62 	vmov.f32	s12, s5
90019ac2:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019ac6:	ee31 1a05 	vadd.f32	s2, s2, s10
90019aca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019ace:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
90019ad2:	eeb0 6a43 	vmov.f32	s12, s6
90019ad6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019ada:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
90019ade:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019ae2:	ee61 7a27 	vmul.f32	s15, s2, s15
90019ae6:	ee77 2a62 	vsub.f32	s5, s14, s5
90019aea:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019aee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019af2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019af6:	ee12 2a90 	vmov	r2, s5
90019afa:	eef0 2a47 	vmov.f32	s5, s14
90019afe:	fb92 f3f3 	sdiv	r3, r2, r3
90019b02:	ee13 2a10 	vmov	r2, s6
90019b06:	9311      	str	r3, [sp, #68]	@ 0x44
90019b08:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019b0a:	eeb0 3a67 	vmov.f32	s6, s15
90019b0e:	fb92 f3f3 	sdiv	r3, r2, r3
90019b12:	9a03      	ldr	r2, [sp, #12]
90019b14:	9312      	str	r3, [sp, #72]	@ 0x48
90019b16:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019b18:	bf08      	it	eq
90019b1a:	4613      	moveq	r3, r2
90019b1c:	e789      	b.n	90019a32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90019b1e:	140f      	asrs	r7, r1, #16
90019b20:	d418      	bmi.n	90019b54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019b22:	f8d8 5008 	ldr.w	r5, [r8, #8]
90019b26:	42bd      	cmp	r5, r7
90019b28:	dd14      	ble.n	90019b54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019b2a:	ea5f 4c22 	movs.w	ip, r2, asr #16
90019b2e:	d411      	bmi.n	90019b54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019b30:	f8d8 400c 	ldr.w	r4, [r8, #12]
90019b34:	4564      	cmp	r4, ip
90019b36:	dd0d      	ble.n	90019b54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019b38:	b22d      	sxth	r5, r5
90019b3a:	9c01      	ldr	r4, [sp, #4]
90019b3c:	fb0c 7505 	mla	r5, ip, r5, r7
90019b40:	5d64      	ldrb	r4, [r4, r5]
90019b42:	2cff      	cmp	r4, #255	@ 0xff
90019b44:	d10c      	bne.n	90019b60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
90019b46:	9c00      	ldr	r4, [sp, #0]
90019b48:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
90019b4c:	f06f 0401 	mvn.w	r4, #1
90019b50:	4374      	muls	r4, r6
90019b52:	5305      	strh	r5, [r0, r4]
90019b54:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90019b56:	3e01      	subs	r6, #1
90019b58:	4421      	add	r1, r4
90019b5a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90019b5c:	4422      	add	r2, r4
90019b5e:	e79c      	b.n	90019a9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019b60:	2c00      	cmp	r4, #0
90019b62:	d0f7      	beq.n	90019b54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019b64:	9f00      	ldr	r7, [sp, #0]
90019b66:	fa1f fc84 	uxth.w	ip, r4
90019b6a:	43e4      	mvns	r4, r4
90019b6c:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
90019b70:	f06f 0501 	mvn.w	r5, #1
90019b74:	b2e4      	uxtb	r4, r4
90019b76:	4375      	muls	r5, r6
90019b78:	ea4f 2e29 	mov.w	lr, r9, asr #8
90019b7c:	9502      	str	r5, [sp, #8]
90019b7e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90019b82:	5b45      	ldrh	r5, [r0, r5]
90019b84:	122f      	asrs	r7, r5, #8
90019b86:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90019b8a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019b8e:	00ed      	lsls	r5, r5, #3
90019b90:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90019b94:	fb17 f704 	smulbb	r7, r7, r4
90019b98:	b2ed      	uxtb	r5, r5
90019b9a:	fb1a fa04 	smulbb	sl, sl, r4
90019b9e:	fb0e 7e0c 	mla	lr, lr, ip, r7
90019ba2:	ea4f 07e9 	mov.w	r7, r9, asr #3
90019ba6:	fb15 f504 	smulbb	r5, r5, r4
90019baa:	ea4f 09c9 	mov.w	r9, r9, lsl #3
90019bae:	fa1f fe8e 	uxth.w	lr, lr
90019bb2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90019bb6:	fa5f f989 	uxtb.w	r9, r9
90019bba:	fb07 a70c 	mla	r7, r7, ip, sl
90019bbe:	f10e 0401 	add.w	r4, lr, #1
90019bc2:	fb09 550c 	mla	r5, r9, ip, r5
90019bc6:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
90019bca:	9c02      	ldr	r4, [sp, #8]
90019bcc:	b2ad      	uxth	r5, r5
90019bce:	b2bf      	uxth	r7, r7
90019bd0:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
90019bd4:	f105 0a01 	add.w	sl, r5, #1
90019bd8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019bdc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019be0:	ea4a 0e0e 	orr.w	lr, sl, lr
90019be4:	f107 0a01 	add.w	sl, r7, #1
90019be8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
90019bec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019bf0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90019bf4:	ea4e 0e0a 	orr.w	lr, lr, sl
90019bf8:	f820 e004 	strh.w	lr, [r0, r4]
90019bfc:	e7aa      	b.n	90019b54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019bfe:	f04f 0900 	mov.w	r9, #0
90019c02:	eba3 0409 	sub.w	r4, r3, r9
90019c06:	2c00      	cmp	r4, #0
90019c08:	f77f af4a 	ble.w	90019aa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019c0c:	1414      	asrs	r4, r2, #16
90019c0e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
90019c12:	140d      	asrs	r5, r1, #16
90019c14:	fb06 5504 	mla	r5, r6, r4, r5
90019c18:	9c01      	ldr	r4, [sp, #4]
90019c1a:	5d64      	ldrb	r4, [r4, r5]
90019c1c:	2cff      	cmp	r4, #255	@ 0xff
90019c1e:	d10b      	bne.n	90019c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90019c20:	9c00      	ldr	r4, [sp, #0]
90019c22:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
90019c26:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
90019c2a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90019c2c:	f109 0901 	add.w	r9, r9, #1
90019c30:	4421      	add	r1, r4
90019c32:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90019c34:	4422      	add	r2, r4
90019c36:	e7e4      	b.n	90019c02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90019c38:	2c00      	cmp	r4, #0
90019c3a:	d0f6      	beq.n	90019c2a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90019c3c:	9e00      	ldr	r6, [sp, #0]
90019c3e:	b2a7      	uxth	r7, r4
90019c40:	43e4      	mvns	r4, r4
90019c42:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
90019c46:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
90019c4a:	b2e4      	uxtb	r4, r4
90019c4c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90019c50:	122e      	asrs	r6, r5, #8
90019c52:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90019c56:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90019c5a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90019c5e:	00ed      	lsls	r5, r5, #3
90019c60:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90019c64:	fb16 f604 	smulbb	r6, r6, r4
90019c68:	b2ed      	uxtb	r5, r5
90019c6a:	fb1a fa04 	smulbb	sl, sl, r4
90019c6e:	fb0c 6c07 	mla	ip, ip, r7, r6
90019c72:	ea4f 06ee 	mov.w	r6, lr, asr #3
90019c76:	fb15 f504 	smulbb	r5, r5, r4
90019c7a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90019c7e:	fa1f fc8c 	uxth.w	ip, ip
90019c82:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90019c86:	fa5f fe8e 	uxtb.w	lr, lr
90019c8a:	fb06 a607 	mla	r6, r6, r7, sl
90019c8e:	f10c 0401 	add.w	r4, ip, #1
90019c92:	fb0e 5507 	mla	r5, lr, r7, r5
90019c96:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
90019c9a:	b2ad      	uxth	r5, r5
90019c9c:	b2b6      	uxth	r6, r6
90019c9e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90019ca2:	f105 0a01 	add.w	sl, r5, #1
90019ca6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019caa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019cae:	ea4a 0c0c 	orr.w	ip, sl, ip
90019cb2:	f106 0a01 	add.w	sl, r6, #1
90019cb6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019cba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019cbe:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90019cc2:	ea4c 0c0a 	orr.w	ip, ip, sl
90019cc6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
90019cca:	e7ae      	b.n	90019c2a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90019ccc:	b005      	add	sp, #20
90019cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019cd2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019cd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019cd6:	b085      	sub	sp, #20
90019cd8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90019cda:	9203      	str	r2, [sp, #12]
90019cdc:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
90019ce0:	9100      	str	r1, [sp, #0]
90019ce2:	9201      	str	r2, [sp, #4]
90019ce4:	6841      	ldr	r1, [r0, #4]
90019ce6:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
90019cea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
90019cee:	fb01 2404 	mla	r4, r1, r4, r2
90019cf2:	6802      	ldr	r2, [r0, #0]
90019cf4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019cf8:	f8de 2000 	ldr.w	r2, [lr]
90019cfc:	9202      	str	r2, [sp, #8]
90019cfe:	9a01      	ldr	r2, [sp, #4]
90019d00:	43d6      	mvns	r6, r2
90019d02:	b2f6      	uxtb	r6, r6
90019d04:	9a00      	ldr	r2, [sp, #0]
90019d06:	2a00      	cmp	r2, #0
90019d08:	dc03      	bgt.n	90019d12 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90019d0a:	9a03      	ldr	r2, [sp, #12]
90019d0c:	2a00      	cmp	r2, #0
90019d0e:	f340 8124 	ble.w	90019f5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
90019d12:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90019d14:	f9be c008 	ldrsh.w	ip, [lr, #8]
90019d18:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
90019d1c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90019d1e:	f9be 700c 	ldrsh.w	r7, [lr, #12]
90019d22:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90019d26:	2b00      	cmp	r3, #0
90019d28:	dd0e      	ble.n	90019d48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019d2a:	1408      	asrs	r0, r1, #16
90019d2c:	d405      	bmi.n	90019d3a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019d2e:	4560      	cmp	r0, ip
90019d30:	da03      	bge.n	90019d3a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019d32:	1410      	asrs	r0, r2, #16
90019d34:	d401      	bmi.n	90019d3a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019d36:	42b8      	cmp	r0, r7
90019d38:	db07      	blt.n	90019d4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90019d3a:	9811      	ldr	r0, [sp, #68]	@ 0x44
90019d3c:	3b01      	subs	r3, #1
90019d3e:	3402      	adds	r4, #2
90019d40:	4401      	add	r1, r0
90019d42:	9812      	ldr	r0, [sp, #72]	@ 0x48
90019d44:	4402      	add	r2, r0
90019d46:	e7ee      	b.n	90019d26 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90019d48:	d06e      	beq.n	90019e28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
90019d4a:	1e58      	subs	r0, r3, #1
90019d4c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90019d4e:	fb05 1500 	mla	r5, r5, r0, r1
90019d52:	142d      	asrs	r5, r5, #16
90019d54:	d45c      	bmi.n	90019e10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019d56:	4565      	cmp	r5, ip
90019d58:	da5a      	bge.n	90019e10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019d5a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90019d5c:	fb05 2000 	mla	r0, r5, r0, r2
90019d60:	1400      	asrs	r0, r0, #16
90019d62:	d455      	bmi.n	90019e10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019d64:	42b8      	cmp	r0, r7
90019d66:	da53      	bge.n	90019e10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019d68:	4699      	mov	r9, r3
90019d6a:	46a2      	mov	sl, r4
90019d6c:	f8bd b004 	ldrh.w	fp, [sp, #4]
90019d70:	f1b9 0f00 	cmp.w	r9, #0
90019d74:	dd54      	ble.n	90019e20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90019d76:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90019d7a:	140d      	asrs	r5, r1, #16
90019d7c:	1410      	asrs	r0, r2, #16
90019d7e:	f109 39ff 	add.w	r9, r9, #4294967295
90019d82:	fb07 5000 	mla	r0, r7, r0, r5
90019d86:	9d02      	ldr	r5, [sp, #8]
90019d88:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
90019d8c:	f8ba 5000 	ldrh.w	r5, [sl]
90019d90:	ea4f 2c20 	mov.w	ip, r0, asr #8
90019d94:	122f      	asrs	r7, r5, #8
90019d96:	ea4f 08e5 	mov.w	r8, r5, asr #3
90019d9a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90019d9e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019da2:	00ed      	lsls	r5, r5, #3
90019da4:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
90019da8:	fb17 f706 	smulbb	r7, r7, r6
90019dac:	b2ed      	uxtb	r5, r5
90019dae:	fb18 f806 	smulbb	r8, r8, r6
90019db2:	fb0c 7c0b 	mla	ip, ip, fp, r7
90019db6:	10c7      	asrs	r7, r0, #3
90019db8:	fb15 f506 	smulbb	r5, r5, r6
90019dbc:	00c0      	lsls	r0, r0, #3
90019dbe:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90019dc2:	fa1f fc8c 	uxth.w	ip, ip
90019dc6:	b2c0      	uxtb	r0, r0
90019dc8:	fb07 870b 	mla	r7, r7, fp, r8
90019dcc:	fb00 500b 	mla	r0, r0, fp, r5
90019dd0:	f10c 0501 	add.w	r5, ip, #1
90019dd4:	b2bf      	uxth	r7, r7
90019dd6:	b280      	uxth	r0, r0
90019dd8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019ddc:	f107 0801 	add.w	r8, r7, #1
90019de0:	1c45      	adds	r5, r0, #1
90019de2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
90019de6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90019dea:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90019dee:	9811      	ldr	r0, [sp, #68]	@ 0x44
90019df0:	ea4f 1858 	mov.w	r8, r8, lsr #5
90019df4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90019df8:	4401      	add	r1, r0
90019dfa:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90019dfe:	9812      	ldr	r0, [sp, #72]	@ 0x48
90019e00:	ea45 0c0c 	orr.w	ip, r5, ip
90019e04:	4402      	add	r2, r0
90019e06:	ea4c 0c08 	orr.w	ip, ip, r8
90019e0a:	f82a cb02 	strh.w	ip, [sl], #2
90019e0e:	e7af      	b.n	90019d70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019e10:	f04f 0800 	mov.w	r8, #0
90019e14:	f8bd a004 	ldrh.w	sl, [sp, #4]
90019e18:	eb03 0008 	add.w	r0, r3, r8
90019e1c:	2800      	cmp	r0, #0
90019e1e:	dc41      	bgt.n	90019ea4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90019e20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019e24:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019e28:	9b00      	ldr	r3, [sp, #0]
90019e2a:	2b00      	cmp	r3, #0
90019e2c:	f340 8095 	ble.w	90019f5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
90019e30:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90019e34:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019e36:	ee30 0a04 	vadd.f32	s0, s0, s8
90019e3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019e3e:	eef0 6a62 	vmov.f32	s13, s5
90019e42:	eec7 7a00 	vdiv.f32	s15, s14, s0
90019e46:	ee31 1a05 	vadd.f32	s2, s2, s10
90019e4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019e4e:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
90019e52:	eef0 6a43 	vmov.f32	s13, s6
90019e56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019e5a:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
90019e5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019e62:	ee61 7a27 	vmul.f32	s15, s2, s15
90019e66:	ee77 2a62 	vsub.f32	s5, s14, s5
90019e6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019e6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019e72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019e76:	ee12 2a90 	vmov	r2, s5
90019e7a:	eef0 2a47 	vmov.f32	s5, s14
90019e7e:	fb92 f3f3 	sdiv	r3, r2, r3
90019e82:	ee13 2a10 	vmov	r2, s6
90019e86:	9311      	str	r3, [sp, #68]	@ 0x44
90019e88:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019e8a:	eeb0 3a67 	vmov.f32	s6, s15
90019e8e:	fb92 f3f3 	sdiv	r3, r2, r3
90019e92:	9312      	str	r3, [sp, #72]	@ 0x48
90019e94:	9b00      	ldr	r3, [sp, #0]
90019e96:	9a03      	ldr	r2, [sp, #12]
90019e98:	3b01      	subs	r3, #1
90019e9a:	9300      	str	r3, [sp, #0]
90019e9c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019e9e:	bf08      	it	eq
90019ea0:	4613      	moveq	r3, r2
90019ea2:	e72f      	b.n	90019d04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90019ea4:	140f      	asrs	r7, r1, #16
90019ea6:	d451      	bmi.n	90019f4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019ea8:	f8de 5008 	ldr.w	r5, [lr, #8]
90019eac:	42bd      	cmp	r5, r7
90019eae:	dd4d      	ble.n	90019f4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019eb0:	ea5f 4c22 	movs.w	ip, r2, asr #16
90019eb4:	d44a      	bmi.n	90019f4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019eb6:	f8de 000c 	ldr.w	r0, [lr, #12]
90019eba:	4560      	cmp	r0, ip
90019ebc:	dd46      	ble.n	90019f4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019ebe:	b22d      	sxth	r5, r5
90019ec0:	9802      	ldr	r0, [sp, #8]
90019ec2:	fb0c 7505 	mla	r5, ip, r5, r7
90019ec6:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
90019eca:	f06f 0501 	mvn.w	r5, #1
90019ece:	fb05 fb08 	mul.w	fp, r5, r8
90019ed2:	ea4f 2c20 	mov.w	ip, r0, asr #8
90019ed6:	f834 500b 	ldrh.w	r5, [r4, fp]
90019eda:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90019ede:	122f      	asrs	r7, r5, #8
90019ee0:	ea4f 09e5 	mov.w	r9, r5, asr #3
90019ee4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019ee8:	00ed      	lsls	r5, r5, #3
90019eea:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
90019eee:	fb17 f706 	smulbb	r7, r7, r6
90019ef2:	b2ed      	uxtb	r5, r5
90019ef4:	fb19 f906 	smulbb	r9, r9, r6
90019ef8:	fb0c 7c0a 	mla	ip, ip, sl, r7
90019efc:	10c7      	asrs	r7, r0, #3
90019efe:	fb15 f506 	smulbb	r5, r5, r6
90019f02:	00c0      	lsls	r0, r0, #3
90019f04:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90019f08:	fa1f fc8c 	uxth.w	ip, ip
90019f0c:	b2c0      	uxtb	r0, r0
90019f0e:	fb07 970a 	mla	r7, r7, sl, r9
90019f12:	fb00 500a 	mla	r0, r0, sl, r5
90019f16:	f10c 0501 	add.w	r5, ip, #1
90019f1a:	b2bf      	uxth	r7, r7
90019f1c:	b280      	uxth	r0, r0
90019f1e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019f22:	f107 0901 	add.w	r9, r7, #1
90019f26:	1c45      	adds	r5, r0, #1
90019f28:	eb09 2917 	add.w	r9, r9, r7, lsr #8
90019f2c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90019f30:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90019f34:	ea4f 1959 	mov.w	r9, r9, lsr #5
90019f38:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90019f3c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90019f40:	ea45 0c0c 	orr.w	ip, r5, ip
90019f44:	ea4c 0c09 	orr.w	ip, ip, r9
90019f48:	f824 c00b 	strh.w	ip, [r4, fp]
90019f4c:	9811      	ldr	r0, [sp, #68]	@ 0x44
90019f4e:	f108 38ff 	add.w	r8, r8, #4294967295
90019f52:	4401      	add	r1, r0
90019f54:	9812      	ldr	r0, [sp, #72]	@ 0x48
90019f56:	4402      	add	r2, r0
90019f58:	e75e      	b.n	90019e18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
90019f5a:	b005      	add	sp, #20
90019f5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019f60 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019f64:	b085      	sub	sp, #20
90019f66:	4693      	mov	fp, r2
90019f68:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90019f6c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
90019f6e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90019f70:	6870      	ldr	r0, [r6, #4]
90019f72:	9101      	str	r1, [sp, #4]
90019f74:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
90019f78:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
90019f7c:	fb00 2404 	mla	r4, r0, r4, r2
90019f80:	6832      	ldr	r2, [r6, #0]
90019f82:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019f86:	682a      	ldr	r2, [r5, #0]
90019f88:	9202      	str	r2, [sp, #8]
90019f8a:	9a01      	ldr	r2, [sp, #4]
90019f8c:	2a00      	cmp	r2, #0
90019f8e:	dc03      	bgt.n	90019f98 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90019f90:	f1bb 0f00 	cmp.w	fp, #0
90019f94:	f340 809a 	ble.w	9001a0cc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
90019f98:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90019f9a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90019f9e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
90019fa2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90019fa4:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90019fa8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90019fac:	2b00      	cmp	r3, #0
90019fae:	dd0c      	ble.n	90019fca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
90019fb0:	1406      	asrs	r6, r0, #16
90019fb2:	d405      	bmi.n	90019fc0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019fb4:	454e      	cmp	r6, r9
90019fb6:	da03      	bge.n	90019fc0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019fb8:	1416      	asrs	r6, r2, #16
90019fba:	d401      	bmi.n	90019fc0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019fbc:	4546      	cmp	r6, r8
90019fbe:	db05      	blt.n	90019fcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019fc0:	4470      	add	r0, lr
90019fc2:	4462      	add	r2, ip
90019fc4:	3b01      	subs	r3, #1
90019fc6:	3402      	adds	r4, #2
90019fc8:	e7f0      	b.n	90019fac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90019fca:	d00f      	beq.n	90019fec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90019fcc:	1e5e      	subs	r6, r3, #1
90019fce:	fb0e 0706 	mla	r7, lr, r6, r0
90019fd2:	143f      	asrs	r7, r7, #16
90019fd4:	d541      	bpl.n	9001a05a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
90019fd6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
90019fda:	4698      	mov	r8, r3
90019fdc:	9603      	str	r6, [sp, #12]
90019fde:	f1b8 0f00 	cmp.w	r8, #0
90019fe2:	dc56      	bgt.n	9001a092 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
90019fe4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019fe8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019fec:	9b01      	ldr	r3, [sp, #4]
90019fee:	2b00      	cmp	r3, #0
90019ff0:	dd6c      	ble.n	9001a0cc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
90019ff2:	ee30 0a04 	vadd.f32	s0, s0, s8
90019ff6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019ff8:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019ffc:	eeb0 6a62 	vmov.f32	s12, s5
9001a000:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a004:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a008:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a00c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001a010:	eeb0 6a43 	vmov.f32	s12, s6
9001a014:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a018:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001a01c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a020:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a024:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a028:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a02c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a030:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a034:	ee12 2a90 	vmov	r2, s5
9001a038:	eef0 2a47 	vmov.f32	s5, s14
9001a03c:	fb92 fef3 	sdiv	lr, r2, r3
9001a040:	ee13 2a10 	vmov	r2, s6
9001a044:	eeb0 3a67 	vmov.f32	s6, s15
9001a048:	fb92 fcf3 	sdiv	ip, r2, r3
9001a04c:	9b01      	ldr	r3, [sp, #4]
9001a04e:	3b01      	subs	r3, #1
9001a050:	9301      	str	r3, [sp, #4]
9001a052:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a054:	bf08      	it	eq
9001a056:	465b      	moveq	r3, fp
9001a058:	e797      	b.n	90019f8a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001a05a:	454f      	cmp	r7, r9
9001a05c:	dabb      	bge.n	90019fd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a05e:	fb0c 2606 	mla	r6, ip, r6, r2
9001a062:	1436      	asrs	r6, r6, #16
9001a064:	d4b7      	bmi.n	90019fd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a066:	4546      	cmp	r6, r8
9001a068:	dab5      	bge.n	90019fd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a06a:	461e      	mov	r6, r3
9001a06c:	46a0      	mov	r8, r4
9001a06e:	2e00      	cmp	r6, #0
9001a070:	ddb8      	ble.n	90019fe4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001a072:	1417      	asrs	r7, r2, #16
9001a074:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001a078:	ea4f 4920 	mov.w	r9, r0, asr #16
9001a07c:	9902      	ldr	r1, [sp, #8]
9001a07e:	4470      	add	r0, lr
9001a080:	4462      	add	r2, ip
9001a082:	fb0a 9707 	mla	r7, sl, r7, r9
9001a086:	3e01      	subs	r6, #1
9001a088:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001a08c:	f828 7b02 	strh.w	r7, [r8], #2
9001a090:	e7ed      	b.n	9001a06e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001a092:	ea5f 4920 	movs.w	r9, r0, asr #16
9001a096:	d414      	bmi.n	9001a0c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001a098:	68ae      	ldr	r6, [r5, #8]
9001a09a:	454e      	cmp	r6, r9
9001a09c:	dd11      	ble.n	9001a0c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001a09e:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001a0a2:	d40e      	bmi.n	9001a0c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001a0a4:	68ef      	ldr	r7, [r5, #12]
9001a0a6:	4557      	cmp	r7, sl
9001a0a8:	dd0b      	ble.n	9001a0c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001a0aa:	b236      	sxth	r6, r6
9001a0ac:	f06f 0101 	mvn.w	r1, #1
9001a0b0:	9f02      	ldr	r7, [sp, #8]
9001a0b2:	fb0a 9606 	mla	r6, sl, r6, r9
9001a0b6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001a0ba:	fb01 f608 	mul.w	r6, r1, r8
9001a0be:	9903      	ldr	r1, [sp, #12]
9001a0c0:	538f      	strh	r7, [r1, r6]
9001a0c2:	4470      	add	r0, lr
9001a0c4:	4462      	add	r2, ip
9001a0c6:	f108 38ff 	add.w	r8, r8, #4294967295
9001a0ca:	e788      	b.n	90019fde <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a0cc:	b005      	add	sp, #20
9001a0ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a0d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a0d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a0d6:	b087      	sub	sp, #28
9001a0d8:	468b      	mov	fp, r1
9001a0da:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a0de:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001a0e0:	9203      	str	r2, [sp, #12]
9001a0e2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001a0e6:	6841      	ldr	r1, [r0, #4]
9001a0e8:	9204      	str	r2, [sp, #16]
9001a0ea:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001a0ee:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001a0f2:	fb01 2505 	mla	r5, r1, r5, r2
9001a0f6:	6802      	ldr	r2, [r0, #0]
9001a0f8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001a0fc:	f8d9 2000 	ldr.w	r2, [r9]
9001a100:	9201      	str	r2, [sp, #4]
9001a102:	f1bb 0f00 	cmp.w	fp, #0
9001a106:	dc03      	bgt.n	9001a110 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001a108:	9a03      	ldr	r2, [sp, #12]
9001a10a:	2a00      	cmp	r2, #0
9001a10c:	f340 8158 	ble.w	9001a3c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001a110:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001a112:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001a116:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001a11a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001a11c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001a120:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a124:	2b00      	cmp	r3, #0
9001a126:	dd0e      	ble.n	9001a146 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001a128:	1402      	asrs	r2, r0, #16
9001a12a:	d405      	bmi.n	9001a138 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a12c:	42ba      	cmp	r2, r7
9001a12e:	da03      	bge.n	9001a138 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a130:	140a      	asrs	r2, r1, #16
9001a132:	d401      	bmi.n	9001a138 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a134:	42b2      	cmp	r2, r6
9001a136:	db07      	blt.n	9001a148 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a138:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001a13a:	3b01      	subs	r3, #1
9001a13c:	3502      	adds	r5, #2
9001a13e:	4410      	add	r0, r2
9001a140:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001a142:	4411      	add	r1, r2
9001a144:	e7ee      	b.n	9001a124 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001a146:	d017      	beq.n	9001a178 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001a148:	1e5a      	subs	r2, r3, #1
9001a14a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001a14c:	fb04 0402 	mla	r4, r4, r2, r0
9001a150:	1424      	asrs	r4, r4, #16
9001a152:	d409      	bmi.n	9001a168 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001a154:	42bc      	cmp	r4, r7
9001a156:	da07      	bge.n	9001a168 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001a158:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001a15a:	fb04 1202 	mla	r2, r4, r2, r1
9001a15e:	1412      	asrs	r2, r2, #16
9001a160:	d402      	bmi.n	9001a168 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001a162:	42b2      	cmp	r2, r6
9001a164:	f2c0 80bf 	blt.w	9001a2e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001a168:	2700      	movs	r7, #0
9001a16a:	19da      	adds	r2, r3, r7
9001a16c:	2a00      	cmp	r2, #0
9001a16e:	dc3e      	bgt.n	9001a1ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001a170:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a174:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001a178:	f1bb 0f00 	cmp.w	fp, #0
9001a17c:	f340 8120 	ble.w	9001a3c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001a180:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a184:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a186:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a18a:	f1bb 0b01 	subs.w	fp, fp, #1
9001a18e:	eeb0 6a62 	vmov.f32	s12, s5
9001a192:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a196:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a19a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a19e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001a1a2:	eeb0 6a43 	vmov.f32	s12, s6
9001a1a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a1aa:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001a1ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a1b2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a1b6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a1ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a1be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a1c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a1c6:	ee12 2a90 	vmov	r2, s5
9001a1ca:	eef0 2a47 	vmov.f32	s5, s14
9001a1ce:	fb92 f3f3 	sdiv	r3, r2, r3
9001a1d2:	ee13 2a10 	vmov	r2, s6
9001a1d6:	9313      	str	r3, [sp, #76]	@ 0x4c
9001a1d8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a1da:	eeb0 3a67 	vmov.f32	s6, s15
9001a1de:	fb92 f3f3 	sdiv	r3, r2, r3
9001a1e2:	9a03      	ldr	r2, [sp, #12]
9001a1e4:	9314      	str	r3, [sp, #80]	@ 0x50
9001a1e6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a1e8:	bf08      	it	eq
9001a1ea:	4613      	moveq	r3, r2
9001a1ec:	e789      	b.n	9001a102 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001a1ee:	1406      	asrs	r6, r0, #16
9001a1f0:	d42d      	bmi.n	9001a24e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a1f2:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001a1f6:	42b4      	cmp	r4, r6
9001a1f8:	dd29      	ble.n	9001a24e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a1fa:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001a1fe:	d426      	bmi.n	9001a24e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a200:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001a204:	4562      	cmp	r2, ip
9001a206:	dd22      	ble.n	9001a24e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a208:	b224      	sxth	r4, r4
9001a20a:	9a01      	ldr	r2, [sp, #4]
9001a20c:	fb0c 6404 	mla	r4, ip, r4, r6
9001a210:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001a214:	0e22      	lsrs	r2, r4, #24
9001a216:	d01a      	beq.n	9001a24e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a218:	9e04      	ldr	r6, [sp, #16]
9001a21a:	4372      	muls	r2, r6
9001a21c:	1c56      	adds	r6, r2, #1
9001a21e:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001a222:	0a26      	lsrs	r6, r4, #8
9001a224:	1212      	asrs	r2, r2, #8
9001a226:	9605      	str	r6, [sp, #20]
9001a228:	2aff      	cmp	r2, #255	@ 0xff
9001a22a:	d116      	bne.n	9001a25a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001a22c:	f06f 0201 	mvn.w	r2, #1
9001a230:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001a234:	fb02 fc07 	mul.w	ip, r2, r7
9001a238:	0962      	lsrs	r2, r4, #5
9001a23a:	f026 0607 	bic.w	r6, r6, #7
9001a23e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001a242:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001a246:	4316      	orrs	r6, r2
9001a248:	4326      	orrs	r6, r4
9001a24a:	f825 600c 	strh.w	r6, [r5, ip]
9001a24e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001a250:	3f01      	subs	r7, #1
9001a252:	4410      	add	r0, r2
9001a254:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001a256:	4411      	add	r1, r2
9001a258:	e787      	b.n	9001a16a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a25a:	f06f 0601 	mvn.w	r6, #1
9001a25e:	fa1f fa82 	uxth.w	sl, r2
9001a262:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001a266:	43d2      	mvns	r2, r2
9001a268:	437e      	muls	r6, r7
9001a26a:	b2e4      	uxtb	r4, r4
9001a26c:	fb1c fc0a 	smulbb	ip, ip, sl
9001a270:	b2d2      	uxtb	r2, r2
9001a272:	f835 8006 	ldrh.w	r8, [r5, r6]
9001a276:	fb14 f40a 	smulbb	r4, r4, sl
9001a27a:	9602      	str	r6, [sp, #8]
9001a27c:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001a280:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001a284:	fb16 f60a 	smulbb	r6, r6, sl
9001a288:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001a28c:	fb0e ce02 	mla	lr, lr, r2, ip
9001a290:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001a294:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a298:	fa1f fe8e 	uxth.w	lr, lr
9001a29c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001a2a0:	fa5f f888 	uxtb.w	r8, r8
9001a2a4:	fb0c 6c02 	mla	ip, ip, r2, r6
9001a2a8:	fb08 4402 	mla	r4, r8, r2, r4
9001a2ac:	f10e 0201 	add.w	r2, lr, #1
9001a2b0:	fa1f fc8c 	uxth.w	ip, ip
9001a2b4:	b2a4      	uxth	r4, r4
9001a2b6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001a2ba:	9a02      	ldr	r2, [sp, #8]
9001a2bc:	1c66      	adds	r6, r4, #1
9001a2be:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001a2c2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001a2c6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001a2ca:	ea46 0e0e 	orr.w	lr, r6, lr
9001a2ce:	f10c 0601 	add.w	r6, ip, #1
9001a2d2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001a2d6:	0976      	lsrs	r6, r6, #5
9001a2d8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001a2dc:	ea4e 0e06 	orr.w	lr, lr, r6
9001a2e0:	f825 e002 	strh.w	lr, [r5, r2]
9001a2e4:	e7b3      	b.n	9001a24e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a2e6:	f04f 0800 	mov.w	r8, #0
9001a2ea:	eba3 0208 	sub.w	r2, r3, r8
9001a2ee:	2a00      	cmp	r2, #0
9001a2f0:	f77f af3e 	ble.w	9001a170 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a2f4:	1404      	asrs	r4, r0, #16
9001a2f6:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001a2fa:	140a      	asrs	r2, r1, #16
9001a2fc:	fb06 4202 	mla	r2, r6, r2, r4
9001a300:	9c01      	ldr	r4, [sp, #4]
9001a302:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001a306:	0e22      	lsrs	r2, r4, #24
9001a308:	d015      	beq.n	9001a336 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001a30a:	9e04      	ldr	r6, [sp, #16]
9001a30c:	4372      	muls	r2, r6
9001a30e:	1c56      	adds	r6, r2, #1
9001a310:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001a314:	0a26      	lsrs	r6, r4, #8
9001a316:	1212      	asrs	r2, r2, #8
9001a318:	2aff      	cmp	r2, #255	@ 0xff
9001a31a:	d113      	bne.n	9001a344 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001a31c:	0962      	lsrs	r2, r4, #5
9001a31e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001a322:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001a326:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001a32a:	f026 0607 	bic.w	r6, r6, #7
9001a32e:	4316      	orrs	r6, r2
9001a330:	4326      	orrs	r6, r4
9001a332:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001a336:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001a338:	f108 0801 	add.w	r8, r8, #1
9001a33c:	4410      	add	r0, r2
9001a33e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001a340:	4411      	add	r1, r2
9001a342:	e7d2      	b.n	9001a2ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001a344:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001a348:	fa1f fa82 	uxth.w	sl, r2
9001a34c:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001a350:	43d2      	mvns	r2, r2
9001a352:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a356:	fb17 f70a 	smulbb	r7, r7, sl
9001a35a:	b2d2      	uxtb	r2, r2
9001a35c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a360:	b2e4      	uxtb	r4, r4
9001a362:	b2f6      	uxtb	r6, r6
9001a364:	fb0c 7c02 	mla	ip, ip, r2, r7
9001a368:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a36c:	fb14 f40a 	smulbb	r4, r4, sl
9001a370:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a374:	fa1f fc8c 	uxth.w	ip, ip
9001a378:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a37c:	fb16 f60a 	smulbb	r6, r6, sl
9001a380:	fa5f fe8e 	uxtb.w	lr, lr
9001a384:	fb0e 4402 	mla	r4, lr, r2, r4
9001a388:	fb07 6702 	mla	r7, r7, r2, r6
9001a38c:	f10c 0201 	add.w	r2, ip, #1
9001a390:	b2a4      	uxth	r4, r4
9001a392:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001a396:	1c66      	adds	r6, r4, #1
9001a398:	b2bf      	uxth	r7, r7
9001a39a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a39e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001a3a2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001a3a6:	ea46 0c0c 	orr.w	ip, r6, ip
9001a3aa:	1c7e      	adds	r6, r7, #1
9001a3ac:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001a3b0:	0976      	lsrs	r6, r6, #5
9001a3b2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001a3b6:	ea4c 0c06 	orr.w	ip, ip, r6
9001a3ba:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001a3be:	e7ba      	b.n	9001a336 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001a3c0:	b007      	add	sp, #28
9001a3c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001a3c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a3c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a3cc:	b085      	sub	sp, #20
9001a3ce:	468b      	mov	fp, r1
9001a3d0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a3d4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a3d6:	9203      	str	r2, [sp, #12]
9001a3d8:	6841      	ldr	r1, [r0, #4]
9001a3da:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001a3de:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001a3e2:	fb01 2404 	mla	r4, r1, r4, r2
9001a3e6:	6802      	ldr	r2, [r0, #0]
9001a3e8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a3ec:	f8d8 2000 	ldr.w	r2, [r8]
9001a3f0:	9201      	str	r2, [sp, #4]
9001a3f2:	f1bb 0f00 	cmp.w	fp, #0
9001a3f6:	dc03      	bgt.n	9001a400 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001a3f8:	9a03      	ldr	r2, [sp, #12]
9001a3fa:	2a00      	cmp	r2, #0
9001a3fc:	f340 814f 	ble.w	9001a69e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001a400:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001a402:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001a406:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a40a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001a40c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001a410:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a414:	2b00      	cmp	r3, #0
9001a416:	dd0e      	ble.n	9001a436 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001a418:	1408      	asrs	r0, r1, #16
9001a41a:	d405      	bmi.n	9001a428 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a41c:	42b8      	cmp	r0, r7
9001a41e:	da03      	bge.n	9001a428 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a420:	1410      	asrs	r0, r2, #16
9001a422:	d401      	bmi.n	9001a428 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a424:	42b0      	cmp	r0, r6
9001a426:	db07      	blt.n	9001a438 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a428:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001a42a:	3b01      	subs	r3, #1
9001a42c:	3402      	adds	r4, #2
9001a42e:	4401      	add	r1, r0
9001a430:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001a432:	4402      	add	r2, r0
9001a434:	e7ee      	b.n	9001a414 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001a436:	d017      	beq.n	9001a468 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a438:	1e58      	subs	r0, r3, #1
9001a43a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001a43c:	fb05 1500 	mla	r5, r5, r0, r1
9001a440:	142d      	asrs	r5, r5, #16
9001a442:	d409      	bmi.n	9001a458 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a444:	42bd      	cmp	r5, r7
9001a446:	da07      	bge.n	9001a458 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a448:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001a44a:	fb05 2000 	mla	r0, r5, r0, r2
9001a44e:	1400      	asrs	r0, r0, #16
9001a450:	d402      	bmi.n	9001a458 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a452:	42b0      	cmp	r0, r6
9001a454:	f2c0 80ba 	blt.w	9001a5cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001a458:	2600      	movs	r6, #0
9001a45a:	1998      	adds	r0, r3, r6
9001a45c:	2800      	cmp	r0, #0
9001a45e:	dc3e      	bgt.n	9001a4de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001a460:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a464:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a468:	f1bb 0f00 	cmp.w	fp, #0
9001a46c:	f340 8117 	ble.w	9001a69e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001a470:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a474:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a476:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a47a:	f1bb 0b01 	subs.w	fp, fp, #1
9001a47e:	eeb0 6a62 	vmov.f32	s12, s5
9001a482:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a486:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a48a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a48e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001a492:	eeb0 6a43 	vmov.f32	s12, s6
9001a496:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a49a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001a49e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a4a2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a4a6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a4aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a4ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a4b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a4b6:	ee12 2a90 	vmov	r2, s5
9001a4ba:	eef0 2a47 	vmov.f32	s5, s14
9001a4be:	fb92 f3f3 	sdiv	r3, r2, r3
9001a4c2:	ee13 2a10 	vmov	r2, s6
9001a4c6:	9311      	str	r3, [sp, #68]	@ 0x44
9001a4c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a4ca:	eeb0 3a67 	vmov.f32	s6, s15
9001a4ce:	fb92 f3f3 	sdiv	r3, r2, r3
9001a4d2:	9a03      	ldr	r2, [sp, #12]
9001a4d4:	9312      	str	r3, [sp, #72]	@ 0x48
9001a4d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a4d8:	bf08      	it	eq
9001a4da:	4613      	moveq	r3, r2
9001a4dc:	e789      	b.n	9001a3f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001a4de:	140f      	asrs	r7, r1, #16
9001a4e0:	d424      	bmi.n	9001a52c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a4e2:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001a4e6:	42bd      	cmp	r5, r7
9001a4e8:	dd20      	ble.n	9001a52c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a4ea:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001a4ee:	d41d      	bmi.n	9001a52c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a4f0:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001a4f4:	4560      	cmp	r0, ip
9001a4f6:	dd19      	ble.n	9001a52c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a4f8:	b22d      	sxth	r5, r5
9001a4fa:	9801      	ldr	r0, [sp, #4]
9001a4fc:	fb0c 7505 	mla	r5, ip, r5, r7
9001a500:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001a504:	0e07      	lsrs	r7, r0, #24
9001a506:	2fff      	cmp	r7, #255	@ 0xff
9001a508:	d116      	bne.n	9001a538 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a50a:	f06f 0501 	mvn.w	r5, #1
9001a50e:	fb05 f706 	mul.w	r7, r5, r6
9001a512:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001a516:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001a51a:	0945      	lsrs	r5, r0, #5
9001a51c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001a520:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001a524:	ea4c 0505 	orr.w	r5, ip, r5
9001a528:	4305      	orrs	r5, r0
9001a52a:	53e5      	strh	r5, [r4, r7]
9001a52c:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001a52e:	3e01      	subs	r6, #1
9001a530:	4401      	add	r1, r0
9001a532:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001a534:	4402      	add	r2, r0
9001a536:	e790      	b.n	9001a45a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001a538:	b2fd      	uxtb	r5, r7
9001a53a:	2f00      	cmp	r7, #0
9001a53c:	d0f6      	beq.n	9001a52c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a53e:	f06f 0701 	mvn.w	r7, #1
9001a542:	fa1f f985 	uxth.w	r9, r5
9001a546:	43ed      	mvns	r5, r5
9001a548:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001a54c:	4377      	muls	r7, r6
9001a54e:	fb1a fa09 	smulbb	sl, sl, r9
9001a552:	b2ed      	uxtb	r5, r5
9001a554:	f834 e007 	ldrh.w	lr, [r4, r7]
9001a558:	9702      	str	r7, [sp, #8]
9001a55a:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001a55e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a562:	fb17 f709 	smulbb	r7, r7, r9
9001a566:	b2c0      	uxtb	r0, r0
9001a568:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a56c:	fb10 f009 	smulbb	r0, r0, r9
9001a570:	fb0c 7c05 	mla	ip, ip, r5, r7
9001a574:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a578:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a57c:	fa1f fc8c 	uxth.w	ip, ip
9001a580:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a584:	fa5f fe8e 	uxtb.w	lr, lr
9001a588:	fb07 a705 	mla	r7, r7, r5, sl
9001a58c:	fb0e 0005 	mla	r0, lr, r5, r0
9001a590:	f10c 0501 	add.w	r5, ip, #1
9001a594:	b2bf      	uxth	r7, r7
9001a596:	b280      	uxth	r0, r0
9001a598:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a59c:	f100 0a01 	add.w	sl, r0, #1
9001a5a0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a5a4:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001a5a8:	9802      	ldr	r0, [sp, #8]
9001a5aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a5ae:	ea4a 0c0c 	orr.w	ip, sl, ip
9001a5b2:	f107 0a01 	add.w	sl, r7, #1
9001a5b6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001a5ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a5be:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001a5c2:	ea4c 0c0a 	orr.w	ip, ip, sl
9001a5c6:	f824 c000 	strh.w	ip, [r4, r0]
9001a5ca:	e7af      	b.n	9001a52c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a5cc:	f04f 0e00 	mov.w	lr, #0
9001a5d0:	eba3 000e 	sub.w	r0, r3, lr
9001a5d4:	2800      	cmp	r0, #0
9001a5d6:	f77f af43 	ble.w	9001a460 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a5da:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001a5de:	140d      	asrs	r5, r1, #16
9001a5e0:	1410      	asrs	r0, r2, #16
9001a5e2:	fb06 5000 	mla	r0, r6, r0, r5
9001a5e6:	9d01      	ldr	r5, [sp, #4]
9001a5e8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001a5ec:	0e2e      	lsrs	r6, r5, #24
9001a5ee:	2eff      	cmp	r6, #255	@ 0xff
9001a5f0:	d112      	bne.n	9001a618 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001a5f2:	482c      	ldr	r0, [pc, #176]	@ (9001a6a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001a5f4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001a5f8:	0968      	lsrs	r0, r5, #5
9001a5fa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a5fe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001a602:	4330      	orrs	r0, r6
9001a604:	4328      	orrs	r0, r5
9001a606:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001a60a:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001a60c:	f10e 0e01 	add.w	lr, lr, #1
9001a610:	4401      	add	r1, r0
9001a612:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001a614:	4402      	add	r2, r0
9001a616:	e7db      	b.n	9001a5d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001a618:	b2f0      	uxtb	r0, r6
9001a61a:	2e00      	cmp	r6, #0
9001a61c:	d0f5      	beq.n	9001a60a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001a61e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001a622:	fa1f f980 	uxth.w	r9, r0
9001a626:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001a62a:	43c0      	mvns	r0, r0
9001a62c:	ea4f 272c 	mov.w	r7, ip, asr #8
9001a630:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001a634:	fb16 f609 	smulbb	r6, r6, r9
9001a638:	b2c0      	uxtb	r0, r0
9001a63a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a63e:	b2ed      	uxtb	r5, r5
9001a640:	fb1a fa09 	smulbb	sl, sl, r9
9001a644:	fb07 6700 	mla	r7, r7, r0, r6
9001a648:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001a64c:	fb15 f509 	smulbb	r5, r5, r9
9001a650:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001a654:	b2bf      	uxth	r7, r7
9001a656:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001a65a:	fa5f fc8c 	uxtb.w	ip, ip
9001a65e:	fb06 a600 	mla	r6, r6, r0, sl
9001a662:	fb0c 5500 	mla	r5, ip, r0, r5
9001a666:	1c78      	adds	r0, r7, #1
9001a668:	b2b6      	uxth	r6, r6
9001a66a:	b2ad      	uxth	r5, r5
9001a66c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001a670:	f105 0a01 	add.w	sl, r5, #1
9001a674:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001a678:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a67c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a680:	ea4a 0707 	orr.w	r7, sl, r7
9001a684:	f106 0a01 	add.w	sl, r6, #1
9001a688:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a68c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a690:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001a694:	ea47 070a 	orr.w	r7, r7, sl
9001a698:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001a69c:	e7b5      	b.n	9001a60a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001a69e:	b005      	add	sp, #20
9001a6a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a6a4:	fffff800 	.word	0xfffff800

9001a6a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a6a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a6ac:	b087      	sub	sp, #28
9001a6ae:	468b      	mov	fp, r1
9001a6b0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a6b4:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001a6b6:	9203      	str	r2, [sp, #12]
9001a6b8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001a6bc:	6841      	ldr	r1, [r0, #4]
9001a6be:	9204      	str	r2, [sp, #16]
9001a6c0:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001a6c4:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001a6c8:	fb01 2404 	mla	r4, r1, r4, r2
9001a6cc:	6802      	ldr	r2, [r0, #0]
9001a6ce:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a6d2:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001a6d6:	3201      	adds	r2, #1
9001a6d8:	f022 0201 	bic.w	r2, r2, #1
9001a6dc:	9200      	str	r2, [sp, #0]
9001a6de:	f8d9 2000 	ldr.w	r2, [r9]
9001a6e2:	9201      	str	r2, [sp, #4]
9001a6e4:	f1bb 0f00 	cmp.w	fp, #0
9001a6e8:	dc03      	bgt.n	9001a6f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001a6ea:	9a03      	ldr	r2, [sp, #12]
9001a6ec:	2a00      	cmp	r2, #0
9001a6ee:	f340 816a 	ble.w	9001a9c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001a6f2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001a6f4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001a6f8:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001a6fc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001a6fe:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001a702:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a706:	2b00      	cmp	r3, #0
9001a708:	dd0e      	ble.n	9001a728 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a70a:	1402      	asrs	r2, r0, #16
9001a70c:	d405      	bmi.n	9001a71a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a70e:	42ba      	cmp	r2, r7
9001a710:	da03      	bge.n	9001a71a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a712:	140a      	asrs	r2, r1, #16
9001a714:	d401      	bmi.n	9001a71a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a716:	42b2      	cmp	r2, r6
9001a718:	db07      	blt.n	9001a72a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001a71a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001a71c:	3b01      	subs	r3, #1
9001a71e:	3402      	adds	r4, #2
9001a720:	4410      	add	r0, r2
9001a722:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001a724:	4411      	add	r1, r2
9001a726:	e7ee      	b.n	9001a706 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001a728:	d017      	beq.n	9001a75a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001a72a:	1e5a      	subs	r2, r3, #1
9001a72c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001a72e:	fb05 0502 	mla	r5, r5, r2, r0
9001a732:	142d      	asrs	r5, r5, #16
9001a734:	d409      	bmi.n	9001a74a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a736:	42bd      	cmp	r5, r7
9001a738:	da07      	bge.n	9001a74a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a73a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001a73c:	fb05 1202 	mla	r2, r5, r2, r1
9001a740:	1412      	asrs	r2, r2, #16
9001a742:	d402      	bmi.n	9001a74a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a744:	42b2      	cmp	r2, r6
9001a746:	f2c0 80c8 	blt.w	9001a8da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001a74a:	2700      	movs	r7, #0
9001a74c:	19da      	adds	r2, r3, r7
9001a74e:	2a00      	cmp	r2, #0
9001a750:	dc3e      	bgt.n	9001a7d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001a752:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a756:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a75a:	f1bb 0f00 	cmp.w	fp, #0
9001a75e:	f340 8132 	ble.w	9001a9c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001a762:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a766:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a768:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a76c:	f1bb 0b01 	subs.w	fp, fp, #1
9001a770:	eeb0 6a62 	vmov.f32	s12, s5
9001a774:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a778:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a77c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a780:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001a784:	eeb0 6a43 	vmov.f32	s12, s6
9001a788:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a78c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001a790:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a794:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a798:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a79c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a7a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a7a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a7a8:	ee12 2a90 	vmov	r2, s5
9001a7ac:	eef0 2a47 	vmov.f32	s5, s14
9001a7b0:	fb92 f3f3 	sdiv	r3, r2, r3
9001a7b4:	ee13 2a10 	vmov	r2, s6
9001a7b8:	9313      	str	r3, [sp, #76]	@ 0x4c
9001a7ba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a7bc:	eeb0 3a67 	vmov.f32	s6, s15
9001a7c0:	fb92 f3f3 	sdiv	r3, r2, r3
9001a7c4:	9a03      	ldr	r2, [sp, #12]
9001a7c6:	9314      	str	r3, [sp, #80]	@ 0x50
9001a7c8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a7ca:	bf08      	it	eq
9001a7cc:	4613      	moveq	r3, r2
9001a7ce:	e789      	b.n	9001a6e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001a7d0:	1405      	asrs	r5, r0, #16
9001a7d2:	d436      	bmi.n	9001a842 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a7d4:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001a7d8:	42aa      	cmp	r2, r5
9001a7da:	dd32      	ble.n	9001a842 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a7dc:	140e      	asrs	r6, r1, #16
9001a7de:	d430      	bmi.n	9001a842 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a7e0:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001a7e4:	42b2      	cmp	r2, r6
9001a7e6:	dd2c      	ble.n	9001a842 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a7e8:	9a00      	ldr	r2, [sp, #0]
9001a7ea:	fb06 5502 	mla	r5, r6, r2, r5
9001a7ee:	9e01      	ldr	r6, [sp, #4]
9001a7f0:	086a      	lsrs	r2, r5, #1
9001a7f2:	5cb2      	ldrb	r2, [r6, r2]
9001a7f4:	07ee      	lsls	r6, r5, #31
9001a7f6:	bf54      	ite	pl
9001a7f8:	f002 020f 	andpl.w	r2, r2, #15
9001a7fc:	1112      	asrmi	r2, r2, #4
9001a7fe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a802:	b2d2      	uxtb	r2, r2
9001a804:	b1ea      	cbz	r2, 9001a842 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a806:	9d04      	ldr	r5, [sp, #16]
9001a808:	436a      	muls	r2, r5
9001a80a:	1c55      	adds	r5, r2, #1
9001a80c:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001a810:	4d6e      	ldr	r5, [pc, #440]	@ (9001a9cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001a812:	1212      	asrs	r2, r2, #8
9001a814:	682d      	ldr	r5, [r5, #0]
9001a816:	2aff      	cmp	r2, #255	@ 0xff
9001a818:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001a81c:	9605      	str	r6, [sp, #20]
9001a81e:	d116      	bne.n	9001a84e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001a820:	f06f 0201 	mvn.w	r2, #1
9001a824:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001a828:	fb02 fc07 	mul.w	ip, r2, r7
9001a82c:	096a      	lsrs	r2, r5, #5
9001a82e:	f026 0607 	bic.w	r6, r6, #7
9001a832:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a836:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001a83a:	4316      	orrs	r6, r2
9001a83c:	432e      	orrs	r6, r5
9001a83e:	f824 600c 	strh.w	r6, [r4, ip]
9001a842:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001a844:	3f01      	subs	r7, #1
9001a846:	4410      	add	r0, r2
9001a848:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001a84a:	4411      	add	r1, r2
9001a84c:	e77e      	b.n	9001a74c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001a84e:	f06f 0601 	mvn.w	r6, #1
9001a852:	fa1f fa82 	uxth.w	sl, r2
9001a856:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001a85a:	43d2      	mvns	r2, r2
9001a85c:	437e      	muls	r6, r7
9001a85e:	b2ed      	uxtb	r5, r5
9001a860:	fb1c fc0a 	smulbb	ip, ip, sl
9001a864:	b2d2      	uxtb	r2, r2
9001a866:	f834 8006 	ldrh.w	r8, [r4, r6]
9001a86a:	fb15 f50a 	smulbb	r5, r5, sl
9001a86e:	9602      	str	r6, [sp, #8]
9001a870:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001a874:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001a878:	fb16 f60a 	smulbb	r6, r6, sl
9001a87c:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001a880:	fb0e ce02 	mla	lr, lr, r2, ip
9001a884:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001a888:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a88c:	fa1f fe8e 	uxth.w	lr, lr
9001a890:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001a894:	fa5f f888 	uxtb.w	r8, r8
9001a898:	fb0c 6c02 	mla	ip, ip, r2, r6
9001a89c:	fb08 5502 	mla	r5, r8, r2, r5
9001a8a0:	f10e 0201 	add.w	r2, lr, #1
9001a8a4:	fa1f fc8c 	uxth.w	ip, ip
9001a8a8:	b2ad      	uxth	r5, r5
9001a8aa:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001a8ae:	9a02      	ldr	r2, [sp, #8]
9001a8b0:	1c6e      	adds	r6, r5, #1
9001a8b2:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001a8b6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001a8ba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001a8be:	ea46 0e0e 	orr.w	lr, r6, lr
9001a8c2:	f10c 0601 	add.w	r6, ip, #1
9001a8c6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001a8ca:	0976      	lsrs	r6, r6, #5
9001a8cc:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001a8d0:	ea4e 0e06 	orr.w	lr, lr, r6
9001a8d4:	f824 e002 	strh.w	lr, [r4, r2]
9001a8d8:	e7b3      	b.n	9001a842 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a8da:	f04f 0800 	mov.w	r8, #0
9001a8de:	eba3 0208 	sub.w	r2, r3, r8
9001a8e2:	2a00      	cmp	r2, #0
9001a8e4:	f77f af35 	ble.w	9001a752 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001a8e8:	1402      	asrs	r2, r0, #16
9001a8ea:	9e00      	ldr	r6, [sp, #0]
9001a8ec:	140d      	asrs	r5, r1, #16
9001a8ee:	fb06 2505 	mla	r5, r6, r5, r2
9001a8f2:	9e01      	ldr	r6, [sp, #4]
9001a8f4:	086a      	lsrs	r2, r5, #1
9001a8f6:	07ed      	lsls	r5, r5, #31
9001a8f8:	5cb2      	ldrb	r2, [r6, r2]
9001a8fa:	bf54      	ite	pl
9001a8fc:	f002 020f 	andpl.w	r2, r2, #15
9001a900:	1112      	asrmi	r2, r2, #4
9001a902:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a906:	b2d2      	uxtb	r2, r2
9001a908:	b1c2      	cbz	r2, 9001a93c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a90a:	9d04      	ldr	r5, [sp, #16]
9001a90c:	436a      	muls	r2, r5
9001a90e:	1c55      	adds	r5, r2, #1
9001a910:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001a914:	4d2d      	ldr	r5, [pc, #180]	@ (9001a9cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001a916:	1212      	asrs	r2, r2, #8
9001a918:	682e      	ldr	r6, [r5, #0]
9001a91a:	2aff      	cmp	r2, #255	@ 0xff
9001a91c:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001a920:	d113      	bne.n	9001a94a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001a922:	0972      	lsrs	r2, r6, #5
9001a924:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001a928:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001a92c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001a930:	f025 0507 	bic.w	r5, r5, #7
9001a934:	4315      	orrs	r5, r2
9001a936:	4335      	orrs	r5, r6
9001a938:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001a93c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001a93e:	f108 0801 	add.w	r8, r8, #1
9001a942:	4410      	add	r0, r2
9001a944:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001a946:	4411      	add	r1, r2
9001a948:	e7c9      	b.n	9001a8de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001a94a:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001a94e:	fa1f fa82 	uxth.w	sl, r2
9001a952:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001a956:	43d2      	mvns	r2, r2
9001a958:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a95c:	fb17 f70a 	smulbb	r7, r7, sl
9001a960:	b2d2      	uxtb	r2, r2
9001a962:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a966:	b2f6      	uxtb	r6, r6
9001a968:	b2ed      	uxtb	r5, r5
9001a96a:	fb0c 7c02 	mla	ip, ip, r2, r7
9001a96e:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a972:	fb16 f60a 	smulbb	r6, r6, sl
9001a976:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a97a:	fa1f fc8c 	uxth.w	ip, ip
9001a97e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a982:	fb15 f50a 	smulbb	r5, r5, sl
9001a986:	fa5f fe8e 	uxtb.w	lr, lr
9001a98a:	fb0e 6602 	mla	r6, lr, r2, r6
9001a98e:	fb07 5702 	mla	r7, r7, r2, r5
9001a992:	f10c 0201 	add.w	r2, ip, #1
9001a996:	b2b6      	uxth	r6, r6
9001a998:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001a99c:	1c75      	adds	r5, r6, #1
9001a99e:	b2bf      	uxth	r7, r7
9001a9a0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a9a4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001a9a8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a9ac:	ea45 0c0c 	orr.w	ip, r5, ip
9001a9b0:	1c7d      	adds	r5, r7, #1
9001a9b2:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001a9b6:	096d      	lsrs	r5, r5, #5
9001a9b8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001a9bc:	ea4c 0c05 	orr.w	ip, ip, r5
9001a9c0:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001a9c4:	e7ba      	b.n	9001a93c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a9c6:	b007      	add	sp, #28
9001a9c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a9cc:	2001aa50 	.word	0x2001aa50

9001a9d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a9d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a9d4:	b087      	sub	sp, #28
9001a9d6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a9da:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001ace4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001a9de:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001a9e0:	9101      	str	r1, [sp, #4]
9001a9e2:	9205      	str	r2, [sp, #20]
9001a9e4:	6841      	ldr	r1, [r0, #4]
9001a9e6:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001a9ea:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001a9ee:	fb01 2404 	mla	r4, r1, r4, r2
9001a9f2:	6802      	ldr	r2, [r0, #0]
9001a9f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a9f8:	f8db 2008 	ldr.w	r2, [fp, #8]
9001a9fc:	3201      	adds	r2, #1
9001a9fe:	f022 0201 	bic.w	r2, r2, #1
9001aa02:	9202      	str	r2, [sp, #8]
9001aa04:	f8db 2000 	ldr.w	r2, [fp]
9001aa08:	9203      	str	r2, [sp, #12]
9001aa0a:	9a01      	ldr	r2, [sp, #4]
9001aa0c:	2a00      	cmp	r2, #0
9001aa0e:	dc03      	bgt.n	9001aa18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001aa10:	9a05      	ldr	r2, [sp, #20]
9001aa12:	2a00      	cmp	r2, #0
9001aa14:	f340 8162 	ble.w	9001acdc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001aa18:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001aa1a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001aa1e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001aa22:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001aa24:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001aa28:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001aa2c:	2b00      	cmp	r3, #0
9001aa2e:	dd0e      	ble.n	9001aa4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001aa30:	1402      	asrs	r2, r0, #16
9001aa32:	d405      	bmi.n	9001aa40 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001aa34:	42ba      	cmp	r2, r7
9001aa36:	da03      	bge.n	9001aa40 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001aa38:	140a      	asrs	r2, r1, #16
9001aa3a:	d401      	bmi.n	9001aa40 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001aa3c:	42b2      	cmp	r2, r6
9001aa3e:	db07      	blt.n	9001aa50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001aa40:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001aa42:	3b01      	subs	r3, #1
9001aa44:	3402      	adds	r4, #2
9001aa46:	4410      	add	r0, r2
9001aa48:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001aa4a:	4411      	add	r1, r2
9001aa4c:	e7ee      	b.n	9001aa2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001aa4e:	d017      	beq.n	9001aa80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001aa50:	1e5a      	subs	r2, r3, #1
9001aa52:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001aa54:	fb05 0502 	mla	r5, r5, r2, r0
9001aa58:	142d      	asrs	r5, r5, #16
9001aa5a:	d409      	bmi.n	9001aa70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001aa5c:	42bd      	cmp	r5, r7
9001aa5e:	da07      	bge.n	9001aa70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001aa60:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001aa62:	fb05 1202 	mla	r2, r5, r2, r1
9001aa66:	1412      	asrs	r2, r2, #16
9001aa68:	d402      	bmi.n	9001aa70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001aa6a:	42b2      	cmp	r2, r6
9001aa6c:	f2c0 80c3 	blt.w	9001abf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001aa70:	2500      	movs	r5, #0
9001aa72:	195a      	adds	r2, r3, r5
9001aa74:	2a00      	cmp	r2, #0
9001aa76:	dc3f      	bgt.n	9001aaf8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001aa78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001aa7c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001aa80:	9b01      	ldr	r3, [sp, #4]
9001aa82:	2b00      	cmp	r3, #0
9001aa84:	f340 812a 	ble.w	9001acdc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001aa88:	ee30 0a04 	vadd.f32	s0, s0, s8
9001aa8c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001aa8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001aa92:	eeb0 6a62 	vmov.f32	s12, s5
9001aa96:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001aa9a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001aa9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001aaa2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001aaa6:	eeb0 6a43 	vmov.f32	s12, s6
9001aaaa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001aaae:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001aab2:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001aab6:	ee61 7a27 	vmul.f32	s15, s2, s15
9001aaba:	ee77 2a62 	vsub.f32	s5, s14, s5
9001aabe:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001aac2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001aac6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001aaca:	ee12 2a90 	vmov	r2, s5
9001aace:	eef0 2a47 	vmov.f32	s5, s14
9001aad2:	fb92 f3f3 	sdiv	r3, r2, r3
9001aad6:	ee13 2a10 	vmov	r2, s6
9001aada:	9313      	str	r3, [sp, #76]	@ 0x4c
9001aadc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001aade:	eeb0 3a67 	vmov.f32	s6, s15
9001aae2:	fb92 f3f3 	sdiv	r3, r2, r3
9001aae6:	9314      	str	r3, [sp, #80]	@ 0x50
9001aae8:	9b01      	ldr	r3, [sp, #4]
9001aaea:	9a05      	ldr	r2, [sp, #20]
9001aaec:	3b01      	subs	r3, #1
9001aaee:	9301      	str	r3, [sp, #4]
9001aaf0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001aaf2:	bf08      	it	eq
9001aaf4:	4613      	moveq	r3, r2
9001aaf6:	e788      	b.n	9001aa0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001aaf8:	1406      	asrs	r6, r0, #16
9001aafa:	d42c      	bmi.n	9001ab56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001aafc:	f8db 2008 	ldr.w	r2, [fp, #8]
9001ab00:	42b2      	cmp	r2, r6
9001ab02:	dd28      	ble.n	9001ab56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ab04:	140f      	asrs	r7, r1, #16
9001ab06:	d426      	bmi.n	9001ab56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ab08:	f8db 200c 	ldr.w	r2, [fp, #12]
9001ab0c:	42ba      	cmp	r2, r7
9001ab0e:	dd22      	ble.n	9001ab56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ab10:	9a02      	ldr	r2, [sp, #8]
9001ab12:	fb07 6602 	mla	r6, r7, r2, r6
9001ab16:	9f03      	ldr	r7, [sp, #12]
9001ab18:	0872      	lsrs	r2, r6, #1
9001ab1a:	07f6      	lsls	r6, r6, #31
9001ab1c:	5cba      	ldrb	r2, [r7, r2]
9001ab1e:	bf54      	ite	pl
9001ab20:	f002 020f 	andpl.w	r2, r2, #15
9001ab24:	1112      	asrmi	r2, r2, #4
9001ab26:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001ab2a:	b2d2      	uxtb	r2, r2
9001ab2c:	2aff      	cmp	r2, #255	@ 0xff
9001ab2e:	d118      	bne.n	9001ab62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001ab30:	f06f 0601 	mvn.w	r6, #1
9001ab34:	f8d8 2000 	ldr.w	r2, [r8]
9001ab38:	fb06 f705 	mul.w	r7, r6, r5
9001ab3c:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001ab40:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001ab44:	0956      	lsrs	r6, r2, #5
9001ab46:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001ab4a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001ab4e:	ea4c 0606 	orr.w	r6, ip, r6
9001ab52:	4316      	orrs	r6, r2
9001ab54:	53e6      	strh	r6, [r4, r7]
9001ab56:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ab58:	3d01      	subs	r5, #1
9001ab5a:	4410      	add	r0, r2
9001ab5c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ab5e:	4411      	add	r1, r2
9001ab60:	e787      	b.n	9001aa72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001ab62:	2a00      	cmp	r2, #0
9001ab64:	d0f7      	beq.n	9001ab56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ab66:	f06f 0601 	mvn.w	r6, #1
9001ab6a:	f8d8 c000 	ldr.w	ip, [r8]
9001ab6e:	fa1f f982 	uxth.w	r9, r2
9001ab72:	43d2      	mvns	r2, r2
9001ab74:	436e      	muls	r6, r5
9001ab76:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001ab7a:	b2d2      	uxtb	r2, r2
9001ab7c:	f834 e006 	ldrh.w	lr, [r4, r6]
9001ab80:	fb1a fa09 	smulbb	sl, sl, r9
9001ab84:	9604      	str	r6, [sp, #16]
9001ab86:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001ab8a:	ea4f 272e 	mov.w	r7, lr, asr #8
9001ab8e:	fb16 f609 	smulbb	r6, r6, r9
9001ab92:	fa5f fc8c 	uxtb.w	ip, ip
9001ab96:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ab9a:	fb1c fc09 	smulbb	ip, ip, r9
9001ab9e:	fb07 6702 	mla	r7, r7, r2, r6
9001aba2:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001aba6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001abaa:	b2bf      	uxth	r7, r7
9001abac:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001abb0:	fa5f fe8e 	uxtb.w	lr, lr
9001abb4:	fb06 a602 	mla	r6, r6, r2, sl
9001abb8:	fb0e cc02 	mla	ip, lr, r2, ip
9001abbc:	1c7a      	adds	r2, r7, #1
9001abbe:	b2b6      	uxth	r6, r6
9001abc0:	fa1f fc8c 	uxth.w	ip, ip
9001abc4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001abc8:	9a04      	ldr	r2, [sp, #16]
9001abca:	f10c 0a01 	add.w	sl, ip, #1
9001abce:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001abd2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001abd6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001abda:	ea4a 0707 	orr.w	r7, sl, r7
9001abde:	f106 0a01 	add.w	sl, r6, #1
9001abe2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001abe6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001abea:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001abee:	ea47 070a 	orr.w	r7, r7, sl
9001abf2:	52a7      	strh	r7, [r4, r2]
9001abf4:	e7af      	b.n	9001ab56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001abf6:	f04f 0e00 	mov.w	lr, #0
9001abfa:	eba3 020e 	sub.w	r2, r3, lr
9001abfe:	2a00      	cmp	r2, #0
9001ac00:	f77f af3a 	ble.w	9001aa78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001ac04:	1402      	asrs	r2, r0, #16
9001ac06:	9e02      	ldr	r6, [sp, #8]
9001ac08:	140d      	asrs	r5, r1, #16
9001ac0a:	fb06 2505 	mla	r5, r6, r5, r2
9001ac0e:	9e03      	ldr	r6, [sp, #12]
9001ac10:	086a      	lsrs	r2, r5, #1
9001ac12:	07ed      	lsls	r5, r5, #31
9001ac14:	5cb2      	ldrb	r2, [r6, r2]
9001ac16:	bf54      	ite	pl
9001ac18:	f002 020f 	andpl.w	r2, r2, #15
9001ac1c:	1112      	asrmi	r2, r2, #4
9001ac1e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001ac22:	b2d2      	uxtb	r2, r2
9001ac24:	2aff      	cmp	r2, #255	@ 0xff
9001ac26:	d115      	bne.n	9001ac54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001ac28:	f8d8 5000 	ldr.w	r5, [r8]
9001ac2c:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001ac30:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001ac34:	096a      	lsrs	r2, r5, #5
9001ac36:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001ac3a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001ac3e:	4332      	orrs	r2, r6
9001ac40:	432a      	orrs	r2, r5
9001ac42:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001ac46:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ac48:	f10e 0e01 	add.w	lr, lr, #1
9001ac4c:	4410      	add	r0, r2
9001ac4e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ac50:	4411      	add	r1, r2
9001ac52:	e7d2      	b.n	9001abfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001ac54:	2a00      	cmp	r2, #0
9001ac56:	d0f6      	beq.n	9001ac46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001ac58:	f8d8 7000 	ldr.w	r7, [r8]
9001ac5c:	fa1f f982 	uxth.w	r9, r2
9001ac60:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001ac64:	43d2      	mvns	r2, r2
9001ac66:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001ac6a:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001ac6e:	ea4f 262c 	mov.w	r6, ip, asr #8
9001ac72:	fb15 f509 	smulbb	r5, r5, r9
9001ac76:	b2d2      	uxtb	r2, r2
9001ac78:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001ac7c:	b2ff      	uxtb	r7, r7
9001ac7e:	fb1a fa09 	smulbb	sl, sl, r9
9001ac82:	fb06 5602 	mla	r6, r6, r2, r5
9001ac86:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001ac8a:	fb17 f709 	smulbb	r7, r7, r9
9001ac8e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001ac92:	b2b6      	uxth	r6, r6
9001ac94:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001ac98:	fa5f fc8c 	uxtb.w	ip, ip
9001ac9c:	fb05 a502 	mla	r5, r5, r2, sl
9001aca0:	fb0c 7702 	mla	r7, ip, r2, r7
9001aca4:	1c72      	adds	r2, r6, #1
9001aca6:	b2ad      	uxth	r5, r5
9001aca8:	b2bf      	uxth	r7, r7
9001acaa:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001acae:	f107 0a01 	add.w	sl, r7, #1
9001acb2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001acb6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001acba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001acbe:	ea4a 0606 	orr.w	r6, sl, r6
9001acc2:	f105 0a01 	add.w	sl, r5, #1
9001acc6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001acca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001acce:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001acd2:	ea46 060a 	orr.w	r6, r6, sl
9001acd6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001acda:	e7b4      	b.n	9001ac46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001acdc:	b007      	add	sp, #28
9001acde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ace2:	bf00      	nop
9001ace4:	2001aa50 	.word	0x2001aa50

9001ace8 <_ZN8touchgfx8LCD16bppD1Ev>:
9001ace8:	4770      	bx	lr

9001acea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
9001acea:	4770      	bx	lr

9001acec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001acec:	4770      	bx	lr

9001acee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001acee:	4770      	bx	lr

9001acf0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001acf0:	4770      	bx	lr

9001acf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001acf2:	4770      	bx	lr

9001acf4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001acf4:	4770      	bx	lr

9001acf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001acf6:	4770      	bx	lr

9001acf8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001acf8:	4770      	bx	lr

9001acfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001acfa:	4770      	bx	lr

9001acfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001acfc:	4770      	bx	lr

9001acfe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001acfe:	4770      	bx	lr

9001ad00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001ad00:	4770      	bx	lr

9001ad02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001ad02:	4770      	bx	lr

9001ad04 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001ad04:	4770      	bx	lr

9001ad06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001ad06:	4770      	bx	lr

9001ad08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001ad08:	4770      	bx	lr

9001ad0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001ad0a:	4770      	bx	lr

9001ad0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001ad0c:	4770      	bx	lr

9001ad0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001ad0e:	4770      	bx	lr

9001ad10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001ad10:	4770      	bx	lr

9001ad12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001ad12:	4770      	bx	lr

9001ad14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001ad14:	4770      	bx	lr

9001ad16 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001ad16:	4770      	bx	lr

9001ad18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001ad18:	4770      	bx	lr

9001ad1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001ad1a:	4770      	bx	lr

9001ad1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001ad1c:	4770      	bx	lr

9001ad1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001ad1e:	4770      	bx	lr

9001ad20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001ad20:	4770      	bx	lr

9001ad22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001ad22:	4770      	bx	lr

9001ad24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001ad24:	4770      	bx	lr

9001ad26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001ad26:	4770      	bx	lr

9001ad28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001ad28:	4770      	bx	lr

9001ad2a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001ad2a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ad2e:	b088      	sub	sp, #32
9001ad30:	4606      	mov	r6, r0
9001ad32:	4688      	mov	r8, r1
9001ad34:	4691      	mov	r9, r2
9001ad36:	ac08      	add	r4, sp, #32
9001ad38:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001ad3c:	4620      	mov	r0, r4
9001ad3e:	f7fd fc31 	bl	900185a4 <_ZNK8touchgfx6Bitmap7getDataEv>
9001ad42:	6833      	ldr	r3, [r6, #0]
9001ad44:	4605      	mov	r5, r0
9001ad46:	4620      	mov	r0, r4
9001ad48:	699f      	ldr	r7, [r3, #24]
9001ad4a:	f7fd fb39 	bl	900183c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001ad4e:	4682      	mov	sl, r0
9001ad50:	4620      	mov	r0, r4
9001ad52:	f7fd fb69 	bl	90018428 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001ad56:	9500      	str	r5, [sp, #0]
9001ad58:	464b      	mov	r3, r9
9001ad5a:	4642      	mov	r2, r8
9001ad5c:	4631      	mov	r1, r6
9001ad5e:	e9cd a001 	strd	sl, r0, [sp, #4]
9001ad62:	a806      	add	r0, sp, #24
9001ad64:	47b8      	blx	r7
9001ad66:	4628      	mov	r0, r5
9001ad68:	b008      	add	sp, #32
9001ad6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

9001ad70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001ad70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001ad74:	2300      	movs	r3, #0
9001ad76:	9300      	str	r3, [sp, #0]
9001ad78:	4b3d      	ldr	r3, [pc, #244]	@ (9001ae70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001ad7a:	781b      	ldrb	r3, [r3, #0]
9001ad7c:	2b00      	cmp	r3, #0
9001ad7e:	d137      	bne.n	9001adf0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001ad80:	4a3c      	ldr	r2, [pc, #240]	@ (9001ae74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001ad82:	f9b2 2000 	ldrsh.w	r2, [r2]
9001ad86:	f8ad 2004 	strh.w	r2, [sp, #4]
9001ad8a:	2b00      	cmp	r3, #0
9001ad8c:	d132      	bne.n	9001adf4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001ad8e:	4b3a      	ldr	r3, [pc, #232]	@ (9001ae78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001ad90:	f9b3 3000 	ldrsh.w	r3, [r3]
9001ad94:	ac02      	add	r4, sp, #8
9001ad96:	6808      	ldr	r0, [r1, #0]
9001ad98:	f8ad 3006 	strh.w	r3, [sp, #6]
9001ad9c:	ab02      	add	r3, sp, #8
9001ad9e:	6849      	ldr	r1, [r1, #4]
9001ada0:	4d36      	ldr	r5, [pc, #216]	@ (9001ae7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001ada2:	c303      	stmia	r3!, {r0, r1}
9001ada4:	4669      	mov	r1, sp
9001ada6:	4620      	mov	r0, r4
9001ada8:	f7fa f802 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001adac:	4668      	mov	r0, sp
9001adae:	f7f9 ffd7 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001adb2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001adb6:	f8bd 2000 	ldrh.w	r2, [sp]
9001adba:	462f      	mov	r7, r5
9001adbc:	6828      	ldr	r0, [r5, #0]
9001adbe:	4413      	add	r3, r2
9001adc0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001adc4:	f8ad 3008 	strh.w	r3, [sp, #8]
9001adc8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001adcc:	4413      	add	r3, r2
9001adce:	f8ad 300a 	strh.w	r3, [sp, #10]
9001add2:	6803      	ldr	r3, [r0, #0]
9001add4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001add6:	4798      	blx	r3
9001add8:	f010 0f01 	tst.w	r0, #1
9001addc:	d00c      	beq.n	9001adf8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001adde:	6828      	ldr	r0, [r5, #0]
9001ade0:	6803      	ldr	r3, [r0, #0]
9001ade2:	e894 0006 	ldmia.w	r4, {r1, r2}
9001ade6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9001ade8:	4798      	blx	r3
9001adea:	b004      	add	sp, #16
9001adec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001adf0:	4a21      	ldr	r2, [pc, #132]	@ (9001ae78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001adf2:	e7c6      	b.n	9001ad82 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001adf4:	4b1f      	ldr	r3, [pc, #124]	@ (9001ae74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001adf6:	e7cb      	b.n	9001ad90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001adf8:	6838      	ldr	r0, [r7, #0]
9001adfa:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001adfe:	6803      	ldr	r3, [r0, #0]
9001ae00:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001ae04:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001ae08:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001ae0a:	4798      	blx	r3
9001ae0c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001ae10:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001ae14:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001ae18:	fb16 3602 	smlabb	r6, r6, r2, r3
9001ae1c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001ae20:	6838      	ldr	r0, [r7, #0]
9001ae22:	6803      	ldr	r3, [r0, #0]
9001ae24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ae26:	4798      	blx	r3
9001ae28:	4a12      	ldr	r2, [pc, #72]	@ (9001ae74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001ae2a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001ae2e:	8813      	ldrh	r3, [r2, #0]
9001ae30:	4691      	mov	r9, r2
9001ae32:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001ae36:	435d      	muls	r5, r3
9001ae38:	fb03 1404 	mla	r4, r3, r4, r1
9001ae3c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001ae40:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001ae44:	6838      	ldr	r0, [r7, #0]
9001ae46:	42ac      	cmp	r4, r5
9001ae48:	6803      	ldr	r3, [r0, #0]
9001ae4a:	d20e      	bcs.n	9001ae6a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001ae4c:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
9001ae50:	4632      	mov	r2, r6
9001ae52:	4643      	mov	r3, r8
9001ae54:	4621      	mov	r1, r4
9001ae56:	47d0      	blx	sl
9001ae58:	f8b9 3000 	ldrh.w	r3, [r9]
9001ae5c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ae60:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001ae64:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001ae68:	e7ec      	b.n	9001ae44 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001ae6a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ae6c:	4798      	blx	r3
9001ae6e:	e7bc      	b.n	9001adea <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001ae70:	2001aa36 	.word	0x2001aa36
9001ae74:	2001aa38 	.word	0x2001aa38
9001ae78:	2001aa3a 	.word	0x2001aa3a
9001ae7c:	2001aa40 	.word	0x2001aa40

9001ae80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001ae80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ae84:	b08b      	sub	sp, #44	@ 0x2c
9001ae86:	460f      	mov	r7, r1
9001ae88:	4616      	mov	r6, r2
9001ae8a:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001ae8e:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001ae92:	f1bb 0f00 	cmp.w	fp, #0
9001ae96:	d04a      	beq.n	9001af2e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001ae98:	6810      	ldr	r0, [r2, #0]
9001ae9a:	ad06      	add	r5, sp, #24
9001ae9c:	6851      	ldr	r1, [r2, #4]
9001ae9e:	c503      	stmia	r5!, {r0, r1}
9001aea0:	6818      	ldr	r0, [r3, #0]
9001aea2:	ad08      	add	r5, sp, #32
9001aea4:	6859      	ldr	r1, [r3, #4]
9001aea6:	c503      	stmia	r5!, {r0, r1}
9001aea8:	a806      	add	r0, sp, #24
9001aeaa:	f7f9 ff59 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001aeae:	4631      	mov	r1, r6
9001aeb0:	a808      	add	r0, sp, #32
9001aeb2:	f7f9 ff7d 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001aeb6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001aeba:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001aebe:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001aec2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001aec6:	fb16 2103 	smlabb	r1, r6, r3, r2
9001aeca:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001aece:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001aed2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001aed6:	4f5f      	ldr	r7, [pc, #380]	@ (9001b054 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001aed8:	440a      	add	r2, r1
9001aeda:	6838      	ldr	r0, [r7, #0]
9001aedc:	46b9      	mov	r9, r7
9001aede:	f8ad 2020 	strh.w	r2, [sp, #32]
9001aee2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001aee6:	4413      	add	r3, r2
9001aee8:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001aeec:	6803      	ldr	r3, [r0, #0]
9001aeee:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001aef0:	4798      	blx	r3
9001aef2:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001aef6:	d11d      	bne.n	9001af34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001aef8:	b9fc      	cbnz	r4, 9001af3a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001aefa:	f010 0f01 	tst.w	r0, #1
9001aefe:	d01c      	beq.n	9001af3a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001af00:	f8d9 0000 	ldr.w	r0, [r9]
9001af04:	2700      	movs	r7, #0
9001af06:	b2ad      	uxth	r5, r5
9001af08:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001af0c:	6801      	ldr	r1, [r0, #0]
9001af0e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001af12:	f8cd b00c 	str.w	fp, [sp, #12]
9001af16:	9501      	str	r5, [sp, #4]
9001af18:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001af1c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001af20:	9402      	str	r4, [sp, #8]
9001af22:	fa1f f488 	uxth.w	r4, r8
9001af26:	9400      	str	r4, [sp, #0]
9001af28:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
9001af2a:	4631      	mov	r1, r6
9001af2c:	47a0      	blx	r4
9001af2e:	b00b      	add	sp, #44	@ 0x2c
9001af30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001af34:	f010 0f04 	tst.w	r0, #4
9001af38:	e7e1      	b.n	9001aefe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001af3a:	f8d9 0000 	ldr.w	r0, [r9]
9001af3e:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001af42:	6803      	ldr	r3, [r0, #0]
9001af44:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001af46:	4798      	blx	r3
9001af48:	4b43      	ldr	r3, [pc, #268]	@ (9001b058 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001af4a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001af4e:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001af52:	881a      	ldrh	r2, [r3, #0]
9001af54:	469a      	mov	sl, r3
9001af56:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001af5a:	fb05 f502 	mul.w	r5, r5, r2
9001af5e:	fb02 1404 	mla	r4, r2, r4, r1
9001af62:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001af66:	d059      	beq.n	9001b01c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001af68:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001af6c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001af70:	fa1f f28b 	uxth.w	r2, fp
9001af74:	469e      	mov	lr, r3
9001af76:	fa1f f989 	uxth.w	r9, r9
9001af7a:	42ac      	cmp	r4, r5
9001af7c:	d264      	bcs.n	9001b048 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001af7e:	eb04 0a07 	add.w	sl, r4, r7
9001af82:	4554      	cmp	r4, sl
9001af84:	d23d      	bcs.n	9001b002 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001af86:	8821      	ldrh	r1, [r4, #0]
9001af88:	f836 3b02 	ldrh.w	r3, [r6], #2
9001af8c:	1208      	asrs	r0, r1, #8
9001af8e:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001af92:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001af96:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001af9a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001af9e:	00c9      	lsls	r1, r1, #3
9001afa0:	fb10 f009 	smulbb	r0, r0, r9
9001afa4:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001afa8:	b2c9      	uxtb	r1, r1
9001afaa:	fb0c 0c02 	mla	ip, ip, r2, r0
9001afae:	10d8      	asrs	r0, r3, #3
9001afb0:	fb1b fb09 	smulbb	fp, fp, r9
9001afb4:	00db      	lsls	r3, r3, #3
9001afb6:	fa1f fc8c 	uxth.w	ip, ip
9001afba:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001afbe:	fb11 f109 	smulbb	r1, r1, r9
9001afc2:	b2db      	uxtb	r3, r3
9001afc4:	fb00 b002 	mla	r0, r0, r2, fp
9001afc8:	f10c 0b01 	add.w	fp, ip, #1
9001afcc:	fb03 1302 	mla	r3, r3, r2, r1
9001afd0:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001afd4:	b29b      	uxth	r3, r3
9001afd6:	b280      	uxth	r0, r0
9001afd8:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001afdc:	f103 0c01 	add.w	ip, r3, #1
9001afe0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001afe4:	1c43      	adds	r3, r0, #1
9001afe6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001afea:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001afee:	0940      	lsrs	r0, r0, #5
9001aff0:	ea4c 0c0b 	orr.w	ip, ip, fp
9001aff4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001aff8:	ea4c 0c00 	orr.w	ip, ip, r0
9001affc:	f824 cb02 	strh.w	ip, [r4], #2
9001b000:	e7bf      	b.n	9001af82 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001b002:	f8be 3000 	ldrh.w	r3, [lr]
9001b006:	eba3 0308 	sub.w	r3, r3, r8
9001b00a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b00e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001b012:	eba3 0308 	sub.w	r3, r3, r8
9001b016:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001b01a:	e7ae      	b.n	9001af7a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001b01c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001b020:	f8d9 0000 	ldr.w	r0, [r9]
9001b024:	42ac      	cmp	r4, r5
9001b026:	6803      	ldr	r3, [r0, #0]
9001b028:	d20e      	bcs.n	9001b048 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001b02a:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
9001b02e:	4632      	mov	r2, r6
9001b030:	463b      	mov	r3, r7
9001b032:	4621      	mov	r1, r4
9001b034:	47c0      	blx	r8
9001b036:	f8ba 3000 	ldrh.w	r3, [sl]
9001b03a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b03e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001b042:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001b046:	e7eb      	b.n	9001b020 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001b048:	4b02      	ldr	r3, [pc, #8]	@ (9001b054 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001b04a:	6818      	ldr	r0, [r3, #0]
9001b04c:	6803      	ldr	r3, [r0, #0]
9001b04e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001b050:	4798      	blx	r3
9001b052:	e76c      	b.n	9001af2e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001b054:	2001aa40 	.word	0x2001aa40
9001b058:	2001aa38 	.word	0x2001aa38

9001b05c <_ZN8touchgfx8LCD16bppD0Ev>:
9001b05c:	b510      	push	{r4, lr}
9001b05e:	4604      	mov	r4, r0
9001b060:	218c      	movs	r1, #140	@ 0x8c
9001b062:	f00c fa5d 	bl	90027520 <_ZdlPvj>
9001b066:	4620      	mov	r0, r4
9001b068:	bd10      	pop	{r4, pc}

9001b06a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001b06a:	b510      	push	{r4, lr}
9001b06c:	4604      	mov	r4, r0
9001b06e:	2104      	movs	r1, #4
9001b070:	f00c fa56 	bl	90027520 <_ZdlPvj>
9001b074:	4620      	mov	r0, r4
9001b076:	bd10      	pop	{r4, pc}

9001b078 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001b078:	b510      	push	{r4, lr}
9001b07a:	4604      	mov	r4, r0
9001b07c:	2104      	movs	r1, #4
9001b07e:	f00c fa4f 	bl	90027520 <_ZdlPvj>
9001b082:	4620      	mov	r0, r4
9001b084:	bd10      	pop	{r4, pc}

9001b086 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001b086:	b510      	push	{r4, lr}
9001b088:	4604      	mov	r4, r0
9001b08a:	f640 0144 	movw	r1, #2116	@ 0x844
9001b08e:	f00c fa47 	bl	90027520 <_ZdlPvj>
9001b092:	4620      	mov	r0, r4
9001b094:	bd10      	pop	{r4, pc}

9001b096 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
9001b096:	b510      	push	{r4, lr}
9001b098:	4604      	mov	r4, r0
9001b09a:	f44f 7182 	mov.w	r1, #260	@ 0x104
9001b09e:	f00c fa3f 	bl	90027520 <_ZdlPvj>
9001b0a2:	4620      	mov	r0, r4
9001b0a4:	bd10      	pop	{r4, pc}

9001b0a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001b0a6:	b510      	push	{r4, lr}
9001b0a8:	4604      	mov	r4, r0
9001b0aa:	2104      	movs	r1, #4
9001b0ac:	f00c fa38 	bl	90027520 <_ZdlPvj>
9001b0b0:	4620      	mov	r0, r4
9001b0b2:	bd10      	pop	{r4, pc}

9001b0b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001b0b4:	b510      	push	{r4, lr}
9001b0b6:	4604      	mov	r4, r0
9001b0b8:	2104      	movs	r1, #4
9001b0ba:	f00c fa31 	bl	90027520 <_ZdlPvj>
9001b0be:	4620      	mov	r0, r4
9001b0c0:	bd10      	pop	{r4, pc}

9001b0c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001b0c2:	b510      	push	{r4, lr}
9001b0c4:	4604      	mov	r4, r0
9001b0c6:	2104      	movs	r1, #4
9001b0c8:	f00c fa2a 	bl	90027520 <_ZdlPvj>
9001b0cc:	4620      	mov	r0, r4
9001b0ce:	bd10      	pop	{r4, pc}

9001b0d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001b0d0:	b510      	push	{r4, lr}
9001b0d2:	4604      	mov	r4, r0
9001b0d4:	2104      	movs	r1, #4
9001b0d6:	f00c fa23 	bl	90027520 <_ZdlPvj>
9001b0da:	4620      	mov	r0, r4
9001b0dc:	bd10      	pop	{r4, pc}

9001b0de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001b0de:	b510      	push	{r4, lr}
9001b0e0:	4604      	mov	r4, r0
9001b0e2:	2104      	movs	r1, #4
9001b0e4:	f00c fa1c 	bl	90027520 <_ZdlPvj>
9001b0e8:	4620      	mov	r0, r4
9001b0ea:	bd10      	pop	{r4, pc}

9001b0ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001b0ec:	b510      	push	{r4, lr}
9001b0ee:	4604      	mov	r4, r0
9001b0f0:	2104      	movs	r1, #4
9001b0f2:	f00c fa15 	bl	90027520 <_ZdlPvj>
9001b0f6:	4620      	mov	r0, r4
9001b0f8:	bd10      	pop	{r4, pc}

9001b0fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001b0fa:	b510      	push	{r4, lr}
9001b0fc:	4604      	mov	r4, r0
9001b0fe:	2104      	movs	r1, #4
9001b100:	f00c fa0e 	bl	90027520 <_ZdlPvj>
9001b104:	4620      	mov	r0, r4
9001b106:	bd10      	pop	{r4, pc}

9001b108 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001b108:	b510      	push	{r4, lr}
9001b10a:	4604      	mov	r4, r0
9001b10c:	2104      	movs	r1, #4
9001b10e:	f00c fa07 	bl	90027520 <_ZdlPvj>
9001b112:	4620      	mov	r0, r4
9001b114:	bd10      	pop	{r4, pc}

9001b116 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001b116:	b510      	push	{r4, lr}
9001b118:	4604      	mov	r4, r0
9001b11a:	2104      	movs	r1, #4
9001b11c:	f00c fa00 	bl	90027520 <_ZdlPvj>
9001b120:	4620      	mov	r0, r4
9001b122:	bd10      	pop	{r4, pc}

9001b124 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001b124:	b510      	push	{r4, lr}
9001b126:	4604      	mov	r4, r0
9001b128:	2104      	movs	r1, #4
9001b12a:	f00c f9f9 	bl	90027520 <_ZdlPvj>
9001b12e:	4620      	mov	r0, r4
9001b130:	bd10      	pop	{r4, pc}

9001b132 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001b132:	b510      	push	{r4, lr}
9001b134:	4604      	mov	r4, r0
9001b136:	2104      	movs	r1, #4
9001b138:	f00c f9f2 	bl	90027520 <_ZdlPvj>
9001b13c:	4620      	mov	r0, r4
9001b13e:	bd10      	pop	{r4, pc}

9001b140 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001b140:	b510      	push	{r4, lr}
9001b142:	4604      	mov	r4, r0
9001b144:	2104      	movs	r1, #4
9001b146:	f00c f9eb 	bl	90027520 <_ZdlPvj>
9001b14a:	4620      	mov	r0, r4
9001b14c:	bd10      	pop	{r4, pc}

9001b14e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001b14e:	b510      	push	{r4, lr}
9001b150:	4604      	mov	r4, r0
9001b152:	2104      	movs	r1, #4
9001b154:	f00c f9e4 	bl	90027520 <_ZdlPvj>
9001b158:	4620      	mov	r0, r4
9001b15a:	bd10      	pop	{r4, pc}

9001b15c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001b15c:	b510      	push	{r4, lr}
9001b15e:	4604      	mov	r4, r0
9001b160:	2104      	movs	r1, #4
9001b162:	f00c f9dd 	bl	90027520 <_ZdlPvj>
9001b166:	4620      	mov	r0, r4
9001b168:	bd10      	pop	{r4, pc}

9001b16a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001b16a:	b510      	push	{r4, lr}
9001b16c:	4604      	mov	r4, r0
9001b16e:	2104      	movs	r1, #4
9001b170:	f00c f9d6 	bl	90027520 <_ZdlPvj>
9001b174:	4620      	mov	r0, r4
9001b176:	bd10      	pop	{r4, pc}

9001b178 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001b178:	b510      	push	{r4, lr}
9001b17a:	4604      	mov	r4, r0
9001b17c:	2104      	movs	r1, #4
9001b17e:	f00c f9cf 	bl	90027520 <_ZdlPvj>
9001b182:	4620      	mov	r0, r4
9001b184:	bd10      	pop	{r4, pc}

9001b186 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001b186:	b510      	push	{r4, lr}
9001b188:	4604      	mov	r4, r0
9001b18a:	2104      	movs	r1, #4
9001b18c:	f00c f9c8 	bl	90027520 <_ZdlPvj>
9001b190:	4620      	mov	r0, r4
9001b192:	bd10      	pop	{r4, pc}

9001b194 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001b194:	b510      	push	{r4, lr}
9001b196:	4604      	mov	r4, r0
9001b198:	2104      	movs	r1, #4
9001b19a:	f00c f9c1 	bl	90027520 <_ZdlPvj>
9001b19e:	4620      	mov	r0, r4
9001b1a0:	bd10      	pop	{r4, pc}

9001b1a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001b1a2:	b510      	push	{r4, lr}
9001b1a4:	4604      	mov	r4, r0
9001b1a6:	2104      	movs	r1, #4
9001b1a8:	f00c f9ba 	bl	90027520 <_ZdlPvj>
9001b1ac:	4620      	mov	r0, r4
9001b1ae:	bd10      	pop	{r4, pc}

9001b1b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001b1b0:	b510      	push	{r4, lr}
9001b1b2:	4604      	mov	r4, r0
9001b1b4:	2104      	movs	r1, #4
9001b1b6:	f00c f9b3 	bl	90027520 <_ZdlPvj>
9001b1ba:	4620      	mov	r0, r4
9001b1bc:	bd10      	pop	{r4, pc}

9001b1be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001b1be:	b510      	push	{r4, lr}
9001b1c0:	4604      	mov	r4, r0
9001b1c2:	2104      	movs	r1, #4
9001b1c4:	f00c f9ac 	bl	90027520 <_ZdlPvj>
9001b1c8:	4620      	mov	r0, r4
9001b1ca:	bd10      	pop	{r4, pc}

9001b1cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001b1cc:	b510      	push	{r4, lr}
9001b1ce:	4604      	mov	r4, r0
9001b1d0:	2104      	movs	r1, #4
9001b1d2:	f00c f9a5 	bl	90027520 <_ZdlPvj>
9001b1d6:	4620      	mov	r0, r4
9001b1d8:	bd10      	pop	{r4, pc}

9001b1da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001b1da:	b510      	push	{r4, lr}
9001b1dc:	4604      	mov	r4, r0
9001b1de:	2104      	movs	r1, #4
9001b1e0:	f00c f99e 	bl	90027520 <_ZdlPvj>
9001b1e4:	4620      	mov	r0, r4
9001b1e6:	bd10      	pop	{r4, pc}

9001b1e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001b1e8:	b510      	push	{r4, lr}
9001b1ea:	4604      	mov	r4, r0
9001b1ec:	2104      	movs	r1, #4
9001b1ee:	f00c f997 	bl	90027520 <_ZdlPvj>
9001b1f2:	4620      	mov	r0, r4
9001b1f4:	bd10      	pop	{r4, pc}

9001b1f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001b1f6:	b510      	push	{r4, lr}
9001b1f8:	4604      	mov	r4, r0
9001b1fa:	2104      	movs	r1, #4
9001b1fc:	f00c f990 	bl	90027520 <_ZdlPvj>
9001b200:	4620      	mov	r0, r4
9001b202:	bd10      	pop	{r4, pc}

9001b204 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001b204:	b510      	push	{r4, lr}
9001b206:	4604      	mov	r4, r0
9001b208:	2104      	movs	r1, #4
9001b20a:	f00c f989 	bl	90027520 <_ZdlPvj>
9001b20e:	4620      	mov	r0, r4
9001b210:	bd10      	pop	{r4, pc}

9001b212 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001b212:	b510      	push	{r4, lr}
9001b214:	4604      	mov	r4, r0
9001b216:	2104      	movs	r1, #4
9001b218:	f00c f982 	bl	90027520 <_ZdlPvj>
9001b21c:	4620      	mov	r0, r4
9001b21e:	bd10      	pop	{r4, pc}

9001b220 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001b220:	b510      	push	{r4, lr}
9001b222:	4604      	mov	r4, r0
9001b224:	2104      	movs	r1, #4
9001b226:	f00c f97b 	bl	90027520 <_ZdlPvj>
9001b22a:	4620      	mov	r0, r4
9001b22c:	bd10      	pop	{r4, pc}
	...

9001b230 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
9001b230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b234:	b08f      	sub	sp, #60	@ 0x3c
9001b236:	4616      	mov	r6, r2
9001b238:	4682      	mov	sl, r0
9001b23a:	460d      	mov	r5, r1
9001b23c:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
9001b240:	9205      	str	r2, [sp, #20]
9001b242:	2a00      	cmp	r2, #0
9001b244:	f000 82b7 	beq.w	9001b7b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
9001b248:	6830      	ldr	r0, [r6, #0]
9001b24a:	ac0a      	add	r4, sp, #40	@ 0x28
9001b24c:	6871      	ldr	r1, [r6, #4]
9001b24e:	c403      	stmia	r4!, {r0, r1}
9001b250:	6818      	ldr	r0, [r3, #0]
9001b252:	ac0c      	add	r4, sp, #48	@ 0x30
9001b254:	6859      	ldr	r1, [r3, #4]
9001b256:	c403      	stmia	r4!, {r0, r1}
9001b258:	a80a      	add	r0, sp, #40	@ 0x28
9001b25a:	f7f9 fd81 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b25e:	4631      	mov	r1, r6
9001b260:	a80c      	add	r0, sp, #48	@ 0x30
9001b262:	f7f9 fda5 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b266:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001b26a:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001b26e:	bfdb      	ittet	le
9001b270:	b293      	uxthle	r3, r2
9001b272:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001b276:	2301      	movgt	r3, #1
9001b278:	fb91 f3f3 	sdivle	r3, r1, r3
9001b27c:	9300      	str	r3, [sp, #0]
9001b27e:	f105 0308 	add.w	r3, r5, #8
9001b282:	9900      	ldr	r1, [sp, #0]
9001b284:	9306      	str	r3, [sp, #24]
9001b286:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
9001b28a:	440b      	add	r3, r1
9001b28c:	3b01      	subs	r3, #1
9001b28e:	fb93 f3f1 	sdiv	r3, r3, r1
9001b292:	3b01      	subs	r3, #1
9001b294:	9906      	ldr	r1, [sp, #24]
9001b296:	b29b      	uxth	r3, r3
9001b298:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001b29c:	9900      	ldr	r1, [sp, #0]
9001b29e:	9307      	str	r3, [sp, #28]
9001b2a0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001b2a4:	fb93 f0f1 	sdiv	r0, r3, r1
9001b2a8:	b284      	uxth	r4, r0
9001b2aa:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001b2ae:	9402      	str	r4, [sp, #8]
9001b2b0:	9d02      	ldr	r5, [sp, #8]
9001b2b2:	9c00      	ldr	r4, [sp, #0]
9001b2b4:	fb05 3414 	mls	r4, r5, r4, r3
9001b2b8:	fb14 f402 	smulbb	r4, r4, r2
9001b2bc:	440c      	add	r4, r1
9001b2be:	b2a4      	uxth	r4, r4
9001b2c0:	2d00      	cmp	r5, #0
9001b2c2:	d06c      	beq.n	9001b39e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
9001b2c4:	1e6a      	subs	r2, r5, #1
9001b2c6:	9806      	ldr	r0, [sp, #24]
9001b2c8:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
9001b2cc:	9a07      	ldr	r2, [sp, #28]
9001b2ce:	ba36      	rev	r6, r6
9001b2d0:	4416      	add	r6, r2
9001b2d2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001b2d6:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
9001b2da:	4411      	add	r1, r2
9001b2dc:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001b2e0:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 9001b610 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
9001b2e4:	4413      	add	r3, r2
9001b2e6:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
9001b2ea:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001b2ee:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001b2f2:	9301      	str	r3, [sp, #4]
9001b2f4:	4bc4      	ldr	r3, [pc, #784]	@ (9001b608 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
9001b2f6:	6818      	ldr	r0, [r3, #0]
9001b2f8:	6803      	ldr	r3, [r0, #0]
9001b2fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001b2fc:	4798      	blx	r3
9001b2fe:	4bc3      	ldr	r3, [pc, #780]	@ (9001b60c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
9001b300:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001b304:	881b      	ldrh	r3, [r3, #0]
9001b306:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
9001b30a:	fb03 2808 	mla	r8, r3, r8, r2
9001b30e:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001b312:	436b      	muls	r3, r5
9001b314:	2500      	movs	r5, #0
9001b316:	eb00 0848 	add.w	r8, r0, r8, lsl #1
9001b31a:	4629      	mov	r1, r5
9001b31c:	eb08 0343 	add.w	r3, r8, r3, lsl #1
9001b320:	9309      	str	r3, [sp, #36]	@ 0x24
9001b322:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9001b326:	fb94 f3f3 	sdiv	r3, r4, r3
9001b32a:	9304      	str	r3, [sp, #16]
9001b32c:	f10a 0304 	add.w	r3, sl, #4
9001b330:	4618      	mov	r0, r3
9001b332:	9308      	str	r3, [sp, #32]
9001b334:	f00d fa97 	bl	90028866 <memset>
9001b338:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001b33a:	4543      	cmp	r3, r8
9001b33c:	f240 8236 	bls.w	9001b7ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
9001b340:	2203      	movs	r2, #3
9001b342:	2107      	movs	r1, #7
9001b344:	200b      	movs	r0, #11
9001b346:	2c00      	cmp	r4, #0
9001b348:	f000 8131 	beq.w	9001b5ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
9001b34c:	7833      	ldrb	r3, [r6, #0]
9001b34e:	b2db      	uxtb	r3, r3
9001b350:	2bfe      	cmp	r3, #254	@ 0xfe
9001b352:	d126      	bne.n	9001b3a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
9001b354:	f896 e001 	ldrb.w	lr, [r6, #1]
9001b358:	3c01      	subs	r4, #1
9001b35a:	f896 c002 	ldrb.w	ip, [r6, #2]
9001b35e:	1d37      	adds	r7, r6, #4
9001b360:	fa5f fe8e 	uxtb.w	lr, lr
9001b364:	f896 b003 	ldrb.w	fp, [r6, #3]
9001b368:	fa5f fc8c 	uxtb.w	ip, ip
9001b36c:	f36e 0507 	bfi	r5, lr, #0, #8
9001b370:	fa5f fb8b 	uxtb.w	fp, fp
9001b374:	b2a4      	uxth	r4, r4
9001b376:	f36c 250f 	bfi	r5, ip, #8, #8
9001b37a:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001b37e:	fb12 cc0b 	smlabb	ip, r2, fp, ip
9001b382:	f36b 4517 	bfi	r5, fp, #16, #8
9001b386:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001b38a:	0e2b      	lsrs	r3, r5, #24
9001b38c:	fb10 c303 	smlabb	r3, r0, r3, ip
9001b390:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001b394:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001b398:	605d      	str	r5, [r3, #4]
9001b39a:	463e      	mov	r6, r7
9001b39c:	e7d3      	b.n	9001b346 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
9001b39e:	9e07      	ldr	r6, [sp, #28]
9001b3a0:	e797      	b.n	9001b2d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
9001b3a2:	2bff      	cmp	r3, #255	@ 0xff
9001b3a4:	d127      	bne.n	9001b3f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
9001b3a6:	f896 c001 	ldrb.w	ip, [r6, #1]
9001b3aa:	3c01      	subs	r4, #1
9001b3ac:	78b3      	ldrb	r3, [r6, #2]
9001b3ae:	1d77      	adds	r7, r6, #5
9001b3b0:	fa5f fc8c 	uxtb.w	ip, ip
9001b3b4:	f896 e003 	ldrb.w	lr, [r6, #3]
9001b3b8:	b2db      	uxtb	r3, r3
9001b3ba:	f896 b004 	ldrb.w	fp, [r6, #4]
9001b3be:	f36c 0507 	bfi	r5, ip, #0, #8
9001b3c2:	fa5f fe8e 	uxtb.w	lr, lr
9001b3c6:	fa5f fb8b 	uxtb.w	fp, fp
9001b3ca:	f363 250f 	bfi	r5, r3, #8, #8
9001b3ce:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001b3d2:	b2a4      	uxth	r4, r4
9001b3d4:	fb12 330e 	smlabb	r3, r2, lr, r3
9001b3d8:	f36e 4517 	bfi	r5, lr, #16, #8
9001b3dc:	fb11 330c 	smlabb	r3, r1, ip, r3
9001b3e0:	f36b 651f 	bfi	r5, fp, #24, #8
9001b3e4:	fb10 3b0b 	smlabb	fp, r0, fp, r3
9001b3e8:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
9001b3ec:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
9001b3f0:	f8cb 5004 	str.w	r5, [fp, #4]
9001b3f4:	e7d1      	b.n	9001b39a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001b3f6:	ea5f 1ca3 	movs.w	ip, r3, asr #6
9001b3fa:	f106 0701 	add.w	r7, r6, #1
9001b3fe:	d107      	bne.n	9001b410 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
9001b400:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001b404:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001b408:	685d      	ldr	r5, [r3, #4]
9001b40a:	3c01      	subs	r4, #1
9001b40c:	b2a4      	uxth	r4, r4
9001b40e:	e7c4      	b.n	9001b39a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001b410:	f1bc 0f01 	cmp.w	ip, #1
9001b414:	d12c      	bne.n	9001b470 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
9001b416:	f003 0e03 	and.w	lr, r3, #3
9001b41a:	f003 0c0c 	and.w	ip, r3, #12
9001b41e:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001b422:	f1ae 0e02 	sub.w	lr, lr, #2
9001b426:	f1ac 0c08 	sub.w	ip, ip, #8
9001b42a:	3b02      	subs	r3, #2
9001b42c:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
9001b430:	fa5f fe8e 	uxtb.w	lr, lr
9001b434:	f36e 0507 	bfi	r5, lr, #0, #8
9001b438:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001b43c:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
9001b440:	f36c 250f 	bfi	r5, ip, #8, #8
9001b444:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001b448:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001b44c:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001b450:	b2db      	uxtb	r3, r3
9001b452:	fb12 cc03 	smlabb	ip, r2, r3, ip
9001b456:	f363 4517 	bfi	r5, r3, #16, #8
9001b45a:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001b45e:	0e2e      	lsrs	r6, r5, #24
9001b460:	fb10 c606 	smlabb	r6, r0, r6, ip
9001b464:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
9001b468:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
9001b46c:	6075      	str	r5, [r6, #4]
9001b46e:	e7cc      	b.n	9001b40a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
9001b470:	f1bc 0f02 	cmp.w	ip, #2
9001b474:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001b478:	d12a      	bne.n	9001b4d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
9001b47a:	1cb7      	adds	r7, r6, #2
9001b47c:	7876      	ldrb	r6, [r6, #1]
9001b47e:	3b20      	subs	r3, #32
9001b480:	b2f6      	uxtb	r6, r6
9001b482:	f006 0c0f 	and.w	ip, r6, #15
9001b486:	1136      	asrs	r6, r6, #4
9001b488:	f1ac 0c08 	sub.w	ip, ip, #8
9001b48c:	3e08      	subs	r6, #8
9001b48e:	449c      	add	ip, r3
9001b490:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
9001b494:	fa5f fc8c 	uxtb.w	ip, ip
9001b498:	f36c 0507 	bfi	r5, ip, #0, #8
9001b49c:	f3c5 2e07 	ubfx	lr, r5, #8, #8
9001b4a0:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
9001b4a4:	4433      	add	r3, r6
9001b4a6:	fa5f fe8e 	uxtb.w	lr, lr
9001b4aa:	f36e 250f 	bfi	r5, lr, #8, #8
9001b4ae:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
9001b4b2:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001b4b6:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001b4ba:	b2db      	uxtb	r3, r3
9001b4bc:	fb12 ee03 	smlabb	lr, r2, r3, lr
9001b4c0:	f363 4517 	bfi	r5, r3, #16, #8
9001b4c4:	fb11 ee0c 	smlabb	lr, r1, ip, lr
9001b4c8:	0e2e      	lsrs	r6, r5, #24
9001b4ca:	fb10 e606 	smlabb	r6, r0, r6, lr
9001b4ce:	e7c9      	b.n	9001b464 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
9001b4d0:	1c5e      	adds	r6, r3, #1
9001b4d2:	42a6      	cmp	r6, r4
9001b4d4:	dd4e      	ble.n	9001b574 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
9001b4d6:	1b36      	subs	r6, r6, r4
9001b4d8:	2e00      	cmp	r6, #0
9001b4da:	dc4e      	bgt.n	9001b57a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
9001b4dc:	f8dd b004 	ldr.w	fp, [sp, #4]
9001b4e0:	2400      	movs	r4, #0
9001b4e2:	f1bb 0f00 	cmp.w	fp, #0
9001b4e6:	f340 8122 	ble.w	9001b72e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
9001b4ea:	1c7b      	adds	r3, r7, #1
9001b4ec:	9303      	str	r3, [sp, #12]
9001b4ee:	783b      	ldrb	r3, [r7, #0]
9001b4f0:	b2db      	uxtb	r3, r3
9001b4f2:	2bfe      	cmp	r3, #254	@ 0xfe
9001b4f4:	d160      	bne.n	9001b5b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
9001b4f6:	7879      	ldrb	r1, [r7, #1]
9001b4f8:	1d3b      	adds	r3, r7, #4
9001b4fa:	78ba      	ldrb	r2, [r7, #2]
9001b4fc:	b2c9      	uxtb	r1, r1
9001b4fe:	78f8      	ldrb	r0, [r7, #3]
9001b500:	b2d2      	uxtb	r2, r2
9001b502:	9303      	str	r3, [sp, #12]
9001b504:	f361 0507 	bfi	r5, r1, #0, #8
9001b508:	b2c0      	uxtb	r0, r0
9001b50a:	2303      	movs	r3, #3
9001b50c:	f362 250f 	bfi	r5, r2, #8, #8
9001b510:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001b514:	fb13 2200 	smlabb	r2, r3, r0, r2
9001b518:	f360 4517 	bfi	r5, r0, #16, #8
9001b51c:	2307      	movs	r3, #7
9001b51e:	0e2e      	lsrs	r6, r5, #24
9001b520:	fb13 2101 	smlabb	r1, r3, r1, r2
9001b524:	230b      	movs	r3, #11
9001b526:	fb13 1306 	smlabb	r3, r3, r6, r1
9001b52a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001b52e:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001b532:	605d      	str	r5, [r3, #4]
9001b534:	2601      	movs	r6, #1
9001b536:	4637      	mov	r7, r6
9001b538:	0e2b      	lsrs	r3, r5, #24
9001b53a:	ebab 0b07 	sub.w	fp, fp, r7
9001b53e:	eba6 0607 	sub.w	r6, r6, r7
9001b542:	f040 80d3 	bne.w	9001b6ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
9001b546:	b18c      	cbz	r4, 9001b56c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
9001b548:	4648      	mov	r0, r9
9001b54a:	00a1      	lsls	r1, r4, #2
9001b54c:	f7e5 fe6c 	bl	90001228 <_ZN8touchgfx5paint9flushLineEPmi>
9001b550:	9b05      	ldr	r3, [sp, #20]
9001b552:	4622      	mov	r2, r4
9001b554:	4649      	mov	r1, r9
9001b556:	4640      	mov	r0, r8
9001b558:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001b55c:	f7e5 feca 	bl	900012f4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001b560:	4b2b      	ldr	r3, [pc, #172]	@ (9001b610 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
9001b562:	4a2c      	ldr	r2, [pc, #176]	@ (9001b614 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
9001b564:	4599      	cmp	r9, r3
9001b566:	bf08      	it	eq
9001b568:	4613      	moveq	r3, r2
9001b56a:	4699      	mov	r9, r3
9001b56c:	eb08 0847 	add.w	r8, r8, r7, lsl #1
9001b570:	2400      	movs	r4, #0
9001b572:	e0da      	b.n	9001b72a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
9001b574:	1ba6      	subs	r6, r4, r6
9001b576:	b2b4      	uxth	r4, r6
9001b578:	e70f      	b.n	9001b39a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001b57a:	9b01      	ldr	r3, [sp, #4]
9001b57c:	9a01      	ldr	r2, [sp, #4]
9001b57e:	42b3      	cmp	r3, r6
9001b580:	bfa8      	it	ge
9001b582:	4633      	movge	r3, r6
9001b584:	0e2c      	lsrs	r4, r5, #24
9001b586:	eba2 0b03 	sub.w	fp, r2, r3
9001b58a:	eba6 0603 	sub.w	r6, r6, r3
9001b58e:	d00b      	beq.n	9001b5a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
9001b590:	f1a9 0104 	sub.w	r1, r9, #4
9001b594:	461a      	mov	r2, r3
9001b596:	2a00      	cmp	r2, #0
9001b598:	dc02      	bgt.n	9001b5a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
9001b59a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001b59e:	e7a0      	b.n	9001b4e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001b5a0:	f841 5f04 	str.w	r5, [r1, #4]!
9001b5a4:	3a01      	subs	r2, #1
9001b5a6:	e7f6      	b.n	9001b596 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
9001b5a8:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001b5ac:	e799      	b.n	9001b4e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001b5ae:	4637      	mov	r7, r6
9001b5b0:	f8dd b004 	ldr.w	fp, [sp, #4]
9001b5b4:	4626      	mov	r6, r4
9001b5b6:	e794      	b.n	9001b4e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001b5b8:	2bff      	cmp	r3, #255	@ 0xff
9001b5ba:	d11d      	bne.n	9001b5f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
9001b5bc:	7878      	ldrb	r0, [r7, #1]
9001b5be:	1d7b      	adds	r3, r7, #5
9001b5c0:	78ba      	ldrb	r2, [r7, #2]
9001b5c2:	b2c0      	uxtb	r0, r0
9001b5c4:	78fe      	ldrb	r6, [r7, #3]
9001b5c6:	b2d2      	uxtb	r2, r2
9001b5c8:	9303      	str	r3, [sp, #12]
9001b5ca:	f360 0507 	bfi	r5, r0, #0, #8
9001b5ce:	793b      	ldrb	r3, [r7, #4]
9001b5d0:	b2f6      	uxtb	r6, r6
9001b5d2:	b2d9      	uxtb	r1, r3
9001b5d4:	f362 250f 	bfi	r5, r2, #8, #8
9001b5d8:	2303      	movs	r3, #3
9001b5da:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001b5de:	f366 4517 	bfi	r5, r6, #16, #8
9001b5e2:	fb13 2206 	smlabb	r2, r3, r6, r2
9001b5e6:	2307      	movs	r3, #7
9001b5e8:	f361 651f 	bfi	r5, r1, #24, #8
9001b5ec:	fb13 2000 	smlabb	r0, r3, r0, r2
9001b5f0:	230b      	movs	r3, #11
9001b5f2:	fb13 0301 	smlabb	r3, r3, r1, r0
9001b5f6:	e798      	b.n	9001b52a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
9001b5f8:	119e      	asrs	r6, r3, #6
9001b5fa:	d10d      	bne.n	9001b618 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
9001b5fc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001b600:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001b604:	685d      	ldr	r5, [r3, #4]
9001b606:	e795      	b.n	9001b534 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001b608:	2001aa40 	.word	0x2001aa40
9001b60c:	2001aa38 	.word	0x2001aa38
9001b610:	20000220 	.word	0x20000220
9001b614:	20000320 	.word	0x20000320
9001b618:	2e01      	cmp	r6, #1
9001b61a:	ea4f 6115 	mov.w	r1, r5, lsr #24
9001b61e:	d12b      	bne.n	9001b678 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
9001b620:	f003 0003 	and.w	r0, r3, #3
9001b624:	f003 020c 	and.w	r2, r3, #12
9001b628:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001b62c:	3802      	subs	r0, #2
9001b62e:	3a08      	subs	r2, #8
9001b630:	1e9f      	subs	r7, r3, #2
9001b632:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
9001b636:	b2c0      	uxtb	r0, r0
9001b638:	f360 0507 	bfi	r5, r0, #0, #8
9001b63c:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001b640:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001b644:	f362 250f 	bfi	r5, r2, #8, #8
9001b648:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001b64c:	f3c5 4307 	ubfx	r3, r5, #16, #8
9001b650:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
9001b654:	2703      	movs	r7, #3
9001b656:	b2db      	uxtb	r3, r3
9001b658:	fb17 2203 	smlabb	r2, r7, r3, r2
9001b65c:	2707      	movs	r7, #7
9001b65e:	f363 4517 	bfi	r5, r3, #16, #8
9001b662:	230b      	movs	r3, #11
9001b664:	fb17 2000 	smlabb	r0, r7, r0, r2
9001b668:	fb13 0101 	smlabb	r1, r3, r1, r0
9001b66c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001b670:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001b674:	604d      	str	r5, [r1, #4]
9001b676:	e75e      	b.n	9001b536 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
9001b678:	2e02      	cmp	r6, #2
9001b67a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001b67e:	d12f      	bne.n	9001b6e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
9001b680:	7878      	ldrb	r0, [r7, #1]
9001b682:	1cba      	adds	r2, r7, #2
9001b684:	3b20      	subs	r3, #32
9001b686:	b2c0      	uxtb	r0, r0
9001b688:	9203      	str	r2, [sp, #12]
9001b68a:	f000 020f 	and.w	r2, r0, #15
9001b68e:	1100      	asrs	r0, r0, #4
9001b690:	3a08      	subs	r2, #8
9001b692:	3808      	subs	r0, #8
9001b694:	441a      	add	r2, r3
9001b696:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
9001b69a:	b2d2      	uxtb	r2, r2
9001b69c:	f362 0507 	bfi	r5, r2, #0, #8
9001b6a0:	f3c5 2607 	ubfx	r6, r5, #8, #8
9001b6a4:	eb06 0683 	add.w	r6, r6, r3, lsl #2
9001b6a8:	4403      	add	r3, r0
9001b6aa:	b2f6      	uxtb	r6, r6
9001b6ac:	f366 250f 	bfi	r5, r6, #8, #8
9001b6b0:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9001b6b4:	f3c5 4007 	ubfx	r0, r5, #16, #8
9001b6b8:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001b6bc:	2003      	movs	r0, #3
9001b6be:	b2db      	uxtb	r3, r3
9001b6c0:	fb10 6603 	smlabb	r6, r0, r3, r6
9001b6c4:	2007      	movs	r0, #7
9001b6c6:	f363 4517 	bfi	r5, r3, #16, #8
9001b6ca:	230b      	movs	r3, #11
9001b6cc:	fb10 6202 	smlabb	r2, r0, r2, r6
9001b6d0:	fb13 2101 	smlabb	r1, r3, r1, r2
9001b6d4:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001b6d8:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001b6dc:	604d      	str	r5, [r1, #4]
9001b6de:	e729      	b.n	9001b534 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001b6e0:	1c5e      	adds	r6, r3, #1
9001b6e2:	465f      	mov	r7, fp
9001b6e4:	45b3      	cmp	fp, r6
9001b6e6:	bfa8      	it	ge
9001b6e8:	4637      	movge	r7, r6
9001b6ea:	e725      	b.n	9001b538 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
9001b6ec:	193b      	adds	r3, r7, r4
9001b6ee:	2b40      	cmp	r3, #64	@ 0x40
9001b6f0:	dd13      	ble.n	9001b71a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
9001b6f2:	4648      	mov	r0, r9
9001b6f4:	00a1      	lsls	r1, r4, #2
9001b6f6:	f7e5 fd97 	bl	90001228 <_ZN8touchgfx5paint9flushLineEPmi>
9001b6fa:	4649      	mov	r1, r9
9001b6fc:	9b05      	ldr	r3, [sp, #20]
9001b6fe:	4622      	mov	r2, r4
9001b700:	4640      	mov	r0, r8
9001b702:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001b706:	f7e5 fdf5 	bl	900012f4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001b70a:	4b2c      	ldr	r3, [pc, #176]	@ (9001b7bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
9001b70c:	2400      	movs	r4, #0
9001b70e:	4599      	cmp	r9, r3
9001b710:	bf0c      	ite	eq
9001b712:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 9001b7c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
9001b716:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 9001b7bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
9001b71a:	eb09 0284 	add.w	r2, r9, r4, lsl #2
9001b71e:	463b      	mov	r3, r7
9001b720:	3b01      	subs	r3, #1
9001b722:	f842 5b04 	str.w	r5, [r2], #4
9001b726:	d1fb      	bne.n	9001b720 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
9001b728:	443c      	add	r4, r7
9001b72a:	9f03      	ldr	r7, [sp, #12]
9001b72c:	e6d9      	b.n	9001b4e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001b72e:	b15c      	cbz	r4, 9001b748 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
9001b730:	00a1      	lsls	r1, r4, #2
9001b732:	4648      	mov	r0, r9
9001b734:	f7e5 fd78 	bl	90001228 <_ZN8touchgfx5paint9flushLineEPmi>
9001b738:	4640      	mov	r0, r8
9001b73a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001b73e:	9b05      	ldr	r3, [sp, #20]
9001b740:	4622      	mov	r2, r4
9001b742:	4649      	mov	r1, r9
9001b744:	f7e5 fdd6 	bl	900012f4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001b748:	4b1d      	ldr	r3, [pc, #116]	@ (9001b7c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
9001b74a:	9a01      	ldr	r2, [sp, #4]
9001b74c:	881b      	ldrh	r3, [r3, #0]
9001b74e:	1a9b      	subs	r3, r3, r2
9001b750:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001b754:	9b04      	ldr	r3, [sp, #16]
9001b756:	3301      	adds	r3, #1
9001b758:	9304      	str	r3, [sp, #16]
9001b75a:	9a04      	ldr	r2, [sp, #16]
9001b75c:	9b00      	ldr	r3, [sp, #0]
9001b75e:	4293      	cmp	r3, r2
9001b760:	d11d      	bne.n	9001b79e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
9001b762:	9b02      	ldr	r3, [sp, #8]
9001b764:	2500      	movs	r5, #0
9001b766:	9a02      	ldr	r2, [sp, #8]
9001b768:	f103 0b01 	add.w	fp, r3, #1
9001b76c:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
9001b770:	9b06      	ldr	r3, [sp, #24]
9001b772:	4629      	mov	r1, r5
9001b774:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
9001b778:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001b77c:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001b780:	1ba4      	subs	r4, r4, r6
9001b782:	9b07      	ldr	r3, [sp, #28]
9001b784:	ba3f      	rev	r7, r7
9001b786:	9808      	ldr	r0, [sp, #32]
9001b788:	b2a4      	uxth	r4, r4
9001b78a:	441f      	add	r7, r3
9001b78c:	f00d f86b 	bl	90028866 <memset>
9001b790:	f8cd b008 	str.w	fp, [sp, #8]
9001b794:	9504      	str	r5, [sp, #16]
9001b796:	f7e5 fd3d 	bl	90001214 <_ZN8touchgfx5paint8tearDownEv>
9001b79a:	463e      	mov	r6, r7
9001b79c:	e5cc      	b.n	9001b338 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
9001b79e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001b7a2:	9b01      	ldr	r3, [sp, #4]
9001b7a4:	1ae4      	subs	r4, r4, r3
9001b7a6:	1ba4      	subs	r4, r4, r6
9001b7a8:	b2a4      	uxth	r4, r4
9001b7aa:	e7f4      	b.n	9001b796 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
9001b7ac:	4b05      	ldr	r3, [pc, #20]	@ (9001b7c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
9001b7ae:	6818      	ldr	r0, [r3, #0]
9001b7b0:	6803      	ldr	r3, [r0, #0]
9001b7b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001b7b4:	4798      	blx	r3
9001b7b6:	b00f      	add	sp, #60	@ 0x3c
9001b7b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b7bc:	20000220 	.word	0x20000220
9001b7c0:	2001aa38 	.word	0x2001aa38
9001b7c4:	2001aa40 	.word	0x2001aa40
9001b7c8:	20000320 	.word	0x20000320

9001b7cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001b7cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b7d0:	b08f      	sub	sp, #60	@ 0x3c
9001b7d2:	461c      	mov	r4, r3
9001b7d4:	9205      	str	r2, [sp, #20]
9001b7d6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b7da:	9100      	str	r1, [sp, #0]
9001b7dc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001b7de:	9201      	str	r2, [sp, #4]
9001b7e0:	2a00      	cmp	r2, #0
9001b7e2:	f000 8116 	beq.w	9001ba12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001b7e6:	6820      	ldr	r0, [r4, #0]
9001b7e8:	aa0a      	add	r2, sp, #40	@ 0x28
9001b7ea:	6861      	ldr	r1, [r4, #4]
9001b7ec:	c203      	stmia	r2!, {r0, r1}
9001b7ee:	6818      	ldr	r0, [r3, #0]
9001b7f0:	aa0c      	add	r2, sp, #48	@ 0x30
9001b7f2:	6859      	ldr	r1, [r3, #4]
9001b7f4:	c203      	stmia	r2!, {r0, r1}
9001b7f6:	a80a      	add	r0, sp, #40	@ 0x28
9001b7f8:	f7f9 fab2 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b7fc:	4621      	mov	r1, r4
9001b7fe:	a80c      	add	r0, sp, #48	@ 0x30
9001b800:	f7f9 fad6 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b804:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001b808:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001b80c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001b810:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001b814:	bfdb      	ittet	le
9001b816:	b2b3      	uxthle	r3, r6
9001b818:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001b81c:	2301      	movgt	r3, #1
9001b81e:	fb92 f3f3 	sdivle	r3, r2, r3
9001b822:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001b826:	441d      	add	r5, r3
9001b828:	fb92 f1f3 	sdiv	r1, r2, r3
9001b82c:	fa1f fc81 	uxth.w	ip, r1
9001b830:	3d01      	subs	r5, #1
9001b832:	fb0c 2413 	mls	r4, ip, r3, r2
9001b836:	4661      	mov	r1, ip
9001b838:	fb14 f406 	smulbb	r4, r4, r6
9001b83c:	4404      	add	r4, r0
9001b83e:	fb95 f5f3 	sdiv	r5, r5, r3
9001b842:	b2a4      	uxth	r4, r4
9001b844:	b131      	cbz	r1, 9001b854 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001b846:	9b05      	ldr	r3, [sp, #20]
9001b848:	9900      	ldr	r1, [sp, #0]
9001b84a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001b84e:	ba1b      	rev	r3, r3
9001b850:	4419      	add	r1, r3
9001b852:	9100      	str	r1, [sp, #0]
9001b854:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001b858:	b2ad      	uxth	r5, r5
9001b85a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
9001b85e:	4418      	add	r0, r3
9001b860:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001b864:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001b868:	00ad      	lsls	r5, r5, #2
9001b86a:	441a      	add	r2, r3
9001b86c:	4b6a      	ldr	r3, [pc, #424]	@ (9001ba18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001b86e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001b872:	6818      	ldr	r0, [r3, #0]
9001b874:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001b878:	6803      	ldr	r3, [r0, #0]
9001b87a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001b87c:	4798      	blx	r3
9001b87e:	4967      	ldr	r1, [pc, #412]	@ (9001ba1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001b880:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001b884:	2c00      	cmp	r4, #0
9001b886:	880b      	ldrh	r3, [r1, #0]
9001b888:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001b88c:	bf0c      	ite	eq
9001b88e:	46c6      	moveq	lr, r8
9001b890:	f04f 0e00 	movne.w	lr, #0
9001b894:	9109      	str	r1, [sp, #36]	@ 0x24
9001b896:	fb03 c202 	mla	r2, r3, r2, ip
9001b89a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001b89e:	4373      	muls	r3, r6
9001b8a0:	fa1f fe8e 	uxth.w	lr, lr
9001b8a4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001b8a8:	9103      	str	r1, [sp, #12]
9001b8aa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001b8ae:	9306      	str	r3, [sp, #24]
9001b8b0:	1d2b      	adds	r3, r5, #4
9001b8b2:	9307      	str	r3, [sp, #28]
9001b8b4:	9b01      	ldr	r3, [sp, #4]
9001b8b6:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
9001b8ba:	2300      	movs	r3, #0
9001b8bc:	b292      	uxth	r2, r2
9001b8be:	9302      	str	r3, [sp, #8]
9001b8c0:	9204      	str	r2, [sp, #16]
9001b8c2:	9a06      	ldr	r2, [sp, #24]
9001b8c4:	4282      	cmp	r2, r0
9001b8c6:	f240 809f 	bls.w	9001ba08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001b8ca:	b963      	cbnz	r3, 9001b8e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001b8cc:	9b00      	ldr	r3, [sp, #0]
9001b8ce:	781a      	ldrb	r2, [r3, #0]
9001b8d0:	0993      	lsrs	r3, r2, #6
9001b8d2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001b8d6:	9202      	str	r2, [sp, #8]
9001b8d8:	1e5a      	subs	r2, r3, #1
9001b8da:	2a02      	cmp	r2, #2
9001b8dc:	d815      	bhi.n	9001b90a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001b8de:	9a00      	ldr	r2, [sp, #0]
9001b8e0:	b29b      	uxth	r3, r3
9001b8e2:	3201      	adds	r2, #1
9001b8e4:	9200      	str	r2, [sp, #0]
9001b8e6:	b1b4      	cbz	r4, 9001b916 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001b8e8:	429c      	cmp	r4, r3
9001b8ea:	bf91      	iteee	ls
9001b8ec:	1b1c      	subls	r4, r3, r4
9001b8ee:	1ae4      	subhi	r4, r4, r3
9001b8f0:	4671      	movhi	r1, lr
9001b8f2:	f04f 0a00 	movhi.w	sl, #0
9001b8f6:	bf9b      	ittet	ls
9001b8f8:	fa1f fa84 	uxthls.w	sl, r4
9001b8fc:	2400      	movls	r4, #0
9001b8fe:	b2a4      	uxthhi	r4, r4
9001b900:	fa1f f188 	uxthls.w	r1, r8
9001b904:	4653      	mov	r3, sl
9001b906:	468e      	mov	lr, r1
9001b908:	e7db      	b.n	9001b8c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001b90a:	9a00      	ldr	r2, [sp, #0]
9001b90c:	9b00      	ldr	r3, [sp, #0]
9001b90e:	3202      	adds	r2, #2
9001b910:	785b      	ldrb	r3, [r3, #1]
9001b912:	9200      	str	r2, [sp, #0]
9001b914:	e7e7      	b.n	9001b8e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001b916:	2202      	movs	r2, #2
9001b918:	9907      	ldr	r1, [sp, #28]
9001b91a:	4573      	cmp	r3, lr
9001b91c:	4615      	mov	r5, r2
9001b91e:	9a02      	ldr	r2, [sp, #8]
9001b920:	bf24      	itt	cs
9001b922:	eba3 0a0e 	subcs.w	sl, r3, lr
9001b926:	46f1      	movcs	r9, lr
9001b928:	fb15 1202 	smlabb	r2, r5, r2, r1
9001b92c:	9905      	ldr	r1, [sp, #20]
9001b92e:	bf34      	ite	cc
9001b930:	4699      	movcc	r9, r3
9001b932:	fa1f fa8a 	uxthcs.w	sl, sl
9001b936:	f831 c002 	ldrh.w	ip, [r1, r2]
9001b93a:	bf38      	it	cc
9001b93c:	ebae 0103 	subcc.w	r1, lr, r3
9001b940:	9a01      	ldr	r2, [sp, #4]
9001b942:	bf2e      	itee	cs
9001b944:	4621      	movcs	r1, r4
9001b946:	b289      	uxthcc	r1, r1
9001b948:	46a2      	movcc	sl, r4
9001b94a:	2aff      	cmp	r2, #255	@ 0xff
9001b94c:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001b950:	d105      	bne.n	9001b95e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001b952:	4481      	add	r9, r0
9001b954:	4581      	cmp	r9, r0
9001b956:	d045      	beq.n	9001b9e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001b958:	f820 cb02 	strh.w	ip, [r0], #2
9001b95c:	e7fa      	b.n	9001b954 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001b95e:	ea4f 222c 	mov.w	r2, ip, asr #8
9001b962:	9d03      	ldr	r5, [sp, #12]
9001b964:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001b968:	4481      	add	r9, r0
9001b96a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b96e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001b972:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001b976:	fa5f fc8c 	uxtb.w	ip, ip
9001b97a:	436a      	muls	r2, r5
9001b97c:	fb0b fb05 	mul.w	fp, fp, r5
9001b980:	fb0c fc05 	mul.w	ip, ip, r5
9001b984:	9208      	str	r2, [sp, #32]
9001b986:	4581      	cmp	r9, r0
9001b988:	d02c      	beq.n	9001b9e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001b98a:	8802      	ldrh	r2, [r0, #0]
9001b98c:	9d04      	ldr	r5, [sp, #16]
9001b98e:	1216      	asrs	r6, r2, #8
9001b990:	9f04      	ldr	r7, [sp, #16]
9001b992:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001b996:	fb16 f605 	smulbb	r6, r6, r5
9001b99a:	9d08      	ldr	r5, [sp, #32]
9001b99c:	442e      	add	r6, r5
9001b99e:	10d5      	asrs	r5, r2, #3
9001b9a0:	00d2      	lsls	r2, r2, #3
9001b9a2:	b2b6      	uxth	r6, r6
9001b9a4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001b9a8:	b2d2      	uxtb	r2, r2
9001b9aa:	fb15 f507 	smulbb	r5, r5, r7
9001b9ae:	fb12 f207 	smulbb	r2, r2, r7
9001b9b2:	1c77      	adds	r7, r6, #1
9001b9b4:	445d      	add	r5, fp
9001b9b6:	4462      	add	r2, ip
9001b9b8:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001b9bc:	b2ad      	uxth	r5, r5
9001b9be:	b292      	uxth	r2, r2
9001b9c0:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001b9c4:	1c57      	adds	r7, r2, #1
9001b9c6:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001b9ca:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001b9ce:	4316      	orrs	r6, r2
9001b9d0:	1c6a      	adds	r2, r5, #1
9001b9d2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001b9d6:	096d      	lsrs	r5, r5, #5
9001b9d8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001b9dc:	432e      	orrs	r6, r5
9001b9de:	f820 6b02 	strh.w	r6, [r0], #2
9001b9e2:	e7d0      	b.n	9001b986 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001b9e4:	4573      	cmp	r3, lr
9001b9e6:	d38d      	bcc.n	9001b904 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001b9e8:	fa1f f188 	uxth.w	r1, r8
9001b9ec:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001b9f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001b9f2:	1a64      	subs	r4, r4, r1
9001b9f4:	881b      	ldrh	r3, [r3, #0]
9001b9f6:	b2a4      	uxth	r4, r4
9001b9f8:	eba3 0308 	sub.w	r3, r3, r8
9001b9fc:	2c00      	cmp	r4, #0
9001b9fe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ba02:	bf18      	it	ne
9001ba04:	2100      	movne	r1, #0
9001ba06:	e77d      	b.n	9001b904 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001ba08:	4b03      	ldr	r3, [pc, #12]	@ (9001ba18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001ba0a:	6818      	ldr	r0, [r3, #0]
9001ba0c:	6803      	ldr	r3, [r0, #0]
9001ba0e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ba10:	4798      	blx	r3
9001ba12:	b00f      	add	sp, #60	@ 0x3c
9001ba14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ba18:	2001aa40 	.word	0x2001aa40
9001ba1c:	2001aa38 	.word	0x2001aa38

9001ba20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001ba20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ba24:	b09f      	sub	sp, #124	@ 0x7c
9001ba26:	461d      	mov	r5, r3
9001ba28:	4604      	mov	r4, r0
9001ba2a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001ba2c:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001ba30:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001ba34:	9209      	str	r2, [sp, #36]	@ 0x24
9001ba36:	2a00      	cmp	r2, #0
9001ba38:	f000 81ed 	beq.w	9001be16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001ba3c:	6828      	ldr	r0, [r5, #0]
9001ba3e:	aa1a      	add	r2, sp, #104	@ 0x68
9001ba40:	6869      	ldr	r1, [r5, #4]
9001ba42:	c203      	stmia	r2!, {r0, r1}
9001ba44:	6818      	ldr	r0, [r3, #0]
9001ba46:	aa1c      	add	r2, sp, #112	@ 0x70
9001ba48:	6859      	ldr	r1, [r3, #4]
9001ba4a:	c203      	stmia	r2!, {r0, r1}
9001ba4c:	a81a      	add	r0, sp, #104	@ 0x68
9001ba4e:	f7f9 f987 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ba52:	4629      	mov	r1, r5
9001ba54:	a81c      	add	r0, sp, #112	@ 0x70
9001ba56:	f7f9 f9ab 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ba5a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001ba5e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9001ba62:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001ba66:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
9001ba6a:	bfdb      	ittet	le
9001ba6c:	b29a      	uxthle	r2, r3
9001ba6e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001ba72:	2201      	movgt	r2, #1
9001ba74:	fb91 f2f2 	sdivle	r2, r1, r2
9001ba78:	9202      	str	r2, [sp, #8]
9001ba7a:	9802      	ldr	r0, [sp, #8]
9001ba7c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001ba80:	9902      	ldr	r1, [sp, #8]
9001ba82:	fb92 f0f0 	sdiv	r0, r2, r0
9001ba86:	b280      	uxth	r0, r0
9001ba88:	4488      	add	r8, r1
9001ba8a:	9010      	str	r0, [sp, #64]	@ 0x40
9001ba8c:	f108 38ff 	add.w	r8, r8, #4294967295
9001ba90:	9802      	ldr	r0, [sp, #8]
9001ba92:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001ba94:	fb05 2510 	mls	r5, r5, r0, r2
9001ba98:	fb98 f8f1 	sdiv	r8, r8, r1
9001ba9c:	fb15 f503 	smulbb	r5, r5, r3
9001baa0:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001baa4:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001baa8:	f108 0801 	add.w	r8, r8, #1
9001baac:	440d      	add	r5, r1
9001baae:	4419      	add	r1, r3
9001bab0:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001bab4:	fa1f f888 	uxth.w	r8, r8
9001bab8:	441a      	add	r2, r3
9001baba:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001babe:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001bac2:	b2ad      	uxth	r5, r5
9001bac4:	9304      	str	r3, [sp, #16]
9001bac6:	4b94      	ldr	r3, [pc, #592]	@ (9001bd18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001bac8:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001bacc:	6818      	ldr	r0, [r3, #0]
9001bace:	6803      	ldr	r3, [r0, #0]
9001bad0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001bad2:	4798      	blx	r3
9001bad4:	4b91      	ldr	r3, [pc, #580]	@ (9001bd1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001bad6:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001bada:	2d00      	cmp	r5, #0
9001badc:	881a      	ldrh	r2, [r3, #0]
9001bade:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001bae2:	fb02 f606 	mul.w	r6, r2, r6
9001bae6:	fb02 7101 	mla	r1, r2, r1, r7
9001baea:	9318      	str	r3, [sp, #96]	@ 0x60
9001baec:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001baf0:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
9001baf4:	f04f 0100 	mov.w	r1, #0
9001baf8:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001bafc:	930f      	str	r3, [sp, #60]	@ 0x3c
9001bafe:	4b88      	ldr	r3, [pc, #544]	@ (9001bd20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001bb00:	920a      	str	r2, [sp, #40]	@ 0x28
9001bb02:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001bb04:	eba3 0304 	sub.w	r3, r3, r4
9001bb08:	910d      	str	r1, [sp, #52]	@ 0x34
9001bb0a:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001bb0e:	9319      	str	r3, [sp, #100]	@ 0x64
9001bb10:	f108 0204 	add.w	r2, r8, #4
9001bb14:	9211      	str	r2, [sp, #68]	@ 0x44
9001bb16:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001bb18:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
9001bb1c:	9215      	str	r2, [sp, #84]	@ 0x54
9001bb1e:	9a04      	ldr	r2, [sp, #16]
9001bb20:	bf18      	it	ne
9001bb22:	2200      	movne	r2, #0
9001bb24:	b292      	uxth	r2, r2
9001bb26:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001bb28:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001bb2a:	fa11 f383 	uxtah	r3, r1, r3
9001bb2e:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001bb30:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001bb34:	3304      	adds	r3, #4
9001bb36:	9306      	str	r3, [sp, #24]
9001bb38:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001bb3a:	4283      	cmp	r3, r0
9001bb3c:	f240 8166 	bls.w	9001be0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001bb40:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001bb44:	f04f 0a01 	mov.w	sl, #1
9001bb48:	9902      	ldr	r1, [sp, #8]
9001bb4a:	9e06      	ldr	r6, [sp, #24]
9001bb4c:	46d3      	mov	fp, sl
9001bb4e:	4657      	mov	r7, sl
9001bb50:	7836      	ldrb	r6, [r6, #0]
9001bb52:	fbb5 f3f3 	udiv	r3, r5, r3
9001bb56:	1acb      	subs	r3, r1, r3
9001bb58:	9612      	str	r6, [sp, #72]	@ 0x48
9001bb5a:	3601      	adds	r6, #1
9001bb5c:	b29b      	uxth	r3, r3
9001bb5e:	9605      	str	r6, [sp, #20]
9001bb60:	9316      	str	r3, [sp, #88]	@ 0x58
9001bb62:	9b06      	ldr	r3, [sp, #24]
9001bb64:	7859      	ldrb	r1, [r3, #1]
9001bb66:	789b      	ldrb	r3, [r3, #2]
9001bb68:	021b      	lsls	r3, r3, #8
9001bb6a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001bb6e:	9906      	ldr	r1, [sp, #24]
9001bb70:	78c9      	ldrb	r1, [r1, #3]
9001bb72:	430b      	orrs	r3, r1
9001bb74:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9001bb76:	4419      	add	r1, r3
9001bb78:	1c4e      	adds	r6, r1, #1
9001bb7a:	7849      	ldrb	r1, [r1, #1]
9001bb7c:	9603      	str	r6, [sp, #12]
9001bb7e:	0209      	lsls	r1, r1, #8
9001bb80:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001bb82:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9001bb86:	5cf3      	ldrb	r3, [r6, r3]
9001bb88:	4319      	orrs	r1, r3
9001bb8a:	b28b      	uxth	r3, r1
9001bb8c:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001bb90:	930c      	str	r3, [sp, #48]	@ 0x30
9001bb92:	2300      	movs	r3, #0
9001bb94:	9307      	str	r3, [sp, #28]
9001bb96:	469c      	mov	ip, r3
9001bb98:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001bb9c:	930e      	str	r3, [sp, #56]	@ 0x38
9001bb9e:	2d00      	cmp	r5, #0
9001bba0:	d07e      	beq.n	9001bca0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001bba2:	42af      	cmp	r7, r5
9001bba4:	d26e      	bcs.n	9001bc84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001bba6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001bba8:	1bed      	subs	r5, r5, r7
9001bbaa:	9201      	str	r2, [sp, #4]
9001bbac:	4283      	cmp	r3, r0
9001bbae:	b2ad      	uxth	r5, r5
9001bbb0:	d802      	bhi.n	9001bbb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001bbb2:	e073      	b.n	9001bc9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001bbb4:	2b00      	cmp	r3, #0
9001bbb6:	d15f      	bne.n	9001bc78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001bbb8:	9b03      	ldr	r3, [sp, #12]
9001bbba:	f1cb 0207 	rsb	r2, fp, #7
9001bbbe:	785b      	ldrb	r3, [r3, #1]
9001bbc0:	4093      	lsls	r3, r2
9001bbc2:	005b      	lsls	r3, r3, #1
9001bbc4:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001bbc8:	9b03      	ldr	r3, [sp, #12]
9001bbca:	781b      	ldrb	r3, [r3, #0]
9001bbcc:	fa43 f30b 	asr.w	r3, r3, fp
9001bbd0:	b2db      	uxtb	r3, r3
9001bbd2:	4313      	orrs	r3, r2
9001bbd4:	f10b 0201 	add.w	r2, fp, #1
9001bbd8:	fa5f fb82 	uxtb.w	fp, r2
9001bbdc:	9a03      	ldr	r2, [sp, #12]
9001bbde:	b29f      	uxth	r7, r3
9001bbe0:	f1bb 0f08 	cmp.w	fp, #8
9001bbe4:	bf13      	iteet	ne
9001bbe6:	3201      	addne	r2, #1
9001bbe8:	3202      	addeq	r2, #2
9001bbea:	f04f 0b00 	moveq.w	fp, #0
9001bbee:	9203      	strne	r2, [sp, #12]
9001bbf0:	bf08      	it	eq
9001bbf2:	9203      	streq	r2, [sp, #12]
9001bbf4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001bbf6:	42ba      	cmp	r2, r7
9001bbf8:	d309      	bcc.n	9001bc0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001bbfa:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001bbfe:	2301      	movs	r3, #1
9001bc00:	9a05      	ldr	r2, [sp, #20]
9001bc02:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
9001bc06:	d30e      	bcc.n	9001bc26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001bc08:	469a      	mov	sl, r3
9001bc0a:	2600      	movs	r6, #0
9001bc0c:	e035      	b.n	9001bc7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001bc0e:	9b05      	ldr	r3, [sp, #20]
9001bc10:	429f      	cmp	r7, r3
9001bc12:	d318      	bcc.n	9001bc46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001bc14:	eb04 030a 	add.w	r3, r4, sl
9001bc18:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
9001bc1c:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
9001bc20:	f10a 0301 	add.w	r3, sl, #1
9001bc24:	b29b      	uxth	r3, r3
9001bc26:	9a05      	ldr	r2, [sp, #20]
9001bc28:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001bc2c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001bc30:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001bc32:	7116      	strb	r6, [r2, #4]
9001bc34:	f10a 0601 	add.w	r6, sl, #1
9001bc38:	80d1      	strh	r1, [r2, #6]
9001bc3a:	7156      	strb	r6, [r2, #5]
9001bc3c:	9a05      	ldr	r2, [sp, #20]
9001bc3e:	3201      	adds	r2, #1
9001bc40:	b292      	uxth	r2, r2
9001bc42:	9205      	str	r2, [sp, #20]
9001bc44:	e7e0      	b.n	9001bc08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001bc46:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001bc4a:	463a      	mov	r2, r7
9001bc4c:	795b      	ldrb	r3, [r3, #5]
9001bc4e:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001bc52:	4426      	add	r6, r4
9001bc54:	9919      	ldr	r1, [sp, #100]	@ 0x64
9001bc56:	eb01 0c06 	add.w	ip, r1, r6
9001bc5a:	f1bc 0f00 	cmp.w	ip, #0
9001bc5e:	dd07      	ble.n	9001bc70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001bc60:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001bc64:	f892 c004 	ldrb.w	ip, [r2, #4]
9001bc68:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001bc6c:	88d2      	ldrh	r2, [r2, #6]
9001bc6e:	e7f1      	b.n	9001bc54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001bc70:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001bc74:	b29b      	uxth	r3, r3
9001bc76:	e7c3      	b.n	9001bc00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001bc78:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001bc7a:	970c      	str	r7, [sp, #48]	@ 0x30
9001bc7c:	46b4      	mov	ip, r6
9001bc7e:	9a01      	ldr	r2, [sp, #4]
9001bc80:	461f      	mov	r7, r3
9001bc82:	e78c      	b.n	9001bb9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001bc84:	1b7b      	subs	r3, r7, r5
9001bc86:	eb0c 0605 	add.w	r6, ip, r5
9001bc8a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001bc8e:	b29b      	uxth	r3, r3
9001bc90:	b2b6      	uxth	r6, r6
9001bc92:	9201      	str	r2, [sp, #4]
9001bc94:	2500      	movs	r5, #0
9001bc96:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001bc98:	4282      	cmp	r2, r0
9001bc9a:	d88b      	bhi.n	9001bbb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001bc9c:	9a01      	ldr	r2, [sp, #4]
9001bc9e:	e74b      	b.n	9001bb38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001bca0:	4297      	cmp	r7, r2
9001bca2:	d332      	bcc.n	9001bd0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001bca4:	1abb      	subs	r3, r7, r2
9001bca6:	9208      	str	r2, [sp, #32]
9001bca8:	9501      	str	r5, [sp, #4]
9001bcaa:	b29b      	uxth	r3, r3
9001bcac:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001bcae:	29ff      	cmp	r1, #255	@ 0xff
9001bcb0:	9908      	ldr	r1, [sp, #32]
9001bcb2:	eb0c 0601 	add.w	r6, ip, r1
9001bcb6:	d135      	bne.n	9001bd24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001bcb8:	f1a0 0e02 	sub.w	lr, r0, #2
9001bcbc:	b2b6      	uxth	r6, r6
9001bcbe:	45b4      	cmp	ip, r6
9001bcc0:	f040 808c 	bne.w	9001bddc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001bcc4:	9908      	ldr	r1, [sp, #32]
9001bcc6:	4297      	cmp	r7, r2
9001bcc8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001bccc:	d3e2      	bcc.n	9001bc94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001bcce:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001bcd0:	9904      	ldr	r1, [sp, #16]
9001bcd2:	8812      	ldrh	r2, [r2, #0]
9001bcd4:	1a52      	subs	r2, r2, r1
9001bcd6:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001bcd8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001bcdc:	9a07      	ldr	r2, [sp, #28]
9001bcde:	3201      	adds	r2, #1
9001bce0:	428a      	cmp	r2, r1
9001bce2:	9207      	str	r2, [sp, #28]
9001bce4:	f040 8087 	bne.w	9001bdf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001bce8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001bcec:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
9001bcf0:	9b04      	ldr	r3, [sp, #16]
9001bcf2:	1bed      	subs	r5, r5, r7
9001bcf4:	b2ad      	uxth	r5, r5
9001bcf6:	2d00      	cmp	r5, #0
9001bcf8:	bf08      	it	eq
9001bcfa:	461a      	moveq	r2, r3
9001bcfc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001bcfe:	bf18      	it	ne
9001bd00:	2200      	movne	r2, #0
9001bd02:	3301      	adds	r3, #1
9001bd04:	b292      	uxth	r2, r2
9001bd06:	930d      	str	r3, [sp, #52]	@ 0x34
9001bd08:	e70d      	b.n	9001bb26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001bd0a:	1bd1      	subs	r1, r2, r7
9001bd0c:	9708      	str	r7, [sp, #32]
9001bd0e:	b28b      	uxth	r3, r1
9001bd10:	9301      	str	r3, [sp, #4]
9001bd12:	462b      	mov	r3, r5
9001bd14:	e7ca      	b.n	9001bcac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001bd16:	bf00      	nop
9001bd18:	2001aa40 	.word	0x2001aa40
9001bd1c:	2001aa38 	.word	0x2001aa38
9001bd20:	fffff7fb 	.word	0xfffff7fb
9001bd24:	b2b6      	uxth	r6, r6
9001bd26:	900b      	str	r0, [sp, #44]	@ 0x2c
9001bd28:	45b4      	cmp	ip, r6
9001bd2a:	d0cb      	beq.n	9001bcc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001bd2c:	f10c 0101 	add.w	r1, ip, #1
9001bd30:	44a4      	add	ip, r4
9001bd32:	9117      	str	r1, [sp, #92]	@ 0x5c
9001bd34:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001bd38:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001bd3a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001bd3e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001bd40:	ea4f 2825 	mov.w	r8, r5, asr #8
9001bd44:	f8b1 c000 	ldrh.w	ip, [r1]
9001bd48:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001bd4a:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001bd4e:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001bd52:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001bd56:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001bd5a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001bd5e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001bd62:	fb1e fe01 	smulbb	lr, lr, r1
9001bd66:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001bd68:	fa5f fc8c 	uxtb.w	ip, ip
9001bd6c:	fb08 e801 	mla	r8, r8, r1, lr
9001bd70:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001bd74:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001bd76:	00ed      	lsls	r5, r5, #3
9001bd78:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001bd7c:	fa1f f888 	uxth.w	r8, r8
9001bd80:	fb19 f901 	smulbb	r9, r9, r1
9001bd84:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001bd86:	b2ed      	uxtb	r5, r5
9001bd88:	fb0e 9e01 	mla	lr, lr, r1, r9
9001bd8c:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001bd8e:	fb1c fc01 	smulbb	ip, ip, r1
9001bd92:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001bd94:	fa1f fe8e 	uxth.w	lr, lr
9001bd98:	fb05 c501 	mla	r5, r5, r1, ip
9001bd9c:	f108 0c01 	add.w	ip, r8, #1
9001bda0:	f10e 0901 	add.w	r9, lr, #1
9001bda4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001bda6:	b2ad      	uxth	r5, r5
9001bda8:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001bdac:	f105 0c01 	add.w	ip, r5, #1
9001bdb0:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001bdb4:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001bdb8:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001bdbc:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001bdc0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001bdc4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001bdc8:	ea4c 0808 	orr.w	r8, ip, r8
9001bdcc:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
9001bdd0:	ea48 0809 	orr.w	r8, r8, r9
9001bdd4:	f821 8b02 	strh.w	r8, [r1], #2
9001bdd8:	910b      	str	r1, [sp, #44]	@ 0x2c
9001bdda:	e7a5      	b.n	9001bd28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001bddc:	f10c 0801 	add.w	r8, ip, #1
9001bde0:	44a4      	add	ip, r4
9001bde2:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001bde4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001bde8:	fa1f fc88 	uxth.w	ip, r8
9001bdec:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001bdf0:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001bdf4:	e763      	b.n	9001bcbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001bdf6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001bdfa:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001bdfe:	1aad      	subs	r5, r5, r2
9001be00:	b2ad      	uxth	r5, r5
9001be02:	2d00      	cmp	r5, #0
9001be04:	bf18      	it	ne
9001be06:	2200      	movne	r2, #0
9001be08:	9201      	str	r2, [sp, #4]
9001be0a:	e744      	b.n	9001bc96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001be0c:	4b03      	ldr	r3, [pc, #12]	@ (9001be1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001be0e:	6818      	ldr	r0, [r3, #0]
9001be10:	6803      	ldr	r3, [r0, #0]
9001be12:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001be14:	4798      	blx	r3
9001be16:	b01f      	add	sp, #124	@ 0x7c
9001be18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001be1c:	2001aa40 	.word	0x2001aa40

9001be20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
9001be20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001be24:	b093      	sub	sp, #76	@ 0x4c
9001be26:	4616      	mov	r6, r2
9001be28:	460d      	mov	r5, r1
9001be2a:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
9001be2e:	9003      	str	r0, [sp, #12]
9001be30:	9201      	str	r2, [sp, #4]
9001be32:	2a00      	cmp	r2, #0
9001be34:	f000 8303 	beq.w	9001c43e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
9001be38:	6830      	ldr	r0, [r6, #0]
9001be3a:	ac0e      	add	r4, sp, #56	@ 0x38
9001be3c:	6871      	ldr	r1, [r6, #4]
9001be3e:	c403      	stmia	r4!, {r0, r1}
9001be40:	6818      	ldr	r0, [r3, #0]
9001be42:	ac10      	add	r4, sp, #64	@ 0x40
9001be44:	6859      	ldr	r1, [r3, #4]
9001be46:	c403      	stmia	r4!, {r0, r1}
9001be48:	a80e      	add	r0, sp, #56	@ 0x38
9001be4a:	f7f8 ff89 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001be4e:	4631      	mov	r1, r6
9001be50:	a810      	add	r0, sp, #64	@ 0x40
9001be52:	f7f8 ffad 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001be56:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001be5a:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001be5e:	bfdb      	ittet	le
9001be60:	b293      	uxthle	r3, r2
9001be62:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001be66:	2301      	movgt	r3, #1
9001be68:	fb91 f3f3 	sdivle	r3, r1, r3
9001be6c:	9304      	str	r3, [sp, #16]
9001be6e:	f105 0308 	add.w	r3, r5, #8
9001be72:	9904      	ldr	r1, [sp, #16]
9001be74:	9308      	str	r3, [sp, #32]
9001be76:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
9001be7a:	440b      	add	r3, r1
9001be7c:	3b01      	subs	r3, #1
9001be7e:	fb93 f3f1 	sdiv	r3, r3, r1
9001be82:	3b01      	subs	r3, #1
9001be84:	9908      	ldr	r1, [sp, #32]
9001be86:	b29b      	uxth	r3, r3
9001be88:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001be8c:	9904      	ldr	r1, [sp, #16]
9001be8e:	9309      	str	r3, [sp, #36]	@ 0x24
9001be90:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001be94:	fb93 f0f1 	sdiv	r0, r3, r1
9001be98:	b284      	uxth	r4, r0
9001be9a:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
9001be9e:	9405      	str	r4, [sp, #20]
9001bea0:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
9001bea4:	fb05 3914 	mls	r9, r5, r4, r3
9001bea8:	fb19 f902 	smulbb	r9, r9, r2
9001beac:	4489      	add	r9, r1
9001beae:	fa1f f989 	uxth.w	r9, r9
9001beb2:	2d00      	cmp	r5, #0
9001beb4:	d05d      	beq.n	9001bf72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
9001beb6:	1e6a      	subs	r2, r5, #1
9001beb8:	9808      	ldr	r0, [sp, #32]
9001beba:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
9001bebe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001bec0:	fa9a fa8a 	rev.w	sl, sl
9001bec4:	4492      	add	sl, r2
9001bec6:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
9001beca:	f04f 0600 	mov.w	r6, #0
9001bece:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001bed2:	4411      	add	r1, r2
9001bed4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001bed8:	4413      	add	r3, r2
9001beda:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
9001bede:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001bee2:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
9001bee6:	9302      	str	r3, [sp, #8]
9001bee8:	4bca      	ldr	r3, [pc, #808]	@ (9001c214 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
9001beea:	6818      	ldr	r0, [r3, #0]
9001beec:	6803      	ldr	r3, [r0, #0]
9001beee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001bef0:	4798      	blx	r3
9001bef2:	4bc9      	ldr	r3, [pc, #804]	@ (9001c218 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
9001bef4:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001bef8:	2100      	movs	r1, #0
9001befa:	881b      	ldrh	r3, [r3, #0]
9001befc:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
9001bf00:	fb03 2404 	mla	r4, r3, r4, r2
9001bf04:	2280      	movs	r2, #128	@ 0x80
9001bf06:	436b      	muls	r3, r5
9001bf08:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001bf0c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001bf10:	930d      	str	r3, [sp, #52]	@ 0x34
9001bf12:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
9001bf16:	fb99 f3f3 	sdiv	r3, r9, r3
9001bf1a:	9306      	str	r3, [sp, #24]
9001bf1c:	9b01      	ldr	r3, [sp, #4]
9001bf1e:	43db      	mvns	r3, r3
9001bf20:	b2db      	uxtb	r3, r3
9001bf22:	930a      	str	r3, [sp, #40]	@ 0x28
9001bf24:	9b03      	ldr	r3, [sp, #12]
9001bf26:	3304      	adds	r3, #4
9001bf28:	4618      	mov	r0, r3
9001bf2a:	930b      	str	r3, [sp, #44]	@ 0x2c
9001bf2c:	f00c fc9b 	bl	90028866 <memset>
9001bf30:	4bba      	ldr	r3, [pc, #744]	@ (9001c21c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
9001bf32:	9300      	str	r3, [sp, #0]
9001bf34:	2300      	movs	r3, #0
9001bf36:	9307      	str	r3, [sp, #28]
9001bf38:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001bf3a:	42a3      	cmp	r3, r4
9001bf3c:	f240 827a 	bls.w	9001c434 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
9001bf40:	f04f 0e07 	mov.w	lr, #7
9001bf44:	f1b9 0f00 	cmp.w	r9, #0
9001bf48:	f000 8159 	beq.w	9001c1fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
9001bf4c:	f89a 5000 	ldrb.w	r5, [sl]
9001bf50:	f10a 0701 	add.w	r7, sl, #1
9001bf54:	b2ed      	uxtb	r5, r5
9001bf56:	11aa      	asrs	r2, r5, #6
9001bf58:	d10e      	bne.n	9001bf78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
9001bf5a:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001bf5e:	9b03      	ldr	r3, [sp, #12]
9001bf60:	eb03 0545 	add.w	r5, r3, r5, lsl #1
9001bf64:	88ae      	ldrh	r6, [r5, #4]
9001bf66:	f109 39ff 	add.w	r9, r9, #4294967295
9001bf6a:	fa1f f989 	uxth.w	r9, r9
9001bf6e:	46ba      	mov	sl, r7
9001bf70:	e7e8      	b.n	9001bf44 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
9001bf72:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
9001bf76:	e7a6      	b.n	9001bec6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
9001bf78:	2a01      	cmp	r2, #1
9001bf7a:	d129      	bne.n	9001bfd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
9001bf7c:	f3c6 0304 	ubfx	r3, r6, #0, #5
9001bf80:	f005 0203 	and.w	r2, r5, #3
9001bf84:	2103      	movs	r1, #3
9001bf86:	3b02      	subs	r3, #2
9001bf88:	4413      	add	r3, r2
9001bf8a:	f3c5 0281 	ubfx	r2, r5, #2, #2
9001bf8e:	f3c5 1501 	ubfx	r5, r5, #4, #2
9001bf92:	f003 031f 	and.w	r3, r3, #31
9001bf96:	3a02      	subs	r2, #2
9001bf98:	3d02      	subs	r5, #2
9001bf9a:	f363 0604 	bfi	r6, r3, #0, #5
9001bf9e:	eb02 1256 	add.w	r2, r2, r6, lsr #5
9001bfa2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001bfa6:	f362 164a 	bfi	r6, r2, #5, #6
9001bfaa:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001bfae:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
9001bfb2:	f005 051f 	and.w	r5, r5, #31
9001bfb6:	fb11 2205 	smlabb	r2, r1, r5, r2
9001bfba:	f365 26cf 	bfi	r6, r5, #11, #5
9001bfbe:	fb1e 2303 	smlabb	r3, lr, r3, r2
9001bfc2:	9a03      	ldr	r2, [sp, #12]
9001bfc4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001bfc8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001bfcc:	809e      	strh	r6, [r3, #4]
9001bfce:	e7ca      	b.n	9001bf66 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
9001bfd0:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001bfd4:	2a02      	cmp	r2, #2
9001bfd6:	b2ab      	uxth	r3, r5
9001bfd8:	d136      	bne.n	9001c048 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
9001bfda:	2101      	movs	r1, #1
9001bfdc:	fb12 1205 	smlabb	r2, r2, r5, r1
9001bfe0:	4492      	add	sl, r2
9001bfe2:	463a      	mov	r2, r7
9001bfe4:	4552      	cmp	r2, sl
9001bfe6:	d01c      	beq.n	9001c022 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
9001bfe8:	4694      	mov	ip, r2
9001bfea:	f04f 0b03 	mov.w	fp, #3
9001bfee:	f81c 1b02 	ldrb.w	r1, [ip], #2
9001bff2:	7852      	ldrb	r2, [r2, #1]
9001bff4:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
9001bff8:	f3c1 1045 	ubfx	r0, r1, #5, #6
9001bffc:	ea4f 28d1 	mov.w	r8, r1, lsr #11
9001c000:	f001 021f 	and.w	r2, r1, #31
9001c004:	460e      	mov	r6, r1
9001c006:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001c00a:	fb1b 0008 	smlabb	r0, fp, r8, r0
9001c00e:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001c012:	9a03      	ldr	r2, [sp, #12]
9001c014:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001c018:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001c01c:	4662      	mov	r2, ip
9001c01e:	8081      	strh	r1, [r0, #4]
9001c020:	e7e0      	b.n	9001bfe4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
9001c022:	4599      	cmp	r9, r3
9001c024:	d20b      	bcs.n	9001c03e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
9001c026:	eba5 0509 	sub.w	r5, r5, r9
9001c02a:	eb07 0749 	add.w	r7, r7, r9, lsl #1
9001c02e:	2d00      	cmp	r5, #0
9001c030:	f300 8208 	bgt.w	9001c444 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
9001c034:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001c038:	2301      	movs	r3, #1
9001c03a:	9307      	str	r3, [sp, #28]
9001c03c:	e00c      	b.n	9001c058 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001c03e:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9001c042:	eba9 0903 	sub.w	r9, r9, r3
9001c046:	e790      	b.n	9001bf6a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
9001c048:	4599      	cmp	r9, r3
9001c04a:	d2fa      	bcs.n	9001c042 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
9001c04c:	eba5 0509 	sub.w	r5, r5, r9
9001c050:	2d00      	cmp	r5, #0
9001c052:	dc1d      	bgt.n	9001c090 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
9001c054:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001c058:	f04f 0b00 	mov.w	fp, #0
9001c05c:	f1b8 0f00 	cmp.w	r8, #0
9001c060:	f340 81a0 	ble.w	9001c3a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
9001c064:	783b      	ldrb	r3, [r7, #0]
9001c066:	f107 0a01 	add.w	sl, r7, #1
9001c06a:	b2db      	uxtb	r3, r3
9001c06c:	119a      	asrs	r2, r3, #6
9001c06e:	f040 80d7 	bne.w	9001c220 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
9001c072:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001c076:	9a03      	ldr	r2, [sp, #12]
9001c078:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001c07c:	889e      	ldrh	r6, [r3, #4]
9001c07e:	9b01      	ldr	r3, [sp, #4]
9001c080:	2bff      	cmp	r3, #255	@ 0xff
9001c082:	f040 81e8 	bne.w	9001c456 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
9001c086:	8026      	strh	r6, [r4, #0]
9001c088:	f108 38ff 	add.w	r8, r8, #4294967295
9001c08c:	3402      	adds	r4, #2
9001c08e:	e0be      	b.n	9001c20e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001c090:	9b02      	ldr	r3, [sp, #8]
9001c092:	9a02      	ldr	r2, [sp, #8]
9001c094:	42ab      	cmp	r3, r5
9001c096:	bfa8      	it	ge
9001c098:	462b      	movge	r3, r5
9001c09a:	eba2 0803 	sub.w	r8, r2, r3
9001c09e:	9a07      	ldr	r2, [sp, #28]
9001c0a0:	1aed      	subs	r5, r5, r3
9001c0a2:	2a00      	cmp	r2, #0
9001c0a4:	d05a      	beq.n	9001c15c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
9001c0a6:	9a01      	ldr	r2, [sp, #4]
9001c0a8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001c0ac:	2aff      	cmp	r2, #255	@ 0xff
9001c0ae:	d049      	beq.n	9001c144 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001c0b0:	f8bd e004 	ldrh.w	lr, [sp, #4]
9001c0b4:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
9001c0b8:	42a3      	cmp	r3, r4
9001c0ba:	f240 80a5 	bls.w	9001c208 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001c0be:	46bc      	mov	ip, r7
9001c0c0:	8820      	ldrh	r0, [r4, #0]
9001c0c2:	f81c 2b02 	ldrb.w	r2, [ip], #2
9001c0c6:	ea4f 2a20 	mov.w	sl, r0, asr #8
9001c0ca:	7879      	ldrb	r1, [r7, #1]
9001c0cc:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9001c0d0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9001c0d4:	fb1a fa09 	smulbb	sl, sl, r9
9001c0d8:	b212      	sxth	r2, r2
9001c0da:	b291      	uxth	r1, r2
9001c0dc:	00d2      	lsls	r2, r2, #3
9001c0de:	120f      	asrs	r7, r1, #8
9001c0e0:	10c9      	asrs	r1, r1, #3
9001c0e2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c0e6:	b2d2      	uxtb	r2, r2
9001c0e8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001c0ec:	fb07 a70e 	mla	r7, r7, lr, sl
9001c0f0:	ea4f 0ae0 	mov.w	sl, r0, asr #3
9001c0f4:	00c0      	lsls	r0, r0, #3
9001c0f6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001c0fa:	b2bf      	uxth	r7, r7
9001c0fc:	b2c0      	uxtb	r0, r0
9001c0fe:	fb1a fa09 	smulbb	sl, sl, r9
9001c102:	fb10 f009 	smulbb	r0, r0, r9
9001c106:	fb01 a10e 	mla	r1, r1, lr, sl
9001c10a:	fb02 020e 	mla	r2, r2, lr, r0
9001c10e:	1c78      	adds	r0, r7, #1
9001c110:	b289      	uxth	r1, r1
9001c112:	b292      	uxth	r2, r2
9001c114:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001c118:	f101 0a01 	add.w	sl, r1, #1
9001c11c:	1c50      	adds	r0, r2, #1
9001c11e:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
9001c122:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001c126:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001c12a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c12e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001c132:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c136:	4307      	orrs	r7, r0
9001c138:	ea47 070a 	orr.w	r7, r7, sl
9001c13c:	f824 7b02 	strh.w	r7, [r4], #2
9001c140:	4667      	mov	r7, ip
9001c142:	e7b9      	b.n	9001c0b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
9001c144:	42a3      	cmp	r3, r4
9001c146:	d95f      	bls.n	9001c208 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001c148:	463a      	mov	r2, r7
9001c14a:	f812 1b02 	ldrb.w	r1, [r2], #2
9001c14e:	7878      	ldrb	r0, [r7, #1]
9001c150:	4617      	mov	r7, r2
9001c152:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
9001c156:	f824 1b02 	strh.w	r1, [r4], #2
9001c15a:	e7f3      	b.n	9001c144 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001c15c:	9901      	ldr	r1, [sp, #4]
9001c15e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001c162:	b2b2      	uxth	r2, r6
9001c164:	29ff      	cmp	r1, #255	@ 0xff
9001c166:	d044      	beq.n	9001c1f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001c168:	ea4f 2922 	mov.w	r9, r2, asr #8
9001c16c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001c170:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001c174:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
9001c178:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
9001c17c:	4608      	mov	r0, r1
9001c17e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001c182:	fb09 f901 	mul.w	r9, r9, r1
9001c186:	fb0e fe01 	mul.w	lr, lr, r1
9001c18a:	00d1      	lsls	r1, r2, #3
9001c18c:	b2c9      	uxtb	r1, r1
9001c18e:	4341      	muls	r1, r0
9001c190:	429c      	cmp	r4, r3
9001c192:	f4bf af61 	bcs.w	9001c058 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001c196:	8822      	ldrh	r2, [r4, #0]
9001c198:	1210      	asrs	r0, r2, #8
9001c19a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9001c19e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001c1a2:	00d2      	lsls	r2, r2, #3
9001c1a4:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001c1a8:	fb00 900a 	mla	r0, r0, sl, r9
9001c1ac:	b2d2      	uxtb	r2, r2
9001c1ae:	fb0c ec0a 	mla	ip, ip, sl, lr
9001c1b2:	b280      	uxth	r0, r0
9001c1b4:	fb02 120a 	mla	r2, r2, sl, r1
9001c1b8:	fa1f fc8c 	uxth.w	ip, ip
9001c1bc:	b292      	uxth	r2, r2
9001c1be:	f100 0b01 	add.w	fp, r0, #1
9001c1c2:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9001c1c6:	1c50      	adds	r0, r2, #1
9001c1c8:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001c1cc:	f10c 0201 	add.w	r2, ip, #1
9001c1d0:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
9001c1d4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001c1d8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001c1dc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001c1e0:	ea40 0b0b 	orr.w	fp, r0, fp
9001c1e4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9001c1e8:	ea4b 0b0c 	orr.w	fp, fp, ip
9001c1ec:	f824 bb02 	strh.w	fp, [r4], #2
9001c1f0:	e7ce      	b.n	9001c190 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
9001c1f2:	429c      	cmp	r4, r3
9001c1f4:	f4bf af30 	bcs.w	9001c058 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001c1f8:	f824 2b02 	strh.w	r2, [r4], #2
9001c1fc:	e7f9      	b.n	9001c1f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001c1fe:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001c202:	4657      	mov	r7, sl
9001c204:	464d      	mov	r5, r9
9001c206:	e727      	b.n	9001c058 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001c208:	2300      	movs	r3, #0
9001c20a:	e716      	b.n	9001c03a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
9001c20c:	44bb      	add	fp, r7
9001c20e:	4657      	mov	r7, sl
9001c210:	e724      	b.n	9001c05c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
9001c212:	bf00      	nop
9001c214:	2001aa40 	.word	0x2001aa40
9001c218:	2001aa38 	.word	0x2001aa38
9001c21c:	20000220 	.word	0x20000220
9001c220:	2a01      	cmp	r2, #1
9001c222:	d12a      	bne.n	9001c27a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
9001c224:	f3c6 0104 	ubfx	r1, r6, #0, #5
9001c228:	f003 0203 	and.w	r2, r3, #3
9001c22c:	f3c3 0081 	ubfx	r0, r3, #2, #2
9001c230:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001c234:	3902      	subs	r1, #2
9001c236:	3802      	subs	r0, #2
9001c238:	3b02      	subs	r3, #2
9001c23a:	4411      	add	r1, r2
9001c23c:	f001 011f 	and.w	r1, r1, #31
9001c240:	f361 0604 	bfi	r6, r1, #0, #5
9001c244:	eb00 1056 	add.w	r0, r0, r6, lsr #5
9001c248:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001c24c:	f360 164a 	bfi	r6, r0, #5, #6
9001c250:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001c254:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
9001c258:	f002 031f 	and.w	r3, r2, #31
9001c25c:	2203      	movs	r2, #3
9001c25e:	f363 26cf 	bfi	r6, r3, #11, #5
9001c262:	fb12 0303 	smlabb	r3, r2, r3, r0
9001c266:	2207      	movs	r2, #7
9001c268:	fb12 3301 	smlabb	r3, r2, r1, r3
9001c26c:	9a03      	ldr	r2, [sp, #12]
9001c26e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001c272:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001c276:	809e      	strh	r6, [r3, #4]
9001c278:	e701      	b.n	9001c07e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
9001c27a:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
9001c27e:	4647      	mov	r7, r8
9001c280:	45a8      	cmp	r8, r5
9001c282:	bfa8      	it	ge
9001c284:	462f      	movge	r7, r5
9001c286:	2a02      	cmp	r2, #2
9001c288:	d154      	bne.n	9001c334 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
9001c28a:	9b01      	ldr	r3, [sp, #4]
9001c28c:	2bff      	cmp	r3, #255	@ 0xff
9001c28e:	d01a      	beq.n	9001c2c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001c290:	eb0b 0307 	add.w	r3, fp, r7
9001c294:	2b40      	cmp	r3, #64	@ 0x40
9001c296:	dd16      	ble.n	9001c2c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001c298:	ea4f 094b 	mov.w	r9, fp, lsl #1
9001c29c:	9800      	ldr	r0, [sp, #0]
9001c29e:	4649      	mov	r1, r9
9001c2a0:	f7e4 ffc2 	bl	90001228 <_ZN8touchgfx5paint9flushLineEPmi>
9001c2a4:	465a      	mov	r2, fp
9001c2a6:	9b01      	ldr	r3, [sp, #4]
9001c2a8:	4620      	mov	r0, r4
9001c2aa:	9900      	ldr	r1, [sp, #0]
9001c2ac:	444c      	add	r4, r9
9001c2ae:	f7e4 fffb 	bl	900012a8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001c2b2:	9b00      	ldr	r3, [sp, #0]
9001c2b4:	f04f 0b00 	mov.w	fp, #0
9001c2b8:	461a      	mov	r2, r3
9001c2ba:	4b6a      	ldr	r3, [pc, #424]	@ (9001c464 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001c2bc:	429a      	cmp	r2, r3
9001c2be:	bf0c      	ite	eq
9001c2c0:	4b69      	ldreq	r3, [pc, #420]	@ (9001c468 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001c2c2:	4b68      	ldrne	r3, [pc, #416]	@ (9001c464 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001c2c4:	9300      	str	r3, [sp, #0]
9001c2c6:	4652      	mov	r2, sl
9001c2c8:	2100      	movs	r1, #0
9001c2ca:	42a9      	cmp	r1, r5
9001c2cc:	da2c      	bge.n	9001c328 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
9001c2ce:	4694      	mov	ip, r2
9001c2d0:	f04f 0903 	mov.w	r9, #3
9001c2d4:	42b9      	cmp	r1, r7
9001c2d6:	f81c 3b02 	ldrb.w	r3, [ip], #2
9001c2da:	7852      	ldrb	r2, [r2, #1]
9001c2dc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
9001c2e0:	f3c3 1045 	ubfx	r0, r3, #5, #6
9001c2e4:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
9001c2e8:	f003 021f 	and.w	r2, r3, #31
9001c2ec:	461e      	mov	r6, r3
9001c2ee:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001c2f2:	fb19 000e 	smlabb	r0, r9, lr, r0
9001c2f6:	f04f 0e07 	mov.w	lr, #7
9001c2fa:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001c2fe:	9a03      	ldr	r2, [sp, #12]
9001c300:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001c304:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001c308:	8083      	strh	r3, [r0, #4]
9001c30a:	da0a      	bge.n	9001c322 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
9001c30c:	9a01      	ldr	r2, [sp, #4]
9001c30e:	2aff      	cmp	r2, #255	@ 0xff
9001c310:	bf13      	iteet	ne
9001c312:	9a00      	ldrne	r2, [sp, #0]
9001c314:	8023      	strheq	r3, [r4, #0]
9001c316:	3402      	addeq	r4, #2
9001c318:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
9001c31c:	bf18      	it	ne
9001c31e:	f10b 0b01 	addne.w	fp, fp, #1
9001c322:	3101      	adds	r1, #1
9001c324:	4662      	mov	r2, ip
9001c326:	e7d0      	b.n	9001c2ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
9001c328:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
9001c32c:	eba8 0807 	sub.w	r8, r8, r7
9001c330:	1bed      	subs	r5, r5, r7
9001c332:	e76c      	b.n	9001c20e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001c334:	9b01      	ldr	r3, [sp, #4]
9001c336:	eba8 0807 	sub.w	r8, r8, r7
9001c33a:	1bed      	subs	r5, r5, r7
9001c33c:	fa1f f986 	uxth.w	r9, r6
9001c340:	2bff      	cmp	r3, #255	@ 0xff
9001c342:	d027      	beq.n	9001c394 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
9001c344:	eb0b 0307 	add.w	r3, fp, r7
9001c348:	2b40      	cmp	r3, #64	@ 0x40
9001c34a:	dd18      	ble.n	9001c37e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
9001c34c:	ea4f 034b 	mov.w	r3, fp, lsl #1
9001c350:	9800      	ldr	r0, [sp, #0]
9001c352:	4619      	mov	r1, r3
9001c354:	930c      	str	r3, [sp, #48]	@ 0x30
9001c356:	f7e4 ff67 	bl	90001228 <_ZN8touchgfx5paint9flushLineEPmi>
9001c35a:	465a      	mov	r2, fp
9001c35c:	9b01      	ldr	r3, [sp, #4]
9001c35e:	4620      	mov	r0, r4
9001c360:	9900      	ldr	r1, [sp, #0]
9001c362:	f04f 0b00 	mov.w	fp, #0
9001c366:	f7e4 ff9f 	bl	900012a8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001c36a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001c36c:	441c      	add	r4, r3
9001c36e:	9b00      	ldr	r3, [sp, #0]
9001c370:	461a      	mov	r2, r3
9001c372:	4b3c      	ldr	r3, [pc, #240]	@ (9001c464 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001c374:	429a      	cmp	r2, r3
9001c376:	bf0c      	ite	eq
9001c378:	4b3b      	ldreq	r3, [pc, #236]	@ (9001c468 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001c37a:	4b3a      	ldrne	r3, [pc, #232]	@ (9001c464 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001c37c:	9300      	str	r3, [sp, #0]
9001c37e:	9b00      	ldr	r3, [sp, #0]
9001c380:	eb03 024b 	add.w	r2, r3, fp, lsl #1
9001c384:	463b      	mov	r3, r7
9001c386:	2b00      	cmp	r3, #0
9001c388:	f43f af40 	beq.w	9001c20c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
9001c38c:	f822 9b02 	strh.w	r9, [r2], #2
9001c390:	3b01      	subs	r3, #1
9001c392:	e7f8      	b.n	9001c386 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
9001c394:	eb04 0747 	add.w	r7, r4, r7, lsl #1
9001c398:	42a7      	cmp	r7, r4
9001c39a:	f67f af38 	bls.w	9001c20e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001c39e:	f824 9b02 	strh.w	r9, [r4], #2
9001c3a2:	e7f9      	b.n	9001c398 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
9001c3a4:	f1bb 0f00 	cmp.w	fp, #0
9001c3a8:	d00c      	beq.n	9001c3c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
9001c3aa:	ea4f 084b 	mov.w	r8, fp, lsl #1
9001c3ae:	9800      	ldr	r0, [sp, #0]
9001c3b0:	4641      	mov	r1, r8
9001c3b2:	f7e4 ff39 	bl	90001228 <_ZN8touchgfx5paint9flushLineEPmi>
9001c3b6:	4620      	mov	r0, r4
9001c3b8:	4444      	add	r4, r8
9001c3ba:	9b01      	ldr	r3, [sp, #4]
9001c3bc:	465a      	mov	r2, fp
9001c3be:	9900      	ldr	r1, [sp, #0]
9001c3c0:	f7e4 ff72 	bl	900012a8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001c3c4:	4b29      	ldr	r3, [pc, #164]	@ (9001c46c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
9001c3c6:	9a02      	ldr	r2, [sp, #8]
9001c3c8:	881b      	ldrh	r3, [r3, #0]
9001c3ca:	1a9b      	subs	r3, r3, r2
9001c3cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c3d0:	9b06      	ldr	r3, [sp, #24]
9001c3d2:	3301      	adds	r3, #1
9001c3d4:	9306      	str	r3, [sp, #24]
9001c3d6:	9a06      	ldr	r2, [sp, #24]
9001c3d8:	9b04      	ldr	r3, [sp, #16]
9001c3da:	4293      	cmp	r3, r2
9001c3dc:	d120      	bne.n	9001c420 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
9001c3de:	9b05      	ldr	r3, [sp, #20]
9001c3e0:	2100      	movs	r1, #0
9001c3e2:	9a05      	ldr	r2, [sp, #20]
9001c3e4:	f04f 0600 	mov.w	r6, #0
9001c3e8:	f103 0801 	add.w	r8, r3, #1
9001c3ec:	9b08      	ldr	r3, [sp, #32]
9001c3ee:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
9001c3f2:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001c3f6:	2280      	movs	r2, #128	@ 0x80
9001c3f8:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9001c3fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001c3fe:	ba3f      	rev	r7, r7
9001c400:	eba9 0905 	sub.w	r9, r9, r5
9001c404:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001c406:	441f      	add	r7, r3
9001c408:	f00c fa2d 	bl	90028866 <memset>
9001c40c:	fa1f f989 	uxth.w	r9, r9
9001c410:	2300      	movs	r3, #0
9001c412:	f8cd 8014 	str.w	r8, [sp, #20]
9001c416:	9306      	str	r3, [sp, #24]
9001c418:	f7e4 fefc 	bl	90001214 <_ZN8touchgfx5paint8tearDownEv>
9001c41c:	46ba      	mov	sl, r7
9001c41e:	e58b      	b.n	9001bf38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
9001c420:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
9001c424:	9b02      	ldr	r3, [sp, #8]
9001c426:	eba9 0903 	sub.w	r9, r9, r3
9001c42a:	eba9 0505 	sub.w	r5, r9, r5
9001c42e:	fa1f f985 	uxth.w	r9, r5
9001c432:	e7f1      	b.n	9001c418 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
9001c434:	4b0e      	ldr	r3, [pc, #56]	@ (9001c470 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
9001c436:	6818      	ldr	r0, [r3, #0]
9001c438:	6803      	ldr	r3, [r0, #0]
9001c43a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001c43c:	4798      	blx	r3
9001c43e:	b013      	add	sp, #76	@ 0x4c
9001c440:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c444:	9b02      	ldr	r3, [sp, #8]
9001c446:	9a02      	ldr	r2, [sp, #8]
9001c448:	42ab      	cmp	r3, r5
9001c44a:	bfa8      	it	ge
9001c44c:	462b      	movge	r3, r5
9001c44e:	eba2 0803 	sub.w	r8, r2, r3
9001c452:	1aed      	subs	r5, r5, r3
9001c454:	e627      	b.n	9001c0a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
9001c456:	f108 38ff 	add.w	r8, r8, #4294967295
9001c45a:	fa1f f986 	uxth.w	r9, r6
9001c45e:	2500      	movs	r5, #0
9001c460:	2701      	movs	r7, #1
9001c462:	e76f      	b.n	9001c344 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
9001c464:	20000220 	.word	0x20000220
9001c468:	20000320 	.word	0x20000320
9001c46c:	2001aa38 	.word	0x2001aa38
9001c470:	2001aa40 	.word	0x2001aa40

9001c474 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001c474:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c478:	b08f      	sub	sp, #60	@ 0x3c
9001c47a:	461c      	mov	r4, r3
9001c47c:	460f      	mov	r7, r1
9001c47e:	9203      	str	r2, [sp, #12]
9001c480:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001c484:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001c486:	9202      	str	r2, [sp, #8]
9001c488:	2a00      	cmp	r2, #0
9001c48a:	f000 8128 	beq.w	9001c6de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001c48e:	6820      	ldr	r0, [r4, #0]
9001c490:	aa0a      	add	r2, sp, #40	@ 0x28
9001c492:	6861      	ldr	r1, [r4, #4]
9001c494:	c203      	stmia	r2!, {r0, r1}
9001c496:	6818      	ldr	r0, [r3, #0]
9001c498:	aa0c      	add	r2, sp, #48	@ 0x30
9001c49a:	6859      	ldr	r1, [r3, #4]
9001c49c:	c203      	stmia	r2!, {r0, r1}
9001c49e:	a80a      	add	r0, sp, #40	@ 0x28
9001c4a0:	f7f8 fc5e 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c4a4:	4621      	mov	r1, r4
9001c4a6:	a80c      	add	r0, sp, #48	@ 0x30
9001c4a8:	f7f8 fc82 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c4ac:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001c4b0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001c4b4:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001c4b8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001c4bc:	bfdb      	ittet	le
9001c4be:	b2b3      	uxthle	r3, r6
9001c4c0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001c4c4:	2301      	movgt	r3, #1
9001c4c6:	fb92 f3f3 	sdivle	r3, r2, r3
9001c4ca:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001c4ce:	441d      	add	r5, r3
9001c4d0:	fb92 f1f3 	sdiv	r1, r2, r3
9001c4d4:	fa1f fc81 	uxth.w	ip, r1
9001c4d8:	3d01      	subs	r5, #1
9001c4da:	fb0c 2413 	mls	r4, ip, r3, r2
9001c4de:	4661      	mov	r1, ip
9001c4e0:	fb14 f406 	smulbb	r4, r4, r6
9001c4e4:	4404      	add	r4, r0
9001c4e6:	fb95 f5f3 	sdiv	r5, r5, r3
9001c4ea:	b2a4      	uxth	r4, r4
9001c4ec:	b121      	cbz	r1, 9001c4f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001c4ee:	9b03      	ldr	r3, [sp, #12]
9001c4f0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001c4f4:	ba1b      	rev	r3, r3
9001c4f6:	441f      	add	r7, r3
9001c4f8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001c4fc:	b2ad      	uxth	r5, r5
9001c4fe:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9001c502:	4418      	add	r0, r3
9001c504:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001c508:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001c50c:	00ad      	lsls	r5, r5, #2
9001c50e:	441a      	add	r2, r3
9001c510:	4b74      	ldr	r3, [pc, #464]	@ (9001c6e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001c512:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001c516:	6818      	ldr	r0, [r3, #0]
9001c518:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001c51c:	6803      	ldr	r3, [r0, #0]
9001c51e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001c520:	4798      	blx	r3
9001c522:	4a71      	ldr	r2, [pc, #452]	@ (9001c6e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001c524:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9001c528:	2c00      	cmp	r4, #0
9001c52a:	8813      	ldrh	r3, [r2, #0]
9001c52c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001c530:	bf0c      	ite	eq
9001c532:	46c8      	moveq	r8, r9
9001c534:	f04f 0800 	movne.w	r8, #0
9001c538:	9209      	str	r2, [sp, #36]	@ 0x24
9001c53a:	fb03 c101 	mla	r1, r3, r1, ip
9001c53e:	4373      	muls	r3, r6
9001c540:	fa1f f888 	uxth.w	r8, r8
9001c544:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001c548:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001c54c:	9304      	str	r3, [sp, #16]
9001c54e:	1d2b      	adds	r3, r5, #4
9001c550:	9305      	str	r3, [sp, #20]
9001c552:	2300      	movs	r3, #0
9001c554:	9301      	str	r3, [sp, #4]
9001c556:	9a04      	ldr	r2, [sp, #16]
9001c558:	4282      	cmp	r2, r0
9001c55a:	f240 80bb 	bls.w	9001c6d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001c55e:	b95b      	cbnz	r3, 9001c578 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001c560:	783a      	ldrb	r2, [r7, #0]
9001c562:	0993      	lsrs	r3, r2, #6
9001c564:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001c568:	9201      	str	r2, [sp, #4]
9001c56a:	1e5a      	subs	r2, r3, #1
9001c56c:	2a02      	cmp	r2, #2
9001c56e:	bf8d      	iteet	hi
9001c570:	787b      	ldrbhi	r3, [r7, #1]
9001c572:	3701      	addls	r7, #1
9001c574:	b29b      	uxthls	r3, r3
9001c576:	3702      	addhi	r7, #2
9001c578:	b184      	cbz	r4, 9001c59c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001c57a:	429c      	cmp	r4, r3
9001c57c:	bf91      	iteee	ls
9001c57e:	1b1c      	subls	r4, r3, r4
9001c580:	1ae4      	subhi	r4, r4, r3
9001c582:	46c4      	movhi	ip, r8
9001c584:	f04f 0a00 	movhi.w	sl, #0
9001c588:	bf9b      	ittet	ls
9001c58a:	fa1f fa84 	uxthls.w	sl, r4
9001c58e:	2400      	movls	r4, #0
9001c590:	b2a4      	uxthhi	r4, r4
9001c592:	fa1f fc89 	uxthls.w	ip, r9
9001c596:	4653      	mov	r3, sl
9001c598:	46e0      	mov	r8, ip
9001c59a:	e7dc      	b.n	9001c556 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001c59c:	2204      	movs	r2, #4
9001c59e:	9905      	ldr	r1, [sp, #20]
9001c5a0:	4543      	cmp	r3, r8
9001c5a2:	4615      	mov	r5, r2
9001c5a4:	9a01      	ldr	r2, [sp, #4]
9001c5a6:	bf24      	itt	cs
9001c5a8:	eba3 0a08 	subcs.w	sl, r3, r8
9001c5ac:	46c6      	movcs	lr, r8
9001c5ae:	fb15 1202 	smlabb	r2, r5, r2, r1
9001c5b2:	9903      	ldr	r1, [sp, #12]
9001c5b4:	bf3c      	itt	cc
9001c5b6:	eba8 0c03 	subcc.w	ip, r8, r3
9001c5ba:	469e      	movcc	lr, r3
9001c5bc:	588a      	ldr	r2, [r1, r2]
9001c5be:	bf26      	itte	cs
9001c5c0:	fa1f fa8a 	uxthcs.w	sl, sl
9001c5c4:	46a4      	movcs	ip, r4
9001c5c6:	fa1f fc8c 	uxthcc.w	ip, ip
9001c5ca:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001c5ce:	bf38      	it	cc
9001c5d0:	46a2      	movcc	sl, r4
9001c5d2:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001c5d6:	2900      	cmp	r1, #0
9001c5d8:	d066      	beq.n	9001c6a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001c5da:	29ff      	cmp	r1, #255	@ 0xff
9001c5dc:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001c5e0:	d114      	bne.n	9001c60c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001c5e2:	9d02      	ldr	r5, [sp, #8]
9001c5e4:	2dff      	cmp	r5, #255	@ 0xff
9001c5e6:	d111      	bne.n	9001c60c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001c5e8:	0951      	lsrs	r1, r2, #5
9001c5ea:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001c5ee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001c5f2:	4486      	add	lr, r0
9001c5f4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001c5f8:	f026 0607 	bic.w	r6, r6, #7
9001c5fc:	430e      	orrs	r6, r1
9001c5fe:	4316      	orrs	r6, r2
9001c600:	b2b6      	uxth	r6, r6
9001c602:	4586      	cmp	lr, r0
9001c604:	d051      	beq.n	9001c6aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001c606:	f820 6b02 	strh.w	r6, [r0], #2
9001c60a:	e7fa      	b.n	9001c602 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001c60c:	9d02      	ldr	r5, [sp, #8]
9001c60e:	b2f6      	uxtb	r6, r6
9001c610:	4486      	add	lr, r0
9001c612:	4369      	muls	r1, r5
9001c614:	1c4d      	adds	r5, r1, #1
9001c616:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001c61a:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001c61e:	b2d2      	uxtb	r2, r2
9001c620:	122d      	asrs	r5, r5, #8
9001c622:	ea6f 0b05 	mvn.w	fp, r5
9001c626:	b2ad      	uxth	r5, r5
9001c628:	fb11 f105 	smulbb	r1, r1, r5
9001c62c:	fa5f fb8b 	uxtb.w	fp, fp
9001c630:	fb16 f605 	smulbb	r6, r6, r5
9001c634:	fb12 f205 	smulbb	r2, r2, r5
9001c638:	b289      	uxth	r1, r1
9001c63a:	b2b6      	uxth	r6, r6
9001c63c:	b292      	uxth	r2, r2
9001c63e:	9106      	str	r1, [sp, #24]
9001c640:	9607      	str	r6, [sp, #28]
9001c642:	9208      	str	r2, [sp, #32]
9001c644:	4586      	cmp	lr, r0
9001c646:	d030      	beq.n	9001c6aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001c648:	8802      	ldrh	r2, [r0, #0]
9001c64a:	9906      	ldr	r1, [sp, #24]
9001c64c:	1216      	asrs	r6, r2, #8
9001c64e:	10d5      	asrs	r5, r2, #3
9001c650:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001c654:	00d2      	lsls	r2, r2, #3
9001c656:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001c65a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001c65e:	b2d2      	uxtb	r2, r2
9001c660:	fb06 160b 	mla	r6, r6, fp, r1
9001c664:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001c668:	9907      	ldr	r1, [sp, #28]
9001c66a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001c66e:	b2b6      	uxth	r6, r6
9001c670:	fb05 150b 	mla	r5, r5, fp, r1
9001c674:	9908      	ldr	r1, [sp, #32]
9001c676:	fb02 120b 	mla	r2, r2, fp, r1
9001c67a:	1c71      	adds	r1, r6, #1
9001c67c:	b2ad      	uxth	r5, r5
9001c67e:	b292      	uxth	r2, r2
9001c680:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001c684:	1c51      	adds	r1, r2, #1
9001c686:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001c68a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001c68e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001c692:	4316      	orrs	r6, r2
9001c694:	1c6a      	adds	r2, r5, #1
9001c696:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001c69a:	096d      	lsrs	r5, r5, #5
9001c69c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001c6a0:	432e      	orrs	r6, r5
9001c6a2:	f820 6b02 	strh.w	r6, [r0], #2
9001c6a6:	e7cd      	b.n	9001c644 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001c6a8:	4470      	add	r0, lr
9001c6aa:	4543      	cmp	r3, r8
9001c6ac:	f4ff af73 	bcc.w	9001c596 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001c6b0:	fa1f fc89 	uxth.w	ip, r9
9001c6b4:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001c6b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001c6ba:	eba4 040c 	sub.w	r4, r4, ip
9001c6be:	881b      	ldrh	r3, [r3, #0]
9001c6c0:	b2a4      	uxth	r4, r4
9001c6c2:	eba3 0309 	sub.w	r3, r3, r9
9001c6c6:	2c00      	cmp	r4, #0
9001c6c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c6cc:	bf18      	it	ne
9001c6ce:	f04f 0c00 	movne.w	ip, #0
9001c6d2:	e760      	b.n	9001c596 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001c6d4:	4b03      	ldr	r3, [pc, #12]	@ (9001c6e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001c6d6:	6818      	ldr	r0, [r3, #0]
9001c6d8:	6803      	ldr	r3, [r0, #0]
9001c6da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001c6dc:	4798      	blx	r3
9001c6de:	b00f      	add	sp, #60	@ 0x3c
9001c6e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c6e4:	2001aa40 	.word	0x2001aa40
9001c6e8:	2001aa38 	.word	0x2001aa38

9001c6ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001c6ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c6f0:	b093      	sub	sp, #76	@ 0x4c
9001c6f2:	461c      	mov	r4, r3
9001c6f4:	9205      	str	r2, [sp, #20]
9001c6f6:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
9001c6fa:	9101      	str	r1, [sp, #4]
9001c6fc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001c6fe:	9202      	str	r2, [sp, #8]
9001c700:	2a00      	cmp	r2, #0
9001c702:	f000 812e 	beq.w	9001c962 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001c706:	6820      	ldr	r0, [r4, #0]
9001c708:	aa0e      	add	r2, sp, #56	@ 0x38
9001c70a:	6861      	ldr	r1, [r4, #4]
9001c70c:	c203      	stmia	r2!, {r0, r1}
9001c70e:	6818      	ldr	r0, [r3, #0]
9001c710:	aa10      	add	r2, sp, #64	@ 0x40
9001c712:	6859      	ldr	r1, [r3, #4]
9001c714:	c203      	stmia	r2!, {r0, r1}
9001c716:	a80e      	add	r0, sp, #56	@ 0x38
9001c718:	f7f8 fb22 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c71c:	4621      	mov	r1, r4
9001c71e:	a810      	add	r0, sp, #64	@ 0x40
9001c720:	f7f8 fb46 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c724:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001c728:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
9001c72c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001c730:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
9001c734:	bfdb      	ittet	le
9001c736:	b2b3      	uxthle	r3, r6
9001c738:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001c73c:	2301      	movgt	r3, #1
9001c73e:	fb92 f3f3 	sdivle	r3, r2, r3
9001c742:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001c746:	441d      	add	r5, r3
9001c748:	fb92 f1f3 	sdiv	r1, r2, r3
9001c74c:	fa1f fc81 	uxth.w	ip, r1
9001c750:	3d01      	subs	r5, #1
9001c752:	fb0c 2413 	mls	r4, ip, r3, r2
9001c756:	4661      	mov	r1, ip
9001c758:	fb14 f406 	smulbb	r4, r4, r6
9001c75c:	4404      	add	r4, r0
9001c75e:	fb95 f5f3 	sdiv	r5, r5, r3
9001c762:	b2a4      	uxth	r4, r4
9001c764:	b131      	cbz	r1, 9001c774 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001c766:	9b05      	ldr	r3, [sp, #20]
9001c768:	9901      	ldr	r1, [sp, #4]
9001c76a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001c76e:	ba1b      	rev	r3, r3
9001c770:	4419      	add	r1, r3
9001c772:	9101      	str	r1, [sp, #4]
9001c774:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001c778:	b2ad      	uxth	r5, r5
9001c77a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9001c77e:	4418      	add	r0, r3
9001c780:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
9001c784:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
9001c788:	00ad      	lsls	r5, r5, #2
9001c78a:	441a      	add	r2, r3
9001c78c:	4b76      	ldr	r3, [pc, #472]	@ (9001c968 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001c78e:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
9001c792:	6818      	ldr	r0, [r3, #0]
9001c794:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
9001c798:	6803      	ldr	r3, [r0, #0]
9001c79a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001c79c:	4798      	blx	r3
9001c79e:	4973      	ldr	r1, [pc, #460]	@ (9001c96c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001c7a0:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
9001c7a4:	2c00      	cmp	r4, #0
9001c7a6:	880b      	ldrh	r3, [r1, #0]
9001c7a8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001c7ac:	910d      	str	r1, [sp, #52]	@ 0x34
9001c7ae:	fb03 c202 	mla	r2, r3, r2, ip
9001c7b2:	bf08      	it	eq
9001c7b4:	46dc      	moveq	ip, fp
9001c7b6:	fb03 f306 	mul.w	r3, r3, r6
9001c7ba:	bf18      	it	ne
9001c7bc:	f04f 0c00 	movne.w	ip, #0
9001c7c0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c7c4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001c7c8:	fa1f fc8c 	uxth.w	ip, ip
9001c7cc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001c7d0:	9106      	str	r1, [sp, #24]
9001c7d2:	9308      	str	r3, [sp, #32]
9001c7d4:	1d2b      	adds	r3, r5, #4
9001c7d6:	9309      	str	r3, [sp, #36]	@ 0x24
9001c7d8:	9b02      	ldr	r3, [sp, #8]
9001c7da:	43da      	mvns	r2, r3
9001c7dc:	2300      	movs	r3, #0
9001c7de:	b2d2      	uxtb	r2, r2
9001c7e0:	9303      	str	r3, [sp, #12]
9001c7e2:	9207      	str	r2, [sp, #28]
9001c7e4:	9a08      	ldr	r2, [sp, #32]
9001c7e6:	4282      	cmp	r2, r0
9001c7e8:	f240 80b6 	bls.w	9001c958 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001c7ec:	b963      	cbnz	r3, 9001c808 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001c7ee:	9b01      	ldr	r3, [sp, #4]
9001c7f0:	781a      	ldrb	r2, [r3, #0]
9001c7f2:	0993      	lsrs	r3, r2, #6
9001c7f4:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001c7f8:	9203      	str	r2, [sp, #12]
9001c7fa:	1e5a      	subs	r2, r3, #1
9001c7fc:	2a02      	cmp	r2, #2
9001c7fe:	d815      	bhi.n	9001c82c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001c800:	9a01      	ldr	r2, [sp, #4]
9001c802:	b29b      	uxth	r3, r3
9001c804:	3201      	adds	r2, #1
9001c806:	9201      	str	r2, [sp, #4]
9001c808:	b1b4      	cbz	r4, 9001c838 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001c80a:	429c      	cmp	r4, r3
9001c80c:	bf91      	iteee	ls
9001c80e:	1b1c      	subls	r4, r3, r4
9001c810:	1ae4      	subhi	r4, r4, r3
9001c812:	4666      	movhi	r6, ip
9001c814:	f04f 0800 	movhi.w	r8, #0
9001c818:	bf9b      	ittet	ls
9001c81a:	fa1f f884 	uxthls.w	r8, r4
9001c81e:	2400      	movls	r4, #0
9001c820:	b2a4      	uxthhi	r4, r4
9001c822:	fa1f f68b 	uxthls.w	r6, fp
9001c826:	4643      	mov	r3, r8
9001c828:	46b4      	mov	ip, r6
9001c82a:	e7db      	b.n	9001c7e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001c82c:	9a01      	ldr	r2, [sp, #4]
9001c82e:	9b01      	ldr	r3, [sp, #4]
9001c830:	3202      	adds	r2, #2
9001c832:	785b      	ldrb	r3, [r3, #1]
9001c834:	9201      	str	r2, [sp, #4]
9001c836:	e7e7      	b.n	9001c808 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001c838:	2203      	movs	r2, #3
9001c83a:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001c83c:	4563      	cmp	r3, ip
9001c83e:	4615      	mov	r5, r2
9001c840:	9a03      	ldr	r2, [sp, #12]
9001c842:	bf2c      	ite	cs
9001c844:	eba3 080c 	subcs.w	r8, r3, ip
9001c848:	ebac 0603 	subcc.w	r6, ip, r3
9001c84c:	fb15 1202 	smlabb	r2, r5, r2, r1
9001c850:	9905      	ldr	r1, [sp, #20]
9001c852:	bf24      	itt	cs
9001c854:	fa1f f888 	uxthcs.w	r8, r8
9001c858:	46e1      	movcs	r9, ip
9001c85a:	eb01 0502 	add.w	r5, r1, r2
9001c85e:	9902      	ldr	r1, [sp, #8]
9001c860:	bf2f      	iteee	cs
9001c862:	4626      	movcs	r6, r4
9001c864:	b2b6      	uxthcc	r6, r6
9001c866:	4699      	movcc	r9, r3
9001c868:	46a0      	movcc	r8, r4
9001c86a:	29ff      	cmp	r1, #255	@ 0xff
9001c86c:	d04a      	beq.n	9001c904 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001c86e:	9f06      	ldr	r7, [sp, #24]
9001c870:	46ca      	mov	sl, r9
9001c872:	78a9      	ldrb	r1, [r5, #2]
9001c874:	9004      	str	r0, [sp, #16]
9001c876:	4379      	muls	r1, r7
9001c878:	910a      	str	r1, [sp, #40]	@ 0x28
9001c87a:	7869      	ldrb	r1, [r5, #1]
9001c87c:	4379      	muls	r1, r7
9001c87e:	910b      	str	r1, [sp, #44]	@ 0x2c
9001c880:	9905      	ldr	r1, [sp, #20]
9001c882:	5c8a      	ldrb	r2, [r1, r2]
9001c884:	437a      	muls	r2, r7
9001c886:	920c      	str	r2, [sp, #48]	@ 0x30
9001c888:	f1ba 0f00 	cmp.w	sl, #0
9001c88c:	d03d      	beq.n	9001c90a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001c88e:	9a04      	ldr	r2, [sp, #16]
9001c890:	f10a 3aff 	add.w	sl, sl, #4294967295
9001c894:	9f07      	ldr	r7, [sp, #28]
9001c896:	8812      	ldrh	r2, [r2, #0]
9001c898:	fa1f fa8a 	uxth.w	sl, sl
9001c89c:	46be      	mov	lr, r7
9001c89e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9001c8a0:	1215      	asrs	r5, r2, #8
9001c8a2:	10d1      	asrs	r1, r2, #3
9001c8a4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001c8a8:	00d2      	lsls	r2, r2, #3
9001c8aa:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001c8ae:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001c8b2:	b2d2      	uxtb	r2, r2
9001c8b4:	fb05 750e 	mla	r5, r5, lr, r7
9001c8b8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001c8bc:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9001c8be:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001c8c2:	b2ad      	uxth	r5, r5
9001c8c4:	fb01 710e 	mla	r1, r1, lr, r7
9001c8c8:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001c8ca:	fb02 720e 	mla	r2, r2, lr, r7
9001c8ce:	f105 0e01 	add.w	lr, r5, #1
9001c8d2:	b289      	uxth	r1, r1
9001c8d4:	b292      	uxth	r2, r2
9001c8d6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001c8da:	f102 0e01 	add.w	lr, r2, #1
9001c8de:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001c8e2:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001c8e6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001c8ea:	4315      	orrs	r5, r2
9001c8ec:	1c4a      	adds	r2, r1, #1
9001c8ee:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001c8f2:	9a04      	ldr	r2, [sp, #16]
9001c8f4:	0949      	lsrs	r1, r1, #5
9001c8f6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001c8fa:	430d      	orrs	r5, r1
9001c8fc:	f822 5b02 	strh.w	r5, [r2], #2
9001c900:	9204      	str	r2, [sp, #16]
9001c902:	e7c1      	b.n	9001c888 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001c904:	4649      	mov	r1, r9
9001c906:	4686      	mov	lr, r0
9001c908:	b999      	cbnz	r1, 9001c932 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001c90a:	4563      	cmp	r3, ip
9001c90c:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001c910:	d389      	bcc.n	9001c826 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001c912:	fa1f f68b 	uxth.w	r6, fp
9001c916:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
9001c91a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001c91c:	1ba4      	subs	r4, r4, r6
9001c91e:	881b      	ldrh	r3, [r3, #0]
9001c920:	b2a4      	uxth	r4, r4
9001c922:	eba3 030b 	sub.w	r3, r3, fp
9001c926:	2c00      	cmp	r4, #0
9001c928:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c92c:	bf18      	it	ne
9001c92e:	2600      	movne	r6, #0
9001c930:	e779      	b.n	9001c826 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001c932:	78aa      	ldrb	r2, [r5, #2]
9001c934:	3901      	subs	r1, #1
9001c936:	4f0e      	ldr	r7, [pc, #56]	@ (9001c970 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001c938:	b289      	uxth	r1, r1
9001c93a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001c93e:	786a      	ldrb	r2, [r5, #1]
9001c940:	00d2      	lsls	r2, r2, #3
9001c942:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c946:	ea4a 0202 	orr.w	r2, sl, r2
9001c94a:	f895 a000 	ldrb.w	sl, [r5]
9001c94e:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001c952:	f82e 2b02 	strh.w	r2, [lr], #2
9001c956:	e7d7      	b.n	9001c908 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001c958:	4b03      	ldr	r3, [pc, #12]	@ (9001c968 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001c95a:	6818      	ldr	r0, [r3, #0]
9001c95c:	6803      	ldr	r3, [r0, #0]
9001c95e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001c960:	4798      	blx	r3
9001c962:	b013      	add	sp, #76	@ 0x4c
9001c964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c968:	2001aa40 	.word	0x2001aa40
9001c96c:	2001aa38 	.word	0x2001aa38
9001c970:	fffff800 	.word	0xfffff800

9001c974 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001c974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c978:	b09d      	sub	sp, #116	@ 0x74
9001c97a:	461c      	mov	r4, r3
9001c97c:	4683      	mov	fp, r0
9001c97e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001c980:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
9001c984:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
9001c988:	920e      	str	r2, [sp, #56]	@ 0x38
9001c98a:	2a00      	cmp	r2, #0
9001c98c:	f000 81e4 	beq.w	9001cd58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001c990:	6820      	ldr	r0, [r4, #0]
9001c992:	aa18      	add	r2, sp, #96	@ 0x60
9001c994:	6861      	ldr	r1, [r4, #4]
9001c996:	c203      	stmia	r2!, {r0, r1}
9001c998:	6818      	ldr	r0, [r3, #0]
9001c99a:	aa1a      	add	r2, sp, #104	@ 0x68
9001c99c:	6859      	ldr	r1, [r3, #4]
9001c99e:	c203      	stmia	r2!, {r0, r1}
9001c9a0:	a818      	add	r0, sp, #96	@ 0x60
9001c9a2:	f7f8 f9dd 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c9a6:	4621      	mov	r1, r4
9001c9a8:	a81a      	add	r0, sp, #104	@ 0x68
9001c9aa:	f7f8 fa01 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c9ae:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
9001c9b2:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
9001c9b6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001c9ba:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001c9be:	bfdb      	ittet	le
9001c9c0:	b29a      	uxthle	r2, r3
9001c9c2:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001c9c6:	2201      	movgt	r2, #1
9001c9c8:	fb91 f2f2 	sdivle	r2, r1, r2
9001c9cc:	9202      	str	r2, [sp, #8]
9001c9ce:	9802      	ldr	r0, [sp, #8]
9001c9d0:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
9001c9d4:	9902      	ldr	r1, [sp, #8]
9001c9d6:	fb92 f0f0 	sdiv	r0, r2, r0
9001c9da:	b280      	uxth	r0, r0
9001c9dc:	440c      	add	r4, r1
9001c9de:	900f      	str	r0, [sp, #60]	@ 0x3c
9001c9e0:	3c01      	subs	r4, #1
9001c9e2:	9802      	ldr	r0, [sp, #8]
9001c9e4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9001c9e6:	fb05 2510 	mls	r5, r5, r0, r2
9001c9ea:	fb94 f4f1 	sdiv	r4, r4, r1
9001c9ee:	fb15 f503 	smulbb	r5, r5, r3
9001c9f2:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
9001c9f6:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
9001c9fa:	3401      	adds	r4, #1
9001c9fc:	440d      	add	r5, r1
9001c9fe:	4419      	add	r1, r3
9001ca00:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
9001ca04:	b2a4      	uxth	r4, r4
9001ca06:	441a      	add	r2, r3
9001ca08:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001ca0c:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
9001ca10:	00a4      	lsls	r4, r4, #2
9001ca12:	9306      	str	r3, [sp, #24]
9001ca14:	b2ad      	uxth	r5, r5
9001ca16:	4bb3      	ldr	r3, [pc, #716]	@ (9001cce4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001ca18:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
9001ca1c:	6818      	ldr	r0, [r3, #0]
9001ca1e:	6803      	ldr	r3, [r0, #0]
9001ca20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ca22:	4798      	blx	r3
9001ca24:	4bb0      	ldr	r3, [pc, #704]	@ (9001cce8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001ca26:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
9001ca2a:	2d00      	cmp	r5, #0
9001ca2c:	881a      	ldrh	r2, [r3, #0]
9001ca2e:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
9001ca32:	fb02 f606 	mul.w	r6, r2, r6
9001ca36:	fb02 7101 	mla	r1, r2, r1, r7
9001ca3a:	9316      	str	r3, [sp, #88]	@ 0x58
9001ca3c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001ca40:	4baa      	ldr	r3, [pc, #680]	@ (9001ccec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001ca42:	bf18      	it	ne
9001ca44:	2100      	movne	r1, #0
9001ca46:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001ca4a:	eba3 030b 	sub.w	r3, r3, fp
9001ca4e:	920a      	str	r2, [sp, #40]	@ 0x28
9001ca50:	f104 0204 	add.w	r2, r4, #4
9001ca54:	9317      	str	r3, [sp, #92]	@ 0x5c
9001ca56:	9213      	str	r2, [sp, #76]	@ 0x4c
9001ca58:	9a06      	ldr	r2, [sp, #24]
9001ca5a:	bf08      	it	eq
9001ca5c:	4611      	moveq	r1, r2
9001ca5e:	2200      	movs	r2, #0
9001ca60:	b289      	uxth	r1, r1
9001ca62:	920d      	str	r2, [sp, #52]	@ 0x34
9001ca64:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001ca66:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001ca68:	fa12 f383 	uxtah	r3, r2, r3
9001ca6c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ca6e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001ca72:	3304      	adds	r3, #4
9001ca74:	9308      	str	r3, [sp, #32]
9001ca76:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001ca78:	4543      	cmp	r3, r8
9001ca7a:	f240 8168 	bls.w	9001cd4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001ca7e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
9001ca82:	f04f 0e01 	mov.w	lr, #1
9001ca86:	9a02      	ldr	r2, [sp, #8]
9001ca88:	9808      	ldr	r0, [sp, #32]
9001ca8a:	fbb5 f3f3 	udiv	r3, r5, r3
9001ca8e:	1ad3      	subs	r3, r2, r3
9001ca90:	7800      	ldrb	r0, [r0, #0]
9001ca92:	b29b      	uxth	r3, r3
9001ca94:	9010      	str	r0, [sp, #64]	@ 0x40
9001ca96:	3001      	adds	r0, #1
9001ca98:	9314      	str	r3, [sp, #80]	@ 0x50
9001ca9a:	9b08      	ldr	r3, [sp, #32]
9001ca9c:	9007      	str	r0, [sp, #28]
9001ca9e:	785a      	ldrb	r2, [r3, #1]
9001caa0:	789b      	ldrb	r3, [r3, #2]
9001caa2:	021b      	lsls	r3, r3, #8
9001caa4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001caa8:	9a08      	ldr	r2, [sp, #32]
9001caaa:	78d2      	ldrb	r2, [r2, #3]
9001caac:	4313      	orrs	r3, r2
9001caae:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001cab0:	441a      	add	r2, r3
9001cab2:	1c50      	adds	r0, r2, #1
9001cab4:	7852      	ldrb	r2, [r2, #1]
9001cab6:	9005      	str	r0, [sp, #20]
9001cab8:	0212      	lsls	r2, r2, #8
9001caba:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001cabc:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001cac0:	5cc3      	ldrb	r3, [r0, r3]
9001cac2:	431a      	orrs	r2, r3
9001cac4:	b293      	uxth	r3, r2
9001cac6:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
9001caca:	930b      	str	r3, [sp, #44]	@ 0x2c
9001cacc:	2300      	movs	r3, #0
9001cace:	9309      	str	r3, [sp, #36]	@ 0x24
9001cad0:	2301      	movs	r3, #1
9001cad2:	9301      	str	r3, [sp, #4]
9001cad4:	9304      	str	r3, [sp, #16]
9001cad6:	2300      	movs	r3, #0
9001cad8:	9303      	str	r3, [sp, #12]
9001cada:	2d00      	cmp	r5, #0
9001cadc:	d07d      	beq.n	9001cbda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001cade:	45ae      	cmp	lr, r5
9001cae0:	d26c      	bcs.n	9001cbbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001cae2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001cae4:	eba5 050e 	sub.w	r5, r5, lr
9001cae8:	460c      	mov	r4, r1
9001caea:	4543      	cmp	r3, r8
9001caec:	b2ad      	uxth	r5, r5
9001caee:	d802      	bhi.n	9001caf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001caf0:	e071      	b.n	9001cbd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001caf2:	2b00      	cmp	r3, #0
9001caf4:	d15d      	bne.n	9001cbb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001caf6:	9b05      	ldr	r3, [sp, #20]
9001caf8:	9a04      	ldr	r2, [sp, #16]
9001cafa:	785b      	ldrb	r3, [r3, #1]
9001cafc:	f1c2 0207 	rsb	r2, r2, #7
9001cb00:	9904      	ldr	r1, [sp, #16]
9001cb02:	4093      	lsls	r3, r2
9001cb04:	005b      	lsls	r3, r3, #1
9001cb06:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001cb0a:	9b05      	ldr	r3, [sp, #20]
9001cb0c:	781b      	ldrb	r3, [r3, #0]
9001cb0e:	410b      	asrs	r3, r1
9001cb10:	3101      	adds	r1, #1
9001cb12:	b2c9      	uxtb	r1, r1
9001cb14:	b2db      	uxtb	r3, r3
9001cb16:	2908      	cmp	r1, #8
9001cb18:	9104      	str	r1, [sp, #16]
9001cb1a:	9905      	ldr	r1, [sp, #20]
9001cb1c:	ea43 0302 	orr.w	r3, r3, r2
9001cb20:	bf0c      	ite	eq
9001cb22:	3102      	addeq	r1, #2
9001cb24:	3101      	addne	r1, #1
9001cb26:	b29a      	uxth	r2, r3
9001cb28:	bf05      	ittet	eq
9001cb2a:	9105      	streq	r1, [sp, #20]
9001cb2c:	2100      	moveq	r1, #0
9001cb2e:	9105      	strne	r1, [sp, #20]
9001cb30:	9104      	streq	r1, [sp, #16]
9001cb32:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001cb34:	4291      	cmp	r1, r2
9001cb36:	d30a      	bcc.n	9001cb4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001cb38:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
9001cb3c:	2301      	movs	r3, #1
9001cb3e:	9907      	ldr	r1, [sp, #28]
9001cb40:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001cb44:	d30f      	bcc.n	9001cb66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001cb46:	2100      	movs	r1, #0
9001cb48:	9301      	str	r3, [sp, #4]
9001cb4a:	9103      	str	r1, [sp, #12]
9001cb4c:	e032      	b.n	9001cbb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001cb4e:	9b07      	ldr	r3, [sp, #28]
9001cb50:	429a      	cmp	r2, r3
9001cb52:	d318      	bcc.n	9001cb86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001cb54:	9b01      	ldr	r3, [sp, #4]
9001cb56:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
9001cb5a:	445b      	add	r3, fp
9001cb5c:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001cb60:	9b01      	ldr	r3, [sp, #4]
9001cb62:	3301      	adds	r3, #1
9001cb64:	b29b      	uxth	r3, r3
9001cb66:	9907      	ldr	r1, [sp, #28]
9001cb68:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
9001cb6c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001cb70:	7108      	strb	r0, [r1, #4]
9001cb72:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001cb74:	80c8      	strh	r0, [r1, #6]
9001cb76:	9801      	ldr	r0, [sp, #4]
9001cb78:	3001      	adds	r0, #1
9001cb7a:	7148      	strb	r0, [r1, #5]
9001cb7c:	9907      	ldr	r1, [sp, #28]
9001cb7e:	3101      	adds	r1, #1
9001cb80:	b289      	uxth	r1, r1
9001cb82:	9107      	str	r1, [sp, #28]
9001cb84:	e7df      	b.n	9001cb46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001cb86:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001cb8a:	4611      	mov	r1, r2
9001cb8c:	795b      	ldrb	r3, [r3, #5]
9001cb8e:	f603 0004 	addw	r0, r3, #2052	@ 0x804
9001cb92:	4458      	add	r0, fp
9001cb94:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
9001cb96:	4406      	add	r6, r0
9001cb98:	2e00      	cmp	r6, #0
9001cb9a:	dd06      	ble.n	9001cbaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001cb9c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001cba0:	790e      	ldrb	r6, [r1, #4]
9001cba2:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001cba6:	88c9      	ldrh	r1, [r1, #6]
9001cba8:	e7f4      	b.n	9001cb94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001cbaa:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
9001cbae:	b29b      	uxth	r3, r3
9001cbb0:	e7c5      	b.n	9001cb3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001cbb2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001cbb4:	4621      	mov	r1, r4
9001cbb6:	920b      	str	r2, [sp, #44]	@ 0x2c
9001cbb8:	469e      	mov	lr, r3
9001cbba:	e78e      	b.n	9001cada <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001cbbc:	9a03      	ldr	r2, [sp, #12]
9001cbbe:	ebae 0305 	sub.w	r3, lr, r5
9001cbc2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001cbc6:	442a      	add	r2, r5
9001cbc8:	b29b      	uxth	r3, r3
9001cbca:	b292      	uxth	r2, r2
9001cbcc:	9203      	str	r2, [sp, #12]
9001cbce:	2500      	movs	r5, #0
9001cbd0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001cbd2:	4542      	cmp	r2, r8
9001cbd4:	d88d      	bhi.n	9001caf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001cbd6:	4621      	mov	r1, r4
9001cbd8:	e74d      	b.n	9001ca76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001cbda:	458e      	cmp	lr, r1
9001cbdc:	f04f 0900 	mov.w	r9, #0
9001cbe0:	bf2b      	itete	cs
9001cbe2:	ebae 0301 	subcs.w	r3, lr, r1
9001cbe6:	eba1 040e 	subcc.w	r4, r1, lr
9001cbea:	462c      	movcs	r4, r5
9001cbec:	462b      	movcc	r3, r5
9001cbee:	bf27      	ittee	cs
9001cbf0:	b29b      	uxthcs	r3, r3
9001cbf2:	910c      	strcs	r1, [sp, #48]	@ 0x30
9001cbf4:	b2a4      	uxthcc	r4, r4
9001cbf6:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
9001cbfa:	9a03      	ldr	r2, [sp, #12]
9001cbfc:	980c      	ldr	r0, [sp, #48]	@ 0x30
9001cbfe:	444a      	add	r2, r9
9001cc00:	4548      	cmp	r0, r9
9001cc02:	b292      	uxth	r2, r2
9001cc04:	d074      	beq.n	9001ccf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001cc06:	2004      	movs	r0, #4
9001cc08:	445a      	add	r2, fp
9001cc0a:	4605      	mov	r5, r0
9001cc0c:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
9001cc10:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001cc12:	fb15 0202 	smlabb	r2, r5, r2, r0
9001cc16:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001cc18:	5880      	ldr	r0, [r0, r2]
9001cc1a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001cc1e:	d014      	beq.n	9001cc4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001cc20:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001cc24:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001cc28:	d112      	bne.n	9001cc50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001cc2a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001cc2c:	2aff      	cmp	r2, #255	@ 0xff
9001cc2e:	d10f      	bne.n	9001cc50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001cc30:	0942      	lsrs	r2, r0, #5
9001cc32:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001cc36:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001cc3a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001cc3e:	f025 0507 	bic.w	r5, r5, #7
9001cc42:	4315      	orrs	r5, r2
9001cc44:	4305      	orrs	r5, r0
9001cc46:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001cc4a:	f109 0901 	add.w	r9, r9, #1
9001cc4e:	e7d4      	b.n	9001cbfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001cc50:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001cc54:	b2ed      	uxtb	r5, r5
9001cc56:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001cc5a:	ea4f 272c 	mov.w	r7, ip, asr #8
9001cc5e:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
9001cc62:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001cc66:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001cc6a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001cc6e:	9215      	str	r2, [sp, #84]	@ 0x54
9001cc70:	fa5f fc8c 	uxtb.w	ip, ip
9001cc74:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001cc76:	b2c0      	uxtb	r0, r0
9001cc78:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001cc7c:	fb02 fa0a 	mul.w	sl, r2, sl
9001cc80:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001cc84:	f10a 0201 	add.w	r2, sl, #1
9001cc88:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001cc8c:	1212      	asrs	r2, r2, #8
9001cc8e:	fa1f fa82 	uxth.w	sl, r2
9001cc92:	43d2      	mvns	r2, r2
9001cc94:	fb16 f60a 	smulbb	r6, r6, sl
9001cc98:	b2d2      	uxtb	r2, r2
9001cc9a:	fb10 f00a 	smulbb	r0, r0, sl
9001cc9e:	fb07 6702 	mla	r7, r7, r2, r6
9001cca2:	9e15      	ldr	r6, [sp, #84]	@ 0x54
9001cca4:	fb0c 0002 	mla	r0, ip, r2, r0
9001cca8:	fb15 f50a 	smulbb	r5, r5, sl
9001ccac:	b2bf      	uxth	r7, r7
9001ccae:	b280      	uxth	r0, r0
9001ccb0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001ccb4:	fb06 5602 	mla	r6, r6, r2, r5
9001ccb8:	1c7a      	adds	r2, r7, #1
9001ccba:	1c45      	adds	r5, r0, #1
9001ccbc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001ccc0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001ccc4:	b2b6      	uxth	r6, r6
9001ccc6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ccca:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001ccce:	432f      	orrs	r7, r5
9001ccd0:	1c75      	adds	r5, r6, #1
9001ccd2:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001ccd6:	096d      	lsrs	r5, r5, #5
9001ccd8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001ccdc:	432f      	orrs	r7, r5
9001ccde:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001cce2:	e7b2      	b.n	9001cc4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001cce4:	2001aa40 	.word	0x2001aa40
9001cce8:	2001aa38 	.word	0x2001aa38
9001ccec:	fffff7fb 	.word	0xfffff7fb
9001ccf0:	9203      	str	r2, [sp, #12]
9001ccf2:	458e      	cmp	lr, r1
9001ccf4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001ccf6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001ccfa:	f4ff af68 	bcc.w	9001cbce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001ccfe:	9a16      	ldr	r2, [sp, #88]	@ 0x58
9001cd00:	9906      	ldr	r1, [sp, #24]
9001cd02:	8812      	ldrh	r2, [r2, #0]
9001cd04:	1a52      	subs	r2, r2, r1
9001cd06:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001cd08:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001cd0c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001cd0e:	3201      	adds	r2, #1
9001cd10:	428a      	cmp	r2, r1
9001cd12:	9209      	str	r2, [sp, #36]	@ 0x24
9001cd14:	d111      	bne.n	9001cd3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001cd16:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
9001cd1a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
9001cd1e:	9b06      	ldr	r3, [sp, #24]
9001cd20:	eba5 0509 	sub.w	r5, r5, r9
9001cd24:	b2ad      	uxth	r5, r5
9001cd26:	2d00      	cmp	r5, #0
9001cd28:	bf08      	it	eq
9001cd2a:	4619      	moveq	r1, r3
9001cd2c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001cd2e:	bf18      	it	ne
9001cd30:	2100      	movne	r1, #0
9001cd32:	3301      	adds	r3, #1
9001cd34:	b289      	uxth	r1, r1
9001cd36:	930d      	str	r3, [sp, #52]	@ 0x34
9001cd38:	e694      	b.n	9001ca64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001cd3a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001cd3e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001cd42:	1b2d      	subs	r5, r5, r4
9001cd44:	b2ad      	uxth	r5, r5
9001cd46:	2d00      	cmp	r5, #0
9001cd48:	bf18      	it	ne
9001cd4a:	2400      	movne	r4, #0
9001cd4c:	e740      	b.n	9001cbd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001cd4e:	4b04      	ldr	r3, [pc, #16]	@ (9001cd60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001cd50:	6818      	ldr	r0, [r3, #0]
9001cd52:	6803      	ldr	r3, [r0, #0]
9001cd54:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001cd56:	4798      	blx	r3
9001cd58:	b01d      	add	sp, #116	@ 0x74
9001cd5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cd5e:	bf00      	nop
9001cd60:	2001aa40 	.word	0x2001aa40

9001cd64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001cd64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cd68:	b09f      	sub	sp, #124	@ 0x7c
9001cd6a:	461d      	mov	r5, r3
9001cd6c:	4604      	mov	r4, r0
9001cd6e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001cd70:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001cd74:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001cd78:	920a      	str	r2, [sp, #40]	@ 0x28
9001cd7a:	2a00      	cmp	r2, #0
9001cd7c:	f000 81fe 	beq.w	9001d17c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001cd80:	6828      	ldr	r0, [r5, #0]
9001cd82:	aa1a      	add	r2, sp, #104	@ 0x68
9001cd84:	6869      	ldr	r1, [r5, #4]
9001cd86:	c203      	stmia	r2!, {r0, r1}
9001cd88:	6818      	ldr	r0, [r3, #0]
9001cd8a:	aa1c      	add	r2, sp, #112	@ 0x70
9001cd8c:	6859      	ldr	r1, [r3, #4]
9001cd8e:	c203      	stmia	r2!, {r0, r1}
9001cd90:	a81a      	add	r0, sp, #104	@ 0x68
9001cd92:	f7f7 ffe5 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cd96:	4629      	mov	r1, r5
9001cd98:	a81c      	add	r0, sp, #112	@ 0x70
9001cd9a:	f7f8 f809 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cd9e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001cda2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001cda6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001cdaa:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
9001cdae:	bfdb      	ittet	le
9001cdb0:	b29a      	uxthle	r2, r3
9001cdb2:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001cdb6:	2201      	movgt	r2, #1
9001cdb8:	fb91 f2f2 	sdivle	r2, r1, r2
9001cdbc:	9201      	str	r2, [sp, #4]
9001cdbe:	9801      	ldr	r0, [sp, #4]
9001cdc0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001cdc4:	9901      	ldr	r1, [sp, #4]
9001cdc6:	fb92 f0f0 	sdiv	r0, r2, r0
9001cdca:	b280      	uxth	r0, r0
9001cdcc:	440e      	add	r6, r1
9001cdce:	9010      	str	r0, [sp, #64]	@ 0x40
9001cdd0:	3e01      	subs	r6, #1
9001cdd2:	9801      	ldr	r0, [sp, #4]
9001cdd4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001cdd6:	fb05 2510 	mls	r5, r5, r0, r2
9001cdda:	fb96 f6f1 	sdiv	r6, r6, r1
9001cdde:	fb15 f503 	smulbb	r5, r5, r3
9001cde2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001cde6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001cdea:	3601      	adds	r6, #1
9001cdec:	440d      	add	r5, r1
9001cdee:	4419      	add	r1, r3
9001cdf0:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001cdf4:	b2b6      	uxth	r6, r6
9001cdf6:	441a      	add	r2, r3
9001cdf8:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001cdfc:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001ce00:	b2ad      	uxth	r5, r5
9001ce02:	9304      	str	r3, [sp, #16]
9001ce04:	4b96      	ldr	r3, [pc, #600]	@ (9001d060 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001ce06:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001ce0a:	6818      	ldr	r0, [r3, #0]
9001ce0c:	6803      	ldr	r3, [r0, #0]
9001ce0e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ce10:	4798      	blx	r3
9001ce12:	4b94      	ldr	r3, [pc, #592]	@ (9001d064 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001ce14:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001ce18:	2d00      	cmp	r5, #0
9001ce1a:	881a      	ldrh	r2, [r3, #0]
9001ce1c:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
9001ce20:	fb02 f707 	mul.w	r7, r2, r7
9001ce24:	fb02 c101 	mla	r1, r2, r1, ip
9001ce28:	9318      	str	r3, [sp, #96]	@ 0x60
9001ce2a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001ce2e:	4b8e      	ldr	r3, [pc, #568]	@ (9001d068 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001ce30:	bf18      	it	ne
9001ce32:	2100      	movne	r1, #0
9001ce34:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001ce38:	eba3 0304 	sub.w	r3, r3, r4
9001ce3c:	920b      	str	r2, [sp, #44]	@ 0x2c
9001ce3e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ce40:	9319      	str	r3, [sp, #100]	@ 0x64
9001ce42:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001ce46:	f106 0204 	add.w	r2, r6, #4
9001ce4a:	9206      	str	r2, [sp, #24]
9001ce4c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001ce4e:	ea6f 0202 	mvn.w	r2, r2
9001ce52:	b2d2      	uxtb	r2, r2
9001ce54:	9215      	str	r2, [sp, #84]	@ 0x54
9001ce56:	9a04      	ldr	r2, [sp, #16]
9001ce58:	bf08      	it	eq
9001ce5a:	4611      	moveq	r1, r2
9001ce5c:	2200      	movs	r2, #0
9001ce5e:	b289      	uxth	r1, r1
9001ce60:	920d      	str	r2, [sp, #52]	@ 0x34
9001ce62:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001ce64:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001ce66:	fa12 f383 	uxtah	r3, r2, r3
9001ce6a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ce6c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001ce70:	3304      	adds	r3, #4
9001ce72:	9307      	str	r3, [sp, #28]
9001ce74:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001ce76:	455b      	cmp	r3, fp
9001ce78:	f240 817b 	bls.w	9001d172 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001ce7c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001ce80:	f04f 0801 	mov.w	r8, #1
9001ce84:	9a01      	ldr	r2, [sp, #4]
9001ce86:	9807      	ldr	r0, [sp, #28]
9001ce88:	46c4      	mov	ip, r8
9001ce8a:	f8cd 8008 	str.w	r8, [sp, #8]
9001ce8e:	7800      	ldrb	r0, [r0, #0]
9001ce90:	fbb5 f3f3 	udiv	r3, r5, r3
9001ce94:	1ad3      	subs	r3, r2, r3
9001ce96:	9011      	str	r0, [sp, #68]	@ 0x44
9001ce98:	3001      	adds	r0, #1
9001ce9a:	b29b      	uxth	r3, r3
9001ce9c:	9005      	str	r0, [sp, #20]
9001ce9e:	9316      	str	r3, [sp, #88]	@ 0x58
9001cea0:	9b07      	ldr	r3, [sp, #28]
9001cea2:	785a      	ldrb	r2, [r3, #1]
9001cea4:	789b      	ldrb	r3, [r3, #2]
9001cea6:	021b      	lsls	r3, r3, #8
9001cea8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001ceac:	9a07      	ldr	r2, [sp, #28]
9001ceae:	78d2      	ldrb	r2, [r2, #3]
9001ceb0:	4313      	orrs	r3, r2
9001ceb2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ceb4:	441a      	add	r2, r3
9001ceb6:	1c50      	adds	r0, r2, #1
9001ceb8:	7852      	ldrb	r2, [r2, #1]
9001ceba:	9003      	str	r0, [sp, #12]
9001cebc:	0212      	lsls	r2, r2, #8
9001cebe:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001cec0:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001cec4:	5cc3      	ldrb	r3, [r0, r3]
9001cec6:	431a      	orrs	r2, r3
9001cec8:	b293      	uxth	r3, r2
9001ceca:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001cece:	930c      	str	r3, [sp, #48]	@ 0x30
9001ced0:	2300      	movs	r3, #0
9001ced2:	9308      	str	r3, [sp, #32]
9001ced4:	461a      	mov	r2, r3
9001ced6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001ceda:	930e      	str	r3, [sp, #56]	@ 0x38
9001cedc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001cee0:	930f      	str	r3, [sp, #60]	@ 0x3c
9001cee2:	2d00      	cmp	r5, #0
9001cee4:	d07d      	beq.n	9001cfe2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001cee6:	45ac      	cmp	ip, r5
9001cee8:	d26d      	bcs.n	9001cfc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001ceea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001ceec:	eba5 050c 	sub.w	r5, r5, ip
9001cef0:	4608      	mov	r0, r1
9001cef2:	455b      	cmp	r3, fp
9001cef4:	b2ad      	uxth	r5, r5
9001cef6:	d802      	bhi.n	9001cefe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001cef8:	e071      	b.n	9001cfde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001cefa:	2b00      	cmp	r3, #0
9001cefc:	d15d      	bne.n	9001cfba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001cefe:	9b03      	ldr	r3, [sp, #12]
9001cf00:	9a02      	ldr	r2, [sp, #8]
9001cf02:	785b      	ldrb	r3, [r3, #1]
9001cf04:	f1c2 0207 	rsb	r2, r2, #7
9001cf08:	9902      	ldr	r1, [sp, #8]
9001cf0a:	4093      	lsls	r3, r2
9001cf0c:	005b      	lsls	r3, r3, #1
9001cf0e:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001cf12:	9b03      	ldr	r3, [sp, #12]
9001cf14:	781b      	ldrb	r3, [r3, #0]
9001cf16:	410b      	asrs	r3, r1
9001cf18:	3101      	adds	r1, #1
9001cf1a:	b2c9      	uxtb	r1, r1
9001cf1c:	b2db      	uxtb	r3, r3
9001cf1e:	2908      	cmp	r1, #8
9001cf20:	9102      	str	r1, [sp, #8]
9001cf22:	9903      	ldr	r1, [sp, #12]
9001cf24:	ea43 0302 	orr.w	r3, r3, r2
9001cf28:	bf0c      	ite	eq
9001cf2a:	3102      	addeq	r1, #2
9001cf2c:	3101      	addne	r1, #1
9001cf2e:	b29a      	uxth	r2, r3
9001cf30:	bf05      	ittet	eq
9001cf32:	9103      	streq	r1, [sp, #12]
9001cf34:	2100      	moveq	r1, #0
9001cf36:	9103      	strne	r1, [sp, #12]
9001cf38:	9102      	streq	r1, [sp, #8]
9001cf3a:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001cf3c:	4291      	cmp	r1, r2
9001cf3e:	d30a      	bcc.n	9001cf56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001cf40:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001cf44:	2301      	movs	r3, #1
9001cf46:	9905      	ldr	r1, [sp, #20]
9001cf48:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001cf4c:	d30f      	bcc.n	9001cf6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001cf4e:	2100      	movs	r1, #0
9001cf50:	4698      	mov	r8, r3
9001cf52:	9100      	str	r1, [sp, #0]
9001cf54:	e032      	b.n	9001cfbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001cf56:	9b05      	ldr	r3, [sp, #20]
9001cf58:	429a      	cmp	r2, r3
9001cf5a:	d318      	bcc.n	9001cf8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001cf5c:	eb04 0308 	add.w	r3, r4, r8
9001cf60:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
9001cf64:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001cf68:	f108 0301 	add.w	r3, r8, #1
9001cf6c:	b29b      	uxth	r3, r3
9001cf6e:	9905      	ldr	r1, [sp, #20]
9001cf70:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001cf74:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001cf78:	710e      	strb	r6, [r1, #4]
9001cf7a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9001cf7c:	80ce      	strh	r6, [r1, #6]
9001cf7e:	f108 0601 	add.w	r6, r8, #1
9001cf82:	714e      	strb	r6, [r1, #5]
9001cf84:	9905      	ldr	r1, [sp, #20]
9001cf86:	3101      	adds	r1, #1
9001cf88:	b289      	uxth	r1, r1
9001cf8a:	9105      	str	r1, [sp, #20]
9001cf8c:	e7df      	b.n	9001cf4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001cf8e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001cf92:	4611      	mov	r1, r2
9001cf94:	795b      	ldrb	r3, [r3, #5]
9001cf96:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001cf9a:	4426      	add	r6, r4
9001cf9c:	9f19      	ldr	r7, [sp, #100]	@ 0x64
9001cf9e:	4437      	add	r7, r6
9001cfa0:	2f00      	cmp	r7, #0
9001cfa2:	dd06      	ble.n	9001cfb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001cfa4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001cfa8:	790f      	ldrb	r7, [r1, #4]
9001cfaa:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001cfae:	88c9      	ldrh	r1, [r1, #6]
9001cfb0:	e7f4      	b.n	9001cf9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001cfb2:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001cfb6:	b29b      	uxth	r3, r3
9001cfb8:	e7c5      	b.n	9001cf46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001cfba:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001cfbc:	920c      	str	r2, [sp, #48]	@ 0x30
9001cfbe:	4601      	mov	r1, r0
9001cfc0:	9a00      	ldr	r2, [sp, #0]
9001cfc2:	469c      	mov	ip, r3
9001cfc4:	e78d      	b.n	9001cee2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001cfc6:	ebac 0305 	sub.w	r3, ip, r5
9001cfca:	1957      	adds	r7, r2, r5
9001cfcc:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001cfd0:	b2ba      	uxth	r2, r7
9001cfd2:	b29b      	uxth	r3, r3
9001cfd4:	9200      	str	r2, [sp, #0]
9001cfd6:	2500      	movs	r5, #0
9001cfd8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001cfda:	455a      	cmp	r2, fp
9001cfdc:	d88d      	bhi.n	9001cefa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001cfde:	4601      	mov	r1, r0
9001cfe0:	e748      	b.n	9001ce74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001cfe2:	458c      	cmp	ip, r1
9001cfe4:	bf27      	ittee	cs
9001cfe6:	ebac 0301 	subcs.w	r3, ip, r1
9001cfea:	4628      	movcs	r0, r5
9001cfec:	eba1 000c 	subcc.w	r0, r1, ip
9001cff0:	462b      	movcc	r3, r5
9001cff2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9001cff4:	bf27      	ittee	cs
9001cff6:	b29b      	uxthcs	r3, r3
9001cff8:	9109      	strcs	r1, [sp, #36]	@ 0x24
9001cffa:	b280      	uxthcc	r0, r0
9001cffc:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
9001d000:	2dff      	cmp	r5, #255	@ 0xff
9001d002:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9001d004:	eb02 0705 	add.w	r7, r2, r5
9001d008:	b2bd      	uxth	r5, r7
9001d00a:	9500      	str	r5, [sp, #0]
9001d00c:	d12e      	bne.n	9001d06c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001d00e:	465e      	mov	r6, fp
9001d010:	9d00      	ldr	r5, [sp, #0]
9001d012:	42aa      	cmp	r2, r5
9001d014:	f040 8083 	bne.w	9001d11e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001d018:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001d01a:	458c      	cmp	ip, r1
9001d01c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001d020:	d3d9      	bcc.n	9001cfd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001d022:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001d024:	9904      	ldr	r1, [sp, #16]
9001d026:	8812      	ldrh	r2, [r2, #0]
9001d028:	1a52      	subs	r2, r2, r1
9001d02a:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001d02c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001d030:	9a08      	ldr	r2, [sp, #32]
9001d032:	3201      	adds	r2, #1
9001d034:	428a      	cmp	r2, r1
9001d036:	9208      	str	r2, [sp, #32]
9001d038:	f040 8091 	bne.w	9001d15e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001d03c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001d040:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
9001d044:	9b04      	ldr	r3, [sp, #16]
9001d046:	eba5 050c 	sub.w	r5, r5, ip
9001d04a:	b2ad      	uxth	r5, r5
9001d04c:	2d00      	cmp	r5, #0
9001d04e:	bf08      	it	eq
9001d050:	4619      	moveq	r1, r3
9001d052:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d054:	bf18      	it	ne
9001d056:	2100      	movne	r1, #0
9001d058:	3301      	adds	r3, #1
9001d05a:	b289      	uxth	r1, r1
9001d05c:	930d      	str	r3, [sp, #52]	@ 0x34
9001d05e:	e700      	b.n	9001ce62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001d060:	2001aa40 	.word	0x2001aa40
9001d064:	2001aa38 	.word	0x2001aa38
9001d068:	fffff7fb 	.word	0xfffff7fb
9001d06c:	46d9      	mov	r9, fp
9001d06e:	9d00      	ldr	r5, [sp, #0]
9001d070:	42aa      	cmp	r2, r5
9001d072:	d0d1      	beq.n	9001d018 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001d074:	1c55      	adds	r5, r2, #1
9001d076:	4422      	add	r2, r4
9001d078:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
9001d07c:	9a06      	ldr	r2, [sp, #24]
9001d07e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001d082:	9517      	str	r5, [sp, #92]	@ 0x5c
9001d084:	4472      	add	r2, lr
9001d086:	9212      	str	r2, [sp, #72]	@ 0x48
9001d088:	f8b9 2000 	ldrh.w	r2, [r9]
9001d08c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001d08e:	1216      	asrs	r6, r2, #8
9001d090:	f897 a002 	ldrb.w	sl, [r7, #2]
9001d094:	10d5      	asrs	r5, r2, #3
9001d096:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001d098:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d09c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001d0a0:	00d2      	lsls	r2, r2, #3
9001d0a2:	fb1a fa07 	smulbb	sl, sl, r7
9001d0a6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001d0aa:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001d0ac:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001d0b0:	b2d2      	uxtb	r2, r2
9001d0b2:	fb06 a607 	mla	r6, r6, r7, sl
9001d0b6:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001d0b8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001d0bc:	f897 a001 	ldrb.w	sl, [r7, #1]
9001d0c0:	b2b6      	uxth	r6, r6
9001d0c2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001d0c4:	fb1a fa07 	smulbb	sl, sl, r7
9001d0c8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001d0ca:	fb05 a507 	mla	r5, r5, r7, sl
9001d0ce:	9f06      	ldr	r7, [sp, #24]
9001d0d0:	f106 0a01 	add.w	sl, r6, #1
9001d0d4:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001d0d8:	b2ad      	uxth	r5, r5
9001d0da:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001d0dc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001d0e0:	f105 0a01 	add.w	sl, r5, #1
9001d0e4:	fb1e fe07 	smulbb	lr, lr, r7
9001d0e8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001d0ea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d0ee:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001d0f2:	fb02 e207 	mla	r2, r2, r7, lr
9001d0f6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d0fa:	b292      	uxth	r2, r2
9001d0fc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d100:	f102 0e01 	add.w	lr, r2, #1
9001d104:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001d108:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001d10c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001d110:	ea4e 0606 	orr.w	r6, lr, r6
9001d114:	ea46 060a 	orr.w	r6, r6, sl
9001d118:	f829 6b02 	strh.w	r6, [r9], #2
9001d11c:	e7a7      	b.n	9001d06e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001d11e:	f102 0e01 	add.w	lr, r2, #1
9001d122:	4422      	add	r2, r4
9001d124:	9f06      	ldr	r7, [sp, #24]
9001d126:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
9001d12a:	9a06      	ldr	r2, [sp, #24]
9001d12c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001d130:	eb02 0a05 	add.w	sl, r2, r5
9001d134:	4a13      	ldr	r2, [pc, #76]	@ (9001d184 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001d136:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001d13a:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001d13e:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001d142:	00d2      	lsls	r2, r2, #3
9001d144:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001d148:	ea49 0202 	orr.w	r2, r9, r2
9001d14c:	f817 9005 	ldrb.w	r9, [r7, r5]
9001d150:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001d154:	f826 2b02 	strh.w	r2, [r6], #2
9001d158:	fa1f f28e 	uxth.w	r2, lr
9001d15c:	e758      	b.n	9001d010 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001d15e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001d162:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001d166:	1a2d      	subs	r5, r5, r0
9001d168:	b2ad      	uxth	r5, r5
9001d16a:	2d00      	cmp	r5, #0
9001d16c:	bf18      	it	ne
9001d16e:	2000      	movne	r0, #0
9001d170:	e732      	b.n	9001cfd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001d172:	4b05      	ldr	r3, [pc, #20]	@ (9001d188 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001d174:	6818      	ldr	r0, [r3, #0]
9001d176:	6803      	ldr	r3, [r0, #0]
9001d178:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d17a:	4798      	blx	r3
9001d17c:	b01f      	add	sp, #124	@ 0x7c
9001d17e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d182:	bf00      	nop
9001d184:	fffff800 	.word	0xfffff800
9001d188:	2001aa40 	.word	0x2001aa40

9001d18c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001d18c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d190:	b091      	sub	sp, #68	@ 0x44
9001d192:	469b      	mov	fp, r3
9001d194:	4616      	mov	r6, r2
9001d196:	f9b3 2000 	ldrsh.w	r2, [r3]
9001d19a:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
9001d19e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001d1a2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
9001d1a6:	4604      	mov	r4, r0
9001d1a8:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001d1ac:	4640      	mov	r0, r8
9001d1ae:	460d      	mov	r5, r1
9001d1b0:	4659      	mov	r1, fp
9001d1b2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001d1b6:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001d1ba:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
9001d1be:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
9001d1c2:	f7f3 fa5f 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
9001d1c6:	4631      	mov	r1, r6
9001d1c8:	4640      	mov	r0, r8
9001d1ca:	f7f3 fa5b 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
9001d1ce:	4b74      	ldr	r3, [pc, #464]	@ (9001d3a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001d1d0:	8818      	ldrh	r0, [r3, #0]
9001d1d2:	4b74      	ldr	r3, [pc, #464]	@ (9001d3a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001d1d4:	b202      	sxth	r2, r0
9001d1d6:	8819      	ldrh	r1, [r3, #0]
9001d1d8:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001d1dc:	b20e      	sxth	r6, r1
9001d1de:	2b00      	cmp	r3, #0
9001d1e0:	da07      	bge.n	9001d1f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001d1e2:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
9001d1e6:	4463      	add	r3, ip
9001d1e8:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
9001d1ec:	2300      	movs	r3, #0
9001d1ee:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
9001d1f2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001d1f6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001d1fa:	1ad2      	subs	r2, r2, r3
9001d1fc:	4594      	cmp	ip, r2
9001d1fe:	bfc4      	itt	gt
9001d200:	1ac2      	subgt	r2, r0, r3
9001d202:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
9001d206:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001d20a:	2a00      	cmp	r2, #0
9001d20c:	da07      	bge.n	9001d21e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001d20e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
9001d212:	4462      	add	r2, ip
9001d214:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001d218:	2200      	movs	r2, #0
9001d21a:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9001d21e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9001d222:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001d226:	eba6 060a 	sub.w	r6, r6, sl
9001d22a:	42b2      	cmp	r2, r6
9001d22c:	bfc4      	itt	gt
9001d22e:	eba1 020a 	subgt.w	r2, r1, sl
9001d232:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
9001d236:	4a5c      	ldr	r2, [pc, #368]	@ (9001d3a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001d238:	7812      	ldrb	r2, [r2, #0]
9001d23a:	b9a2      	cbnz	r2, 9001d266 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001d23c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001d240:	4286      	cmp	r6, r0
9001d242:	4640      	mov	r0, r8
9001d244:	9303      	str	r3, [sp, #12]
9001d246:	bf14      	ite	ne
9001d248:	2600      	movne	r6, #0
9001d24a:	2601      	moveq	r6, #1
9001d24c:	f7f3 fa5d 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
9001d250:	9b03      	ldr	r3, [sp, #12]
9001d252:	b160      	cbz	r0, 9001d26e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001d254:	2300      	movs	r3, #0
9001d256:	8023      	strh	r3, [r4, #0]
9001d258:	8063      	strh	r3, [r4, #2]
9001d25a:	80a3      	strh	r3, [r4, #4]
9001d25c:	4620      	mov	r0, r4
9001d25e:	80e3      	strh	r3, [r4, #6]
9001d260:	b011      	add	sp, #68	@ 0x44
9001d262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d266:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001d26a:	428e      	cmp	r6, r1
9001d26c:	e7e9      	b.n	9001d242 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001d26e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001d272:	a90e      	add	r1, sp, #56	@ 0x38
9001d274:	900e      	str	r0, [sp, #56]	@ 0x38
9001d276:	a80c      	add	r0, sp, #48	@ 0x30
9001d278:	9205      	str	r2, [sp, #20]
9001d27a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001d27e:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
9001d282:	9206      	str	r2, [sp, #24]
9001d284:	f8bb 2000 	ldrh.w	r2, [fp]
9001d288:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
9001d28c:	1a9b      	subs	r3, r3, r2
9001d28e:	b21b      	sxth	r3, r3
9001d290:	9303      	str	r3, [sp, #12]
9001d292:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001d296:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9001d3b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001d29a:	ebaa 0a03 	sub.w	sl, sl, r3
9001d29e:	fa0f f38a 	sxth.w	r3, sl
9001d2a2:	9304      	str	r3, [sp, #16]
9001d2a4:	9b03      	ldr	r3, [sp, #12]
9001d2a6:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
9001d2aa:	9b04      	ldr	r3, [sp, #16]
9001d2ac:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001d2b0:	9b05      	ldr	r3, [sp, #20]
9001d2b2:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
9001d2b6:	9b06      	ldr	r3, [sp, #24]
9001d2b8:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001d2bc:	f7f7 fd78 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d2c0:	4640      	mov	r0, r8
9001d2c2:	f7f7 fd4d 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d2c6:	a80e      	add	r0, sp, #56	@ 0x38
9001d2c8:	f7f7 fd4a 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d2cc:	4b37      	ldr	r3, [pc, #220]	@ (9001d3ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001d2ce:	4628      	mov	r0, r5
9001d2d0:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
9001d2d4:	881b      	ldrh	r3, [r3, #0]
9001d2d6:	9307      	str	r3, [sp, #28]
9001d2d8:	682b      	ldr	r3, [r5, #0]
9001d2da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d2dc:	4798      	blx	r3
9001d2de:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
9001d2e2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9001d2e6:	4681      	mov	r9, r0
9001d2e8:	f8db 0000 	ldr.w	r0, [fp]
9001d2ec:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001d2f0:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9001d2f2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001d2f6:	6803      	ldr	r3, [r0, #0]
9001d2f8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001d2fa:	4798      	blx	r3
9001d2fc:	4607      	mov	r7, r0
9001d2fe:	f8db 0000 	ldr.w	r0, [fp]
9001d302:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
9001d306:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001d30a:	6803      	ldr	r3, [r0, #0]
9001d30c:	9109      	str	r1, [sp, #36]	@ 0x24
9001d30e:	9208      	str	r2, [sp, #32]
9001d310:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001d312:	4798      	blx	r3
9001d314:	f010 0f01 	tst.w	r0, #1
9001d318:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001d31c:	d012      	beq.n	9001d344 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001d31e:	f8db 0000 	ldr.w	r0, [fp]
9001d322:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
9001d326:	6803      	ldr	r3, [r0, #0]
9001d328:	9200      	str	r2, [sp, #0]
9001d32a:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
9001d32c:	462b      	mov	r3, r5
9001d32e:	e898 0006 	ldmia.w	r8, {r1, r2}
9001d332:	47b0      	blx	r6
9001d334:	9b03      	ldr	r3, [sp, #12]
9001d336:	8023      	strh	r3, [r4, #0]
9001d338:	9b04      	ldr	r3, [sp, #16]
9001d33a:	8063      	strh	r3, [r4, #2]
9001d33c:	9b05      	ldr	r3, [sp, #20]
9001d33e:	80a3      	strh	r3, [r4, #4]
9001d340:	9b06      	ldr	r3, [sp, #24]
9001d342:	e78b      	b.n	9001d25c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001d344:	fb09 f202 	mul.w	r2, r9, r2
9001d348:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
9001d34c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001d350:	440f      	add	r7, r1
9001d352:	b166      	cbz	r6, 9001d36e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001d354:	9a07      	ldr	r2, [sp, #28]
9001d356:	4592      	cmp	sl, r2
9001d358:	d109      	bne.n	9001d36e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001d35a:	f8db 0000 	ldr.w	r0, [fp]
9001d35e:	fb09 f303 	mul.w	r3, r9, r3
9001d362:	4629      	mov	r1, r5
9001d364:	6802      	ldr	r2, [r0, #0]
9001d366:	6b96      	ldr	r6, [r2, #56]	@ 0x38
9001d368:	463a      	mov	r2, r7
9001d36a:	47b0      	blx	r6
9001d36c:	e7e2      	b.n	9001d334 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001d36e:	fb0a f303 	mul.w	r3, sl, r3
9001d372:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001d376:	f8df b038 	ldr.w	fp, [pc, #56]	@ 9001d3b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001d37a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001d37e:	4545      	cmp	r5, r8
9001d380:	d2d8      	bcs.n	9001d334 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001d382:	f8db 0000 	ldr.w	r0, [fp]
9001d386:	4629      	mov	r1, r5
9001d388:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001d38c:	4435      	add	r5, r6
9001d38e:	6802      	ldr	r2, [r0, #0]
9001d390:	005b      	lsls	r3, r3, #1
9001d392:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
9001d396:	463a      	mov	r2, r7
9001d398:	47d0      	blx	sl
9001d39a:	444f      	add	r7, r9
9001d39c:	e7ef      	b.n	9001d37e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001d39e:	bf00      	nop
9001d3a0:	2001aa32 	.word	0x2001aa32
9001d3a4:	2001aa34 	.word	0x2001aa34
9001d3a8:	2001aa36 	.word	0x2001aa36
9001d3ac:	2001aa38 	.word	0x2001aa38
9001d3b0:	2001aa40 	.word	0x2001aa40

9001d3b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001d3b4:	b5f0      	push	{r4, r5, r6, r7, lr}
9001d3b6:	4606      	mov	r6, r0
9001d3b8:	b087      	sub	sp, #28
9001d3ba:	460c      	mov	r4, r1
9001d3bc:	4617      	mov	r7, r2
9001d3be:	461d      	mov	r5, r3
9001d3c0:	b333      	cbz	r3, 9001d410 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001d3c2:	4608      	mov	r0, r1
9001d3c4:	f7f3 f9a1 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
9001d3c8:	bb10      	cbnz	r0, 9001d410 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001d3ca:	6820      	ldr	r0, [r4, #0]
9001d3cc:	ab04      	add	r3, sp, #16
9001d3ce:	6861      	ldr	r1, [r4, #4]
9001d3d0:	4c1b      	ldr	r4, [pc, #108]	@ (9001d440 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001d3d2:	c303      	stmia	r3!, {r0, r1}
9001d3d4:	a804      	add	r0, sp, #16
9001d3d6:	f7f7 fcc3 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d3da:	6820      	ldr	r0, [r4, #0]
9001d3dc:	6803      	ldr	r3, [r0, #0]
9001d3de:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001d3e0:	4798      	blx	r3
9001d3e2:	2dff      	cmp	r5, #255	@ 0xff
9001d3e4:	d016      	beq.n	9001d414 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001d3e6:	f010 0f08 	tst.w	r0, #8
9001d3ea:	6820      	ldr	r0, [r4, #0]
9001d3ec:	d015      	beq.n	9001d41a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001d3ee:	2400      	movs	r4, #0
9001d3f0:	6801      	ldr	r1, [r0, #0]
9001d3f2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001d3f6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d3fa:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001d3fe:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001d402:	9401      	str	r4, [sp, #4]
9001d404:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001d408:	9400      	str	r4, [sp, #0]
9001d40a:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
9001d40c:	4639      	mov	r1, r7
9001d40e:	47a0      	blx	r4
9001d410:	b007      	add	sp, #28
9001d412:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001d414:	f010 0f02 	tst.w	r0, #2
9001d418:	e7e7      	b.n	9001d3ea <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001d41a:	6803      	ldr	r3, [r0, #0]
9001d41c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d41e:	4798      	blx	r3
9001d420:	4b08      	ldr	r3, [pc, #32]	@ (9001d444 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001d422:	4601      	mov	r1, r0
9001d424:	4630      	mov	r0, r6
9001d426:	881a      	ldrh	r2, [r3, #0]
9001d428:	6833      	ldr	r3, [r6, #0]
9001d42a:	e9cd 7500 	strd	r7, r5, [sp]
9001d42e:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
9001d430:	ab04      	add	r3, sp, #16
9001d432:	47a8      	blx	r5
9001d434:	6820      	ldr	r0, [r4, #0]
9001d436:	6803      	ldr	r3, [r0, #0]
9001d438:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d43a:	4798      	blx	r3
9001d43c:	e7e8      	b.n	9001d410 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001d43e:	bf00      	nop
9001d440:	2001aa40 	.word	0x2001aa40
9001d444:	2001aa38 	.word	0x2001aa38

9001d448 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001d448:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001d44c:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
9001d450:	4688      	mov	r8, r1
9001d452:	4614      	mov	r4, r2
9001d454:	461d      	mov	r5, r3
9001d456:	9e08      	ldr	r6, [sp, #32]
9001d458:	2f00      	cmp	r7, #0
9001d45a:	f000 80ab 	beq.w	9001d5b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001d45e:	4618      	mov	r0, r3
9001d460:	f7f3 f953 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
9001d464:	2800      	cmp	r0, #0
9001d466:	f040 80a5 	bne.w	9001d5b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001d46a:	f9b5 1000 	ldrsh.w	r1, [r5]
9001d46e:	2fff      	cmp	r7, #255	@ 0xff
9001d470:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001d474:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001d478:	fb04 1303 	mla	r3, r4, r3, r1
9001d47c:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001d480:	eba4 0200 	sub.w	r2, r4, r0
9001d484:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001d488:	fb04 f505 	mul.w	r5, r4, r5
9001d48c:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001d490:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001d494:	d04a      	beq.n	9001d52c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001d496:	b2bc      	uxth	r4, r7
9001d498:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
9001d49c:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001d4a0:	fa5f f788 	uxtb.w	r7, r8
9001d4a4:	b2f3      	uxtb	r3, r6
9001d4a6:	0040      	lsls	r0, r0, #1
9001d4a8:	fb0e fe04 	mul.w	lr, lr, r4
9001d4ac:	4367      	muls	r7, r4
9001d4ae:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001d4b2:	4363      	muls	r3, r4
9001d4b4:	fa1f fc8c 	uxth.w	ip, ip
9001d4b8:	42a9      	cmp	r1, r5
9001d4ba:	d27b      	bcs.n	9001d5b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001d4bc:	eb01 0900 	add.w	r9, r1, r0
9001d4c0:	4549      	cmp	r1, r9
9001d4c2:	d231      	bcs.n	9001d528 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001d4c4:	880a      	ldrh	r2, [r1, #0]
9001d4c6:	1214      	asrs	r4, r2, #8
9001d4c8:	10d6      	asrs	r6, r2, #3
9001d4ca:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9001d4ce:	00d2      	lsls	r2, r2, #3
9001d4d0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d4d4:	b2d2      	uxtb	r2, r2
9001d4d6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001d4da:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001d4de:	fb14 f40c 	smulbb	r4, r4, ip
9001d4e2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001d4e6:	fb12 f20c 	smulbb	r2, r2, ip
9001d4ea:	fb16 f60c 	smulbb	r6, r6, ip
9001d4ee:	4474      	add	r4, lr
9001d4f0:	441a      	add	r2, r3
9001d4f2:	b2a4      	uxth	r4, r4
9001d4f4:	443e      	add	r6, r7
9001d4f6:	b292      	uxth	r2, r2
9001d4f8:	f104 0a01 	add.w	sl, r4, #1
9001d4fc:	b2b6      	uxth	r6, r6
9001d4fe:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001d502:	f102 0a01 	add.w	sl, r2, #1
9001d506:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001d50a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9001d50e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001d512:	4322      	orrs	r2, r4
9001d514:	1c74      	adds	r4, r6, #1
9001d516:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001d51a:	0976      	lsrs	r6, r6, #5
9001d51c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001d520:	4332      	orrs	r2, r6
9001d522:	f821 2b02 	strh.w	r2, [r1], #2
9001d526:	e7cb      	b.n	9001d4c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001d528:	4441      	add	r1, r8
9001d52a:	e7c5      	b.n	9001d4b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001d52c:	0973      	lsrs	r3, r6, #5
9001d52e:	4f22      	ldr	r7, [pc, #136]	@ (9001d5b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001d530:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001d534:	ea08 0707 	and.w	r7, r8, r7
9001d538:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001d53c:	433b      	orrs	r3, r7
9001d53e:	07e7      	lsls	r7, r4, #31
9001d540:	ea43 0306 	orr.w	r3, r3, r6
9001d544:	b29b      	uxth	r3, r3
9001d546:	d50b      	bpl.n	9001d560 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001d548:	0040      	lsls	r0, r0, #1
9001d54a:	0052      	lsls	r2, r2, #1
9001d54c:	42a9      	cmp	r1, r5
9001d54e:	d231      	bcs.n	9001d5b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001d550:	180c      	adds	r4, r1, r0
9001d552:	42a1      	cmp	r1, r4
9001d554:	d202      	bcs.n	9001d55c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001d556:	f821 3b02 	strh.w	r3, [r1], #2
9001d55a:	e7fa      	b.n	9001d552 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001d55c:	4411      	add	r1, r2
9001d55e:	e7f5      	b.n	9001d54c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001d560:	078e      	lsls	r6, r1, #30
9001d562:	d008      	beq.n	9001d576 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001d564:	0066      	lsls	r6, r4, #1
9001d566:	460a      	mov	r2, r1
9001d568:	42aa      	cmp	r2, r5
9001d56a:	d202      	bcs.n	9001d572 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001d56c:	8013      	strh	r3, [r2, #0]
9001d56e:	4432      	add	r2, r6
9001d570:	e7fa      	b.n	9001d568 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001d572:	3102      	adds	r1, #2
9001d574:	3801      	subs	r0, #1
9001d576:	07c2      	lsls	r2, r0, #31
9001d578:	d50b      	bpl.n	9001d592 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001d57a:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
9001d57e:	0066      	lsls	r6, r4, #1
9001d580:	3a01      	subs	r2, #1
9001d582:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001d586:	42aa      	cmp	r2, r5
9001d588:	d202      	bcs.n	9001d590 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001d58a:	8013      	strh	r3, [r2, #0]
9001d58c:	4432      	add	r2, r6
9001d58e:	e7fa      	b.n	9001d586 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001d590:	3801      	subs	r0, #1
9001d592:	b178      	cbz	r0, 9001d5b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001d594:	1040      	asrs	r0, r0, #1
9001d596:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001d59a:	0080      	lsls	r0, r0, #2
9001d59c:	0064      	lsls	r4, r4, #1
9001d59e:	42a9      	cmp	r1, r5
9001d5a0:	d208      	bcs.n	9001d5b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001d5a2:	180e      	adds	r6, r1, r0
9001d5a4:	460a      	mov	r2, r1
9001d5a6:	42b2      	cmp	r2, r6
9001d5a8:	d202      	bcs.n	9001d5b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001d5aa:	f842 3b04 	str.w	r3, [r2], #4
9001d5ae:	e7fa      	b.n	9001d5a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001d5b0:	4421      	add	r1, r4
9001d5b2:	e7f4      	b.n	9001d59e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001d5b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001d5b8:	00fff800 	.word	0x00fff800

9001d5bc <_ZN8touchgfx8LCD16bppC1Ev>:
9001d5bc:	2200      	movs	r2, #0
9001d5be:	4912      	ldr	r1, [pc, #72]	@ (9001d608 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001d5c0:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001d5c4:	6001      	str	r1, [r0, #0]
9001d5c6:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001d5ca:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001d5ce:	e9c0 2207 	strd	r2, r2, [r0, #28]
9001d5d2:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
9001d5d6:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
9001d5da:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
9001d5de:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
9001d5e2:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
9001d5e6:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
9001d5ea:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
9001d5ee:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
9001d5f2:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
9001d5f6:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
9001d5fa:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
9001d5fe:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
9001d602:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
9001d606:	4770      	bx	lr
9001d608:	90035eb4 	.word	0x90035eb4

9001d60c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001d60c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d610:	b08d      	sub	sp, #52	@ 0x34
9001d612:	460d      	mov	r5, r1
9001d614:	4604      	mov	r4, r0
9001d616:	4699      	mov	r9, r3
9001d618:	6808      	ldr	r0, [r1, #0]
9001d61a:	ab08      	add	r3, sp, #32
9001d61c:	6849      	ldr	r1, [r1, #4]
9001d61e:	c303      	stmia	r3!, {r0, r1}
9001d620:	6810      	ldr	r0, [r2, #0]
9001d622:	ab0a      	add	r3, sp, #40	@ 0x28
9001d624:	6851      	ldr	r1, [r2, #4]
9001d626:	c303      	stmia	r3!, {r0, r1}
9001d628:	a808      	add	r0, sp, #32
9001d62a:	f7f7 fb99 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d62e:	4629      	mov	r1, r5
9001d630:	a80a      	add	r0, sp, #40	@ 0x28
9001d632:	4d67      	ldr	r5, [pc, #412]	@ (9001d7d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001d634:	f7f7 fbbc 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d638:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
9001d63c:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
9001d640:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
9001d644:	6828      	ldr	r0, [r5, #0]
9001d646:	fb11 2103 	smlabb	r1, r1, r3, r2
9001d64a:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
9001d64e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001d652:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001d656:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001d65a:	440a      	add	r2, r1
9001d65c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001d660:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
9001d664:	4413      	add	r3, r2
9001d666:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001d66a:	6803      	ldr	r3, [r0, #0]
9001d66c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001d66e:	4798      	blx	r3
9001d670:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001d674:	d119      	bne.n	9001d6aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001d676:	f010 0f20 	tst.w	r0, #32
9001d67a:	6828      	ldr	r0, [r5, #0]
9001d67c:	d018      	beq.n	9001d6b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001d67e:	2500      	movs	r5, #0
9001d680:	6801      	ldr	r1, [r0, #0]
9001d682:	b2b6      	uxth	r6, r6
9001d684:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001d688:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001d68c:	9601      	str	r6, [sp, #4]
9001d68e:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001d692:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
9001d696:	9502      	str	r5, [sp, #8]
9001d698:	fa1f f588 	uxth.w	r5, r8
9001d69c:	9500      	str	r5, [sp, #0]
9001d69e:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
9001d6a0:	4621      	mov	r1, r4
9001d6a2:	47a8      	blx	r5
9001d6a4:	b00d      	add	sp, #52	@ 0x34
9001d6a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d6aa:	f010 0f40 	tst.w	r0, #64	@ 0x40
9001d6ae:	e7e4      	b.n	9001d67a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001d6b0:	6803      	ldr	r3, [r0, #0]
9001d6b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d6b4:	4798      	blx	r3
9001d6b6:	4947      	ldr	r1, [pc, #284]	@ (9001d7d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001d6b8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001d6bc:	880b      	ldrh	r3, [r1, #0]
9001d6be:	468a      	mov	sl, r1
9001d6c0:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
9001d6c4:	fb03 5202 	mla	r2, r3, r2, r5
9001d6c8:	4373      	muls	r3, r6
9001d6ca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001d6ce:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d6d2:	9307      	str	r3, [sp, #28]
9001d6d4:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001d6d8:	9306      	str	r3, [sp, #24]
9001d6da:	9b07      	ldr	r3, [sp, #28]
9001d6dc:	4298      	cmp	r0, r3
9001d6de:	d270      	bcs.n	9001d7c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001d6e0:	9b06      	ldr	r3, [sp, #24]
9001d6e2:	4621      	mov	r1, r4
9001d6e4:	eb00 0b03 	add.w	fp, r0, r3
9001d6e8:	4558      	cmp	r0, fp
9001d6ea:	d25d      	bcs.n	9001d7a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001d6ec:	f851 4b04 	ldr.w	r4, [r1], #4
9001d6f0:	0e23      	lsrs	r3, r4, #24
9001d6f2:	d014      	beq.n	9001d71e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001d6f4:	2bff      	cmp	r3, #255	@ 0xff
9001d6f6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001d6fa:	d112      	bne.n	9001d722 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001d6fc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001d700:	d10f      	bne.n	9001d722 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001d702:	0963      	lsrs	r3, r4, #5
9001d704:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
9001d708:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001d70c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001d710:	f02c 0c07 	bic.w	ip, ip, #7
9001d714:	ea43 0c0c 	orr.w	ip, r3, ip
9001d718:	ea4c 0404 	orr.w	r4, ip, r4
9001d71c:	8004      	strh	r4, [r0, #0]
9001d71e:	3002      	adds	r0, #2
9001d720:	e7e2      	b.n	9001d6e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001d722:	fb09 f303 	mul.w	r3, r9, r3
9001d726:	8807      	ldrh	r7, [r0, #0]
9001d728:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001d72c:	fa5f fc8c 	uxtb.w	ip, ip
9001d730:	1c5a      	adds	r2, r3, #1
9001d732:	123e      	asrs	r6, r7, #8
9001d734:	10fd      	asrs	r5, r7, #3
9001d736:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001d73a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d73e:	00ff      	lsls	r7, r7, #3
9001d740:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001d744:	1212      	asrs	r2, r2, #8
9001d746:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001d74a:	b293      	uxth	r3, r2
9001d74c:	43d2      	mvns	r2, r2
9001d74e:	b2ff      	uxtb	r7, r7
9001d750:	fb1e fe03 	smulbb	lr, lr, r3
9001d754:	b2d2      	uxtb	r2, r2
9001d756:	fb1c fc03 	smulbb	ip, ip, r3
9001d75a:	b2e4      	uxtb	r4, r4
9001d75c:	fb06 e602 	mla	r6, r6, r2, lr
9001d760:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001d764:	fb14 f403 	smulbb	r4, r4, r3
9001d768:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001d76c:	b2b6      	uxth	r6, r6
9001d76e:	fb05 c502 	mla	r5, r5, r2, ip
9001d772:	fb07 4702 	mla	r7, r7, r2, r4
9001d776:	f106 0e01 	add.w	lr, r6, #1
9001d77a:	b2ad      	uxth	r5, r5
9001d77c:	b2bf      	uxth	r7, r7
9001d77e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001d782:	f105 0c01 	add.w	ip, r5, #1
9001d786:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
9001d78a:	1c7e      	adds	r6, r7, #1
9001d78c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001d790:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001d794:	096d      	lsrs	r5, r5, #5
9001d796:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001d79a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001d79e:	ea46 060e 	orr.w	r6, r6, lr
9001d7a2:	432e      	orrs	r6, r5
9001d7a4:	8006      	strh	r6, [r0, #0]
9001d7a6:	e7ba      	b.n	9001d71e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001d7a8:	f8ba 3000 	ldrh.w	r3, [sl]
9001d7ac:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
9001d7b0:	eba3 0308 	sub.w	r3, r3, r8
9001d7b4:	eba4 0408 	sub.w	r4, r4, r8
9001d7b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d7bc:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001d7c0:	e78b      	b.n	9001d6da <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001d7c2:	4b03      	ldr	r3, [pc, #12]	@ (9001d7d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001d7c4:	6818      	ldr	r0, [r3, #0]
9001d7c6:	6803      	ldr	r3, [r0, #0]
9001d7c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d7ca:	4798      	blx	r3
9001d7cc:	e76a      	b.n	9001d6a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001d7ce:	bf00      	nop
9001d7d0:	2001aa40 	.word	0x2001aa40
9001d7d4:	2001aa38 	.word	0x2001aa38

9001d7d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001d7d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001d7dc:	b085      	sub	sp, #20
9001d7de:	6810      	ldr	r0, [r2, #0]
9001d7e0:	460c      	mov	r4, r1
9001d7e2:	6851      	ldr	r1, [r2, #4]
9001d7e4:	466d      	mov	r5, sp
9001d7e6:	4616      	mov	r6, r2
9001d7e8:	c503      	stmia	r5!, {r0, r1}
9001d7ea:	6818      	ldr	r0, [r3, #0]
9001d7ec:	6859      	ldr	r1, [r3, #4]
9001d7ee:	c503      	stmia	r5!, {r0, r1}
9001d7f0:	4668      	mov	r0, sp
9001d7f2:	4d2e      	ldr	r5, [pc, #184]	@ (9001d8ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001d7f4:	f7f7 fab4 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d7f8:	4631      	mov	r1, r6
9001d7fa:	a802      	add	r0, sp, #8
9001d7fc:	4e2c      	ldr	r6, [pc, #176]	@ (9001d8b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001d7fe:	f7f7 fad7 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d802:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001d806:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001d80a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001d80e:	6828      	ldr	r0, [r5, #0]
9001d810:	fb11 2103 	smlabb	r1, r1, r3, r2
9001d814:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001d818:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001d81c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001d820:	f8bd 1000 	ldrh.w	r1, [sp]
9001d824:	440a      	add	r2, r1
9001d826:	f8ad 2008 	strh.w	r2, [sp, #8]
9001d82a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001d82e:	4413      	add	r3, r2
9001d830:	f8ad 300a 	strh.w	r3, [sp, #10]
9001d834:	6803      	ldr	r3, [r0, #0]
9001d836:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d838:	4798      	blx	r3
9001d83a:	8833      	ldrh	r3, [r6, #0]
9001d83c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001d840:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001d844:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001d848:	f8df e068 	ldr.w	lr, [pc, #104]	@ 9001d8b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001d84c:	fb03 1202 	mla	r2, r3, r2, r1
9001d850:	fb08 f303 	mul.w	r3, r8, r3
9001d854:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001d858:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d85c:	4298      	cmp	r0, r3
9001d85e:	d21d      	bcs.n	9001d89c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001d860:	eb00 080c 	add.w	r8, r0, ip
9001d864:	4540      	cmp	r0, r8
9001d866:	d20f      	bcs.n	9001d888 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001d868:	f854 1b04 	ldr.w	r1, [r4], #4
9001d86c:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001d870:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001d874:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001d878:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001d87c:	ea42 0209 	orr.w	r2, r2, r9
9001d880:	430a      	orrs	r2, r1
9001d882:	f820 2b02 	strh.w	r2, [r0], #2
9001d886:	e7ed      	b.n	9001d864 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001d888:	8832      	ldrh	r2, [r6, #0]
9001d88a:	1bd2      	subs	r2, r2, r7
9001d88c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001d890:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001d894:	1bd2      	subs	r2, r2, r7
9001d896:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001d89a:	e7df      	b.n	9001d85c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001d89c:	6828      	ldr	r0, [r5, #0]
9001d89e:	6803      	ldr	r3, [r0, #0]
9001d8a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d8a2:	4798      	blx	r3
9001d8a4:	b005      	add	sp, #20
9001d8a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001d8aa:	bf00      	nop
9001d8ac:	2001aa40 	.word	0x2001aa40
9001d8b0:	2001aa38 	.word	0x2001aa38
9001d8b4:	fffff800 	.word	0xfffff800

9001d8b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001d8b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001d8bc:	b08e      	sub	sp, #56	@ 0x38
9001d8be:	460e      	mov	r6, r1
9001d8c0:	4604      	mov	r4, r0
9001d8c2:	461d      	mov	r5, r3
9001d8c4:	6808      	ldr	r0, [r1, #0]
9001d8c6:	ab0a      	add	r3, sp, #40	@ 0x28
9001d8c8:	6849      	ldr	r1, [r1, #4]
9001d8ca:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 9001daa0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001d8ce:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 9001daa4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001d8d2:	c303      	stmia	r3!, {r0, r1}
9001d8d4:	6810      	ldr	r0, [r2, #0]
9001d8d6:	ab0c      	add	r3, sp, #48	@ 0x30
9001d8d8:	6851      	ldr	r1, [r2, #4]
9001d8da:	c303      	stmia	r3!, {r0, r1}
9001d8dc:	a80a      	add	r0, sp, #40	@ 0x28
9001d8de:	f7f7 fa3f 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d8e2:	4631      	mov	r1, r6
9001d8e4:	a80c      	add	r0, sp, #48	@ 0x30
9001d8e6:	f7f7 fa63 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d8ea:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001d8ee:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001d8f2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001d8f6:	f8d8 0000 	ldr.w	r0, [r8]
9001d8fa:	fb11 2103 	smlabb	r1, r1, r3, r2
9001d8fe:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
9001d902:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001d906:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001d90a:	440c      	add	r4, r1
9001d90c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
9001d910:	440a      	add	r2, r1
9001d912:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9001d916:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001d91a:	4413      	add	r3, r2
9001d91c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001d920:	6803      	ldr	r3, [r0, #0]
9001d922:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001d924:	4798      	blx	r3
9001d926:	2dff      	cmp	r5, #255	@ 0xff
9001d928:	d124      	bne.n	9001d974 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001d92a:	f010 0f01 	tst.w	r0, #1
9001d92e:	f8d8 0000 	ldr.w	r0, [r8]
9001d932:	d022      	beq.n	9001d97a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001d934:	2100      	movs	r1, #0
9001d936:	f04f 0e01 	mov.w	lr, #1
9001d93a:	f8d0 c000 	ldr.w	ip, [r0]
9001d93e:	b2b6      	uxth	r6, r6
9001d940:	f8cd e018 	str.w	lr, [sp, #24]
9001d944:	b2bf      	uxth	r7, r7
9001d946:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
9001d94a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
9001d94e:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001d952:	f8b9 e000 	ldrh.w	lr, [r9]
9001d956:	9503      	str	r5, [sp, #12]
9001d958:	9601      	str	r6, [sp, #4]
9001d95a:	9700      	str	r7, [sp, #0]
9001d95c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001d960:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001d964:	9102      	str	r1, [sp, #8]
9001d966:	4621      	mov	r1, r4
9001d968:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
9001d96c:	47a8      	blx	r5
9001d96e:	b00e      	add	sp, #56	@ 0x38
9001d970:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001d974:	f010 0f04 	tst.w	r0, #4
9001d978:	e7d9      	b.n	9001d92e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001d97a:	6803      	ldr	r3, [r0, #0]
9001d97c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d97e:	4798      	blx	r3
9001d980:	f8b9 3000 	ldrh.w	r3, [r9]
9001d984:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001d988:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001d98c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
9001d990:	435e      	muls	r6, r3
9001d992:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001d996:	2dff      	cmp	r5, #255	@ 0xff
9001d998:	fb03 1202 	mla	r2, r3, r2, r1
9001d99c:	ebac 0c07 	sub.w	ip, ip, r7
9001d9a0:	eba3 0707 	sub.w	r7, r3, r7
9001d9a4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001d9a8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001d9ac:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001d9b0:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001d9b4:	d049      	beq.n	9001da4a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001d9b6:	43eb      	mvns	r3, r5
9001d9b8:	fa1f f985 	uxth.w	r9, r5
9001d9bc:	b2db      	uxtb	r3, r3
9001d9be:	42b0      	cmp	r0, r6
9001d9c0:	d266      	bcs.n	9001da90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001d9c2:	eb00 0a0e 	add.w	sl, r0, lr
9001d9c6:	4550      	cmp	r0, sl
9001d9c8:	4621      	mov	r1, r4
9001d9ca:	f104 0403 	add.w	r4, r4, #3
9001d9ce:	d25b      	bcs.n	9001da88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001d9d0:	8802      	ldrh	r2, [r0, #0]
9001d9d2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001d9d6:	ea4f 2822 	mov.w	r8, r2, asr #8
9001d9da:	fb11 f109 	smulbb	r1, r1, r9
9001d9de:	10d5      	asrs	r5, r2, #3
9001d9e0:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001d9e4:	00d2      	lsls	r2, r2, #3
9001d9e6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001d9ea:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001d9ee:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001d9f2:	fb08 1803 	mla	r8, r8, r3, r1
9001d9f6:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001d9fa:	b2d2      	uxtb	r2, r2
9001d9fc:	fb11 f109 	smulbb	r1, r1, r9
9001da00:	fa1f f888 	uxth.w	r8, r8
9001da04:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001da08:	fb05 1503 	mla	r5, r5, r3, r1
9001da0c:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001da10:	fb11 f109 	smulbb	r1, r1, r9
9001da14:	b2ad      	uxth	r5, r5
9001da16:	fb02 1203 	mla	r2, r2, r3, r1
9001da1a:	f108 0101 	add.w	r1, r8, #1
9001da1e:	b292      	uxth	r2, r2
9001da20:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001da24:	1c51      	adds	r1, r2, #1
9001da26:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001da2a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001da2e:	1c69      	adds	r1, r5, #1
9001da30:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001da34:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001da38:	096d      	lsrs	r5, r5, #5
9001da3a:	ea42 0208 	orr.w	r2, r2, r8
9001da3e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001da42:	432a      	orrs	r2, r5
9001da44:	f820 2b02 	strh.w	r2, [r0], #2
9001da48:	e7bd      	b.n	9001d9c6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001da4a:	4a14      	ldr	r2, [pc, #80]	@ (9001da9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001da4c:	42b0      	cmp	r0, r6
9001da4e:	d21f      	bcs.n	9001da90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001da50:	eb00 050e 	add.w	r5, r0, lr
9001da54:	42a8      	cmp	r0, r5
9001da56:	4621      	mov	r1, r4
9001da58:	f104 0403 	add.w	r4, r4, #3
9001da5c:	d210      	bcs.n	9001da80 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001da5e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001da62:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001da66:	00db      	lsls	r3, r3, #3
9001da68:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001da6c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001da70:	430b      	orrs	r3, r1
9001da72:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001da76:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001da7a:	f820 3b02 	strh.w	r3, [r0], #2
9001da7e:	e7e9      	b.n	9001da54 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001da80:	4438      	add	r0, r7
9001da82:	eb01 040c 	add.w	r4, r1, ip
9001da86:	e7e1      	b.n	9001da4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001da88:	4438      	add	r0, r7
9001da8a:	eb01 040c 	add.w	r4, r1, ip
9001da8e:	e796      	b.n	9001d9be <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001da90:	4b03      	ldr	r3, [pc, #12]	@ (9001daa0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001da92:	6818      	ldr	r0, [r3, #0]
9001da94:	6803      	ldr	r3, [r0, #0]
9001da96:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001da98:	4798      	blx	r3
9001da9a:	e768      	b.n	9001d96e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001da9c:	fffff800 	.word	0xfffff800
9001daa0:	2001aa40 	.word	0x2001aa40
9001daa4:	2001aa38 	.word	0x2001aa38

9001daa8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001daa8:	b4f0      	push	{r4, r5, r6, r7}
9001daaa:	4616      	mov	r6, r2
9001daac:	461c      	mov	r4, r3
9001daae:	460d      	mov	r5, r1
9001dab0:	9a04      	ldr	r2, [sp, #16]
9001dab2:	2e01      	cmp	r6, #1
9001dab4:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001dab8:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001dabc:	d012      	beq.n	9001dae4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001dabe:	d303      	bcc.n	9001dac8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001dac0:	2e02      	cmp	r6, #2
9001dac2:	d00a      	beq.n	9001dada <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001dac4:	bcf0      	pop	{r4, r5, r6, r7}
9001dac6:	4770      	bx	lr
9001dac8:	6805      	ldr	r5, [r0, #0]
9001daca:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001dace:	68ed      	ldr	r5, [r5, #12]
9001dad0:	4613      	mov	r3, r2
9001dad2:	4622      	mov	r2, r4
9001dad4:	46ac      	mov	ip, r5
9001dad6:	bcf0      	pop	{r4, r5, r6, r7}
9001dad8:	4760      	bx	ip
9001dada:	4621      	mov	r1, r4
9001dadc:	4628      	mov	r0, r5
9001dade:	bcf0      	pop	{r4, r5, r6, r7}
9001dae0:	f7ff bd94 	b.w	9001d60c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001dae4:	4621      	mov	r1, r4
9001dae6:	4628      	mov	r0, r5
9001dae8:	bcf0      	pop	{r4, r5, r6, r7}
9001daea:	f7ff bee5 	b.w	9001d8b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001daf0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001daf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001daf4:	b093      	sub	sp, #76	@ 0x4c
9001daf6:	4681      	mov	r9, r0
9001daf8:	4688      	mov	r8, r1
9001dafa:	6810      	ldr	r0, [r2, #0]
9001dafc:	6851      	ldr	r1, [r2, #4]
9001dafe:	ac0e      	add	r4, sp, #56	@ 0x38
9001db00:	4616      	mov	r6, r2
9001db02:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
9001db06:	4f6b      	ldr	r7, [pc, #428]	@ (9001dcb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001db08:	c403      	stmia	r4!, {r0, r1}
9001db0a:	6818      	ldr	r0, [r3, #0]
9001db0c:	ac10      	add	r4, sp, #64	@ 0x40
9001db0e:	6859      	ldr	r1, [r3, #4]
9001db10:	c403      	stmia	r4!, {r0, r1}
9001db12:	a80e      	add	r0, sp, #56	@ 0x38
9001db14:	f7f7 f924 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001db18:	4631      	mov	r1, r6
9001db1a:	a810      	add	r0, sp, #64	@ 0x40
9001db1c:	4e66      	ldr	r6, [pc, #408]	@ (9001dcb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001db1e:	f7f7 f947 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001db22:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001db26:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001db2a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
9001db2e:	6830      	ldr	r0, [r6, #0]
9001db30:	fb11 2103 	smlabb	r1, r1, r3, r2
9001db34:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
9001db38:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001db3c:	4489      	add	r9, r1
9001db3e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
9001db42:	440a      	add	r2, r1
9001db44:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
9001db48:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001db4c:	4413      	add	r3, r2
9001db4e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001db52:	6803      	ldr	r3, [r0, #0]
9001db54:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001db56:	4798      	blx	r3
9001db58:	f010 0f80 	tst.w	r0, #128	@ 0x80
9001db5c:	6830      	ldr	r0, [r6, #0]
9001db5e:	d01d      	beq.n	9001db9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001db60:	2200      	movs	r2, #0
9001db62:	6801      	ldr	r1, [r0, #0]
9001db64:	b2a4      	uxth	r4, r4
9001db66:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
9001db6a:	b2ad      	uxth	r5, r5
9001db6c:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001db70:	220b      	movs	r2, #11
9001db72:	9207      	str	r2, [sp, #28]
9001db74:	883a      	ldrh	r2, [r7, #0]
9001db76:	9502      	str	r5, [sp, #8]
9001db78:	9206      	str	r2, [sp, #24]
9001db7a:	2201      	movs	r2, #1
9001db7c:	9401      	str	r4, [sp, #4]
9001db7e:	e9cd a204 	strd	sl, r2, [sp, #16]
9001db82:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
9001db86:	9203      	str	r2, [sp, #12]
9001db88:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
9001db8c:	9200      	str	r2, [sp, #0]
9001db8e:	4642      	mov	r2, r8
9001db90:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
9001db92:	4649      	mov	r1, r9
9001db94:	47a0      	blx	r4
9001db96:	b013      	add	sp, #76	@ 0x4c
9001db98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001db9c:	6803      	ldr	r3, [r0, #0]
9001db9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001dba0:	4798      	blx	r3
9001dba2:	883b      	ldrh	r3, [r7, #0]
9001dba4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001dba8:	f04f 0e04 	mov.w	lr, #4
9001dbac:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
9001dbb0:	435d      	muls	r5, r3
9001dbb2:	fb03 1202 	mla	r2, r3, r2, r1
9001dbb6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001dbba:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001dbbe:	920c      	str	r2, [sp, #48]	@ 0x30
9001dbc0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001dbc4:	1b12      	subs	r2, r2, r4
9001dbc6:	920d      	str	r2, [sp, #52]	@ 0x34
9001dbc8:	0062      	lsls	r2, r4, #1
9001dbca:	1b1c      	subs	r4, r3, r4
9001dbcc:	920a      	str	r2, [sp, #40]	@ 0x28
9001dbce:	0063      	lsls	r3, r4, #1
9001dbd0:	930b      	str	r3, [sp, #44]	@ 0x2c
9001dbd2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001dbd4:	4298      	cmp	r0, r3
9001dbd6:	d266      	bcs.n	9001dca6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001dbd8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001dbda:	eb00 0b03 	add.w	fp, r0, r3
9001dbde:	4558      	cmp	r0, fp
9001dbe0:	d25c      	bcs.n	9001dc9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001dbe2:	f819 3b01 	ldrb.w	r3, [r9], #1
9001dbe6:	fb1e e303 	smlabb	r3, lr, r3, lr
9001dbea:	f858 2003 	ldr.w	r2, [r8, r3]
9001dbee:	0e11      	lsrs	r1, r2, #24
9001dbf0:	d012      	beq.n	9001dc18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001dbf2:	29ff      	cmp	r1, #255	@ 0xff
9001dbf4:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001dbf8:	d110      	bne.n	9001dc1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001dbfa:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001dbfe:	d10d      	bne.n	9001dc1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001dc00:	0953      	lsrs	r3, r2, #5
9001dc02:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
9001dc06:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001dc0a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001dc0e:	f027 0707 	bic.w	r7, r7, #7
9001dc12:	431f      	orrs	r7, r3
9001dc14:	433a      	orrs	r2, r7
9001dc16:	8002      	strh	r2, [r0, #0]
9001dc18:	3002      	adds	r0, #2
9001dc1a:	e7e0      	b.n	9001dbde <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001dc1c:	fb0a f101 	mul.w	r1, sl, r1
9001dc20:	8806      	ldrh	r6, [r0, #0]
9001dc22:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001dc26:	b2d2      	uxtb	r2, r2
9001dc28:	1c4b      	adds	r3, r1, #1
9001dc2a:	1235      	asrs	r5, r6, #8
9001dc2c:	10f4      	asrs	r4, r6, #3
9001dc2e:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001dc32:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001dc36:	00f6      	lsls	r6, r6, #3
9001dc38:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
9001dc3c:	121b      	asrs	r3, r3, #8
9001dc3e:	b2f6      	uxtb	r6, r6
9001dc40:	b299      	uxth	r1, r3
9001dc42:	43db      	mvns	r3, r3
9001dc44:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001dc48:	fb1c fc01 	smulbb	ip, ip, r1
9001dc4c:	b2db      	uxtb	r3, r3
9001dc4e:	fb12 f201 	smulbb	r2, r2, r1
9001dc52:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001dc56:	fb05 c503 	mla	r5, r5, r3, ip
9001dc5a:	b2ff      	uxtb	r7, r7
9001dc5c:	fb06 2203 	mla	r2, r6, r3, r2
9001dc60:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001dc64:	fb17 f701 	smulbb	r7, r7, r1
9001dc68:	b2ad      	uxth	r5, r5
9001dc6a:	b292      	uxth	r2, r2
9001dc6c:	fb04 7403 	mla	r4, r4, r3, r7
9001dc70:	f105 0c01 	add.w	ip, r5, #1
9001dc74:	1c57      	adds	r7, r2, #1
9001dc76:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001dc7a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001dc7e:	b2a4      	uxth	r4, r4
9001dc80:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001dc84:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001dc88:	433d      	orrs	r5, r7
9001dc8a:	1c67      	adds	r7, r4, #1
9001dc8c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001dc90:	0964      	lsrs	r4, r4, #5
9001dc92:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9001dc96:	4325      	orrs	r5, r4
9001dc98:	8005      	strh	r5, [r0, #0]
9001dc9a:	e7bd      	b.n	9001dc18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001dc9c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001dc9e:	4418      	add	r0, r3
9001dca0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001dca2:	4499      	add	r9, r3
9001dca4:	e795      	b.n	9001dbd2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001dca6:	4b04      	ldr	r3, [pc, #16]	@ (9001dcb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001dca8:	6818      	ldr	r0, [r3, #0]
9001dcaa:	6803      	ldr	r3, [r0, #0]
9001dcac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001dcae:	4798      	blx	r3
9001dcb0:	e771      	b.n	9001db96 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001dcb2:	bf00      	nop
9001dcb4:	2001aa38 	.word	0x2001aa38
9001dcb8:	2001aa40 	.word	0x2001aa40

9001dcbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001dcbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001dcc0:	b087      	sub	sp, #28
9001dcc2:	4680      	mov	r8, r0
9001dcc4:	460d      	mov	r5, r1
9001dcc6:	4614      	mov	r4, r2
9001dcc8:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
9001dccc:	2e00      	cmp	r6, #0
9001dcce:	f000 80b9 	beq.w	9001de44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001dcd2:	6810      	ldr	r0, [r2, #0]
9001dcd4:	af02      	add	r7, sp, #8
9001dcd6:	6851      	ldr	r1, [r2, #4]
9001dcd8:	c703      	stmia	r7!, {r0, r1}
9001dcda:	6818      	ldr	r0, [r3, #0]
9001dcdc:	af04      	add	r7, sp, #16
9001dcde:	6859      	ldr	r1, [r3, #4]
9001dce0:	c703      	stmia	r7!, {r0, r1}
9001dce2:	a802      	add	r0, sp, #8
9001dce4:	f7f7 f83c 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001dce8:	4621      	mov	r1, r4
9001dcea:	a804      	add	r0, sp, #16
9001dcec:	f7f7 f860 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001dcf0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001dcf4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001dcf8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001dcfc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001dd00:	fb14 2103 	smlabb	r1, r4, r3, r2
9001dd04:	eb08 0401 	add.w	r4, r8, r1
9001dd08:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001dd0c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001dd10:	440a      	add	r2, r1
9001dd12:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001dd16:	f8ad 2010 	strh.w	r2, [sp, #16]
9001dd1a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001dd1e:	4413      	add	r3, r2
9001dd20:	f8ad 3012 	strh.w	r3, [sp, #18]
9001dd24:	4b49      	ldr	r3, [pc, #292]	@ (9001de4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001dd26:	6818      	ldr	r0, [r3, #0]
9001dd28:	6803      	ldr	r3, [r0, #0]
9001dd2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001dd2c:	4798      	blx	r3
9001dd2e:	4b48      	ldr	r3, [pc, #288]	@ (9001de50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001dd30:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001dd34:	2eff      	cmp	r6, #255	@ 0xff
9001dd36:	881a      	ldrh	r2, [r3, #0]
9001dd38:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001dd3c:	fb02 c101 	mla	r1, r2, r1, ip
9001dd40:	fb02 f207 	mul.w	r2, r2, r7
9001dd44:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001dd48:	f105 0104 	add.w	r1, r5, #4
9001dd4c:	461d      	mov	r5, r3
9001dd4e:	d05a      	beq.n	9001de06 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001dd50:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
9001dd54:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001dd58:	b2b6      	uxth	r6, r6
9001dd5a:	9301      	str	r3, [sp, #4]
9001dd5c:	fa1f fe8e 	uxth.w	lr, lr
9001dd60:	4282      	cmp	r2, r0
9001dd62:	d96a      	bls.n	9001de3a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001dd64:	eb00 0b0a 	add.w	fp, r0, sl
9001dd68:	4583      	cmp	fp, r0
9001dd6a:	d940      	bls.n	9001ddee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001dd6c:	8805      	ldrh	r5, [r0, #0]
9001dd6e:	f814 3b01 	ldrb.w	r3, [r4], #1
9001dd72:	122f      	asrs	r7, r5, #8
9001dd74:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001dd78:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001dd7c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001dd80:	00ed      	lsls	r5, r5, #3
9001dd82:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001dd86:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001dd8a:	fb17 f70e 	smulbb	r7, r7, lr
9001dd8e:	b2ed      	uxtb	r5, r5
9001dd90:	fb19 f90e 	smulbb	r9, r9, lr
9001dd94:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001dd98:	fb15 f50e 	smulbb	r5, r5, lr
9001dd9c:	fb0c 7c06 	mla	ip, ip, r6, r7
9001dda0:	10df      	asrs	r7, r3, #3
9001dda2:	00db      	lsls	r3, r3, #3
9001dda4:	fa1f fc8c 	uxth.w	ip, ip
9001dda8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ddac:	b2db      	uxtb	r3, r3
9001ddae:	fb07 9706 	mla	r7, r7, r6, r9
9001ddb2:	f10c 0901 	add.w	r9, ip, #1
9001ddb6:	fb03 5306 	mla	r3, r3, r6, r5
9001ddba:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001ddbe:	b29b      	uxth	r3, r3
9001ddc0:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
9001ddc4:	b2bf      	uxth	r7, r7
9001ddc6:	f103 0c01 	add.w	ip, r3, #1
9001ddca:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001ddce:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001ddd2:	ea4c 0c09 	orr.w	ip, ip, r9
9001ddd6:	f107 0901 	add.w	r9, r7, #1
9001ddda:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001ddde:	097f      	lsrs	r7, r7, #5
9001dde0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9001dde4:	ea4c 0c07 	orr.w	ip, ip, r7
9001dde8:	f820 cb02 	strh.w	ip, [r0], #2
9001ddec:	e7bc      	b.n	9001dd68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001ddee:	9b01      	ldr	r3, [sp, #4]
9001ddf0:	881b      	ldrh	r3, [r3, #0]
9001ddf2:	eba3 0308 	sub.w	r3, r3, r8
9001ddf6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ddfa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001ddfe:	eba3 0308 	sub.w	r3, r3, r8
9001de02:	441c      	add	r4, r3
9001de04:	e7ac      	b.n	9001dd60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9001de06:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001de0a:	4282      	cmp	r2, r0
9001de0c:	d915      	bls.n	9001de3a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001de0e:	eb00 060a 	add.w	r6, r0, sl
9001de12:	4286      	cmp	r6, r0
9001de14:	d906      	bls.n	9001de24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9001de16:	f814 3b01 	ldrb.w	r3, [r4], #1
9001de1a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001de1e:	f820 3b02 	strh.w	r3, [r0], #2
9001de22:	e7f6      	b.n	9001de12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9001de24:	882b      	ldrh	r3, [r5, #0]
9001de26:	eba3 0308 	sub.w	r3, r3, r8
9001de2a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001de2e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001de32:	eba3 0308 	sub.w	r3, r3, r8
9001de36:	441c      	add	r4, r3
9001de38:	e7e7      	b.n	9001de0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9001de3a:	4b04      	ldr	r3, [pc, #16]	@ (9001de4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001de3c:	6818      	ldr	r0, [r3, #0]
9001de3e:	6803      	ldr	r3, [r0, #0]
9001de40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001de42:	4798      	blx	r3
9001de44:	b007      	add	sp, #28
9001de46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001de4a:	bf00      	nop
9001de4c:	2001aa40 	.word	0x2001aa40
9001de50:	2001aa38 	.word	0x2001aa38

9001de54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9001de54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001de58:	b091      	sub	sp, #68	@ 0x44
9001de5a:	4680      	mov	r8, r0
9001de5c:	460f      	mov	r7, r1
9001de5e:	4614      	mov	r4, r2
9001de60:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
9001de64:	2d00      	cmp	r5, #0
9001de66:	d051      	beq.n	9001df0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001de68:	6810      	ldr	r0, [r2, #0]
9001de6a:	ae0c      	add	r6, sp, #48	@ 0x30
9001de6c:	6851      	ldr	r1, [r2, #4]
9001de6e:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 9001e070 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9001de72:	c603      	stmia	r6!, {r0, r1}
9001de74:	6818      	ldr	r0, [r3, #0]
9001de76:	ae0e      	add	r6, sp, #56	@ 0x38
9001de78:	6859      	ldr	r1, [r3, #4]
9001de7a:	c603      	stmia	r6!, {r0, r1}
9001de7c:	a80c      	add	r0, sp, #48	@ 0x30
9001de7e:	f7f6 ff6f 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001de82:	4621      	mov	r1, r4
9001de84:	a80e      	add	r0, sp, #56	@ 0x38
9001de86:	f7f6 ff93 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001de8a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
9001de8e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9001de92:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
9001de96:	f8d9 0000 	ldr.w	r0, [r9]
9001de9a:	fb11 2103 	smlabb	r1, r1, r3, r2
9001de9e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001dea2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
9001dea6:	eb08 0401 	add.w	r4, r8, r1
9001deaa:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001deae:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 9001e074 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9001deb2:	440a      	add	r2, r1
9001deb4:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
9001deb8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
9001debc:	4413      	add	r3, r2
9001debe:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
9001dec2:	6803      	ldr	r3, [r0, #0]
9001dec4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001dec6:	4798      	blx	r3
9001dec8:	f010 0f80 	tst.w	r0, #128	@ 0x80
9001decc:	f8d9 0000 	ldr.w	r0, [r9]
9001ded0:	d01f      	beq.n	9001df12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9001ded2:	2200      	movs	r2, #0
9001ded4:	6801      	ldr	r1, [r0, #0]
9001ded6:	b2b6      	uxth	r6, r6
9001ded8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001dedc:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001dee0:	220b      	movs	r2, #11
9001dee2:	9207      	str	r2, [sp, #28]
9001dee4:	f8b8 2000 	ldrh.w	r2, [r8]
9001dee8:	9601      	str	r6, [sp, #4]
9001deea:	9206      	str	r2, [sp, #24]
9001deec:	2201      	movs	r2, #1
9001deee:	e9cd 5204 	strd	r5, r2, [sp, #16]
9001def2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
9001def6:	9203      	str	r2, [sp, #12]
9001def8:	fa1f f28a 	uxth.w	r2, sl
9001defc:	9202      	str	r2, [sp, #8]
9001defe:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001df02:	9200      	str	r2, [sp, #0]
9001df04:	463a      	mov	r2, r7
9001df06:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
9001df08:	4621      	mov	r1, r4
9001df0a:	47a8      	blx	r5
9001df0c:	b011      	add	sp, #68	@ 0x44
9001df0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001df12:	6803      	ldr	r3, [r0, #0]
9001df14:	ea4f 0946 	mov.w	r9, r6, lsl #1
9001df18:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001df1a:	4798      	blx	r3
9001df1c:	f8b8 2000 	ldrh.w	r2, [r8]
9001df20:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9001df24:	2dff      	cmp	r5, #255	@ 0xff
9001df26:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
9001df2a:	fb0a fa02 	mul.w	sl, sl, r2
9001df2e:	fb02 1303 	mla	r3, r2, r3, r1
9001df32:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001df36:	d062      	beq.n	9001dffe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
9001df38:	ea6f 0c05 	mvn.w	ip, r5
9001df3c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9001df40:	b2ad      	uxth	r5, r5
9001df42:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
9001df46:	fa5f fc8c 	uxtb.w	ip, ip
9001df4a:	930a      	str	r3, [sp, #40]	@ 0x28
9001df4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001df4e:	4298      	cmp	r0, r3
9001df50:	f080 8085 	bcs.w	9001e05e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001df54:	eb00 0b09 	add.w	fp, r0, r9
9001df58:	4558      	cmp	r0, fp
9001df5a:	d246      	bcs.n	9001dfea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9001df5c:	f814 eb01 	ldrb.w	lr, [r4], #1
9001df60:	2303      	movs	r3, #3
9001df62:	2204      	movs	r2, #4
9001df64:	fb13 2e0e 	smlabb	lr, r3, lr, r2
9001df68:	8803      	ldrh	r3, [r0, #0]
9001df6a:	eb07 0a0e 	add.w	sl, r7, lr
9001df6e:	1219      	asrs	r1, r3, #8
9001df70:	10da      	asrs	r2, r3, #3
9001df72:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001df76:	f89a 8002 	ldrb.w	r8, [sl, #2]
9001df7a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9001df7e:	00db      	lsls	r3, r3, #3
9001df80:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9001df84:	fb18 f805 	smulbb	r8, r8, r5
9001df88:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001df8c:	fb1e fe05 	smulbb	lr, lr, r5
9001df90:	b2db      	uxtb	r3, r3
9001df92:	fb01 810c 	mla	r1, r1, ip, r8
9001df96:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001df9a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001df9e:	fb18 f805 	smulbb	r8, r8, r5
9001dfa2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9001dfa6:	b289      	uxth	r1, r1
9001dfa8:	fb02 820c 	mla	r2, r2, ip, r8
9001dfac:	fb03 e30c 	mla	r3, r3, ip, lr
9001dfb0:	f101 0801 	add.w	r8, r1, #1
9001dfb4:	b292      	uxth	r2, r2
9001dfb6:	b29b      	uxth	r3, r3
9001dfb8:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9001dfbc:	f102 0801 	add.w	r8, r2, #1
9001dfc0:	f103 0e01 	add.w	lr, r3, #1
9001dfc4:	eb08 2812 	add.w	r8, r8, r2, lsr #8
9001dfc8:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9001dfcc:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9001dfd0:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001dfd4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001dfd8:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001dfdc:	ea4e 0101 	orr.w	r1, lr, r1
9001dfe0:	ea41 0108 	orr.w	r1, r1, r8
9001dfe4:	f820 1b02 	strh.w	r1, [r0], #2
9001dfe8:	e7b6      	b.n	9001df58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9001dfea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001dfec:	881b      	ldrh	r3, [r3, #0]
9001dfee:	1b9b      	subs	r3, r3, r6
9001dff0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001dff4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001dff8:	1b9b      	subs	r3, r3, r6
9001dffa:	441c      	add	r4, r3
9001dffc:	e7a6      	b.n	9001df4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9001dffe:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9001e002:	2203      	movs	r2, #3
9001e004:	2504      	movs	r5, #4
9001e006:	4919      	ldr	r1, [pc, #100]	@ (9001e06c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
9001e008:	4550      	cmp	r0, sl
9001e00a:	d228      	bcs.n	9001e05e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001e00c:	eb00 0c09 	add.w	ip, r0, r9
9001e010:	4560      	cmp	r0, ip
9001e012:	4623      	mov	r3, r4
9001e014:	d219      	bcs.n	9001e04a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9001e016:	f893 e000 	ldrb.w	lr, [r3]
9001e01a:	3401      	adds	r4, #1
9001e01c:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9001e020:	eb07 0b0e 	add.w	fp, r7, lr
9001e024:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001e028:	f89b 3002 	ldrb.w	r3, [fp, #2]
9001e02c:	f89b b001 	ldrb.w	fp, [fp, #1]
9001e030:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9001e034:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
9001e038:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001e03c:	ea43 030b 	orr.w	r3, r3, fp
9001e040:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9001e044:	f820 3b02 	strh.w	r3, [r0], #2
9001e048:	e7e2      	b.n	9001e010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9001e04a:	f8b8 3000 	ldrh.w	r3, [r8]
9001e04e:	1b9b      	subs	r3, r3, r6
9001e050:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e054:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001e058:	1b9b      	subs	r3, r3, r6
9001e05a:	441c      	add	r4, r3
9001e05c:	e7d4      	b.n	9001e008 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9001e05e:	4b04      	ldr	r3, [pc, #16]	@ (9001e070 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9001e060:	6818      	ldr	r0, [r3, #0]
9001e062:	6803      	ldr	r3, [r0, #0]
9001e064:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e066:	4798      	blx	r3
9001e068:	e750      	b.n	9001df0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001e06a:	bf00      	nop
9001e06c:	fffff800 	.word	0xfffff800
9001e070:	2001aa40 	.word	0x2001aa40
9001e074:	2001aa38 	.word	0x2001aa38

9001e078 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
9001e078:	b4f0      	push	{r4, r5, r6, r7}
9001e07a:	460c      	mov	r4, r1
9001e07c:	4611      	mov	r1, r2
9001e07e:	f89d 5014 	ldrb.w	r5, [sp, #20]
9001e082:	461a      	mov	r2, r3
9001e084:	780f      	ldrb	r7, [r1, #0]
9001e086:	9b04      	ldr	r3, [sp, #16]
9001e088:	2f01      	cmp	r7, #1
9001e08a:	784e      	ldrb	r6, [r1, #1]
9001e08c:	d038      	beq.n	9001e100 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
9001e08e:	d31f      	bcc.n	9001e0d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
9001e090:	2f02      	cmp	r7, #2
9001e092:	d14d      	bne.n	9001e130 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001e094:	2e03      	cmp	r6, #3
9001e096:	d84b      	bhi.n	9001e130 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001e098:	e8df f006 	tbb	[pc, r6]
9001e09c:	17140702 	.word	0x17140702
9001e0a0:	9504      	str	r5, [sp, #16]
9001e0a2:	4620      	mov	r0, r4
9001e0a4:	bcf0      	pop	{r4, r5, r6, r7}
9001e0a6:	f7ff be09 	b.w	9001dcbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
9001e0aa:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001e0ac:	2800      	cmp	r0, #0
9001e0ae:	d03f      	beq.n	9001e130 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001e0b0:	6806      	ldr	r6, [r0, #0]
9001e0b2:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001e0b6:	68b5      	ldr	r5, [r6, #8]
9001e0b8:	4613      	mov	r3, r2
9001e0ba:	46ac      	mov	ip, r5
9001e0bc:	460a      	mov	r2, r1
9001e0be:	4621      	mov	r1, r4
9001e0c0:	bcf0      	pop	{r4, r5, r6, r7}
9001e0c2:	4760      	bx	ip
9001e0c4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001e0c8:	e7f0      	b.n	9001e0ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001e0ca:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001e0ce:	e7ed      	b.n	9001e0ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001e0d0:	2e03      	cmp	r6, #3
9001e0d2:	d82d      	bhi.n	9001e130 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001e0d4:	e8df f006 	tbb	[pc, r6]
9001e0d8:	110e0702 	.word	0x110e0702
9001e0dc:	9504      	str	r5, [sp, #16]
9001e0de:	4620      	mov	r0, r4
9001e0e0:	bcf0      	pop	{r4, r5, r6, r7}
9001e0e2:	f7ff bd05 	b.w	9001daf0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9001e0e6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001e0e8:	b310      	cbz	r0, 9001e130 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001e0ea:	6806      	ldr	r6, [r0, #0]
9001e0ec:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001e0f0:	68f5      	ldr	r5, [r6, #12]
9001e0f2:	e7e1      	b.n	9001e0b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001e0f4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001e0f8:	e7f6      	b.n	9001e0e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001e0fa:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001e0fe:	e7f3      	b.n	9001e0e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001e100:	2e03      	cmp	r6, #3
9001e102:	d815      	bhi.n	9001e130 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001e104:	e8df f006 	tbb	[pc, r6]
9001e108:	110e0702 	.word	0x110e0702
9001e10c:	9504      	str	r5, [sp, #16]
9001e10e:	4620      	mov	r0, r4
9001e110:	bcf0      	pop	{r4, r5, r6, r7}
9001e112:	f7ff be9f 	b.w	9001de54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9001e116:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001e118:	b150      	cbz	r0, 9001e130 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001e11a:	6806      	ldr	r6, [r0, #0]
9001e11c:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001e120:	6935      	ldr	r5, [r6, #16]
9001e122:	e7c9      	b.n	9001e0b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001e124:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001e128:	e7f6      	b.n	9001e118 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001e12a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001e12e:	e7f3      	b.n	9001e118 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001e130:	bcf0      	pop	{r4, r5, r6, r7}
9001e132:	4770      	bx	lr

9001e134 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
9001e134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e138:	b087      	sub	sp, #28
9001e13a:	4604      	mov	r4, r0
9001e13c:	460e      	mov	r6, r1
9001e13e:	6810      	ldr	r0, [r2, #0]
9001e140:	6851      	ldr	r1, [r2, #4]
9001e142:	ad02      	add	r5, sp, #8
9001e144:	4617      	mov	r7, r2
9001e146:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
9001e14a:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 9001e37c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9001e14e:	c503      	stmia	r5!, {r0, r1}
9001e150:	6818      	ldr	r0, [r3, #0]
9001e152:	ad04      	add	r5, sp, #16
9001e154:	6859      	ldr	r1, [r3, #4]
9001e156:	c503      	stmia	r5!, {r0, r1}
9001e158:	a802      	add	r0, sp, #8
9001e15a:	f7f6 fe01 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e15e:	4639      	mov	r1, r7
9001e160:	a804      	add	r0, sp, #16
9001e162:	f7f6 fe25 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e166:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001e16a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001e16e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9001e172:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001e176:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e17a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9001e17e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9001e182:	440e      	add	r6, r1
9001e184:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001e188:	440a      	add	r2, r1
9001e18a:	f8ad 2010 	strh.w	r2, [sp, #16]
9001e18e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001e192:	4413      	add	r3, r2
9001e194:	f8ad 3012 	strh.w	r3, [sp, #18]
9001e198:	4b77      	ldr	r3, [pc, #476]	@ (9001e378 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001e19a:	6818      	ldr	r0, [r3, #0]
9001e19c:	6803      	ldr	r3, [r0, #0]
9001e19e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e1a0:	4798      	blx	r3
9001e1a2:	f8b9 b000 	ldrh.w	fp, [r9]
9001e1a6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001e1aa:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001e1ae:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001e1b2:	fb05 f50b 	mul.w	r5, r5, fp
9001e1b6:	fb0b 2303 	mla	r3, fp, r3, r2
9001e1ba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e1be:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001e1c2:	9300      	str	r3, [sp, #0]
9001e1c4:	d069      	beq.n	9001e29a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9001e1c6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9001e1ca:	4558      	cmp	r0, fp
9001e1cc:	f080 80cc 	bcs.w	9001e368 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001e1d0:	9b00      	ldr	r3, [sp, #0]
9001e1d2:	4631      	mov	r1, r6
9001e1d4:	18c3      	adds	r3, r0, r3
9001e1d6:	9301      	str	r3, [sp, #4]
9001e1d8:	9b01      	ldr	r3, [sp, #4]
9001e1da:	4298      	cmp	r0, r3
9001e1dc:	d24f      	bcs.n	9001e27e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9001e1de:	f811 2b01 	ldrb.w	r2, [r1], #1
9001e1e2:	2a00      	cmp	r2, #0
9001e1e4:	d048      	beq.n	9001e278 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001e1e6:	fb0a f202 	mul.w	r2, sl, r2
9001e1ea:	1c53      	adds	r3, r2, #1
9001e1ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001e1f0:	121b      	asrs	r3, r3, #8
9001e1f2:	d041      	beq.n	9001e278 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001e1f4:	8802      	ldrh	r2, [r0, #0]
9001e1f6:	b29e      	uxth	r6, r3
9001e1f8:	f8b4 c000 	ldrh.w	ip, [r4]
9001e1fc:	43db      	mvns	r3, r3
9001e1fe:	1215      	asrs	r5, r2, #8
9001e200:	b2db      	uxtb	r3, r3
9001e202:	ea4f 272c 	mov.w	r7, ip, asr #8
9001e206:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001e20a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001e20e:	fb15 f503 	smulbb	r5, r5, r3
9001e212:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e216:	00d2      	lsls	r2, r2, #3
9001e218:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001e21c:	fb07 5706 	mla	r7, r7, r6, r5
9001e220:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001e224:	b2d2      	uxtb	r2, r2
9001e226:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e22a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001e22e:	fb1e fe03 	smulbb	lr, lr, r3
9001e232:	b2bf      	uxth	r7, r7
9001e234:	fb12 f203 	smulbb	r2, r2, r3
9001e238:	fa5f fc8c 	uxtb.w	ip, ip
9001e23c:	fb05 e506 	mla	r5, r5, r6, lr
9001e240:	f107 0e01 	add.w	lr, r7, #1
9001e244:	fb0c 2c06 	mla	ip, ip, r6, r2
9001e248:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
9001e24c:	fa1f fc8c 	uxth.w	ip, ip
9001e250:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
9001e254:	b2ad      	uxth	r5, r5
9001e256:	f10c 0701 	add.w	r7, ip, #1
9001e25a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001e25e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001e262:	ea47 070e 	orr.w	r7, r7, lr
9001e266:	f105 0e01 	add.w	lr, r5, #1
9001e26a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001e26e:	096d      	lsrs	r5, r5, #5
9001e270:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e274:	432f      	orrs	r7, r5
9001e276:	8007      	strh	r7, [r0, #0]
9001e278:	3002      	adds	r0, #2
9001e27a:	3402      	adds	r4, #2
9001e27c:	e7ac      	b.n	9001e1d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9001e27e:	f8b9 3000 	ldrh.w	r3, [r9]
9001e282:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001e286:	eba3 0308 	sub.w	r3, r3, r8
9001e28a:	eba6 0608 	sub.w	r6, r6, r8
9001e28e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e292:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001e296:	440e      	add	r6, r1
9001e298:	e797      	b.n	9001e1ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9001e29a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001e29e:	42a8      	cmp	r0, r5
9001e2a0:	d262      	bcs.n	9001e368 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001e2a2:	9b00      	ldr	r3, [sp, #0]
9001e2a4:	4631      	mov	r1, r6
9001e2a6:	eb00 0b03 	add.w	fp, r0, r3
9001e2aa:	4558      	cmp	r0, fp
9001e2ac:	d24e      	bcs.n	9001e34c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9001e2ae:	f811 3b01 	ldrb.w	r3, [r1], #1
9001e2b2:	b12b      	cbz	r3, 9001e2c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001e2b4:	2bff      	cmp	r3, #255	@ 0xff
9001e2b6:	f8b4 e000 	ldrh.w	lr, [r4]
9001e2ba:	d104      	bne.n	9001e2c6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
9001e2bc:	f8a0 e000 	strh.w	lr, [r0]
9001e2c0:	3002      	adds	r0, #2
9001e2c2:	3402      	adds	r4, #2
9001e2c4:	e7f1      	b.n	9001e2aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9001e2c6:	8802      	ldrh	r2, [r0, #0]
9001e2c8:	b29f      	uxth	r7, r3
9001e2ca:	43db      	mvns	r3, r3
9001e2cc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001e2d0:	1216      	asrs	r6, r2, #8
9001e2d2:	b2db      	uxtb	r3, r3
9001e2d4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e2d8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e2dc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9001e2e0:	00d2      	lsls	r2, r2, #3
9001e2e2:	fb16 f603 	smulbb	r6, r6, r3
9001e2e6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001e2ea:	b2d2      	uxtb	r2, r2
9001e2ec:	fb0c 6c07 	mla	ip, ip, r7, r6
9001e2f0:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001e2f4:	fb1a fa03 	smulbb	sl, sl, r3
9001e2f8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e2fc:	fa1f fc8c 	uxth.w	ip, ip
9001e300:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001e304:	fb12 f303 	smulbb	r3, r2, r3
9001e308:	fa5f fe8e 	uxtb.w	lr, lr
9001e30c:	fb06 a607 	mla	r6, r6, r7, sl
9001e310:	f10c 0201 	add.w	r2, ip, #1
9001e314:	fb0e 3307 	mla	r3, lr, r7, r3
9001e318:	b2b6      	uxth	r6, r6
9001e31a:	b29b      	uxth	r3, r3
9001e31c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001e320:	f106 0a01 	add.w	sl, r6, #1
9001e324:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
9001e328:	f103 0c01 	add.w	ip, r3, #1
9001e32c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001e330:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001e334:	0976      	lsrs	r6, r6, #5
9001e336:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e33a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001e33e:	ea4c 0c02 	orr.w	ip, ip, r2
9001e342:	ea4c 0c06 	orr.w	ip, ip, r6
9001e346:	f8a0 c000 	strh.w	ip, [r0]
9001e34a:	e7b9      	b.n	9001e2c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001e34c:	f8b9 3000 	ldrh.w	r3, [r9]
9001e350:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001e354:	eba3 0308 	sub.w	r3, r3, r8
9001e358:	eba6 0608 	sub.w	r6, r6, r8
9001e35c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e360:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001e364:	440e      	add	r6, r1
9001e366:	e79a      	b.n	9001e29e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9001e368:	4b03      	ldr	r3, [pc, #12]	@ (9001e378 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001e36a:	6818      	ldr	r0, [r3, #0]
9001e36c:	6803      	ldr	r3, [r0, #0]
9001e36e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e370:	4798      	blx	r3
9001e372:	b007      	add	sp, #28
9001e374:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e378:	2001aa40 	.word	0x2001aa40
9001e37c:	2001aa38 	.word	0x2001aa38

9001e380 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9001e380:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e384:	b089      	sub	sp, #36	@ 0x24
9001e386:	4607      	mov	r7, r0
9001e388:	4688      	mov	r8, r1
9001e38a:	4692      	mov	sl, r2
9001e38c:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
9001e390:	4699      	mov	r9, r3
9001e392:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001e394:	2e00      	cmp	r6, #0
9001e396:	d048      	beq.n	9001e42a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001e398:	4608      	mov	r0, r1
9001e39a:	f7fa f811 	bl	900183c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001e39e:	4605      	mov	r5, r0
9001e3a0:	4640      	mov	r0, r8
9001e3a2:	f7fa f841 	bl	90018428 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001e3a6:	f8ad 000e 	strh.w	r0, [sp, #14]
9001e3aa:	4640      	mov	r0, r8
9001e3ac:	f8ad a008 	strh.w	sl, [sp, #8]
9001e3b0:	f8ad 500c 	strh.w	r5, [sp, #12]
9001e3b4:	f8ad 900a 	strh.w	r9, [sp, #10]
9001e3b8:	f7fa f8f4 	bl	900185a4 <_ZNK8touchgfx6Bitmap7getDataEv>
9001e3bc:	4605      	mov	r5, r0
9001e3be:	4640      	mov	r0, r8
9001e3c0:	f7fa f920 	bl	90018604 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001e3c4:	4682      	mov	sl, r0
9001e3c6:	4640      	mov	r0, r8
9001e3c8:	f7fa f970 	bl	900186ac <_ZNK8touchgfx6Bitmap9getFormatEv>
9001e3cc:	2810      	cmp	r0, #16
9001e3ce:	d82c      	bhi.n	9001e42a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001e3d0:	e8df f010 	tbh	[pc, r0, lsl #1]
9001e3d4:	00ba00ca 	.word	0x00ba00ca
9001e3d8:	002b0011 	.word	0x002b0011
9001e3dc:	002b002b 	.word	0x002b002b
9001e3e0:	002b002b 	.word	0x002b002b
9001e3e4:	002b002b 	.word	0x002b002b
9001e3e8:	00c1002b 	.word	0x00c1002b
9001e3ec:	002b002b 	.word	0x002b002b
9001e3f0:	002b0180 	.word	0x002b0180
9001e3f4:	0173      	.short	0x0173
9001e3f6:	4bbc      	ldr	r3, [pc, #752]	@ (9001e6e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
9001e3f8:	6818      	ldr	r0, [r3, #0]
9001e3fa:	6803      	ldr	r3, [r0, #0]
9001e3fc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001e3fe:	4798      	blx	r3
9001e400:	2eff      	cmp	r6, #255	@ 0xff
9001e402:	d101      	bne.n	9001e408 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
9001e404:	0683      	lsls	r3, r0, #26
9001e406:	d506      	bpl.n	9001e416 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
9001e408:	4633      	mov	r3, r6
9001e40a:	4622      	mov	r2, r4
9001e40c:	a902      	add	r1, sp, #8
9001e40e:	4628      	mov	r0, r5
9001e410:	f7ff f8fc 	bl	9001d60c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001e414:	e009      	b.n	9001e42a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001e416:	4640      	mov	r0, r8
9001e418:	f7fa f88c 	bl	90018534 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001e41c:	b940      	cbnz	r0, 9001e430 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
9001e41e:	4623      	mov	r3, r4
9001e420:	aa02      	add	r2, sp, #8
9001e422:	4629      	mov	r1, r5
9001e424:	4638      	mov	r0, r7
9001e426:	f7ff f9d7 	bl	9001d7d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001e42a:	b009      	add	sp, #36	@ 0x24
9001e42c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e430:	f10d 0918 	add.w	r9, sp, #24
9001e434:	4641      	mov	r1, r8
9001e436:	f10d 0810 	add.w	r8, sp, #16
9001e43a:	4648      	mov	r0, r9
9001e43c:	f7fa f828 	bl	90018490 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001e440:	e899 0003 	ldmia.w	r9, {r0, r1}
9001e444:	e888 0003 	stmia.w	r8, {r0, r1}
9001e448:	4640      	mov	r0, r8
9001e44a:	4621      	mov	r1, r4
9001e44c:	f7f2 f91a 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
9001e450:	4640      	mov	r0, r8
9001e452:	f7f2 f95a 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
9001e456:	2800      	cmp	r0, #0
9001e458:	d1d6      	bne.n	9001e408 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
9001e45a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001e45e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001e462:	4293      	cmp	r3, r2
9001e464:	dd12      	ble.n	9001e48c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
9001e466:	1a9b      	subs	r3, r3, r2
9001e468:	f9b4 0000 	ldrsh.w	r0, [r4]
9001e46c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001e470:	f8ad 0018 	strh.w	r0, [sp, #24]
9001e474:	4628      	mov	r0, r5
9001e476:	f8ad 201a 	strh.w	r2, [sp, #26]
9001e47a:	464a      	mov	r2, r9
9001e47c:	f8ad 101c 	strh.w	r1, [sp, #28]
9001e480:	a902      	add	r1, sp, #8
9001e482:	f8ad 301e 	strh.w	r3, [sp, #30]
9001e486:	4633      	mov	r3, r6
9001e488:	f7ff f8c0 	bl	9001d60c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001e48c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001e490:	f9b4 2000 	ldrsh.w	r2, [r4]
9001e494:	4293      	cmp	r3, r2
9001e496:	dd12      	ble.n	9001e4be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
9001e498:	1a9b      	subs	r3, r3, r2
9001e49a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001e49e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001e4a2:	f8ad 2018 	strh.w	r2, [sp, #24]
9001e4a6:	464a      	mov	r2, r9
9001e4a8:	f8ad 001a 	strh.w	r0, [sp, #26]
9001e4ac:	4628      	mov	r0, r5
9001e4ae:	f8ad 301c 	strh.w	r3, [sp, #28]
9001e4b2:	23ff      	movs	r3, #255	@ 0xff
9001e4b4:	f8ad 101e 	strh.w	r1, [sp, #30]
9001e4b8:	a902      	add	r1, sp, #8
9001e4ba:	f7ff f8a7 	bl	9001d60c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001e4be:	4643      	mov	r3, r8
9001e4c0:	aa02      	add	r2, sp, #8
9001e4c2:	4629      	mov	r1, r5
9001e4c4:	4638      	mov	r0, r7
9001e4c6:	f7ff f987 	bl	9001d7d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001e4ca:	88a2      	ldrh	r2, [r4, #4]
9001e4cc:	8823      	ldrh	r3, [r4, #0]
9001e4ce:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001e4d2:	4413      	add	r3, r2
9001e4d4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001e4d8:	440a      	add	r2, r1
9001e4da:	b29b      	uxth	r3, r3
9001e4dc:	b292      	uxth	r2, r2
9001e4de:	b218      	sxth	r0, r3
9001e4e0:	b211      	sxth	r1, r2
9001e4e2:	4288      	cmp	r0, r1
9001e4e4:	dd12      	ble.n	9001e50c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
9001e4e6:	1a9b      	subs	r3, r3, r2
9001e4e8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001e4ec:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9001e4f0:	464a      	mov	r2, r9
9001e4f2:	f8ad 1018 	strh.w	r1, [sp, #24]
9001e4f6:	a902      	add	r1, sp, #8
9001e4f8:	f8ad 301c 	strh.w	r3, [sp, #28]
9001e4fc:	23ff      	movs	r3, #255	@ 0xff
9001e4fe:	f8ad 001e 	strh.w	r0, [sp, #30]
9001e502:	4628      	mov	r0, r5
9001e504:	f8ad 601a 	strh.w	r6, [sp, #26]
9001e508:	f7ff f880 	bl	9001d60c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001e50c:	88e2      	ldrh	r2, [r4, #6]
9001e50e:	8863      	ldrh	r3, [r4, #2]
9001e510:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001e514:	4413      	add	r3, r2
9001e516:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001e51a:	440a      	add	r2, r1
9001e51c:	b29b      	uxth	r3, r3
9001e51e:	b292      	uxth	r2, r2
9001e520:	b218      	sxth	r0, r3
9001e522:	b211      	sxth	r1, r2
9001e524:	4288      	cmp	r0, r1
9001e526:	dd80      	ble.n	9001e42a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001e528:	1a9b      	subs	r3, r3, r2
9001e52a:	f9b4 6000 	ldrsh.w	r6, [r4]
9001e52e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001e532:	464a      	mov	r2, r9
9001e534:	f8ad 301e 	strh.w	r3, [sp, #30]
9001e538:	23ff      	movs	r3, #255	@ 0xff
9001e53a:	f8ad 6018 	strh.w	r6, [sp, #24]
9001e53e:	f8ad 101a 	strh.w	r1, [sp, #26]
9001e542:	f8ad 001c 	strh.w	r0, [sp, #28]
9001e546:	e761      	b.n	9001e40c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
9001e548:	4633      	mov	r3, r6
9001e54a:	4622      	mov	r2, r4
9001e54c:	a902      	add	r1, sp, #8
9001e54e:	4628      	mov	r0, r5
9001e550:	f7ff f9b2 	bl	9001d8b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
9001e554:	e769      	b.n	9001e42a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001e556:	e9cd 4600 	strd	r4, r6, [sp]
9001e55a:	ab02      	add	r3, sp, #8
9001e55c:	4652      	mov	r2, sl
9001e55e:	4629      	mov	r1, r5
9001e560:	4638      	mov	r0, r7
9001e562:	f7ff fd89 	bl	9001e078 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9001e566:	e760      	b.n	9001e42a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001e568:	4640      	mov	r0, r8
9001e56a:	f7f9 ffe3 	bl	90018534 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001e56e:	b948      	cbnz	r0, 9001e584 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
9001e570:	683b      	ldr	r3, [r7, #0]
9001e572:	aa02      	add	r2, sp, #8
9001e574:	4629      	mov	r1, r5
9001e576:	e9cd 6000 	strd	r6, r0, [sp]
9001e57a:	4638      	mov	r0, r7
9001e57c:	68de      	ldr	r6, [r3, #12]
9001e57e:	4623      	mov	r3, r4
9001e580:	47b0      	blx	r6
9001e582:	e752      	b.n	9001e42a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001e584:	f10d 0918 	add.w	r9, sp, #24
9001e588:	4641      	mov	r1, r8
9001e58a:	f10d 0810 	add.w	r8, sp, #16
9001e58e:	4648      	mov	r0, r9
9001e590:	f7f9 ff7e 	bl	90018490 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001e594:	e899 0003 	ldmia.w	r9, {r0, r1}
9001e598:	e888 0003 	stmia.w	r8, {r0, r1}
9001e59c:	4640      	mov	r0, r8
9001e59e:	4621      	mov	r1, r4
9001e5a0:	f7f2 f870 	bl	90010684 <_ZN8touchgfx4RectaNERKS0_>
9001e5a4:	4640      	mov	r0, r8
9001e5a6:	f7f2 f8b0 	bl	9001070a <_ZNK8touchgfx4Rect7isEmptyEv>
9001e5aa:	b138      	cbz	r0, 9001e5bc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
9001e5ac:	4623      	mov	r3, r4
9001e5ae:	9600      	str	r6, [sp, #0]
9001e5b0:	aa02      	add	r2, sp, #8
9001e5b2:	4651      	mov	r1, sl
9001e5b4:	4628      	mov	r0, r5
9001e5b6:	f7ff fdbd 	bl	9001e134 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001e5ba:	e736      	b.n	9001e42a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001e5bc:	683b      	ldr	r3, [r7, #0]
9001e5be:	aa02      	add	r2, sp, #8
9001e5c0:	4629      	mov	r1, r5
9001e5c2:	e9cd 6000 	strd	r6, r0, [sp]
9001e5c6:	4638      	mov	r0, r7
9001e5c8:	f8d3 b00c 	ldr.w	fp, [r3, #12]
9001e5cc:	4643      	mov	r3, r8
9001e5ce:	47d8      	blx	fp
9001e5d0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001e5d4:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001e5d8:	4293      	cmp	r3, r2
9001e5da:	dd13      	ble.n	9001e604 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
9001e5dc:	f9b4 0000 	ldrsh.w	r0, [r4]
9001e5e0:	1a9b      	subs	r3, r3, r2
9001e5e2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001e5e6:	f8ad 0018 	strh.w	r0, [sp, #24]
9001e5ea:	4628      	mov	r0, r5
9001e5ec:	f8ad 201a 	strh.w	r2, [sp, #26]
9001e5f0:	aa02      	add	r2, sp, #8
9001e5f2:	f8ad 101c 	strh.w	r1, [sp, #28]
9001e5f6:	4651      	mov	r1, sl
9001e5f8:	f8ad 301e 	strh.w	r3, [sp, #30]
9001e5fc:	464b      	mov	r3, r9
9001e5fe:	9600      	str	r6, [sp, #0]
9001e600:	f7ff fd98 	bl	9001e134 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001e604:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001e608:	f9b4 2000 	ldrsh.w	r2, [r4]
9001e60c:	4293      	cmp	r3, r2
9001e60e:	dd13      	ble.n	9001e638 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
9001e610:	1a9b      	subs	r3, r3, r2
9001e612:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001e616:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001e61a:	f8ad 2018 	strh.w	r2, [sp, #24]
9001e61e:	aa02      	add	r2, sp, #8
9001e620:	f8ad 001a 	strh.w	r0, [sp, #26]
9001e624:	4628      	mov	r0, r5
9001e626:	f8ad 301c 	strh.w	r3, [sp, #28]
9001e62a:	464b      	mov	r3, r9
9001e62c:	f8ad 101e 	strh.w	r1, [sp, #30]
9001e630:	4651      	mov	r1, sl
9001e632:	9600      	str	r6, [sp, #0]
9001e634:	f7ff fd7e 	bl	9001e134 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001e638:	88a2      	ldrh	r2, [r4, #4]
9001e63a:	8823      	ldrh	r3, [r4, #0]
9001e63c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001e640:	4413      	add	r3, r2
9001e642:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001e646:	440a      	add	r2, r1
9001e648:	b29b      	uxth	r3, r3
9001e64a:	b292      	uxth	r2, r2
9001e64c:	b218      	sxth	r0, r3
9001e64e:	b211      	sxth	r1, r2
9001e650:	4288      	cmp	r0, r1
9001e652:	dd13      	ble.n	9001e67c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
9001e654:	1a9b      	subs	r3, r3, r2
9001e656:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001e65a:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9001e65e:	aa02      	add	r2, sp, #8
9001e660:	f8ad 1018 	strh.w	r1, [sp, #24]
9001e664:	4651      	mov	r1, sl
9001e666:	f8ad 301c 	strh.w	r3, [sp, #28]
9001e66a:	464b      	mov	r3, r9
9001e66c:	f8ad 001e 	strh.w	r0, [sp, #30]
9001e670:	4628      	mov	r0, r5
9001e672:	9600      	str	r6, [sp, #0]
9001e674:	f8ad 701a 	strh.w	r7, [sp, #26]
9001e678:	f7ff fd5c 	bl	9001e134 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001e67c:	88e2      	ldrh	r2, [r4, #6]
9001e67e:	8863      	ldrh	r3, [r4, #2]
9001e680:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001e684:	4413      	add	r3, r2
9001e686:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001e68a:	440a      	add	r2, r1
9001e68c:	b29b      	uxth	r3, r3
9001e68e:	b292      	uxth	r2, r2
9001e690:	b218      	sxth	r0, r3
9001e692:	b211      	sxth	r1, r2
9001e694:	4288      	cmp	r0, r1
9001e696:	f77f aec8 	ble.w	9001e42a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001e69a:	f9b4 7000 	ldrsh.w	r7, [r4]
9001e69e:	1a9b      	subs	r3, r3, r2
9001e6a0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001e6a4:	f8ad 301e 	strh.w	r3, [sp, #30]
9001e6a8:	464b      	mov	r3, r9
9001e6aa:	f8ad 7018 	strh.w	r7, [sp, #24]
9001e6ae:	f8ad 101a 	strh.w	r1, [sp, #26]
9001e6b2:	f8ad 001c 	strh.w	r0, [sp, #28]
9001e6b6:	9600      	str	r6, [sp, #0]
9001e6b8:	e77a      	b.n	9001e5b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
9001e6ba:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
9001e6be:	2800      	cmp	r0, #0
9001e6c0:	f43f aeb3 	beq.w	9001e42a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001e6c4:	6803      	ldr	r3, [r0, #0]
9001e6c6:	9600      	str	r6, [sp, #0]
9001e6c8:	68de      	ldr	r6, [r3, #12]
9001e6ca:	4623      	mov	r3, r4
9001e6cc:	aa02      	add	r2, sp, #8
9001e6ce:	4629      	mov	r1, r5
9001e6d0:	47b0      	blx	r6
9001e6d2:	e6aa      	b.n	9001e42a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001e6d4:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
9001e6d8:	2800      	cmp	r0, #0
9001e6da:	f43f aea6 	beq.w	9001e42a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001e6de:	6803      	ldr	r3, [r0, #0]
9001e6e0:	9600      	str	r6, [sp, #0]
9001e6e2:	689e      	ldr	r6, [r3, #8]
9001e6e4:	e7f1      	b.n	9001e6ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
9001e6e6:	bf00      	nop
9001e6e8:	2001aa40 	.word	0x2001aa40

9001e6ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
9001e6ec:	b180      	cbz	r0, 9001e710 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9001e6ee:	2903      	cmp	r1, #3
9001e6f0:	d81c      	bhi.n	9001e72c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001e6f2:	e8df f001 	tbb	[pc, r1]
9001e6f6:	1d02      	.short	0x1d02
9001e6f8:	1f08      	.short	0x1f08
9001e6fa:	4b10      	ldr	r3, [pc, #64]	@ (9001e73c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001e6fc:	8818      	ldrh	r0, [r3, #0]
9001e6fe:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001e702:	4240      	negs	r0, r0
9001e704:	4770      	bx	lr
9001e706:	4b0d      	ldr	r3, [pc, #52]	@ (9001e73c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001e708:	8818      	ldrh	r0, [r3, #0]
9001e70a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001e70e:	4770      	bx	lr
9001e710:	2903      	cmp	r1, #3
9001e712:	d80b      	bhi.n	9001e72c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001e714:	a301      	add	r3, pc, #4	@ (adr r3, 9001e71c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
9001e716:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001e71a:	bf00      	nop
9001e71c:	9001e731 	.word	0x9001e731
9001e720:	9001e707 	.word	0x9001e707
9001e724:	9001e735 	.word	0x9001e735
9001e728:	9001e6fb 	.word	0x9001e6fb
9001e72c:	2000      	movs	r0, #0
9001e72e:	4770      	bx	lr
9001e730:	2001      	movs	r0, #1
9001e732:	4770      	bx	lr
9001e734:	f04f 30ff 	mov.w	r0, #4294967295
9001e738:	4770      	bx	lr
9001e73a:	bf00      	nop
9001e73c:	2001aa38 	.word	0x2001aa38

9001e740 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
9001e740:	b180      	cbz	r0, 9001e764 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9001e742:	2903      	cmp	r1, #3
9001e744:	d81c      	bhi.n	9001e780 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001e746:	e8df f001 	tbb	[pc, r1]
9001e74a:	021d      	.short	0x021d
9001e74c:	071f      	.short	0x071f
9001e74e:	4b10      	ldr	r3, [pc, #64]	@ (9001e790 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001e750:	8818      	ldrh	r0, [r3, #0]
9001e752:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001e756:	4770      	bx	lr
9001e758:	4b0d      	ldr	r3, [pc, #52]	@ (9001e790 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001e75a:	8818      	ldrh	r0, [r3, #0]
9001e75c:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001e760:	4240      	negs	r0, r0
9001e762:	4770      	bx	lr
9001e764:	2903      	cmp	r1, #3
9001e766:	d80b      	bhi.n	9001e780 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001e768:	a301      	add	r3, pc, #4	@ (adr r3, 9001e770 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
9001e76a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001e76e:	bf00      	nop
9001e770:	9001e74f 	.word	0x9001e74f
9001e774:	9001e789 	.word	0x9001e789
9001e778:	9001e759 	.word	0x9001e759
9001e77c:	9001e785 	.word	0x9001e785
9001e780:	2000      	movs	r0, #0
9001e782:	4770      	bx	lr
9001e784:	2001      	movs	r0, #1
9001e786:	4770      	bx	lr
9001e788:	f04f 30ff 	mov.w	r0, #4294967295
9001e78c:	4770      	bx	lr
9001e78e:	bf00      	nop
9001e790:	2001aa38 	.word	0x2001aa38

9001e794 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
9001e794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e798:	b099      	sub	sp, #100	@ 0x64
9001e79a:	910d      	str	r1, [sp, #52]	@ 0x34
9001e79c:	a914      	add	r1, sp, #80	@ 0x50
9001e79e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
9001e7a2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
9001e7a6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
9001e7aa:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
9001e7ac:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
9001e7b0:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
9001e7b4:	e881 000c 	stmia.w	r1, {r2, r3}
9001e7b8:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
9001e7bc:	930b      	str	r3, [sp, #44]	@ 0x2c
9001e7be:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
9001e7c2:	9310      	str	r3, [sp, #64]	@ 0x40
9001e7c4:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
9001e7c8:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
9001e7cc:	9308      	str	r3, [sp, #32]
9001e7ce:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
9001e7d2:	9309      	str	r3, [sp, #36]	@ 0x24
9001e7d4:	7b4b      	ldrb	r3, [r1, #13]
9001e7d6:	ea4f 1843 	mov.w	r8, r3, lsl #5
9001e7da:	f408 7080 	and.w	r0, r8, #256	@ 0x100
9001e7de:	f891 8006 	ldrb.w	r8, [r1, #6]
9001e7e2:	ea58 0800 	orrs.w	r8, r8, r0
9001e7e6:	f000 81d0 	beq.w	9001eb8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9001e7ea:	011b      	lsls	r3, r3, #4
9001e7ec:	79c8      	ldrb	r0, [r1, #7]
9001e7ee:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001e7f2:	4303      	orrs	r3, r0
9001e7f4:	930c      	str	r3, [sp, #48]	@ 0x30
9001e7f6:	f000 81c8 	beq.w	9001eb8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9001e7fa:	f991 3009 	ldrsb.w	r3, [r1, #9]
9001e7fe:	b29b      	uxth	r3, r3
9001e800:	2d00      	cmp	r5, #0
9001e802:	f000 812d 	beq.w	9001ea60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
9001e806:	1aed      	subs	r5, r5, r3
9001e808:	b2ad      	uxth	r5, r5
9001e80a:	0429      	lsls	r1, r5, #16
9001e80c:	d502      	bpl.n	9001e814 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
9001e80e:	1b64      	subs	r4, r4, r5
9001e810:	2500      	movs	r5, #0
9001e812:	b224      	sxth	r4, r4
9001e814:	f9b2 0000 	ldrsh.w	r0, [r2]
9001e818:	8891      	ldrh	r1, [r2, #4]
9001e81a:	4284      	cmp	r4, r0
9001e81c:	b283      	uxth	r3, r0
9001e81e:	bfb8      	it	lt
9001e820:	18ed      	addlt	r5, r5, r3
9001e822:	440b      	add	r3, r1
9001e824:	b21b      	sxth	r3, r3
9001e826:	bfb8      	it	lt
9001e828:	1b2c      	sublt	r4, r5, r4
9001e82a:	930a      	str	r3, [sp, #40]	@ 0x28
9001e82c:	bfb8      	it	lt
9001e82e:	b2a5      	uxthlt	r5, r4
9001e830:	88d3      	ldrh	r3, [r2, #6]
9001e832:	bfb8      	it	lt
9001e834:	4604      	movlt	r4, r0
9001e836:	8852      	ldrh	r2, [r2, #2]
9001e838:	a814      	add	r0, sp, #80	@ 0x50
9001e83a:	4621      	mov	r1, r4
9001e83c:	4413      	add	r3, r2
9001e83e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001e840:	b21b      	sxth	r3, r3
9001e842:	930f      	str	r3, [sp, #60]	@ 0x3c
9001e844:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001e846:	930e      	str	r3, [sp, #56]	@ 0x38
9001e848:	4bb2      	ldr	r3, [pc, #712]	@ (9001eb14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
9001e84a:	f893 b000 	ldrb.w	fp, [r3]
9001e84e:	4653      	mov	r3, sl
9001e850:	f7f6 f8fa 	bl	90014a48 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
9001e854:	4621      	mov	r1, r4
9001e856:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
9001e85a:	4653      	mov	r3, sl
9001e85c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001e85e:	a814      	add	r0, sp, #80	@ 0x50
9001e860:	f7f6 f90f 	bl	90014a82 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
9001e864:	a918      	add	r1, sp, #96	@ 0x60
9001e866:	f821 0d02 	strh.w	r0, [r1, #-2]!
9001e86a:	a817      	add	r0, sp, #92	@ 0x5c
9001e86c:	f7f6 fa36 	bl	90014cdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
9001e870:	f1ba 0f00 	cmp.w	sl, #0
9001e874:	f040 80f7 	bne.w	9001ea66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d2>
9001e878:	f1bb 0f01 	cmp.w	fp, #1
9001e87c:	f040 80fb 	bne.w	9001ea76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
9001e880:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e882:	2b00      	cmp	r3, #0
9001e884:	f040 81a9 	bne.w	9001ebda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x446>
9001e888:	fa1f f288 	uxth.w	r2, r8
9001e88c:	b905      	cbnz	r5, 9001e890 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
9001e88e:	b15e      	cbz	r6, 9001e8a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x114>
9001e890:	fb06 5302 	mla	r3, r6, r2, r5
9001e894:	9808      	ldr	r0, [sp, #32]
9001e896:	4631      	mov	r1, r6
9001e898:	4343      	muls	r3, r0
9001e89a:	f003 0607 	and.w	r6, r3, #7
9001e89e:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
9001e8a2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001e8a4:	1a5b      	subs	r3, r3, r1
9001e8a6:	930e      	str	r3, [sp, #56]	@ 0x38
9001e8a8:	f10b 31ff 	add.w	r1, fp, #4294967295
9001e8ac:	424b      	negs	r3, r1
9001e8ae:	414b      	adcs	r3, r1
9001e8b0:	4651      	mov	r1, sl
9001e8b2:	4618      	mov	r0, r3
9001e8b4:	930c      	str	r3, [sp, #48]	@ 0x30
9001e8b6:	f7ff ff19 	bl	9001e6ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
9001e8ba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001e8bc:	4683      	mov	fp, r0
9001e8be:	4618      	mov	r0, r3
9001e8c0:	f7ff ff3e 	bl	9001e740 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
9001e8c4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001e8c6:	4603      	mov	r3, r0
9001e8c8:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001e8ca:	eba1 0a00 	sub.w	sl, r1, r0
9001e8ce:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001e8d0:	458a      	cmp	sl, r1
9001e8d2:	bfa8      	it	ge
9001e8d4:	468a      	movge	sl, r1
9001e8d6:	f1ba 0f00 	cmp.w	sl, #0
9001e8da:	f340 8156 	ble.w	9001eb8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9001e8de:	1b64      	subs	r4, r4, r5
9001e8e0:	990a      	ldr	r1, [sp, #40]	@ 0x28
9001e8e2:	1b0c      	subs	r4, r1, r4
9001e8e4:	4544      	cmp	r4, r8
9001e8e6:	bfd4      	ite	le
9001e8e8:	ebc5 0504 	rsble	r5, r5, r4
9001e8ec:	ebc5 0508 	rsbgt	r5, r5, r8
9001e8f0:	2d00      	cmp	r5, #0
9001e8f2:	f340 814a 	ble.w	9001eb8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9001e8f6:	1b52      	subs	r2, r2, r5
9001e8f8:	9908      	ldr	r1, [sp, #32]
9001e8fa:	434a      	muls	r2, r1
9001e8fc:	920e      	str	r2, [sp, #56]	@ 0x38
9001e8fe:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001e900:	2a00      	cmp	r2, #0
9001e902:	f040 8176 	bne.w	9001ebf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
9001e906:	4a84      	ldr	r2, [pc, #528]	@ (9001eb18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
9001e908:	930a      	str	r3, [sp, #40]	@ 0x28
9001e90a:	6810      	ldr	r0, [r2, #0]
9001e90c:	6802      	ldr	r2, [r0, #0]
9001e90e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9001e910:	4790      	blx	r2
9001e912:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001e914:	9908      	ldr	r1, [sp, #32]
9001e916:	2201      	movs	r2, #1
9001e918:	408a      	lsls	r2, r1
9001e91a:	4980      	ldr	r1, [pc, #512]	@ (9001eb1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
9001e91c:	3a01      	subs	r2, #1
9001e91e:	880c      	ldrh	r4, [r1, #0]
9001e920:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
9001e924:	b2d2      	uxtb	r2, r2
9001e926:	920c      	str	r2, [sp, #48]	@ 0x30
9001e928:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
9001e92c:	fb04 1202 	mla	r2, r4, r2, r1
9001e930:	ea4f 2419 	mov.w	r4, r9, lsr #8
9001e934:	ea4f 1159 	mov.w	r1, r9, lsr #5
9001e938:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001e93c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001e940:	920a      	str	r2, [sp, #40]	@ 0x28
9001e942:	f3c9 4207 	ubfx	r2, r9, #16, #8
9001e946:	9212      	str	r2, [sp, #72]	@ 0x48
9001e948:	b2e2      	uxtb	r2, r4
9001e94a:	9211      	str	r2, [sp, #68]	@ 0x44
9001e94c:	fa5f f289 	uxtb.w	r2, r9
9001e950:	f3c9 09c4 	ubfx	r9, r9, #3, #5
9001e954:	9210      	str	r2, [sp, #64]	@ 0x40
9001e956:	4a72      	ldr	r2, [pc, #456]	@ (9001eb20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
9001e958:	4022      	ands	r2, r4
9001e95a:	430a      	orrs	r2, r1
9001e95c:	ea4f 014b 	mov.w	r1, fp, lsl #1
9001e960:	fb05 3b1b 	mls	fp, r5, fp, r3
9001e964:	ea42 0209 	orr.w	r2, r2, r9
9001e968:	460b      	mov	r3, r1
9001e96a:	910b      	str	r1, [sp, #44]	@ 0x2c
9001e96c:	b292      	uxth	r2, r2
9001e96e:	436b      	muls	r3, r5
9001e970:	920f      	str	r2, [sp, #60]	@ 0x3c
9001e972:	eb03 034b 	add.w	r3, r3, fp, lsl #1
9001e976:	783a      	ldrb	r2, [r7, #0]
9001e978:	9313      	str	r3, [sp, #76]	@ 0x4c
9001e97a:	4132      	asrs	r2, r6
9001e97c:	b2d2      	uxtb	r2, r2
9001e97e:	f11a 3aff 	adds.w	sl, sl, #4294967295
9001e982:	f0c0 814a 	bcc.w	9001ec1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x486>
9001e986:	46a9      	mov	r9, r5
9001e988:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
9001e98c:	f119 39ff 	adds.w	r9, r9, #4294967295
9001e990:	f0c0 8133 	bcc.w	9001ebfa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x466>
9001e994:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001e996:	4013      	ands	r3, r2
9001e998:	d054      	beq.n	9001ea44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b0>
9001e99a:	20ff      	movs	r0, #255	@ 0xff
9001e99c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001e99e:	fb90 f1f1 	sdiv	r1, r0, r1
9001e9a2:	434b      	muls	r3, r1
9001e9a4:	2bfe      	cmp	r3, #254	@ 0xfe
9001e9a6:	dd03      	ble.n	9001e9b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21c>
9001e9a8:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001e9aa:	4281      	cmp	r1, r0
9001e9ac:	f000 8123 	beq.w	9001ebf6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
9001e9b0:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001e9b2:	f8b8 4000 	ldrh.w	r4, [r8]
9001e9b6:	fb11 f303 	smulbb	r3, r1, r3
9001e9ba:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e9bc:	ea4f 0ce4 	mov.w	ip, r4, asr #3
9001e9c0:	b29b      	uxth	r3, r3
9001e9c2:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001e9c6:	1c59      	adds	r1, r3, #1
9001e9c8:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
9001e9cc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001e9d0:	1221      	asrs	r1, r4, #8
9001e9d2:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001e9d6:	00e4      	lsls	r4, r4, #3
9001e9d8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9001e9dc:	fa1f fe83 	uxth.w	lr, r3
9001e9e0:	43db      	mvns	r3, r3
9001e9e2:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001e9e6:	fb10 fb0e 	smulbb	fp, r0, lr
9001e9ea:	b2db      	uxtb	r3, r3
9001e9ec:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e9ee:	b2e4      	uxtb	r4, r4
9001e9f0:	fb01 b103 	mla	r1, r1, r3, fp
9001e9f4:	fb10 fb0e 	smulbb	fp, r0, lr
9001e9f8:	9810      	ldr	r0, [sp, #64]	@ 0x40
9001e9fa:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001e9fe:	fb10 fe0e 	smulbb	lr, r0, lr
9001ea02:	b289      	uxth	r1, r1
9001ea04:	fb0c bc03 	mla	ip, ip, r3, fp
9001ea08:	fb04 e403 	mla	r4, r4, r3, lr
9001ea0c:	1c4b      	adds	r3, r1, #1
9001ea0e:	fa1f fc8c 	uxth.w	ip, ip
9001ea12:	b2a4      	uxth	r4, r4
9001ea14:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9001ea18:	f104 0b01 	add.w	fp, r4, #1
9001ea1c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9001ea20:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
9001ea24:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
9001ea28:	ea4b 0101 	orr.w	r1, fp, r1
9001ea2c:	f10c 0b01 	add.w	fp, ip, #1
9001ea30:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
9001ea34:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001ea38:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001ea3c:	ea41 010b 	orr.w	r1, r1, fp
9001ea40:	f8a8 1000 	strh.w	r1, [r8]
9001ea44:	9b08      	ldr	r3, [sp, #32]
9001ea46:	441e      	add	r6, r3
9001ea48:	b2b6      	uxth	r6, r6
9001ea4a:	2e07      	cmp	r6, #7
9001ea4c:	bf98      	it	ls
9001ea4e:	411a      	asrls	r2, r3
9001ea50:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001ea52:	bf85      	ittet	hi
9001ea54:	787a      	ldrbhi	r2, [r7, #1]
9001ea56:	2600      	movhi	r6, #0
9001ea58:	b2d2      	uxtbls	r2, r2
9001ea5a:	3701      	addhi	r7, #1
9001ea5c:	4498      	add	r8, r3
9001ea5e:	e795      	b.n	9001e98c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f8>
9001ea60:	441c      	add	r4, r3
9001ea62:	b224      	sxth	r4, r4
9001ea64:	e6d6      	b.n	9001e814 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
9001ea66:	f1ba 0f01 	cmp.w	sl, #1
9001ea6a:	f47f af09 	bne.w	9001e880 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
9001ea6e:	f1bb 0f01 	cmp.w	fp, #1
9001ea72:	f47f af05 	bne.w	9001e880 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
9001ea76:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001ea78:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001ea7a:	1a99      	subs	r1, r3, r2
9001ea7c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001ea7e:	1b9b      	subs	r3, r3, r6
9001ea80:	4299      	cmp	r1, r3
9001ea82:	bfa8      	it	ge
9001ea84:	4619      	movge	r1, r3
9001ea86:	2900      	cmp	r1, #0
9001ea88:	9112      	str	r1, [sp, #72]	@ 0x48
9001ea8a:	dd7e      	ble.n	9001eb8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9001ea8c:	4a22      	ldr	r2, [pc, #136]	@ (9001eb18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
9001ea8e:	6810      	ldr	r0, [r2, #0]
9001ea90:	9211      	str	r2, [sp, #68]	@ 0x44
9001ea92:	6803      	ldr	r3, [r0, #0]
9001ea94:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001ea96:	4798      	blx	r3
9001ea98:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
9001ea9c:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001ea9e:	d006      	beq.n	9001eaae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
9001eaa0:	9b08      	ldr	r3, [sp, #32]
9001eaa2:	2b04      	cmp	r3, #4
9001eaa4:	d133      	bne.n	9001eb0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
9001eaa6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001eaa8:	3300      	adds	r3, #0
9001eaaa:	bf18      	it	ne
9001eaac:	2301      	movne	r3, #1
9001eaae:	0582      	lsls	r2, r0, #22
9001eab0:	fa1f fc88 	uxth.w	ip, r8
9001eab4:	f140 80ba 	bpl.w	9001ec2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
9001eab8:	9808      	ldr	r0, [sp, #32]
9001eaba:	2808      	cmp	r0, #8
9001eabc:	f040 80b6 	bne.w	9001ec2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
9001eac0:	2b00      	cmp	r3, #0
9001eac2:	d065      	beq.n	9001eb90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fc>
9001eac4:	f10c 0c01 	add.w	ip, ip, #1
9001eac8:	f02c 0301 	bic.w	r3, ip, #1
9001eacc:	b29b      	uxth	r3, r3
9001eace:	bb4d      	cbnz	r5, 9001eb24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
9001ead0:	eb08 0004 	add.w	r0, r8, r4
9001ead4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001ead6:	4290      	cmp	r0, r2
9001ead8:	dc24      	bgt.n	9001eb24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
9001eada:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001eadc:	b289      	uxth	r1, r1
9001eade:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
9001eae2:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
9001eae6:	6810      	ldr	r0, [r2, #0]
9001eae8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001eaec:	6804      	ldr	r4, [r0, #0]
9001eaee:	9506      	str	r5, [sp, #24]
9001eaf0:	f44f 7580 	mov.w	r5, #256	@ 0x100
9001eaf4:	9302      	str	r3, [sp, #8]
9001eaf6:	9505      	str	r5, [sp, #20]
9001eaf8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9001eafa:	e9cd 3100 	strd	r3, r1, [sp]
9001eafe:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001eb02:	4673      	mov	r3, lr
9001eb04:	6da4      	ldr	r4, [r4, #88]	@ 0x58
9001eb06:	fb06 710c 	mla	r1, r6, ip, r7
9001eb0a:	47a0      	blx	r4
9001eb0c:	e03d      	b.n	9001eb8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9001eb0e:	2300      	movs	r3, #0
9001eb10:	e7cd      	b.n	9001eaae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
9001eb12:	bf00      	nop
9001eb14:	2001aa36 	.word	0x2001aa36
9001eb18:	2001aa40 	.word	0x2001aa40
9001eb1c:	2001aa38 	.word	0x2001aa38
9001eb20:	00fff800 	.word	0x00fff800
9001eb24:	eba4 0e05 	sub.w	lr, r4, r5
9001eb28:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001eb2a:	eba2 0e0e 	sub.w	lr, r2, lr
9001eb2e:	45c6      	cmp	lr, r8
9001eb30:	bfd4      	ite	le
9001eb32:	ebc5 0e0e 	rsble	lr, r5, lr
9001eb36:	ebc5 0e08 	rsbgt	lr, r5, r8
9001eb3a:	f1be 0f00 	cmp.w	lr, #0
9001eb3e:	d024      	beq.n	9001eb8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9001eb40:	07e8      	lsls	r0, r5, #31
9001eb42:	f53f ae9d 	bmi.w	9001e880 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
9001eb46:	f01e 0001 	ands.w	r0, lr, #1
9001eb4a:	f47f ae99 	bne.w	9001e880 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
9001eb4e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001eb50:	086d      	lsrs	r5, r5, #1
9001eb52:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
9001eb56:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
9001eb5a:	6814      	ldr	r4, [r2, #0]
9001eb5c:	b289      	uxth	r1, r1
9001eb5e:	fb06 560c 	mla	r6, r6, ip, r5
9001eb62:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001eb66:	6825      	ldr	r5, [r4, #0]
9001eb68:	9006      	str	r0, [sp, #24]
9001eb6a:	f44f 7080 	mov.w	r0, #256	@ 0x100
9001eb6e:	9302      	str	r3, [sp, #8]
9001eb70:	fa1f f38e 	uxth.w	r3, lr
9001eb74:	9005      	str	r0, [sp, #20]
9001eb76:	9809      	ldr	r0, [sp, #36]	@ 0x24
9001eb78:	9101      	str	r1, [sp, #4]
9001eb7a:	19b9      	adds	r1, r7, r6
9001eb7c:	9300      	str	r3, [sp, #0]
9001eb7e:	4643      	mov	r3, r8
9001eb80:	e9cd 9003 	strd	r9, r0, [sp, #12]
9001eb84:	4620      	mov	r0, r4
9001eb86:	6dad      	ldr	r5, [r5, #88]	@ 0x58
9001eb88:	47a8      	blx	r5
9001eb8a:	b019      	add	sp, #100	@ 0x64
9001eb8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001eb90:	4a28      	ldr	r2, [pc, #160]	@ (9001ec34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
9001eb92:	1b64      	subs	r4, r4, r5
9001eb94:	fb06 5608 	mla	r6, r6, r8, r5
9001eb98:	b289      	uxth	r1, r1
9001eb9a:	6810      	ldr	r0, [r2, #0]
9001eb9c:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
9001eba0:	f8d0 a000 	ldr.w	sl, [r0]
9001eba4:	9306      	str	r3, [sp, #24]
9001eba6:	f44f 7300 	mov.w	r3, #512	@ 0x200
9001ebaa:	9101      	str	r1, [sp, #4]
9001ebac:	19b9      	adds	r1, r7, r6
9001ebae:	9305      	str	r3, [sp, #20]
9001ebb0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ebb2:	f8cd c008 	str.w	ip, [sp, #8]
9001ebb6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001ebba:	e9cd 9303 	strd	r9, r3, [sp, #12]
9001ebbe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001ebc0:	1b1c      	subs	r4, r3, r4
9001ebc2:	4673      	mov	r3, lr
9001ebc4:	4544      	cmp	r4, r8
9001ebc6:	bfd4      	ite	le
9001ebc8:	ebc5 0504 	rsble	r5, r5, r4
9001ebcc:	ebc5 0508 	rsbgt	r5, r5, r8
9001ebd0:	b2ad      	uxth	r5, r5
9001ebd2:	9500      	str	r5, [sp, #0]
9001ebd4:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
9001ebd8:	e797      	b.n	9001eb0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001ebda:	2208      	movs	r2, #8
9001ebdc:	9b08      	ldr	r3, [sp, #32]
9001ebde:	fb92 f3f3 	sdiv	r3, r2, r3
9001ebe2:	1e5a      	subs	r2, r3, #1
9001ebe4:	4442      	add	r2, r8
9001ebe6:	fb92 f2f3 	sdiv	r2, r2, r3
9001ebea:	fb12 f203 	smulbb	r2, r2, r3
9001ebee:	b292      	uxth	r2, r2
9001ebf0:	e64c      	b.n	9001e88c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9001ebf2:	980d      	ldr	r0, [sp, #52]	@ 0x34
9001ebf4:	e68e      	b.n	9001e914 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x180>
9001ebf6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001ebf8:	e722      	b.n	9001ea40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ac>
9001ebfa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ebfc:	b143      	cbz	r3, 9001ec10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x47c>
9001ebfe:	441e      	add	r6, r3
9001ec00:	b2b6      	uxth	r6, r6
9001ec02:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
9001ec06:	f006 0607 	and.w	r6, r6, #7
9001ec0a:	783a      	ldrb	r2, [r7, #0]
9001ec0c:	4132      	asrs	r2, r6
9001ec0e:	b2d2      	uxtb	r2, r2
9001ec10:	990a      	ldr	r1, [sp, #40]	@ 0x28
9001ec12:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9001ec14:	4419      	add	r1, r3
9001ec16:	910a      	str	r1, [sp, #40]	@ 0x28
9001ec18:	e6b1      	b.n	9001e97e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ea>
9001ec1a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001ec1c:	2b00      	cmp	r3, #0
9001ec1e:	d1b4      	bne.n	9001eb8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9001ec20:	4b04      	ldr	r3, [pc, #16]	@ (9001ec34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
9001ec22:	6818      	ldr	r0, [r3, #0]
9001ec24:	6803      	ldr	r3, [r0, #0]
9001ec26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ec28:	4798      	blx	r3
9001ec2a:	e7ae      	b.n	9001eb8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9001ec2c:	2b00      	cmp	r3, #0
9001ec2e:	f47f af49 	bne.w	9001eac4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x330>
9001ec32:	e625      	b.n	9001e880 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
9001ec34:	2001aa40 	.word	0x2001aa40

9001ec38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
9001ec38:	b538      	push	{r3, r4, r5, lr}
9001ec3a:	4c15      	ldr	r4, [pc, #84]	@ (9001ec90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
9001ec3c:	4605      	mov	r5, r0
9001ec3e:	7823      	ldrb	r3, [r4, #0]
9001ec40:	f3bf 8f5b 	dmb	ish
9001ec44:	07da      	lsls	r2, r3, #31
9001ec46:	d40b      	bmi.n	9001ec60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001ec48:	4620      	mov	r0, r4
9001ec4a:	f008 fc6b 	bl	90027524 <__cxa_guard_acquire>
9001ec4e:	b138      	cbz	r0, 9001ec60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001ec50:	4620      	mov	r0, r4
9001ec52:	f008 fc73 	bl	9002753c <__cxa_guard_release>
9001ec56:	4a0f      	ldr	r2, [pc, #60]	@ (9001ec94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001ec58:	490f      	ldr	r1, [pc, #60]	@ (9001ec98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
9001ec5a:	4810      	ldr	r0, [pc, #64]	@ (9001ec9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001ec5c:	f008 fc5b 	bl	90027516 <__aeabi_atexit>
9001ec60:	4c0f      	ldr	r4, [pc, #60]	@ (9001eca0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9001ec62:	7823      	ldrb	r3, [r4, #0]
9001ec64:	f3bf 8f5b 	dmb	ish
9001ec68:	07db      	lsls	r3, r3, #31
9001ec6a:	d40b      	bmi.n	9001ec84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001ec6c:	4620      	mov	r0, r4
9001ec6e:	f008 fc59 	bl	90027524 <__cxa_guard_acquire>
9001ec72:	b138      	cbz	r0, 9001ec84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001ec74:	4620      	mov	r0, r4
9001ec76:	f008 fc61 	bl	9002753c <__cxa_guard_release>
9001ec7a:	4a06      	ldr	r2, [pc, #24]	@ (9001ec94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001ec7c:	4909      	ldr	r1, [pc, #36]	@ (9001eca4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9001ec7e:	480a      	ldr	r0, [pc, #40]	@ (9001eca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001ec80:	f008 fc49 	bl	90027516 <__aeabi_atexit>
9001ec84:	4b05      	ldr	r3, [pc, #20]	@ (9001ec9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001ec86:	616b      	str	r3, [r5, #20]
9001ec88:	4b07      	ldr	r3, [pc, #28]	@ (9001eca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001ec8a:	61ab      	str	r3, [r5, #24]
9001ec8c:	bd38      	pop	{r3, r4, r5, pc}
9001ec8e:	bf00      	nop
9001ec90:	2001ab24 	.word	0x2001ab24
9001ec94:	20000000 	.word	0x20000000
9001ec98:	9001ad25 	.word	0x9001ad25
9001ec9c:	2000018c 	.word	0x2000018c
9001eca0:	2001ab28 	.word	0x2001ab28
9001eca4:	9001ad23 	.word	0x9001ad23
9001eca8:	20000190 	.word	0x20000190

9001ecac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
9001ecac:	b538      	push	{r3, r4, r5, lr}
9001ecae:	4c15      	ldr	r4, [pc, #84]	@ (9001ed04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9001ecb0:	4605      	mov	r5, r0
9001ecb2:	7823      	ldrb	r3, [r4, #0]
9001ecb4:	f3bf 8f5b 	dmb	ish
9001ecb8:	07da      	lsls	r2, r3, #31
9001ecba:	d40b      	bmi.n	9001ecd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001ecbc:	4620      	mov	r0, r4
9001ecbe:	f008 fc31 	bl	90027524 <__cxa_guard_acquire>
9001ecc2:	b138      	cbz	r0, 9001ecd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001ecc4:	4620      	mov	r0, r4
9001ecc6:	f008 fc39 	bl	9002753c <__cxa_guard_release>
9001ecca:	4a0f      	ldr	r2, [pc, #60]	@ (9001ed08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001eccc:	490f      	ldr	r1, [pc, #60]	@ (9001ed0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9001ecce:	4810      	ldr	r0, [pc, #64]	@ (9001ed10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001ecd0:	f008 fc21 	bl	90027516 <__aeabi_atexit>
9001ecd4:	4c0f      	ldr	r4, [pc, #60]	@ (9001ed14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
9001ecd6:	7823      	ldrb	r3, [r4, #0]
9001ecd8:	f3bf 8f5b 	dmb	ish
9001ecdc:	07db      	lsls	r3, r3, #31
9001ecde:	d40b      	bmi.n	9001ecf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001ece0:	4620      	mov	r0, r4
9001ece2:	f008 fc1f 	bl	90027524 <__cxa_guard_acquire>
9001ece6:	b138      	cbz	r0, 9001ecf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001ece8:	4620      	mov	r0, r4
9001ecea:	f008 fc27 	bl	9002753c <__cxa_guard_release>
9001ecee:	4a06      	ldr	r2, [pc, #24]	@ (9001ed08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001ecf0:	4909      	ldr	r1, [pc, #36]	@ (9001ed18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9001ecf2:	480a      	ldr	r0, [pc, #40]	@ (9001ed1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001ecf4:	f008 fc0f 	bl	90027516 <__aeabi_atexit>
9001ecf8:	4b05      	ldr	r3, [pc, #20]	@ (9001ed10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001ecfa:	60eb      	str	r3, [r5, #12]
9001ecfc:	4b07      	ldr	r3, [pc, #28]	@ (9001ed1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001ecfe:	612b      	str	r3, [r5, #16]
9001ed00:	bd38      	pop	{r3, r4, r5, pc}
9001ed02:	bf00      	nop
9001ed04:	2001aafc 	.word	0x2001aafc
9001ed08:	20000000 	.word	0x20000000
9001ed0c:	9001ad29 	.word	0x9001ad29
9001ed10:	20000164 	.word	0x20000164
9001ed14:	2001ab00 	.word	0x2001ab00
9001ed18:	9001ad27 	.word	0x9001ad27
9001ed1c:	20000168 	.word	0x20000168

9001ed20 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9001ed20:	b510      	push	{r4, lr}
9001ed22:	4604      	mov	r4, r0
9001ed24:	f7ff ff88 	bl	9001ec38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
9001ed28:	4620      	mov	r0, r4
9001ed2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001ed2e:	f7ff bfbd 	b.w	9001ecac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

9001ed34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
9001ed34:	b538      	push	{r3, r4, r5, lr}
9001ed36:	4c15      	ldr	r4, [pc, #84]	@ (9001ed8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
9001ed38:	4605      	mov	r5, r0
9001ed3a:	7823      	ldrb	r3, [r4, #0]
9001ed3c:	f3bf 8f5b 	dmb	ish
9001ed40:	07da      	lsls	r2, r3, #31
9001ed42:	d40b      	bmi.n	9001ed5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001ed44:	4620      	mov	r0, r4
9001ed46:	f008 fbed 	bl	90027524 <__cxa_guard_acquire>
9001ed4a:	b138      	cbz	r0, 9001ed5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001ed4c:	4620      	mov	r0, r4
9001ed4e:	f008 fbf5 	bl	9002753c <__cxa_guard_release>
9001ed52:	4a0f      	ldr	r2, [pc, #60]	@ (9001ed90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001ed54:	490f      	ldr	r1, [pc, #60]	@ (9001ed94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
9001ed56:	4810      	ldr	r0, [pc, #64]	@ (9001ed98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001ed58:	f008 fbdd 	bl	90027516 <__aeabi_atexit>
9001ed5c:	4c0f      	ldr	r4, [pc, #60]	@ (9001ed9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9001ed5e:	7823      	ldrb	r3, [r4, #0]
9001ed60:	f3bf 8f5b 	dmb	ish
9001ed64:	07db      	lsls	r3, r3, #31
9001ed66:	d40b      	bmi.n	9001ed80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001ed68:	4620      	mov	r0, r4
9001ed6a:	f008 fbdb 	bl	90027524 <__cxa_guard_acquire>
9001ed6e:	b138      	cbz	r0, 9001ed80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001ed70:	4620      	mov	r0, r4
9001ed72:	f008 fbe3 	bl	9002753c <__cxa_guard_release>
9001ed76:	4a06      	ldr	r2, [pc, #24]	@ (9001ed90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001ed78:	4909      	ldr	r1, [pc, #36]	@ (9001eda0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9001ed7a:	480a      	ldr	r0, [pc, #40]	@ (9001eda4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001ed7c:	f008 fbcb 	bl	90027516 <__aeabi_atexit>
9001ed80:	4b05      	ldr	r3, [pc, #20]	@ (9001ed98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001ed82:	626b      	str	r3, [r5, #36]	@ 0x24
9001ed84:	4b07      	ldr	r3, [pc, #28]	@ (9001eda4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001ed86:	62ab      	str	r3, [r5, #40]	@ 0x28
9001ed88:	bd38      	pop	{r3, r4, r5, pc}
9001ed8a:	bf00      	nop
9001ed8c:	2001ab2c 	.word	0x2001ab2c
9001ed90:	20000000 	.word	0x20000000
9001ed94:	9001ad1d 	.word	0x9001ad1d
9001ed98:	20000194 	.word	0x20000194
9001ed9c:	2001ab30 	.word	0x2001ab30
9001eda0:	9001ad1b 	.word	0x9001ad1b
9001eda4:	20000198 	.word	0x20000198

9001eda8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
9001eda8:	b538      	push	{r3, r4, r5, lr}
9001edaa:	4c15      	ldr	r4, [pc, #84]	@ (9001ee00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
9001edac:	4605      	mov	r5, r0
9001edae:	7823      	ldrb	r3, [r4, #0]
9001edb0:	f3bf 8f5b 	dmb	ish
9001edb4:	07da      	lsls	r2, r3, #31
9001edb6:	d40b      	bmi.n	9001edd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001edb8:	4620      	mov	r0, r4
9001edba:	f008 fbb3 	bl	90027524 <__cxa_guard_acquire>
9001edbe:	b138      	cbz	r0, 9001edd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001edc0:	4620      	mov	r0, r4
9001edc2:	f008 fbbb 	bl	9002753c <__cxa_guard_release>
9001edc6:	4a0f      	ldr	r2, [pc, #60]	@ (9001ee04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001edc8:	490f      	ldr	r1, [pc, #60]	@ (9001ee08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
9001edca:	4810      	ldr	r0, [pc, #64]	@ (9001ee0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001edcc:	f008 fba3 	bl	90027516 <__aeabi_atexit>
9001edd0:	4c0f      	ldr	r4, [pc, #60]	@ (9001ee10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9001edd2:	7823      	ldrb	r3, [r4, #0]
9001edd4:	f3bf 8f5b 	dmb	ish
9001edd8:	07db      	lsls	r3, r3, #31
9001edda:	d40b      	bmi.n	9001edf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001eddc:	4620      	mov	r0, r4
9001edde:	f008 fba1 	bl	90027524 <__cxa_guard_acquire>
9001ede2:	b138      	cbz	r0, 9001edf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001ede4:	4620      	mov	r0, r4
9001ede6:	f008 fba9 	bl	9002753c <__cxa_guard_release>
9001edea:	4a06      	ldr	r2, [pc, #24]	@ (9001ee04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001edec:	4909      	ldr	r1, [pc, #36]	@ (9001ee14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9001edee:	480a      	ldr	r0, [pc, #40]	@ (9001ee18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001edf0:	f008 fb91 	bl	90027516 <__aeabi_atexit>
9001edf4:	4b05      	ldr	r3, [pc, #20]	@ (9001ee0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001edf6:	61eb      	str	r3, [r5, #28]
9001edf8:	4b07      	ldr	r3, [pc, #28]	@ (9001ee18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001edfa:	622b      	str	r3, [r5, #32]
9001edfc:	bd38      	pop	{r3, r4, r5, pc}
9001edfe:	bf00      	nop
9001ee00:	2001ab04 	.word	0x2001ab04
9001ee04:	20000000 	.word	0x20000000
9001ee08:	9001ad21 	.word	0x9001ad21
9001ee0c:	2000016c 	.word	0x2000016c
9001ee10:	2001ab08 	.word	0x2001ab08
9001ee14:	9001ad1f 	.word	0x9001ad1f
9001ee18:	20000170 	.word	0x20000170

9001ee1c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
9001ee1c:	b510      	push	{r4, lr}
9001ee1e:	4604      	mov	r4, r0
9001ee20:	f7ff ff88 	bl	9001ed34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
9001ee24:	4620      	mov	r0, r4
9001ee26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001ee2a:	f7ff bfbd 	b.w	9001eda8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9001ee30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9001ee30:	b538      	push	{r3, r4, r5, lr}
9001ee32:	4c15      	ldr	r4, [pc, #84]	@ (9001ee88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
9001ee34:	4605      	mov	r5, r0
9001ee36:	7823      	ldrb	r3, [r4, #0]
9001ee38:	f3bf 8f5b 	dmb	ish
9001ee3c:	07da      	lsls	r2, r3, #31
9001ee3e:	d40b      	bmi.n	9001ee58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001ee40:	4620      	mov	r0, r4
9001ee42:	f008 fb6f 	bl	90027524 <__cxa_guard_acquire>
9001ee46:	b138      	cbz	r0, 9001ee58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001ee48:	4620      	mov	r0, r4
9001ee4a:	f008 fb77 	bl	9002753c <__cxa_guard_release>
9001ee4e:	4a0f      	ldr	r2, [pc, #60]	@ (9001ee8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001ee50:	490f      	ldr	r1, [pc, #60]	@ (9001ee90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9001ee52:	4810      	ldr	r0, [pc, #64]	@ (9001ee94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001ee54:	f008 fb5f 	bl	90027516 <__aeabi_atexit>
9001ee58:	4c0f      	ldr	r4, [pc, #60]	@ (9001ee98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
9001ee5a:	7823      	ldrb	r3, [r4, #0]
9001ee5c:	f3bf 8f5b 	dmb	ish
9001ee60:	07db      	lsls	r3, r3, #31
9001ee62:	d40b      	bmi.n	9001ee7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001ee64:	4620      	mov	r0, r4
9001ee66:	f008 fb5d 	bl	90027524 <__cxa_guard_acquire>
9001ee6a:	b138      	cbz	r0, 9001ee7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001ee6c:	4620      	mov	r0, r4
9001ee6e:	f008 fb65 	bl	9002753c <__cxa_guard_release>
9001ee72:	4a06      	ldr	r2, [pc, #24]	@ (9001ee8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001ee74:	4909      	ldr	r1, [pc, #36]	@ (9001ee9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
9001ee76:	480a      	ldr	r0, [pc, #40]	@ (9001eea0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001ee78:	f008 fb4d 	bl	90027516 <__aeabi_atexit>
9001ee7c:	4b05      	ldr	r3, [pc, #20]	@ (9001ee94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001ee7e:	636b      	str	r3, [r5, #52]	@ 0x34
9001ee80:	4b07      	ldr	r3, [pc, #28]	@ (9001eea0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001ee82:	63ab      	str	r3, [r5, #56]	@ 0x38
9001ee84:	bd38      	pop	{r3, r4, r5, pc}
9001ee86:	bf00      	nop
9001ee88:	2001ab3c 	.word	0x2001ab3c
9001ee8c:	20000000 	.word	0x20000000
9001ee90:	9001ad15 	.word	0x9001ad15
9001ee94:	200001a4 	.word	0x200001a4
9001ee98:	2001ab40 	.word	0x2001ab40
9001ee9c:	9001ad13 	.word	0x9001ad13
9001eea0:	200001a8 	.word	0x200001a8

9001eea4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
9001eea4:	b538      	push	{r3, r4, r5, lr}
9001eea6:	4c15      	ldr	r4, [pc, #84]	@ (9001eefc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
9001eea8:	4605      	mov	r5, r0
9001eeaa:	7823      	ldrb	r3, [r4, #0]
9001eeac:	f3bf 8f5b 	dmb	ish
9001eeb0:	07da      	lsls	r2, r3, #31
9001eeb2:	d40b      	bmi.n	9001eecc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001eeb4:	4620      	mov	r0, r4
9001eeb6:	f008 fb35 	bl	90027524 <__cxa_guard_acquire>
9001eeba:	b138      	cbz	r0, 9001eecc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001eebc:	4620      	mov	r0, r4
9001eebe:	f008 fb3d 	bl	9002753c <__cxa_guard_release>
9001eec2:	4a0f      	ldr	r2, [pc, #60]	@ (9001ef00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001eec4:	490f      	ldr	r1, [pc, #60]	@ (9001ef04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
9001eec6:	4810      	ldr	r0, [pc, #64]	@ (9001ef08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001eec8:	f008 fb25 	bl	90027516 <__aeabi_atexit>
9001eecc:	4c0f      	ldr	r4, [pc, #60]	@ (9001ef0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9001eece:	7823      	ldrb	r3, [r4, #0]
9001eed0:	f3bf 8f5b 	dmb	ish
9001eed4:	07db      	lsls	r3, r3, #31
9001eed6:	d40b      	bmi.n	9001eef0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001eed8:	4620      	mov	r0, r4
9001eeda:	f008 fb23 	bl	90027524 <__cxa_guard_acquire>
9001eede:	b138      	cbz	r0, 9001eef0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001eee0:	4620      	mov	r0, r4
9001eee2:	f008 fb2b 	bl	9002753c <__cxa_guard_release>
9001eee6:	4a06      	ldr	r2, [pc, #24]	@ (9001ef00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001eee8:	4909      	ldr	r1, [pc, #36]	@ (9001ef10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
9001eeea:	480a      	ldr	r0, [pc, #40]	@ (9001ef14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001eeec:	f008 fb13 	bl	90027516 <__aeabi_atexit>
9001eef0:	4b05      	ldr	r3, [pc, #20]	@ (9001ef08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001eef2:	62eb      	str	r3, [r5, #44]	@ 0x2c
9001eef4:	4b07      	ldr	r3, [pc, #28]	@ (9001ef14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001eef6:	632b      	str	r3, [r5, #48]	@ 0x30
9001eef8:	bd38      	pop	{r3, r4, r5, pc}
9001eefa:	bf00      	nop
9001eefc:	2001ab0c 	.word	0x2001ab0c
9001ef00:	20000000 	.word	0x20000000
9001ef04:	9001ad19 	.word	0x9001ad19
9001ef08:	20000174 	.word	0x20000174
9001ef0c:	2001ab10 	.word	0x2001ab10
9001ef10:	9001ad17 	.word	0x9001ad17
9001ef14:	20000178 	.word	0x20000178

9001ef18 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
9001ef18:	b510      	push	{r4, lr}
9001ef1a:	4604      	mov	r4, r0
9001ef1c:	f7ff ff88 	bl	9001ee30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9001ef20:	4620      	mov	r0, r4
9001ef22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001ef26:	f7ff bfbd 	b.w	9001eea4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

9001ef2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
9001ef2c:	b538      	push	{r3, r4, r5, lr}
9001ef2e:	4c15      	ldr	r4, [pc, #84]	@ (9001ef84 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9001ef30:	4605      	mov	r5, r0
9001ef32:	7823      	ldrb	r3, [r4, #0]
9001ef34:	f3bf 8f5b 	dmb	ish
9001ef38:	07da      	lsls	r2, r3, #31
9001ef3a:	d40b      	bmi.n	9001ef54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001ef3c:	4620      	mov	r0, r4
9001ef3e:	f008 faf1 	bl	90027524 <__cxa_guard_acquire>
9001ef42:	b138      	cbz	r0, 9001ef54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001ef44:	4620      	mov	r0, r4
9001ef46:	f008 faf9 	bl	9002753c <__cxa_guard_release>
9001ef4a:	4a0f      	ldr	r2, [pc, #60]	@ (9001ef88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001ef4c:	490f      	ldr	r1, [pc, #60]	@ (9001ef8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9001ef4e:	4810      	ldr	r0, [pc, #64]	@ (9001ef90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001ef50:	f008 fae1 	bl	90027516 <__aeabi_atexit>
9001ef54:	4c0f      	ldr	r4, [pc, #60]	@ (9001ef94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
9001ef56:	7823      	ldrb	r3, [r4, #0]
9001ef58:	f3bf 8f5b 	dmb	ish
9001ef5c:	07db      	lsls	r3, r3, #31
9001ef5e:	d40b      	bmi.n	9001ef78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001ef60:	4620      	mov	r0, r4
9001ef62:	f008 fadf 	bl	90027524 <__cxa_guard_acquire>
9001ef66:	b138      	cbz	r0, 9001ef78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001ef68:	4620      	mov	r0, r4
9001ef6a:	f008 fae7 	bl	9002753c <__cxa_guard_release>
9001ef6e:	4a06      	ldr	r2, [pc, #24]	@ (9001ef88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001ef70:	4909      	ldr	r1, [pc, #36]	@ (9001ef98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
9001ef72:	480a      	ldr	r0, [pc, #40]	@ (9001ef9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001ef74:	f008 facf 	bl	90027516 <__aeabi_atexit>
9001ef78:	4b05      	ldr	r3, [pc, #20]	@ (9001ef90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001ef7a:	656b      	str	r3, [r5, #84]	@ 0x54
9001ef7c:	4b07      	ldr	r3, [pc, #28]	@ (9001ef9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001ef7e:	65ab      	str	r3, [r5, #88]	@ 0x58
9001ef80:	bd38      	pop	{r3, r4, r5, pc}
9001ef82:	bf00      	nop
9001ef84:	2001ab44 	.word	0x2001ab44
9001ef88:	20000000 	.word	0x20000000
9001ef8c:	9001ad05 	.word	0x9001ad05
9001ef90:	200001ac 	.word	0x200001ac
9001ef94:	2001ab48 	.word	0x2001ab48
9001ef98:	9001ad03 	.word	0x9001ad03
9001ef9c:	200001b0 	.word	0x200001b0

9001efa0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
9001efa0:	b538      	push	{r3, r4, r5, lr}
9001efa2:	4c15      	ldr	r4, [pc, #84]	@ (9001eff8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
9001efa4:	4605      	mov	r5, r0
9001efa6:	7823      	ldrb	r3, [r4, #0]
9001efa8:	f3bf 8f5b 	dmb	ish
9001efac:	07da      	lsls	r2, r3, #31
9001efae:	d40b      	bmi.n	9001efc8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001efb0:	4620      	mov	r0, r4
9001efb2:	f008 fab7 	bl	90027524 <__cxa_guard_acquire>
9001efb6:	b138      	cbz	r0, 9001efc8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001efb8:	4620      	mov	r0, r4
9001efba:	f008 fabf 	bl	9002753c <__cxa_guard_release>
9001efbe:	4a0f      	ldr	r2, [pc, #60]	@ (9001effc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001efc0:	490f      	ldr	r1, [pc, #60]	@ (9001f000 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9001efc2:	4810      	ldr	r0, [pc, #64]	@ (9001f004 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001efc4:	f008 faa7 	bl	90027516 <__aeabi_atexit>
9001efc8:	4c0f      	ldr	r4, [pc, #60]	@ (9001f008 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
9001efca:	7823      	ldrb	r3, [r4, #0]
9001efcc:	f3bf 8f5b 	dmb	ish
9001efd0:	07db      	lsls	r3, r3, #31
9001efd2:	d40b      	bmi.n	9001efec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001efd4:	4620      	mov	r0, r4
9001efd6:	f008 faa5 	bl	90027524 <__cxa_guard_acquire>
9001efda:	b138      	cbz	r0, 9001efec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001efdc:	4620      	mov	r0, r4
9001efde:	f008 faad 	bl	9002753c <__cxa_guard_release>
9001efe2:	4a06      	ldr	r2, [pc, #24]	@ (9001effc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001efe4:	4909      	ldr	r1, [pc, #36]	@ (9001f00c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
9001efe6:	480a      	ldr	r0, [pc, #40]	@ (9001f010 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001efe8:	f008 fa95 	bl	90027516 <__aeabi_atexit>
9001efec:	4b05      	ldr	r3, [pc, #20]	@ (9001f004 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001efee:	64eb      	str	r3, [r5, #76]	@ 0x4c
9001eff0:	4b07      	ldr	r3, [pc, #28]	@ (9001f010 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001eff2:	652b      	str	r3, [r5, #80]	@ 0x50
9001eff4:	bd38      	pop	{r3, r4, r5, pc}
9001eff6:	bf00      	nop
9001eff8:	2001ab4c 	.word	0x2001ab4c
9001effc:	20000000 	.word	0x20000000
9001f000:	9001ad09 	.word	0x9001ad09
9001f004:	200001b4 	.word	0x200001b4
9001f008:	2001ab50 	.word	0x2001ab50
9001f00c:	9001ad07 	.word	0x9001ad07
9001f010:	200001b8 	.word	0x200001b8

9001f014 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
9001f014:	b538      	push	{r3, r4, r5, lr}
9001f016:	4c15      	ldr	r4, [pc, #84]	@ (9001f06c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
9001f018:	4605      	mov	r5, r0
9001f01a:	7823      	ldrb	r3, [r4, #0]
9001f01c:	f3bf 8f5b 	dmb	ish
9001f020:	07da      	lsls	r2, r3, #31
9001f022:	d40b      	bmi.n	9001f03c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001f024:	4620      	mov	r0, r4
9001f026:	f008 fa7d 	bl	90027524 <__cxa_guard_acquire>
9001f02a:	b138      	cbz	r0, 9001f03c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001f02c:	4620      	mov	r0, r4
9001f02e:	f008 fa85 	bl	9002753c <__cxa_guard_release>
9001f032:	4a0f      	ldr	r2, [pc, #60]	@ (9001f070 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001f034:	490f      	ldr	r1, [pc, #60]	@ (9001f074 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
9001f036:	4810      	ldr	r0, [pc, #64]	@ (9001f078 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001f038:	f008 fa6d 	bl	90027516 <__aeabi_atexit>
9001f03c:	4c0f      	ldr	r4, [pc, #60]	@ (9001f07c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9001f03e:	7823      	ldrb	r3, [r4, #0]
9001f040:	f3bf 8f5b 	dmb	ish
9001f044:	07db      	lsls	r3, r3, #31
9001f046:	d40b      	bmi.n	9001f060 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001f048:	4620      	mov	r0, r4
9001f04a:	f008 fa6b 	bl	90027524 <__cxa_guard_acquire>
9001f04e:	b138      	cbz	r0, 9001f060 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001f050:	4620      	mov	r0, r4
9001f052:	f008 fa73 	bl	9002753c <__cxa_guard_release>
9001f056:	4a06      	ldr	r2, [pc, #24]	@ (9001f070 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001f058:	4909      	ldr	r1, [pc, #36]	@ (9001f080 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
9001f05a:	480a      	ldr	r0, [pc, #40]	@ (9001f084 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001f05c:	f008 fa5b 	bl	90027516 <__aeabi_atexit>
9001f060:	4b05      	ldr	r3, [pc, #20]	@ (9001f078 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001f062:	646b      	str	r3, [r5, #68]	@ 0x44
9001f064:	4b07      	ldr	r3, [pc, #28]	@ (9001f084 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001f066:	64ab      	str	r3, [r5, #72]	@ 0x48
9001f068:	bd38      	pop	{r3, r4, r5, pc}
9001f06a:	bf00      	nop
9001f06c:	2001ab14 	.word	0x2001ab14
9001f070:	20000000 	.word	0x20000000
9001f074:	9001ad0d 	.word	0x9001ad0d
9001f078:	2000017c 	.word	0x2000017c
9001f07c:	2001ab18 	.word	0x2001ab18
9001f080:	9001ad0b 	.word	0x9001ad0b
9001f084:	20000180 	.word	0x20000180

9001f088 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
9001f088:	b538      	push	{r3, r4, r5, lr}
9001f08a:	4c15      	ldr	r4, [pc, #84]	@ (9001f0e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9001f08c:	4605      	mov	r5, r0
9001f08e:	7823      	ldrb	r3, [r4, #0]
9001f090:	f3bf 8f5b 	dmb	ish
9001f094:	07da      	lsls	r2, r3, #31
9001f096:	d40b      	bmi.n	9001f0b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001f098:	4620      	mov	r0, r4
9001f09a:	f008 fa43 	bl	90027524 <__cxa_guard_acquire>
9001f09e:	b138      	cbz	r0, 9001f0b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001f0a0:	4620      	mov	r0, r4
9001f0a2:	f008 fa4b 	bl	9002753c <__cxa_guard_release>
9001f0a6:	4a0f      	ldr	r2, [pc, #60]	@ (9001f0e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001f0a8:	490f      	ldr	r1, [pc, #60]	@ (9001f0e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
9001f0aa:	4810      	ldr	r0, [pc, #64]	@ (9001f0ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001f0ac:	f008 fa33 	bl	90027516 <__aeabi_atexit>
9001f0b0:	4c0f      	ldr	r4, [pc, #60]	@ (9001f0f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
9001f0b2:	7823      	ldrb	r3, [r4, #0]
9001f0b4:	f3bf 8f5b 	dmb	ish
9001f0b8:	07db      	lsls	r3, r3, #31
9001f0ba:	d40b      	bmi.n	9001f0d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001f0bc:	4620      	mov	r0, r4
9001f0be:	f008 fa31 	bl	90027524 <__cxa_guard_acquire>
9001f0c2:	b138      	cbz	r0, 9001f0d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001f0c4:	4620      	mov	r0, r4
9001f0c6:	f008 fa39 	bl	9002753c <__cxa_guard_release>
9001f0ca:	4a06      	ldr	r2, [pc, #24]	@ (9001f0e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001f0cc:	4909      	ldr	r1, [pc, #36]	@ (9001f0f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9001f0ce:	480a      	ldr	r0, [pc, #40]	@ (9001f0f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001f0d0:	f008 fa21 	bl	90027516 <__aeabi_atexit>
9001f0d4:	4b05      	ldr	r3, [pc, #20]	@ (9001f0ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001f0d6:	63eb      	str	r3, [r5, #60]	@ 0x3c
9001f0d8:	4b07      	ldr	r3, [pc, #28]	@ (9001f0f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001f0da:	642b      	str	r3, [r5, #64]	@ 0x40
9001f0dc:	bd38      	pop	{r3, r4, r5, pc}
9001f0de:	bf00      	nop
9001f0e0:	2001ab34 	.word	0x2001ab34
9001f0e4:	20000000 	.word	0x20000000
9001f0e8:	9001ad11 	.word	0x9001ad11
9001f0ec:	2000019c 	.word	0x2000019c
9001f0f0:	2001ab38 	.word	0x2001ab38
9001f0f4:	9001ad0f 	.word	0x9001ad0f
9001f0f8:	200001a0 	.word	0x200001a0

9001f0fc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
9001f0fc:	b510      	push	{r4, lr}
9001f0fe:	4604      	mov	r4, r0
9001f100:	f7ff ff14 	bl	9001ef2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
9001f104:	4620      	mov	r0, r4
9001f106:	f7ff ff85 	bl	9001f014 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
9001f10a:	4620      	mov	r0, r4
9001f10c:	f7ff ff48 	bl	9001efa0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
9001f110:	4620      	mov	r0, r4
9001f112:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f116:	f7ff bfb7 	b.w	9001f088 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

9001f11c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
9001f11c:	b538      	push	{r3, r4, r5, lr}
9001f11e:	4c15      	ldr	r4, [pc, #84]	@ (9001f174 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
9001f120:	4605      	mov	r5, r0
9001f122:	7823      	ldrb	r3, [r4, #0]
9001f124:	f3bf 8f5b 	dmb	ish
9001f128:	07da      	lsls	r2, r3, #31
9001f12a:	d40b      	bmi.n	9001f144 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001f12c:	4620      	mov	r0, r4
9001f12e:	f008 f9f9 	bl	90027524 <__cxa_guard_acquire>
9001f132:	b138      	cbz	r0, 9001f144 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001f134:	4620      	mov	r0, r4
9001f136:	f008 fa01 	bl	9002753c <__cxa_guard_release>
9001f13a:	4a0f      	ldr	r2, [pc, #60]	@ (9001f178 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001f13c:	490f      	ldr	r1, [pc, #60]	@ (9001f17c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9001f13e:	4810      	ldr	r0, [pc, #64]	@ (9001f180 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001f140:	f008 f9e9 	bl	90027516 <__aeabi_atexit>
9001f144:	4c0f      	ldr	r4, [pc, #60]	@ (9001f184 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
9001f146:	7823      	ldrb	r3, [r4, #0]
9001f148:	f3bf 8f5b 	dmb	ish
9001f14c:	07db      	lsls	r3, r3, #31
9001f14e:	d40b      	bmi.n	9001f168 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001f150:	4620      	mov	r0, r4
9001f152:	f008 f9e7 	bl	90027524 <__cxa_guard_acquire>
9001f156:	b138      	cbz	r0, 9001f168 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001f158:	4620      	mov	r0, r4
9001f15a:	f008 f9ef 	bl	9002753c <__cxa_guard_release>
9001f15e:	4a06      	ldr	r2, [pc, #24]	@ (9001f178 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001f160:	4909      	ldr	r1, [pc, #36]	@ (9001f188 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
9001f162:	480a      	ldr	r0, [pc, #40]	@ (9001f18c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001f164:	f008 f9d7 	bl	90027516 <__aeabi_atexit>
9001f168:	4b05      	ldr	r3, [pc, #20]	@ (9001f180 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001f16a:	666b      	str	r3, [r5, #100]	@ 0x64
9001f16c:	4b07      	ldr	r3, [pc, #28]	@ (9001f18c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001f16e:	66ab      	str	r3, [r5, #104]	@ 0x68
9001f170:	bd38      	pop	{r3, r4, r5, pc}
9001f172:	bf00      	nop
9001f174:	2001ab1c 	.word	0x2001ab1c
9001f178:	20000000 	.word	0x20000000
9001f17c:	9001acfd 	.word	0x9001acfd
9001f180:	20000184 	.word	0x20000184
9001f184:	2001ab20 	.word	0x2001ab20
9001f188:	9001acfb 	.word	0x9001acfb
9001f18c:	20000188 	.word	0x20000188

9001f190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
9001f190:	b538      	push	{r3, r4, r5, lr}
9001f192:	4c15      	ldr	r4, [pc, #84]	@ (9001f1e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
9001f194:	4605      	mov	r5, r0
9001f196:	7823      	ldrb	r3, [r4, #0]
9001f198:	f3bf 8f5b 	dmb	ish
9001f19c:	07da      	lsls	r2, r3, #31
9001f19e:	d40b      	bmi.n	9001f1b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001f1a0:	4620      	mov	r0, r4
9001f1a2:	f008 f9bf 	bl	90027524 <__cxa_guard_acquire>
9001f1a6:	b138      	cbz	r0, 9001f1b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001f1a8:	4620      	mov	r0, r4
9001f1aa:	f008 f9c7 	bl	9002753c <__cxa_guard_release>
9001f1ae:	4a0f      	ldr	r2, [pc, #60]	@ (9001f1ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001f1b0:	490f      	ldr	r1, [pc, #60]	@ (9001f1f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
9001f1b2:	4810      	ldr	r0, [pc, #64]	@ (9001f1f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001f1b4:	f008 f9af 	bl	90027516 <__aeabi_atexit>
9001f1b8:	4c0f      	ldr	r4, [pc, #60]	@ (9001f1f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
9001f1ba:	7823      	ldrb	r3, [r4, #0]
9001f1bc:	f3bf 8f5b 	dmb	ish
9001f1c0:	07db      	lsls	r3, r3, #31
9001f1c2:	d40b      	bmi.n	9001f1dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001f1c4:	4620      	mov	r0, r4
9001f1c6:	f008 f9ad 	bl	90027524 <__cxa_guard_acquire>
9001f1ca:	b138      	cbz	r0, 9001f1dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001f1cc:	4620      	mov	r0, r4
9001f1ce:	f008 f9b5 	bl	9002753c <__cxa_guard_release>
9001f1d2:	4a06      	ldr	r2, [pc, #24]	@ (9001f1ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001f1d4:	4909      	ldr	r1, [pc, #36]	@ (9001f1fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
9001f1d6:	480a      	ldr	r0, [pc, #40]	@ (9001f200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001f1d8:	f008 f99d 	bl	90027516 <__aeabi_atexit>
9001f1dc:	4b05      	ldr	r3, [pc, #20]	@ (9001f1f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001f1de:	65eb      	str	r3, [r5, #92]	@ 0x5c
9001f1e0:	4b07      	ldr	r3, [pc, #28]	@ (9001f200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001f1e2:	662b      	str	r3, [r5, #96]	@ 0x60
9001f1e4:	bd38      	pop	{r3, r4, r5, pc}
9001f1e6:	bf00      	nop
9001f1e8:	2001aaf4 	.word	0x2001aaf4
9001f1ec:	20000000 	.word	0x20000000
9001f1f0:	9001ad01 	.word	0x9001ad01
9001f1f4:	2000015c 	.word	0x2000015c
9001f1f8:	2001aaf8 	.word	0x2001aaf8
9001f1fc:	9001acff 	.word	0x9001acff
9001f200:	20000160 	.word	0x20000160

9001f204 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
9001f204:	b510      	push	{r4, lr}
9001f206:	4604      	mov	r4, r0
9001f208:	f7ff ff88 	bl	9001f11c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9001f20c:	4620      	mov	r0, r4
9001f20e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f212:	f7ff bfbd 	b.w	9001f190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

9001f218 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
9001f218:	b538      	push	{r3, r4, r5, lr}
9001f21a:	4c15      	ldr	r4, [pc, #84]	@ (9001f270 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
9001f21c:	4605      	mov	r5, r0
9001f21e:	7823      	ldrb	r3, [r4, #0]
9001f220:	f3bf 8f5b 	dmb	ish
9001f224:	07da      	lsls	r2, r3, #31
9001f226:	d40b      	bmi.n	9001f240 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001f228:	4620      	mov	r0, r4
9001f22a:	f008 f97b 	bl	90027524 <__cxa_guard_acquire>
9001f22e:	b138      	cbz	r0, 9001f240 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001f230:	4620      	mov	r0, r4
9001f232:	f008 f983 	bl	9002753c <__cxa_guard_release>
9001f236:	4a0f      	ldr	r2, [pc, #60]	@ (9001f274 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001f238:	490f      	ldr	r1, [pc, #60]	@ (9001f278 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
9001f23a:	4810      	ldr	r0, [pc, #64]	@ (9001f27c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001f23c:	f008 f96b 	bl	90027516 <__aeabi_atexit>
9001f240:	4c0f      	ldr	r4, [pc, #60]	@ (9001f280 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
9001f242:	7823      	ldrb	r3, [r4, #0]
9001f244:	f3bf 8f5b 	dmb	ish
9001f248:	07db      	lsls	r3, r3, #31
9001f24a:	d40b      	bmi.n	9001f264 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001f24c:	4620      	mov	r0, r4
9001f24e:	f008 f969 	bl	90027524 <__cxa_guard_acquire>
9001f252:	b138      	cbz	r0, 9001f264 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001f254:	4620      	mov	r0, r4
9001f256:	f008 f971 	bl	9002753c <__cxa_guard_release>
9001f25a:	4a06      	ldr	r2, [pc, #24]	@ (9001f274 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001f25c:	4909      	ldr	r1, [pc, #36]	@ (9001f284 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9001f25e:	480a      	ldr	r0, [pc, #40]	@ (9001f288 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001f260:	f008 f959 	bl	90027516 <__aeabi_atexit>
9001f264:	4b05      	ldr	r3, [pc, #20]	@ (9001f27c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001f266:	676b      	str	r3, [r5, #116]	@ 0x74
9001f268:	4b07      	ldr	r3, [pc, #28]	@ (9001f288 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001f26a:	67ab      	str	r3, [r5, #120]	@ 0x78
9001f26c:	bd38      	pop	{r3, r4, r5, pc}
9001f26e:	bf00      	nop
9001f270:	2001aaec 	.word	0x2001aaec
9001f274:	20000000 	.word	0x20000000
9001f278:	9001acf5 	.word	0x9001acf5
9001f27c:	20000154 	.word	0x20000154
9001f280:	2001aaf0 	.word	0x2001aaf0
9001f284:	9001acf3 	.word	0x9001acf3
9001f288:	20000158 	.word	0x20000158

9001f28c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9001f28c:	b538      	push	{r3, r4, r5, lr}
9001f28e:	4c15      	ldr	r4, [pc, #84]	@ (9001f2e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
9001f290:	4605      	mov	r5, r0
9001f292:	7823      	ldrb	r3, [r4, #0]
9001f294:	f3bf 8f5b 	dmb	ish
9001f298:	07da      	lsls	r2, r3, #31
9001f29a:	d40b      	bmi.n	9001f2b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001f29c:	4620      	mov	r0, r4
9001f29e:	f008 f941 	bl	90027524 <__cxa_guard_acquire>
9001f2a2:	b138      	cbz	r0, 9001f2b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001f2a4:	4620      	mov	r0, r4
9001f2a6:	f008 f949 	bl	9002753c <__cxa_guard_release>
9001f2aa:	4a0f      	ldr	r2, [pc, #60]	@ (9001f2e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001f2ac:	490f      	ldr	r1, [pc, #60]	@ (9001f2ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9001f2ae:	4810      	ldr	r0, [pc, #64]	@ (9001f2f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001f2b0:	f008 f931 	bl	90027516 <__aeabi_atexit>
9001f2b4:	4c0f      	ldr	r4, [pc, #60]	@ (9001f2f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
9001f2b6:	7823      	ldrb	r3, [r4, #0]
9001f2b8:	f3bf 8f5b 	dmb	ish
9001f2bc:	07db      	lsls	r3, r3, #31
9001f2be:	d40b      	bmi.n	9001f2d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001f2c0:	4620      	mov	r0, r4
9001f2c2:	f008 f92f 	bl	90027524 <__cxa_guard_acquire>
9001f2c6:	b138      	cbz	r0, 9001f2d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001f2c8:	4620      	mov	r0, r4
9001f2ca:	f008 f937 	bl	9002753c <__cxa_guard_release>
9001f2ce:	4a06      	ldr	r2, [pc, #24]	@ (9001f2e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001f2d0:	4909      	ldr	r1, [pc, #36]	@ (9001f2f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9001f2d2:	480a      	ldr	r0, [pc, #40]	@ (9001f2fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001f2d4:	f008 f91f 	bl	90027516 <__aeabi_atexit>
9001f2d8:	4b05      	ldr	r3, [pc, #20]	@ (9001f2f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001f2da:	66eb      	str	r3, [r5, #108]	@ 0x6c
9001f2dc:	4b07      	ldr	r3, [pc, #28]	@ (9001f2fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001f2de:	672b      	str	r3, [r5, #112]	@ 0x70
9001f2e0:	bd38      	pop	{r3, r4, r5, pc}
9001f2e2:	bf00      	nop
9001f2e4:	2001aae4 	.word	0x2001aae4
9001f2e8:	20000000 	.word	0x20000000
9001f2ec:	9001acf9 	.word	0x9001acf9
9001f2f0:	2000014c 	.word	0x2000014c
9001f2f4:	2001aae8 	.word	0x2001aae8
9001f2f8:	9001acf7 	.word	0x9001acf7
9001f2fc:	20000150 	.word	0x20000150

9001f300 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
9001f300:	b510      	push	{r4, lr}
9001f302:	4604      	mov	r4, r0
9001f304:	f7ff ff88 	bl	9001f218 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
9001f308:	4620      	mov	r0, r4
9001f30a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f30e:	f7ff bfbd 	b.w	9001f28c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

9001f312 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
9001f312:	b510      	push	{r4, lr}
9001f314:	4604      	mov	r4, r0
9001f316:	f7ff fff3 	bl	9001f300 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
9001f31a:	4620      	mov	r0, r4
9001f31c:	f7ff ff72 	bl	9001f204 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
9001f320:	4620      	mov	r0, r4
9001f322:	f7ff fdf9 	bl	9001ef18 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
9001f326:	4620      	mov	r0, r4
9001f328:	f7ff fcfa 	bl	9001ed20 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
9001f32c:	4620      	mov	r0, r4
9001f32e:	f7ff fd75 	bl	9001ee1c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
9001f332:	4620      	mov	r0, r4
9001f334:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f338:	f7ff bee0 	b.w	9001f0fc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

9001f33c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
9001f33c:	b538      	push	{r3, r4, r5, lr}
9001f33e:	4c0b      	ldr	r4, [pc, #44]	@ (9001f36c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
9001f340:	4605      	mov	r5, r0
9001f342:	7823      	ldrb	r3, [r4, #0]
9001f344:	f3bf 8f5b 	dmb	ish
9001f348:	07db      	lsls	r3, r3, #31
9001f34a:	d40b      	bmi.n	9001f364 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001f34c:	4620      	mov	r0, r4
9001f34e:	f008 f8e9 	bl	90027524 <__cxa_guard_acquire>
9001f352:	b138      	cbz	r0, 9001f364 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001f354:	4620      	mov	r0, r4
9001f356:	f008 f8f1 	bl	9002753c <__cxa_guard_release>
9001f35a:	4a05      	ldr	r2, [pc, #20]	@ (9001f370 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
9001f35c:	4905      	ldr	r1, [pc, #20]	@ (9001f374 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9001f35e:	4806      	ldr	r0, [pc, #24]	@ (9001f378 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001f360:	f008 f8d9 	bl	90027516 <__aeabi_atexit>
9001f364:	4b04      	ldr	r3, [pc, #16]	@ (9001f378 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001f366:	67eb      	str	r3, [r5, #124]	@ 0x7c
9001f368:	bd38      	pop	{r3, r4, r5, pc}
9001f36a:	bf00      	nop
9001f36c:	2001aad8 	.word	0x2001aad8
9001f370:	20000000 	.word	0x20000000
9001f374:	9001acf1 	.word	0x9001acf1
9001f378:	20000144 	.word	0x20000144

9001f37c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9001f37c:	b538      	push	{r3, r4, r5, lr}
9001f37e:	4c0b      	ldr	r4, [pc, #44]	@ (9001f3ac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
9001f380:	4605      	mov	r5, r0
9001f382:	7823      	ldrb	r3, [r4, #0]
9001f384:	f3bf 8f5b 	dmb	ish
9001f388:	07db      	lsls	r3, r3, #31
9001f38a:	d40b      	bmi.n	9001f3a4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001f38c:	4620      	mov	r0, r4
9001f38e:	f008 f8c9 	bl	90027524 <__cxa_guard_acquire>
9001f392:	b138      	cbz	r0, 9001f3a4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001f394:	4620      	mov	r0, r4
9001f396:	f008 f8d1 	bl	9002753c <__cxa_guard_release>
9001f39a:	4a05      	ldr	r2, [pc, #20]	@ (9001f3b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
9001f39c:	4905      	ldr	r1, [pc, #20]	@ (9001f3b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
9001f39e:	4806      	ldr	r0, [pc, #24]	@ (9001f3b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001f3a0:	f008 f8b9 	bl	90027516 <__aeabi_atexit>
9001f3a4:	4b04      	ldr	r3, [pc, #16]	@ (9001f3b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001f3a6:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
9001f3aa:	bd38      	pop	{r3, r4, r5, pc}
9001f3ac:	2001aadc 	.word	0x2001aadc
9001f3b0:	20000000 	.word	0x20000000
9001f3b4:	9001acef 	.word	0x9001acef
9001f3b8:	20000148 	.word	0x20000148

9001f3bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
9001f3bc:	b570      	push	{r4, r5, r6, lr}
9001f3be:	4d0d      	ldr	r5, [pc, #52]	@ (9001f3f4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
9001f3c0:	4606      	mov	r6, r0
9001f3c2:	4c0d      	ldr	r4, [pc, #52]	@ (9001f3f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
9001f3c4:	782b      	ldrb	r3, [r5, #0]
9001f3c6:	f3bf 8f5b 	dmb	ish
9001f3ca:	f013 0f01 	tst.w	r3, #1
9001f3ce:	d10d      	bne.n	9001f3ec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001f3d0:	4628      	mov	r0, r5
9001f3d2:	f008 f8a7 	bl	90027524 <__cxa_guard_acquire>
9001f3d6:	b148      	cbz	r0, 9001f3ec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001f3d8:	4b08      	ldr	r3, [pc, #32]	@ (9001f3fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
9001f3da:	4628      	mov	r0, r5
9001f3dc:	6023      	str	r3, [r4, #0]
9001f3de:	f008 f8ad 	bl	9002753c <__cxa_guard_release>
9001f3e2:	4a07      	ldr	r2, [pc, #28]	@ (9001f400 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
9001f3e4:	4620      	mov	r0, r4
9001f3e6:	4907      	ldr	r1, [pc, #28]	@ (9001f404 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
9001f3e8:	f008 f895 	bl	90027516 <__aeabi_atexit>
9001f3ec:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
9001f3f0:	bd70      	pop	{r4, r5, r6, pc}
9001f3f2:	bf00      	nop
9001f3f4:	2001aae0 	.word	0x2001aae0
9001f3f8:	2001ac58 	.word	0x2001ac58
9001f3fc:	90035c50 	.word	0x90035c50
9001f400:	20000000 	.word	0x20000000
9001f404:	9001aced 	.word	0x9001aced

9001f408 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
9001f408:	b510      	push	{r4, lr}
9001f40a:	4604      	mov	r4, r0
9001f40c:	f7ff ff96 	bl	9001f33c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
9001f410:	4620      	mov	r0, r4
9001f412:	f7ff ffb3 	bl	9001f37c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
9001f416:	4620      	mov	r0, r4
9001f418:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f41c:	f7ff bfce 	b.w	9001f3bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

9001f420 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
9001f420:	b570      	push	{r4, r5, r6, lr}
9001f422:	4d0d      	ldr	r5, [pc, #52]	@ (9001f458 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
9001f424:	4606      	mov	r6, r0
9001f426:	4c0d      	ldr	r4, [pc, #52]	@ (9001f45c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
9001f428:	782b      	ldrb	r3, [r5, #0]
9001f42a:	f3bf 8f5b 	dmb	ish
9001f42e:	f013 0f01 	tst.w	r3, #1
9001f432:	d10d      	bne.n	9001f450 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
9001f434:	4628      	mov	r0, r5
9001f436:	f008 f875 	bl	90027524 <__cxa_guard_acquire>
9001f43a:	b148      	cbz	r0, 9001f450 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
9001f43c:	4b08      	ldr	r3, [pc, #32]	@ (9001f460 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
9001f43e:	4628      	mov	r0, r5
9001f440:	6023      	str	r3, [r4, #0]
9001f442:	f008 f87b 	bl	9002753c <__cxa_guard_release>
9001f446:	4a07      	ldr	r2, [pc, #28]	@ (9001f464 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
9001f448:	4620      	mov	r0, r4
9001f44a:	4907      	ldr	r1, [pc, #28]	@ (9001f468 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
9001f44c:	f008 f863 	bl	90027516 <__aeabi_atexit>
9001f450:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
9001f454:	bd70      	pop	{r4, r5, r6, pc}
9001f456:	bf00      	nop
9001f458:	2001aad4 	.word	0x2001aad4
9001f45c:	2001ab54 	.word	0x2001ab54
9001f460:	90035c6c 	.word	0x90035c6c
9001f464:	20000000 	.word	0x20000000
9001f468:	9001aceb 	.word	0x9001aceb

9001f46c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
9001f46c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f470:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
9001f474:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
9001f478:	2d00      	cmp	r5, #0
9001f47a:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
9001f47e:	fb05 4c0e 	mla	ip, r5, lr, r4
9001f482:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
9001f486:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
9001f48a:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
9001f48e:	eb02 0a0c 	add.w	sl, r2, ip
9001f492:	8808      	ldrh	r0, [r1, #0]
9001f494:	f2c0 80b0 	blt.w	9001f5f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001f498:	45ab      	cmp	fp, r5
9001f49a:	f340 80ad 	ble.w	9001f5f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001f49e:	2c00      	cmp	r4, #0
9001f4a0:	f2c0 80a8 	blt.w	9001f5f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001f4a4:	45a6      	cmp	lr, r4
9001f4a6:	f340 80a5 	ble.w	9001f5f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001f4aa:	f812 200c 	ldrb.w	r2, [r2, ip]
9001f4ae:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
9001f4b2:	1c62      	adds	r2, r4, #1
9001f4b4:	f100 80a3 	bmi.w	9001f5fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001f4b8:	4596      	cmp	lr, r2
9001f4ba:	f340 80a0 	ble.w	9001f5fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001f4be:	f1b9 0f00 	cmp.w	r9, #0
9001f4c2:	f000 809c 	beq.w	9001f5fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001f4c6:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001f4ca:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001f4ce:	3501      	adds	r5, #1
9001f4d0:	f100 8099 	bmi.w	9001f606 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001f4d4:	45ab      	cmp	fp, r5
9001f4d6:	f340 8096 	ble.w	9001f606 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001f4da:	2f00      	cmp	r7, #0
9001f4dc:	f000 8093 	beq.w	9001f606 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001f4e0:	2c00      	cmp	r4, #0
9001f4e2:	f2c0 808e 	blt.w	9001f602 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001f4e6:	45a6      	cmp	lr, r4
9001f4e8:	f340 808b 	ble.w	9001f602 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001f4ec:	f81a 200e 	ldrb.w	r2, [sl, lr]
9001f4f0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
9001f4f4:	3401      	adds	r4, #1
9001f4f6:	f100 8089 	bmi.w	9001f60c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001f4fa:	45a6      	cmp	lr, r4
9001f4fc:	f340 8086 	ble.w	9001f60c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001f500:	f1b9 0f00 	cmp.w	r9, #0
9001f504:	f000 8082 	beq.w	9001f60c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001f508:	44d6      	add	lr, sl
9001f50a:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001f50e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
9001f512:	ea4f 4408 	mov.w	r4, r8, lsl #16
9001f516:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
9001f51a:	fb19 fe07 	smulbb	lr, r9, r7
9001f51e:	f1c7 0210 	rsb	r2, r7, #16
9001f522:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9001f526:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9001f52a:	eba2 0209 	sub.w	r2, r2, r9
9001f52e:	ea44 0808 	orr.w	r8, r4, r8
9001f532:	ea4f 440c 	mov.w	r4, ip, lsl #16
9001f536:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9001f53a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9001f53e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9001f542:	ebce 0747 	rsb	r7, lr, r7, lsl #1
9001f546:	ea44 0c0c 	orr.w	ip, r4, ip
9001f54a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9001f54e:	fb04 f40c 	mul.w	r4, r4, ip
9001f552:	fb02 4808 	mla	r8, r2, r8, r4
9001f556:	041a      	lsls	r2, r3, #16
9001f558:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001f55c:	b2b4      	uxth	r4, r6
9001f55e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9001f562:	43f6      	mvns	r6, r6
9001f564:	4313      	orrs	r3, r2
9001f566:	042a      	lsls	r2, r5, #16
9001f568:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9001f56c:	b2f6      	uxtb	r6, r6
9001f56e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9001f572:	fb0e 8303 	mla	r3, lr, r3, r8
9001f576:	432a      	orrs	r2, r5
9001f578:	fb07 3202 	mla	r2, r7, r2, r3
9001f57c:	10c7      	asrs	r7, r0, #3
9001f57e:	0d53      	lsrs	r3, r2, #21
9001f580:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001f584:	0952      	lsrs	r2, r2, #5
9001f586:	fb17 f706 	smulbb	r7, r7, r6
9001f58a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001f58e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9001f592:	431a      	orrs	r2, r3
9001f594:	b293      	uxth	r3, r2
9001f596:	1202      	asrs	r2, r0, #8
9001f598:	121d      	asrs	r5, r3, #8
9001f59a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001f59e:	00c0      	lsls	r0, r0, #3
9001f5a0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001f5a4:	fb12 f206 	smulbb	r2, r2, r6
9001f5a8:	b2c0      	uxtb	r0, r0
9001f5aa:	fb05 2504 	mla	r5, r5, r4, r2
9001f5ae:	10da      	asrs	r2, r3, #3
9001f5b0:	fb10 f006 	smulbb	r0, r0, r6
9001f5b4:	00db      	lsls	r3, r3, #3
9001f5b6:	b2ad      	uxth	r5, r5
9001f5b8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9001f5bc:	b2db      	uxtb	r3, r3
9001f5be:	fb02 7204 	mla	r2, r2, r4, r7
9001f5c2:	fb03 0004 	mla	r0, r3, r4, r0
9001f5c6:	1c6b      	adds	r3, r5, #1
9001f5c8:	b292      	uxth	r2, r2
9001f5ca:	b280      	uxth	r0, r0
9001f5cc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9001f5d0:	1c43      	adds	r3, r0, #1
9001f5d2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001f5d6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9001f5da:	1c50      	adds	r0, r2, #1
9001f5dc:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9001f5e0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001f5e4:	0952      	lsrs	r2, r2, #5
9001f5e6:	432b      	orrs	r3, r5
9001f5e8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f5ec:	4313      	orrs	r3, r2
9001f5ee:	800b      	strh	r3, [r1, #0]
9001f5f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f5f4:	4680      	mov	r8, r0
9001f5f6:	e75c      	b.n	9001f4b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
9001f5f8:	4684      	mov	ip, r0
9001f5fa:	4680      	mov	r8, r0
9001f5fc:	e767      	b.n	9001f4ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001f5fe:	4684      	mov	ip, r0
9001f600:	e765      	b.n	9001f4ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001f602:	4605      	mov	r5, r0
9001f604:	e776      	b.n	9001f4f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
9001f606:	4603      	mov	r3, r0
9001f608:	4605      	mov	r5, r0
9001f60a:	e782      	b.n	9001f512 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
9001f60c:	4603      	mov	r3, r0
9001f60e:	e780      	b.n	9001f512 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

9001f610 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f614:	b099      	sub	sp, #100	@ 0x64
9001f616:	9215      	str	r2, [sp, #84]	@ 0x54
9001f618:	9309      	str	r3, [sp, #36]	@ 0x24
9001f61a:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
9001f61c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
9001f620:	9016      	str	r0, [sp, #88]	@ 0x58
9001f622:	930d      	str	r3, [sp, #52]	@ 0x34
9001f624:	6850      	ldr	r0, [r2, #4]
9001f626:	910c      	str	r1, [sp, #48]	@ 0x30
9001f628:	6812      	ldr	r2, [r2, #0]
9001f62a:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
9001f62e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
9001f632:	fb00 1303 	mla	r3, r0, r3, r1
9001f636:	eb02 0843 	add.w	r8, r2, r3, lsl #1
9001f63a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001f63c:	681b      	ldr	r3, [r3, #0]
9001f63e:	930b      	str	r3, [sp, #44]	@ 0x2c
9001f640:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001f642:	685e      	ldr	r6, [r3, #4]
9001f644:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f646:	3604      	adds	r6, #4
9001f648:	43db      	mvns	r3, r3
9001f64a:	b2db      	uxtb	r3, r3
9001f64c:	930a      	str	r3, [sp, #40]	@ 0x28
9001f64e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001f650:	2b00      	cmp	r3, #0
9001f652:	dc03      	bgt.n	9001f65c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001f654:	9b15      	ldr	r3, [sp, #84]	@ 0x54
9001f656:	2b00      	cmp	r3, #0
9001f658:	f340 8225 	ble.w	9001faa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001f65c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001f65e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001f662:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001f666:	1e48      	subs	r0, r1, #1
9001f668:	1e57      	subs	r7, r2, #1
9001f66a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f66c:	2b00      	cmp	r3, #0
9001f66e:	f340 80e3 	ble.w	9001f838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001f672:	ea5f 4c2a 	movs.w	ip, sl, asr #16
9001f676:	ea4f 4325 	mov.w	r3, r5, asr #16
9001f67a:	d406      	bmi.n	9001f68a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f67c:	4584      	cmp	ip, r0
9001f67e:	da04      	bge.n	9001f68a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f680:	2b00      	cmp	r3, #0
9001f682:	db02      	blt.n	9001f68a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f684:	42bb      	cmp	r3, r7
9001f686:	f2c0 80d8 	blt.w	9001f83a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001f68a:	f11c 0c01 	adds.w	ip, ip, #1
9001f68e:	f100 80c9 	bmi.w	9001f824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001f692:	4561      	cmp	r1, ip
9001f694:	f2c0 80c6 	blt.w	9001f824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001f698:	3301      	adds	r3, #1
9001f69a:	f100 80c3 	bmi.w	9001f824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001f69e:	429a      	cmp	r2, r3
9001f6a0:	f2c0 80c0 	blt.w	9001f824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001f6a4:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
9001f6a8:	4647      	mov	r7, r8
9001f6aa:	f1bb 0f00 	cmp.w	fp, #0
9001f6ae:	f340 80e3 	ble.w	9001f878 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
9001f6b2:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
9001f6b4:	ea4f 4c25 	mov.w	ip, r5, asr #16
9001f6b8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001f6ba:	f3ca 3003 	ubfx	r0, sl, #12, #4
9001f6be:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001f6c2:	ea5f 422a 	movs.w	r2, sl, asr #16
9001f6c6:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001f6ca:	689b      	ldr	r3, [r3, #8]
9001f6cc:	f100 8121 	bmi.w	9001f912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001f6d0:	f103 39ff 	add.w	r9, r3, #4294967295
9001f6d4:	454a      	cmp	r2, r9
9001f6d6:	f280 811c 	bge.w	9001f912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001f6da:	f1bc 0f00 	cmp.w	ip, #0
9001f6de:	f2c0 8118 	blt.w	9001f912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001f6e2:	f10e 39ff 	add.w	r9, lr, #4294967295
9001f6e6:	45cc      	cmp	ip, r9
9001f6e8:	f280 8113 	bge.w	9001f912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001f6ec:	b21b      	sxth	r3, r3
9001f6ee:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9001f6f0:	fb0c 2203 	mla	r2, ip, r3, r2
9001f6f4:	eb04 0902 	add.w	r9, r4, r2
9001f6f8:	5ca2      	ldrb	r2, [r4, r2]
9001f6fa:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9001f6fe:	2800      	cmp	r0, #0
9001f700:	f000 80fe 	beq.w	9001f900 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
9001f704:	f899 2001 	ldrb.w	r2, [r9, #1]
9001f708:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9001f70c:	9211      	str	r2, [sp, #68]	@ 0x44
9001f70e:	b151      	cbz	r1, 9001f726 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001f710:	eb09 0203 	add.w	r2, r9, r3
9001f714:	f819 3003 	ldrb.w	r3, [r9, r3]
9001f718:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001f71c:	930f      	str	r3, [sp, #60]	@ 0x3c
9001f71e:	7853      	ldrb	r3, [r2, #1]
9001f720:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001f724:	9312      	str	r3, [sp, #72]	@ 0x48
9001f726:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9001f728:	fb10 f201 	smulbb	r2, r0, r1
9001f72c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001f72e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001f732:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001f736:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
9001f73a:	10d2      	asrs	r2, r2, #3
9001f73c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9001f740:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
9001f744:	ea4c 0c03 	orr.w	ip, ip, r3
9001f748:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9001f74a:	041b      	lsls	r3, r3, #16
9001f74c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9001f750:	4323      	orrs	r3, r4
9001f752:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9001f754:	4353      	muls	r3, r2
9001f756:	fb09 330c 	mla	r3, r9, ip, r3
9001f75a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001f75e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9001f762:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9001f766:	ea4c 0e0e 	orr.w	lr, ip, lr
9001f76a:	f1c1 0c10 	rsb	ip, r1, #16
9001f76e:	ebac 0c00 	sub.w	ip, ip, r0
9001f772:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001f776:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001f77a:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001f77e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001f780:	0418      	lsls	r0, r3, #16
9001f782:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001f786:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9001f78a:	4318      	orrs	r0, r3
9001f78c:	fb02 c200 	mla	r2, r2, r0, ip
9001f790:	8838      	ldrh	r0, [r7, #0]
9001f792:	0d53      	lsrs	r3, r2, #21
9001f794:	0952      	lsrs	r2, r2, #5
9001f796:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001f79a:	1201      	asrs	r1, r0, #8
9001f79c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9001f7a0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9001f7a4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9001f7a8:	00c0      	lsls	r0, r0, #3
9001f7aa:	431a      	orrs	r2, r3
9001f7ac:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
9001f7b0:	fb11 f104 	smulbb	r1, r1, r4
9001f7b4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001f7b8:	b292      	uxth	r2, r2
9001f7ba:	fb1e fe04 	smulbb	lr, lr, r4
9001f7be:	b2c0      	uxtb	r0, r0
9001f7c0:	ea4f 2c22 	mov.w	ip, r2, asr #8
9001f7c4:	fb10 f004 	smulbb	r0, r0, r4
9001f7c8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001f7cc:	fb0c 1c03 	mla	ip, ip, r3, r1
9001f7d0:	10d1      	asrs	r1, r2, #3
9001f7d2:	00d2      	lsls	r2, r2, #3
9001f7d4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001f7d8:	fa1f fc8c 	uxth.w	ip, ip
9001f7dc:	b2d2      	uxtb	r2, r2
9001f7de:	fb01 e103 	mla	r1, r1, r3, lr
9001f7e2:	fb02 0303 	mla	r3, r2, r3, r0
9001f7e6:	b289      	uxth	r1, r1
9001f7e8:	b29a      	uxth	r2, r3
9001f7ea:	f10c 0301 	add.w	r3, ip, #1
9001f7ee:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9001f7f2:	1c53      	adds	r3, r2, #1
9001f7f4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001f7f8:	1c4a      	adds	r2, r1, #1
9001f7fa:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001f7fe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001f802:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001f806:	0949      	lsrs	r1, r1, #5
9001f808:	ea43 030c 	orr.w	r3, r3, ip
9001f80c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001f810:	430b      	orrs	r3, r1
9001f812:	803b      	strh	r3, [r7, #0]
9001f814:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9001f816:	3702      	adds	r7, #2
9001f818:	f10b 3bff 	add.w	fp, fp, #4294967295
9001f81c:	449a      	add	sl, r3
9001f81e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001f820:	441d      	add	r5, r3
9001f822:	e742      	b.n	9001f6aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001f824:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9001f826:	f108 0802 	add.w	r8, r8, #2
9001f82a:	449a      	add	sl, r3
9001f82c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001f82e:	441d      	add	r5, r3
9001f830:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f832:	3b01      	subs	r3, #1
9001f834:	9309      	str	r3, [sp, #36]	@ 0x24
9001f836:	e718      	b.n	9001f66a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001f838:	d023      	beq.n	9001f882 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001f83a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f83c:	9825      	ldr	r0, [sp, #148]	@ 0x94
9001f83e:	3b01      	subs	r3, #1
9001f840:	fb00 a003 	mla	r0, r0, r3, sl
9001f844:	1400      	asrs	r0, r0, #16
9001f846:	f53f af2d 	bmi.w	9001f6a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001f84a:	3901      	subs	r1, #1
9001f84c:	4288      	cmp	r0, r1
9001f84e:	f6bf af29 	bge.w	9001f6a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001f852:	9926      	ldr	r1, [sp, #152]	@ 0x98
9001f854:	fb01 5303 	mla	r3, r1, r3, r5
9001f858:	141b      	asrs	r3, r3, #16
9001f85a:	f53f af23 	bmi.w	9001f6a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001f85e:	3a01      	subs	r2, #1
9001f860:	4293      	cmp	r3, r2
9001f862:	f6bf af1f 	bge.w	9001f6a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001f866:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
9001f86a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
9001f86e:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
9001f872:	f1be 0f00 	cmp.w	lr, #0
9001f876:	dc6c      	bgt.n	9001f952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9001f878:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f87a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001f87e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001f882:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001f884:	2b00      	cmp	r3, #0
9001f886:	f340 810e 	ble.w	9001faa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001f88a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001f88e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9001f890:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f894:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f898:	eef0 6a62 	vmov.f32	s13, s5
9001f89c:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001f8a0:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f8a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f8a8:	ee16 aa90 	vmov	sl, s13
9001f8ac:	eef0 6a43 	vmov.f32	s13, s6
9001f8b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f8b4:	ee16 5a90 	vmov	r5, s13
9001f8b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f8bc:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f8c0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f8c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f8c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f8cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f8d0:	ee12 2a90 	vmov	r2, s5
9001f8d4:	eef0 2a47 	vmov.f32	s5, s14
9001f8d8:	fb92 f3f3 	sdiv	r3, r2, r3
9001f8dc:	ee13 2a10 	vmov	r2, s6
9001f8e0:	9325      	str	r3, [sp, #148]	@ 0x94
9001f8e2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9001f8e4:	eeb0 3a67 	vmov.f32	s6, s15
9001f8e8:	fb92 f3f3 	sdiv	r3, r2, r3
9001f8ec:	9326      	str	r3, [sp, #152]	@ 0x98
9001f8ee:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001f8f0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
9001f8f2:	3b01      	subs	r3, #1
9001f8f4:	930c      	str	r3, [sp, #48]	@ 0x30
9001f8f6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9001f8f8:	bf08      	it	eq
9001f8fa:	4613      	moveq	r3, r2
9001f8fc:	9309      	str	r3, [sp, #36]	@ 0x24
9001f8fe:	e6a6      	b.n	9001f64e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001f900:	2900      	cmp	r1, #0
9001f902:	f43f af10 	beq.w	9001f726 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001f906:	f819 3003 	ldrb.w	r3, [r9, r3]
9001f90a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001f90e:	930f      	str	r3, [sp, #60]	@ 0x3c
9001f910:	e709      	b.n	9001f726 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001f912:	f112 0901 	adds.w	r9, r2, #1
9001f916:	f53f af7d 	bmi.w	9001f814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001f91a:	454b      	cmp	r3, r9
9001f91c:	f6ff af7a 	blt.w	9001f814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001f920:	f11c 0901 	adds.w	r9, ip, #1
9001f924:	f53f af76 	bmi.w	9001f814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001f928:	45ce      	cmp	lr, r9
9001f92a:	f6ff af73 	blt.w	9001f814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001f92e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9001f930:	b21b      	sxth	r3, r3
9001f932:	9202      	str	r2, [sp, #8]
9001f934:	fa0f f28e 	sxth.w	r2, lr
9001f938:	9300      	str	r3, [sp, #0]
9001f93a:	4633      	mov	r3, r6
9001f93c:	9201      	str	r2, [sp, #4]
9001f93e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001f940:	e9cd 1405 	strd	r1, r4, [sp, #20]
9001f944:	e9cd c003 	strd	ip, r0, [sp, #12]
9001f948:	4639      	mov	r1, r7
9001f94a:	9816      	ldr	r0, [sp, #88]	@ 0x58
9001f94c:	f7ff fd8e 	bl	9001f46c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
9001f950:	e760      	b.n	9001f814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001f952:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001f954:	ea4f 422a 	mov.w	r2, sl, asr #16
9001f958:	1429      	asrs	r1, r5, #16
9001f95a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9001f95c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9001f960:	f3ca 3c03 	ubfx	ip, sl, #12, #4
9001f964:	f3c5 3003 	ubfx	r0, r5, #12, #4
9001f968:	fb03 2101 	mla	r1, r3, r1, r2
9001f96c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001f96e:	440a      	add	r2, r1
9001f970:	5c61      	ldrb	r1, [r4, r1]
9001f972:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
9001f976:	f1bc 0f00 	cmp.w	ip, #0
9001f97a:	f000 808c 	beq.w	9001fa96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
9001f97e:	7857      	ldrb	r7, [r2, #1]
9001f980:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
9001f984:	9413      	str	r4, [sp, #76]	@ 0x4c
9001f986:	b140      	cbz	r0, 9001f99a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001f988:	18d7      	adds	r7, r2, r3
9001f98a:	5cd3      	ldrb	r3, [r2, r3]
9001f98c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001f990:	9310      	str	r3, [sp, #64]	@ 0x40
9001f992:	787b      	ldrb	r3, [r7, #1]
9001f994:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001f998:	9314      	str	r3, [sp, #80]	@ 0x50
9001f99a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9001f99c:	fb1c f200 	smulbb	r2, ip, r0
9001f9a0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001f9a2:	f10e 3eff 	add.w	lr, lr, #4294967295
9001f9a6:	041f      	lsls	r7, r3, #16
9001f9a8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001f9ac:	10d2      	asrs	r2, r2, #3
9001f9ae:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
9001f9b2:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
9001f9b6:	431f      	orrs	r7, r3
9001f9b8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
9001f9bc:	9317      	str	r3, [sp, #92]	@ 0x5c
9001f9be:	9b14      	ldr	r3, [sp, #80]	@ 0x50
9001f9c0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
9001f9c2:	041b      	lsls	r3, r3, #16
9001f9c4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9001f9c8:	ea43 030b 	orr.w	r3, r3, fp
9001f9cc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001f9d0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9001f9d4:	4353      	muls	r3, r2
9001f9d6:	fb04 3707 	mla	r7, r4, r7, r3
9001f9da:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9001f9de:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9001f9e0:	ea43 0b01 	orr.w	fp, r3, r1
9001f9e4:	f1c0 0110 	rsb	r1, r0, #16
9001f9e8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f9ea:	eba1 0c0c 	sub.w	ip, r1, ip
9001f9ee:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001f9f2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9001f9f6:	fb0c 770b 	mla	r7, ip, fp, r7
9001f9fa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001f9fe:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
9001fa02:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9001fa06:	ea4c 0c0b 	orr.w	ip, ip, fp
9001fa0a:	fb02 770c 	mla	r7, r2, ip, r7
9001fa0e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001fa10:	0d79      	lsrs	r1, r7, #21
9001fa12:	8812      	ldrh	r2, [r2, #0]
9001fa14:	097f      	lsrs	r7, r7, #5
9001fa16:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001fa1a:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9001fa1e:	430f      	orrs	r7, r1
9001fa20:	1211      	asrs	r1, r2, #8
9001fa22:	b2bb      	uxth	r3, r7
9001fa24:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9001fa28:	10d7      	asrs	r7, r2, #3
9001fa2a:	fb11 f104 	smulbb	r1, r1, r4
9001fa2e:	1218      	asrs	r0, r3, #8
9001fa30:	00d2      	lsls	r2, r2, #3
9001fa32:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001fa36:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001fa3a:	fb17 f704 	smulbb	r7, r7, r4
9001fa3e:	b2d2      	uxtb	r2, r2
9001fa40:	fb00 1009 	mla	r0, r0, r9, r1
9001fa44:	10d9      	asrs	r1, r3, #3
9001fa46:	fb12 f204 	smulbb	r2, r2, r4
9001fa4a:	00db      	lsls	r3, r3, #3
9001fa4c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001fa50:	b280      	uxth	r0, r0
9001fa52:	b2db      	uxtb	r3, r3
9001fa54:	fb01 7109 	mla	r1, r1, r9, r7
9001fa58:	fb03 2309 	mla	r3, r3, r9, r2
9001fa5c:	1c42      	adds	r2, r0, #1
9001fa5e:	b289      	uxth	r1, r1
9001fa60:	b29b      	uxth	r3, r3
9001fa62:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9001fa66:	1c4f      	adds	r7, r1, #1
9001fa68:	1c5a      	adds	r2, r3, #1
9001fa6a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9001fa6e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
9001fa72:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9001fa76:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001fa78:	0949      	lsrs	r1, r1, #5
9001fa7a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001fa7e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001fa82:	4310      	orrs	r0, r2
9001fa84:	4308      	orrs	r0, r1
9001fa86:	f823 0b02 	strh.w	r0, [r3], #2
9001fa8a:	930e      	str	r3, [sp, #56]	@ 0x38
9001fa8c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9001fa8e:	449a      	add	sl, r3
9001fa90:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001fa92:	441d      	add	r5, r3
9001fa94:	e6ed      	b.n	9001f872 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
9001fa96:	2800      	cmp	r0, #0
9001fa98:	f43f af7f 	beq.w	9001f99a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001fa9c:	5cd3      	ldrb	r3, [r2, r3]
9001fa9e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001faa2:	9310      	str	r3, [sp, #64]	@ 0x40
9001faa4:	e779      	b.n	9001f99a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001faa6:	b019      	add	sp, #100	@ 0x64
9001faa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001faac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9001faac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001fab0:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
9001fab4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
9001fab8:	f1b8 0f00 	cmp.w	r8, #0
9001fabc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
9001fac0:	fb08 470e 	mla	r7, r8, lr, r4
9001fac4:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
9001fac8:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
9001facc:	eb02 0907 	add.w	r9, r2, r7
9001fad0:	8808      	ldrh	r0, [r1, #0]
9001fad2:	db67      	blt.n	9001fba4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9001fad4:	45c2      	cmp	sl, r8
9001fad6:	dd65      	ble.n	9001fba4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9001fad8:	2c00      	cmp	r4, #0
9001fada:	db61      	blt.n	9001fba0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9001fadc:	45a6      	cmp	lr, r4
9001fade:	dd5f      	ble.n	9001fba0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9001fae0:	5dd2      	ldrb	r2, [r2, r7]
9001fae2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001fae6:	1c62      	adds	r2, r4, #1
9001fae8:	d45f      	bmi.n	9001fbaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001faea:	4596      	cmp	lr, r2
9001faec:	dd5d      	ble.n	9001fbaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001faee:	2d00      	cmp	r5, #0
9001faf0:	d05b      	beq.n	9001fbaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001faf2:	f899 2001 	ldrb.w	r2, [r9, #1]
9001faf6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
9001fafa:	f118 0801 	adds.w	r8, r8, #1
9001fafe:	d458      	bmi.n	9001fbb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001fb00:	45c2      	cmp	sl, r8
9001fb02:	dd56      	ble.n	9001fbb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001fb04:	2e00      	cmp	r6, #0
9001fb06:	d054      	beq.n	9001fbb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001fb08:	2c00      	cmp	r4, #0
9001fb0a:	db50      	blt.n	9001fbae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9001fb0c:	45a6      	cmp	lr, r4
9001fb0e:	dd4e      	ble.n	9001fbae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9001fb10:	f819 200e 	ldrb.w	r2, [r9, lr]
9001fb14:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
9001fb18:	3401      	adds	r4, #1
9001fb1a:	d407      	bmi.n	9001fb2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001fb1c:	45a6      	cmp	lr, r4
9001fb1e:	dd05      	ble.n	9001fb2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001fb20:	b125      	cbz	r5, 9001fb2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001fb22:	44ce      	add	lr, r9
9001fb24:	f89e 0001 	ldrb.w	r0, [lr, #1]
9001fb28:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
9001fb2c:	fb15 f406 	smulbb	r4, r5, r6
9001fb30:	ea4f 430c 	mov.w	r3, ip, lsl #16
9001fb34:	ea4f 4e07 	mov.w	lr, r7, lsl #16
9001fb38:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9001fb3c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9001fb40:	f3c4 04c7 	ubfx	r4, r4, #3, #8
9001fb44:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
9001fb48:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9001fb4c:	ea43 0c0c 	orr.w	ip, r3, ip
9001fb50:	f1c6 0310 	rsb	r3, r6, #16
9001fb54:	ea4e 0707 	orr.w	r7, lr, r7
9001fb58:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
9001fb5c:	1b5b      	subs	r3, r3, r5
9001fb5e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9001fb62:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001fb66:	437d      	muls	r5, r7
9001fb68:	fb03 5c0c 	mla	ip, r3, ip, r5
9001fb6c:	0403      	lsls	r3, r0, #16
9001fb6e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9001fb72:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9001fb76:	4318      	orrs	r0, r3
9001fb78:	0413      	lsls	r3, r2, #16
9001fb7a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9001fb7e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9001fb82:	fb04 c000 	mla	r0, r4, r0, ip
9001fb86:	4313      	orrs	r3, r2
9001fb88:	fb06 0003 	mla	r0, r6, r3, r0
9001fb8c:	0d43      	lsrs	r3, r0, #21
9001fb8e:	0940      	lsrs	r0, r0, #5
9001fb90:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001fb94:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9001fb98:	4318      	orrs	r0, r3
9001fb9a:	8008      	strh	r0, [r1, #0]
9001fb9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001fba0:	4684      	mov	ip, r0
9001fba2:	e7a0      	b.n	9001fae6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
9001fba4:	4607      	mov	r7, r0
9001fba6:	4684      	mov	ip, r0
9001fba8:	e7a7      	b.n	9001fafa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9001fbaa:	4607      	mov	r7, r0
9001fbac:	e7a5      	b.n	9001fafa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9001fbae:	4602      	mov	r2, r0
9001fbb0:	e7b2      	b.n	9001fb18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
9001fbb2:	4602      	mov	r2, r0
9001fbb4:	e7ba      	b.n	9001fb2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

9001fbb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001fbb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fbba:	b093      	sub	sp, #76	@ 0x4c
9001fbbc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001fbc0:	920f      	str	r2, [sp, #60]	@ 0x3c
9001fbc2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
9001fbc4:	9010      	str	r0, [sp, #64]	@ 0x40
9001fbc6:	9108      	str	r1, [sp, #32]
9001fbc8:	6850      	ldr	r0, [r2, #4]
9001fbca:	9306      	str	r3, [sp, #24]
9001fbcc:	6812      	ldr	r2, [r2, #0]
9001fbce:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
9001fbd2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
9001fbd6:	fb00 1303 	mla	r3, r0, r3, r1
9001fbda:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9001fbde:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9001fbe0:	681b      	ldr	r3, [r3, #0]
9001fbe2:	9307      	str	r3, [sp, #28]
9001fbe4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9001fbe6:	685f      	ldr	r7, [r3, #4]
9001fbe8:	3704      	adds	r7, #4
9001fbea:	9b08      	ldr	r3, [sp, #32]
9001fbec:	2b00      	cmp	r3, #0
9001fbee:	dc03      	bgt.n	9001fbf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
9001fbf0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001fbf2:	2b00      	cmp	r3, #0
9001fbf4:	f340 81b2 	ble.w	9001ff5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9001fbf8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9001fbfa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001fbfe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001fc02:	1e48      	subs	r0, r1, #1
9001fc04:	f102 3cff 	add.w	ip, r2, #4294967295
9001fc08:	9b06      	ldr	r3, [sp, #24]
9001fc0a:	2b00      	cmp	r3, #0
9001fc0c:	f340 80a9 	ble.w	9001fd62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001fc10:	ea5f 4e24 	movs.w	lr, r4, asr #16
9001fc14:	ea4f 4326 	mov.w	r3, r6, asr #16
9001fc18:	d406      	bmi.n	9001fc28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001fc1a:	4586      	cmp	lr, r0
9001fc1c:	da04      	bge.n	9001fc28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001fc1e:	2b00      	cmp	r3, #0
9001fc20:	db02      	blt.n	9001fc28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001fc22:	4563      	cmp	r3, ip
9001fc24:	f2c0 809e 	blt.w	9001fd64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
9001fc28:	f11e 0e01 	adds.w	lr, lr, #1
9001fc2c:	f100 808f 	bmi.w	9001fd4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001fc30:	4571      	cmp	r1, lr
9001fc32:	f2c0 808c 	blt.w	9001fd4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001fc36:	3301      	adds	r3, #1
9001fc38:	f100 8089 	bmi.w	9001fd4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001fc3c:	429a      	cmp	r2, r3
9001fc3e:	f2c0 8086 	blt.w	9001fd4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001fc42:	f8dd b018 	ldr.w	fp, [sp, #24]
9001fc46:	46c8      	mov	r8, r9
9001fc48:	f1bb 0f00 	cmp.w	fp, #0
9001fc4c:	f340 80a6 	ble.w	9001fd9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001fc50:	9a24      	ldr	r2, [sp, #144]	@ 0x90
9001fc52:	ea4f 4c26 	mov.w	ip, r6, asr #16
9001fc56:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9001fc58:	f3c4 3003 	ubfx	r0, r4, #12, #4
9001fc5c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001fc60:	1422      	asrs	r2, r4, #16
9001fc62:	f3c6 3103 	ubfx	r1, r6, #12, #4
9001fc66:	689b      	ldr	r3, [r3, #8]
9001fc68:	f100 80e3 	bmi.w	9001fe32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001fc6c:	f103 3aff 	add.w	sl, r3, #4294967295
9001fc70:	4552      	cmp	r2, sl
9001fc72:	f280 80de 	bge.w	9001fe32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001fc76:	f1bc 0f00 	cmp.w	ip, #0
9001fc7a:	f2c0 80da 	blt.w	9001fe32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001fc7e:	f10e 3aff 	add.w	sl, lr, #4294967295
9001fc82:	45d4      	cmp	ip, sl
9001fc84:	f280 80d5 	bge.w	9001fe32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001fc88:	b21b      	sxth	r3, r3
9001fc8a:	9d07      	ldr	r5, [sp, #28]
9001fc8c:	fb0c 2203 	mla	r2, ip, r3, r2
9001fc90:	eb05 0a02 	add.w	sl, r5, r2
9001fc94:	5caa      	ldrb	r2, [r5, r2]
9001fc96:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
9001fc9a:	2800      	cmp	r0, #0
9001fc9c:	f000 80c0 	beq.w	9001fe20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
9001fca0:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001fca4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
9001fca8:	920b      	str	r2, [sp, #44]	@ 0x2c
9001fcaa:	b151      	cbz	r1, 9001fcc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001fcac:	eb0a 0203 	add.w	r2, sl, r3
9001fcb0:	f81a 3003 	ldrb.w	r3, [sl, r3]
9001fcb4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001fcb8:	9309      	str	r3, [sp, #36]	@ 0x24
9001fcba:	7853      	ldrb	r3, [r2, #1]
9001fcbc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001fcc0:	930c      	str	r3, [sp, #48]	@ 0x30
9001fcc2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001fcc4:	fb10 f201 	smulbb	r2, r0, r1
9001fcc8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9001fcca:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001fcce:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001fcd2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9001fcd6:	10d2      	asrs	r2, r2, #3
9001fcd8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9001fcdc:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
9001fce0:	ea4c 0c03 	orr.w	ip, ip, r3
9001fce4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001fce6:	041b      	lsls	r3, r3, #16
9001fce8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9001fcec:	432b      	orrs	r3, r5
9001fcee:	4353      	muls	r3, r2
9001fcf0:	fb0a 330c 	mla	r3, sl, ip, r3
9001fcf4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001fcf8:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9001fcfc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9001fd00:	ea4c 0e0e 	orr.w	lr, ip, lr
9001fd04:	f1c1 0c10 	rsb	ip, r1, #16
9001fd08:	ebac 0c00 	sub.w	ip, ip, r0
9001fd0c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001fd10:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001fd14:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001fd18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001fd1a:	0418      	lsls	r0, r3, #16
9001fd1c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001fd20:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9001fd24:	4318      	orrs	r0, r3
9001fd26:	fb02 c200 	mla	r2, r2, r0, ip
9001fd2a:	0d53      	lsrs	r3, r2, #21
9001fd2c:	0952      	lsrs	r2, r2, #5
9001fd2e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001fd32:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9001fd36:	431a      	orrs	r2, r3
9001fd38:	f8a8 2000 	strh.w	r2, [r8]
9001fd3c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9001fd3e:	f108 0802 	add.w	r8, r8, #2
9001fd42:	f10b 3bff 	add.w	fp, fp, #4294967295
9001fd46:	441c      	add	r4, r3
9001fd48:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9001fd4a:	441e      	add	r6, r3
9001fd4c:	e77c      	b.n	9001fc48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001fd4e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9001fd50:	f109 0902 	add.w	r9, r9, #2
9001fd54:	441c      	add	r4, r3
9001fd56:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9001fd58:	441e      	add	r6, r3
9001fd5a:	9b06      	ldr	r3, [sp, #24]
9001fd5c:	3b01      	subs	r3, #1
9001fd5e:	9306      	str	r3, [sp, #24]
9001fd60:	e752      	b.n	9001fc08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001fd62:	d020      	beq.n	9001fda6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001fd64:	9b06      	ldr	r3, [sp, #24]
9001fd66:	981f      	ldr	r0, [sp, #124]	@ 0x7c
9001fd68:	3b01      	subs	r3, #1
9001fd6a:	fb00 4003 	mla	r0, r0, r3, r4
9001fd6e:	1400      	asrs	r0, r0, #16
9001fd70:	f53f af67 	bmi.w	9001fc42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001fd74:	3901      	subs	r1, #1
9001fd76:	4288      	cmp	r0, r1
9001fd78:	f6bf af63 	bge.w	9001fc42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001fd7c:	9920      	ldr	r1, [sp, #128]	@ 0x80
9001fd7e:	fb01 6303 	mla	r3, r1, r3, r6
9001fd82:	141b      	asrs	r3, r3, #16
9001fd84:	f53f af5d 	bmi.w	9001fc42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001fd88:	3a01      	subs	r2, #1
9001fd8a:	4293      	cmp	r3, r2
9001fd8c:	f6bf af59 	bge.w	9001fc42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001fd90:	f8dd 8018 	ldr.w	r8, [sp, #24]
9001fd94:	46ca      	mov	sl, r9
9001fd96:	f1b8 0f00 	cmp.w	r8, #0
9001fd9a:	dc67      	bgt.n	9001fe6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001fd9c:	9b06      	ldr	r3, [sp, #24]
9001fd9e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9001fda2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9001fda6:	9b08      	ldr	r3, [sp, #32]
9001fda8:	2b00      	cmp	r3, #0
9001fdaa:	f340 80d7 	ble.w	9001ff5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9001fdae:	ee30 0a04 	vadd.f32	s0, s0, s8
9001fdb2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001fdb4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001fdb8:	eeb0 6a62 	vmov.f32	s12, s5
9001fdbc:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001fdc0:	ee31 1a05 	vadd.f32	s2, s2, s10
9001fdc4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001fdc8:	ee16 4a10 	vmov	r4, s12
9001fdcc:	eeb0 6a43 	vmov.f32	s12, s6
9001fdd0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001fdd4:	ee16 6a10 	vmov	r6, s12
9001fdd8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001fddc:	ee61 7a27 	vmul.f32	s15, s2, s15
9001fde0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001fde4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001fde8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001fdec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001fdf0:	ee12 2a90 	vmov	r2, s5
9001fdf4:	eef0 2a47 	vmov.f32	s5, s14
9001fdf8:	fb92 f3f3 	sdiv	r3, r2, r3
9001fdfc:	ee13 2a10 	vmov	r2, s6
9001fe00:	931f      	str	r3, [sp, #124]	@ 0x7c
9001fe02:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001fe04:	eeb0 3a67 	vmov.f32	s6, s15
9001fe08:	fb92 f3f3 	sdiv	r3, r2, r3
9001fe0c:	9320      	str	r3, [sp, #128]	@ 0x80
9001fe0e:	9b08      	ldr	r3, [sp, #32]
9001fe10:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001fe12:	3b01      	subs	r3, #1
9001fe14:	9308      	str	r3, [sp, #32]
9001fe16:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001fe18:	bf08      	it	eq
9001fe1a:	4613      	moveq	r3, r2
9001fe1c:	9306      	str	r3, [sp, #24]
9001fe1e:	e6e4      	b.n	9001fbea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9001fe20:	2900      	cmp	r1, #0
9001fe22:	f43f af4e 	beq.w	9001fcc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001fe26:	f81a 3003 	ldrb.w	r3, [sl, r3]
9001fe2a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001fe2e:	9309      	str	r3, [sp, #36]	@ 0x24
9001fe30:	e747      	b.n	9001fcc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001fe32:	f112 0a01 	adds.w	sl, r2, #1
9001fe36:	d481      	bmi.n	9001fd3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001fe38:	4553      	cmp	r3, sl
9001fe3a:	f6ff af7f 	blt.w	9001fd3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001fe3e:	f11c 0a01 	adds.w	sl, ip, #1
9001fe42:	f53f af7b 	bmi.w	9001fd3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001fe46:	45d6      	cmp	lr, sl
9001fe48:	f6ff af78 	blt.w	9001fd3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001fe4c:	b21b      	sxth	r3, r3
9001fe4e:	e9cd 2c02 	strd	r2, ip, [sp, #8]
9001fe52:	fa0f f28e 	sxth.w	r2, lr
9001fe56:	9300      	str	r3, [sp, #0]
9001fe58:	463b      	mov	r3, r7
9001fe5a:	9201      	str	r2, [sp, #4]
9001fe5c:	9a07      	ldr	r2, [sp, #28]
9001fe5e:	e9cd 0104 	strd	r0, r1, [sp, #16]
9001fe62:	4641      	mov	r1, r8
9001fe64:	9810      	ldr	r0, [sp, #64]	@ 0x40
9001fe66:	f7ff fe21 	bl	9001faac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9001fe6a:	e767      	b.n	9001fd3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001fe6c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9001fe6e:	1422      	asrs	r2, r4, #16
9001fe70:	1431      	asrs	r1, r6, #16
9001fe72:	9d07      	ldr	r5, [sp, #28]
9001fe74:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9001fe78:	f3c4 3e03 	ubfx	lr, r4, #12, #4
9001fe7c:	f3c6 3003 	ubfx	r0, r6, #12, #4
9001fe80:	fb03 2101 	mla	r1, r3, r1, r2
9001fe84:	9a07      	ldr	r2, [sp, #28]
9001fe86:	440a      	add	r2, r1
9001fe88:	5c69      	ldrb	r1, [r5, r1]
9001fe8a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
9001fe8e:	f1be 0f00 	cmp.w	lr, #0
9001fe92:	d05c      	beq.n	9001ff4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
9001fe94:	f892 c001 	ldrb.w	ip, [r2, #1]
9001fe98:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
9001fe9c:	950d      	str	r5, [sp, #52]	@ 0x34
9001fe9e:	b150      	cbz	r0, 9001feb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001fea0:	eb02 0c03 	add.w	ip, r2, r3
9001fea4:	5cd3      	ldrb	r3, [r2, r3]
9001fea6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001feaa:	930a      	str	r3, [sp, #40]	@ 0x28
9001feac:	f89c 3001 	ldrb.w	r3, [ip, #1]
9001feb0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001feb4:	930e      	str	r3, [sp, #56]	@ 0x38
9001feb6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001feb8:	fb1e f200 	smulbb	r2, lr, r0
9001febc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9001febe:	f108 38ff 	add.w	r8, r8, #4294967295
9001fec2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001fec6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001feca:	10d2      	asrs	r2, r2, #3
9001fecc:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
9001fed0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9001fed4:	ea4c 0c03 	orr.w	ip, ip, r3
9001fed8:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
9001fedc:	9311      	str	r3, [sp, #68]	@ 0x44
9001fede:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001fee0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001fee2:	041b      	lsls	r3, r3, #16
9001fee4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9001fee8:	ea43 030b 	orr.w	r3, r3, fp
9001feec:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001fef0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9001fef4:	4353      	muls	r3, r2
9001fef6:	fb05 3c0c 	mla	ip, r5, ip, r3
9001fefa:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9001fefe:	ea43 0b01 	orr.w	fp, r3, r1
9001ff02:	f1c0 0110 	rsb	r1, r0, #16
9001ff06:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001ff08:	eba1 0e0e 	sub.w	lr, r1, lr
9001ff0c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
9001ff10:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9001ff14:	fb0e cc0b 	mla	ip, lr, fp, ip
9001ff18:	ea4f 4b03 	mov.w	fp, r3, lsl #16
9001ff1c:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
9001ff20:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9001ff24:	ea4b 0e0e 	orr.w	lr, fp, lr
9001ff28:	fb02 cc0e 	mla	ip, r2, lr, ip
9001ff2c:	ea4f 535c 	mov.w	r3, ip, lsr #21
9001ff30:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001ff34:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001ff38:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9001ff3c:	ea43 0c0c 	orr.w	ip, r3, ip
9001ff40:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9001ff42:	441c      	add	r4, r3
9001ff44:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9001ff46:	f82a cb02 	strh.w	ip, [sl], #2
9001ff4a:	441e      	add	r6, r3
9001ff4c:	e723      	b.n	9001fd96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001ff4e:	2800      	cmp	r0, #0
9001ff50:	d0b1      	beq.n	9001feb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001ff52:	5cd3      	ldrb	r3, [r2, r3]
9001ff54:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ff58:	930a      	str	r3, [sp, #40]	@ 0x28
9001ff5a:	e7ac      	b.n	9001feb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001ff5c:	b013      	add	sp, #76	@ 0x4c
9001ff5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ff62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
9001ff62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ff66:	880d      	ldrh	r5, [r1, #0]
9001ff68:	b087      	sub	sp, #28
9001ff6a:	10ef      	asrs	r7, r5, #3
9001ff6c:	9103      	str	r1, [sp, #12]
9001ff6e:	ea4f 2a25 	mov.w	sl, r5, asr #8
9001ff72:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
9001ff76:	00ed      	lsls	r5, r5, #3
9001ff78:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ff7c:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9001ff80:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9001ff84:	b2ed      	uxtb	r5, r5
9001ff86:	9701      	str	r7, [sp, #4]
9001ff88:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
9001ff8c:	9502      	str	r5, [sp, #8]
9001ff8e:	9d01      	ldr	r5, [sp, #4]
9001ff90:	9902      	ldr	r1, [sp, #8]
9001ff92:	022d      	lsls	r5, r5, #8
9001ff94:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
9001ff98:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
9001ff9c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
9001ffa0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
9001ffa4:	430d      	orrs	r5, r1
9001ffa6:	fb06 0709 	mla	r7, r6, r9, r0
9001ffaa:	2e00      	cmp	r6, #0
9001ffac:	9505      	str	r5, [sp, #20]
9001ffae:	eb02 0c07 	add.w	ip, r2, r7
9001ffb2:	f2c0 80b6 	blt.w	90020122 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9001ffb6:	45b3      	cmp	fp, r6
9001ffb8:	f340 80b3 	ble.w	90020122 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9001ffbc:	2800      	cmp	r0, #0
9001ffbe:	f2c0 80ae 	blt.w	9002011e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9001ffc2:	4581      	cmp	r9, r0
9001ffc4:	f340 80ab 	ble.w	9002011e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9001ffc8:	5dd7      	ldrb	r7, [r2, r7]
9001ffca:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001ffce:	441f      	add	r7, r3
9001ffd0:	1c42      	adds	r2, r0, #1
9001ffd2:	f100 80a9 	bmi.w	90020128 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001ffd6:	4591      	cmp	r9, r2
9001ffd8:	f340 80a6 	ble.w	90020128 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001ffdc:	2c00      	cmp	r4, #0
9001ffde:	f000 80a3 	beq.w	90020128 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001ffe2:	f89c 5001 	ldrb.w	r5, [ip, #1]
9001ffe6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001ffea:	441d      	add	r5, r3
9001ffec:	3601      	adds	r6, #1
9001ffee:	f100 809f 	bmi.w	90020130 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001fff2:	45b3      	cmp	fp, r6
9001fff4:	f340 809c 	ble.w	90020130 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001fff8:	f1be 0f00 	cmp.w	lr, #0
9001fffc:	f000 8098 	beq.w	90020130 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020000:	2800      	cmp	r0, #0
90020002:	f2c0 8093 	blt.w	9002012c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90020006:	4581      	cmp	r9, r0
90020008:	f340 8090 	ble.w	9002012c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9002000c:	f81c 6009 	ldrb.w	r6, [ip, r9]
90020010:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90020014:	441e      	add	r6, r3
90020016:	3001      	adds	r0, #1
90020018:	f100 808d 	bmi.w	90020136 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9002001c:	4581      	cmp	r9, r0
9002001e:	f340 808a 	ble.w	90020136 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90020022:	2c00      	cmp	r4, #0
90020024:	f000 8087 	beq.w	90020136 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90020028:	44e1      	add	r9, ip
9002002a:	f899 2001 	ldrb.w	r2, [r9, #1]
9002002e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020032:	4413      	add	r3, r2
90020034:	b2a4      	uxth	r4, r4
90020036:	f897 c002 	ldrb.w	ip, [r7, #2]
9002003a:	fa1f fe8e 	uxth.w	lr, lr
9002003e:	9901      	ldr	r1, [sp, #4]
90020040:	fb04 fb0e 	mul.w	fp, r4, lr
90020044:	0124      	lsls	r4, r4, #4
90020046:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
9002004a:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
9002004e:	eba4 040b 	sub.w	r4, r4, fp
90020052:	fa1f f08e 	uxth.w	r0, lr
90020056:	b2a2      	uxth	r2, r4
90020058:	78ac      	ldrb	r4, [r5, #2]
9002005a:	eba9 0900 	sub.w	r9, r9, r0
9002005e:	fa1f fe88 	uxth.w	lr, r8
90020062:	4354      	muls	r4, r2
90020064:	ea6f 0808 	mvn.w	r8, r8
90020068:	fa1f f989 	uxth.w	r9, r9
9002006c:	fa5f f888 	uxtb.w	r8, r8
90020070:	fb09 440c 	mla	r4, r9, ip, r4
90020074:	f896 c002 	ldrb.w	ip, [r6, #2]
90020078:	fb1a fa08 	smulbb	sl, sl, r8
9002007c:	fb00 440c 	mla	r4, r0, ip, r4
90020080:	f893 c002 	ldrb.w	ip, [r3, #2]
90020084:	fb0b 4c0c 	mla	ip, fp, ip, r4
90020088:	787c      	ldrb	r4, [r7, #1]
9002008a:	783f      	ldrb	r7, [r7, #0]
9002008c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90020090:	fb0c ac0e 	mla	ip, ip, lr, sl
90020094:	f895 a001 	ldrb.w	sl, [r5, #1]
90020098:	782d      	ldrb	r5, [r5, #0]
9002009a:	fb02 fa0a 	mul.w	sl, r2, sl
9002009e:	fa1f fc8c 	uxth.w	ip, ip
900200a2:	436a      	muls	r2, r5
900200a4:	7835      	ldrb	r5, [r6, #0]
900200a6:	fb09 aa04 	mla	sl, r9, r4, sl
900200aa:	7874      	ldrb	r4, [r6, #1]
900200ac:	fb09 2207 	mla	r2, r9, r7, r2
900200b0:	fb00 aa04 	mla	sl, r0, r4, sl
900200b4:	785c      	ldrb	r4, [r3, #1]
900200b6:	fb00 2005 	mla	r0, r0, r5, r2
900200ba:	781b      	ldrb	r3, [r3, #0]
900200bc:	fb0b a404 	mla	r4, fp, r4, sl
900200c0:	fb11 fa08 	smulbb	sl, r1, r8
900200c4:	fb0b 0b03 	mla	fp, fp, r3, r0
900200c8:	9b02      	ldr	r3, [sp, #8]
900200ca:	f3c4 2407 	ubfx	r4, r4, #8, #8
900200ce:	fb13 f808 	smulbb	r8, r3, r8
900200d2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
900200d6:	fb04 a40e 	mla	r4, r4, lr, sl
900200da:	f10c 0301 	add.w	r3, ip, #1
900200de:	fb0b 8e0e 	mla	lr, fp, lr, r8
900200e2:	b2a4      	uxth	r4, r4
900200e4:	fa1f fe8e 	uxth.w	lr, lr
900200e8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
900200ec:	f104 0a01 	add.w	sl, r4, #1
900200f0:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
900200f4:	f10e 0c01 	add.w	ip, lr, #1
900200f8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
900200fc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90020100:	0964      	lsrs	r4, r4, #5
90020102:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90020106:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002010a:	ea4c 0c03 	orr.w	ip, ip, r3
9002010e:	9b03      	ldr	r3, [sp, #12]
90020110:	ea4c 0c04 	orr.w	ip, ip, r4
90020114:	f8a3 c000 	strh.w	ip, [r3]
90020118:	b007      	add	sp, #28
9002011a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002011e:	af05      	add	r7, sp, #20
90020120:	e756      	b.n	9001ffd0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
90020122:	ad05      	add	r5, sp, #20
90020124:	462f      	mov	r7, r5
90020126:	e761      	b.n	9001ffec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90020128:	ad05      	add	r5, sp, #20
9002012a:	e75f      	b.n	9001ffec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
9002012c:	ae05      	add	r6, sp, #20
9002012e:	e772      	b.n	90020016 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90020130:	ab05      	add	r3, sp, #20
90020132:	461e      	mov	r6, r3
90020134:	e77e      	b.n	90020034 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
90020136:	ab05      	add	r3, sp, #20
90020138:	e77c      	b.n	90020034 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

9002013a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002013a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002013e:	b095      	sub	sp, #84	@ 0x54
90020140:	9212      	str	r2, [sp, #72]	@ 0x48
90020142:	9309      	str	r3, [sp, #36]	@ 0x24
90020144:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90020146:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
9002014a:	9013      	str	r0, [sp, #76]	@ 0x4c
9002014c:	930f      	str	r3, [sp, #60]	@ 0x3c
9002014e:	6850      	ldr	r0, [r2, #4]
90020150:	910e      	str	r1, [sp, #56]	@ 0x38
90020152:	6812      	ldr	r2, [r2, #0]
90020154:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
90020158:	fb00 1303 	mla	r3, r0, r3, r1
9002015c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020160:	930a      	str	r3, [sp, #40]	@ 0x28
90020162:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90020164:	681b      	ldr	r3, [r3, #0]
90020166:	930d      	str	r3, [sp, #52]	@ 0x34
90020168:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002016a:	685c      	ldr	r4, [r3, #4]
9002016c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002016e:	3404      	adds	r4, #4
90020170:	43db      	mvns	r3, r3
90020172:	b2db      	uxtb	r3, r3
90020174:	930b      	str	r3, [sp, #44]	@ 0x2c
90020176:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90020178:	2b00      	cmp	r3, #0
9002017a:	dc03      	bgt.n	90020184 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9002017c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9002017e:	2b00      	cmp	r3, #0
90020180:	f340 8255 	ble.w	9002062e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90020184:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90020186:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002018a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002018e:	1e48      	subs	r0, r1, #1
90020190:	1e55      	subs	r5, r2, #1
90020192:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020194:	2b00      	cmp	r3, #0
90020196:	f340 80f9 	ble.w	9002038c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9002019a:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
9002019c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002019e:	1436      	asrs	r6, r6, #16
900201a0:	ea4f 4323 	mov.w	r3, r3, asr #16
900201a4:	d406      	bmi.n	900201b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900201a6:	4286      	cmp	r6, r0
900201a8:	da04      	bge.n	900201b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900201aa:	2b00      	cmp	r3, #0
900201ac:	db02      	blt.n	900201b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900201ae:	42ab      	cmp	r3, r5
900201b0:	f2c0 80ed 	blt.w	9002038e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
900201b4:	3601      	adds	r6, #1
900201b6:	f100 80da 	bmi.w	9002036e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
900201ba:	42b1      	cmp	r1, r6
900201bc:	f2c0 80d7 	blt.w	9002036e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
900201c0:	3301      	adds	r3, #1
900201c2:	f100 80d4 	bmi.w	9002036e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
900201c6:	429a      	cmp	r2, r3
900201c8:	f2c0 80d1 	blt.w	9002036e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
900201cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900201ce:	9311      	str	r3, [sp, #68]	@ 0x44
900201d0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900201d2:	930c      	str	r3, [sp, #48]	@ 0x30
900201d4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900201d6:	2b00      	cmp	r3, #0
900201d8:	f340 80fa 	ble.w	900203d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
900201dc:	9826      	ldr	r0, [sp, #152]	@ 0x98
900201de:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900201e0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900201e2:	68c6      	ldr	r6, [r0, #12]
900201e4:	141d      	asrs	r5, r3, #16
900201e6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900201e8:	f3c2 3103 	ubfx	r1, r2, #12, #4
900201ec:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900201ee:	9a26      	ldr	r2, [sp, #152]	@ 0x98
900201f0:	1400      	asrs	r0, r0, #16
900201f2:	f3c3 3303 	ubfx	r3, r3, #12, #4
900201f6:	6892      	ldr	r2, [r2, #8]
900201f8:	f100 813e 	bmi.w	90020478 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900201fc:	1e57      	subs	r7, r2, #1
900201fe:	42b8      	cmp	r0, r7
90020200:	f280 813a 	bge.w	90020478 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020204:	2d00      	cmp	r5, #0
90020206:	f2c0 8137 	blt.w	90020478 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002020a:	1e77      	subs	r7, r6, #1
9002020c:	42bd      	cmp	r5, r7
9002020e:	f280 8133 	bge.w	90020478 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020212:	b212      	sxth	r2, r2
90020214:	fb05 0002 	mla	r0, r5, r2, r0
90020218:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002021a:	f815 a000 	ldrb.w	sl, [r5, r0]
9002021e:	182e      	adds	r6, r5, r0
90020220:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90020224:	eb04 050a 	add.w	r5, r4, sl
90020228:	2b00      	cmp	r3, #0
9002022a:	f000 8117 	beq.w	9002045c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
9002022e:	f896 c001 	ldrb.w	ip, [r6, #1]
90020232:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90020236:	44a4      	add	ip, r4
90020238:	2900      	cmp	r1, #0
9002023a:	f000 8117 	beq.w	9002046c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
9002023e:	18b0      	adds	r0, r6, r2
90020240:	5cb2      	ldrb	r2, [r6, r2]
90020242:	7840      	ldrb	r0, [r0, #1]
90020244:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020248:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002024c:	4422      	add	r2, r4
9002024e:	4420      	add	r0, r4
90020250:	b29b      	uxth	r3, r3
90020252:	f89c 7002 	ldrb.w	r7, [ip, #2]
90020256:	b289      	uxth	r1, r1
90020258:	f895 b002 	ldrb.w	fp, [r5, #2]
9002025c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002025e:	fb03 f901 	mul.w	r9, r3, r1
90020262:	011b      	lsls	r3, r3, #4
90020264:	f8b6 e000 	ldrh.w	lr, [r6]
90020268:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002026c:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
90020270:	eba3 0309 	sub.w	r3, r3, r9
90020274:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
90020278:	b289      	uxth	r1, r1
9002027a:	f814 a00a 	ldrb.w	sl, [r4, sl]
9002027e:	b29b      	uxth	r3, r3
90020280:	eba8 0801 	sub.w	r8, r8, r1
90020284:	435f      	muls	r7, r3
90020286:	fa1f f888 	uxth.w	r8, r8
9002028a:	9310      	str	r3, [sp, #64]	@ 0x40
9002028c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002028e:	fb08 770b 	mla	r7, r8, fp, r7
90020292:	f892 b002 	ldrb.w	fp, [r2, #2]
90020296:	fb01 770b 	mla	r7, r1, fp, r7
9002029a:	f890 b002 	ldrb.w	fp, [r0, #2]
9002029e:	fb09 770b 	mla	r7, r9, fp, r7
900202a2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
900202a6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
900202aa:	f3c7 2707 	ubfx	r7, r7, #8, #8
900202ae:	fb1b fb03 	smulbb	fp, fp, r3
900202b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900202b4:	fb07 b706 	mla	r7, r7, r6, fp
900202b8:	f895 b001 	ldrb.w	fp, [r5, #1]
900202bc:	f89c 5001 	ldrb.w	r5, [ip, #1]
900202c0:	f89c c000 	ldrb.w	ip, [ip]
900202c4:	b2bf      	uxth	r7, r7
900202c6:	435d      	muls	r5, r3
900202c8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900202ca:	fb08 550b 	mla	r5, r8, fp, r5
900202ce:	f892 b001 	ldrb.w	fp, [r2, #1]
900202d2:	fb01 550b 	mla	r5, r1, fp, r5
900202d6:	f890 b001 	ldrb.w	fp, [r0, #1]
900202da:	fb09 550b 	mla	r5, r9, fp, r5
900202de:	ea4f 0bee 	mov.w	fp, lr, asr #3
900202e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900202e6:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
900202ea:	f3c5 2507 	ubfx	r5, r5, #8, #8
900202ee:	fa5f fe8e 	uxtb.w	lr, lr
900202f2:	fb1b fb03 	smulbb	fp, fp, r3
900202f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900202f8:	fb03 f30c 	mul.w	r3, r3, ip
900202fc:	f892 c000 	ldrb.w	ip, [r2]
90020300:	fb05 b506 	mla	r5, r5, r6, fp
90020304:	fb08 330a 	mla	r3, r8, sl, r3
90020308:	b2ad      	uxth	r5, r5
9002030a:	fb01 330c 	mla	r3, r1, ip, r3
9002030e:	f890 c000 	ldrb.w	ip, [r0]
90020312:	f105 0b01 	add.w	fp, r5, #1
90020316:	fb09 3c0c 	mla	ip, r9, ip, r3
9002031a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002031c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90020320:	fb1e fe03 	smulbb	lr, lr, r3
90020324:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90020328:	1c7b      	adds	r3, r7, #1
9002032a:	096d      	lsrs	r5, r5, #5
9002032c:	fb0c e606 	mla	r6, ip, r6, lr
90020330:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90020334:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90020338:	b2b6      	uxth	r6, r6
9002033a:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
9002033e:	1c77      	adds	r7, r6, #1
90020340:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90020344:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020348:	431f      	orrs	r7, r3
9002034a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002034c:	433d      	orrs	r5, r7
9002034e:	801d      	strh	r5, [r3, #0]
90020350:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020352:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90020354:	3302      	adds	r3, #2
90020356:	930c      	str	r3, [sp, #48]	@ 0x30
90020358:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002035a:	4413      	add	r3, r2
9002035c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9002035e:	931f      	str	r3, [sp, #124]	@ 0x7c
90020360:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020362:	4413      	add	r3, r2
90020364:	9320      	str	r3, [sp, #128]	@ 0x80
90020366:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90020368:	3b01      	subs	r3, #1
9002036a:	9311      	str	r3, [sp, #68]	@ 0x44
9002036c:	e732      	b.n	900201d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9002036e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90020370:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90020372:	4433      	add	r3, r6
90020374:	9e22      	ldr	r6, [sp, #136]	@ 0x88
90020376:	931f      	str	r3, [sp, #124]	@ 0x7c
90020378:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002037a:	4433      	add	r3, r6
9002037c:	9320      	str	r3, [sp, #128]	@ 0x80
9002037e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020380:	3b01      	subs	r3, #1
90020382:	9309      	str	r3, [sp, #36]	@ 0x24
90020384:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020386:	3302      	adds	r3, #2
90020388:	930a      	str	r3, [sp, #40]	@ 0x28
9002038a:	e702      	b.n	90020192 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002038c:	d027      	beq.n	900203de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
9002038e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020390:	9821      	ldr	r0, [sp, #132]	@ 0x84
90020392:	3b01      	subs	r3, #1
90020394:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90020396:	fb00 5003 	mla	r0, r0, r3, r5
9002039a:	1400      	asrs	r0, r0, #16
9002039c:	f53f af16 	bmi.w	900201cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900203a0:	3901      	subs	r1, #1
900203a2:	4288      	cmp	r0, r1
900203a4:	f6bf af12 	bge.w	900201cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900203a8:	9922      	ldr	r1, [sp, #136]	@ 0x88
900203aa:	9820      	ldr	r0, [sp, #128]	@ 0x80
900203ac:	fb01 0303 	mla	r3, r1, r3, r0
900203b0:	141b      	asrs	r3, r3, #16
900203b2:	f53f af0b 	bmi.w	900201cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900203b6:	3a01      	subs	r2, #1
900203b8:	4293      	cmp	r3, r2
900203ba:	f6bf af07 	bge.w	900201cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900203be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900203c0:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
900203c4:	9311      	str	r3, [sp, #68]	@ 0x44
900203c6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900203c8:	930c      	str	r3, [sp, #48]	@ 0x30
900203ca:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900203cc:	2b00      	cmp	r3, #0
900203ce:	dc70      	bgt.n	900204b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
900203d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900203d2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900203d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900203d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900203dc:	930a      	str	r3, [sp, #40]	@ 0x28
900203de:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900203e0:	2b00      	cmp	r3, #0
900203e2:	f340 8124 	ble.w	9002062e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
900203e6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900203ea:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900203ec:	ee30 0a04 	vadd.f32	s0, s0, s8
900203f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
900203f4:	eef0 6a62 	vmov.f32	s13, s5
900203f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
900203fc:	ee31 1a05 	vadd.f32	s2, s2, s10
90020400:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020404:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90020408:	eef0 6a43 	vmov.f32	s13, s6
9002040c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020410:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
90020414:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020418:	ee61 7a27 	vmul.f32	s15, s2, s15
9002041c:	ee77 2a62 	vsub.f32	s5, s14, s5
90020420:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020424:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020428:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002042c:	ee12 2a90 	vmov	r2, s5
90020430:	eef0 2a47 	vmov.f32	s5, s14
90020434:	fb92 f3f3 	sdiv	r3, r2, r3
90020438:	ee13 2a10 	vmov	r2, s6
9002043c:	9321      	str	r3, [sp, #132]	@ 0x84
9002043e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90020440:	eeb0 3a67 	vmov.f32	s6, s15
90020444:	fb92 f3f3 	sdiv	r3, r2, r3
90020448:	9322      	str	r3, [sp, #136]	@ 0x88
9002044a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002044c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9002044e:	3b01      	subs	r3, #1
90020450:	930e      	str	r3, [sp, #56]	@ 0x38
90020452:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90020454:	bf08      	it	eq
90020456:	4613      	moveq	r3, r2
90020458:	9309      	str	r3, [sp, #36]	@ 0x24
9002045a:	e68c      	b.n	90020176 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9002045c:	b149      	cbz	r1, 90020472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
9002045e:	5cb2      	ldrb	r2, [r6, r2]
90020460:	4628      	mov	r0, r5
90020462:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020466:	4422      	add	r2, r4
90020468:	46ac      	mov	ip, r5
9002046a:	e6f1      	b.n	90020250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002046c:	4628      	mov	r0, r5
9002046e:	462a      	mov	r2, r5
90020470:	e6ee      	b.n	90020250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020472:	4628      	mov	r0, r5
90020474:	462a      	mov	r2, r5
90020476:	e7f7      	b.n	90020468 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
90020478:	1c47      	adds	r7, r0, #1
9002047a:	f53f af69 	bmi.w	90020350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9002047e:	42ba      	cmp	r2, r7
90020480:	f6ff af66 	blt.w	90020350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020484:	1c6f      	adds	r7, r5, #1
90020486:	f53f af63 	bmi.w	90020350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9002048a:	42be      	cmp	r6, r7
9002048c:	f6ff af60 	blt.w	90020350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020490:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90020492:	b236      	sxth	r6, r6
90020494:	b212      	sxth	r2, r2
90020496:	9002      	str	r0, [sp, #8]
90020498:	9601      	str	r6, [sp, #4]
9002049a:	9200      	str	r2, [sp, #0]
9002049c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9002049e:	e9cd 1705 	strd	r1, r7, [sp, #20]
900204a2:	e9cd 5303 	strd	r5, r3, [sp, #12]
900204a6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
900204aa:	4623      	mov	r3, r4
900204ac:	f7ff fd59 	bl	9001ff62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
900204b0:	e74e      	b.n	90020350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900204b2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900204b4:	9820      	ldr	r0, [sp, #128]	@ 0x80
900204b6:	f3c2 3103 	ubfx	r1, r2, #12, #4
900204ba:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
900204bc:	9a26      	ldr	r2, [sp, #152]	@ 0x98
900204be:	1400      	asrs	r0, r0, #16
900204c0:	142d      	asrs	r5, r5, #16
900204c2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900204c4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
900204c8:	f3c3 3303 	ubfx	r3, r3, #12, #4
900204cc:	fb02 5000 	mla	r0, r2, r0, r5
900204d0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900204d2:	f815 9000 	ldrb.w	r9, [r5, r0]
900204d6:	182e      	adds	r6, r5, r0
900204d8:	eb09 0949 	add.w	r9, r9, r9, lsl #1
900204dc:	eb04 0509 	add.w	r5, r4, r9
900204e0:	2b00      	cmp	r3, #0
900204e2:	f000 8096 	beq.w	90020612 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
900204e6:	7877      	ldrb	r7, [r6, #1]
900204e8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
900204ec:	4427      	add	r7, r4
900204ee:	2900      	cmp	r1, #0
900204f0:	f000 8097 	beq.w	90020622 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
900204f4:	18b0      	adds	r0, r6, r2
900204f6:	5cb2      	ldrb	r2, [r6, r2]
900204f8:	7840      	ldrb	r0, [r0, #1]
900204fa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900204fe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90020502:	4422      	add	r2, r4
90020504:	4420      	add	r0, r4
90020506:	b29b      	uxth	r3, r3
90020508:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002050a:	b289      	uxth	r1, r1
9002050c:	f895 b002 	ldrb.w	fp, [r5, #2]
90020510:	f8b6 c000 	ldrh.w	ip, [r6]
90020514:	fb03 f801 	mul.w	r8, r3, r1
90020518:	011b      	lsls	r3, r3, #4
9002051a:	78be      	ldrb	r6, [r7, #2]
9002051c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90020520:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90020524:	eba3 0308 	sub.w	r3, r3, r8
90020528:	f814 9009 	ldrb.w	r9, [r4, r9]
9002052c:	b289      	uxth	r1, r1
9002052e:	b29b      	uxth	r3, r3
90020530:	ebae 0e01 	sub.w	lr, lr, r1
90020534:	435e      	muls	r6, r3
90020536:	fa1f fe8e 	uxth.w	lr, lr
9002053a:	9310      	str	r3, [sp, #64]	@ 0x40
9002053c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002053e:	fb0e 660b 	mla	r6, lr, fp, r6
90020542:	f892 b002 	ldrb.w	fp, [r2, #2]
90020546:	fb01 660b 	mla	r6, r1, fp, r6
9002054a:	f890 b002 	ldrb.w	fp, [r0, #2]
9002054e:	fb08 660b 	mla	r6, r8, fp, r6
90020552:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90020556:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
9002055a:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002055e:	fb1b fb03 	smulbb	fp, fp, r3
90020562:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020564:	fb06 b60a 	mla	r6, r6, sl, fp
90020568:	f895 b001 	ldrb.w	fp, [r5, #1]
9002056c:	787d      	ldrb	r5, [r7, #1]
9002056e:	783f      	ldrb	r7, [r7, #0]
90020570:	b2b6      	uxth	r6, r6
90020572:	435d      	muls	r5, r3
90020574:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020576:	fb0e 550b 	mla	r5, lr, fp, r5
9002057a:	f892 b001 	ldrb.w	fp, [r2, #1]
9002057e:	fb01 550b 	mla	r5, r1, fp, r5
90020582:	f890 b001 	ldrb.w	fp, [r0, #1]
90020586:	fb08 550b 	mla	r5, r8, fp, r5
9002058a:	ea4f 0bec 	mov.w	fp, ip, asr #3
9002058e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90020592:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90020596:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002059a:	fa5f fc8c 	uxtb.w	ip, ip
9002059e:	fb1b fb03 	smulbb	fp, fp, r3
900205a2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900205a4:	437b      	muls	r3, r7
900205a6:	7817      	ldrb	r7, [r2, #0]
900205a8:	fb05 b50a 	mla	r5, r5, sl, fp
900205ac:	fb0e 3309 	mla	r3, lr, r9, r3
900205b0:	b2ad      	uxth	r5, r5
900205b2:	fb01 3307 	mla	r3, r1, r7, r3
900205b6:	7807      	ldrb	r7, [r0, #0]
900205b8:	f105 0b01 	add.w	fp, r5, #1
900205bc:	fb08 3707 	mla	r7, r8, r7, r3
900205c0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900205c2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
900205c6:	fb1c fc03 	smulbb	ip, ip, r3
900205ca:	f3c7 2707 	ubfx	r7, r7, #8, #8
900205ce:	1c73      	adds	r3, r6, #1
900205d0:	096d      	lsrs	r5, r5, #5
900205d2:	fb07 c70a 	mla	r7, r7, sl, ip
900205d6:	eb03 2616 	add.w	r6, r3, r6, lsr #8
900205da:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900205de:	b2bf      	uxth	r7, r7
900205e0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900205e2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
900205e6:	1c7a      	adds	r2, r7, #1
900205e8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
900205ec:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900205f0:	4316      	orrs	r6, r2
900205f2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900205f4:	432e      	orrs	r6, r5
900205f6:	f823 6b02 	strh.w	r6, [r3], #2
900205fa:	930c      	str	r3, [sp, #48]	@ 0x30
900205fc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900205fe:	4413      	add	r3, r2
90020600:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90020602:	931f      	str	r3, [sp, #124]	@ 0x7c
90020604:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020606:	4413      	add	r3, r2
90020608:	9320      	str	r3, [sp, #128]	@ 0x80
9002060a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002060c:	3b01      	subs	r3, #1
9002060e:	9311      	str	r3, [sp, #68]	@ 0x44
90020610:	e6db      	b.n	900203ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90020612:	b149      	cbz	r1, 90020628 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90020614:	5cb2      	ldrb	r2, [r6, r2]
90020616:	4628      	mov	r0, r5
90020618:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002061c:	4422      	add	r2, r4
9002061e:	462f      	mov	r7, r5
90020620:	e771      	b.n	90020506 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90020622:	4628      	mov	r0, r5
90020624:	462a      	mov	r2, r5
90020626:	e76e      	b.n	90020506 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90020628:	4628      	mov	r0, r5
9002062a:	462a      	mov	r2, r5
9002062c:	e7f7      	b.n	9002061e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002062e:	b015      	add	sp, #84	@ 0x54
90020630:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90020634 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90020634:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020638:	880f      	ldrh	r7, [r1, #0]
9002063a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
9002063e:	023c      	lsls	r4, r7, #8
90020640:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90020644:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
90020648:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
9002064c:	017c      	lsls	r4, r7, #5
9002064e:	00ff      	lsls	r7, r7, #3
90020650:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90020654:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
90020658:	b2ff      	uxtb	r7, r7
9002065a:	ea4b 0404 	orr.w	r4, fp, r4
9002065e:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
90020662:	4327      	orrs	r7, r4
90020664:	fb05 ca0e 	mla	sl, r5, lr, ip
90020668:	2d00      	cmp	r5, #0
9002066a:	9701      	str	r7, [sp, #4]
9002066c:	eb02 080a 	add.w	r8, r2, sl
90020670:	db7e      	blt.n	90020770 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90020672:	45a9      	cmp	r9, r5
90020674:	dd7c      	ble.n	90020770 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90020676:	f1bc 0f00 	cmp.w	ip, #0
9002067a:	db77      	blt.n	9002076c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
9002067c:	45e6      	cmp	lr, ip
9002067e:	dd75      	ble.n	9002076c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90020680:	f812 700a 	ldrb.w	r7, [r2, sl]
90020684:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90020688:	441f      	add	r7, r3
9002068a:	f11c 0201 	adds.w	r2, ip, #1
9002068e:	d472      	bmi.n	90020776 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90020690:	4596      	cmp	lr, r2
90020692:	dd70      	ble.n	90020776 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90020694:	2800      	cmp	r0, #0
90020696:	d06e      	beq.n	90020776 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90020698:	f898 4001 	ldrb.w	r4, [r8, #1]
9002069c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
900206a0:	441c      	add	r4, r3
900206a2:	3501      	adds	r5, #1
900206a4:	d46b      	bmi.n	9002077e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900206a6:	45a9      	cmp	r9, r5
900206a8:	dd69      	ble.n	9002077e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900206aa:	2e00      	cmp	r6, #0
900206ac:	d067      	beq.n	9002077e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900206ae:	f1bc 0f00 	cmp.w	ip, #0
900206b2:	db62      	blt.n	9002077a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
900206b4:	45e6      	cmp	lr, ip
900206b6:	dd60      	ble.n	9002077a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
900206b8:	f818 500e 	ldrb.w	r5, [r8, lr]
900206bc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
900206c0:	441d      	add	r5, r3
900206c2:	f11c 0201 	adds.w	r2, ip, #1
900206c6:	d45d      	bmi.n	90020784 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
900206c8:	4596      	cmp	lr, r2
900206ca:	dd5b      	ble.n	90020784 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
900206cc:	2800      	cmp	r0, #0
900206ce:	d059      	beq.n	90020784 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
900206d0:	44c6      	add	lr, r8
900206d2:	f89e 2001 	ldrb.w	r2, [lr, #1]
900206d6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900206da:	4413      	add	r3, r2
900206dc:	b280      	uxth	r0, r0
900206de:	f897 e002 	ldrb.w	lr, [r7, #2]
900206e2:	b2b2      	uxth	r2, r6
900206e4:	f897 9000 	ldrb.w	r9, [r7]
900206e8:	787f      	ldrb	r7, [r7, #1]
900206ea:	fb00 f602 	mul.w	r6, r0, r2
900206ee:	0100      	lsls	r0, r0, #4
900206f0:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
900206f4:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
900206f8:	1b80      	subs	r0, r0, r6
900206fa:	fa1f fc82 	uxth.w	ip, r2
900206fe:	b282      	uxth	r2, r0
90020700:	78a0      	ldrb	r0, [r4, #2]
90020702:	eba8 080c 	sub.w	r8, r8, ip
90020706:	4350      	muls	r0, r2
90020708:	fa1f f888 	uxth.w	r8, r8
9002070c:	fb08 0e0e 	mla	lr, r8, lr, r0
90020710:	78a8      	ldrb	r0, [r5, #2]
90020712:	fb0c e000 	mla	r0, ip, r0, lr
90020716:	f893 e002 	ldrb.w	lr, [r3, #2]
9002071a:	fb06 0e0e 	mla	lr, r6, lr, r0
9002071e:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
90020722:	f894 e000 	ldrb.w	lr, [r4]
90020726:	fb02 fe0e 	mul.w	lr, r2, lr
9002072a:	fb08 e909 	mla	r9, r8, r9, lr
9002072e:	f895 e000 	ldrb.w	lr, [r5]
90020732:	fb0c 990e 	mla	r9, ip, lr, r9
90020736:	f893 e000 	ldrb.w	lr, [r3]
9002073a:	785b      	ldrb	r3, [r3, #1]
9002073c:	fb06 9e0e 	mla	lr, r6, lr, r9
90020740:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90020744:	ea4e 0e00 	orr.w	lr, lr, r0
90020748:	7860      	ldrb	r0, [r4, #1]
9002074a:	4350      	muls	r0, r2
9002074c:	786a      	ldrb	r2, [r5, #1]
9002074e:	fb08 0007 	mla	r0, r8, r7, r0
90020752:	fb0c 0202 	mla	r2, ip, r2, r0
90020756:	fb06 2303 	mla	r3, r6, r3, r2
9002075a:	095b      	lsrs	r3, r3, #5
9002075c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90020760:	ea4e 0303 	orr.w	r3, lr, r3
90020764:	800b      	strh	r3, [r1, #0]
90020766:	b003      	add	sp, #12
90020768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002076c:	af01      	add	r7, sp, #4
9002076e:	e78c      	b.n	9002068a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90020770:	ac01      	add	r4, sp, #4
90020772:	4627      	mov	r7, r4
90020774:	e795      	b.n	900206a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90020776:	ac01      	add	r4, sp, #4
90020778:	e793      	b.n	900206a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9002077a:	ad01      	add	r5, sp, #4
9002077c:	e7a1      	b.n	900206c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
9002077e:	ab01      	add	r3, sp, #4
90020780:	461d      	mov	r5, r3
90020782:	e7ab      	b.n	900206dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90020784:	ab01      	add	r3, sp, #4
90020786:	e7a9      	b.n	900206dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90020788 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002078c:	b08f      	sub	sp, #60	@ 0x3c
9002078e:	920c      	str	r2, [sp, #48]	@ 0x30
90020790:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
90020792:	900d      	str	r0, [sp, #52]	@ 0x34
90020794:	910a      	str	r1, [sp, #40]	@ 0x28
90020796:	6850      	ldr	r0, [r2, #4]
90020798:	9306      	str	r3, [sp, #24]
9002079a:	6812      	ldr	r2, [r2, #0]
9002079c:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
900207a0:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
900207a4:	fb00 1303 	mla	r3, r0, r3, r1
900207a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900207ac:	9307      	str	r3, [sp, #28]
900207ae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900207b0:	681b      	ldr	r3, [r3, #0]
900207b2:	9308      	str	r3, [sp, #32]
900207b4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900207b6:	685c      	ldr	r4, [r3, #4]
900207b8:	3404      	adds	r4, #4
900207ba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900207bc:	2b00      	cmp	r3, #0
900207be:	dc03      	bgt.n	900207c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
900207c0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900207c2:	2b00      	cmp	r3, #0
900207c4:	f340 81d5 	ble.w	90020b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
900207c8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900207ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900207ce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900207d2:	1e48      	subs	r0, r1, #1
900207d4:	1e56      	subs	r6, r2, #1
900207d6:	9b06      	ldr	r3, [sp, #24]
900207d8:	2b00      	cmp	r3, #0
900207da:	f340 80b6 	ble.w	9002094a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900207de:	ea5f 472b 	movs.w	r7, fp, asr #16
900207e2:	ea4f 4325 	mov.w	r3, r5, asr #16
900207e6:	d406      	bmi.n	900207f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
900207e8:	4287      	cmp	r7, r0
900207ea:	da04      	bge.n	900207f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
900207ec:	2b00      	cmp	r3, #0
900207ee:	db02      	blt.n	900207f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
900207f0:	42b3      	cmp	r3, r6
900207f2:	f2c0 80ab 	blt.w	9002094c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
900207f6:	3701      	adds	r7, #1
900207f8:	f100 809c 	bmi.w	90020934 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
900207fc:	42b9      	cmp	r1, r7
900207fe:	f2c0 8099 	blt.w	90020934 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020802:	3301      	adds	r3, #1
90020804:	f100 8096 	bmi.w	90020934 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020808:	429a      	cmp	r2, r3
9002080a:	f2c0 8093 	blt.w	90020934 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002080e:	9b06      	ldr	r3, [sp, #24]
90020810:	930b      	str	r3, [sp, #44]	@ 0x2c
90020812:	9b07      	ldr	r3, [sp, #28]
90020814:	9309      	str	r3, [sp, #36]	@ 0x24
90020816:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020818:	2b00      	cmp	r3, #0
9002081a:	f340 80b4 	ble.w	90020986 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9002081e:	9820      	ldr	r0, [sp, #128]	@ 0x80
90020820:	142e      	asrs	r6, r5, #16
90020822:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90020824:	f3cb 3303 	ubfx	r3, fp, #12, #4
90020828:	68c7      	ldr	r7, [r0, #12]
9002082a:	ea5f 402b 	movs.w	r0, fp, asr #16
9002082e:	f3c5 3103 	ubfx	r1, r5, #12, #4
90020832:	6892      	ldr	r2, [r2, #8]
90020834:	f100 80fb 	bmi.w	90020a2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020838:	f102 3cff 	add.w	ip, r2, #4294967295
9002083c:	4560      	cmp	r0, ip
9002083e:	f280 80f6 	bge.w	90020a2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020842:	2e00      	cmp	r6, #0
90020844:	f2c0 80f3 	blt.w	90020a2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020848:	f107 3cff 	add.w	ip, r7, #4294967295
9002084c:	4566      	cmp	r6, ip
9002084e:	f280 80ee 	bge.w	90020a2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020852:	b212      	sxth	r2, r2
90020854:	fb06 0002 	mla	r0, r6, r2, r0
90020858:	9e08      	ldr	r6, [sp, #32]
9002085a:	1837      	adds	r7, r6, r0
9002085c:	5c30      	ldrb	r0, [r6, r0]
9002085e:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90020862:	eb04 0c08 	add.w	ip, r4, r8
90020866:	2b00      	cmp	r3, #0
90020868:	f000 80d3 	beq.w	90020a12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
9002086c:	787e      	ldrb	r6, [r7, #1]
9002086e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90020872:	4426      	add	r6, r4
90020874:	2900      	cmp	r1, #0
90020876:	f000 80d4 	beq.w	90020a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9002087a:	18b8      	adds	r0, r7, r2
9002087c:	5cba      	ldrb	r2, [r7, r2]
9002087e:	7840      	ldrb	r0, [r0, #1]
90020880:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020884:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90020888:	4422      	add	r2, r4
9002088a:	4420      	add	r0, r4
9002088c:	b29b      	uxth	r3, r3
9002088e:	78b7      	ldrb	r7, [r6, #2]
90020890:	b289      	uxth	r1, r1
90020892:	f89c a002 	ldrb.w	sl, [ip, #2]
90020896:	f89c c001 	ldrb.w	ip, [ip, #1]
9002089a:	fb03 f901 	mul.w	r9, r3, r1
9002089e:	011b      	lsls	r3, r3, #4
900208a0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900208a4:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
900208a8:	eba3 0309 	sub.w	r3, r3, r9
900208ac:	b289      	uxth	r1, r1
900208ae:	b29b      	uxth	r3, r3
900208b0:	ebae 0e01 	sub.w	lr, lr, r1
900208b4:	435f      	muls	r7, r3
900208b6:	fa1f fe8e 	uxth.w	lr, lr
900208ba:	fb0e 770a 	mla	r7, lr, sl, r7
900208be:	f892 a002 	ldrb.w	sl, [r2, #2]
900208c2:	fb01 770a 	mla	r7, r1, sl, r7
900208c6:	f890 a002 	ldrb.w	sl, [r0, #2]
900208ca:	fb09 7a0a 	mla	sl, r9, sl, r7
900208ce:	f814 7008 	ldrb.w	r7, [r4, r8]
900208d2:	f896 8000 	ldrb.w	r8, [r6]
900208d6:	7876      	ldrb	r6, [r6, #1]
900208d8:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
900208dc:	fb03 f808 	mul.w	r8, r3, r8
900208e0:	4373      	muls	r3, r6
900208e2:	fb0e 8807 	mla	r8, lr, r7, r8
900208e6:	7817      	ldrb	r7, [r2, #0]
900208e8:	fb0e 330c 	mla	r3, lr, ip, r3
900208ec:	fb01 8807 	mla	r8, r1, r7, r8
900208f0:	7807      	ldrb	r7, [r0, #0]
900208f2:	fb09 8707 	mla	r7, r9, r7, r8
900208f6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900208fa:	ea47 070a 	orr.w	r7, r7, sl
900208fe:	f892 a001 	ldrb.w	sl, [r2, #1]
90020902:	fb01 310a 	mla	r1, r1, sl, r3
90020906:	f890 a001 	ldrb.w	sl, [r0, #1]
9002090a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002090c:	fb09 1a0a 	mla	sl, r9, sl, r1
90020910:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90020914:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90020918:	ea47 070a 	orr.w	r7, r7, sl
9002091c:	801f      	strh	r7, [r3, #0]
9002091e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020920:	3302      	adds	r3, #2
90020922:	9309      	str	r3, [sp, #36]	@ 0x24
90020924:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90020926:	449b      	add	fp, r3
90020928:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002092a:	441d      	add	r5, r3
9002092c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002092e:	3b01      	subs	r3, #1
90020930:	930b      	str	r3, [sp, #44]	@ 0x2c
90020932:	e770      	b.n	90020816 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90020934:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90020936:	449b      	add	fp, r3
90020938:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002093a:	441d      	add	r5, r3
9002093c:	9b06      	ldr	r3, [sp, #24]
9002093e:	3b01      	subs	r3, #1
90020940:	9306      	str	r3, [sp, #24]
90020942:	9b07      	ldr	r3, [sp, #28]
90020944:	3302      	adds	r3, #2
90020946:	9307      	str	r3, [sp, #28]
90020948:	e745      	b.n	900207d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
9002094a:	d023      	beq.n	90020994 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
9002094c:	9b06      	ldr	r3, [sp, #24]
9002094e:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90020950:	3b01      	subs	r3, #1
90020952:	fb00 b003 	mla	r0, r0, r3, fp
90020956:	1400      	asrs	r0, r0, #16
90020958:	f53f af59 	bmi.w	9002080e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002095c:	3901      	subs	r1, #1
9002095e:	4288      	cmp	r0, r1
90020960:	f6bf af55 	bge.w	9002080e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020964:	991c      	ldr	r1, [sp, #112]	@ 0x70
90020966:	fb01 5303 	mla	r3, r1, r3, r5
9002096a:	141b      	asrs	r3, r3, #16
9002096c:	f53f af4f 	bmi.w	9002080e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020970:	3a01      	subs	r2, #1
90020972:	4293      	cmp	r3, r2
90020974:	f6bf af4b 	bge.w	9002080e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020978:	9b06      	ldr	r3, [sp, #24]
9002097a:	9309      	str	r3, [sp, #36]	@ 0x24
9002097c:	9b07      	ldr	r3, [sp, #28]
9002097e:	930b      	str	r3, [sp, #44]	@ 0x2c
90020980:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020982:	2b00      	cmp	r3, #0
90020984:	dc70      	bgt.n	90020a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90020986:	9b06      	ldr	r3, [sp, #24]
90020988:	9a07      	ldr	r2, [sp, #28]
9002098a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9002098e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020992:	9307      	str	r3, [sp, #28]
90020994:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020996:	2b00      	cmp	r3, #0
90020998:	f340 80eb 	ble.w	90020b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9002099c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900209a0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900209a2:	ee30 0a04 	vadd.f32	s0, s0, s8
900209a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900209aa:	eef0 6a62 	vmov.f32	s13, s5
900209ae:	eec7 7a00 	vdiv.f32	s15, s14, s0
900209b2:	ee31 1a05 	vadd.f32	s2, s2, s10
900209b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900209ba:	ee16 ba90 	vmov	fp, s13
900209be:	eef0 6a43 	vmov.f32	s13, s6
900209c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900209c6:	ee16 5a90 	vmov	r5, s13
900209ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
900209ce:	ee61 7a27 	vmul.f32	s15, s2, s15
900209d2:	ee77 2a62 	vsub.f32	s5, s14, s5
900209d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900209da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900209de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900209e2:	ee12 2a90 	vmov	r2, s5
900209e6:	eef0 2a47 	vmov.f32	s5, s14
900209ea:	fb92 f3f3 	sdiv	r3, r2, r3
900209ee:	ee13 2a10 	vmov	r2, s6
900209f2:	931b      	str	r3, [sp, #108]	@ 0x6c
900209f4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900209f6:	eeb0 3a67 	vmov.f32	s6, s15
900209fa:	fb92 f3f3 	sdiv	r3, r2, r3
900209fe:	931c      	str	r3, [sp, #112]	@ 0x70
90020a00:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020a02:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90020a04:	3b01      	subs	r3, #1
90020a06:	930a      	str	r3, [sp, #40]	@ 0x28
90020a08:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90020a0a:	bf08      	it	eq
90020a0c:	4613      	moveq	r3, r2
90020a0e:	9306      	str	r3, [sp, #24]
90020a10:	e6d3      	b.n	900207ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90020a12:	b149      	cbz	r1, 90020a28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90020a14:	5cba      	ldrb	r2, [r7, r2]
90020a16:	4660      	mov	r0, ip
90020a18:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020a1c:	4422      	add	r2, r4
90020a1e:	4666      	mov	r6, ip
90020a20:	e734      	b.n	9002088c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90020a22:	4660      	mov	r0, ip
90020a24:	4662      	mov	r2, ip
90020a26:	e731      	b.n	9002088c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90020a28:	4660      	mov	r0, ip
90020a2a:	4662      	mov	r2, ip
90020a2c:	e7f7      	b.n	90020a1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90020a2e:	f110 0c01 	adds.w	ip, r0, #1
90020a32:	f53f af74 	bmi.w	9002091e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90020a36:	4562      	cmp	r2, ip
90020a38:	f6ff af71 	blt.w	9002091e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90020a3c:	f116 0c01 	adds.w	ip, r6, #1
90020a40:	f53f af6d 	bmi.w	9002091e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90020a44:	4567      	cmp	r7, ip
90020a46:	f6ff af6a 	blt.w	9002091e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90020a4a:	b23f      	sxth	r7, r7
90020a4c:	b212      	sxth	r2, r2
90020a4e:	9701      	str	r7, [sp, #4]
90020a50:	9200      	str	r2, [sp, #0]
90020a52:	e9cd 3104 	strd	r3, r1, [sp, #16]
90020a56:	e9cd 0602 	strd	r0, r6, [sp, #8]
90020a5a:	4623      	mov	r3, r4
90020a5c:	980d      	ldr	r0, [sp, #52]	@ 0x34
90020a5e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90020a62:	f7ff fde7 	bl	90020634 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
90020a66:	e75a      	b.n	9002091e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90020a68:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90020a6a:	ea4f 462b 	mov.w	r6, fp, asr #16
90020a6e:	1428      	asrs	r0, r5, #16
90020a70:	f3cb 3303 	ubfx	r3, fp, #12, #4
90020a74:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90020a78:	f3c5 3103 	ubfx	r1, r5, #12, #4
90020a7c:	fb02 6000 	mla	r0, r2, r0, r6
90020a80:	9e08      	ldr	r6, [sp, #32]
90020a82:	f816 8000 	ldrb.w	r8, [r6, r0]
90020a86:	1837      	adds	r7, r6, r0
90020a88:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90020a8c:	eb04 0c08 	add.w	ip, r4, r8
90020a90:	2b00      	cmp	r3, #0
90020a92:	d060      	beq.n	90020b56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
90020a94:	787e      	ldrb	r6, [r7, #1]
90020a96:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90020a9a:	4426      	add	r6, r4
90020a9c:	2900      	cmp	r1, #0
90020a9e:	d062      	beq.n	90020b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
90020aa0:	18b8      	adds	r0, r7, r2
90020aa2:	5cba      	ldrb	r2, [r7, r2]
90020aa4:	7840      	ldrb	r0, [r0, #1]
90020aa6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020aaa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90020aae:	4422      	add	r2, r4
90020ab0:	4420      	add	r0, r4
90020ab2:	b29b      	uxth	r3, r3
90020ab4:	78b7      	ldrb	r7, [r6, #2]
90020ab6:	b289      	uxth	r1, r1
90020ab8:	f89c a002 	ldrb.w	sl, [ip, #2]
90020abc:	f89c c001 	ldrb.w	ip, [ip, #1]
90020ac0:	fb03 f901 	mul.w	r9, r3, r1
90020ac4:	011b      	lsls	r3, r3, #4
90020ac6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90020aca:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90020ace:	eba3 0309 	sub.w	r3, r3, r9
90020ad2:	b289      	uxth	r1, r1
90020ad4:	b29b      	uxth	r3, r3
90020ad6:	ebae 0e01 	sub.w	lr, lr, r1
90020ada:	435f      	muls	r7, r3
90020adc:	fa1f fe8e 	uxth.w	lr, lr
90020ae0:	fb0e 770a 	mla	r7, lr, sl, r7
90020ae4:	f892 a002 	ldrb.w	sl, [r2, #2]
90020ae8:	fb01 770a 	mla	r7, r1, sl, r7
90020aec:	f890 a002 	ldrb.w	sl, [r0, #2]
90020af0:	fb09 7a0a 	mla	sl, r9, sl, r7
90020af4:	f814 7008 	ldrb.w	r7, [r4, r8]
90020af8:	f896 8000 	ldrb.w	r8, [r6]
90020afc:	7876      	ldrb	r6, [r6, #1]
90020afe:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90020b02:	fb03 f808 	mul.w	r8, r3, r8
90020b06:	4373      	muls	r3, r6
90020b08:	7856      	ldrb	r6, [r2, #1]
90020b0a:	fb0e 8807 	mla	r8, lr, r7, r8
90020b0e:	7817      	ldrb	r7, [r2, #0]
90020b10:	fb0e 330c 	mla	r3, lr, ip, r3
90020b14:	fb01 8807 	mla	r8, r1, r7, r8
90020b18:	7807      	ldrb	r7, [r0, #0]
90020b1a:	fb01 3306 	mla	r3, r1, r6, r3
90020b1e:	fb09 8707 	mla	r7, r9, r7, r8
90020b22:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020b26:	ea47 070a 	orr.w	r7, r7, sl
90020b2a:	f890 a001 	ldrb.w	sl, [r0, #1]
90020b2e:	fb09 3a0a 	mla	sl, r9, sl, r3
90020b32:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020b34:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90020b38:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90020b3c:	ea47 070a 	orr.w	r7, r7, sl
90020b40:	f823 7b02 	strh.w	r7, [r3], #2
90020b44:	930b      	str	r3, [sp, #44]	@ 0x2c
90020b46:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90020b48:	449b      	add	fp, r3
90020b4a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90020b4c:	441d      	add	r5, r3
90020b4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020b50:	3b01      	subs	r3, #1
90020b52:	9309      	str	r3, [sp, #36]	@ 0x24
90020b54:	e714      	b.n	90020980 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
90020b56:	b149      	cbz	r1, 90020b6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90020b58:	5cba      	ldrb	r2, [r7, r2]
90020b5a:	4660      	mov	r0, ip
90020b5c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020b60:	4422      	add	r2, r4
90020b62:	4666      	mov	r6, ip
90020b64:	e7a5      	b.n	90020ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90020b66:	4660      	mov	r0, ip
90020b68:	4662      	mov	r2, ip
90020b6a:	e7a2      	b.n	90020ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90020b6c:	4660      	mov	r0, ip
90020b6e:	4662      	mov	r2, ip
90020b70:	e7f7      	b.n	90020b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
90020b72:	b00f      	add	sp, #60	@ 0x3c
90020b74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90020b78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90020b78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020b7c:	b085      	sub	sp, #20
90020b7e:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
90020b82:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
90020b86:	9102      	str	r1, [sp, #8]
90020b88:	2c00      	cmp	r4, #0
90020b8a:	fb04 710c 	mla	r1, r4, ip, r7
90020b8e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
90020b92:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
90020b96:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
90020b9a:	eb02 0e01 	add.w	lr, r2, r1
90020b9e:	f2c0 8122 	blt.w	90020de6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90020ba2:	45a0      	cmp	r8, r4
90020ba4:	f340 811f 	ble.w	90020de6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90020ba8:	2f00      	cmp	r7, #0
90020baa:	f2c0 811a 	blt.w	90020de2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90020bae:	45bc      	cmp	ip, r7
90020bb0:	f340 8117 	ble.w	90020de2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90020bb4:	5c52      	ldrb	r2, [r2, r1]
90020bb6:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90020bba:	1c7a      	adds	r2, r7, #1
90020bbc:	f100 8116 	bmi.w	90020dec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90020bc0:	4594      	cmp	ip, r2
90020bc2:	f340 8113 	ble.w	90020dec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90020bc6:	2e00      	cmp	r6, #0
90020bc8:	f000 8112 	beq.w	90020df0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
90020bcc:	f89e 2001 	ldrb.w	r2, [lr, #1]
90020bd0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90020bd4:	3401      	adds	r4, #1
90020bd6:	f100 810f 	bmi.w	90020df8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90020bda:	45a0      	cmp	r8, r4
90020bdc:	f340 810c 	ble.w	90020df8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90020be0:	2800      	cmp	r0, #0
90020be2:	f000 810c 	beq.w	90020dfe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90020be6:	2f00      	cmp	r7, #0
90020be8:	f2c0 8104 	blt.w	90020df4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90020bec:	45bc      	cmp	ip, r7
90020bee:	f340 8101 	ble.w	90020df4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90020bf2:	f81e 200c 	ldrb.w	r2, [lr, ip]
90020bf6:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
90020bfa:	3701      	adds	r7, #1
90020bfc:	f100 8102 	bmi.w	90020e04 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90020c00:	45bc      	cmp	ip, r7
90020c02:	f340 80ff 	ble.w	90020e04 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90020c06:	2e00      	cmp	r6, #0
90020c08:	f000 80fe 	beq.w	90020e08 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90020c0c:	44f4      	add	ip, lr
90020c0e:	f89c 2001 	ldrb.w	r2, [ip, #1]
90020c12:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90020c16:	b2b6      	uxth	r6, r6
90020c18:	b280      	uxth	r0, r0
90020c1a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90020c1e:	fb00 fe06 	mul.w	lr, r0, r6
90020c22:	0136      	lsls	r6, r6, #4
90020c24:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90020c28:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90020c2c:	eba6 070e 	sub.w	r7, r6, lr
90020c30:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90020c34:	ea4f 6914 	mov.w	r9, r4, lsr #24
90020c38:	b280      	uxth	r0, r0
90020c3a:	b2bf      	uxth	r7, r7
90020c3c:	1a1b      	subs	r3, r3, r0
90020c3e:	ea4f 6812 	mov.w	r8, r2, lsr #24
90020c42:	fb0a f607 	mul.w	r6, sl, r7
90020c46:	b29b      	uxth	r3, r3
90020c48:	fb0b 6603 	mla	r6, fp, r3, r6
90020c4c:	fb00 6609 	mla	r6, r0, r9, r6
90020c50:	fb0e 6608 	mla	r6, lr, r8, r6
90020c54:	f3c6 2607 	ubfx	r6, r6, #8, #8
90020c58:	9600      	str	r6, [sp, #0]
90020c5a:	2e00      	cmp	r6, #0
90020c5c:	f000 80be 	beq.w	90020ddc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
90020c60:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90020c64:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90020c68:	9e02      	ldr	r6, [sp, #8]
90020c6a:	fb0b fc0c 	mul.w	ip, fp, ip
90020c6e:	fb0b f505 	mul.w	r5, fp, r5
90020c72:	8836      	ldrh	r6, [r6, #0]
90020c74:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90020c78:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90020c7c:	9501      	str	r5, [sp, #4]
90020c7e:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90020c82:	44dc      	add	ip, fp
90020c84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020c88:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90020c8c:	9503      	str	r5, [sp, #12]
90020c8e:	9d01      	ldr	r5, [sp, #4]
90020c90:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90020c94:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90020c98:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90020c9c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90020ca0:	fb0a fc0c 	mul.w	ip, sl, ip
90020ca4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90020ca8:	fb0a fa01 	mul.w	sl, sl, r1
90020cac:	ea4f 251c 	mov.w	r5, ip, lsr #8
90020cb0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90020cb4:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90020cb8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90020cbc:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90020cc0:	4465      	add	r5, ip
90020cc2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90020cc6:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90020cca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020cce:	fb09 fc0c 	mul.w	ip, r9, ip
90020cd2:	0a2d      	lsrs	r5, r5, #8
90020cd4:	fb09 f904 	mul.w	r9, r9, r4
90020cd8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90020cdc:	ea4f 211c 	mov.w	r1, ip, lsr #8
90020ce0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90020ce4:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90020ce8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90020cec:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90020cf0:	437d      	muls	r5, r7
90020cf2:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90020cf6:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90020cfa:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90020cfe:	4461      	add	r1, ip
90020d00:	fb08 f404 	mul.w	r4, r8, r4
90020d04:	ea4f 2919 	mov.w	r9, r9, lsr #8
90020d08:	fb08 f802 	mul.w	r8, r8, r2
90020d0c:	0a09      	lsrs	r1, r1, #8
90020d0e:	0a22      	lsrs	r2, r4, #8
90020d10:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90020d14:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90020d18:	fb07 f70a 	mul.w	r7, r7, sl
90020d1c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90020d20:	4414      	add	r4, r2
90020d22:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90020d26:	0a24      	lsrs	r4, r4, #8
90020d28:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90020d2c:	9a03      	ldr	r2, [sp, #12]
90020d2e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90020d32:	fb02 5503 	mla	r5, r2, r3, r5
90020d36:	ea4f 2818 	mov.w	r8, r8, lsr #8
90020d3a:	9a00      	ldr	r2, [sp, #0]
90020d3c:	fb04 540e 	mla	r4, r4, lr, r5
90020d40:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90020d44:	1235      	asrs	r5, r6, #8
90020d46:	fb01 4100 	mla	r1, r1, r0, r4
90020d4a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90020d4e:	0a09      	lsrs	r1, r1, #8
90020d50:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90020d54:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90020d58:	fb03 7101 	mla	r1, r3, r1, r7
90020d5c:	fb0e 1e08 	mla	lr, lr, r8, r1
90020d60:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90020d64:	fb00 e101 	mla	r1, r0, r1, lr
90020d68:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90020d6c:	b287      	uxth	r7, r0
90020d6e:	0a09      	lsrs	r1, r1, #8
90020d70:	437a      	muls	r2, r7
90020d72:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90020d76:	1c53      	adds	r3, r2, #1
90020d78:	4321      	orrs	r1, r4
90020d7a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90020d7e:	0c0a      	lsrs	r2, r1, #16
90020d80:	f3c1 2407 	ubfx	r4, r1, #8, #8
90020d84:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90020d88:	b2c8      	uxtb	r0, r1
90020d8a:	fb12 f207 	smulbb	r2, r2, r7
90020d8e:	fb14 f407 	smulbb	r4, r4, r7
90020d92:	b2db      	uxtb	r3, r3
90020d94:	fb10 f007 	smulbb	r0, r0, r7
90020d98:	fb05 2503 	mla	r5, r5, r3, r2
90020d9c:	10f2      	asrs	r2, r6, #3
90020d9e:	00f6      	lsls	r6, r6, #3
90020da0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90020da4:	b2ad      	uxth	r5, r5
90020da6:	b2f6      	uxtb	r6, r6
90020da8:	fb02 4203 	mla	r2, r2, r3, r4
90020dac:	fb06 0303 	mla	r3, r6, r3, r0
90020db0:	b294      	uxth	r4, r2
90020db2:	b299      	uxth	r1, r3
90020db4:	1c6b      	adds	r3, r5, #1
90020db6:	1c62      	adds	r2, r4, #1
90020db8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90020dbc:	1c4b      	adds	r3, r1, #1
90020dbe:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90020dc2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90020dc6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90020dca:	0952      	lsrs	r2, r2, #5
90020dcc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90020dd0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90020dd4:	432b      	orrs	r3, r5
90020dd6:	4313      	orrs	r3, r2
90020dd8:	9a02      	ldr	r2, [sp, #8]
90020dda:	8013      	strh	r3, [r2, #0]
90020ddc:	b005      	add	sp, #20
90020dde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020de2:	2500      	movs	r5, #0
90020de4:	e6e9      	b.n	90020bba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90020de6:	2100      	movs	r1, #0
90020de8:	460d      	mov	r5, r1
90020dea:	e6f3      	b.n	90020bd4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90020dec:	2100      	movs	r1, #0
90020dee:	e6f1      	b.n	90020bd4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90020df0:	4631      	mov	r1, r6
90020df2:	e6ef      	b.n	90020bd4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90020df4:	2400      	movs	r4, #0
90020df6:	e700      	b.n	90020bfa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90020df8:	2200      	movs	r2, #0
90020dfa:	4614      	mov	r4, r2
90020dfc:	e70b      	b.n	90020c16 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90020dfe:	4602      	mov	r2, r0
90020e00:	4604      	mov	r4, r0
90020e02:	e708      	b.n	90020c16 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90020e04:	2200      	movs	r2, #0
90020e06:	e706      	b.n	90020c16 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90020e08:	4632      	mov	r2, r6
90020e0a:	e704      	b.n	90020c16 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

90020e0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020e0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020e10:	b09f      	sub	sp, #124	@ 0x7c
90020e12:	921b      	str	r2, [sp, #108]	@ 0x6c
90020e14:	9309      	str	r3, [sp, #36]	@ 0x24
90020e16:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90020e18:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
90020e1c:	901d      	str	r0, [sp, #116]	@ 0x74
90020e1e:	931c      	str	r3, [sp, #112]	@ 0x70
90020e20:	6850      	ldr	r0, [r2, #4]
90020e22:	9119      	str	r1, [sp, #100]	@ 0x64
90020e24:	6812      	ldr	r2, [r2, #0]
90020e26:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90020e28:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
90020e2c:	fb00 1303 	mla	r3, r0, r3, r1
90020e30:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020e34:	930c      	str	r3, [sp, #48]	@ 0x30
90020e36:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90020e38:	681b      	ldr	r3, [r3, #0]
90020e3a:	9312      	str	r3, [sp, #72]	@ 0x48
90020e3c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90020e3e:	685e      	ldr	r6, [r3, #4]
90020e40:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
90020e44:	3604      	adds	r6, #4
90020e46:	930d      	str	r3, [sp, #52]	@ 0x34
90020e48:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90020e4a:	2b00      	cmp	r3, #0
90020e4c:	dc03      	bgt.n	90020e56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90020e4e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90020e50:	2b00      	cmp	r3, #0
90020e52:	f340 8387 	ble.w	90021564 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90020e56:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90020e58:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020e5c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020e60:	1e48      	subs	r0, r1, #1
90020e62:	1e57      	subs	r7, r2, #1
90020e64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020e66:	2b00      	cmp	r3, #0
90020e68:	f340 8194 	ble.w	90021194 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90020e6c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90020e6e:	142b      	asrs	r3, r5, #16
90020e70:	ea5f 4c24 	movs.w	ip, r4, asr #16
90020e74:	d406      	bmi.n	90020e84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90020e76:	4584      	cmp	ip, r0
90020e78:	da04      	bge.n	90020e84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90020e7a:	2b00      	cmp	r3, #0
90020e7c:	db02      	blt.n	90020e84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90020e7e:	42bb      	cmp	r3, r7
90020e80:	f2c0 8189 	blt.w	90021196 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90020e84:	f11c 0c01 	adds.w	ip, ip, #1
90020e88:	f100 8177 	bmi.w	9002117a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90020e8c:	4561      	cmp	r1, ip
90020e8e:	f2c0 8174 	blt.w	9002117a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90020e92:	3301      	adds	r3, #1
90020e94:	f100 8171 	bmi.w	9002117a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90020e98:	429a      	cmp	r2, r3
90020e9a:	f2c0 816e 	blt.w	9002117a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90020e9e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020ea0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
90020ea2:	931a      	str	r3, [sp, #104]	@ 0x68
90020ea4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90020ea6:	2b00      	cmp	r3, #0
90020ea8:	f340 8193 	ble.w	900211d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
90020eac:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90020eae:	ea4f 4c25 	mov.w	ip, r5, asr #16
90020eb2:	f3c5 3103 	ubfx	r1, r5, #12, #4
90020eb6:	f3c3 3203 	ubfx	r2, r3, #12, #4
90020eba:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90020ebc:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
90020ec0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90020ec2:	141b      	asrs	r3, r3, #16
90020ec4:	f100 81d6 	bmi.w	90021274 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90020ec8:	f100 38ff 	add.w	r8, r0, #4294967295
90020ecc:	4543      	cmp	r3, r8
90020ece:	f280 81d1 	bge.w	90021274 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90020ed2:	f1bc 0f00 	cmp.w	ip, #0
90020ed6:	f2c0 81cd 	blt.w	90021274 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90020eda:	f10e 38ff 	add.w	r8, lr, #4294967295
90020ede:	45c4      	cmp	ip, r8
90020ee0:	f280 81c8 	bge.w	90021274 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90020ee4:	b200      	sxth	r0, r0
90020ee6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90020ee8:	fb0c 3300 	mla	r3, ip, r0, r3
90020eec:	eb04 0803 	add.w	r8, r4, r3
90020ef0:	5ce3      	ldrb	r3, [r4, r3]
90020ef2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90020ef6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90020efa:	2a00      	cmp	r2, #0
90020efc:	f000 81af 	beq.w	9002125e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90020f00:	f898 c001 	ldrb.w	ip, [r8, #1]
90020f04:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90020f08:	940e      	str	r4, [sp, #56]	@ 0x38
90020f0a:	0e24      	lsrs	r4, r4, #24
90020f0c:	9415      	str	r4, [sp, #84]	@ 0x54
90020f0e:	b179      	cbz	r1, 90020f30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90020f10:	eb08 0c00 	add.w	ip, r8, r0
90020f14:	f818 0000 	ldrb.w	r0, [r8, r0]
90020f18:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90020f1c:	900a      	str	r0, [sp, #40]	@ 0x28
90020f1e:	0e00      	lsrs	r0, r0, #24
90020f20:	9013      	str	r0, [sp, #76]	@ 0x4c
90020f22:	f89c 0001 	ldrb.w	r0, [ip, #1]
90020f26:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90020f2a:	900f      	str	r0, [sp, #60]	@ 0x3c
90020f2c:	0e00      	lsrs	r0, r0, #24
90020f2e:	9016      	str	r0, [sp, #88]	@ 0x58
90020f30:	b292      	uxth	r2, r2
90020f32:	9815      	ldr	r0, [sp, #84]	@ 0x54
90020f34:	b289      	uxth	r1, r1
90020f36:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90020f38:	fb02 f901 	mul.w	r9, r2, r1
90020f3c:	0112      	lsls	r2, r2, #4
90020f3e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90020f42:	eba2 0809 	sub.w	r8, r2, r9
90020f46:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90020f4a:	b289      	uxth	r1, r1
90020f4c:	fa1f f888 	uxth.w	r8, r8
90020f50:	1a52      	subs	r2, r2, r1
90020f52:	fb08 f000 	mul.w	r0, r8, r0
90020f56:	b292      	uxth	r2, r2
90020f58:	fb02 000e 	mla	r0, r2, lr, r0
90020f5c:	fb01 0004 	mla	r0, r1, r4, r0
90020f60:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90020f62:	fb09 0004 	mla	r0, r9, r4, r0
90020f66:	f3c0 2007 	ubfx	r0, r0, #8, #8
90020f6a:	2800      	cmp	r0, #0
90020f6c:	f000 80fa 	beq.w	90021164 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020f70:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90020f74:	d01b      	beq.n	90020fae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90020f76:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90020f7a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90020f7e:	fb0e fa0a 	mul.w	sl, lr, sl
90020f82:	fb0e fe03 	mul.w	lr, lr, r3
90020f86:	ea4f 231a 	mov.w	r3, sl, lsr #8
90020f8a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90020f8e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90020f92:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90020f96:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90020f9a:	4453      	add	r3, sl
90020f9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020fa0:	0a1b      	lsrs	r3, r3, #8
90020fa2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90020fa6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90020faa:	ea43 030c 	orr.w	r3, r3, ip
90020fae:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90020fb0:	2cff      	cmp	r4, #255	@ 0xff
90020fb2:	d021      	beq.n	90020ff8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90020fb4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90020fb6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90020fba:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90020fbc:	fb04 fb0b 	mul.w	fp, r4, fp
90020fc0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90020fc2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90020fc6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90020fc8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90020fcc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90020fd0:	fb04 fa0a 	mul.w	sl, r4, sl
90020fd4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90020fd8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90020fdc:	44de      	add	lr, fp
90020fde:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020fe2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90020fe6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020fea:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90020fee:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90020ff2:	ea4e 040a 	orr.w	r4, lr, sl
90020ff6:	940e      	str	r4, [sp, #56]	@ 0x38
90020ff8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90020ffa:	2cff      	cmp	r4, #255	@ 0xff
90020ffc:	d021      	beq.n	90021042 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90020ffe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90021000:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90021004:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90021006:	fb04 fb0b 	mul.w	fp, r4, fp
9002100a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002100c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021010:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90021012:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021016:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002101a:	fb04 fa0a 	mul.w	sl, r4, sl
9002101e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90021022:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90021026:	44de      	add	lr, fp
90021028:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002102c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021030:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021034:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90021038:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002103c:	ea4e 040a 	orr.w	r4, lr, sl
90021040:	940a      	str	r4, [sp, #40]	@ 0x28
90021042:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90021044:	2cff      	cmp	r4, #255	@ 0xff
90021046:	d021      	beq.n	9002108c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90021048:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
9002104a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002104e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90021050:	fb04 fb0b 	mul.w	fp, r4, fp
90021054:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90021056:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002105a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
9002105c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021060:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90021064:	fb04 fa0a 	mul.w	sl, r4, sl
90021068:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002106c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90021070:	44de      	add	lr, fp
90021072:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021076:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002107a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002107e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90021082:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021086:	ea4e 040a 	orr.w	r4, lr, sl
9002108a:	940f      	str	r4, [sp, #60]	@ 0x3c
9002108c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002108e:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
90021092:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90021096:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
9002109a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002109c:	fb08 fc0c 	mul.w	ip, r8, ip
900210a0:	fb02 cc0e 	mla	ip, r2, lr, ip
900210a4:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900210a8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900210aa:	fb01 cc0e 	mla	ip, r1, lr, ip
900210ae:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900210b2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900210b4:	fb09 cc0e 	mla	ip, r9, lr, ip
900210b8:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
900210bc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900210be:	fb08 f80e 	mul.w	r8, r8, lr
900210c2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900210c6:	fb02 8303 	mla	r3, r2, r3, r8
900210ca:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900210cc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900210d0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900210d4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900210d6:	fb01 330a 	mla	r3, r1, sl, r3
900210da:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
900210de:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
900210e0:	fb09 3901 	mla	r9, r9, r1, r3
900210e4:	883b      	ldrh	r3, [r7, #0]
900210e6:	4342      	muls	r2, r0
900210e8:	ea4f 2919 	mov.w	r9, r9, lsr #8
900210ec:	1c50      	adds	r0, r2, #1
900210ee:	1219      	asrs	r1, r3, #8
900210f0:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
900210f4:	eb00 2012 	add.w	r0, r0, r2, lsr #8
900210f8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900210fc:	ea4c 0c09 	orr.w	ip, ip, r9
90021100:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90021104:	ea4f 421c 	mov.w	r2, ip, lsr #16
90021108:	f3cc 2e07 	ubfx	lr, ip, #8, #8
9002110c:	b2c0      	uxtb	r0, r0
9002110e:	fb12 f204 	smulbb	r2, r2, r4
90021112:	fa5f fc8c 	uxtb.w	ip, ip
90021116:	fb1e fe04 	smulbb	lr, lr, r4
9002111a:	fb01 2100 	mla	r1, r1, r0, r2
9002111e:	10da      	asrs	r2, r3, #3
90021120:	fb1c fc04 	smulbb	ip, ip, r4
90021124:	00db      	lsls	r3, r3, #3
90021126:	b289      	uxth	r1, r1
90021128:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002112c:	b2db      	uxtb	r3, r3
9002112e:	fb02 e200 	mla	r2, r2, r0, lr
90021132:	fb03 c300 	mla	r3, r3, r0, ip
90021136:	b292      	uxth	r2, r2
90021138:	fa1f fc83 	uxth.w	ip, r3
9002113c:	1c4b      	adds	r3, r1, #1
9002113e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90021142:	f10c 0301 	add.w	r3, ip, #1
90021146:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9002114a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002114e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021152:	430b      	orrs	r3, r1
90021154:	1c51      	adds	r1, r2, #1
90021156:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002115a:	0952      	lsrs	r2, r2, #5
9002115c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90021160:	4313      	orrs	r3, r2
90021162:	803b      	strh	r3, [r7, #0]
90021164:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90021166:	3702      	adds	r7, #2
90021168:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9002116a:	441a      	add	r2, r3
9002116c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002116e:	441d      	add	r5, r3
90021170:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90021172:	9229      	str	r2, [sp, #164]	@ 0xa4
90021174:	3b01      	subs	r3, #1
90021176:	931a      	str	r3, [sp, #104]	@ 0x68
90021178:	e694      	b.n	90020ea4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9002117a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
9002117c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
9002117e:	441c      	add	r4, r3
90021180:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90021182:	441d      	add	r5, r3
90021184:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021186:	9429      	str	r4, [sp, #164]	@ 0xa4
90021188:	3b01      	subs	r3, #1
9002118a:	9309      	str	r3, [sp, #36]	@ 0x24
9002118c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002118e:	3302      	adds	r3, #2
90021190:	930c      	str	r3, [sp, #48]	@ 0x30
90021192:	e667      	b.n	90020e64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90021194:	d024      	beq.n	900211e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
90021196:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021198:	982b      	ldr	r0, [sp, #172]	@ 0xac
9002119a:	3b01      	subs	r3, #1
9002119c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
9002119e:	fb00 4003 	mla	r0, r0, r3, r4
900211a2:	1400      	asrs	r0, r0, #16
900211a4:	f53f ae7b 	bmi.w	90020e9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900211a8:	3901      	subs	r1, #1
900211aa:	4288      	cmp	r0, r1
900211ac:	f6bf ae77 	bge.w	90020e9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900211b0:	992c      	ldr	r1, [sp, #176]	@ 0xb0
900211b2:	fb01 5303 	mla	r3, r1, r3, r5
900211b6:	141b      	asrs	r3, r3, #16
900211b8:	f53f ae71 	bmi.w	90020e9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900211bc:	3a01      	subs	r2, #1
900211be:	4293      	cmp	r3, r2
900211c0:	f6bf ae6d 	bge.w	90020e9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900211c4:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
900211c8:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
900211cc:	f1bb 0f00 	cmp.w	fp, #0
900211d0:	dc70      	bgt.n	900212b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
900211d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900211d4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900211d8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900211da:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900211de:	930c      	str	r3, [sp, #48]	@ 0x30
900211e0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900211e2:	2b00      	cmp	r3, #0
900211e4:	f340 81be 	ble.w	90021564 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
900211e8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900211ec:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900211ee:	ee30 0a04 	vadd.f32	s0, s0, s8
900211f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900211f6:	eef0 6a62 	vmov.f32	s13, s5
900211fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
900211fe:	ee31 1a05 	vadd.f32	s2, s2, s10
90021202:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021206:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
9002120a:	eef0 6a43 	vmov.f32	s13, s6
9002120e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021212:	ee16 5a90 	vmov	r5, s13
90021216:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002121a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002121e:	ee77 2a62 	vsub.f32	s5, s14, s5
90021222:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021226:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002122a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002122e:	ee12 2a90 	vmov	r2, s5
90021232:	eef0 2a47 	vmov.f32	s5, s14
90021236:	fb92 f3f3 	sdiv	r3, r2, r3
9002123a:	ee13 2a10 	vmov	r2, s6
9002123e:	932b      	str	r3, [sp, #172]	@ 0xac
90021240:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90021242:	eeb0 3a67 	vmov.f32	s6, s15
90021246:	fb92 f3f3 	sdiv	r3, r2, r3
9002124a:	932c      	str	r3, [sp, #176]	@ 0xb0
9002124c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002124e:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90021250:	3b01      	subs	r3, #1
90021252:	9319      	str	r3, [sp, #100]	@ 0x64
90021254:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90021256:	bf08      	it	eq
90021258:	4613      	moveq	r3, r2
9002125a:	9309      	str	r3, [sp, #36]	@ 0x24
9002125c:	e5f4      	b.n	90020e48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9002125e:	2900      	cmp	r1, #0
90021260:	f43f ae66 	beq.w	90020f30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90021264:	f818 0000 	ldrb.w	r0, [r8, r0]
90021268:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9002126c:	900a      	str	r0, [sp, #40]	@ 0x28
9002126e:	0e00      	lsrs	r0, r0, #24
90021270:	9013      	str	r0, [sp, #76]	@ 0x4c
90021272:	e65d      	b.n	90020f30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90021274:	f113 0801 	adds.w	r8, r3, #1
90021278:	f53f af74 	bmi.w	90021164 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002127c:	4540      	cmp	r0, r8
9002127e:	f6ff af71 	blt.w	90021164 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021282:	f11c 0801 	adds.w	r8, ip, #1
90021286:	f53f af6d 	bmi.w	90021164 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002128a:	45c6      	cmp	lr, r8
9002128c:	f6ff af6a 	blt.w	90021164 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021290:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90021292:	b200      	sxth	r0, r0
90021294:	9302      	str	r3, [sp, #8]
90021296:	fa0f f38e 	sxth.w	r3, lr
9002129a:	9000      	str	r0, [sp, #0]
9002129c:	9301      	str	r3, [sp, #4]
9002129e:	4633      	mov	r3, r6
900212a0:	981d      	ldr	r0, [sp, #116]	@ 0x74
900212a2:	e9cd 1405 	strd	r1, r4, [sp, #20]
900212a6:	e9cd c203 	strd	ip, r2, [sp, #12]
900212aa:	4639      	mov	r1, r7
900212ac:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900212ae:	f7ff fc63 	bl	90020b78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
900212b2:	e757      	b.n	90021164 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900212b4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900212b6:	f3c5 3003 	ubfx	r0, r5, #12, #4
900212ba:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900212bc:	f3c3 3203 	ubfx	r2, r3, #12, #4
900212c0:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900212c2:	1427      	asrs	r7, r4, #16
900212c4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900212c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900212ca:	142b      	asrs	r3, r5, #16
900212cc:	fb01 7303 	mla	r3, r1, r3, r7
900212d0:	18e7      	adds	r7, r4, r3
900212d2:	5ce3      	ldrb	r3, [r4, r3]
900212d4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900212d8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900212dc:	2a00      	cmp	r2, #0
900212de:	f000 8137 	beq.w	90021550 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
900212e2:	f897 e001 	ldrb.w	lr, [r7, #1]
900212e6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900212ea:	9410      	str	r4, [sp, #64]	@ 0x40
900212ec:	0e24      	lsrs	r4, r4, #24
900212ee:	9417      	str	r4, [sp, #92]	@ 0x5c
900212f0:	b170      	cbz	r0, 90021310 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900212f2:	eb07 0e01 	add.w	lr, r7, r1
900212f6:	5c79      	ldrb	r1, [r7, r1]
900212f8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900212fc:	910b      	str	r1, [sp, #44]	@ 0x2c
900212fe:	0e09      	lsrs	r1, r1, #24
90021300:	9114      	str	r1, [sp, #80]	@ 0x50
90021302:	f89e 1001 	ldrb.w	r1, [lr, #1]
90021306:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002130a:	9111      	str	r1, [sp, #68]	@ 0x44
9002130c:	0e09      	lsrs	r1, r1, #24
9002130e:	9118      	str	r1, [sp, #96]	@ 0x60
90021310:	b292      	uxth	r2, r2
90021312:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90021314:	b280      	uxth	r0, r0
90021316:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90021318:	fb02 f800 	mul.w	r8, r2, r0
9002131c:	0112      	lsls	r2, r2, #4
9002131e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90021322:	eba2 0e08 	sub.w	lr, r2, r8
90021326:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
9002132a:	b280      	uxth	r0, r0
9002132c:	fa1f fe8e 	uxth.w	lr, lr
90021330:	1a12      	subs	r2, r2, r0
90021332:	fb0e f101 	mul.w	r1, lr, r1
90021336:	b292      	uxth	r2, r2
90021338:	fb02 110c 	mla	r1, r2, ip, r1
9002133c:	fb00 1104 	mla	r1, r0, r4, r1
90021340:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90021342:	fb08 1104 	mla	r1, r8, r4, r1
90021346:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002134a:	2900      	cmp	r1, #0
9002134c:	f000 80f5 	beq.w	9002153a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90021350:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90021354:	d019      	beq.n	9002138a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90021356:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002135a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002135e:	fb0c fa0a 	mul.w	sl, ip, sl
90021362:	fb0c fc03 	mul.w	ip, ip, r3
90021366:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002136a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002136e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90021372:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90021376:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002137a:	4453      	add	r3, sl
9002137c:	0a3f      	lsrs	r7, r7, #8
9002137e:	0a1b      	lsrs	r3, r3, #8
90021380:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90021384:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90021388:	433b      	orrs	r3, r7
9002138a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
9002138c:	2cff      	cmp	r4, #255	@ 0xff
9002138e:	d020      	beq.n	900213d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90021390:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90021392:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021396:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90021398:	4367      	muls	r7, r4
9002139a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002139c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900213a0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900213a4:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900213a6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900213aa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900213ae:	fb04 fa0a 	mul.w	sl, r4, sl
900213b2:	44bc      	add	ip, r7
900213b4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900213b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900213bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900213c0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900213c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900213c8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900213cc:	ea4c 040a 	orr.w	r4, ip, sl
900213d0:	9410      	str	r4, [sp, #64]	@ 0x40
900213d2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900213d4:	2cff      	cmp	r4, #255	@ 0xff
900213d6:	d020      	beq.n	9002141a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
900213d8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900213da:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900213de:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900213e0:	4367      	muls	r7, r4
900213e2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900213e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900213e8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900213ec:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900213ee:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900213f2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900213f6:	fb04 fa0a 	mul.w	sl, r4, sl
900213fa:	44bc      	add	ip, r7
900213fc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90021400:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021404:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021408:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002140c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021410:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021414:	ea4c 040a 	orr.w	r4, ip, sl
90021418:	940b      	str	r4, [sp, #44]	@ 0x2c
9002141a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
9002141c:	2cff      	cmp	r4, #255	@ 0xff
9002141e:	d020      	beq.n	90021462 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90021420:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90021422:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021426:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90021428:	4367      	muls	r7, r4
9002142a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9002142c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021430:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021434:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90021436:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002143a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002143e:	fb04 fa0a 	mul.w	sl, r4, sl
90021442:	44bc      	add	ip, r7
90021444:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90021448:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002144c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021450:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021454:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021458:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002145c:	ea4c 040a 	orr.w	r4, ip, sl
90021460:	9411      	str	r4, [sp, #68]	@ 0x44
90021462:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90021464:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90021468:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002146c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021470:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021472:	fb0e f707 	mul.w	r7, lr, r7
90021476:	fb02 770c 	mla	r7, r2, ip, r7
9002147a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
9002147e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90021480:	fb00 770c 	mla	r7, r0, ip, r7
90021484:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90021488:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002148a:	fb08 770c 	mla	r7, r8, ip, r7
9002148e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90021492:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90021494:	fb0e fe0c 	mul.w	lr, lr, ip
90021498:	0a3f      	lsrs	r7, r7, #8
9002149a:	fb02 e303 	mla	r3, r2, r3, lr
9002149e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900214a0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900214a4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900214a8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900214aa:	fb00 330a 	mla	r3, r0, sl, r3
900214ae:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
900214b2:	f8b9 0000 	ldrh.w	r0, [r9]
900214b6:	fb08 3c0c 	mla	ip, r8, ip, r3
900214ba:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900214bc:	1202      	asrs	r2, r0, #8
900214be:	434b      	muls	r3, r1
900214c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900214c4:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900214c8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900214cc:	1c59      	adds	r1, r3, #1
900214ce:	ea47 070c 	orr.w	r7, r7, ip
900214d2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900214d6:	0c3b      	lsrs	r3, r7, #16
900214d8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
900214dc:	f3c7 2c07 	ubfx	ip, r7, #8, #8
900214e0:	b2ff      	uxtb	r7, r7
900214e2:	fb13 f304 	smulbb	r3, r3, r4
900214e6:	b2c9      	uxtb	r1, r1
900214e8:	fb1c fc04 	smulbb	ip, ip, r4
900214ec:	fb02 3201 	mla	r2, r2, r1, r3
900214f0:	10c3      	asrs	r3, r0, #3
900214f2:	fb17 f704 	smulbb	r7, r7, r4
900214f6:	00c0      	lsls	r0, r0, #3
900214f8:	b292      	uxth	r2, r2
900214fa:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
900214fe:	b2c0      	uxtb	r0, r0
90021500:	fb03 c301 	mla	r3, r3, r1, ip
90021504:	f102 0c01 	add.w	ip, r2, #1
90021508:	fb00 7001 	mla	r0, r0, r1, r7
9002150c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90021510:	b280      	uxth	r0, r0
90021512:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
90021516:	b29b      	uxth	r3, r3
90021518:	1c42      	adds	r2, r0, #1
9002151a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
9002151e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021522:	ea42 020c 	orr.w	r2, r2, ip
90021526:	f103 0c01 	add.w	ip, r3, #1
9002152a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
9002152e:	095b      	lsrs	r3, r3, #5
90021530:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021534:	431a      	orrs	r2, r3
90021536:	f8a9 2000 	strh.w	r2, [r9]
9002153a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
9002153c:	f109 0902 	add.w	r9, r9, #2
90021540:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90021542:	f10b 3bff 	add.w	fp, fp, #4294967295
90021546:	441a      	add	r2, r3
90021548:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002154a:	9229      	str	r2, [sp, #164]	@ 0xa4
9002154c:	441d      	add	r5, r3
9002154e:	e63d      	b.n	900211cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90021550:	2800      	cmp	r0, #0
90021552:	f43f aedd 	beq.w	90021310 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90021556:	5c79      	ldrb	r1, [r7, r1]
90021558:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002155c:	910b      	str	r1, [sp, #44]	@ 0x2c
9002155e:	0e09      	lsrs	r1, r1, #24
90021560:	9114      	str	r1, [sp, #80]	@ 0x50
90021562:	e6d5      	b.n	90021310 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90021564:	b01f      	add	sp, #124	@ 0x7c
90021566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002156a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
9002156a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002156e:	b089      	sub	sp, #36	@ 0x24
90021570:	9101      	str	r1, [sp, #4]
90021572:	9801      	ldr	r0, [sp, #4]
90021574:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
90021578:	8800      	ldrh	r0, [r0, #0]
9002157a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
9002157e:	1206      	asrs	r6, r0, #8
90021580:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
90021584:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
90021588:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9002158c:	9602      	str	r6, [sp, #8]
9002158e:	10c6      	asrs	r6, r0, #3
90021590:	00c0      	lsls	r0, r0, #3
90021592:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90021596:	b2c0      	uxtb	r0, r0
90021598:	9603      	str	r6, [sp, #12]
9002159a:	9004      	str	r0, [sp, #16]
9002159c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
900215a0:	fb07 100c 	mla	r0, r7, ip, r1
900215a4:	2f00      	cmp	r7, #0
900215a6:	eb02 0e00 	add.w	lr, r2, r0
900215aa:	f2c0 810a 	blt.w	900217c2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900215ae:	45b8      	cmp	r8, r7
900215b0:	f340 8107 	ble.w	900217c2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900215b4:	2900      	cmp	r1, #0
900215b6:	f2c0 8102 	blt.w	900217be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
900215ba:	458c      	cmp	ip, r1
900215bc:	f340 80ff 	ble.w	900217be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
900215c0:	5c12      	ldrb	r2, [r2, r0]
900215c2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900215c6:	1c4a      	adds	r2, r1, #1
900215c8:	f100 80fe 	bmi.w	900217c8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900215cc:	4594      	cmp	ip, r2
900215ce:	f340 80fb 	ble.w	900217c8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900215d2:	2d00      	cmp	r5, #0
900215d4:	f000 80fa 	beq.w	900217cc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
900215d8:	f89e 2001 	ldrb.w	r2, [lr, #1]
900215dc:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900215e0:	3701      	adds	r7, #1
900215e2:	f100 80f7 	bmi.w	900217d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
900215e6:	45b8      	cmp	r8, r7
900215e8:	f340 80f4 	ble.w	900217d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
900215ec:	2c00      	cmp	r4, #0
900215ee:	f000 80f4 	beq.w	900217da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
900215f2:	2900      	cmp	r1, #0
900215f4:	eb0e 020c 	add.w	r2, lr, ip
900215f8:	f2c0 80ea 	blt.w	900217d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
900215fc:	458c      	cmp	ip, r1
900215fe:	f340 80e7 	ble.w	900217d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90021602:	f81e 700c 	ldrb.w	r7, [lr, ip]
90021606:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
9002160a:	3101      	adds	r1, #1
9002160c:	f100 80e8 	bmi.w	900217e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90021610:	458c      	cmp	ip, r1
90021612:	f340 80e5 	ble.w	900217e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90021616:	2d00      	cmp	r5, #0
90021618:	f000 80e4 	beq.w	900217e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
9002161c:	7852      	ldrb	r2, [r2, #1]
9002161e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90021622:	0e0b      	lsrs	r3, r1, #24
90021624:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
90021628:	ea4f 6a10 	mov.w	sl, r0, lsr #24
9002162c:	9300      	str	r3, [sp, #0]
9002162e:	b2a4      	uxth	r4, r4
90021630:	b2ab      	uxth	r3, r5
90021632:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
90021636:	ea4f 6b16 	mov.w	fp, r6, lsr #24
9002163a:	fb03 f904 	mul.w	r9, r3, r4
9002163e:	011b      	lsls	r3, r3, #4
90021640:	fb0a f505 	mul.w	r5, sl, r5
90021644:	ea4f 6817 	mov.w	r8, r7, lsr #24
90021648:	eba3 0e09 	sub.w	lr, r3, r9
9002164c:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
90021650:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
90021654:	0a28      	lsrs	r0, r5, #8
90021656:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
9002165a:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
9002165e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90021662:	fb0a f303 	mul.w	r3, sl, r3
90021666:	fb08 f707 	mul.w	r7, r8, r7
9002166a:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
9002166e:	4405      	add	r5, r0
90021670:	fb08 fc0c 	mul.w	ip, r8, ip
90021674:	b2a4      	uxth	r4, r4
90021676:	0a2d      	lsrs	r5, r5, #8
90021678:	fa1f fe8e 	uxth.w	lr, lr
9002167c:	1b12      	subs	r2, r2, r4
9002167e:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
90021682:	b292      	uxth	r2, r2
90021684:	9005      	str	r0, [sp, #20]
90021686:	f503 7080 	add.w	r0, r3, #256	@ 0x100
9002168a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
9002168e:	ea4f 201c 	mov.w	r0, ip, lsr #8
90021692:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90021696:	0a1b      	lsrs	r3, r3, #8
90021698:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
9002169c:	9306      	str	r3, [sp, #24]
9002169e:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
900216a2:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
900216a6:	4460      	add	r0, ip
900216a8:	fb0b f303 	mul.w	r3, fp, r3
900216ac:	fb0b f606 	mul.w	r6, fp, r6
900216b0:	0a00      	lsrs	r0, r0, #8
900216b2:	0a1d      	lsrs	r5, r3, #8
900216b4:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
900216b8:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900216bc:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900216c0:	441d      	add	r5, r3
900216c2:	f506 7380 	add.w	r3, r6, #256	@ 0x100
900216c6:	eb03 2616 	add.w	r6, r3, r6, lsr #8
900216ca:	f507 7380 	add.w	r3, r7, #256	@ 0x100
900216ce:	0a2d      	lsrs	r5, r5, #8
900216d0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
900216d4:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
900216d8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900216dc:	0a36      	lsrs	r6, r6, #8
900216de:	0a1b      	lsrs	r3, r3, #8
900216e0:	fb05 f50e 	mul.w	r5, r5, lr
900216e4:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
900216e8:	9307      	str	r3, [sp, #28]
900216ea:	0e0b      	lsrs	r3, r1, #24
900216ec:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900216f0:	fb0e f606 	mul.w	r6, lr, r6
900216f4:	435f      	muls	r7, r3
900216f6:	4359      	muls	r1, r3
900216f8:	9b05      	ldr	r3, [sp, #20]
900216fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900216fe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90021702:	fb03 5502 	mla	r5, r3, r2, r5
90021706:	9b06      	ldr	r3, [sp, #24]
90021708:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002170c:	fb0e fe0b 	mul.w	lr, lr, fp
90021710:	44bc      	add	ip, r7
90021712:	f501 7780 	add.w	r7, r1, #256	@ 0x100
90021716:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002171a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9002171e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021722:	0a09      	lsrs	r1, r1, #8
90021724:	fb0c 5509 	mla	r5, ip, r9, r5
90021728:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002172c:	fb00 5504 	mla	r5, r0, r4, r5
90021730:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
90021734:	9b07      	ldr	r3, [sp, #28]
90021736:	fb02 6000 	mla	r0, r2, r0, r6
9002173a:	0a2d      	lsrs	r5, r5, #8
9002173c:	fb02 e20a 	mla	r2, r2, sl, lr
90021740:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90021744:	fb09 0001 	mla	r0, r9, r1, r0
90021748:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002174c:	fb04 0003 	mla	r0, r4, r3, r0
90021750:	9b00      	ldr	r3, [sp, #0]
90021752:	fb04 2408 	mla	r4, r4, r8, r2
90021756:	9a04      	ldr	r2, [sp, #16]
90021758:	0a00      	lsrs	r0, r0, #8
9002175a:	fb09 4903 	mla	r9, r9, r3, r4
9002175e:	9b02      	ldr	r3, [sp, #8]
90021760:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
90021764:	ea6f 2929 	mvn.w	r9, r9, asr #8
90021768:	4305      	orrs	r5, r0
9002176a:	fa5f f989 	uxtb.w	r9, r9
9002176e:	fb03 f109 	mul.w	r1, r3, r9
90021772:	9b03      	ldr	r3, [sp, #12]
90021774:	fb03 f309 	mul.w	r3, r3, r9
90021778:	fb02 f909 	mul.w	r9, r2, r9
9002177c:	1c4a      	adds	r2, r1, #1
9002177e:	1c58      	adds	r0, r3, #1
90021780:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021784:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90021788:	0c2a      	lsrs	r2, r5, #16
9002178a:	0a2b      	lsrs	r3, r5, #8
9002178c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90021790:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90021794:	0212      	lsls	r2, r2, #8
90021796:	00db      	lsls	r3, r3, #3
90021798:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
9002179c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900217a0:	4313      	orrs	r3, r2
900217a2:	f109 0201 	add.w	r2, r9, #1
900217a6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
900217aa:	eb05 2519 	add.w	r5, r5, r9, lsr #8
900217ae:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900217b2:	431d      	orrs	r5, r3
900217b4:	9b01      	ldr	r3, [sp, #4]
900217b6:	801d      	strh	r5, [r3, #0]
900217b8:	b009      	add	sp, #36	@ 0x24
900217ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900217be:	2000      	movs	r0, #0
900217c0:	e701      	b.n	900215c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
900217c2:	2600      	movs	r6, #0
900217c4:	4630      	mov	r0, r6
900217c6:	e70b      	b.n	900215e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900217c8:	2600      	movs	r6, #0
900217ca:	e709      	b.n	900215e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900217cc:	462e      	mov	r6, r5
900217ce:	e707      	b.n	900215e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900217d0:	2700      	movs	r7, #0
900217d2:	e71a      	b.n	9002160a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
900217d4:	2100      	movs	r1, #0
900217d6:	460f      	mov	r7, r1
900217d8:	e723      	b.n	90021622 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900217da:	4621      	mov	r1, r4
900217dc:	4627      	mov	r7, r4
900217de:	e720      	b.n	90021622 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900217e0:	2100      	movs	r1, #0
900217e2:	e71e      	b.n	90021622 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900217e4:	4629      	mov	r1, r5
900217e6:	e71c      	b.n	90021622 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

900217e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900217e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900217ec:	b09b      	sub	sp, #108	@ 0x6c
900217ee:	9218      	str	r2, [sp, #96]	@ 0x60
900217f0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900217f2:	9019      	str	r0, [sp, #100]	@ 0x64
900217f4:	9116      	str	r1, [sp, #88]	@ 0x58
900217f6:	6850      	ldr	r0, [r2, #4]
900217f8:	9307      	str	r3, [sp, #28]
900217fa:	6812      	ldr	r2, [r2, #0]
900217fc:	9d26      	ldr	r5, [sp, #152]	@ 0x98
900217fe:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90021802:	fb00 1303 	mla	r3, r0, r3, r1
90021806:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002180a:	930a      	str	r3, [sp, #40]	@ 0x28
9002180c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002180e:	681b      	ldr	r3, [r3, #0]
90021810:	930f      	str	r3, [sp, #60]	@ 0x3c
90021812:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90021814:	685e      	ldr	r6, [r3, #4]
90021816:	3604      	adds	r6, #4
90021818:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002181a:	2b00      	cmp	r3, #0
9002181c:	dc03      	bgt.n	90021826 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9002181e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90021820:	2b00      	cmp	r3, #0
90021822:	f340 8373 	ble.w	90021f0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90021826:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90021828:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002182c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021830:	1e48      	subs	r0, r1, #1
90021832:	1e57      	subs	r7, r2, #1
90021834:	9b07      	ldr	r3, [sp, #28]
90021836:	2b00      	cmp	r3, #0
90021838:	f340 818f 	ble.w	90021b5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
9002183c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
9002183e:	142b      	asrs	r3, r5, #16
90021840:	ea5f 4c24 	movs.w	ip, r4, asr #16
90021844:	d406      	bmi.n	90021854 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021846:	4584      	cmp	ip, r0
90021848:	da04      	bge.n	90021854 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002184a:	2b00      	cmp	r3, #0
9002184c:	db02      	blt.n	90021854 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002184e:	42bb      	cmp	r3, r7
90021850:	f2c0 8184 	blt.w	90021b5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90021854:	f11c 0c01 	adds.w	ip, ip, #1
90021858:	f100 8172 	bmi.w	90021b40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002185c:	4561      	cmp	r1, ip
9002185e:	f2c0 816f 	blt.w	90021b40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021862:	3301      	adds	r3, #1
90021864:	f100 816c 	bmi.w	90021b40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021868:	429a      	cmp	r2, r3
9002186a:	f2c0 8169 	blt.w	90021b40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002186e:	9b07      	ldr	r3, [sp, #28]
90021870:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90021872:	9317      	str	r3, [sp, #92]	@ 0x5c
90021874:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90021876:	2b00      	cmp	r3, #0
90021878:	f340 818e 	ble.w	90021b98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
9002187c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9002187e:	ea4f 4c25 	mov.w	ip, r5, asr #16
90021882:	f3c5 3003 	ubfx	r0, r5, #12, #4
90021886:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002188a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002188c:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90021890:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021892:	141b      	asrs	r3, r3, #16
90021894:	f100 81d1 	bmi.w	90021c3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90021898:	f101 38ff 	add.w	r8, r1, #4294967295
9002189c:	4543      	cmp	r3, r8
9002189e:	f280 81cc 	bge.w	90021c3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900218a2:	f1bc 0f00 	cmp.w	ip, #0
900218a6:	f2c0 81c8 	blt.w	90021c3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900218aa:	f10e 38ff 	add.w	r8, lr, #4294967295
900218ae:	45c4      	cmp	ip, r8
900218b0:	f280 81c3 	bge.w	90021c3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900218b4:	b209      	sxth	r1, r1
900218b6:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900218b8:	fb0c 3301 	mla	r3, ip, r1, r3
900218bc:	eb04 0803 	add.w	r8, r4, r3
900218c0:	5ce3      	ldrb	r3, [r4, r3]
900218c2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900218c6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
900218ca:	2a00      	cmp	r2, #0
900218cc:	f000 81aa 	beq.w	90021c24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
900218d0:	f898 c001 	ldrb.w	ip, [r8, #1]
900218d4:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
900218d8:	940b      	str	r4, [sp, #44]	@ 0x2c
900218da:	0e24      	lsrs	r4, r4, #24
900218dc:	9412      	str	r4, [sp, #72]	@ 0x48
900218de:	b178      	cbz	r0, 90021900 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
900218e0:	eb08 0c01 	add.w	ip, r8, r1
900218e4:	f818 1001 	ldrb.w	r1, [r8, r1]
900218e8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900218ec:	9108      	str	r1, [sp, #32]
900218ee:	0e09      	lsrs	r1, r1, #24
900218f0:	9110      	str	r1, [sp, #64]	@ 0x40
900218f2:	f89c 1001 	ldrb.w	r1, [ip, #1]
900218f6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900218fa:	910c      	str	r1, [sp, #48]	@ 0x30
900218fc:	0e09      	lsrs	r1, r1, #24
900218fe:	9113      	str	r1, [sp, #76]	@ 0x4c
90021900:	b292      	uxth	r2, r2
90021902:	9912      	ldr	r1, [sp, #72]	@ 0x48
90021904:	b280      	uxth	r0, r0
90021906:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90021908:	fb02 f900 	mul.w	r9, r2, r0
9002190c:	0112      	lsls	r2, r2, #4
9002190e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90021912:	eba2 0809 	sub.w	r8, r2, r9
90021916:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
9002191a:	b280      	uxth	r0, r0
9002191c:	fa1f f888 	uxth.w	r8, r8
90021920:	1a12      	subs	r2, r2, r0
90021922:	fb08 f101 	mul.w	r1, r8, r1
90021926:	b292      	uxth	r2, r2
90021928:	fb02 110e 	mla	r1, r2, lr, r1
9002192c:	fb00 1104 	mla	r1, r0, r4, r1
90021930:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90021932:	fb09 1104 	mla	r1, r9, r4, r1
90021936:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002193a:	2900      	cmp	r1, #0
9002193c:	f000 80f5 	beq.w	90021b2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90021940:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90021944:	d01b      	beq.n	9002197e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90021946:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002194a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002194e:	fb0e fa0a 	mul.w	sl, lr, sl
90021952:	fb0e fe03 	mul.w	lr, lr, r3
90021956:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002195a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002195e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90021962:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90021966:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002196a:	4453      	add	r3, sl
9002196c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021970:	0a1b      	lsrs	r3, r3, #8
90021972:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90021976:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002197a:	ea43 030c 	orr.w	r3, r3, ip
9002197e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90021980:	2cff      	cmp	r4, #255	@ 0xff
90021982:	d021      	beq.n	900219c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90021984:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021986:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002198a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9002198c:	fb04 fb0b 	mul.w	fp, r4, fp
90021990:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021992:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021996:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90021998:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002199c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900219a0:	fb04 fa0a 	mul.w	sl, r4, sl
900219a4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900219a8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900219ac:	44de      	add	lr, fp
900219ae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900219b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900219b6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900219ba:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900219be:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900219c2:	ea4e 040a 	orr.w	r4, lr, sl
900219c6:	940b      	str	r4, [sp, #44]	@ 0x2c
900219c8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900219ca:	2cff      	cmp	r4, #255	@ 0xff
900219cc:	d021      	beq.n	90021a12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
900219ce:	9c08      	ldr	r4, [sp, #32]
900219d0:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900219d4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900219d6:	fb04 fb0b 	mul.w	fp, r4, fp
900219da:	9c08      	ldr	r4, [sp, #32]
900219dc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900219e0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900219e2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900219e6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900219ea:	fb04 fa0a 	mul.w	sl, r4, sl
900219ee:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900219f2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900219f6:	44de      	add	lr, fp
900219f8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900219fc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021a00:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021a04:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90021a08:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021a0c:	ea4e 040a 	orr.w	r4, lr, sl
90021a10:	9408      	str	r4, [sp, #32]
90021a12:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90021a14:	2cff      	cmp	r4, #255	@ 0xff
90021a16:	d021      	beq.n	90021a5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90021a18:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90021a1a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90021a1e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90021a20:	fb04 fb0b 	mul.w	fp, r4, fp
90021a24:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90021a26:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021a2a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90021a2c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021a30:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90021a34:	fb04 fa0a 	mul.w	sl, r4, sl
90021a38:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90021a3c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90021a40:	44de      	add	lr, fp
90021a42:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021a46:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021a4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021a4e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90021a52:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021a56:	ea4e 040a 	orr.w	r4, lr, sl
90021a5a:	940c      	str	r4, [sp, #48]	@ 0x30
90021a5c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021a5e:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
90021a62:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90021a66:	43c9      	mvns	r1, r1
90021a68:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90021a6c:	9c08      	ldr	r4, [sp, #32]
90021a6e:	fb08 fc0c 	mul.w	ip, r8, ip
90021a72:	fb02 cc0e 	mla	ip, r2, lr, ip
90021a76:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90021a7a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90021a7c:	fb00 cc0e 	mla	ip, r0, lr, ip
90021a80:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90021a84:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021a86:	fb09 cc0e 	mla	ip, r9, lr, ip
90021a8a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90021a8e:	fb08 f80e 	mul.w	r8, r8, lr
90021a92:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021a96:	fa5f fe81 	uxtb.w	lr, r1
90021a9a:	fb02 8303 	mla	r3, r2, r3, r8
90021a9e:	9a08      	ldr	r2, [sp, #32]
90021aa0:	f8b7 8000 	ldrh.w	r8, [r7]
90021aa4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021aa8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90021aac:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90021aae:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90021ab2:	fb00 330a 	mla	r3, r0, sl, r3
90021ab6:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
90021aba:	ea4f 2228 	mov.w	r2, r8, asr #8
90021abe:	fb09 3900 	mla	r9, r9, r0, r3
90021ac2:	ea4f 00e8 	mov.w	r0, r8, asr #3
90021ac6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90021aca:	b2c9      	uxtb	r1, r1
90021acc:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021ad0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90021ad4:	fb02 f20e 	mul.w	r2, r2, lr
90021ad8:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90021adc:	fb00 f00e 	mul.w	r0, r0, lr
90021ae0:	1c53      	adds	r3, r2, #1
90021ae2:	fb01 f10e 	mul.w	r1, r1, lr
90021ae6:	ea4c 0c09 	orr.w	ip, ip, r9
90021aea:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90021aee:	ea4f 431c 	mov.w	r3, ip, lsr #16
90021af2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021af6:	4a60      	ldr	r2, [pc, #384]	@ (90021c78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90021af8:	b2db      	uxtb	r3, r3
90021afa:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90021afe:	1c43      	adds	r3, r0, #1
90021b00:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90021b04:	ea4f 231c 	mov.w	r3, ip, lsr #8
90021b08:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90021b0c:	00db      	lsls	r3, r3, #3
90021b0e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021b12:	4313      	orrs	r3, r2
90021b14:	1c4a      	adds	r2, r1, #1
90021b16:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021b1a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90021b1e:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90021b22:	ea4c 0c03 	orr.w	ip, ip, r3
90021b26:	f8a7 c000 	strh.w	ip, [r7]
90021b2a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90021b2c:	3702      	adds	r7, #2
90021b2e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90021b30:	441a      	add	r2, r3
90021b32:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90021b34:	441d      	add	r5, r3
90021b36:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90021b38:	9225      	str	r2, [sp, #148]	@ 0x94
90021b3a:	3b01      	subs	r3, #1
90021b3c:	9317      	str	r3, [sp, #92]	@ 0x5c
90021b3e:	e699      	b.n	90021874 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90021b40:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90021b42:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90021b44:	441c      	add	r4, r3
90021b46:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90021b48:	441d      	add	r5, r3
90021b4a:	9b07      	ldr	r3, [sp, #28]
90021b4c:	9425      	str	r4, [sp, #148]	@ 0x94
90021b4e:	3b01      	subs	r3, #1
90021b50:	9307      	str	r3, [sp, #28]
90021b52:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021b54:	3302      	adds	r3, #2
90021b56:	930a      	str	r3, [sp, #40]	@ 0x28
90021b58:	e66c      	b.n	90021834 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90021b5a:	d024      	beq.n	90021ba6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90021b5c:	9b07      	ldr	r3, [sp, #28]
90021b5e:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90021b60:	3b01      	subs	r3, #1
90021b62:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90021b64:	fb00 4003 	mla	r0, r0, r3, r4
90021b68:	1400      	asrs	r0, r0, #16
90021b6a:	f53f ae80 	bmi.w	9002186e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90021b6e:	3901      	subs	r1, #1
90021b70:	4288      	cmp	r0, r1
90021b72:	f6bf ae7c 	bge.w	9002186e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90021b76:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90021b78:	fb01 5303 	mla	r3, r1, r3, r5
90021b7c:	141b      	asrs	r3, r3, #16
90021b7e:	f53f ae76 	bmi.w	9002186e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90021b82:	3a01      	subs	r2, #1
90021b84:	4293      	cmp	r3, r2
90021b86:	f6bf ae72 	bge.w	9002186e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90021b8a:	f8dd b01c 	ldr.w	fp, [sp, #28]
90021b8e:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90021b92:	f1bb 0f00 	cmp.w	fp, #0
90021b96:	dc71      	bgt.n	90021c7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021b98:	9b07      	ldr	r3, [sp, #28]
90021b9a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90021b9e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021ba0:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90021ba4:	930a      	str	r3, [sp, #40]	@ 0x28
90021ba6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90021ba8:	2b00      	cmp	r3, #0
90021baa:	f340 81af 	ble.w	90021f0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90021bae:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90021bb2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021bb4:	ee30 0a04 	vadd.f32	s0, s0, s8
90021bb8:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021bbc:	eef0 6a62 	vmov.f32	s13, s5
90021bc0:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021bc4:	ee31 1a05 	vadd.f32	s2, s2, s10
90021bc8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021bcc:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
90021bd0:	eef0 6a43 	vmov.f32	s13, s6
90021bd4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021bd8:	ee16 5a90 	vmov	r5, s13
90021bdc:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021be0:	ee61 7a27 	vmul.f32	s15, s2, s15
90021be4:	ee77 2a62 	vsub.f32	s5, s14, s5
90021be8:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021bec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021bf0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021bf4:	ee12 2a90 	vmov	r2, s5
90021bf8:	eef0 2a47 	vmov.f32	s5, s14
90021bfc:	fb92 f3f3 	sdiv	r3, r2, r3
90021c00:	ee13 2a10 	vmov	r2, s6
90021c04:	9327      	str	r3, [sp, #156]	@ 0x9c
90021c06:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021c08:	eeb0 3a67 	vmov.f32	s6, s15
90021c0c:	fb92 f3f3 	sdiv	r3, r2, r3
90021c10:	9328      	str	r3, [sp, #160]	@ 0xa0
90021c12:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90021c14:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90021c16:	3b01      	subs	r3, #1
90021c18:	9316      	str	r3, [sp, #88]	@ 0x58
90021c1a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021c1c:	bf08      	it	eq
90021c1e:	4613      	moveq	r3, r2
90021c20:	9307      	str	r3, [sp, #28]
90021c22:	e5f9      	b.n	90021818 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90021c24:	2800      	cmp	r0, #0
90021c26:	f43f ae6b 	beq.w	90021900 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90021c2a:	f818 1001 	ldrb.w	r1, [r8, r1]
90021c2e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021c32:	9108      	str	r1, [sp, #32]
90021c34:	0e09      	lsrs	r1, r1, #24
90021c36:	9110      	str	r1, [sp, #64]	@ 0x40
90021c38:	e662      	b.n	90021900 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90021c3a:	f113 0801 	adds.w	r8, r3, #1
90021c3e:	f53f af74 	bmi.w	90021b2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90021c42:	4541      	cmp	r1, r8
90021c44:	f6ff af71 	blt.w	90021b2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90021c48:	f11c 0801 	adds.w	r8, ip, #1
90021c4c:	f53f af6d 	bmi.w	90021b2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90021c50:	45c6      	cmp	lr, r8
90021c52:	f6ff af6a 	blt.w	90021b2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90021c56:	b209      	sxth	r1, r1
90021c58:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90021c5c:	fa0f f38e 	sxth.w	r3, lr
90021c60:	9100      	str	r1, [sp, #0]
90021c62:	4639      	mov	r1, r7
90021c64:	9301      	str	r3, [sp, #4]
90021c66:	4633      	mov	r3, r6
90021c68:	e9cd 2004 	strd	r2, r0, [sp, #16]
90021c6c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90021c6e:	9819      	ldr	r0, [sp, #100]	@ 0x64
90021c70:	f7ff fc7b 	bl	9002156a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90021c74:	e759      	b.n	90021b2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90021c76:	bf00      	nop
90021c78:	fffff800 	.word	0xfffff800
90021c7c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021c7e:	f3c5 3003 	ubfx	r0, r5, #12, #4
90021c82:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90021c84:	f3c3 3203 	ubfx	r2, r3, #12, #4
90021c88:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90021c8a:	1427      	asrs	r7, r4, #16
90021c8c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90021c8e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021c92:	142b      	asrs	r3, r5, #16
90021c94:	fb01 7303 	mla	r3, r1, r3, r7
90021c98:	18e7      	adds	r7, r4, r3
90021c9a:	5ce3      	ldrb	r3, [r4, r3]
90021c9c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90021ca0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90021ca4:	2a00      	cmp	r2, #0
90021ca6:	f000 8127 	beq.w	90021ef8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
90021caa:	f897 e001 	ldrb.w	lr, [r7, #1]
90021cae:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90021cb2:	940d      	str	r4, [sp, #52]	@ 0x34
90021cb4:	0e24      	lsrs	r4, r4, #24
90021cb6:	9414      	str	r4, [sp, #80]	@ 0x50
90021cb8:	b170      	cbz	r0, 90021cd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90021cba:	eb07 0e01 	add.w	lr, r7, r1
90021cbe:	5c79      	ldrb	r1, [r7, r1]
90021cc0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021cc4:	9109      	str	r1, [sp, #36]	@ 0x24
90021cc6:	0e09      	lsrs	r1, r1, #24
90021cc8:	9111      	str	r1, [sp, #68]	@ 0x44
90021cca:	f89e 1001 	ldrb.w	r1, [lr, #1]
90021cce:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021cd2:	910e      	str	r1, [sp, #56]	@ 0x38
90021cd4:	0e09      	lsrs	r1, r1, #24
90021cd6:	9115      	str	r1, [sp, #84]	@ 0x54
90021cd8:	b292      	uxth	r2, r2
90021cda:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90021cdc:	b280      	uxth	r0, r0
90021cde:	fb02 f800 	mul.w	r8, r2, r0
90021ce2:	0112      	lsls	r2, r2, #4
90021ce4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90021ce8:	eba2 0e08 	sub.w	lr, r2, r8
90021cec:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90021cf0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90021cf2:	b280      	uxth	r0, r0
90021cf4:	fa1f fe8e 	uxth.w	lr, lr
90021cf8:	1a09      	subs	r1, r1, r0
90021cfa:	fb0e f202 	mul.w	r2, lr, r2
90021cfe:	b289      	uxth	r1, r1
90021d00:	fb01 220c 	mla	r2, r1, ip, r2
90021d04:	fb00 2204 	mla	r2, r0, r4, r2
90021d08:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90021d0a:	fb08 2204 	mla	r2, r8, r4, r2
90021d0e:	f3c2 2207 	ubfx	r2, r2, #8, #8
90021d12:	2a00      	cmp	r2, #0
90021d14:	f000 80e5 	beq.w	90021ee2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90021d18:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90021d1c:	d019      	beq.n	90021d52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90021d1e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90021d22:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90021d26:	fb0c fa0a 	mul.w	sl, ip, sl
90021d2a:	fb0c fc03 	mul.w	ip, ip, r3
90021d2e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90021d32:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90021d36:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90021d3a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90021d3e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90021d42:	4453      	add	r3, sl
90021d44:	0a3f      	lsrs	r7, r7, #8
90021d46:	0a1b      	lsrs	r3, r3, #8
90021d48:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90021d4c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90021d50:	433b      	orrs	r3, r7
90021d52:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90021d54:	2cff      	cmp	r4, #255	@ 0xff
90021d56:	d020      	beq.n	90021d9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90021d58:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90021d5a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021d5e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90021d60:	4367      	muls	r7, r4
90021d62:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90021d64:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021d68:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021d6c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90021d6e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90021d72:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021d76:	fb04 fa0a 	mul.w	sl, r4, sl
90021d7a:	44bc      	add	ip, r7
90021d7c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90021d80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021d84:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021d88:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021d8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021d90:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021d94:	ea4c 040a 	orr.w	r4, ip, sl
90021d98:	940d      	str	r4, [sp, #52]	@ 0x34
90021d9a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90021d9c:	2cff      	cmp	r4, #255	@ 0xff
90021d9e:	d020      	beq.n	90021de2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90021da0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90021da2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021da6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90021da8:	4367      	muls	r7, r4
90021daa:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90021dac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021db0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021db4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90021db6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90021dba:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021dbe:	fb04 fa0a 	mul.w	sl, r4, sl
90021dc2:	44bc      	add	ip, r7
90021dc4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90021dc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021dcc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021dd0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021dd4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021dd8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021ddc:	ea4c 040a 	orr.w	r4, ip, sl
90021de0:	9409      	str	r4, [sp, #36]	@ 0x24
90021de2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90021de4:	2cff      	cmp	r4, #255	@ 0xff
90021de6:	d020      	beq.n	90021e2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90021de8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90021dea:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021dee:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90021df0:	4367      	muls	r7, r4
90021df2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90021df4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021df8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021dfc:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90021dfe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90021e02:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021e06:	fb04 fa0a 	mul.w	sl, r4, sl
90021e0a:	44bc      	add	ip, r7
90021e0c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90021e10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021e14:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021e18:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021e1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021e20:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021e24:	ea4c 040a 	orr.w	r4, ip, sl
90021e28:	940e      	str	r4, [sp, #56]	@ 0x38
90021e2a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90021e2c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90021e30:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90021e34:	43d2      	mvns	r2, r2
90021e36:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021e3a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90021e3c:	b2d2      	uxtb	r2, r2
90021e3e:	fb0e f707 	mul.w	r7, lr, r7
90021e42:	fb01 770c 	mla	r7, r1, ip, r7
90021e46:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90021e4a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90021e4c:	fb00 770c 	mla	r7, r0, ip, r7
90021e50:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90021e54:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90021e56:	fb08 770c 	mla	r7, r8, ip, r7
90021e5a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90021e5e:	fb0e fe0c 	mul.w	lr, lr, ip
90021e62:	0a3f      	lsrs	r7, r7, #8
90021e64:	fb01 e303 	mla	r3, r1, r3, lr
90021e68:	9909      	ldr	r1, [sp, #36]	@ 0x24
90021e6a:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90021e6e:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90021e72:	990e      	ldr	r1, [sp, #56]	@ 0x38
90021e74:	fb00 330a 	mla	r3, r0, sl, r3
90021e78:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90021e7c:	fb08 3c0c 	mla	ip, r8, ip, r3
90021e80:	f8b9 3000 	ldrh.w	r3, [r9]
90021e84:	1218      	asrs	r0, r3, #8
90021e86:	10d9      	asrs	r1, r3, #3
90021e88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021e8c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90021e90:	00db      	lsls	r3, r3, #3
90021e92:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90021e96:	4350      	muls	r0, r2
90021e98:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90021e9c:	b2db      	uxtb	r3, r3
90021e9e:	4351      	muls	r1, r2
90021ea0:	ea47 070c 	orr.w	r7, r7, ip
90021ea4:	4353      	muls	r3, r2
90021ea6:	1c42      	adds	r2, r0, #1
90021ea8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90021eac:	0c3a      	lsrs	r2, r7, #16
90021eae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90021eb2:	4a18      	ldr	r2, [pc, #96]	@ (90021f14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90021eb4:	b2c0      	uxtb	r0, r0
90021eb6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90021eba:	1c4a      	adds	r2, r1, #1
90021ebc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021ec0:	0a3a      	lsrs	r2, r7, #8
90021ec2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021ec6:	00c9      	lsls	r1, r1, #3
90021ec8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90021ecc:	4301      	orrs	r1, r0
90021ece:	1c58      	adds	r0, r3, #1
90021ed0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90021ed4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90021ed8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90021edc:	4308      	orrs	r0, r1
90021ede:	f8a9 0000 	strh.w	r0, [r9]
90021ee2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90021ee4:	f109 0902 	add.w	r9, r9, #2
90021ee8:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90021eea:	f10b 3bff 	add.w	fp, fp, #4294967295
90021eee:	441a      	add	r2, r3
90021ef0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90021ef2:	9225      	str	r2, [sp, #148]	@ 0x94
90021ef4:	441d      	add	r5, r3
90021ef6:	e64c      	b.n	90021b92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90021ef8:	2800      	cmp	r0, #0
90021efa:	f43f aeed 	beq.w	90021cd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90021efe:	5c79      	ldrb	r1, [r7, r1]
90021f00:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021f04:	9109      	str	r1, [sp, #36]	@ 0x24
90021f06:	0e09      	lsrs	r1, r1, #24
90021f08:	9111      	str	r1, [sp, #68]	@ 0x44
90021f0a:	e6e5      	b.n	90021cd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90021f0c:	b01b      	add	sp, #108	@ 0x6c
90021f0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021f12:	bf00      	nop
90021f14:	fffff800 	.word	0xfffff800

90021f18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90021f18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021f1c:	b085      	sub	sp, #20
90021f1e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90021f22:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90021f26:	2800      	cmp	r0, #0
90021f28:	9103      	str	r1, [sp, #12]
90021f2a:	fb00 7406 	mla	r4, r0, r6, r7
90021f2e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90021f32:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90021f36:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90021f3a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90021f3e:	eb03 0904 	add.w	r9, r3, r4
90021f42:	9501      	str	r5, [sp, #4]
90021f44:	f2c0 8150 	blt.w	900221e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90021f48:	4583      	cmp	fp, r0
90021f4a:	f340 814d 	ble.w	900221e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90021f4e:	2f00      	cmp	r7, #0
90021f50:	f2c0 8146 	blt.w	900221e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90021f54:	42be      	cmp	r6, r7
90021f56:	f340 8143 	ble.w	900221e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90021f5a:	f813 c004 	ldrb.w	ip, [r3, r4]
90021f5e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
90021f62:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90021f66:	ea4f 02ec 	mov.w	r2, ip, asr #3
90021f6a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
90021f6e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021f72:	4355      	muls	r5, r2
90021f74:	fb0c f203 	mul.w	r2, ip, r3
90021f78:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90021f7c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90021f80:	441d      	add	r5, r3
90021f82:	f102 0320 	add.w	r3, r2, #32
90021f86:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021f8a:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90021f8e:	0a1b      	lsrs	r3, r3, #8
90021f90:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021f94:	431c      	orrs	r4, r3
90021f96:	1c7b      	adds	r3, r7, #1
90021f98:	f100 812b 	bmi.w	900221f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90021f9c:	429e      	cmp	r6, r3
90021f9e:	f340 8128 	ble.w	900221f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90021fa2:	2900      	cmp	r1, #0
90021fa4:	f000 8128 	beq.w	900221f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90021fa8:	9a01      	ldr	r2, [sp, #4]
90021faa:	f899 3001 	ldrb.w	r3, [r9, #1]
90021fae:	8855      	ldrh	r5, [r2, #2]
90021fb0:	ea4f 08e3 	mov.w	r8, r3, asr #3
90021fb4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90021fb8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90021fbc:	fb08 f802 	mul.w	r8, r8, r2
90021fc0:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90021fc4:	435d      	muls	r5, r3
90021fc6:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90021fca:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90021fce:	44d0      	add	r8, sl
90021fd0:	f105 0a20 	add.w	sl, r5, #32
90021fd4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90021fd8:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90021fdc:	0a2d      	lsrs	r5, r5, #8
90021fde:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90021fe2:	432a      	orrs	r2, r5
90021fe4:	3001      	adds	r0, #1
90021fe6:	f100 810d 	bmi.w	90022204 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90021fea:	4583      	cmp	fp, r0
90021fec:	f340 810a 	ble.w	90022204 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90021ff0:	f1be 0f00 	cmp.w	lr, #0
90021ff4:	f000 810b 	beq.w	9002220e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90021ff8:	2f00      	cmp	r7, #0
90021ffa:	f2c0 8100 	blt.w	900221fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90021ffe:	42be      	cmp	r6, r7
90022000:	f340 80fd 	ble.w	900221fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90022004:	9801      	ldr	r0, [sp, #4]
90022006:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
9002200a:	f819 5006 	ldrb.w	r5, [r9, r6]
9002200e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90022012:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90022016:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
9002201a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9002201e:	fb0a fa00 	mul.w	sl, sl, r0
90022022:	fb05 f808 	mul.w	r8, r5, r8
90022026:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
9002202a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
9002202e:	4482      	add	sl, r0
90022030:	f108 0020 	add.w	r0, r8, #32
90022034:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90022038:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
9002203c:	0a00      	lsrs	r0, r0, #8
9002203e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022042:	ea4b 0b00 	orr.w	fp, fp, r0
90022046:	3701      	adds	r7, #1
90022048:	f100 80e6 	bmi.w	90022218 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
9002204c:	42be      	cmp	r6, r7
9002204e:	f340 80e3 	ble.w	90022218 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90022052:	2900      	cmp	r1, #0
90022054:	f000 80e3 	beq.w	9002221e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90022058:	3601      	adds	r6, #1
9002205a:	9801      	ldr	r0, [sp, #4]
9002205c:	f819 7006 	ldrb.w	r7, [r9, r6]
90022060:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90022064:	ea4f 09e7 	mov.w	r9, r7, asr #3
90022068:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
9002206c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022070:	fb09 f906 	mul.w	r9, r9, r6
90022074:	fb07 f800 	mul.w	r8, r7, r0
90022078:	f64f 001f 	movw	r0, #63519	@ 0xf81f
9002207c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90022080:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90022084:	44d1      	add	r9, sl
90022086:	ea00 1659 	and.w	r6, r0, r9, lsr #5
9002208a:	f108 0020 	add.w	r0, r8, #32
9002208e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90022092:	0a00      	lsrs	r0, r0, #8
90022094:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022098:	4330      	orrs	r0, r6
9002209a:	b28e      	uxth	r6, r1
9002209c:	fa1f f98e 	uxth.w	r9, lr
900220a0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900220a4:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
900220a8:	fb06 f809 	mul.w	r8, r6, r9
900220ac:	0136      	lsls	r6, r6, #4
900220ae:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900220b2:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900220b6:	9601      	str	r6, [sp, #4]
900220b8:	ea4a 0404 	orr.w	r4, sl, r4
900220bc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900220c0:	fa1f f689 	uxth.w	r6, r9
900220c4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900220c8:	fb11 f90e 	smulbb	r9, r1, lr
900220cc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900220d0:	9602      	str	r6, [sp, #8]
900220d2:	4626      	mov	r6, r4
900220d4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
900220d8:	f1ce 0410 	rsb	r4, lr, #16
900220dc:	ea4a 0202 	orr.w	r2, sl, r2
900220e0:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900220e4:	1a64      	subs	r4, r4, r1
900220e6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
900220ea:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900220ee:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900220f2:	434a      	muls	r2, r1
900220f4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900220f8:	ea4a 0000 	orr.w	r0, sl, r0
900220fc:	9903      	ldr	r1, [sp, #12]
900220fe:	fb04 2406 	mla	r4, r4, r6, r2
90022102:	9e02      	ldr	r6, [sp, #8]
90022104:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90022108:	fb09 4200 	mla	r2, r9, r0, r4
9002210c:	ea4f 440b 	mov.w	r4, fp, lsl #16
90022110:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90022114:	8808      	ldrh	r0, [r1, #0]
90022116:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9002211a:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
9002211e:	ea44 0b0b 	orr.w	fp, r4, fp
90022122:	9c01      	ldr	r4, [sp, #4]
90022124:	b289      	uxth	r1, r1
90022126:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
9002212a:	fb0e 2e0b 	mla	lr, lr, fp, r2
9002212e:	1ba4      	subs	r4, r4, r6
90022130:	9e01      	ldr	r6, [sp, #4]
90022132:	ea4f 525e 	mov.w	r2, lr, lsr #21
90022136:	eba6 0608 	sub.w	r6, r6, r8
9002213a:	b2a4      	uxth	r4, r4
9002213c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90022140:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022144:	b2b6      	uxth	r6, r6
90022146:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002214a:	4373      	muls	r3, r6
9002214c:	ea42 0e0e 	orr.w	lr, r2, lr
90022150:	fb0c 3304 	mla	r3, ip, r4, r3
90022154:	9c02      	ldr	r4, [sp, #8]
90022156:	fa1f f28e 	uxth.w	r2, lr
9002215a:	fb04 3505 	mla	r5, r4, r5, r3
9002215e:	10d4      	asrs	r4, r2, #3
90022160:	fb08 5707 	mla	r7, r8, r7, r5
90022164:	1215      	asrs	r5, r2, #8
90022166:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
9002216a:	00d2      	lsls	r2, r2, #3
9002216c:	f3c7 2707 	ubfx	r7, r7, #8, #8
90022170:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90022174:	b2d2      	uxtb	r2, r2
90022176:	434f      	muls	r7, r1
90022178:	1c7b      	adds	r3, r7, #1
9002217a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
9002217e:	1203      	asrs	r3, r0, #8
90022180:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90022184:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90022188:	b2ff      	uxtb	r7, r7
9002218a:	fb13 f307 	smulbb	r3, r3, r7
9002218e:	fb05 3501 	mla	r5, r5, r1, r3
90022192:	10c3      	asrs	r3, r0, #3
90022194:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90022198:	b2ad      	uxth	r5, r5
9002219a:	fb13 f307 	smulbb	r3, r3, r7
9002219e:	fb04 3401 	mla	r4, r4, r1, r3
900221a2:	00c3      	lsls	r3, r0, #3
900221a4:	b2db      	uxtb	r3, r3
900221a6:	b2a4      	uxth	r4, r4
900221a8:	fb13 f307 	smulbb	r3, r3, r7
900221ac:	fb02 3101 	mla	r1, r2, r1, r3
900221b0:	1c6b      	adds	r3, r5, #1
900221b2:	1c62      	adds	r2, r4, #1
900221b4:	b289      	uxth	r1, r1
900221b6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900221ba:	1c4b      	adds	r3, r1, #1
900221bc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900221c0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900221c4:	9a03      	ldr	r2, [sp, #12]
900221c6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900221ca:	0964      	lsrs	r4, r4, #5
900221cc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900221d0:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900221d4:	432b      	orrs	r3, r5
900221d6:	4323      	orrs	r3, r4
900221d8:	8013      	strh	r3, [r2, #0]
900221da:	b005      	add	sp, #20
900221dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900221e0:	f04f 0c00 	mov.w	ip, #0
900221e4:	4664      	mov	r4, ip
900221e6:	e6d6      	b.n	90021f96 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
900221e8:	2300      	movs	r3, #0
900221ea:	469c      	mov	ip, r3
900221ec:	461a      	mov	r2, r3
900221ee:	461c      	mov	r4, r3
900221f0:	e6f8      	b.n	90021fe4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900221f2:	2300      	movs	r3, #0
900221f4:	461a      	mov	r2, r3
900221f6:	e6f5      	b.n	90021fe4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900221f8:	460b      	mov	r3, r1
900221fa:	460a      	mov	r2, r1
900221fc:	e6f2      	b.n	90021fe4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900221fe:	2500      	movs	r5, #0
90022200:	46ab      	mov	fp, r5
90022202:	e720      	b.n	90022046 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90022204:	2700      	movs	r7, #0
90022206:	463d      	mov	r5, r7
90022208:	4638      	mov	r0, r7
9002220a:	46bb      	mov	fp, r7
9002220c:	e745      	b.n	9002209a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002220e:	4677      	mov	r7, lr
90022210:	4675      	mov	r5, lr
90022212:	4670      	mov	r0, lr
90022214:	46f3      	mov	fp, lr
90022216:	e740      	b.n	9002209a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90022218:	2700      	movs	r7, #0
9002221a:	4638      	mov	r0, r7
9002221c:	e73d      	b.n	9002209a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002221e:	460f      	mov	r7, r1
90022220:	4608      	mov	r0, r1
90022222:	e73a      	b.n	9002209a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90022224 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022228:	b097      	sub	sp, #92	@ 0x5c
9002222a:	9214      	str	r2, [sp, #80]	@ 0x50
9002222c:	9308      	str	r3, [sp, #32]
9002222e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90022230:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90022234:	9015      	str	r0, [sp, #84]	@ 0x54
90022236:	9312      	str	r3, [sp, #72]	@ 0x48
90022238:	6850      	ldr	r0, [r2, #4]
9002223a:	9111      	str	r1, [sp, #68]	@ 0x44
9002223c:	6812      	ldr	r2, [r2, #0]
9002223e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90022242:	fb00 1303 	mla	r3, r0, r3, r1
90022246:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002224a:	9309      	str	r3, [sp, #36]	@ 0x24
9002224c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002224e:	681b      	ldr	r3, [r3, #0]
90022250:	930b      	str	r3, [sp, #44]	@ 0x2c
90022252:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022254:	685b      	ldr	r3, [r3, #4]
90022256:	930c      	str	r3, [sp, #48]	@ 0x30
90022258:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
9002225c:	930a      	str	r3, [sp, #40]	@ 0x28
9002225e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022260:	2b00      	cmp	r3, #0
90022262:	dc03      	bgt.n	9002226c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90022264:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90022266:	2b00      	cmp	r3, #0
90022268:	f340 83cd 	ble.w	90022a06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
9002226c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002226e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022272:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022276:	1e48      	subs	r0, r1, #1
90022278:	1e55      	subs	r5, r2, #1
9002227a:	9b08      	ldr	r3, [sp, #32]
9002227c:	2b00      	cmp	r3, #0
9002227e:	f340 81a5 	ble.w	900225cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90022282:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90022284:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90022286:	1436      	asrs	r6, r6, #16
90022288:	ea4f 4323 	mov.w	r3, r3, asr #16
9002228c:	d406      	bmi.n	9002229c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002228e:	4286      	cmp	r6, r0
90022290:	da04      	bge.n	9002229c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90022292:	2b00      	cmp	r3, #0
90022294:	db02      	blt.n	9002229c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90022296:	42ab      	cmp	r3, r5
90022298:	f2c0 8199 	blt.w	900225ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
9002229c:	3601      	adds	r6, #1
9002229e:	f100 8186 	bmi.w	900225ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900222a2:	42b1      	cmp	r1, r6
900222a4:	f2c0 8183 	blt.w	900225ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900222a8:	3301      	adds	r3, #1
900222aa:	f100 8180 	bmi.w	900225ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900222ae:	429a      	cmp	r2, r3
900222b0:	f2c0 817d 	blt.w	900225ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900222b4:	9b08      	ldr	r3, [sp, #32]
900222b6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900222ba:	9f09      	ldr	r7, [sp, #36]	@ 0x24
900222bc:	9313      	str	r3, [sp, #76]	@ 0x4c
900222be:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900222c0:	2b00      	cmp	r3, #0
900222c2:	f340 81a6 	ble.w	90022612 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
900222c6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900222c8:	9d21      	ldr	r5, [sp, #132]	@ 0x84
900222ca:	1418      	asrs	r0, r3, #16
900222cc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900222ce:	142d      	asrs	r5, r5, #16
900222d0:	f3c3 3103 	ubfx	r1, r3, #12, #4
900222d4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900222d6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
900222da:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900222dc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
900222e0:	f100 81fa 	bmi.w	900226d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900222e4:	f102 3eff 	add.w	lr, r2, #4294967295
900222e8:	4575      	cmp	r5, lr
900222ea:	f280 81f5 	bge.w	900226d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900222ee:	2800      	cmp	r0, #0
900222f0:	f2c0 81f2 	blt.w	900226d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900222f4:	f103 3eff 	add.w	lr, r3, #4294967295
900222f8:	4570      	cmp	r0, lr
900222fa:	f280 81ed 	bge.w	900226d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900222fe:	b212      	sxth	r2, r2
90022300:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022302:	fa1f fe81 	uxth.w	lr, r1
90022306:	fb00 5002 	mla	r0, r0, r2, r5
9002230a:	ea4f 150e 	mov.w	r5, lr, lsl #4
9002230e:	eb03 0a00 	add.w	sl, r3, r0
90022312:	f813 9000 	ldrb.w	r9, [r3, r0]
90022316:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
9002231a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002231e:	b29b      	uxth	r3, r3
90022320:	f1bc 0f00 	cmp.w	ip, #0
90022324:	f000 81bb 	beq.w	9002269e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90022328:	f81a 4002 	ldrb.w	r4, [sl, r2]
9002232c:	eb0a 0b02 	add.w	fp, sl, r2
90022330:	fa1f fa8c 	uxth.w	sl, ip
90022334:	940d      	str	r4, [sp, #52]	@ 0x34
90022336:	fb0a fe0e 	mul.w	lr, sl, lr
9002233a:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002233e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90022342:	eba5 050e 	sub.w	r5, r5, lr
90022346:	940e      	str	r4, [sp, #56]	@ 0x38
90022348:	fa1f fa8a 	uxth.w	sl, sl
9002234c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002234e:	b2ad      	uxth	r5, r5
90022350:	eba3 030a 	sub.w	r3, r3, sl
90022354:	fb08 f505 	mul.w	r5, r8, r5
90022358:	b29b      	uxth	r3, r3
9002235a:	fb09 5303 	mla	r3, r9, r3, r5
9002235e:	fb0a 3304 	mla	r3, sl, r4, r3
90022362:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90022364:	fb0e 3304 	mla	r3, lr, r4, r3
90022368:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002236c:	2b00      	cmp	r3, #0
9002236e:	f000 8111 	beq.w	90022594 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022372:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022374:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90022378:	eb04 0540 	add.w	r5, r4, r0, lsl #1
9002237c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90022380:	f000 8192 	beq.w	900226a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90022384:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90022388:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002238c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022390:	fb0a fe0e 	mul.w	lr, sl, lr
90022394:	fb09 f000 	mul.w	r0, r9, r0
90022398:	ea06 195e 	and.w	r9, r6, lr, lsr #5
9002239c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900223a0:	f100 0b20 	add.w	fp, r0, #32
900223a4:	44ce      	add	lr, r9
900223a6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900223aa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900223ae:	ea4f 2919 	mov.w	r9, r9, lsr #8
900223b2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900223b6:	ea4e 0909 	orr.w	r9, lr, r9
900223ba:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900223be:	8868      	ldrh	r0, [r5, #2]
900223c0:	d019      	beq.n	900223f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
900223c2:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900223c6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900223ca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900223ce:	fb0a fe0e 	mul.w	lr, sl, lr
900223d2:	fb08 f800 	mul.w	r8, r8, r0
900223d6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
900223da:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900223de:	f108 0b20 	add.w	fp, r8, #32
900223e2:	4486      	add	lr, r0
900223e4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
900223e8:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900223ec:	0a00      	lsrs	r0, r0, #8
900223ee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900223f2:	ea4e 0000 	orr.w	r0, lr, r0
900223f6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
900223fa:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900223fe:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90022402:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90022406:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
9002240a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002240e:	ea4e 0909 	orr.w	r9, lr, r9
90022412:	ea4a 0000 	orr.w	r0, sl, r0
90022416:	f1bc 0f00 	cmp.w	ip, #0
9002241a:	f000 8147 	beq.w	900226ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
9002241e:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90022422:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90022424:	3a01      	subs	r2, #1
90022426:	2cff      	cmp	r4, #255	@ 0xff
90022428:	ea4f 0242 	mov.w	r2, r2, lsl #1
9002242c:	f102 0202 	add.w	r2, r2, #2
90022430:	eb05 0e02 	add.w	lr, r5, r2
90022434:	5aaa      	ldrh	r2, [r5, r2]
90022436:	d018      	beq.n	9002246a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90022438:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
9002243c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022440:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022444:	fb04 fa02 	mul.w	sl, r4, r2
90022448:	fb08 f805 	mul.w	r8, r8, r5
9002244c:	f10a 0520 	add.w	r5, sl, #32
90022450:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90022454:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90022458:	eb05 251a 	add.w	r5, r5, sl, lsr #8
9002245c:	4442      	add	r2, r8
9002245e:	0a2d      	lsrs	r5, r5, #8
90022460:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90022464:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022468:	432a      	orrs	r2, r5
9002246a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002246c:	f8be 5002 	ldrh.w	r5, [lr, #2]
90022470:	2cff      	cmp	r4, #255	@ 0xff
90022472:	d01a      	beq.n	900224aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90022474:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90022478:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002247c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022480:	fb04 fa05 	mul.w	sl, r4, r5
90022484:	fb08 f80e 	mul.w	r8, r8, lr
90022488:	f10a 0e20 	add.w	lr, sl, #32
9002248c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90022490:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90022494:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90022498:	4445      	add	r5, r8
9002249a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002249e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900224a2:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
900224a6:	ea45 050e 	orr.w	r5, r5, lr
900224aa:	fb1c fe01 	smulbb	lr, ip, r1
900224ae:	f1cc 0810 	rsb	r8, ip, #16
900224b2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900224b6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900224ba:	ea4f 0eee 	mov.w	lr, lr, asr #3
900224be:	eba8 0801 	sub.w	r8, r8, r1
900224c2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
900224c6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900224ca:	ebce 0141 	rsb	r1, lr, r1, lsl #1
900224ce:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900224d2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
900224d6:	ea4a 0202 	orr.w	r2, sl, r2
900224da:	4341      	muls	r1, r0
900224dc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
900224e0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900224e4:	fb09 1108 	mla	r1, r9, r8, r1
900224e8:	ea4b 0505 	orr.w	r5, fp, r5
900224ec:	fb0c 1102 	mla	r1, ip, r2, r1
900224f0:	fb0e 1e05 	mla	lr, lr, r5, r1
900224f4:	ea4f 525e 	mov.w	r2, lr, lsr #21
900224f8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900224fc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022500:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90022504:	ea42 0e0e 	orr.w	lr, r2, lr
90022508:	fa1f f28e 	uxth.w	r2, lr
9002250c:	2bff      	cmp	r3, #255	@ 0xff
9002250e:	d103      	bne.n	90022518 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90022510:	9912      	ldr	r1, [sp, #72]	@ 0x48
90022512:	29ff      	cmp	r1, #255	@ 0xff
90022514:	f000 80de 	beq.w	900226d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90022518:	990a      	ldr	r1, [sp, #40]	@ 0x28
9002251a:	1215      	asrs	r5, r2, #8
9002251c:	8838      	ldrh	r0, [r7, #0]
9002251e:	434b      	muls	r3, r1
90022520:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90022524:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022526:	f103 0c01 	add.w	ip, r3, #1
9002252a:	eb0c 2323 	add.w	r3, ip, r3, asr #8
9002252e:	ea6f 2323 	mvn.w	r3, r3, asr #8
90022532:	fa5f fc83 	uxtb.w	ip, r3
90022536:	1203      	asrs	r3, r0, #8
90022538:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
9002253c:	fb13 f30c 	smulbb	r3, r3, ip
90022540:	fb05 3501 	mla	r5, r5, r1, r3
90022544:	10c3      	asrs	r3, r0, #3
90022546:	10d1      	asrs	r1, r2, #3
90022548:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002254c:	00d2      	lsls	r2, r2, #3
9002254e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90022552:	b2ad      	uxth	r5, r5
90022554:	fb13 f30c 	smulbb	r3, r3, ip
90022558:	b2d2      	uxtb	r2, r2
9002255a:	fb01 3104 	mla	r1, r1, r4, r3
9002255e:	00c3      	lsls	r3, r0, #3
90022560:	b2db      	uxtb	r3, r3
90022562:	b289      	uxth	r1, r1
90022564:	fb13 f30c 	smulbb	r3, r3, ip
90022568:	fb02 3304 	mla	r3, r2, r4, r3
9002256c:	b29a      	uxth	r2, r3
9002256e:	1c6b      	adds	r3, r5, #1
90022570:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022574:	1c53      	adds	r3, r2, #1
90022576:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002257a:	1c4a      	adds	r2, r1, #1
9002257c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90022580:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022584:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022588:	0949      	lsrs	r1, r1, #5
9002258a:	432b      	orrs	r3, r5
9002258c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90022590:	430b      	orrs	r3, r1
90022592:	803b      	strh	r3, [r7, #0]
90022594:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90022596:	3702      	adds	r7, #2
90022598:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
9002259a:	4413      	add	r3, r2
9002259c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9002259e:	9321      	str	r3, [sp, #132]	@ 0x84
900225a0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900225a2:	441a      	add	r2, r3
900225a4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900225a6:	3b01      	subs	r3, #1
900225a8:	9222      	str	r2, [sp, #136]	@ 0x88
900225aa:	9313      	str	r3, [sp, #76]	@ 0x4c
900225ac:	e687      	b.n	900222be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900225ae:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900225b0:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
900225b2:	9c22      	ldr	r4, [sp, #136]	@ 0x88
900225b4:	4433      	add	r3, r6
900225b6:	9321      	str	r3, [sp, #132]	@ 0x84
900225b8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900225ba:	441c      	add	r4, r3
900225bc:	9b08      	ldr	r3, [sp, #32]
900225be:	3b01      	subs	r3, #1
900225c0:	9422      	str	r4, [sp, #136]	@ 0x88
900225c2:	9308      	str	r3, [sp, #32]
900225c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900225c6:	3302      	adds	r3, #2
900225c8:	9309      	str	r3, [sp, #36]	@ 0x24
900225ca:	e656      	b.n	9002227a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
900225cc:	d028      	beq.n	90022620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
900225ce:	9b08      	ldr	r3, [sp, #32]
900225d0:	9823      	ldr	r0, [sp, #140]	@ 0x8c
900225d2:	3b01      	subs	r3, #1
900225d4:	9d21      	ldr	r5, [sp, #132]	@ 0x84
900225d6:	fb00 5003 	mla	r0, r0, r3, r5
900225da:	1400      	asrs	r0, r0, #16
900225dc:	f53f ae6a 	bmi.w	900222b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900225e0:	3901      	subs	r1, #1
900225e2:	4288      	cmp	r0, r1
900225e4:	f6bf ae66 	bge.w	900222b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900225e8:	9924      	ldr	r1, [sp, #144]	@ 0x90
900225ea:	9822      	ldr	r0, [sp, #136]	@ 0x88
900225ec:	fb01 0303 	mla	r3, r1, r3, r0
900225f0:	141b      	asrs	r3, r3, #16
900225f2:	f53f ae5f 	bmi.w	900222b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900225f6:	3a01      	subs	r2, #1
900225f8:	4293      	cmp	r3, r2
900225fa:	f6bf ae5b 	bge.w	900222b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900225fe:	9b08      	ldr	r3, [sp, #32]
90022600:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90022604:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90022608:	9313      	str	r3, [sp, #76]	@ 0x4c
9002260a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9002260c:	2b00      	cmp	r3, #0
9002260e:	f300 8082 	bgt.w	90022716 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90022612:	9b08      	ldr	r3, [sp, #32]
90022614:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90022618:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002261a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002261e:	9309      	str	r3, [sp, #36]	@ 0x24
90022620:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022622:	2b00      	cmp	r3, #0
90022624:	f340 81ef 	ble.w	90022a06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90022628:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002262c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002262e:	ee30 0a04 	vadd.f32	s0, s0, s8
90022632:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022636:	eef0 6a62 	vmov.f32	s13, s5
9002263a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002263e:	ee31 1a05 	vadd.f32	s2, s2, s10
90022642:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022646:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
9002264a:	eef0 6a43 	vmov.f32	s13, s6
9002264e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022652:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
90022656:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002265a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002265e:	ee77 2a62 	vsub.f32	s5, s14, s5
90022662:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022666:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002266a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002266e:	ee12 2a90 	vmov	r2, s5
90022672:	eef0 2a47 	vmov.f32	s5, s14
90022676:	fb92 f3f3 	sdiv	r3, r2, r3
9002267a:	ee13 2a10 	vmov	r2, s6
9002267e:	9323      	str	r3, [sp, #140]	@ 0x8c
90022680:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022682:	eeb0 3a67 	vmov.f32	s6, s15
90022686:	fb92 f3f3 	sdiv	r3, r2, r3
9002268a:	9324      	str	r3, [sp, #144]	@ 0x90
9002268c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002268e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90022690:	3b01      	subs	r3, #1
90022692:	9311      	str	r3, [sp, #68]	@ 0x44
90022694:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022696:	bf08      	it	eq
90022698:	4613      	moveq	r3, r2
9002269a:	9308      	str	r3, [sp, #32]
9002269c:	e5df      	b.n	9002225e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9002269e:	fb08 f505 	mul.w	r5, r8, r5
900226a2:	fb09 5303 	mla	r3, r9, r3, r5
900226a6:	e65f      	b.n	90022368 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
900226a8:	4681      	mov	r9, r0
900226aa:	e686      	b.n	900223ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900226ac:	f1c1 0210 	rsb	r2, r1, #16
900226b0:	4341      	muls	r1, r0
900226b2:	fb09 1902 	mla	r9, r9, r2, r1
900226b6:	ea4f 0949 	mov.w	r9, r9, lsl #1
900226ba:	ea4f 5259 	mov.w	r2, r9, lsr #21
900226be:	ea4f 1959 	mov.w	r9, r9, lsr #5
900226c2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900226c6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900226ca:	ea42 0909 	orr.w	r9, r2, r9
900226ce:	fa1f f289 	uxth.w	r2, r9
900226d2:	e71b      	b.n	9002250c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
900226d4:	803a      	strh	r2, [r7, #0]
900226d6:	e75d      	b.n	90022594 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900226d8:	f115 0e01 	adds.w	lr, r5, #1
900226dc:	f53f af5a 	bmi.w	90022594 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900226e0:	4572      	cmp	r2, lr
900226e2:	f6ff af57 	blt.w	90022594 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900226e6:	f110 0e01 	adds.w	lr, r0, #1
900226ea:	f53f af53 	bmi.w	90022594 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900226ee:	4573      	cmp	r3, lr
900226f0:	f6ff af50 	blt.w	90022594 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900226f4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900226f6:	b21b      	sxth	r3, r3
900226f8:	b212      	sxth	r2, r2
900226fa:	9502      	str	r5, [sp, #8]
900226fc:	9301      	str	r3, [sp, #4]
900226fe:	9200      	str	r2, [sp, #0]
90022700:	e9cd 0103 	strd	r0, r1, [sp, #12]
90022704:	e9cd c405 	strd	ip, r4, [sp, #20]
90022708:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
9002270c:	4639      	mov	r1, r7
9002270e:	9815      	ldr	r0, [sp, #84]	@ 0x54
90022710:	f7ff fc02 	bl	90021f18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90022714:	e73e      	b.n	90022594 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022716:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90022718:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002271c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002271e:	f3c3 3503 	ubfx	r5, r3, #12, #4
90022722:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022724:	fa1f fc82 	uxth.w	ip, r2
90022728:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002272c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002272e:	ea4f 100c 	mov.w	r0, ip, lsl #4
90022732:	141f      	asrs	r7, r3, #16
90022734:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90022736:	141b      	asrs	r3, r3, #16
90022738:	fb01 3707 	mla	r7, r1, r7, r3
9002273c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002273e:	eb03 0a07 	add.w	sl, r3, r7
90022742:	f813 9007 	ldrb.w	r9, [r3, r7]
90022746:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
9002274a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002274e:	b29b      	uxth	r3, r3
90022750:	2d00      	cmp	r5, #0
90022752:	f000 813d 	beq.w	900229d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90022756:	f81a 4001 	ldrb.w	r4, [sl, r1]
9002275a:	eb0a 0b01 	add.w	fp, sl, r1
9002275e:	fa1f fa85 	uxth.w	sl, r5
90022762:	940f      	str	r4, [sp, #60]	@ 0x3c
90022764:	fb0a fc0c 	mul.w	ip, sl, ip
90022768:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002276c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90022770:	eba0 000c 	sub.w	r0, r0, ip
90022774:	9410      	str	r4, [sp, #64]	@ 0x40
90022776:	fa1f fa8a 	uxth.w	sl, sl
9002277a:	b280      	uxth	r0, r0
9002277c:	eba3 030a 	sub.w	r3, r3, sl
90022780:	fb08 f000 	mul.w	r0, r8, r0
90022784:	b29b      	uxth	r3, r3
90022786:	fb09 0303 	mla	r3, r9, r3, r0
9002278a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9002278c:	fb0a 3300 	mla	r3, sl, r0, r3
90022790:	fb0c 3304 	mla	r3, ip, r4, r3
90022794:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022798:	2b00      	cmp	r3, #0
9002279a:	f000 810b 	beq.w	900229b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
9002279e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900227a0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900227a4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900227a6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900227aa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900227ae:	f000 8114 	beq.w	900229da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
900227b2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900227b6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900227ba:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900227be:	fb0a fc0c 	mul.w	ip, sl, ip
900227c2:	fb09 f707 	mul.w	r7, r9, r7
900227c6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900227ca:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
900227ce:	f107 0b20 	add.w	fp, r7, #32
900227d2:	44cc      	add	ip, r9
900227d4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
900227d8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900227dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
900227e0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900227e4:	ea4c 0909 	orr.w	r9, ip, r9
900227e8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900227ec:	8847      	ldrh	r7, [r0, #2]
900227ee:	d019      	beq.n	90022824 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
900227f0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900227f4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900227f8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900227fc:	fb0a fc0c 	mul.w	ip, sl, ip
90022800:	fb08 f807 	mul.w	r8, r8, r7
90022804:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90022808:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
9002280c:	f108 0b20 	add.w	fp, r8, #32
90022810:	44bc      	add	ip, r7
90022812:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90022816:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002281a:	0a3f      	lsrs	r7, r7, #8
9002281c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90022820:	ea4c 0707 	orr.w	r7, ip, r7
90022824:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90022828:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002282c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90022830:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90022834:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022838:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002283c:	ea4c 0909 	orr.w	r9, ip, r9
90022840:	ea4a 0707 	orr.w	r7, sl, r7
90022844:	2d00      	cmp	r5, #0
90022846:	f000 80ca 	beq.w	900229de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
9002284a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
9002284e:	3901      	subs	r1, #1
90022850:	0049      	lsls	r1, r1, #1
90022852:	3102      	adds	r1, #2
90022854:	eb00 0c01 	add.w	ip, r0, r1
90022858:	5a41      	ldrh	r1, [r0, r1]
9002285a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9002285c:	28ff      	cmp	r0, #255	@ 0xff
9002285e:	d019      	beq.n	90022894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90022860:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90022864:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90022866:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002286a:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002286e:	fb04 fa01 	mul.w	sl, r4, r1
90022872:	fb08 f800 	mul.w	r8, r8, r0
90022876:	f10a 0020 	add.w	r0, sl, #32
9002287a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
9002287e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90022882:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90022886:	4441      	add	r1, r8
90022888:	0a00      	lsrs	r0, r0, #8
9002288a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
9002288e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022892:	4301      	orrs	r1, r0
90022894:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90022896:	f8bc 0002 	ldrh.w	r0, [ip, #2]
9002289a:	2cff      	cmp	r4, #255	@ 0xff
9002289c:	d01a      	beq.n	900228d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
9002289e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
900228a2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900228a6:	ea4f 08e4 	mov.w	r8, r4, asr #3
900228aa:	fb04 fa00 	mul.w	sl, r4, r0
900228ae:	fb08 f80c 	mul.w	r8, r8, ip
900228b2:	f10a 0c20 	add.w	ip, sl, #32
900228b6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
900228ba:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900228be:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
900228c2:	4440      	add	r0, r8
900228c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900228c8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
900228cc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900228d0:	ea40 000c 	orr.w	r0, r0, ip
900228d4:	fb15 fc02 	smulbb	ip, r5, r2
900228d8:	f1c5 0810 	rsb	r8, r5, #16
900228dc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900228e0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900228e4:	ea4f 0cec 	mov.w	ip, ip, asr #3
900228e8:	eba8 0802 	sub.w	r8, r8, r2
900228ec:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900228f0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900228f4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
900228f8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900228fc:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90022900:	ea4a 0101 	orr.w	r1, sl, r1
90022904:	437a      	muls	r2, r7
90022906:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9002290a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002290e:	fb09 2208 	mla	r2, r9, r8, r2
90022912:	ea4b 0000 	orr.w	r0, fp, r0
90022916:	fb05 2201 	mla	r2, r5, r1, r2
9002291a:	fb0c 2200 	mla	r2, ip, r0, r2
9002291e:	0d57      	lsrs	r7, r2, #21
90022920:	0952      	lsrs	r2, r2, #5
90022922:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90022926:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002292a:	433a      	orrs	r2, r7
9002292c:	2bff      	cmp	r3, #255	@ 0xff
9002292e:	b292      	uxth	r2, r2
90022930:	d102      	bne.n	90022938 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90022932:	9912      	ldr	r1, [sp, #72]	@ 0x48
90022934:	29ff      	cmp	r1, #255	@ 0xff
90022936:	d063      	beq.n	90022a00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90022938:	980a      	ldr	r0, [sp, #40]	@ 0x28
9002293a:	1215      	asrs	r5, r2, #8
9002293c:	f8be 1000 	ldrh.w	r1, [lr]
90022940:	4343      	muls	r3, r0
90022942:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022944:	10cf      	asrs	r7, r1, #3
90022946:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002294a:	1c58      	adds	r0, r3, #1
9002294c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90022950:	eb00 2323 	add.w	r3, r0, r3, asr #8
90022954:	1208      	asrs	r0, r1, #8
90022956:	ea6f 2323 	mvn.w	r3, r3, asr #8
9002295a:	00c9      	lsls	r1, r1, #3
9002295c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90022960:	b2db      	uxtb	r3, r3
90022962:	b2c9      	uxtb	r1, r1
90022964:	fb10 f003 	smulbb	r0, r0, r3
90022968:	fb11 f103 	smulbb	r1, r1, r3
9002296c:	fb05 0504 	mla	r5, r5, r4, r0
90022970:	10d0      	asrs	r0, r2, #3
90022972:	fb17 f703 	smulbb	r7, r7, r3
90022976:	00d2      	lsls	r2, r2, #3
90022978:	b2ad      	uxth	r5, r5
9002297a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002297e:	b2d2      	uxtb	r2, r2
90022980:	fb00 7004 	mla	r0, r0, r4, r7
90022984:	1c6b      	adds	r3, r5, #1
90022986:	fb02 1204 	mla	r2, r2, r4, r1
9002298a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002298e:	b292      	uxth	r2, r2
90022990:	b280      	uxth	r0, r0
90022992:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90022996:	1c57      	adds	r7, r2, #1
90022998:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9002299c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900229a0:	433d      	orrs	r5, r7
900229a2:	1c47      	adds	r7, r0, #1
900229a4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
900229a8:	097f      	lsrs	r7, r7, #5
900229aa:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900229ae:	433d      	orrs	r5, r7
900229b0:	f8ae 5000 	strh.w	r5, [lr]
900229b4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900229b6:	f10e 0e02 	add.w	lr, lr, #2
900229ba:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900229bc:	4413      	add	r3, r2
900229be:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900229c0:	9321      	str	r3, [sp, #132]	@ 0x84
900229c2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900229c4:	441a      	add	r2, r3
900229c6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900229c8:	3b01      	subs	r3, #1
900229ca:	9222      	str	r2, [sp, #136]	@ 0x88
900229cc:	9313      	str	r3, [sp, #76]	@ 0x4c
900229ce:	e61c      	b.n	9002260a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
900229d0:	fb08 f000 	mul.w	r0, r8, r0
900229d4:	fb09 0303 	mla	r3, r9, r3, r0
900229d8:	e6dc      	b.n	90022794 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
900229da:	46b9      	mov	r9, r7
900229dc:	e704      	b.n	900227e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
900229de:	f1c2 0110 	rsb	r1, r2, #16
900229e2:	437a      	muls	r2, r7
900229e4:	fb09 2901 	mla	r9, r9, r1, r2
900229e8:	ea4f 0949 	mov.w	r9, r9, lsl #1
900229ec:	ea4f 5059 	mov.w	r0, r9, lsr #21
900229f0:	ea4f 1259 	mov.w	r2, r9, lsr #5
900229f4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900229f8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900229fc:	4302      	orrs	r2, r0
900229fe:	e795      	b.n	9002292c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90022a00:	f8ae 2000 	strh.w	r2, [lr]
90022a04:	e7d6      	b.n	900229b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90022a06:	b017      	add	sp, #92	@ 0x5c
90022a08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022a0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90022a0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022a10:	b085      	sub	sp, #20
90022a12:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90022a16:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90022a1a:	2800      	cmp	r0, #0
90022a1c:	9103      	str	r1, [sp, #12]
90022a1e:	fb00 7406 	mla	r4, r0, r6, r7
90022a22:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90022a26:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90022a2a:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90022a2e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90022a32:	eb02 0904 	add.w	r9, r2, r4
90022a36:	9501      	str	r5, [sp, #4]
90022a38:	f2c0 8141 	blt.w	90022cbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90022a3c:	4583      	cmp	fp, r0
90022a3e:	f340 813e 	ble.w	90022cbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90022a42:	2f00      	cmp	r7, #0
90022a44:	f2c0 8137 	blt.w	90022cb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90022a48:	42be      	cmp	r6, r7
90022a4a:	f340 8134 	ble.w	90022cb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90022a4e:	f812 c004 	ldrb.w	ip, [r2, r4]
90022a52:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90022a56:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90022a5a:	ea4f 02ec 	mov.w	r2, ip, asr #3
90022a5e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
90022a62:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022a66:	4355      	muls	r5, r2
90022a68:	fb0c f203 	mul.w	r2, ip, r3
90022a6c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90022a70:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90022a74:	441d      	add	r5, r3
90022a76:	f102 0320 	add.w	r3, r2, #32
90022a7a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022a7e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90022a82:	0a1b      	lsrs	r3, r3, #8
90022a84:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022a88:	431c      	orrs	r4, r3
90022a8a:	1c7b      	adds	r3, r7, #1
90022a8c:	f100 811c 	bmi.w	90022cc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90022a90:	429e      	cmp	r6, r3
90022a92:	f340 8119 	ble.w	90022cc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90022a96:	2900      	cmp	r1, #0
90022a98:	f000 8119 	beq.w	90022cce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90022a9c:	9a01      	ldr	r2, [sp, #4]
90022a9e:	f899 3001 	ldrb.w	r3, [r9, #1]
90022aa2:	8855      	ldrh	r5, [r2, #2]
90022aa4:	ea4f 08e3 	mov.w	r8, r3, asr #3
90022aa8:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90022aac:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022ab0:	fb08 f802 	mul.w	r8, r8, r2
90022ab4:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90022ab8:	435d      	muls	r5, r3
90022aba:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90022abe:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90022ac2:	44d0      	add	r8, sl
90022ac4:	f105 0a20 	add.w	sl, r5, #32
90022ac8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90022acc:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90022ad0:	0a2d      	lsrs	r5, r5, #8
90022ad2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022ad6:	432a      	orrs	r2, r5
90022ad8:	3001      	adds	r0, #1
90022ada:	f100 80fe 	bmi.w	90022cda <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90022ade:	4583      	cmp	fp, r0
90022ae0:	f340 80fb 	ble.w	90022cda <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90022ae4:	f1be 0f00 	cmp.w	lr, #0
90022ae8:	f000 80fc 	beq.w	90022ce4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90022aec:	2f00      	cmp	r7, #0
90022aee:	f2c0 80f1 	blt.w	90022cd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90022af2:	42be      	cmp	r6, r7
90022af4:	f340 80ee 	ble.w	90022cd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90022af8:	9801      	ldr	r0, [sp, #4]
90022afa:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90022afe:	f819 5006 	ldrb.w	r5, [r9, r6]
90022b02:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90022b06:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90022b0a:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90022b0e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90022b12:	fb0a fa00 	mul.w	sl, sl, r0
90022b16:	fb05 f808 	mul.w	r8, r5, r8
90022b1a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90022b1e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90022b22:	4482      	add	sl, r0
90022b24:	f108 0020 	add.w	r0, r8, #32
90022b28:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90022b2c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90022b30:	0a00      	lsrs	r0, r0, #8
90022b32:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022b36:	ea4b 0b00 	orr.w	fp, fp, r0
90022b3a:	3701      	adds	r7, #1
90022b3c:	f100 80d7 	bmi.w	90022cee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90022b40:	42be      	cmp	r6, r7
90022b42:	f340 80d4 	ble.w	90022cee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90022b46:	2900      	cmp	r1, #0
90022b48:	f000 80d4 	beq.w	90022cf4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90022b4c:	3601      	adds	r6, #1
90022b4e:	9801      	ldr	r0, [sp, #4]
90022b50:	f819 7006 	ldrb.w	r7, [r9, r6]
90022b54:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90022b58:	ea4f 09e7 	mov.w	r9, r7, asr #3
90022b5c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90022b60:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022b64:	fb09 f906 	mul.w	r9, r9, r6
90022b68:	fb07 f800 	mul.w	r8, r7, r0
90022b6c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90022b70:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90022b74:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90022b78:	44d1      	add	r9, sl
90022b7a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90022b7e:	f108 0020 	add.w	r0, r8, #32
90022b82:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90022b86:	0a00      	lsrs	r0, r0, #8
90022b88:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022b8c:	4330      	orrs	r0, r6
90022b8e:	b28e      	uxth	r6, r1
90022b90:	fa1f f98e 	uxth.w	r9, lr
90022b94:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90022b98:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90022b9c:	fb06 f809 	mul.w	r8, r6, r9
90022ba0:	0136      	lsls	r6, r6, #4
90022ba2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022ba6:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90022baa:	9601      	str	r6, [sp, #4]
90022bac:	ea4a 0404 	orr.w	r4, sl, r4
90022bb0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90022bb4:	fa1f f689 	uxth.w	r6, r9
90022bb8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90022bbc:	fb11 f90e 	smulbb	r9, r1, lr
90022bc0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022bc4:	9602      	str	r6, [sp, #8]
90022bc6:	4626      	mov	r6, r4
90022bc8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90022bcc:	f1ce 0410 	rsb	r4, lr, #16
90022bd0:	ea4a 0202 	orr.w	r2, sl, r2
90022bd4:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90022bd8:	1a64      	subs	r4, r4, r1
90022bda:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90022bde:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022be2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90022be6:	434a      	muls	r2, r1
90022be8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90022bec:	ea4a 0000 	orr.w	r0, sl, r0
90022bf0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90022bf4:	fb04 2406 	mla	r4, r4, r6, r2
90022bf8:	9903      	ldr	r1, [sp, #12]
90022bfa:	fb09 4200 	mla	r2, r9, r0, r4
90022bfe:	ea4f 440b 	mov.w	r4, fp, lsl #16
90022c02:	9801      	ldr	r0, [sp, #4]
90022c04:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90022c08:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90022c0c:	8809      	ldrh	r1, [r1, #0]
90022c0e:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
90022c12:	ea44 0b0b 	orr.w	fp, r4, fp
90022c16:	9c02      	ldr	r4, [sp, #8]
90022c18:	1b00      	subs	r0, r0, r4
90022c1a:	9c01      	ldr	r4, [sp, #4]
90022c1c:	fb0e 2e0b 	mla	lr, lr, fp, r2
90022c20:	eba4 0608 	sub.w	r6, r4, r8
90022c24:	b280      	uxth	r0, r0
90022c26:	ea4f 525e 	mov.w	r2, lr, lsr #21
90022c2a:	b2b6      	uxth	r6, r6
90022c2c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90022c30:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022c34:	4373      	muls	r3, r6
90022c36:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90022c3a:	fb0c 3300 	mla	r3, ip, r0, r3
90022c3e:	9802      	ldr	r0, [sp, #8]
90022c40:	ea42 0e0e 	orr.w	lr, r2, lr
90022c44:	fb00 3505 	mla	r5, r0, r5, r3
90022c48:	120b      	asrs	r3, r1, #8
90022c4a:	10c8      	asrs	r0, r1, #3
90022c4c:	fb08 5707 	mla	r7, r8, r7, r5
90022c50:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90022c54:	00c9      	lsls	r1, r1, #3
90022c56:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90022c5a:	ea6f 2727 	mvn.w	r7, r7, asr #8
90022c5e:	fa1f f28e 	uxth.w	r2, lr
90022c62:	b2c9      	uxtb	r1, r1
90022c64:	b2ff      	uxtb	r7, r7
90022c66:	437b      	muls	r3, r7
90022c68:	4378      	muls	r0, r7
90022c6a:	434f      	muls	r7, r1
90022c6c:	1c59      	adds	r1, r3, #1
90022c6e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90022c72:	1213      	asrs	r3, r2, #8
90022c74:	f023 0307 	bic.w	r3, r3, #7
90022c78:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90022c7c:	1c41      	adds	r1, r0, #1
90022c7e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90022c82:	10d1      	asrs	r1, r2, #3
90022c84:	021b      	lsls	r3, r3, #8
90022c86:	f021 0103 	bic.w	r1, r1, #3
90022c8a:	00d2      	lsls	r2, r2, #3
90022c8c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
90022c90:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90022c94:	00c9      	lsls	r1, r1, #3
90022c96:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90022c9a:	430b      	orrs	r3, r1
90022c9c:	1c79      	adds	r1, r7, #1
90022c9e:	eb01 2717 	add.w	r7, r1, r7, lsr #8
90022ca2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90022ca6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90022caa:	431a      	orrs	r2, r3
90022cac:	9b03      	ldr	r3, [sp, #12]
90022cae:	801a      	strh	r2, [r3, #0]
90022cb0:	b005      	add	sp, #20
90022cb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022cb6:	f04f 0c00 	mov.w	ip, #0
90022cba:	4664      	mov	r4, ip
90022cbc:	e6e5      	b.n	90022a8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
90022cbe:	2300      	movs	r3, #0
90022cc0:	469c      	mov	ip, r3
90022cc2:	461a      	mov	r2, r3
90022cc4:	461c      	mov	r4, r3
90022cc6:	e707      	b.n	90022ad8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90022cc8:	2300      	movs	r3, #0
90022cca:	461a      	mov	r2, r3
90022ccc:	e704      	b.n	90022ad8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90022cce:	460b      	mov	r3, r1
90022cd0:	460a      	mov	r2, r1
90022cd2:	e701      	b.n	90022ad8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90022cd4:	2500      	movs	r5, #0
90022cd6:	46ab      	mov	fp, r5
90022cd8:	e72f      	b.n	90022b3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90022cda:	2700      	movs	r7, #0
90022cdc:	463d      	mov	r5, r7
90022cde:	4638      	mov	r0, r7
90022ce0:	46bb      	mov	fp, r7
90022ce2:	e754      	b.n	90022b8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90022ce4:	4677      	mov	r7, lr
90022ce6:	4675      	mov	r5, lr
90022ce8:	4670      	mov	r0, lr
90022cea:	46f3      	mov	fp, lr
90022cec:	e74f      	b.n	90022b8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90022cee:	2700      	movs	r7, #0
90022cf0:	4638      	mov	r0, r7
90022cf2:	e74c      	b.n	90022b8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90022cf4:	460f      	mov	r7, r1
90022cf6:	4608      	mov	r0, r1
90022cf8:	e749      	b.n	90022b8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90022cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022cfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022d00:	b093      	sub	sp, #76	@ 0x4c
90022d02:	9210      	str	r2, [sp, #64]	@ 0x40
90022d04:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90022d06:	9011      	str	r0, [sp, #68]	@ 0x44
90022d08:	910e      	str	r1, [sp, #56]	@ 0x38
90022d0a:	6850      	ldr	r0, [r2, #4]
90022d0c:	9306      	str	r3, [sp, #24]
90022d0e:	6812      	ldr	r2, [r2, #0]
90022d10:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90022d14:	fb00 1303 	mla	r3, r0, r3, r1
90022d18:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022d1c:	9307      	str	r3, [sp, #28]
90022d1e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022d20:	681b      	ldr	r3, [r3, #0]
90022d22:	9308      	str	r3, [sp, #32]
90022d24:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022d26:	685b      	ldr	r3, [r3, #4]
90022d28:	9309      	str	r3, [sp, #36]	@ 0x24
90022d2a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022d2c:	2b00      	cmp	r3, #0
90022d2e:	dc03      	bgt.n	90022d38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90022d30:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022d32:	2b00      	cmp	r3, #0
90022d34:	f340 83b6 	ble.w	900234a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90022d38:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022d3a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022d3e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022d42:	1e48      	subs	r0, r1, #1
90022d44:	1e55      	subs	r5, r2, #1
90022d46:	9b06      	ldr	r3, [sp, #24]
90022d48:	2b00      	cmp	r3, #0
90022d4a:	f340 8165 	ble.w	90023018 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90022d4e:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
90022d50:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90022d52:	1436      	asrs	r6, r6, #16
90022d54:	ea4f 4323 	mov.w	r3, r3, asr #16
90022d58:	d406      	bmi.n	90022d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90022d5a:	4286      	cmp	r6, r0
90022d5c:	da04      	bge.n	90022d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90022d5e:	2b00      	cmp	r3, #0
90022d60:	db02      	blt.n	90022d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90022d62:	42ab      	cmp	r3, r5
90022d64:	f2c0 8159 	blt.w	9002301a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90022d68:	3601      	adds	r6, #1
90022d6a:	f100 8146 	bmi.w	90022ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90022d6e:	42b1      	cmp	r1, r6
90022d70:	f2c0 8143 	blt.w	90022ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90022d74:	3301      	adds	r3, #1
90022d76:	f100 8140 	bmi.w	90022ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90022d7a:	429a      	cmp	r2, r3
90022d7c:	f2c0 813d 	blt.w	90022ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90022d80:	9b06      	ldr	r3, [sp, #24]
90022d82:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90022d86:	9f07      	ldr	r7, [sp, #28]
90022d88:	930f      	str	r3, [sp, #60]	@ 0x3c
90022d8a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90022d8c:	2b00      	cmp	r3, #0
90022d8e:	f340 8166 	ble.w	9002305e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90022d92:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90022d94:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90022d96:	1418      	asrs	r0, r3, #16
90022d98:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90022d9a:	142d      	asrs	r5, r5, #16
90022d9c:	f3c3 3103 	ubfx	r1, r3, #12, #4
90022da0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90022da2:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90022da6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022da8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90022dac:	f100 81f0 	bmi.w	90023190 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90022db0:	f102 3eff 	add.w	lr, r2, #4294967295
90022db4:	4575      	cmp	r5, lr
90022db6:	f280 81eb 	bge.w	90023190 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90022dba:	2800      	cmp	r0, #0
90022dbc:	f2c0 81e8 	blt.w	90023190 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90022dc0:	f103 3eff 	add.w	lr, r3, #4294967295
90022dc4:	4570      	cmp	r0, lr
90022dc6:	f280 81e3 	bge.w	90023190 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90022dca:	b212      	sxth	r2, r2
90022dcc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022dce:	fa1f fe81 	uxth.w	lr, r1
90022dd2:	fb00 5002 	mla	r0, r0, r2, r5
90022dd6:	ea4f 150e 	mov.w	r5, lr, lsl #4
90022dda:	eb03 0a00 	add.w	sl, r3, r0
90022dde:	f813 9000 	ldrb.w	r9, [r3, r0]
90022de2:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90022de6:	f89a 8001 	ldrb.w	r8, [sl, #1]
90022dea:	b29b      	uxth	r3, r3
90022dec:	f1bc 0f00 	cmp.w	ip, #0
90022df0:	f000 817b 	beq.w	900230ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90022df4:	f81a 4002 	ldrb.w	r4, [sl, r2]
90022df8:	eb0a 0b02 	add.w	fp, sl, r2
90022dfc:	fa1f fa8c 	uxth.w	sl, ip
90022e00:	940a      	str	r4, [sp, #40]	@ 0x28
90022e02:	fb0a fe0e 	mul.w	lr, sl, lr
90022e06:	f89b 4001 	ldrb.w	r4, [fp, #1]
90022e0a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90022e0e:	eba5 050e 	sub.w	r5, r5, lr
90022e12:	940b      	str	r4, [sp, #44]	@ 0x2c
90022e14:	fa1f fa8a 	uxth.w	sl, sl
90022e18:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022e1a:	b2ad      	uxth	r5, r5
90022e1c:	eba3 030a 	sub.w	r3, r3, sl
90022e20:	fb08 f505 	mul.w	r5, r8, r5
90022e24:	b29b      	uxth	r3, r3
90022e26:	fb09 5303 	mla	r3, r9, r3, r5
90022e2a:	fb0a 3304 	mla	r3, sl, r4, r3
90022e2e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022e30:	fb0e 3304 	mla	r3, lr, r4, r3
90022e34:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022e38:	2b00      	cmp	r3, #0
90022e3a:	f000 80d1 	beq.w	90022fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90022e3e:	9c08      	ldr	r4, [sp, #32]
90022e40:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90022e44:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90022e48:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90022e4c:	f000 8152 	beq.w	900230f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90022e50:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90022e54:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90022e58:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022e5c:	fb0a fe0e 	mul.w	lr, sl, lr
90022e60:	fb09 f000 	mul.w	r0, r9, r0
90022e64:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90022e68:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90022e6c:	f100 0b20 	add.w	fp, r0, #32
90022e70:	44ce      	add	lr, r9
90022e72:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90022e76:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90022e7a:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022e7e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90022e82:	ea4e 0909 	orr.w	r9, lr, r9
90022e86:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90022e8a:	8868      	ldrh	r0, [r5, #2]
90022e8c:	d019      	beq.n	90022ec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90022e8e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90022e92:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90022e96:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022e9a:	fb0a fe0e 	mul.w	lr, sl, lr
90022e9e:	fb08 f800 	mul.w	r8, r8, r0
90022ea2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90022ea6:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90022eaa:	f108 0b20 	add.w	fp, r8, #32
90022eae:	4486      	add	lr, r0
90022eb0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90022eb4:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90022eb8:	0a00      	lsrs	r0, r0, #8
90022eba:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022ebe:	ea4e 0000 	orr.w	r0, lr, r0
90022ec2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90022ec6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90022eca:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90022ece:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90022ed2:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90022ed6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022eda:	ea4e 0909 	orr.w	r9, lr, r9
90022ede:	ea4a 0000 	orr.w	r0, sl, r0
90022ee2:	f1bc 0f00 	cmp.w	ip, #0
90022ee6:	f000 8107 	beq.w	900230f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90022eea:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90022eee:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022ef0:	3a01      	subs	r2, #1
90022ef2:	2cff      	cmp	r4, #255	@ 0xff
90022ef4:	ea4f 0242 	mov.w	r2, r2, lsl #1
90022ef8:	f102 0202 	add.w	r2, r2, #2
90022efc:	eb05 0e02 	add.w	lr, r5, r2
90022f00:	5aaa      	ldrh	r2, [r5, r2]
90022f02:	d018      	beq.n	90022f36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90022f04:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90022f08:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022f0c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022f10:	fb04 fa02 	mul.w	sl, r4, r2
90022f14:	fb08 f805 	mul.w	r8, r8, r5
90022f18:	f10a 0520 	add.w	r5, sl, #32
90022f1c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90022f20:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90022f24:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90022f28:	4442      	add	r2, r8
90022f2a:	0a2d      	lsrs	r5, r5, #8
90022f2c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90022f30:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022f34:	432a      	orrs	r2, r5
90022f36:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022f38:	f8be 5002 	ldrh.w	r5, [lr, #2]
90022f3c:	2cff      	cmp	r4, #255	@ 0xff
90022f3e:	d01a      	beq.n	90022f76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90022f40:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90022f44:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022f48:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022f4c:	fb04 fa05 	mul.w	sl, r4, r5
90022f50:	fb08 f80e 	mul.w	r8, r8, lr
90022f54:	f10a 0e20 	add.w	lr, sl, #32
90022f58:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90022f5c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90022f60:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90022f64:	4445      	add	r5, r8
90022f66:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022f6a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90022f6e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90022f72:	ea45 050e 	orr.w	r5, r5, lr
90022f76:	fb1c fe01 	smulbb	lr, ip, r1
90022f7a:	f1cc 0810 	rsb	r8, ip, #16
90022f7e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90022f82:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90022f86:	ea4f 0eee 	mov.w	lr, lr, asr #3
90022f8a:	eba8 0801 	sub.w	r8, r8, r1
90022f8e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90022f92:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022f96:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90022f9a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90022f9e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90022fa2:	ea4a 0202 	orr.w	r2, sl, r2
90022fa6:	4341      	muls	r1, r0
90022fa8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90022fac:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90022fb0:	fb09 1108 	mla	r1, r9, r8, r1
90022fb4:	ea4b 0505 	orr.w	r5, fp, r5
90022fb8:	fb0c 1102 	mla	r1, ip, r2, r1
90022fbc:	fb0e 1e05 	mla	lr, lr, r5, r1
90022fc0:	ea4f 525e 	mov.w	r2, lr, lsr #21
90022fc4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90022fc8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022fcc:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90022fd0:	ea42 0e0e 	orr.w	lr, r2, lr
90022fd4:	fa1f f28e 	uxth.w	r2, lr
90022fd8:	2bff      	cmp	r3, #255	@ 0xff
90022fda:	f040 80a1 	bne.w	90023120 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90022fde:	803a      	strh	r2, [r7, #0]
90022fe0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90022fe2:	3702      	adds	r7, #2
90022fe4:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90022fe6:	4413      	add	r3, r2
90022fe8:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90022fea:	931d      	str	r3, [sp, #116]	@ 0x74
90022fec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022fee:	441a      	add	r2, r3
90022ff0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90022ff2:	3b01      	subs	r3, #1
90022ff4:	921e      	str	r2, [sp, #120]	@ 0x78
90022ff6:	930f      	str	r3, [sp, #60]	@ 0x3c
90022ff8:	e6c7      	b.n	90022d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90022ffa:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90022ffc:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90022ffe:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
90023000:	4433      	add	r3, r6
90023002:	931d      	str	r3, [sp, #116]	@ 0x74
90023004:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023006:	441c      	add	r4, r3
90023008:	9b06      	ldr	r3, [sp, #24]
9002300a:	3b01      	subs	r3, #1
9002300c:	941e      	str	r4, [sp, #120]	@ 0x78
9002300e:	9306      	str	r3, [sp, #24]
90023010:	9b07      	ldr	r3, [sp, #28]
90023012:	3302      	adds	r3, #2
90023014:	9307      	str	r3, [sp, #28]
90023016:	e696      	b.n	90022d46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90023018:	d028      	beq.n	9002306c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002301a:	9b06      	ldr	r3, [sp, #24]
9002301c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
9002301e:	3b01      	subs	r3, #1
90023020:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90023022:	fb00 5003 	mla	r0, r0, r3, r5
90023026:	1400      	asrs	r0, r0, #16
90023028:	f53f aeaa 	bmi.w	90022d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002302c:	3901      	subs	r1, #1
9002302e:	4288      	cmp	r0, r1
90023030:	f6bf aea6 	bge.w	90022d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023034:	9920      	ldr	r1, [sp, #128]	@ 0x80
90023036:	981e      	ldr	r0, [sp, #120]	@ 0x78
90023038:	fb01 0303 	mla	r3, r1, r3, r0
9002303c:	141b      	asrs	r3, r3, #16
9002303e:	f53f ae9f 	bmi.w	90022d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023042:	3a01      	subs	r2, #1
90023044:	4293      	cmp	r3, r2
90023046:	f6bf ae9b 	bge.w	90022d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002304a:	9b06      	ldr	r3, [sp, #24]
9002304c:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90023050:	f8dd e01c 	ldr.w	lr, [sp, #28]
90023054:	930f      	str	r3, [sp, #60]	@ 0x3c
90023056:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90023058:	2b00      	cmp	r3, #0
9002305a:	f300 80b6 	bgt.w	900231ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
9002305e:	9b06      	ldr	r3, [sp, #24]
90023060:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023064:	9b07      	ldr	r3, [sp, #28]
90023066:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002306a:	9307      	str	r3, [sp, #28]
9002306c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002306e:	2b00      	cmp	r3, #0
90023070:	f340 8218 	ble.w	900234a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90023074:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90023078:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002307a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002307e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023082:	eef0 6a62 	vmov.f32	s13, s5
90023086:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002308a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002308e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023092:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
90023096:	eef0 6a43 	vmov.f32	s13, s6
9002309a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002309e:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
900230a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900230a6:	ee61 7a27 	vmul.f32	s15, s2, s15
900230aa:	ee77 2a62 	vsub.f32	s5, s14, s5
900230ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
900230b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900230b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900230ba:	ee12 2a90 	vmov	r2, s5
900230be:	eef0 2a47 	vmov.f32	s5, s14
900230c2:	fb92 f3f3 	sdiv	r3, r2, r3
900230c6:	ee13 2a10 	vmov	r2, s6
900230ca:	931f      	str	r3, [sp, #124]	@ 0x7c
900230cc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900230ce:	eeb0 3a67 	vmov.f32	s6, s15
900230d2:	fb92 f3f3 	sdiv	r3, r2, r3
900230d6:	9320      	str	r3, [sp, #128]	@ 0x80
900230d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900230da:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900230dc:	3b01      	subs	r3, #1
900230de:	930e      	str	r3, [sp, #56]	@ 0x38
900230e0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900230e2:	bf08      	it	eq
900230e4:	4613      	moveq	r3, r2
900230e6:	9306      	str	r3, [sp, #24]
900230e8:	e61f      	b.n	90022d2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
900230ea:	fb08 f505 	mul.w	r5, r8, r5
900230ee:	fb09 5303 	mla	r3, r9, r3, r5
900230f2:	e69f      	b.n	90022e34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
900230f4:	4681      	mov	r9, r0
900230f6:	e6c6      	b.n	90022e86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
900230f8:	f1c1 0210 	rsb	r2, r1, #16
900230fc:	4341      	muls	r1, r0
900230fe:	fb09 1902 	mla	r9, r9, r2, r1
90023102:	ea4f 0949 	mov.w	r9, r9, lsl #1
90023106:	ea4f 5259 	mov.w	r2, r9, lsr #21
9002310a:	ea4f 1959 	mov.w	r9, r9, lsr #5
9002310e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023112:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90023116:	ea42 0909 	orr.w	r9, r2, r9
9002311a:	fa1f f289 	uxth.w	r2, r9
9002311e:	e75b      	b.n	90022fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90023120:	f8b7 c000 	ldrh.w	ip, [r7]
90023124:	43db      	mvns	r3, r3
90023126:	ea4f 202c 	mov.w	r0, ip, asr #8
9002312a:	fa5f fe83 	uxtb.w	lr, r3
9002312e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90023132:	ea4f 05ec 	mov.w	r5, ip, asr #3
90023136:	ea4f 03cc 	mov.w	r3, ip, lsl #3
9002313a:	fb00 f00e 	mul.w	r0, r0, lr
9002313e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90023142:	b2db      	uxtb	r3, r3
90023144:	1c41      	adds	r1, r0, #1
90023146:	fb05 f50e 	mul.w	r5, r5, lr
9002314a:	fb03 f30e 	mul.w	r3, r3, lr
9002314e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90023152:	1211      	asrs	r1, r2, #8
90023154:	f021 0107 	bic.w	r1, r1, #7
90023158:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002315c:	48d3      	ldr	r0, [pc, #844]	@ (900234ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
9002315e:	b2c9      	uxtb	r1, r1
90023160:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90023164:	1c69      	adds	r1, r5, #1
90023166:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9002316a:	10d1      	asrs	r1, r2, #3
9002316c:	00d2      	lsls	r2, r2, #3
9002316e:	f021 0103 	bic.w	r1, r1, #3
90023172:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90023176:	00c9      	lsls	r1, r1, #3
90023178:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002317c:	4301      	orrs	r1, r0
9002317e:	1c58      	adds	r0, r3, #1
90023180:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90023184:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90023188:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002318c:	430a      	orrs	r2, r1
9002318e:	e726      	b.n	90022fde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90023190:	f115 0e01 	adds.w	lr, r5, #1
90023194:	f53f af24 	bmi.w	90022fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023198:	4572      	cmp	r2, lr
9002319a:	f6ff af21 	blt.w	90022fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002319e:	f110 0e01 	adds.w	lr, r0, #1
900231a2:	f53f af1d 	bmi.w	90022fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900231a6:	4573      	cmp	r3, lr
900231a8:	f6ff af1a 	blt.w	90022fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900231ac:	b21b      	sxth	r3, r3
900231ae:	b212      	sxth	r2, r2
900231b0:	9301      	str	r3, [sp, #4]
900231b2:	9200      	str	r2, [sp, #0]
900231b4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
900231b8:	e9cd 5002 	strd	r5, r0, [sp, #8]
900231bc:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
900231c0:	4639      	mov	r1, r7
900231c2:	9811      	ldr	r0, [sp, #68]	@ 0x44
900231c4:	f7ff fc22 	bl	90022a0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900231c8:	e70a      	b.n	90022fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900231ca:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900231cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
900231d0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900231d2:	f3c3 3503 	ubfx	r5, r3, #12, #4
900231d6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900231d8:	fa1f fc82 	uxth.w	ip, r2
900231dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900231e0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900231e2:	ea4f 100c 	mov.w	r0, ip, lsl #4
900231e6:	141f      	asrs	r7, r3, #16
900231e8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900231ea:	141b      	asrs	r3, r3, #16
900231ec:	fb01 3707 	mla	r7, r1, r7, r3
900231f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900231f2:	eb03 0a07 	add.w	sl, r3, r7
900231f6:	f813 9007 	ldrb.w	r9, [r3, r7]
900231fa:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
900231fe:	f89a 8001 	ldrb.w	r8, [sl, #1]
90023202:	b29b      	uxth	r3, r3
90023204:	2d00      	cmp	r5, #0
90023206:	f000 80fe 	beq.w	90023406 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
9002320a:	f81a 4001 	ldrb.w	r4, [sl, r1]
9002320e:	eb0a 0b01 	add.w	fp, sl, r1
90023212:	fa1f fa85 	uxth.w	sl, r5
90023216:	940c      	str	r4, [sp, #48]	@ 0x30
90023218:	fb0a fc0c 	mul.w	ip, sl, ip
9002321c:	f89b 4001 	ldrb.w	r4, [fp, #1]
90023220:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90023224:	eba0 000c 	sub.w	r0, r0, ip
90023228:	940d      	str	r4, [sp, #52]	@ 0x34
9002322a:	fa1f fa8a 	uxth.w	sl, sl
9002322e:	b280      	uxth	r0, r0
90023230:	eba3 030a 	sub.w	r3, r3, sl
90023234:	fb08 f000 	mul.w	r0, r8, r0
90023238:	b29b      	uxth	r3, r3
9002323a:	fb09 0303 	mla	r3, r9, r3, r0
9002323e:	980c      	ldr	r0, [sp, #48]	@ 0x30
90023240:	fb0a 3300 	mla	r3, sl, r0, r3
90023244:	fb0c 3304 	mla	r3, ip, r4, r3
90023248:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002324c:	2b00      	cmp	r3, #0
9002324e:	f000 80cc 	beq.w	900233ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90023252:	9808      	ldr	r0, [sp, #32]
90023254:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90023258:	9c08      	ldr	r4, [sp, #32]
9002325a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
9002325e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90023262:	f000 80d5 	beq.w	90023410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90023266:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
9002326a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002326e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90023272:	fb0a fc0c 	mul.w	ip, sl, ip
90023276:	fb09 f707 	mul.w	r7, r9, r7
9002327a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
9002327e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90023282:	f107 0b20 	add.w	fp, r7, #32
90023286:	44cc      	add	ip, r9
90023288:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
9002328c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90023290:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023294:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90023298:	ea4c 0909 	orr.w	r9, ip, r9
9002329c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900232a0:	8847      	ldrh	r7, [r0, #2]
900232a2:	d019      	beq.n	900232d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
900232a4:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900232a8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900232ac:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900232b0:	fb0a fc0c 	mul.w	ip, sl, ip
900232b4:	fb08 f807 	mul.w	r8, r8, r7
900232b8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
900232bc:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
900232c0:	f108 0b20 	add.w	fp, r8, #32
900232c4:	44bc      	add	ip, r7
900232c6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
900232ca:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900232ce:	0a3f      	lsrs	r7, r7, #8
900232d0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900232d4:	ea4c 0707 	orr.w	r7, ip, r7
900232d8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
900232dc:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900232e0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
900232e4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
900232e8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900232ec:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900232f0:	ea4c 0909 	orr.w	r9, ip, r9
900232f4:	ea4a 0707 	orr.w	r7, sl, r7
900232f8:	2d00      	cmp	r5, #0
900232fa:	f000 808b 	beq.w	90023414 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
900232fe:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90023302:	3901      	subs	r1, #1
90023304:	0049      	lsls	r1, r1, #1
90023306:	3102      	adds	r1, #2
90023308:	eb00 0c01 	add.w	ip, r0, r1
9002330c:	5a41      	ldrh	r1, [r0, r1]
9002330e:	980c      	ldr	r0, [sp, #48]	@ 0x30
90023310:	28ff      	cmp	r0, #255	@ 0xff
90023312:	d019      	beq.n	90023348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90023314:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90023318:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
9002331a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002331e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023322:	fb04 fa01 	mul.w	sl, r4, r1
90023326:	fb08 f800 	mul.w	r8, r8, r0
9002332a:	f10a 0020 	add.w	r0, sl, #32
9002332e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90023332:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023336:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9002333a:	4441      	add	r1, r8
9002333c:	0a00      	lsrs	r0, r0, #8
9002333e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90023342:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023346:	4301      	orrs	r1, r0
90023348:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002334a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
9002334e:	2cff      	cmp	r4, #255	@ 0xff
90023350:	d01a      	beq.n	90023388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90023352:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90023356:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002335a:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002335e:	fb04 fa00 	mul.w	sl, r4, r0
90023362:	fb08 f80c 	mul.w	r8, r8, ip
90023366:	f10a 0c20 	add.w	ip, sl, #32
9002336a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
9002336e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023372:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90023376:	4440      	add	r0, r8
90023378:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002337c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90023380:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90023384:	ea40 000c 	orr.w	r0, r0, ip
90023388:	fb15 fc02 	smulbb	ip, r5, r2
9002338c:	f1c5 0810 	rsb	r8, r5, #16
90023390:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90023394:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90023398:	ea4f 0cec 	mov.w	ip, ip, asr #3
9002339c:	eba8 0802 	sub.w	r8, r8, r2
900233a0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900233a4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900233a8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
900233ac:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900233b0:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
900233b4:	ea4a 0101 	orr.w	r1, sl, r1
900233b8:	437a      	muls	r2, r7
900233ba:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
900233be:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900233c2:	fb09 2208 	mla	r2, r9, r8, r2
900233c6:	ea4b 0000 	orr.w	r0, fp, r0
900233ca:	fb05 2201 	mla	r2, r5, r1, r2
900233ce:	fb0c 2200 	mla	r2, ip, r0, r2
900233d2:	0d57      	lsrs	r7, r2, #21
900233d4:	0952      	lsrs	r2, r2, #5
900233d6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900233da:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900233de:	433a      	orrs	r2, r7
900233e0:	2bff      	cmp	r3, #255	@ 0xff
900233e2:	b292      	uxth	r2, r2
900233e4:	d127      	bne.n	90023436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
900233e6:	f8ae 2000 	strh.w	r2, [lr]
900233ea:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900233ec:	f10e 0e02 	add.w	lr, lr, #2
900233f0:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
900233f2:	4413      	add	r3, r2
900233f4:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
900233f6:	931d      	str	r3, [sp, #116]	@ 0x74
900233f8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900233fa:	441a      	add	r2, r3
900233fc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900233fe:	3b01      	subs	r3, #1
90023400:	921e      	str	r2, [sp, #120]	@ 0x78
90023402:	930f      	str	r3, [sp, #60]	@ 0x3c
90023404:	e627      	b.n	90023056 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90023406:	fb08 f000 	mul.w	r0, r8, r0
9002340a:	fb09 0303 	mla	r3, r9, r3, r0
9002340e:	e71b      	b.n	90023248 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90023410:	46b9      	mov	r9, r7
90023412:	e743      	b.n	9002329c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90023414:	f1c2 0110 	rsb	r1, r2, #16
90023418:	437a      	muls	r2, r7
9002341a:	fb09 2901 	mla	r9, r9, r1, r2
9002341e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90023422:	ea4f 5059 	mov.w	r0, r9, lsr #21
90023426:	ea4f 1259 	mov.w	r2, r9, lsr #5
9002342a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002342e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023432:	4302      	orrs	r2, r0
90023434:	e7d4      	b.n	900233e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90023436:	f8be 7000 	ldrh.w	r7, [lr]
9002343a:	43db      	mvns	r3, r3
9002343c:	4c1b      	ldr	r4, [pc, #108]	@ (900234ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
9002343e:	1238      	asrs	r0, r7, #8
90023440:	fa5f fc83 	uxtb.w	ip, r3
90023444:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90023448:	10fd      	asrs	r5, r7, #3
9002344a:	00fb      	lsls	r3, r7, #3
9002344c:	fb00 f00c 	mul.w	r0, r0, ip
90023450:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90023454:	b2db      	uxtb	r3, r3
90023456:	fb05 f10c 	mul.w	r1, r5, ip
9002345a:	1c45      	adds	r5, r0, #1
9002345c:	fb03 f30c 	mul.w	r3, r3, ip
90023460:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90023464:	1215      	asrs	r5, r2, #8
90023466:	f025 0507 	bic.w	r5, r5, #7
9002346a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
9002346e:	1c4d      	adds	r5, r1, #1
90023470:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90023474:	10d1      	asrs	r1, r2, #3
90023476:	b2c0      	uxtb	r0, r0
90023478:	f021 0103 	bic.w	r1, r1, #3
9002347c:	00d2      	lsls	r2, r2, #3
9002347e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90023482:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90023486:	00c9      	lsls	r1, r1, #3
90023488:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002348c:	4308      	orrs	r0, r1
9002348e:	1c59      	adds	r1, r3, #1
90023490:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90023494:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90023498:	f3c3 03c4 	ubfx	r3, r3, #3, #5
9002349c:	4318      	orrs	r0, r3
9002349e:	f8ae 0000 	strh.w	r0, [lr]
900234a2:	e7a2      	b.n	900233ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
900234a4:	b013      	add	sp, #76	@ 0x4c
900234a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900234aa:	bf00      	nop
900234ac:	fffff800 	.word	0xfffff800

900234b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
900234b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900234b4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
900234b8:	f9bd a020 	ldrsh.w	sl, [sp, #32]
900234bc:	fb05 4c03 	mla	ip, r5, r3, r4
900234c0:	2d00      	cmp	r5, #0
900234c2:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
900234c6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900234ca:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
900234ce:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
900234d2:	8808      	ldrh	r0, [r1, #0]
900234d4:	f2c0 80a7 	blt.w	90023626 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
900234d8:	45aa      	cmp	sl, r5
900234da:	f340 80a4 	ble.w	90023626 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
900234de:	2c00      	cmp	r4, #0
900234e0:	f2c0 809f 	blt.w	90023622 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
900234e4:	42a3      	cmp	r3, r4
900234e6:	f340 809c 	ble.w	90023622 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
900234ea:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
900234ee:	1c62      	adds	r2, r4, #1
900234f0:	f100 809c 	bmi.w	9002362c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900234f4:	4293      	cmp	r3, r2
900234f6:	f340 8099 	ble.w	9002362c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900234fa:	f1b9 0f00 	cmp.w	r9, #0
900234fe:	f000 8095 	beq.w	9002362c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90023502:	f8be c002 	ldrh.w	ip, [lr, #2]
90023506:	3501      	adds	r5, #1
90023508:	f100 8094 	bmi.w	90023634 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
9002350c:	45aa      	cmp	sl, r5
9002350e:	f340 8091 	ble.w	90023634 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90023512:	2f00      	cmp	r7, #0
90023514:	f000 808e 	beq.w	90023634 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90023518:	2c00      	cmp	r4, #0
9002351a:	f2c0 8089 	blt.w	90023630 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
9002351e:	42a3      	cmp	r3, r4
90023520:	f340 8086 	ble.w	90023630 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90023524:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90023528:	3401      	adds	r4, #1
9002352a:	f100 8086 	bmi.w	9002363a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002352e:	42a3      	cmp	r3, r4
90023530:	f340 8083 	ble.w	9002363a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90023534:	f1b9 0f00 	cmp.w	r9, #0
90023538:	d07f      	beq.n	9002363a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002353a:	3301      	adds	r3, #1
9002353c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90023540:	ea4f 4408 	mov.w	r4, r8, lsl #16
90023544:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90023548:	fb19 fe07 	smulbb	lr, r9, r7
9002354c:	f1c7 0210 	rsb	r2, r7, #16
90023550:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90023554:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90023558:	eba2 0209 	sub.w	r2, r2, r9
9002355c:	ea44 0808 	orr.w	r8, r4, r8
90023560:	ea4f 440c 	mov.w	r4, ip, lsl #16
90023564:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90023568:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9002356c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90023570:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90023574:	ea44 0c0c 	orr.w	ip, r4, ip
90023578:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9002357c:	fb04 f40c 	mul.w	r4, r4, ip
90023580:	fb02 4808 	mla	r8, r2, r8, r4
90023584:	041a      	lsls	r2, r3, #16
90023586:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002358a:	b2b4      	uxth	r4, r6
9002358c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90023590:	43f6      	mvns	r6, r6
90023592:	4313      	orrs	r3, r2
90023594:	042a      	lsls	r2, r5, #16
90023596:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9002359a:	b2f6      	uxtb	r6, r6
9002359c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900235a0:	fb0e 8303 	mla	r3, lr, r3, r8
900235a4:	432a      	orrs	r2, r5
900235a6:	fb07 3202 	mla	r2, r7, r2, r3
900235aa:	10c7      	asrs	r7, r0, #3
900235ac:	0d53      	lsrs	r3, r2, #21
900235ae:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900235b2:	0952      	lsrs	r2, r2, #5
900235b4:	fb17 f706 	smulbb	r7, r7, r6
900235b8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900235bc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900235c0:	431a      	orrs	r2, r3
900235c2:	b293      	uxth	r3, r2
900235c4:	1202      	asrs	r2, r0, #8
900235c6:	121d      	asrs	r5, r3, #8
900235c8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900235cc:	00c0      	lsls	r0, r0, #3
900235ce:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900235d2:	fb12 f206 	smulbb	r2, r2, r6
900235d6:	b2c0      	uxtb	r0, r0
900235d8:	fb05 2504 	mla	r5, r5, r4, r2
900235dc:	10da      	asrs	r2, r3, #3
900235de:	fb10 f006 	smulbb	r0, r0, r6
900235e2:	00db      	lsls	r3, r3, #3
900235e4:	b2ad      	uxth	r5, r5
900235e6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900235ea:	b2db      	uxtb	r3, r3
900235ec:	fb02 7204 	mla	r2, r2, r4, r7
900235f0:	fb03 0004 	mla	r0, r3, r4, r0
900235f4:	1c6b      	adds	r3, r5, #1
900235f6:	b292      	uxth	r2, r2
900235f8:	b280      	uxth	r0, r0
900235fa:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900235fe:	1c43      	adds	r3, r0, #1
90023600:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90023604:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023608:	1c50      	adds	r0, r2, #1
9002360a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9002360e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023612:	0952      	lsrs	r2, r2, #5
90023614:	432b      	orrs	r3, r5
90023616:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002361a:	4313      	orrs	r3, r2
9002361c:	800b      	strh	r3, [r1, #0]
9002361e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90023622:	4680      	mov	r8, r0
90023624:	e763      	b.n	900234ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90023626:	4684      	mov	ip, r0
90023628:	4680      	mov	r8, r0
9002362a:	e76c      	b.n	90023506 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
9002362c:	4684      	mov	ip, r0
9002362e:	e76a      	b.n	90023506 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90023630:	4605      	mov	r5, r0
90023632:	e779      	b.n	90023528 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90023634:	4603      	mov	r3, r0
90023636:	4605      	mov	r5, r0
90023638:	e782      	b.n	90023540 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
9002363a:	4603      	mov	r3, r0
9002363c:	e780      	b.n	90023540 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

9002363e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002363e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023642:	b093      	sub	sp, #76	@ 0x4c
90023644:	461d      	mov	r5, r3
90023646:	9210      	str	r2, [sp, #64]	@ 0x40
90023648:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002364a:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
9002364e:	910a      	str	r1, [sp, #40]	@ 0x28
90023650:	920b      	str	r2, [sp, #44]	@ 0x2c
90023652:	6859      	ldr	r1, [r3, #4]
90023654:	681b      	ldr	r3, [r3, #0]
90023656:	9011      	str	r0, [sp, #68]	@ 0x44
90023658:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
9002365c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90023660:	fb01 2707 	mla	r7, r1, r7, r2
90023664:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90023668:	9307      	str	r3, [sp, #28]
9002366a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002366c:	681b      	ldr	r3, [r3, #0]
9002366e:	9309      	str	r3, [sp, #36]	@ 0x24
90023670:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023672:	43db      	mvns	r3, r3
90023674:	b2db      	uxtb	r3, r3
90023676:	9308      	str	r3, [sp, #32]
90023678:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002367a:	2b00      	cmp	r3, #0
9002367c:	dc03      	bgt.n	90023686 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002367e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90023680:	2b00      	cmp	r3, #0
90023682:	f340 8205 	ble.w	90023a90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023686:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023688:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002368c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023690:	1e48      	subs	r0, r1, #1
90023692:	f102 3cff 	add.w	ip, r2, #4294967295
90023696:	2d00      	cmp	r5, #0
90023698:	f340 80da 	ble.w	90023850 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
9002369c:	ea5f 4e24 	movs.w	lr, r4, asr #16
900236a0:	ea4f 4326 	mov.w	r3, r6, asr #16
900236a4:	d406      	bmi.n	900236b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900236a6:	4586      	cmp	lr, r0
900236a8:	da04      	bge.n	900236b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900236aa:	2b00      	cmp	r3, #0
900236ac:	db02      	blt.n	900236b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900236ae:	4563      	cmp	r3, ip
900236b0:	f2c0 80cf 	blt.w	90023852 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900236b4:	f11e 0e01 	adds.w	lr, lr, #1
900236b8:	f100 80c1 	bmi.w	9002383e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900236bc:	4571      	cmp	r1, lr
900236be:	f2c0 80be 	blt.w	9002383e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900236c2:	3301      	adds	r3, #1
900236c4:	f100 80bb 	bmi.w	9002383e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900236c8:	429a      	cmp	r2, r3
900236ca:	f2c0 80b8 	blt.w	9002383e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900236ce:	46a9      	mov	r9, r5
900236d0:	f8dd 801c 	ldr.w	r8, [sp, #28]
900236d4:	f1b9 0f00 	cmp.w	r9, #0
900236d8:	f340 80d8 	ble.w	9002388c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
900236dc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900236de:	1421      	asrs	r1, r4, #16
900236e0:	ea4f 4026 	mov.w	r0, r6, asr #16
900236e4:	f3c4 3203 	ubfx	r2, r4, #12, #4
900236e8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900236ec:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
900236f0:	f100 8112 	bmi.w	90023918 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900236f4:	f10e 3aff 	add.w	sl, lr, #4294967295
900236f8:	4551      	cmp	r1, sl
900236fa:	f280 810d 	bge.w	90023918 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900236fe:	2800      	cmp	r0, #0
90023700:	f2c0 810a 	blt.w	90023918 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90023704:	f103 3aff 	add.w	sl, r3, #4294967295
90023708:	4550      	cmp	r0, sl
9002370a:	f280 8105 	bge.w	90023918 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002370e:	fa0f f38e 	sxth.w	r3, lr
90023712:	fb00 1103 	mla	r1, r0, r3, r1
90023716:	9809      	ldr	r0, [sp, #36]	@ 0x24
90023718:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
9002371c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90023720:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90023724:	f1bc 0f00 	cmp.w	ip, #0
90023728:	d007      	beq.n	9002373a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
9002372a:	005b      	lsls	r3, r3, #1
9002372c:	eb0a 0003 	add.w	r0, sl, r3
90023730:	f83a 3003 	ldrh.w	r3, [sl, r3]
90023734:	930c      	str	r3, [sp, #48]	@ 0x30
90023736:	8843      	ldrh	r3, [r0, #2]
90023738:	930d      	str	r3, [sp, #52]	@ 0x34
9002373a:	ea4f 400e 	mov.w	r0, lr, lsl #16
9002373e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90023742:	fb12 f30c 	smulbb	r3, r2, ip
90023746:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9002374a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002374e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90023752:	10db      	asrs	r3, r3, #3
90023754:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023758:	ea40 000e 	orr.w	r0, r0, lr
9002375c:	f1cc 0e10 	rsb	lr, ip, #16
90023760:	ea4a 0101 	orr.w	r1, sl, r1
90023764:	9f08      	ldr	r7, [sp, #32]
90023766:	ebae 0e02 	sub.w	lr, lr, r2
9002376a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
9002376e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90023772:	4351      	muls	r1, r2
90023774:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90023776:	fb0e 1e00 	mla	lr, lr, r0, r1
9002377a:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002377c:	0410      	lsls	r0, r2, #16
9002377e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023782:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90023786:	4310      	orrs	r0, r2
90023788:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002378a:	0412      	lsls	r2, r2, #16
9002378c:	fb03 e000 	mla	r0, r3, r0, lr
90023790:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
90023794:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90023798:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002379c:	ea42 020e 	orr.w	r2, r2, lr
900237a0:	fb03 0302 	mla	r3, r3, r2, r0
900237a4:	f8b8 0000 	ldrh.w	r0, [r8]
900237a8:	0d5a      	lsrs	r2, r3, #21
900237aa:	095b      	lsrs	r3, r3, #5
900237ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900237b0:	1201      	asrs	r1, r0, #8
900237b2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900237b6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900237ba:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900237be:	00c0      	lsls	r0, r0, #3
900237c0:	4313      	orrs	r3, r2
900237c2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900237c6:	fb11 f107 	smulbb	r1, r1, r7
900237ca:	b2c0      	uxtb	r0, r0
900237cc:	b29b      	uxth	r3, r3
900237ce:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
900237d2:	fb10 f007 	smulbb	r0, r0, r7
900237d6:	fb1e fe07 	smulbb	lr, lr, r7
900237da:	ea4f 2c23 	mov.w	ip, r3, asr #8
900237de:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900237e2:	fb0c 1c02 	mla	ip, ip, r2, r1
900237e6:	10d9      	asrs	r1, r3, #3
900237e8:	00db      	lsls	r3, r3, #3
900237ea:	fa1f fc8c 	uxth.w	ip, ip
900237ee:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900237f2:	b2db      	uxtb	r3, r3
900237f4:	fb01 e102 	mla	r1, r1, r2, lr
900237f8:	fb03 0302 	mla	r3, r3, r2, r0
900237fc:	b289      	uxth	r1, r1
900237fe:	b29a      	uxth	r2, r3
90023800:	f10c 0301 	add.w	r3, ip, #1
90023804:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90023808:	1c53      	adds	r3, r2, #1
9002380a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002380e:	1c4a      	adds	r2, r1, #1
90023810:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90023814:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023818:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002381c:	0949      	lsrs	r1, r1, #5
9002381e:	ea43 030c 	orr.w	r3, r3, ip
90023822:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023826:	430b      	orrs	r3, r1
90023828:	f8a8 3000 	strh.w	r3, [r8]
9002382c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002382e:	f108 0802 	add.w	r8, r8, #2
90023832:	f109 39ff 	add.w	r9, r9, #4294967295
90023836:	441c      	add	r4, r3
90023838:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002383a:	441e      	add	r6, r3
9002383c:	e74a      	b.n	900236d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9002383e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90023840:	3d01      	subs	r5, #1
90023842:	441c      	add	r4, r3
90023844:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023846:	441e      	add	r6, r3
90023848:	9b07      	ldr	r3, [sp, #28]
9002384a:	3302      	adds	r3, #2
9002384c:	9307      	str	r3, [sp, #28]
9002384e:	e722      	b.n	90023696 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90023850:	d022      	beq.n	90023898 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90023852:	1e6b      	subs	r3, r5, #1
90023854:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90023856:	fb00 4003 	mla	r0, r0, r3, r4
9002385a:	1400      	asrs	r0, r0, #16
9002385c:	f53f af37 	bmi.w	900236ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023860:	3901      	subs	r1, #1
90023862:	4288      	cmp	r0, r1
90023864:	f6bf af33 	bge.w	900236ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023868:	9920      	ldr	r1, [sp, #128]	@ 0x80
9002386a:	fb01 6303 	mla	r3, r1, r3, r6
9002386e:	141b      	asrs	r3, r3, #16
90023870:	f53f af2d 	bmi.w	900236ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023874:	3a01      	subs	r2, #1
90023876:	4293      	cmp	r3, r2
90023878:	f6bf af29 	bge.w	900236ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002387c:	46a8      	mov	r8, r5
9002387e:	f8dd 901c 	ldr.w	r9, [sp, #28]
90023882:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90023886:	f1b8 0f00 	cmp.w	r8, #0
9002388a:	dc60      	bgt.n	9002394e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
9002388c:	9b07      	ldr	r3, [sp, #28]
9002388e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90023892:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90023896:	9307      	str	r3, [sp, #28]
90023898:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002389a:	2b00      	cmp	r3, #0
9002389c:	f340 80f8 	ble.w	90023a90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900238a0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900238a4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900238a6:	ee30 0a04 	vadd.f32	s0, s0, s8
900238aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
900238ae:	eef0 6a62 	vmov.f32	s13, s5
900238b2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900238b6:	ee31 1a05 	vadd.f32	s2, s2, s10
900238ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900238be:	ee16 4a90 	vmov	r4, s13
900238c2:	eef0 6a43 	vmov.f32	s13, s6
900238c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900238ca:	ee16 6a90 	vmov	r6, s13
900238ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
900238d2:	ee61 7a27 	vmul.f32	s15, s2, s15
900238d6:	ee77 2a62 	vsub.f32	s5, s14, s5
900238da:	ee37 3ac3 	vsub.f32	s6, s15, s6
900238de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900238e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900238e6:	ee12 2a90 	vmov	r2, s5
900238ea:	eef0 2a47 	vmov.f32	s5, s14
900238ee:	fb92 f3f3 	sdiv	r3, r2, r3
900238f2:	ee13 2a10 	vmov	r2, s6
900238f6:	931f      	str	r3, [sp, #124]	@ 0x7c
900238f8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900238fa:	eeb0 3a67 	vmov.f32	s6, s15
900238fe:	fb92 f3f3 	sdiv	r3, r2, r3
90023902:	9320      	str	r3, [sp, #128]	@ 0x80
90023904:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023906:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90023908:	3b01      	subs	r3, #1
9002390a:	930a      	str	r3, [sp, #40]	@ 0x28
9002390c:	bf08      	it	eq
9002390e:	4615      	moveq	r5, r2
90023910:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023912:	bf18      	it	ne
90023914:	461d      	movne	r5, r3
90023916:	e6af      	b.n	90023678 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90023918:	f111 0a01 	adds.w	sl, r1, #1
9002391c:	d486      	bmi.n	9002382c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002391e:	45d6      	cmp	lr, sl
90023920:	db84      	blt.n	9002382c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90023922:	f110 0a01 	adds.w	sl, r0, #1
90023926:	d481      	bmi.n	9002382c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90023928:	4553      	cmp	r3, sl
9002392a:	f6ff af7f 	blt.w	9002382c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002392e:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
90023930:	b21b      	sxth	r3, r3
90023932:	9101      	str	r1, [sp, #4]
90023934:	4641      	mov	r1, r8
90023936:	9300      	str	r3, [sp, #0]
90023938:	fa0f f38e 	sxth.w	r3, lr
9002393c:	e9cd 0202 	strd	r0, r2, [sp, #8]
90023940:	e9cd c704 	strd	ip, r7, [sp, #16]
90023944:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90023946:	9811      	ldr	r0, [sp, #68]	@ 0x44
90023948:	f7ff fdb2 	bl	900234b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
9002394c:	e76e      	b.n	9002382c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002394e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023950:	1430      	asrs	r0, r6, #16
90023952:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90023954:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90023958:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002395c:	1423      	asrs	r3, r4, #16
9002395e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90023962:	fb01 3000 	mla	r0, r1, r0, r3
90023966:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023968:	eb03 0340 	add.w	r3, r3, r0, lsl #1
9002396c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90023970:	8858      	ldrh	r0, [r3, #2]
90023972:	f1be 0f00 	cmp.w	lr, #0
90023976:	d00b      	beq.n	90023990 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90023978:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
9002397c:	3901      	subs	r1, #1
9002397e:	0049      	lsls	r1, r1, #1
90023980:	3102      	adds	r1, #2
90023982:	eb03 0b01 	add.w	fp, r3, r1
90023986:	5a5b      	ldrh	r3, [r3, r1]
90023988:	930e      	str	r3, [sp, #56]	@ 0x38
9002398a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9002398e:	930f      	str	r3, [sp, #60]	@ 0x3c
90023990:	ea4f 410c 	mov.w	r1, ip, lsl #16
90023994:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90023998:	fb12 f30e 	smulbb	r3, r2, lr
9002399c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900239a0:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
900239a4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900239a8:	10db      	asrs	r3, r3, #3
900239aa:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900239ae:	ea41 010c 	orr.w	r1, r1, ip
900239b2:	f1ce 0c10 	rsb	ip, lr, #16
900239b6:	ea4b 0000 	orr.w	r0, fp, r0
900239ba:	9f08      	ldr	r7, [sp, #32]
900239bc:	ebac 0c02 	sub.w	ip, ip, r2
900239c0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900239c4:	f108 38ff 	add.w	r8, r8, #4294967295
900239c8:	4350      	muls	r0, r2
900239ca:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900239ce:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900239d0:	fb0c 0c01 	mla	ip, ip, r1, r0
900239d4:	980e      	ldr	r0, [sp, #56]	@ 0x38
900239d6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
900239da:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
900239de:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900239e0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900239e4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900239e8:	0412      	lsls	r2, r2, #16
900239ea:	ea4b 0101 	orr.w	r1, fp, r1
900239ee:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900239f2:	fb03 c101 	mla	r1, r3, r1, ip
900239f6:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
900239fa:	4302      	orrs	r2, r0
900239fc:	fb03 1202 	mla	r2, r3, r2, r1
90023a00:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90023a04:	0952      	lsrs	r2, r2, #5
90023a06:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90023a0a:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
90023a0e:	f8b9 2000 	ldrh.w	r2, [r9]
90023a12:	ea4b 0303 	orr.w	r3, fp, r3
90023a16:	1211      	asrs	r1, r2, #8
90023a18:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90023a1c:	b29b      	uxth	r3, r3
90023a1e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90023a22:	00d2      	lsls	r2, r2, #3
90023a24:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90023a28:	fb11 f107 	smulbb	r1, r1, r7
90023a2c:	1218      	asrs	r0, r3, #8
90023a2e:	fb1c fc07 	smulbb	ip, ip, r7
90023a32:	b2d2      	uxtb	r2, r2
90023a34:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90023a38:	fb12 f207 	smulbb	r2, r2, r7
90023a3c:	fb00 100a 	mla	r0, r0, sl, r1
90023a40:	10d9      	asrs	r1, r3, #3
90023a42:	00db      	lsls	r3, r3, #3
90023a44:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90023a48:	b280      	uxth	r0, r0
90023a4a:	b2db      	uxtb	r3, r3
90023a4c:	fb01 c10a 	mla	r1, r1, sl, ip
90023a50:	fb03 230a 	mla	r3, r3, sl, r2
90023a54:	1c42      	adds	r2, r0, #1
90023a56:	b289      	uxth	r1, r1
90023a58:	b29b      	uxth	r3, r3
90023a5a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90023a5e:	f101 0c01 	add.w	ip, r1, #1
90023a62:	1c5a      	adds	r2, r3, #1
90023a64:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90023a68:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90023a6c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90023a70:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90023a72:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90023a76:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90023a7a:	441c      	add	r4, r3
90023a7c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90023a80:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023a82:	4310      	orrs	r0, r2
90023a84:	441e      	add	r6, r3
90023a86:	ea40 000c 	orr.w	r0, r0, ip
90023a8a:	f829 0b02 	strh.w	r0, [r9], #2
90023a8e:	e6fa      	b.n	90023886 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90023a90:	b013      	add	sp, #76	@ 0x4c
90023a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023a96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90023a96:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90023a9a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90023a9e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90023aa2:	fb0e 4703 	mla	r7, lr, r3, r4
90023aa6:	f1be 0f00 	cmp.w	lr, #0
90023aaa:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
90023aae:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
90023ab2:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90023ab6:	8808      	ldrh	r0, [r1, #0]
90023ab8:	db60      	blt.n	90023b7c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90023aba:	45f1      	cmp	r9, lr
90023abc:	dd5e      	ble.n	90023b7c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90023abe:	2c00      	cmp	r4, #0
90023ac0:	db5a      	blt.n	90023b78 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90023ac2:	42a3      	cmp	r3, r4
90023ac4:	dd58      	ble.n	90023b78 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90023ac6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90023aca:	1c62      	adds	r2, r4, #1
90023acc:	d459      	bmi.n	90023b82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90023ace:	4293      	cmp	r3, r2
90023ad0:	dd57      	ble.n	90023b82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90023ad2:	2d00      	cmp	r5, #0
90023ad4:	d055      	beq.n	90023b82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90023ad6:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90023ada:	f11e 0e01 	adds.w	lr, lr, #1
90023ade:	d454      	bmi.n	90023b8a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90023ae0:	45f1      	cmp	r9, lr
90023ae2:	dd52      	ble.n	90023b8a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90023ae4:	2e00      	cmp	r6, #0
90023ae6:	d050      	beq.n	90023b8a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90023ae8:	2c00      	cmp	r4, #0
90023aea:	db4c      	blt.n	90023b86 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90023aec:	42a3      	cmp	r3, r4
90023aee:	dd4a      	ble.n	90023b86 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90023af0:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90023af4:	3401      	adds	r4, #1
90023af6:	d405      	bmi.n	90023b04 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90023af8:	42a3      	cmp	r3, r4
90023afa:	dd03      	ble.n	90023b04 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90023afc:	b115      	cbz	r5, 90023b04 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90023afe:	3301      	adds	r3, #1
90023b00:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90023b04:	fb15 f406 	smulbb	r4, r5, r6
90023b08:	ea4f 430c 	mov.w	r3, ip, lsl #16
90023b0c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90023b10:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90023b14:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023b18:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90023b1c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90023b20:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90023b24:	ea43 0c0c 	orr.w	ip, r3, ip
90023b28:	f1c6 0310 	rsb	r3, r6, #16
90023b2c:	ea4e 0707 	orr.w	r7, lr, r7
90023b30:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90023b34:	1b5b      	subs	r3, r3, r5
90023b36:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90023b3a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90023b3e:	437d      	muls	r5, r7
90023b40:	fb03 5c0c 	mla	ip, r3, ip, r5
90023b44:	0403      	lsls	r3, r0, #16
90023b46:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023b4a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023b4e:	4318      	orrs	r0, r3
90023b50:	0413      	lsls	r3, r2, #16
90023b52:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023b56:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023b5a:	fb04 c000 	mla	r0, r4, r0, ip
90023b5e:	4313      	orrs	r3, r2
90023b60:	fb06 0003 	mla	r0, r6, r3, r0
90023b64:	0d43      	lsrs	r3, r0, #21
90023b66:	0940      	lsrs	r0, r0, #5
90023b68:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023b6c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023b70:	4318      	orrs	r0, r3
90023b72:	8008      	strh	r0, [r1, #0]
90023b74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90023b78:	4684      	mov	ip, r0
90023b7a:	e7a6      	b.n	90023aca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90023b7c:	4607      	mov	r7, r0
90023b7e:	4684      	mov	ip, r0
90023b80:	e7ab      	b.n	90023ada <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90023b82:	4607      	mov	r7, r0
90023b84:	e7a9      	b.n	90023ada <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90023b86:	4602      	mov	r2, r0
90023b88:	e7b4      	b.n	90023af4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
90023b8a:	4602      	mov	r2, r0
90023b8c:	e7ba      	b.n	90023b04 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

90023b8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023b8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023b92:	b08f      	sub	sp, #60	@ 0x3c
90023b94:	461d      	mov	r5, r3
90023b96:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90023b98:	9107      	str	r1, [sp, #28]
90023b9a:	920c      	str	r2, [sp, #48]	@ 0x30
90023b9c:	6859      	ldr	r1, [r3, #4]
90023b9e:	681b      	ldr	r3, [r3, #0]
90023ba0:	900d      	str	r0, [sp, #52]	@ 0x34
90023ba2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
90023ba6:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
90023baa:	fb01 2707 	mla	r7, r1, r7, r2
90023bae:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90023bb2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023bb4:	f8d3 8000 	ldr.w	r8, [r3]
90023bb8:	9b07      	ldr	r3, [sp, #28]
90023bba:	2b00      	cmp	r3, #0
90023bbc:	dc03      	bgt.n	90023bc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90023bbe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023bc0:	2b00      	cmp	r3, #0
90023bc2:	f340 8182 	ble.w	90023eca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90023bc6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023bc8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023bcc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023bd0:	1e48      	subs	r0, r1, #1
90023bd2:	f102 3cff 	add.w	ip, r2, #4294967295
90023bd6:	2d00      	cmp	r5, #0
90023bd8:	f340 809b 	ble.w	90023d12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90023bdc:	ea5f 4e24 	movs.w	lr, r4, asr #16
90023be0:	ea4f 4326 	mov.w	r3, r6, asr #16
90023be4:	d406      	bmi.n	90023bf4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90023be6:	4586      	cmp	lr, r0
90023be8:	da04      	bge.n	90023bf4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90023bea:	2b00      	cmp	r3, #0
90023bec:	db02      	blt.n	90023bf4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90023bee:	4563      	cmp	r3, ip
90023bf0:	f2c0 8090 	blt.w	90023d14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90023bf4:	f11e 0e01 	adds.w	lr, lr, #1
90023bf8:	f100 8084 	bmi.w	90023d04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90023bfc:	4571      	cmp	r1, lr
90023bfe:	f2c0 8081 	blt.w	90023d04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90023c02:	3301      	adds	r3, #1
90023c04:	d47e      	bmi.n	90023d04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90023c06:	429a      	cmp	r2, r3
90023c08:	db7c      	blt.n	90023d04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90023c0a:	46aa      	mov	sl, r5
90023c0c:	46b9      	mov	r9, r7
90023c0e:	f1ba 0f00 	cmp.w	sl, #0
90023c12:	f340 8099 	ble.w	90023d48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90023c16:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023c18:	1421      	asrs	r1, r4, #16
90023c1a:	ea4f 4026 	mov.w	r0, r6, asr #16
90023c1e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90023c22:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90023c26:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90023c2a:	f100 80d1 	bmi.w	90023dd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90023c2e:	f10e 3bff 	add.w	fp, lr, #4294967295
90023c32:	4559      	cmp	r1, fp
90023c34:	f280 80cc 	bge.w	90023dd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90023c38:	2800      	cmp	r0, #0
90023c3a:	f2c0 80c9 	blt.w	90023dd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90023c3e:	f103 3bff 	add.w	fp, r3, #4294967295
90023c42:	4558      	cmp	r0, fp
90023c44:	f280 80c4 	bge.w	90023dd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90023c48:	fa0f fe8e 	sxth.w	lr, lr
90023c4c:	fb00 110e 	mla	r1, r0, lr, r1
90023c50:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90023c54:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90023c58:	8841      	ldrh	r1, [r0, #2]
90023c5a:	f1bc 0f00 	cmp.w	ip, #0
90023c5e:	d00b      	beq.n	90023c78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
90023c60:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
90023c64:	3b01      	subs	r3, #1
90023c66:	005b      	lsls	r3, r3, #1
90023c68:	3302      	adds	r3, #2
90023c6a:	eb00 0e03 	add.w	lr, r0, r3
90023c6e:	5ac3      	ldrh	r3, [r0, r3]
90023c70:	9308      	str	r3, [sp, #32]
90023c72:	f8be 3002 	ldrh.w	r3, [lr, #2]
90023c76:	9309      	str	r3, [sp, #36]	@ 0x24
90023c78:	ea4f 400b 	mov.w	r0, fp, lsl #16
90023c7c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90023c80:	fb12 f30c 	smulbb	r3, r2, ip
90023c84:	f1cc 0e10 	rsb	lr, ip, #16
90023c88:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90023c8c:	10db      	asrs	r3, r3, #3
90023c8e:	ebae 0e02 	sub.w	lr, lr, r2
90023c92:	ea40 000b 	orr.w	r0, r0, fp
90023c96:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90023c9a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90023c9e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90023ca2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90023ca6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90023caa:	ea4b 0101 	orr.w	r1, fp, r1
90023cae:	4351      	muls	r1, r2
90023cb0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90023cb2:	fb0e 1e00 	mla	lr, lr, r0, r1
90023cb6:	0410      	lsls	r0, r2, #16
90023cb8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023cbc:	9908      	ldr	r1, [sp, #32]
90023cbe:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90023cc2:	4310      	orrs	r0, r2
90023cc4:	9a08      	ldr	r2, [sp, #32]
90023cc6:	0412      	lsls	r2, r2, #16
90023cc8:	fb03 e000 	mla	r0, r3, r0, lr
90023ccc:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
90023cd0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90023cd4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90023cd8:	ea42 020e 	orr.w	r2, r2, lr
90023cdc:	fb03 0302 	mla	r3, r3, r2, r0
90023ce0:	0d5a      	lsrs	r2, r3, #21
90023ce2:	095b      	lsrs	r3, r3, #5
90023ce4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023ce8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023cec:	4313      	orrs	r3, r2
90023cee:	f8a9 3000 	strh.w	r3, [r9]
90023cf2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90023cf4:	f109 0902 	add.w	r9, r9, #2
90023cf8:	f10a 3aff 	add.w	sl, sl, #4294967295
90023cfc:	441c      	add	r4, r3
90023cfe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023d00:	441e      	add	r6, r3
90023d02:	e784      	b.n	90023c0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90023d04:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90023d06:	3d01      	subs	r5, #1
90023d08:	3702      	adds	r7, #2
90023d0a:	441c      	add	r4, r3
90023d0c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023d0e:	441e      	add	r6, r3
90023d10:	e761      	b.n	90023bd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90023d12:	d01d      	beq.n	90023d50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90023d14:	1e6b      	subs	r3, r5, #1
90023d16:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90023d18:	fb00 4003 	mla	r0, r0, r3, r4
90023d1c:	1400      	asrs	r0, r0, #16
90023d1e:	f53f af74 	bmi.w	90023c0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90023d22:	3901      	subs	r1, #1
90023d24:	4288      	cmp	r0, r1
90023d26:	f6bf af70 	bge.w	90023c0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90023d2a:	991c      	ldr	r1, [sp, #112]	@ 0x70
90023d2c:	fb01 6303 	mla	r3, r1, r3, r6
90023d30:	141b      	asrs	r3, r3, #16
90023d32:	f53f af6a 	bmi.w	90023c0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90023d36:	3a01      	subs	r2, #1
90023d38:	4293      	cmp	r3, r2
90023d3a:	f6bf af66 	bge.w	90023c0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90023d3e:	46a9      	mov	r9, r5
90023d40:	46ba      	mov	sl, r7
90023d42:	f1b9 0f00 	cmp.w	r9, #0
90023d46:	dc5b      	bgt.n	90023e00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90023d48:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90023d4c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90023d50:	9b07      	ldr	r3, [sp, #28]
90023d52:	2b00      	cmp	r3, #0
90023d54:	f340 80b9 	ble.w	90023eca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90023d58:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90023d5c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90023d5e:	ee30 0a04 	vadd.f32	s0, s0, s8
90023d62:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023d66:	eef0 6a62 	vmov.f32	s13, s5
90023d6a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023d6e:	ee31 1a05 	vadd.f32	s2, s2, s10
90023d72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023d76:	ee16 4a90 	vmov	r4, s13
90023d7a:	eef0 6a43 	vmov.f32	s13, s6
90023d7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023d82:	ee16 6a90 	vmov	r6, s13
90023d86:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023d8a:	ee61 7a27 	vmul.f32	s15, s2, s15
90023d8e:	ee77 2a62 	vsub.f32	s5, s14, s5
90023d92:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023d96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023d9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023d9e:	ee12 2a90 	vmov	r2, s5
90023da2:	eef0 2a47 	vmov.f32	s5, s14
90023da6:	fb92 f3f3 	sdiv	r3, r2, r3
90023daa:	ee13 2a10 	vmov	r2, s6
90023dae:	931b      	str	r3, [sp, #108]	@ 0x6c
90023db0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90023db2:	eeb0 3a67 	vmov.f32	s6, s15
90023db6:	fb92 f3f3 	sdiv	r3, r2, r3
90023dba:	931c      	str	r3, [sp, #112]	@ 0x70
90023dbc:	9b07      	ldr	r3, [sp, #28]
90023dbe:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90023dc0:	3b01      	subs	r3, #1
90023dc2:	9307      	str	r3, [sp, #28]
90023dc4:	bf08      	it	eq
90023dc6:	4615      	moveq	r5, r2
90023dc8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90023dca:	bf18      	it	ne
90023dcc:	461d      	movne	r5, r3
90023dce:	e6f3      	b.n	90023bb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90023dd0:	f111 0b01 	adds.w	fp, r1, #1
90023dd4:	d48d      	bmi.n	90023cf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90023dd6:	45de      	cmp	lr, fp
90023dd8:	db8b      	blt.n	90023cf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90023dda:	f110 0b01 	adds.w	fp, r0, #1
90023dde:	d488      	bmi.n	90023cf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90023de0:	455b      	cmp	r3, fp
90023de2:	db86      	blt.n	90023cf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90023de4:	b21b      	sxth	r3, r3
90023de6:	e9cd 1001 	strd	r1, r0, [sp, #4]
90023dea:	e9cd 2c03 	strd	r2, ip, [sp, #12]
90023dee:	9300      	str	r3, [sp, #0]
90023df0:	4642      	mov	r2, r8
90023df2:	fa0f f38e 	sxth.w	r3, lr
90023df6:	4649      	mov	r1, r9
90023df8:	980d      	ldr	r0, [sp, #52]	@ 0x34
90023dfa:	f7ff fe4c 	bl	90023a96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
90023dfe:	e778      	b.n	90023cf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90023e00:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023e02:	1420      	asrs	r0, r4, #16
90023e04:	1431      	asrs	r1, r6, #16
90023e06:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90023e0a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90023e0e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90023e12:	fb03 0101 	mla	r1, r3, r1, r0
90023e16:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90023e1a:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
90023e1e:	8841      	ldrh	r1, [r0, #2]
90023e20:	f1be 0f00 	cmp.w	lr, #0
90023e24:	d00b      	beq.n	90023e3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90023e26:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90023e2a:	3b01      	subs	r3, #1
90023e2c:	005b      	lsls	r3, r3, #1
90023e2e:	3302      	adds	r3, #2
90023e30:	eb00 0b03 	add.w	fp, r0, r3
90023e34:	5ac3      	ldrh	r3, [r0, r3]
90023e36:	930a      	str	r3, [sp, #40]	@ 0x28
90023e38:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90023e3c:	930b      	str	r3, [sp, #44]	@ 0x2c
90023e3e:	ea4f 400c 	mov.w	r0, ip, lsl #16
90023e42:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90023e46:	fb12 f30e 	smulbb	r3, r2, lr
90023e4a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90023e4e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90023e52:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90023e56:	10db      	asrs	r3, r3, #3
90023e58:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90023e5c:	ea40 000c 	orr.w	r0, r0, ip
90023e60:	f1ce 0c10 	rsb	ip, lr, #16
90023e64:	ea4b 0101 	orr.w	r1, fp, r1
90023e68:	f109 39ff 	add.w	r9, r9, #4294967295
90023e6c:	ebac 0c02 	sub.w	ip, ip, r2
90023e70:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90023e74:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90023e78:	4351      	muls	r1, r2
90023e7a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90023e7c:	fb0c 1c00 	mla	ip, ip, r0, r1
90023e80:	990a      	ldr	r1, [sp, #40]	@ 0x28
90023e82:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90023e86:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
90023e8a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90023e8c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90023e90:	0412      	lsls	r2, r2, #16
90023e92:	ea4b 0000 	orr.w	r0, fp, r0
90023e96:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
90023e9a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90023e9e:	fb03 c000 	mla	r0, r3, r0, ip
90023ea2:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90023ea6:	ea42 0b0b 	orr.w	fp, r2, fp
90023eaa:	fb03 000b 	mla	r0, r3, fp, r0
90023eae:	0d43      	lsrs	r3, r0, #21
90023eb0:	0940      	lsrs	r0, r0, #5
90023eb2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023eb6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023eba:	4318      	orrs	r0, r3
90023ebc:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90023ebe:	441c      	add	r4, r3
90023ec0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023ec2:	f82a 0b02 	strh.w	r0, [sl], #2
90023ec6:	441e      	add	r6, r3
90023ec8:	e73b      	b.n	90023d42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90023eca:	b00f      	add	sp, #60	@ 0x3c
90023ecc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023ed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90023ed0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023ed4:	b085      	sub	sp, #20
90023ed6:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90023eda:	9102      	str	r1, [sp, #8]
90023edc:	2c00      	cmp	r4, #0
90023ede:	fb04 7103 	mla	r1, r4, r3, r7
90023ee2:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90023ee6:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90023eea:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90023eee:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90023ef2:	f2c0 811b 	blt.w	9002412c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90023ef6:	45a6      	cmp	lr, r4
90023ef8:	f340 8118 	ble.w	9002412c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90023efc:	2f00      	cmp	r7, #0
90023efe:	f2c0 8113 	blt.w	90024128 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90023f02:	42bb      	cmp	r3, r7
90023f04:	f340 8110 	ble.w	90024128 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90023f08:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90023f0c:	1c7a      	adds	r2, r7, #1
90023f0e:	f100 8110 	bmi.w	90024132 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90023f12:	4293      	cmp	r3, r2
90023f14:	f340 810d 	ble.w	90024132 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90023f18:	2e00      	cmp	r6, #0
90023f1a:	f000 810c 	beq.w	90024136 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90023f1e:	f8dc 1004 	ldr.w	r1, [ip, #4]
90023f22:	3401      	adds	r4, #1
90023f24:	f100 810b 	bmi.w	9002413e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90023f28:	45a6      	cmp	lr, r4
90023f2a:	f340 8108 	ble.w	9002413e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90023f2e:	2800      	cmp	r0, #0
90023f30:	f000 8108 	beq.w	90024144 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90023f34:	2f00      	cmp	r7, #0
90023f36:	f2c0 8100 	blt.w	9002413a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90023f3a:	42bb      	cmp	r3, r7
90023f3c:	f340 80fd 	ble.w	9002413a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90023f40:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90023f44:	3701      	adds	r7, #1
90023f46:	f100 8100 	bmi.w	9002414a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90023f4a:	42bb      	cmp	r3, r7
90023f4c:	f340 80fd 	ble.w	9002414a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90023f50:	2e00      	cmp	r6, #0
90023f52:	f000 80fc 	beq.w	9002414e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
90023f56:	3301      	adds	r3, #1
90023f58:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90023f5c:	b2b6      	uxth	r6, r6
90023f5e:	b280      	uxth	r0, r0
90023f60:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90023f64:	fb00 fe06 	mul.w	lr, r0, r6
90023f68:	0136      	lsls	r6, r6, #4
90023f6a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90023f6e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90023f72:	eba6 070e 	sub.w	r7, r6, lr
90023f76:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90023f7a:	ea4f 6914 	mov.w	r9, r4, lsr #24
90023f7e:	b280      	uxth	r0, r0
90023f80:	b2bf      	uxth	r7, r7
90023f82:	1a1b      	subs	r3, r3, r0
90023f84:	ea4f 6812 	mov.w	r8, r2, lsr #24
90023f88:	fb0a f607 	mul.w	r6, sl, r7
90023f8c:	b29b      	uxth	r3, r3
90023f8e:	fb0b 6603 	mla	r6, fp, r3, r6
90023f92:	fb00 6609 	mla	r6, r0, r9, r6
90023f96:	fb0e 6608 	mla	r6, lr, r8, r6
90023f9a:	f3c6 2607 	ubfx	r6, r6, #8, #8
90023f9e:	9600      	str	r6, [sp, #0]
90023fa0:	2e00      	cmp	r6, #0
90023fa2:	f000 80be 	beq.w	90024122 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90023fa6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90023faa:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90023fae:	9e02      	ldr	r6, [sp, #8]
90023fb0:	fb0b fc0c 	mul.w	ip, fp, ip
90023fb4:	fb0b f505 	mul.w	r5, fp, r5
90023fb8:	8836      	ldrh	r6, [r6, #0]
90023fba:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90023fbe:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90023fc2:	9501      	str	r5, [sp, #4]
90023fc4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90023fc8:	44dc      	add	ip, fp
90023fca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023fce:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90023fd2:	9503      	str	r5, [sp, #12]
90023fd4:	9d01      	ldr	r5, [sp, #4]
90023fd6:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90023fda:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90023fde:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90023fe2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90023fe6:	fb0a fc0c 	mul.w	ip, sl, ip
90023fea:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90023fee:	fb0a fa01 	mul.w	sl, sl, r1
90023ff2:	ea4f 251c 	mov.w	r5, ip, lsr #8
90023ff6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90023ffa:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90023ffe:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90024002:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90024006:	4465      	add	r5, ip
90024008:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
9002400c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90024010:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024014:	fb09 fc0c 	mul.w	ip, r9, ip
90024018:	0a2d      	lsrs	r5, r5, #8
9002401a:	fb09 f904 	mul.w	r9, r9, r4
9002401e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024022:	ea4f 211c 	mov.w	r1, ip, lsr #8
90024026:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002402a:	f509 7480 	add.w	r4, r9, #256	@ 0x100
9002402e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90024032:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90024036:	437d      	muls	r5, r7
90024038:	eb04 2919 	add.w	r9, r4, r9, lsr #8
9002403c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90024040:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90024044:	4461      	add	r1, ip
90024046:	fb08 f404 	mul.w	r4, r8, r4
9002404a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002404e:	fb08 f802 	mul.w	r8, r8, r2
90024052:	0a09      	lsrs	r1, r1, #8
90024054:	0a22      	lsrs	r2, r4, #8
90024056:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
9002405a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002405e:	fb07 f70a 	mul.w	r7, r7, sl
90024062:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90024066:	4414      	add	r4, r2
90024068:	f508 7280 	add.w	r2, r8, #256	@ 0x100
9002406c:	0a24      	lsrs	r4, r4, #8
9002406e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90024072:	9a03      	ldr	r2, [sp, #12]
90024074:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90024078:	fb02 5503 	mla	r5, r2, r3, r5
9002407c:	ea4f 2818 	mov.w	r8, r8, lsr #8
90024080:	9a00      	ldr	r2, [sp, #0]
90024082:	fb04 540e 	mla	r4, r4, lr, r5
90024086:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
9002408a:	1235      	asrs	r5, r6, #8
9002408c:	fb01 4100 	mla	r1, r1, r0, r4
90024090:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90024094:	0a09      	lsrs	r1, r1, #8
90024096:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
9002409a:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
9002409e:	fb03 7101 	mla	r1, r3, r1, r7
900240a2:	fb0e 1e08 	mla	lr, lr, r8, r1
900240a6:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900240aa:	fb00 e101 	mla	r1, r0, r1, lr
900240ae:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
900240b2:	b287      	uxth	r7, r0
900240b4:	0a09      	lsrs	r1, r1, #8
900240b6:	437a      	muls	r2, r7
900240b8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900240bc:	1c53      	adds	r3, r2, #1
900240be:	4321      	orrs	r1, r4
900240c0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900240c4:	0c0a      	lsrs	r2, r1, #16
900240c6:	f3c1 2407 	ubfx	r4, r1, #8, #8
900240ca:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900240ce:	b2c8      	uxtb	r0, r1
900240d0:	fb12 f207 	smulbb	r2, r2, r7
900240d4:	fb14 f407 	smulbb	r4, r4, r7
900240d8:	b2db      	uxtb	r3, r3
900240da:	fb10 f007 	smulbb	r0, r0, r7
900240de:	fb05 2503 	mla	r5, r5, r3, r2
900240e2:	10f2      	asrs	r2, r6, #3
900240e4:	00f6      	lsls	r6, r6, #3
900240e6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900240ea:	b2ad      	uxth	r5, r5
900240ec:	b2f6      	uxtb	r6, r6
900240ee:	fb02 4203 	mla	r2, r2, r3, r4
900240f2:	fb06 0303 	mla	r3, r6, r3, r0
900240f6:	b294      	uxth	r4, r2
900240f8:	b299      	uxth	r1, r3
900240fa:	1c6b      	adds	r3, r5, #1
900240fc:	1c62      	adds	r2, r4, #1
900240fe:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024102:	1c4b      	adds	r3, r1, #1
90024104:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90024108:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002410c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90024110:	0952      	lsrs	r2, r2, #5
90024112:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024116:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002411a:	432b      	orrs	r3, r5
9002411c:	4313      	orrs	r3, r2
9002411e:	9a02      	ldr	r2, [sp, #8]
90024120:	8013      	strh	r3, [r2, #0]
90024122:	b005      	add	sp, #20
90024124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024128:	2500      	movs	r5, #0
9002412a:	e6ef      	b.n	90023f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
9002412c:	2100      	movs	r1, #0
9002412e:	460d      	mov	r5, r1
90024130:	e6f7      	b.n	90023f22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90024132:	2100      	movs	r1, #0
90024134:	e6f5      	b.n	90023f22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90024136:	4631      	mov	r1, r6
90024138:	e6f3      	b.n	90023f22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002413a:	2400      	movs	r4, #0
9002413c:	e702      	b.n	90023f44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
9002413e:	2200      	movs	r2, #0
90024140:	4614      	mov	r4, r2
90024142:	e70b      	b.n	90023f5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90024144:	4602      	mov	r2, r0
90024146:	4604      	mov	r4, r0
90024148:	e708      	b.n	90023f5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002414a:	2200      	movs	r2, #0
9002414c:	e706      	b.n	90023f5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002414e:	4632      	mov	r2, r6
90024150:	e704      	b.n	90023f5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90024152 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024152:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024156:	b09d      	sub	sp, #116	@ 0x74
90024158:	9219      	str	r2, [sp, #100]	@ 0x64
9002415a:	9307      	str	r3, [sp, #28]
9002415c:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
9002415e:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
90024162:	901b      	str	r0, [sp, #108]	@ 0x6c
90024164:	931a      	str	r3, [sp, #104]	@ 0x68
90024166:	6850      	ldr	r0, [r2, #4]
90024168:	9117      	str	r1, [sp, #92]	@ 0x5c
9002416a:	6812      	ldr	r2, [r2, #0]
9002416c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
90024170:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
90024174:	fb00 1303 	mla	r3, r0, r3, r1
90024178:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002417c:	930a      	str	r3, [sp, #40]	@ 0x28
9002417e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90024180:	681b      	ldr	r3, [r3, #0]
90024182:	9310      	str	r3, [sp, #64]	@ 0x40
90024184:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
90024188:	930b      	str	r3, [sp, #44]	@ 0x2c
9002418a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
9002418c:	2b00      	cmp	r3, #0
9002418e:	dc03      	bgt.n	90024198 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90024190:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90024192:	2b00      	cmp	r3, #0
90024194:	f340 8375 	ble.w	90024882 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90024198:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
9002419a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002419e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900241a2:	1e48      	subs	r0, r1, #1
900241a4:	1e57      	subs	r7, r2, #1
900241a6:	9b07      	ldr	r3, [sp, #28]
900241a8:	2b00      	cmp	r3, #0
900241aa:	f340 818e 	ble.w	900244ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
900241ae:	ea5f 4c24 	movs.w	ip, r4, asr #16
900241b2:	ea4f 4326 	mov.w	r3, r6, asr #16
900241b6:	d406      	bmi.n	900241c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900241b8:	4584      	cmp	ip, r0
900241ba:	da04      	bge.n	900241c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900241bc:	2b00      	cmp	r3, #0
900241be:	db02      	blt.n	900241c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900241c0:	42bb      	cmp	r3, r7
900241c2:	f2c0 8183 	blt.w	900244cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
900241c6:	f11c 0c01 	adds.w	ip, ip, #1
900241ca:	f100 8173 	bmi.w	900244b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900241ce:	4561      	cmp	r1, ip
900241d0:	f2c0 8170 	blt.w	900244b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900241d4:	3301      	adds	r3, #1
900241d6:	f100 816d 	bmi.w	900244b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900241da:	429a      	cmp	r2, r3
900241dc:	f2c0 816a 	blt.w	900244b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900241e0:	9b07      	ldr	r3, [sp, #28]
900241e2:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
900241e4:	9318      	str	r3, [sp, #96]	@ 0x60
900241e6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900241e8:	2b00      	cmp	r3, #0
900241ea:	f340 818c 	ble.w	90024506 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
900241ee:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
900241f0:	ea4f 4c26 	mov.w	ip, r6, asr #16
900241f4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
900241f6:	f3c4 3003 	ubfx	r0, r4, #12, #4
900241fa:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900241fe:	1422      	asrs	r2, r4, #16
90024200:	f3c6 3103 	ubfx	r1, r6, #12, #4
90024204:	689b      	ldr	r3, [r3, #8]
90024206:	f100 81cd 	bmi.w	900245a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002420a:	f103 38ff 	add.w	r8, r3, #4294967295
9002420e:	4542      	cmp	r2, r8
90024210:	f280 81c8 	bge.w	900245a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024214:	f1bc 0f00 	cmp.w	ip, #0
90024218:	f2c0 81c4 	blt.w	900245a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002421c:	f10e 38ff 	add.w	r8, lr, #4294967295
90024220:	45c4      	cmp	ip, r8
90024222:	f280 81bf 	bge.w	900245a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024226:	b21b      	sxth	r3, r3
90024228:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002422a:	fb0c 2203 	mla	r2, ip, r3, r2
9002422e:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90024232:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90024236:	ea4f 6e12 	mov.w	lr, r2, lsr #24
9002423a:	2800      	cmp	r0, #0
9002423c:	f000 81a9 	beq.w	90024592 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90024240:	f8d8 5004 	ldr.w	r5, [r8, #4]
90024244:	950c      	str	r5, [sp, #48]	@ 0x30
90024246:	0e2d      	lsrs	r5, r5, #24
90024248:	9513      	str	r5, [sp, #76]	@ 0x4c
9002424a:	b181      	cbz	r1, 9002426e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9002424c:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90024250:	3b01      	subs	r3, #1
90024252:	009b      	lsls	r3, r3, #2
90024254:	3304      	adds	r3, #4
90024256:	eb08 0c03 	add.w	ip, r8, r3
9002425a:	f858 3003 	ldr.w	r3, [r8, r3]
9002425e:	9308      	str	r3, [sp, #32]
90024260:	0e1b      	lsrs	r3, r3, #24
90024262:	9311      	str	r3, [sp, #68]	@ 0x44
90024264:	f8dc 3004 	ldr.w	r3, [ip, #4]
90024268:	930d      	str	r3, [sp, #52]	@ 0x34
9002426a:	0e1b      	lsrs	r3, r3, #24
9002426c:	9314      	str	r3, [sp, #80]	@ 0x50
9002426e:	b280      	uxth	r0, r0
90024270:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90024272:	b289      	uxth	r1, r1
90024274:	fb00 f901 	mul.w	r9, r0, r1
90024278:	0100      	lsls	r0, r0, #4
9002427a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002427e:	eba0 0809 	sub.w	r8, r0, r9
90024282:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90024286:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90024288:	b289      	uxth	r1, r1
9002428a:	fa1f f888 	uxth.w	r8, r8
9002428e:	1a5b      	subs	r3, r3, r1
90024290:	fb08 f000 	mul.w	r0, r8, r0
90024294:	b29b      	uxth	r3, r3
90024296:	fb03 000e 	mla	r0, r3, lr, r0
9002429a:	fb01 0005 	mla	r0, r1, r5, r0
9002429e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900242a0:	fb09 0005 	mla	r0, r9, r5, r0
900242a4:	f3c0 2007 	ubfx	r0, r0, #8, #8
900242a8:	2800      	cmp	r0, #0
900242aa:	f000 80fa 	beq.w	900244a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900242ae:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900242b2:	d01b      	beq.n	900242ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
900242b4:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
900242b8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900242bc:	fb0e fa0a 	mul.w	sl, lr, sl
900242c0:	fb0e fe02 	mul.w	lr, lr, r2
900242c4:	ea4f 221a 	mov.w	r2, sl, lsr #8
900242c8:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900242cc:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900242d0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900242d4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900242d8:	4452      	add	r2, sl
900242da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900242de:	0a12      	lsrs	r2, r2, #8
900242e0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900242e4:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900242e8:	ea42 020c 	orr.w	r2, r2, ip
900242ec:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900242ee:	2dff      	cmp	r5, #255	@ 0xff
900242f0:	d021      	beq.n	90024336 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
900242f2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900242f4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900242f8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900242fa:	fb05 fb0b 	mul.w	fp, r5, fp
900242fe:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90024300:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90024304:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90024306:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002430a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002430e:	fb05 fa0a 	mul.w	sl, r5, sl
90024312:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024316:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002431a:	44de      	add	lr, fp
9002431c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024320:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024324:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024328:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002432c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024330:	ea4e 050a 	orr.w	r5, lr, sl
90024334:	950c      	str	r5, [sp, #48]	@ 0x30
90024336:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90024338:	2dff      	cmp	r5, #255	@ 0xff
9002433a:	d021      	beq.n	90024380 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
9002433c:	9d08      	ldr	r5, [sp, #32]
9002433e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90024342:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90024344:	fb05 fb0b 	mul.w	fp, r5, fp
90024348:	9d08      	ldr	r5, [sp, #32]
9002434a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002434e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90024350:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024354:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024358:	fb05 fa0a 	mul.w	sl, r5, sl
9002435c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024360:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024364:	44de      	add	lr, fp
90024366:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002436a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002436e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024372:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024376:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002437a:	ea4e 050a 	orr.w	r5, lr, sl
9002437e:	9508      	str	r5, [sp, #32]
90024380:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90024382:	2dff      	cmp	r5, #255	@ 0xff
90024384:	d021      	beq.n	900243ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90024386:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90024388:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
9002438c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9002438e:	fb05 fb0b 	mul.w	fp, r5, fp
90024392:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90024394:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90024398:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9002439a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002439e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900243a2:	fb05 fa0a 	mul.w	sl, r5, sl
900243a6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900243aa:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900243ae:	44de      	add	lr, fp
900243b0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900243b4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900243b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900243bc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900243c0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900243c4:	ea4e 050a 	orr.w	r5, lr, sl
900243c8:	950d      	str	r5, [sp, #52]	@ 0x34
900243ca:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900243cc:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
900243d0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900243d4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900243d8:	9d08      	ldr	r5, [sp, #32]
900243da:	fb08 fc0c 	mul.w	ip, r8, ip
900243de:	fb03 cc0e 	mla	ip, r3, lr, ip
900243e2:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900243e6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900243e8:	fb01 cc0e 	mla	ip, r1, lr, ip
900243ec:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900243f0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900243f2:	fb09 cc0e 	mla	ip, r9, lr, ip
900243f6:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
900243fa:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900243fc:	fb08 f80e 	mul.w	r8, r8, lr
90024400:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024404:	fb03 8202 	mla	r2, r3, r2, r8
90024408:	9b08      	ldr	r3, [sp, #32]
9002440a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002440e:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
90024412:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90024414:	fb01 220a 	mla	r2, r1, sl, r2
90024418:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
9002441c:	883b      	ldrh	r3, [r7, #0]
9002441e:	fb09 2901 	mla	r9, r9, r1, r2
90024422:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90024424:	1219      	asrs	r1, r3, #8
90024426:	4342      	muls	r2, r0
90024428:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002442c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90024430:	1c50      	adds	r0, r2, #1
90024432:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90024436:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9002443a:	ea4c 0c09 	orr.w	ip, ip, r9
9002443e:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90024442:	ea4f 421c 	mov.w	r2, ip, lsr #16
90024446:	f3cc 2e07 	ubfx	lr, ip, #8, #8
9002444a:	fa5f fc8c 	uxtb.w	ip, ip
9002444e:	fb12 f205 	smulbb	r2, r2, r5
90024452:	b2c0      	uxtb	r0, r0
90024454:	fb1c fc05 	smulbb	ip, ip, r5
90024458:	fb01 2100 	mla	r1, r1, r0, r2
9002445c:	10da      	asrs	r2, r3, #3
9002445e:	fb1e fe05 	smulbb	lr, lr, r5
90024462:	00db      	lsls	r3, r3, #3
90024464:	b289      	uxth	r1, r1
90024466:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002446a:	b2db      	uxtb	r3, r3
9002446c:	fb02 e200 	mla	r2, r2, r0, lr
90024470:	fb03 c300 	mla	r3, r3, r0, ip
90024474:	b292      	uxth	r2, r2
90024476:	fa1f fc83 	uxth.w	ip, r3
9002447a:	1c4b      	adds	r3, r1, #1
9002447c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90024480:	f10c 0301 	add.w	r3, ip, #1
90024484:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90024488:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002448c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024490:	430b      	orrs	r3, r1
90024492:	1c51      	adds	r1, r2, #1
90024494:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90024498:	0952      	lsrs	r2, r2, #5
9002449a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002449e:	4313      	orrs	r3, r2
900244a0:	803b      	strh	r3, [r7, #0]
900244a2:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900244a4:	3702      	adds	r7, #2
900244a6:	441c      	add	r4, r3
900244a8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900244aa:	441e      	add	r6, r3
900244ac:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900244ae:	3b01      	subs	r3, #1
900244b0:	9318      	str	r3, [sp, #96]	@ 0x60
900244b2:	e698      	b.n	900241e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900244b4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900244b6:	441c      	add	r4, r3
900244b8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900244ba:	441e      	add	r6, r3
900244bc:	9b07      	ldr	r3, [sp, #28]
900244be:	3b01      	subs	r3, #1
900244c0:	9307      	str	r3, [sp, #28]
900244c2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900244c4:	3302      	adds	r3, #2
900244c6:	930a      	str	r3, [sp, #40]	@ 0x28
900244c8:	e66d      	b.n	900241a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
900244ca:	d023      	beq.n	90024514 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
900244cc:	9b07      	ldr	r3, [sp, #28]
900244ce:	9829      	ldr	r0, [sp, #164]	@ 0xa4
900244d0:	3b01      	subs	r3, #1
900244d2:	fb00 4003 	mla	r0, r0, r3, r4
900244d6:	1400      	asrs	r0, r0, #16
900244d8:	f53f ae82 	bmi.w	900241e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900244dc:	3901      	subs	r1, #1
900244de:	4288      	cmp	r0, r1
900244e0:	f6bf ae7e 	bge.w	900241e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900244e4:	992a      	ldr	r1, [sp, #168]	@ 0xa8
900244e6:	fb01 6303 	mla	r3, r1, r3, r6
900244ea:	141b      	asrs	r3, r3, #16
900244ec:	f53f ae78 	bmi.w	900241e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900244f0:	3a01      	subs	r2, #1
900244f2:	4293      	cmp	r3, r2
900244f4:	f6bf ae74 	bge.w	900241e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900244f8:	f8dd b01c 	ldr.w	fp, [sp, #28]
900244fc:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90024500:	f1bb 0f00 	cmp.w	fp, #0
90024504:	dc6c      	bgt.n	900245e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90024506:	9b07      	ldr	r3, [sp, #28]
90024508:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002450c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002450e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90024512:	930a      	str	r3, [sp, #40]	@ 0x28
90024514:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90024516:	2b00      	cmp	r3, #0
90024518:	f340 81b3 	ble.w	90024882 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
9002451c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024520:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90024522:	ee30 0a04 	vadd.f32	s0, s0, s8
90024526:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002452a:	eef0 6a62 	vmov.f32	s13, s5
9002452e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024532:	ee31 1a05 	vadd.f32	s2, s2, s10
90024536:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002453a:	ee16 4a90 	vmov	r4, s13
9002453e:	eef0 6a43 	vmov.f32	s13, s6
90024542:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024546:	ee16 6a90 	vmov	r6, s13
9002454a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002454e:	ee61 7a27 	vmul.f32	s15, s2, s15
90024552:	ee77 2a62 	vsub.f32	s5, s14, s5
90024556:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002455a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002455e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024562:	ee12 2a90 	vmov	r2, s5
90024566:	eef0 2a47 	vmov.f32	s5, s14
9002456a:	fb92 f3f3 	sdiv	r3, r2, r3
9002456e:	ee13 2a10 	vmov	r2, s6
90024572:	9329      	str	r3, [sp, #164]	@ 0xa4
90024574:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90024576:	eeb0 3a67 	vmov.f32	s6, s15
9002457a:	fb92 f3f3 	sdiv	r3, r2, r3
9002457e:	932a      	str	r3, [sp, #168]	@ 0xa8
90024580:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90024582:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90024584:	3b01      	subs	r3, #1
90024586:	9317      	str	r3, [sp, #92]	@ 0x5c
90024588:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002458a:	bf08      	it	eq
9002458c:	4613      	moveq	r3, r2
9002458e:	9307      	str	r3, [sp, #28]
90024590:	e5fb      	b.n	9002418a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90024592:	2900      	cmp	r1, #0
90024594:	f43f ae6b 	beq.w	9002426e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90024598:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
9002459c:	9308      	str	r3, [sp, #32]
9002459e:	0e1b      	lsrs	r3, r3, #24
900245a0:	9311      	str	r3, [sp, #68]	@ 0x44
900245a2:	e664      	b.n	9002426e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900245a4:	f112 0801 	adds.w	r8, r2, #1
900245a8:	f53f af7b 	bmi.w	900244a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900245ac:	4543      	cmp	r3, r8
900245ae:	f6ff af78 	blt.w	900244a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900245b2:	f11c 0801 	adds.w	r8, ip, #1
900245b6:	f53f af74 	bmi.w	900244a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900245ba:	45c6      	cmp	lr, r8
900245bc:	f6ff af71 	blt.w	900244a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900245c0:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
900245c2:	b21b      	sxth	r3, r3
900245c4:	9201      	str	r2, [sp, #4]
900245c6:	fa0f f28e 	sxth.w	r2, lr
900245ca:	e9cd 1504 	strd	r1, r5, [sp, #16]
900245ce:	e9cd c002 	strd	ip, r0, [sp, #8]
900245d2:	9200      	str	r2, [sp, #0]
900245d4:	4639      	mov	r1, r7
900245d6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900245d8:	981b      	ldr	r0, [sp, #108]	@ 0x6c
900245da:	f7ff fc79 	bl	90023ed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
900245de:	e760      	b.n	900244a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900245e0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
900245e2:	1427      	asrs	r7, r4, #16
900245e4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900245e6:	f3c4 3203 	ubfx	r2, r4, #12, #4
900245ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900245ee:	1433      	asrs	r3, r6, #16
900245f0:	f3c6 3003 	ubfx	r0, r6, #12, #4
900245f4:	fb01 7303 	mla	r3, r1, r3, r7
900245f8:	eb05 0783 	add.w	r7, r5, r3, lsl #2
900245fc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90024600:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90024604:	2a00      	cmp	r2, #0
90024606:	f000 8133 	beq.w	90024870 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
9002460a:	687d      	ldr	r5, [r7, #4]
9002460c:	950e      	str	r5, [sp, #56]	@ 0x38
9002460e:	0e2d      	lsrs	r5, r5, #24
90024610:	9515      	str	r5, [sp, #84]	@ 0x54
90024612:	b178      	cbz	r0, 90024634 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90024614:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90024618:	3901      	subs	r1, #1
9002461a:	0089      	lsls	r1, r1, #2
9002461c:	3104      	adds	r1, #4
9002461e:	eb07 0e01 	add.w	lr, r7, r1
90024622:	5879      	ldr	r1, [r7, r1]
90024624:	9109      	str	r1, [sp, #36]	@ 0x24
90024626:	0e09      	lsrs	r1, r1, #24
90024628:	9112      	str	r1, [sp, #72]	@ 0x48
9002462a:	f8de 1004 	ldr.w	r1, [lr, #4]
9002462e:	910f      	str	r1, [sp, #60]	@ 0x3c
90024630:	0e09      	lsrs	r1, r1, #24
90024632:	9116      	str	r1, [sp, #88]	@ 0x58
90024634:	b292      	uxth	r2, r2
90024636:	9915      	ldr	r1, [sp, #84]	@ 0x54
90024638:	b280      	uxth	r0, r0
9002463a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002463c:	fb02 f800 	mul.w	r8, r2, r0
90024640:	0112      	lsls	r2, r2, #4
90024642:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90024646:	eba2 0e08 	sub.w	lr, r2, r8
9002464a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
9002464e:	b280      	uxth	r0, r0
90024650:	fa1f fe8e 	uxth.w	lr, lr
90024654:	1a12      	subs	r2, r2, r0
90024656:	fb0e f101 	mul.w	r1, lr, r1
9002465a:	b292      	uxth	r2, r2
9002465c:	fb02 110c 	mla	r1, r2, ip, r1
90024660:	fb00 1105 	mla	r1, r0, r5, r1
90024664:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90024666:	fb08 1105 	mla	r1, r8, r5, r1
9002466a:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002466e:	2900      	cmp	r1, #0
90024670:	f000 80f5 	beq.w	9002485e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90024674:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90024678:	d019      	beq.n	900246ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
9002467a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002467e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024682:	fb0c fa0a 	mul.w	sl, ip, sl
90024686:	fb0c fc03 	mul.w	ip, ip, r3
9002468a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002468e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90024692:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90024696:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002469a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002469e:	4453      	add	r3, sl
900246a0:	0a3f      	lsrs	r7, r7, #8
900246a2:	0a1b      	lsrs	r3, r3, #8
900246a4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900246a8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900246ac:	433b      	orrs	r3, r7
900246ae:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900246b0:	2dff      	cmp	r5, #255	@ 0xff
900246b2:	d020      	beq.n	900246f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
900246b4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900246b6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900246ba:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900246bc:	436f      	muls	r7, r5
900246be:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900246c0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900246c4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900246c8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900246ca:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900246ce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900246d2:	fb05 fa0a 	mul.w	sl, r5, sl
900246d6:	44bc      	add	ip, r7
900246d8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900246dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900246e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900246e4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900246e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900246ec:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900246f0:	ea4c 050a 	orr.w	r5, ip, sl
900246f4:	950e      	str	r5, [sp, #56]	@ 0x38
900246f6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900246f8:	2dff      	cmp	r5, #255	@ 0xff
900246fa:	d020      	beq.n	9002473e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
900246fc:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900246fe:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90024702:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90024704:	436f      	muls	r7, r5
90024706:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90024708:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002470c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90024710:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90024712:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024716:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002471a:	fb05 fa0a 	mul.w	sl, r5, sl
9002471e:	44bc      	add	ip, r7
90024720:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90024724:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024728:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002472c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024730:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024734:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024738:	ea4c 050a 	orr.w	r5, ip, sl
9002473c:	9509      	str	r5, [sp, #36]	@ 0x24
9002473e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90024740:	2dff      	cmp	r5, #255	@ 0xff
90024742:	d020      	beq.n	90024786 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90024744:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90024746:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002474a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9002474c:	436f      	muls	r7, r5
9002474e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90024750:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024754:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90024758:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9002475a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002475e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024762:	fb05 fa0a 	mul.w	sl, r5, sl
90024766:	44bc      	add	ip, r7
90024768:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002476c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024770:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024774:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024778:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002477c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024780:	ea4c 050a 	orr.w	r5, ip, sl
90024784:	950f      	str	r5, [sp, #60]	@ 0x3c
90024786:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90024788:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
9002478c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024790:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90024794:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90024796:	fb0e f707 	mul.w	r7, lr, r7
9002479a:	fb02 770c 	mla	r7, r2, ip, r7
9002479e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900247a2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900247a4:	fb00 770c 	mla	r7, r0, ip, r7
900247a8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900247ac:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900247ae:	fb08 770c 	mla	r7, r8, ip, r7
900247b2:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900247b6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900247b8:	fb0e fe0c 	mul.w	lr, lr, ip
900247bc:	0a3f      	lsrs	r7, r7, #8
900247be:	fb02 e303 	mla	r3, r2, r3, lr
900247c2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900247c4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900247c8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900247cc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900247ce:	fb00 330a 	mla	r3, r0, sl, r3
900247d2:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
900247d6:	f8b9 0000 	ldrh.w	r0, [r9]
900247da:	fb08 3c0c 	mla	ip, r8, ip, r3
900247de:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900247e0:	1202      	asrs	r2, r0, #8
900247e2:	4359      	muls	r1, r3
900247e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900247e8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900247ec:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900247f0:	1c4b      	adds	r3, r1, #1
900247f2:	ea47 070c 	orr.w	r7, r7, ip
900247f6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900247fa:	0c3b      	lsrs	r3, r7, #16
900247fc:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90024800:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90024804:	b2ff      	uxtb	r7, r7
90024806:	fb13 f305 	smulbb	r3, r3, r5
9002480a:	b2c9      	uxtb	r1, r1
9002480c:	fb17 f705 	smulbb	r7, r7, r5
90024810:	fb02 3201 	mla	r2, r2, r1, r3
90024814:	10c3      	asrs	r3, r0, #3
90024816:	fb1c fc05 	smulbb	ip, ip, r5
9002481a:	00c0      	lsls	r0, r0, #3
9002481c:	b292      	uxth	r2, r2
9002481e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90024822:	b2c0      	uxtb	r0, r0
90024824:	fb03 c301 	mla	r3, r3, r1, ip
90024828:	fb00 7001 	mla	r0, r0, r1, r7
9002482c:	1c51      	adds	r1, r2, #1
9002482e:	b29b      	uxth	r3, r3
90024830:	b280      	uxth	r0, r0
90024832:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90024836:	f100 0c01 	add.w	ip, r0, #1
9002483a:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
9002483e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90024842:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90024846:	ea4c 0202 	orr.w	r2, ip, r2
9002484a:	f103 0c01 	add.w	ip, r3, #1
9002484e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90024852:	095b      	lsrs	r3, r3, #5
90024854:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024858:	431a      	orrs	r2, r3
9002485a:	f8a9 2000 	strh.w	r2, [r9]
9002485e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90024860:	f109 0902 	add.w	r9, r9, #2
90024864:	f10b 3bff 	add.w	fp, fp, #4294967295
90024868:	441c      	add	r4, r3
9002486a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002486c:	441e      	add	r6, r3
9002486e:	e647      	b.n	90024500 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90024870:	2800      	cmp	r0, #0
90024872:	f43f aedf 	beq.w	90024634 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90024876:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
9002487a:	9109      	str	r1, [sp, #36]	@ 0x24
9002487c:	0e09      	lsrs	r1, r1, #24
9002487e:	9112      	str	r1, [sp, #72]	@ 0x48
90024880:	e6d8      	b.n	90024634 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90024882:	b01d      	add	sp, #116	@ 0x74
90024884:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024888 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90024888:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002488c:	b085      	sub	sp, #20
9002488e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90024892:	9102      	str	r1, [sp, #8]
90024894:	2c00      	cmp	r4, #0
90024896:	fb04 7103 	mla	r1, r4, r3, r7
9002489a:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
9002489e:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900248a2:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900248a6:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
900248aa:	f2c0 810c 	blt.w	90024ac6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900248ae:	45a6      	cmp	lr, r4
900248b0:	f340 8109 	ble.w	90024ac6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900248b4:	2f00      	cmp	r7, #0
900248b6:	f2c0 8104 	blt.w	90024ac2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
900248ba:	42bb      	cmp	r3, r7
900248bc:	f340 8101 	ble.w	90024ac2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
900248c0:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
900248c4:	1c7a      	adds	r2, r7, #1
900248c6:	f100 8101 	bmi.w	90024acc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
900248ca:	4293      	cmp	r3, r2
900248cc:	f340 80fe 	ble.w	90024acc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
900248d0:	2e00      	cmp	r6, #0
900248d2:	f000 80fd 	beq.w	90024ad0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
900248d6:	f8dc 1004 	ldr.w	r1, [ip, #4]
900248da:	3401      	adds	r4, #1
900248dc:	f100 80fc 	bmi.w	90024ad8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
900248e0:	45a6      	cmp	lr, r4
900248e2:	f340 80f9 	ble.w	90024ad8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
900248e6:	2800      	cmp	r0, #0
900248e8:	f000 80f9 	beq.w	90024ade <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
900248ec:	2f00      	cmp	r7, #0
900248ee:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
900248f2:	f2c0 80ef 	blt.w	90024ad4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
900248f6:	42bb      	cmp	r3, r7
900248f8:	f340 80ec 	ble.w	90024ad4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
900248fc:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90024900:	3701      	adds	r7, #1
90024902:	f100 80ef 	bmi.w	90024ae4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90024906:	42bb      	cmp	r3, r7
90024908:	f340 80ec 	ble.w	90024ae4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
9002490c:	2e00      	cmp	r6, #0
9002490e:	f000 80eb 	beq.w	90024ae8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90024912:	6852      	ldr	r2, [r2, #4]
90024914:	b2b6      	uxth	r6, r6
90024916:	b280      	uxth	r0, r0
90024918:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9002491c:	fb00 fe06 	mul.w	lr, r0, r6
90024920:	0136      	lsls	r6, r6, #4
90024922:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90024926:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9002492a:	eba6 070e 	sub.w	r7, r6, lr
9002492e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90024932:	ea4f 6914 	mov.w	r9, r4, lsr #24
90024936:	b280      	uxth	r0, r0
90024938:	b2bf      	uxth	r7, r7
9002493a:	1a1b      	subs	r3, r3, r0
9002493c:	ea4f 6812 	mov.w	r8, r2, lsr #24
90024940:	fb07 f60a 	mul.w	r6, r7, sl
90024944:	b29b      	uxth	r3, r3
90024946:	fb0b 6603 	mla	r6, fp, r3, r6
9002494a:	fb00 6609 	mla	r6, r0, r9, r6
9002494e:	fb0e 6608 	mla	r6, lr, r8, r6
90024952:	f3c6 2607 	ubfx	r6, r6, #8, #8
90024956:	9600      	str	r6, [sp, #0]
90024958:	2e00      	cmp	r6, #0
9002495a:	f000 80af 	beq.w	90024abc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
9002495e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90024962:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90024966:	9e02      	ldr	r6, [sp, #8]
90024968:	fb0b fc0c 	mul.w	ip, fp, ip
9002496c:	fb0b f505 	mul.w	r5, fp, r5
90024970:	8836      	ldrh	r6, [r6, #0]
90024972:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90024976:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002497a:	9501      	str	r5, [sp, #4]
9002497c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90024980:	44dc      	add	ip, fp
90024982:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024986:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
9002498a:	9503      	str	r5, [sp, #12]
9002498c:	9d01      	ldr	r5, [sp, #4]
9002498e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90024992:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90024996:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
9002499a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002499e:	fb0a fc0c 	mul.w	ip, sl, ip
900249a2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900249a6:	fb0a fa01 	mul.w	sl, sl, r1
900249aa:	ea4f 251c 	mov.w	r5, ip, lsr #8
900249ae:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900249b2:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
900249b6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900249ba:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900249be:	4465      	add	r5, ip
900249c0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900249c4:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
900249c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900249cc:	fb09 fc0c 	mul.w	ip, r9, ip
900249d0:	0a2d      	lsrs	r5, r5, #8
900249d2:	fb09 f904 	mul.w	r9, r9, r4
900249d6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900249da:	ea4f 211c 	mov.w	r1, ip, lsr #8
900249de:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900249e2:	f509 7480 	add.w	r4, r9, #256	@ 0x100
900249e6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900249ea:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900249ee:	437d      	muls	r5, r7
900249f0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
900249f4:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
900249f8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900249fc:	4461      	add	r1, ip
900249fe:	fb08 f404 	mul.w	r4, r8, r4
90024a02:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024a06:	fb08 f802 	mul.w	r8, r8, r2
90024a0a:	0a09      	lsrs	r1, r1, #8
90024a0c:	0a22      	lsrs	r2, r4, #8
90024a0e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90024a12:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90024a16:	fb07 f70a 	mul.w	r7, r7, sl
90024a1a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90024a1e:	4414      	add	r4, r2
90024a20:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90024a24:	0a24      	lsrs	r4, r4, #8
90024a26:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90024a2a:	9a03      	ldr	r2, [sp, #12]
90024a2c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90024a30:	fb02 5503 	mla	r5, r2, r3, r5
90024a34:	ea4f 2818 	mov.w	r8, r8, lsr #8
90024a38:	fb04 540e 	mla	r4, r4, lr, r5
90024a3c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90024a40:	fb01 4100 	mla	r1, r1, r0, r4
90024a44:	0a09      	lsrs	r1, r1, #8
90024a46:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90024a4a:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90024a4e:	fb03 7101 	mla	r1, r3, r1, r7
90024a52:	9b00      	ldr	r3, [sp, #0]
90024a54:	fb0e 1e08 	mla	lr, lr, r8, r1
90024a58:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90024a5c:	43da      	mvns	r2, r3
90024a5e:	1233      	asrs	r3, r6, #8
90024a60:	fb00 e101 	mla	r1, r0, r1, lr
90024a64:	10f0      	asrs	r0, r6, #3
90024a66:	b2d2      	uxtb	r2, r2
90024a68:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90024a6c:	0a09      	lsrs	r1, r1, #8
90024a6e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90024a72:	00f6      	lsls	r6, r6, #3
90024a74:	4353      	muls	r3, r2
90024a76:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90024a7a:	4350      	muls	r0, r2
90024a7c:	b2f6      	uxtb	r6, r6
90024a7e:	4321      	orrs	r1, r4
90024a80:	4356      	muls	r6, r2
90024a82:	1c5a      	adds	r2, r3, #1
90024a84:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90024a88:	0c0b      	lsrs	r3, r1, #16
90024a8a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024a8e:	1c42      	adds	r2, r0, #1
90024a90:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024a94:	0a0a      	lsrs	r2, r1, #8
90024a96:	021b      	lsls	r3, r3, #8
90024a98:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90024a9c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
90024aa0:	00d2      	lsls	r2, r2, #3
90024aa2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024aa6:	4313      	orrs	r3, r2
90024aa8:	1c72      	adds	r2, r6, #1
90024aaa:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90024aae:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90024ab2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90024ab6:	4319      	orrs	r1, r3
90024ab8:	9b02      	ldr	r3, [sp, #8]
90024aba:	8019      	strh	r1, [r3, #0]
90024abc:	b005      	add	sp, #20
90024abe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024ac2:	2500      	movs	r5, #0
90024ac4:	e6fe      	b.n	900248c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90024ac6:	2100      	movs	r1, #0
90024ac8:	460d      	mov	r5, r1
90024aca:	e706      	b.n	900248da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90024acc:	2100      	movs	r1, #0
90024ace:	e704      	b.n	900248da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90024ad0:	4631      	mov	r1, r6
90024ad2:	e702      	b.n	900248da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90024ad4:	2400      	movs	r4, #0
90024ad6:	e713      	b.n	90024900 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90024ad8:	2200      	movs	r2, #0
90024ada:	4614      	mov	r4, r2
90024adc:	e71a      	b.n	90024914 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90024ade:	4602      	mov	r2, r0
90024ae0:	4604      	mov	r4, r0
90024ae2:	e717      	b.n	90024914 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90024ae4:	2200      	movs	r2, #0
90024ae6:	e715      	b.n	90024914 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90024ae8:	4632      	mov	r2, r6
90024aea:	e713      	b.n	90024914 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90024aec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024aec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024af0:	b09b      	sub	sp, #108	@ 0x6c
90024af2:	9218      	str	r2, [sp, #96]	@ 0x60
90024af4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90024af6:	9019      	str	r0, [sp, #100]	@ 0x64
90024af8:	9116      	str	r1, [sp, #88]	@ 0x58
90024afa:	6850      	ldr	r0, [r2, #4]
90024afc:	9307      	str	r3, [sp, #28]
90024afe:	6812      	ldr	r2, [r2, #0]
90024b00:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90024b04:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
90024b08:	fb00 1303 	mla	r3, r0, r3, r1
90024b0c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024b10:	930a      	str	r3, [sp, #40]	@ 0x28
90024b12:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90024b14:	681b      	ldr	r3, [r3, #0]
90024b16:	930f      	str	r3, [sp, #60]	@ 0x3c
90024b18:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90024b1a:	2b00      	cmp	r3, #0
90024b1c:	dc03      	bgt.n	90024b26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90024b1e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024b20:	2b00      	cmp	r3, #0
90024b22:	f340 8387 	ble.w	90025234 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90024b26:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90024b28:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024b2c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024b30:	1e48      	subs	r0, r1, #1
90024b32:	1e57      	subs	r7, r2, #1
90024b34:	9b07      	ldr	r3, [sp, #28]
90024b36:	2b00      	cmp	r3, #0
90024b38:	f340 8166 	ble.w	90024e08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90024b3c:	ea5f 4c24 	movs.w	ip, r4, asr #16
90024b40:	ea4f 4326 	mov.w	r3, r6, asr #16
90024b44:	d406      	bmi.n	90024b54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90024b46:	4584      	cmp	ip, r0
90024b48:	da04      	bge.n	90024b54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90024b4a:	2b00      	cmp	r3, #0
90024b4c:	db02      	blt.n	90024b54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90024b4e:	42bb      	cmp	r3, r7
90024b50:	f2c0 815b 	blt.w	90024e0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90024b54:	f11c 0c01 	adds.w	ip, ip, #1
90024b58:	f100 814b 	bmi.w	90024df2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90024b5c:	4561      	cmp	r1, ip
90024b5e:	f2c0 8148 	blt.w	90024df2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90024b62:	3301      	adds	r3, #1
90024b64:	f100 8145 	bmi.w	90024df2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90024b68:	429a      	cmp	r2, r3
90024b6a:	f2c0 8142 	blt.w	90024df2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90024b6e:	9b07      	ldr	r3, [sp, #28]
90024b70:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90024b72:	9317      	str	r3, [sp, #92]	@ 0x5c
90024b74:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90024b76:	2b00      	cmp	r3, #0
90024b78:	f340 8165 	ble.w	90024e46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90024b7c:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
90024b7e:	ea4f 4c26 	mov.w	ip, r6, asr #16
90024b82:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90024b84:	f3c4 3103 	ubfx	r1, r4, #12, #4
90024b88:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90024b8c:	1422      	asrs	r2, r4, #16
90024b8e:	f3c6 3003 	ubfx	r0, r6, #12, #4
90024b92:	689b      	ldr	r3, [r3, #8]
90024b94:	f100 81d5 	bmi.w	90024f42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90024b98:	f103 38ff 	add.w	r8, r3, #4294967295
90024b9c:	4542      	cmp	r2, r8
90024b9e:	f280 81d0 	bge.w	90024f42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90024ba2:	f1bc 0f00 	cmp.w	ip, #0
90024ba6:	f2c0 81cc 	blt.w	90024f42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90024baa:	f10e 38ff 	add.w	r8, lr, #4294967295
90024bae:	45c4      	cmp	ip, r8
90024bb0:	f280 81c7 	bge.w	90024f42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90024bb4:	b21b      	sxth	r3, r3
90024bb6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90024bb8:	fb0c 2203 	mla	r2, ip, r3, r2
90024bbc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90024bc0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90024bc4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90024bc8:	2900      	cmp	r1, #0
90024bca:	f000 8182 	beq.w	90024ed2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90024bce:	f8d8 5004 	ldr.w	r5, [r8, #4]
90024bd2:	950b      	str	r5, [sp, #44]	@ 0x2c
90024bd4:	0e2d      	lsrs	r5, r5, #24
90024bd6:	9512      	str	r5, [sp, #72]	@ 0x48
90024bd8:	b180      	cbz	r0, 90024bfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90024bda:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90024bde:	3b01      	subs	r3, #1
90024be0:	009b      	lsls	r3, r3, #2
90024be2:	3304      	adds	r3, #4
90024be4:	eb08 0c03 	add.w	ip, r8, r3
90024be8:	f858 3003 	ldr.w	r3, [r8, r3]
90024bec:	9308      	str	r3, [sp, #32]
90024bee:	0e1b      	lsrs	r3, r3, #24
90024bf0:	9310      	str	r3, [sp, #64]	@ 0x40
90024bf2:	f8dc 3004 	ldr.w	r3, [ip, #4]
90024bf6:	930c      	str	r3, [sp, #48]	@ 0x30
90024bf8:	0e1b      	lsrs	r3, r3, #24
90024bfa:	9313      	str	r3, [sp, #76]	@ 0x4c
90024bfc:	b289      	uxth	r1, r1
90024bfe:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90024c00:	b280      	uxth	r0, r0
90024c02:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90024c04:	fb01 f900 	mul.w	r9, r1, r0
90024c08:	0109      	lsls	r1, r1, #4
90024c0a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90024c0e:	eba1 0809 	sub.w	r8, r1, r9
90024c12:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
90024c16:	b280      	uxth	r0, r0
90024c18:	fa1f f888 	uxth.w	r8, r8
90024c1c:	1a09      	subs	r1, r1, r0
90024c1e:	fb08 f303 	mul.w	r3, r8, r3
90024c22:	b289      	uxth	r1, r1
90024c24:	fb01 330e 	mla	r3, r1, lr, r3
90024c28:	fb00 3305 	mla	r3, r0, r5, r3
90024c2c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90024c2e:	fb09 3305 	mla	r3, r9, r5, r3
90024c32:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024c36:	2b00      	cmp	r3, #0
90024c38:	f000 80d2 	beq.w	90024de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024c3c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90024c40:	d01b      	beq.n	90024c7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90024c42:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90024c46:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90024c4a:	fb0e fa0a 	mul.w	sl, lr, sl
90024c4e:	fb0e fe02 	mul.w	lr, lr, r2
90024c52:	ea4f 221a 	mov.w	r2, sl, lsr #8
90024c56:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90024c5a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90024c5e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90024c62:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90024c66:	4452      	add	r2, sl
90024c68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024c6c:	0a12      	lsrs	r2, r2, #8
90024c6e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90024c72:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90024c76:	ea42 020c 	orr.w	r2, r2, ip
90024c7a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90024c7c:	2dff      	cmp	r5, #255	@ 0xff
90024c7e:	d021      	beq.n	90024cc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90024c80:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90024c82:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90024c86:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90024c88:	fb05 fb0b 	mul.w	fp, r5, fp
90024c8c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90024c8e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90024c92:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90024c94:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024c98:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024c9c:	fb05 fa0a 	mul.w	sl, r5, sl
90024ca0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024ca4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024ca8:	44de      	add	lr, fp
90024caa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024cae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024cb2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024cb6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024cba:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024cbe:	ea4e 050a 	orr.w	r5, lr, sl
90024cc2:	950b      	str	r5, [sp, #44]	@ 0x2c
90024cc4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90024cc6:	2dff      	cmp	r5, #255	@ 0xff
90024cc8:	d021      	beq.n	90024d0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90024cca:	9d08      	ldr	r5, [sp, #32]
90024ccc:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90024cd0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90024cd2:	fb05 fb0b 	mul.w	fp, r5, fp
90024cd6:	9d08      	ldr	r5, [sp, #32]
90024cd8:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90024cdc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90024cde:	fb05 fa0e 	mul.w	sl, r5, lr
90024ce2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024ce6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024cea:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024cee:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024cf2:	44de      	add	lr, fp
90024cf4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024cf8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024cfc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024d00:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024d04:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024d08:	ea4e 050a 	orr.w	r5, lr, sl
90024d0c:	9508      	str	r5, [sp, #32]
90024d0e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90024d10:	2dff      	cmp	r5, #255	@ 0xff
90024d12:	d021      	beq.n	90024d58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90024d14:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90024d16:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90024d1a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90024d1c:	fb05 fb0b 	mul.w	fp, r5, fp
90024d20:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90024d22:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90024d26:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90024d28:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024d2c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024d30:	fb05 fa0a 	mul.w	sl, r5, sl
90024d34:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024d38:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024d3c:	44de      	add	lr, fp
90024d3e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024d42:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024d46:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024d4a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024d4e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024d52:	ea4e 050a 	orr.w	r5, lr, sl
90024d56:	950c      	str	r5, [sp, #48]	@ 0x30
90024d58:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90024d5a:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90024d5e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90024d62:	2bff      	cmp	r3, #255	@ 0xff
90024d64:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90024d68:	9d08      	ldr	r5, [sp, #32]
90024d6a:	fb08 fc0c 	mul.w	ip, r8, ip
90024d6e:	fb01 cc0e 	mla	ip, r1, lr, ip
90024d72:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90024d76:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90024d78:	fb00 cc0e 	mla	ip, r0, lr, ip
90024d7c:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90024d80:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90024d82:	fb09 cc0e 	mla	ip, r9, lr, ip
90024d86:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90024d8a:	fb08 f80e 	mul.w	r8, r8, lr
90024d8e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024d92:	fb01 8202 	mla	r2, r1, r2, r8
90024d96:	9908      	ldr	r1, [sp, #32]
90024d98:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024d9c:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90024da0:	990c      	ldr	r1, [sp, #48]	@ 0x30
90024da2:	fb00 220a 	mla	r2, r0, sl, r2
90024da6:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
90024daa:	fb09 2900 	mla	r9, r9, r0, r2
90024dae:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024db2:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90024db6:	ea4c 0c09 	orr.w	ip, ip, r9
90024dba:	ea4f 221c 	mov.w	r2, ip, lsr #8
90024dbe:	f040 8091 	bne.w	90024ee4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90024dc2:	ea4f 135c 	mov.w	r3, ip, lsr #5
90024dc6:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
90024dca:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024dce:	f022 0207 	bic.w	r2, r2, #7
90024dd2:	431a      	orrs	r2, r3
90024dd4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90024dd8:	ea4c 0c02 	orr.w	ip, ip, r2
90024ddc:	f8a7 c000 	strh.w	ip, [r7]
90024de0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90024de2:	3702      	adds	r7, #2
90024de4:	441c      	add	r4, r3
90024de6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024de8:	441e      	add	r6, r3
90024dea:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90024dec:	3b01      	subs	r3, #1
90024dee:	9317      	str	r3, [sp, #92]	@ 0x5c
90024df0:	e6c0      	b.n	90024b74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90024df2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90024df4:	441c      	add	r4, r3
90024df6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024df8:	441e      	add	r6, r3
90024dfa:	9b07      	ldr	r3, [sp, #28]
90024dfc:	3b01      	subs	r3, #1
90024dfe:	9307      	str	r3, [sp, #28]
90024e00:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024e02:	3302      	adds	r3, #2
90024e04:	930a      	str	r3, [sp, #40]	@ 0x28
90024e06:	e695      	b.n	90024b34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024e08:	d024      	beq.n	90024e54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90024e0a:	9b07      	ldr	r3, [sp, #28]
90024e0c:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90024e0e:	3b01      	subs	r3, #1
90024e10:	fb00 4003 	mla	r0, r0, r3, r4
90024e14:	1400      	asrs	r0, r0, #16
90024e16:	f53f aeaa 	bmi.w	90024b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90024e1a:	3901      	subs	r1, #1
90024e1c:	4288      	cmp	r0, r1
90024e1e:	f6bf aea6 	bge.w	90024b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90024e22:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90024e24:	fb01 6303 	mla	r3, r1, r3, r6
90024e28:	141b      	asrs	r3, r3, #16
90024e2a:	f53f aea0 	bmi.w	90024b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90024e2e:	3a01      	subs	r2, #1
90024e30:	4293      	cmp	r3, r2
90024e32:	f6bf ae9c 	bge.w	90024b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90024e36:	f8dd b01c 	ldr.w	fp, [sp, #28]
90024e3a:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
90024e3e:	f1bb 0f00 	cmp.w	fp, #0
90024e42:	f300 809a 	bgt.w	90024f7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90024e46:	9b07      	ldr	r3, [sp, #28]
90024e48:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90024e4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024e4e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90024e52:	930a      	str	r3, [sp, #40]	@ 0x28
90024e54:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90024e56:	2b00      	cmp	r3, #0
90024e58:	f340 81ec 	ble.w	90025234 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90024e5c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024e60:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024e62:	ee30 0a04 	vadd.f32	s0, s0, s8
90024e66:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024e6a:	eef0 6a62 	vmov.f32	s13, s5
90024e6e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024e72:	ee31 1a05 	vadd.f32	s2, s2, s10
90024e76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024e7a:	ee16 4a90 	vmov	r4, s13
90024e7e:	eef0 6a43 	vmov.f32	s13, s6
90024e82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024e86:	ee16 6a90 	vmov	r6, s13
90024e8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024e8e:	ee61 7a27 	vmul.f32	s15, s2, s15
90024e92:	ee77 2a62 	vsub.f32	s5, s14, s5
90024e96:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024e9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024e9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024ea2:	ee12 2a90 	vmov	r2, s5
90024ea6:	eef0 2a47 	vmov.f32	s5, s14
90024eaa:	fb92 f3f3 	sdiv	r3, r2, r3
90024eae:	ee13 2a10 	vmov	r2, s6
90024eb2:	9327      	str	r3, [sp, #156]	@ 0x9c
90024eb4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024eb6:	eeb0 3a67 	vmov.f32	s6, s15
90024eba:	fb92 f3f3 	sdiv	r3, r2, r3
90024ebe:	9328      	str	r3, [sp, #160]	@ 0xa0
90024ec0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90024ec2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90024ec4:	3b01      	subs	r3, #1
90024ec6:	9316      	str	r3, [sp, #88]	@ 0x58
90024ec8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024eca:	bf08      	it	eq
90024ecc:	4613      	moveq	r3, r2
90024ece:	9307      	str	r3, [sp, #28]
90024ed0:	e622      	b.n	90024b18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90024ed2:	2800      	cmp	r0, #0
90024ed4:	f43f ae92 	beq.w	90024bfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90024ed8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90024edc:	9308      	str	r3, [sp, #32]
90024ede:	0e1b      	lsrs	r3, r3, #24
90024ee0:	9310      	str	r3, [sp, #64]	@ 0x40
90024ee2:	e68b      	b.n	90024bfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90024ee4:	8839      	ldrh	r1, [r7, #0]
90024ee6:	43db      	mvns	r3, r3
90024ee8:	4dd4      	ldr	r5, [pc, #848]	@ (9002523c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90024eea:	ea4f 2e21 	mov.w	lr, r1, asr #8
90024eee:	fa5f f883 	uxtb.w	r8, r3
90024ef2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90024ef6:	10c8      	asrs	r0, r1, #3
90024ef8:	00cb      	lsls	r3, r1, #3
90024efa:	fb0e fe08 	mul.w	lr, lr, r8
90024efe:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90024f02:	b2db      	uxtb	r3, r3
90024f04:	f10e 0101 	add.w	r1, lr, #1
90024f08:	fb00 f008 	mul.w	r0, r0, r8
90024f0c:	fb03 f308 	mul.w	r3, r3, r8
90024f10:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90024f14:	ea4f 411c 	mov.w	r1, ip, lsr #16
90024f18:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90024f1c:	f100 0e01 	add.w	lr, r0, #1
90024f20:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90024f24:	b2c9      	uxtb	r1, r1
90024f26:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90024f2a:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90024f2e:	00d2      	lsls	r2, r2, #3
90024f30:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024f34:	430a      	orrs	r2, r1
90024f36:	1c59      	adds	r1, r3, #1
90024f38:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90024f3c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90024f40:	e748      	b.n	90024dd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90024f42:	f112 0801 	adds.w	r8, r2, #1
90024f46:	f53f af4b 	bmi.w	90024de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024f4a:	4543      	cmp	r3, r8
90024f4c:	f6ff af48 	blt.w	90024de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024f50:	f11c 0801 	adds.w	r8, ip, #1
90024f54:	f53f af44 	bmi.w	90024de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024f58:	45c6      	cmp	lr, r8
90024f5a:	f6ff af41 	blt.w	90024de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024f5e:	b21b      	sxth	r3, r3
90024f60:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90024f64:	fa0f f28e 	sxth.w	r2, lr
90024f68:	e9cd 1003 	strd	r1, r0, [sp, #12]
90024f6c:	9200      	str	r2, [sp, #0]
90024f6e:	4639      	mov	r1, r7
90024f70:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90024f72:	9819      	ldr	r0, [sp, #100]	@ 0x64
90024f74:	f7ff fc88 	bl	90024888 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90024f78:	e732      	b.n	90024de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024f7a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90024f7c:	1421      	asrs	r1, r4, #16
90024f7e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90024f80:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024f84:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90024f88:	1433      	asrs	r3, r6, #16
90024f8a:	f3c6 3003 	ubfx	r0, r6, #12, #4
90024f8e:	fb07 1303 	mla	r3, r7, r3, r1
90024f92:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90024f94:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90024f98:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90024f9c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90024fa0:	2a00      	cmp	r2, #0
90024fa2:	f000 8108 	beq.w	900251b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90024fa6:	684d      	ldr	r5, [r1, #4]
90024fa8:	950d      	str	r5, [sp, #52]	@ 0x34
90024faa:	0e2d      	lsrs	r5, r5, #24
90024fac:	9514      	str	r5, [sp, #80]	@ 0x50
90024fae:	b178      	cbz	r0, 90024fd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90024fb0:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
90024fb4:	3f01      	subs	r7, #1
90024fb6:	00bf      	lsls	r7, r7, #2
90024fb8:	3704      	adds	r7, #4
90024fba:	eb01 0e07 	add.w	lr, r1, r7
90024fbe:	59c9      	ldr	r1, [r1, r7]
90024fc0:	9109      	str	r1, [sp, #36]	@ 0x24
90024fc2:	0e09      	lsrs	r1, r1, #24
90024fc4:	9111      	str	r1, [sp, #68]	@ 0x44
90024fc6:	f8de 1004 	ldr.w	r1, [lr, #4]
90024fca:	910e      	str	r1, [sp, #56]	@ 0x38
90024fcc:	0e09      	lsrs	r1, r1, #24
90024fce:	9115      	str	r1, [sp, #84]	@ 0x54
90024fd0:	b292      	uxth	r2, r2
90024fd2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90024fd4:	b280      	uxth	r0, r0
90024fd6:	fb02 f900 	mul.w	r9, r2, r0
90024fda:	0112      	lsls	r2, r2, #4
90024fdc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90024fe0:	eba2 0e09 	sub.w	lr, r2, r9
90024fe4:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90024fe8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90024fea:	b280      	uxth	r0, r0
90024fec:	fa1f fe8e 	uxth.w	lr, lr
90024ff0:	1a09      	subs	r1, r1, r0
90024ff2:	fb0e f202 	mul.w	r2, lr, r2
90024ff6:	b289      	uxth	r1, r1
90024ff8:	fb01 220c 	mla	r2, r1, ip, r2
90024ffc:	fb00 2205 	mla	r2, r0, r5, r2
90025000:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90025002:	fb09 2205 	mla	r2, r9, r5, r2
90025006:	f3c2 2207 	ubfx	r2, r2, #8, #8
9002500a:	2a00      	cmp	r2, #0
9002500c:	f000 80ca 	beq.w	900251a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90025010:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90025014:	d019      	beq.n	9002504a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90025016:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002501a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002501e:	fb0c fa0a 	mul.w	sl, ip, sl
90025022:	fb0c fc03 	mul.w	ip, ip, r3
90025026:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002502a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002502e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90025032:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025036:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002503a:	4453      	add	r3, sl
9002503c:	0a3f      	lsrs	r7, r7, #8
9002503e:	0a1b      	lsrs	r3, r3, #8
90025040:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90025044:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025048:	433b      	orrs	r3, r7
9002504a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9002504c:	2dff      	cmp	r5, #255	@ 0xff
9002504e:	d020      	beq.n	90025092 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90025050:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90025052:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90025056:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90025058:	436f      	muls	r7, r5
9002505a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002505c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025060:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90025064:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90025066:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002506a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002506e:	fb05 fa0a 	mul.w	sl, r5, sl
90025072:	44bc      	add	ip, r7
90025074:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025078:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002507c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025080:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025084:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025088:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002508c:	ea4c 050a 	orr.w	r5, ip, sl
90025090:	950d      	str	r5, [sp, #52]	@ 0x34
90025092:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90025094:	2dff      	cmp	r5, #255	@ 0xff
90025096:	d020      	beq.n	900250da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90025098:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002509a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002509e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900250a0:	436f      	muls	r7, r5
900250a2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900250a4:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900250a8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900250aa:	fb05 fa0c 	mul.w	sl, r5, ip
900250ae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900250b2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900250b6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900250ba:	44bc      	add	ip, r7
900250bc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900250c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900250c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900250c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900250cc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900250d0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900250d4:	ea4c 050a 	orr.w	r5, ip, sl
900250d8:	9509      	str	r5, [sp, #36]	@ 0x24
900250da:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900250dc:	2dff      	cmp	r5, #255	@ 0xff
900250de:	d020      	beq.n	90025122 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
900250e0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900250e2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900250e6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900250e8:	436f      	muls	r7, r5
900250ea:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900250ec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900250f0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900250f4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900250f6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900250fa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900250fe:	fb05 fa0a 	mul.w	sl, r5, sl
90025102:	44bc      	add	ip, r7
90025104:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025108:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002510c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025110:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025114:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025118:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002511c:	ea4c 050a 	orr.w	r5, ip, sl
90025120:	950e      	str	r5, [sp, #56]	@ 0x38
90025122:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90025124:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90025128:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002512c:	2aff      	cmp	r2, #255	@ 0xff
9002512e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90025132:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90025134:	fb0e f707 	mul.w	r7, lr, r7
90025138:	fb01 770c 	mla	r7, r1, ip, r7
9002513c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90025140:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90025142:	fb00 770c 	mla	r7, r0, ip, r7
90025146:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
9002514a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002514c:	fb09 770c 	mla	r7, r9, ip, r7
90025150:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90025154:	fb0e fe0c 	mul.w	lr, lr, ip
90025158:	ea4f 2717 	mov.w	r7, r7, lsr #8
9002515c:	fb01 e303 	mla	r3, r1, r3, lr
90025160:	9909      	ldr	r1, [sp, #36]	@ 0x24
90025162:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90025166:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
9002516a:	990e      	ldr	r1, [sp, #56]	@ 0x38
9002516c:	fb00 330a 	mla	r3, r0, sl, r3
90025170:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90025174:	fb09 3c0c 	mla	ip, r9, ip, r3
90025178:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002517c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90025180:	ea47 070c 	orr.w	r7, r7, ip
90025184:	ea4f 2317 	mov.w	r3, r7, lsr #8
90025188:	d11e      	bne.n	900251c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
9002518a:	097a      	lsrs	r2, r7, #5
9002518c:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
90025190:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90025194:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025198:	f023 0307 	bic.w	r3, r3, #7
9002519c:	4313      	orrs	r3, r2
9002519e:	431f      	orrs	r7, r3
900251a0:	f8a8 7000 	strh.w	r7, [r8]
900251a4:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900251a6:	f108 0802 	add.w	r8, r8, #2
900251aa:	f10b 3bff 	add.w	fp, fp, #4294967295
900251ae:	441c      	add	r4, r3
900251b0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900251b2:	441e      	add	r6, r3
900251b4:	e643      	b.n	90024e3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900251b6:	2800      	cmp	r0, #0
900251b8:	f43f af0a 	beq.w	90024fd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900251bc:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
900251c0:	9109      	str	r1, [sp, #36]	@ 0x24
900251c2:	0e09      	lsrs	r1, r1, #24
900251c4:	9111      	str	r1, [sp, #68]	@ 0x44
900251c6:	e703      	b.n	90024fd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900251c8:	f8b8 1000 	ldrh.w	r1, [r8]
900251cc:	43d2      	mvns	r2, r2
900251ce:	ea4f 2c21 	mov.w	ip, r1, asr #8
900251d2:	fa5f fe82 	uxtb.w	lr, r2
900251d6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900251da:	10c8      	asrs	r0, r1, #3
900251dc:	00ca      	lsls	r2, r1, #3
900251de:	fb0c fc0e 	mul.w	ip, ip, lr
900251e2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900251e6:	b2d2      	uxtb	r2, r2
900251e8:	f10c 0101 	add.w	r1, ip, #1
900251ec:	fb00 f00e 	mul.w	r0, r0, lr
900251f0:	fb02 f20e 	mul.w	r2, r2, lr
900251f4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900251f8:	0c39      	lsrs	r1, r7, #16
900251fa:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900251fe:	490f      	ldr	r1, [pc, #60]	@ (9002523c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90025200:	fa5f fc8c 	uxtb.w	ip, ip
90025204:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90025208:	1c41      	adds	r1, r0, #1
9002520a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9002520e:	1c51      	adds	r1, r2, #1
90025210:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90025214:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90025218:	00c0      	lsls	r0, r0, #3
9002521a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9002521e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025222:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90025226:	ea4c 0c00 	orr.w	ip, ip, r0
9002522a:	ea47 0c0c 	orr.w	ip, r7, ip
9002522e:	f8a8 c000 	strh.w	ip, [r8]
90025232:	e7b7      	b.n	900251a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90025234:	b01b      	add	sp, #108	@ 0x6c
90025236:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002523a:	bf00      	nop
9002523c:	fffff800 	.word	0xfffff800

90025240 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90025240:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90025244:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90025248:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
9002524c:	2d00      	cmp	r5, #0
9002524e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90025252:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90025256:	fb05 0e03 	mla	lr, r5, r3, r0
9002525a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
9002525e:	f2c0 808c 	blt.w	9002537a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90025262:	45a9      	cmp	r9, r5
90025264:	f340 8089 	ble.w	9002537a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90025268:	2800      	cmp	r0, #0
9002526a:	f2c0 8084 	blt.w	90025376 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
9002526e:	4580      	cmp	r8, r0
90025270:	f340 8081 	ble.w	90025376 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90025274:	ea4f 045e 	mov.w	r4, lr, lsr #1
90025278:	f01e 0f01 	tst.w	lr, #1
9002527c:	5d16      	ldrb	r6, [r2, r4]
9002527e:	bf0c      	ite	eq
90025280:	f006 060f 	andeq.w	r6, r6, #15
90025284:	1136      	asrne	r6, r6, #4
90025286:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002528a:	b2f6      	uxtb	r6, r6
9002528c:	1c44      	adds	r4, r0, #1
9002528e:	d477      	bmi.n	90025380 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90025290:	45a0      	cmp	r8, r4
90025292:	dd75      	ble.n	90025380 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90025294:	2f00      	cmp	r7, #0
90025296:	d075      	beq.n	90025384 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90025298:	f10e 0a01 	add.w	sl, lr, #1
9002529c:	ea4f 045a 	mov.w	r4, sl, lsr #1
900252a0:	f01a 0f01 	tst.w	sl, #1
900252a4:	5d14      	ldrb	r4, [r2, r4]
900252a6:	bf0c      	ite	eq
900252a8:	f004 040f 	andeq.w	r4, r4, #15
900252ac:	1124      	asrne	r4, r4, #4
900252ae:	eb04 1404 	add.w	r4, r4, r4, lsl #4
900252b2:	b2e4      	uxtb	r4, r4
900252b4:	3501      	adds	r5, #1
900252b6:	d469      	bmi.n	9002538c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
900252b8:	45a9      	cmp	r9, r5
900252ba:	dd67      	ble.n	9002538c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
900252bc:	f1bc 0f00 	cmp.w	ip, #0
900252c0:	d067      	beq.n	90025392 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
900252c2:	2800      	cmp	r0, #0
900252c4:	db60      	blt.n	90025388 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
900252c6:	4580      	cmp	r8, r0
900252c8:	dd5e      	ble.n	90025388 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
900252ca:	eb03 090e 	add.w	r9, r3, lr
900252ce:	ea4f 0559 	mov.w	r5, r9, lsr #1
900252d2:	f019 0f01 	tst.w	r9, #1
900252d6:	5d55      	ldrb	r5, [r2, r5]
900252d8:	bf0c      	ite	eq
900252da:	f005 050f 	andeq.w	r5, r5, #15
900252de:	112d      	asrne	r5, r5, #4
900252e0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
900252e4:	b2ed      	uxtb	r5, r5
900252e6:	3001      	adds	r0, #1
900252e8:	d456      	bmi.n	90025398 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
900252ea:	4580      	cmp	r8, r0
900252ec:	dd54      	ble.n	90025398 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
900252ee:	2f00      	cmp	r7, #0
900252f0:	d054      	beq.n	9002539c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
900252f2:	3301      	adds	r3, #1
900252f4:	449e      	add	lr, r3
900252f6:	ea4f 035e 	mov.w	r3, lr, lsr #1
900252fa:	f01e 0f01 	tst.w	lr, #1
900252fe:	5cd0      	ldrb	r0, [r2, r3]
90025300:	bf0c      	ite	eq
90025302:	f000 000f 	andeq.w	r0, r0, #15
90025306:	1100      	asrne	r0, r0, #4
90025308:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002530c:	b2c3      	uxtb	r3, r0
9002530e:	b2ba      	uxth	r2, r7
90025310:	fa1f fc8c 	uxth.w	ip, ip
90025314:	fb02 f00c 	mul.w	r0, r2, ip
90025318:	0112      	lsls	r2, r2, #4
9002531a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
9002531e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90025322:	1a12      	subs	r2, r2, r0
90025324:	fa1f fc8c 	uxth.w	ip, ip
90025328:	b292      	uxth	r2, r2
9002532a:	eba7 070c 	sub.w	r7, r7, ip
9002532e:	4362      	muls	r2, r4
90025330:	b2bf      	uxth	r7, r7
90025332:	fb06 2207 	mla	r2, r6, r7, r2
90025336:	fb0c 2505 	mla	r5, ip, r5, r2
9002533a:	fb00 5303 	mla	r3, r0, r3, r5
9002533e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025342:	b1b3      	cbz	r3, 90025372 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90025344:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
90025348:	435a      	muls	r2, r3
9002534a:	1c53      	adds	r3, r2, #1
9002534c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025350:	4a2d      	ldr	r2, [pc, #180]	@ (90025408 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90025352:	121b      	asrs	r3, r3, #8
90025354:	6812      	ldr	r2, [r2, #0]
90025356:	2bff      	cmp	r3, #255	@ 0xff
90025358:	ea4f 2612 	mov.w	r6, r2, lsr #8
9002535c:	d120      	bne.n	900253a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
9002535e:	0950      	lsrs	r0, r2, #5
90025360:	4b2a      	ldr	r3, [pc, #168]	@ (9002540c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90025362:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025366:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002536a:	4033      	ands	r3, r6
9002536c:	4318      	orrs	r0, r3
9002536e:	4302      	orrs	r2, r0
90025370:	800a      	strh	r2, [r1, #0]
90025372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90025376:	2600      	movs	r6, #0
90025378:	e788      	b.n	9002528c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
9002537a:	2400      	movs	r4, #0
9002537c:	4626      	mov	r6, r4
9002537e:	e799      	b.n	900252b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025380:	2400      	movs	r4, #0
90025382:	e797      	b.n	900252b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025384:	463c      	mov	r4, r7
90025386:	e795      	b.n	900252b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025388:	2500      	movs	r5, #0
9002538a:	e7ac      	b.n	900252e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
9002538c:	2300      	movs	r3, #0
9002538e:	461d      	mov	r5, r3
90025390:	e7bd      	b.n	9002530e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025392:	4663      	mov	r3, ip
90025394:	4665      	mov	r5, ip
90025396:	e7ba      	b.n	9002530e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025398:	2300      	movs	r3, #0
9002539a:	e7b8      	b.n	9002530e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
9002539c:	463b      	mov	r3, r7
9002539e:	e7b6      	b.n	9002530e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900253a0:	880d      	ldrh	r5, [r1, #0]
900253a2:	b29f      	uxth	r7, r3
900253a4:	f3c2 4007 	ubfx	r0, r2, #16, #8
900253a8:	43db      	mvns	r3, r3
900253aa:	122c      	asrs	r4, r5, #8
900253ac:	fb10 f007 	smulbb	r0, r0, r7
900253b0:	b2db      	uxtb	r3, r3
900253b2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900253b6:	b2f6      	uxtb	r6, r6
900253b8:	b2d2      	uxtb	r2, r2
900253ba:	fb04 0403 	mla	r4, r4, r3, r0
900253be:	10e8      	asrs	r0, r5, #3
900253c0:	fb12 f207 	smulbb	r2, r2, r7
900253c4:	00ed      	lsls	r5, r5, #3
900253c6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900253ca:	b2a4      	uxth	r4, r4
900253cc:	fb16 f607 	smulbb	r6, r6, r7
900253d0:	b2ed      	uxtb	r5, r5
900253d2:	fb00 6603 	mla	r6, r0, r3, r6
900253d6:	fb05 2303 	mla	r3, r5, r3, r2
900253da:	b2b0      	uxth	r0, r6
900253dc:	b29a      	uxth	r2, r3
900253de:	1c63      	adds	r3, r4, #1
900253e0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
900253e4:	1c53      	adds	r3, r2, #1
900253e6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900253ea:	1c42      	adds	r2, r0, #1
900253ec:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
900253f0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900253f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900253f8:	0940      	lsrs	r0, r0, #5
900253fa:	4323      	orrs	r3, r4
900253fc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025400:	4303      	orrs	r3, r0
90025402:	800b      	strh	r3, [r1, #0]
90025404:	e7b5      	b.n	90025372 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90025406:	bf00      	nop
90025408:	2001aa50 	.word	0x2001aa50
9002540c:	00fff800 	.word	0x00fff800

90025410 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025414:	b097      	sub	sp, #92	@ 0x5c
90025416:	9214      	str	r2, [sp, #80]	@ 0x50
90025418:	9309      	str	r3, [sp, #36]	@ 0x24
9002541a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
9002541c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90025420:	9015      	str	r0, [sp, #84]	@ 0x54
90025422:	910d      	str	r1, [sp, #52]	@ 0x34
90025424:	6850      	ldr	r0, [r2, #4]
90025426:	930f      	str	r3, [sp, #60]	@ 0x3c
90025428:	6812      	ldr	r2, [r2, #0]
9002542a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
9002542e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
90025432:	fb00 1303 	mla	r3, r0, r3, r1
90025436:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002543a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002543c:	689b      	ldr	r3, [r3, #8]
9002543e:	3301      	adds	r3, #1
90025440:	f023 0301 	bic.w	r3, r3, #1
90025444:	930a      	str	r3, [sp, #40]	@ 0x28
90025446:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025448:	681f      	ldr	r7, [r3, #0]
9002544a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002544c:	2b00      	cmp	r3, #0
9002544e:	dc03      	bgt.n	90025458 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025450:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90025452:	2b00      	cmp	r3, #0
90025454:	f340 8289 	ble.w	9002596a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90025458:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002545a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002545e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025462:	1e48      	subs	r0, r1, #1
90025464:	f102 3cff 	add.w	ip, r2, #4294967295
90025468:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002546a:	2b00      	cmp	r3, #0
9002546c:	f340 80c5 	ble.w	900255fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90025470:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025474:	ea4f 4326 	mov.w	r3, r6, asr #16
90025478:	d406      	bmi.n	90025488 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002547a:	4586      	cmp	lr, r0
9002547c:	da04      	bge.n	90025488 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002547e:	2b00      	cmp	r3, #0
90025480:	db02      	blt.n	90025488 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025482:	4563      	cmp	r3, ip
90025484:	f2c0 80ba 	blt.w	900255fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90025488:	f11e 0e01 	adds.w	lr, lr, #1
9002548c:	f100 80ab 	bmi.w	900255e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025490:	4571      	cmp	r1, lr
90025492:	f2c0 80a8 	blt.w	900255e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025496:	3301      	adds	r3, #1
90025498:	f100 80a5 	bmi.w	900255e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
9002549c:	429a      	cmp	r2, r3
9002549e:	f2c0 80a2 	blt.w	900255e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900254a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900254a4:	46c8      	mov	r8, r9
900254a6:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
900254aa:	930e      	str	r3, [sp, #56]	@ 0x38
900254ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900254ae:	2b00      	cmp	r3, #0
900254b0:	f340 80c4 	ble.w	9002563c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
900254b4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900254b6:	1430      	asrs	r0, r6, #16
900254b8:	f3c4 3203 	ubfx	r2, r4, #12, #4
900254bc:	f3c6 3103 	ubfx	r1, r6, #12, #4
900254c0:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
900254c4:	1423      	asrs	r3, r4, #16
900254c6:	f100 814f 	bmi.w	90025768 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900254ca:	f10c 3bff 	add.w	fp, ip, #4294967295
900254ce:	455b      	cmp	r3, fp
900254d0:	f280 814a 	bge.w	90025768 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900254d4:	2800      	cmp	r0, #0
900254d6:	f2c0 8147 	blt.w	90025768 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900254da:	f10e 3bff 	add.w	fp, lr, #4294967295
900254de:	4558      	cmp	r0, fp
900254e0:	f280 8142 	bge.w	90025768 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900254e4:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
900254e6:	fb00 3305 	mla	r3, r0, r5, r3
900254ea:	0858      	lsrs	r0, r3, #1
900254ec:	07dd      	lsls	r5, r3, #31
900254ee:	f817 c000 	ldrb.w	ip, [r7, r0]
900254f2:	bf54      	ite	pl
900254f4:	f00c 0c0f 	andpl.w	ip, ip, #15
900254f8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900254fc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025500:	fa5f fc8c 	uxtb.w	ip, ip
90025504:	2a00      	cmp	r2, #0
90025506:	f000 80dd 	beq.w	900256c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
9002550a:	1c58      	adds	r0, r3, #1
9002550c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90025510:	07c0      	lsls	r0, r0, #31
90025512:	f817 e00e 	ldrb.w	lr, [r7, lr]
90025516:	bf54      	ite	pl
90025518:	f00e 0e0f 	andpl.w	lr, lr, #15
9002551c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90025520:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90025524:	fa5f f08e 	uxtb.w	r0, lr
90025528:	9010      	str	r0, [sp, #64]	@ 0x40
9002552a:	b1d9      	cbz	r1, 90025564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002552c:	4453      	add	r3, sl
9002552e:	0858      	lsrs	r0, r3, #1
90025530:	07dd      	lsls	r5, r3, #31
90025532:	f103 0301 	add.w	r3, r3, #1
90025536:	5c38      	ldrb	r0, [r7, r0]
90025538:	bf54      	ite	pl
9002553a:	f000 000f 	andpl.w	r0, r0, #15
9002553e:	1100      	asrmi	r0, r0, #4
90025540:	07dd      	lsls	r5, r3, #31
90025542:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90025546:	b2c0      	uxtb	r0, r0
90025548:	900b      	str	r0, [sp, #44]	@ 0x2c
9002554a:	ea4f 0053 	mov.w	r0, r3, lsr #1
9002554e:	f817 e000 	ldrb.w	lr, [r7, r0]
90025552:	bf54      	ite	pl
90025554:	f00e 030f 	andpl.w	r3, lr, #15
90025558:	ea4f 132e 	movmi.w	r3, lr, asr #4
9002555c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90025560:	b2db      	uxtb	r3, r3
90025562:	9311      	str	r3, [sp, #68]	@ 0x44
90025564:	b292      	uxth	r2, r2
90025566:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90025568:	b289      	uxth	r1, r1
9002556a:	fb02 f301 	mul.w	r3, r2, r1
9002556e:	0112      	lsls	r2, r2, #4
90025570:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90025574:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90025578:	1ad2      	subs	r2, r2, r3
9002557a:	b289      	uxth	r1, r1
9002557c:	b292      	uxth	r2, r2
9002557e:	1a40      	subs	r0, r0, r1
90025580:	436a      	muls	r2, r5
90025582:	b280      	uxth	r0, r0
90025584:	fb0c 2c00 	mla	ip, ip, r0, r2
90025588:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002558a:	fb01 c102 	mla	r1, r1, r2, ip
9002558e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90025590:	fb03 1302 	mla	r3, r3, r2, r1
90025594:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025598:	b1db      	cbz	r3, 900255d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002559a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002559c:	4353      	muls	r3, r2
9002559e:	1c5a      	adds	r2, r3, #1
900255a0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900255a4:	4ac6      	ldr	r2, [pc, #792]	@ (900258c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900255a6:	121b      	asrs	r3, r3, #8
900255a8:	6812      	ldr	r2, [r2, #0]
900255aa:	2bff      	cmp	r3, #255	@ 0xff
900255ac:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900255b0:	f040 8099 	bne.w	900256e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
900255b4:	0953      	lsrs	r3, r2, #5
900255b6:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
900255ba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900255be:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900255c2:	f02c 0c07 	bic.w	ip, ip, #7
900255c6:	ea43 0c0c 	orr.w	ip, r3, ip
900255ca:	ea4c 0202 	orr.w	r2, ip, r2
900255ce:	f8a8 2000 	strh.w	r2, [r8]
900255d2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
900255d4:	f108 0802 	add.w	r8, r8, #2
900255d8:	441c      	add	r4, r3
900255da:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900255dc:	441e      	add	r6, r3
900255de:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900255e0:	3b01      	subs	r3, #1
900255e2:	930e      	str	r3, [sp, #56]	@ 0x38
900255e4:	e762      	b.n	900254ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
900255e6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
900255e8:	f109 0902 	add.w	r9, r9, #2
900255ec:	441c      	add	r4, r3
900255ee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900255f0:	441e      	add	r6, r3
900255f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900255f4:	3b01      	subs	r3, #1
900255f6:	9309      	str	r3, [sp, #36]	@ 0x24
900255f8:	e736      	b.n	90025468 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900255fa:	d024      	beq.n	90025646 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
900255fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900255fe:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90025600:	3b01      	subs	r3, #1
90025602:	fb00 4003 	mla	r0, r0, r3, r4
90025606:	1400      	asrs	r0, r0, #16
90025608:	f53f af4b 	bmi.w	900254a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002560c:	3901      	subs	r1, #1
9002560e:	4288      	cmp	r0, r1
90025610:	f6bf af47 	bge.w	900254a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025614:	9924      	ldr	r1, [sp, #144]	@ 0x90
90025616:	fb01 6303 	mla	r3, r1, r3, r6
9002561a:	141b      	asrs	r3, r3, #16
9002561c:	f53f af41 	bmi.w	900254a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025620:	3a01      	subs	r2, #1
90025622:	4293      	cmp	r3, r2
90025624:	f6bf af3d 	bge.w	900254a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025628:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9002562c:	46c8      	mov	r8, r9
9002562e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90025632:	930e      	str	r3, [sp, #56]	@ 0x38
90025634:	f1bb 0f00 	cmp.w	fp, #0
90025638:	f300 80b7 	bgt.w	900257aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
9002563c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002563e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90025642:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90025646:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90025648:	2b00      	cmp	r3, #0
9002564a:	f340 818e 	ble.w	9002596a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
9002564e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025652:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025654:	ee30 0a04 	vadd.f32	s0, s0, s8
90025658:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002565c:	eef0 6a62 	vmov.f32	s13, s5
90025660:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025664:	ee31 1a05 	vadd.f32	s2, s2, s10
90025668:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002566c:	ee16 4a90 	vmov	r4, s13
90025670:	eef0 6a43 	vmov.f32	s13, s6
90025674:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025678:	ee16 6a90 	vmov	r6, s13
9002567c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025680:	ee61 7a27 	vmul.f32	s15, s2, s15
90025684:	ee77 2a62 	vsub.f32	s5, s14, s5
90025688:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002568c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025690:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025694:	ee12 2a90 	vmov	r2, s5
90025698:	eef0 2a47 	vmov.f32	s5, s14
9002569c:	fb92 f3f3 	sdiv	r3, r2, r3
900256a0:	ee13 2a10 	vmov	r2, s6
900256a4:	9323      	str	r3, [sp, #140]	@ 0x8c
900256a6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900256a8:	eeb0 3a67 	vmov.f32	s6, s15
900256ac:	fb92 f3f3 	sdiv	r3, r2, r3
900256b0:	9324      	str	r3, [sp, #144]	@ 0x90
900256b2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900256b4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900256b6:	3b01      	subs	r3, #1
900256b8:	930d      	str	r3, [sp, #52]	@ 0x34
900256ba:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900256bc:	bf08      	it	eq
900256be:	4613      	moveq	r3, r2
900256c0:	9309      	str	r3, [sp, #36]	@ 0x24
900256c2:	e6c2      	b.n	9002544a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900256c4:	2900      	cmp	r1, #0
900256c6:	f43f af4d 	beq.w	90025564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900256ca:	eb0a 0003 	add.w	r0, sl, r3
900256ce:	0843      	lsrs	r3, r0, #1
900256d0:	07c0      	lsls	r0, r0, #31
900256d2:	5cfb      	ldrb	r3, [r7, r3]
900256d4:	bf54      	ite	pl
900256d6:	f003 030f 	andpl.w	r3, r3, #15
900256da:	111b      	asrmi	r3, r3, #4
900256dc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900256e0:	b2db      	uxtb	r3, r3
900256e2:	930b      	str	r3, [sp, #44]	@ 0x2c
900256e4:	e73e      	b.n	90025564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900256e6:	f8b8 e000 	ldrh.w	lr, [r8]
900256ea:	fa1f fb83 	uxth.w	fp, r3
900256ee:	f3c2 4107 	ubfx	r1, r2, #16, #8
900256f2:	43db      	mvns	r3, r3
900256f4:	ea4f 202e 	mov.w	r0, lr, asr #8
900256f8:	fb11 f10b 	smulbb	r1, r1, fp
900256fc:	b2db      	uxtb	r3, r3
900256fe:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025702:	fa5f fc8c 	uxtb.w	ip, ip
90025706:	b2d2      	uxtb	r2, r2
90025708:	fb00 1003 	mla	r0, r0, r3, r1
9002570c:	ea4f 01ee 	mov.w	r1, lr, asr #3
90025710:	fb1c fc0b 	smulbb	ip, ip, fp
90025714:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90025718:	b280      	uxth	r0, r0
9002571a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002571e:	fb12 fb0b 	smulbb	fp, r2, fp
90025722:	fa5f fe8e 	uxtb.w	lr, lr
90025726:	fb01 cc03 	mla	ip, r1, r3, ip
9002572a:	fb0e bb03 	mla	fp, lr, r3, fp
9002572e:	1c43      	adds	r3, r0, #1
90025730:	fa1f fc8c 	uxth.w	ip, ip
90025734:	fa1f fb8b 	uxth.w	fp, fp
90025738:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002573c:	f10c 0101 	add.w	r1, ip, #1
90025740:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
90025744:	f10b 0001 	add.w	r0, fp, #1
90025748:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002574c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90025750:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90025754:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90025758:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9002575c:	4318      	orrs	r0, r3
9002575e:	ea40 000c 	orr.w	r0, r0, ip
90025762:	f8a8 0000 	strh.w	r0, [r8]
90025766:	e734      	b.n	900255d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025768:	f113 0b01 	adds.w	fp, r3, #1
9002576c:	f53f af31 	bmi.w	900255d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025770:	45dc      	cmp	ip, fp
90025772:	f6ff af2e 	blt.w	900255d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025776:	f110 0b01 	adds.w	fp, r0, #1
9002577a:	f53f af2a 	bmi.w	900255d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002577e:	45de      	cmp	lr, fp
90025780:	f6ff af27 	blt.w	900255d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025784:	9302      	str	r3, [sp, #8]
90025786:	fa0f f38e 	sxth.w	r3, lr
9002578a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9002578c:	9301      	str	r3, [sp, #4]
9002578e:	fa0f f38c 	sxth.w	r3, ip
90025792:	e9cd 0203 	strd	r0, r2, [sp, #12]
90025796:	e9cd 1505 	strd	r1, r5, [sp, #20]
9002579a:	9300      	str	r3, [sp, #0]
9002579c:	463a      	mov	r2, r7
9002579e:	4653      	mov	r3, sl
900257a0:	4641      	mov	r1, r8
900257a2:	9815      	ldr	r0, [sp, #84]	@ 0x54
900257a4:	f7ff fd4c 	bl	90025240 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
900257a8:	e713      	b.n	900255d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900257aa:	1422      	asrs	r2, r4, #16
900257ac:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
900257ae:	1433      	asrs	r3, r6, #16
900257b0:	f3c4 3103 	ubfx	r1, r4, #12, #4
900257b4:	f3c6 3003 	ubfx	r0, r6, #12, #4
900257b8:	fb05 2303 	mla	r3, r5, r3, r2
900257bc:	085a      	lsrs	r2, r3, #1
900257be:	07dd      	lsls	r5, r3, #31
900257c0:	5cba      	ldrb	r2, [r7, r2]
900257c2:	bf54      	ite	pl
900257c4:	f002 020f 	andpl.w	r2, r2, #15
900257c8:	1112      	asrmi	r2, r2, #4
900257ca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900257ce:	b2d2      	uxtb	r2, r2
900257d0:	2900      	cmp	r1, #0
900257d2:	d077      	beq.n	900258c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900257d4:	f103 0e01 	add.w	lr, r3, #1
900257d8:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
900257dc:	f01e 0f01 	tst.w	lr, #1
900257e0:	f817 c00c 	ldrb.w	ip, [r7, ip]
900257e4:	bf0c      	ite	eq
900257e6:	f00c 0c0f 	andeq.w	ip, ip, #15
900257ea:	ea4f 1c2c 	movne.w	ip, ip, asr #4
900257ee:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900257f2:	fa5f f58c 	uxtb.w	r5, ip
900257f6:	9512      	str	r5, [sp, #72]	@ 0x48
900257f8:	b308      	cbz	r0, 9002583e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
900257fa:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900257fc:	442b      	add	r3, r5
900257fe:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90025802:	07dd      	lsls	r5, r3, #31
90025804:	f103 0301 	add.w	r3, r3, #1
90025808:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002580c:	bf54      	ite	pl
9002580e:	f00c 0c0f 	andpl.w	ip, ip, #15
90025812:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90025816:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002581a:	fa5f f58c 	uxtb.w	r5, ip
9002581e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90025822:	950c      	str	r5, [sp, #48]	@ 0x30
90025824:	07dd      	lsls	r5, r3, #31
90025826:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002582a:	bf54      	ite	pl
9002582c:	f00c 0c0f 	andpl.w	ip, ip, #15
90025830:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90025834:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025838:	fa5f f38c 	uxtb.w	r3, ip
9002583c:	9313      	str	r3, [sp, #76]	@ 0x4c
9002583e:	b289      	uxth	r1, r1
90025840:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90025842:	b280      	uxth	r0, r0
90025844:	fb01 f300 	mul.w	r3, r1, r0
90025848:	0109      	lsls	r1, r1, #4
9002584a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
9002584e:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
90025852:	1ac9      	subs	r1, r1, r3
90025854:	b280      	uxth	r0, r0
90025856:	b289      	uxth	r1, r1
90025858:	ebac 0c00 	sub.w	ip, ip, r0
9002585c:	4369      	muls	r1, r5
9002585e:	fa1f fc8c 	uxth.w	ip, ip
90025862:	fb02 120c 	mla	r2, r2, ip, r1
90025866:	990c      	ldr	r1, [sp, #48]	@ 0x30
90025868:	fb00 2001 	mla	r0, r0, r1, r2
9002586c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9002586e:	fb03 0302 	mla	r3, r3, r2, r0
90025872:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025876:	b1d3      	cbz	r3, 900258ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90025878:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002587a:	4353      	muls	r3, r2
9002587c:	1c5a      	adds	r2, r3, #1
9002587e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90025882:	4a0f      	ldr	r2, [pc, #60]	@ (900258c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90025884:	121b      	asrs	r3, r3, #8
90025886:	6812      	ldr	r2, [r2, #0]
90025888:	2bff      	cmp	r3, #255	@ 0xff
9002588a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
9002588e:	d12d      	bne.n	900258ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90025890:	0953      	lsrs	r3, r2, #5
90025892:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90025896:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002589a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002589e:	f02c 0c07 	bic.w	ip, ip, #7
900258a2:	ea43 0c0c 	orr.w	ip, r3, ip
900258a6:	ea4c 0202 	orr.w	r2, ip, r2
900258aa:	f8a8 2000 	strh.w	r2, [r8]
900258ae:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
900258b0:	f108 0802 	add.w	r8, r8, #2
900258b4:	f10b 3bff 	add.w	fp, fp, #4294967295
900258b8:	441c      	add	r4, r3
900258ba:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900258bc:	441e      	add	r6, r3
900258be:	e6b9      	b.n	90025634 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
900258c0:	2001aa50 	.word	0x2001aa50
900258c4:	2800      	cmp	r0, #0
900258c6:	d0ba      	beq.n	9002583e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
900258c8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900258ca:	442b      	add	r3, r5
900258cc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
900258d0:	07db      	lsls	r3, r3, #31
900258d2:	f817 c00c 	ldrb.w	ip, [r7, ip]
900258d6:	bf54      	ite	pl
900258d8:	f00c 0c0f 	andpl.w	ip, ip, #15
900258dc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900258e0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900258e4:	fa5f f38c 	uxtb.w	r3, ip
900258e8:	930c      	str	r3, [sp, #48]	@ 0x30
900258ea:	e7a8      	b.n	9002583e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
900258ec:	f8b8 e000 	ldrh.w	lr, [r8]
900258f0:	fa1f fa83 	uxth.w	sl, r3
900258f4:	f3c2 4107 	ubfx	r1, r2, #16, #8
900258f8:	43db      	mvns	r3, r3
900258fa:	ea4f 202e 	mov.w	r0, lr, asr #8
900258fe:	fb11 f10a 	smulbb	r1, r1, sl
90025902:	b2db      	uxtb	r3, r3
90025904:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025908:	b2d2      	uxtb	r2, r2
9002590a:	fa5f fc8c 	uxtb.w	ip, ip
9002590e:	fb00 1003 	mla	r0, r0, r3, r1
90025912:	ea4f 01ee 	mov.w	r1, lr, asr #3
90025916:	fb12 f20a 	smulbb	r2, r2, sl
9002591a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002591e:	b280      	uxth	r0, r0
90025920:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90025924:	fb1c fc0a 	smulbb	ip, ip, sl
90025928:	fa5f fe8e 	uxtb.w	lr, lr
9002592c:	fb0e 2203 	mla	r2, lr, r3, r2
90025930:	fb01 cc03 	mla	ip, r1, r3, ip
90025934:	1c43      	adds	r3, r0, #1
90025936:	b292      	uxth	r2, r2
90025938:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002593c:	1c51      	adds	r1, r2, #1
9002593e:	fa1f fc8c 	uxth.w	ip, ip
90025942:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90025946:	eb01 2112 	add.w	r1, r1, r2, lsr #8
9002594a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002594e:	4308      	orrs	r0, r1
90025950:	f10c 0101 	add.w	r1, ip, #1
90025954:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90025958:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9002595c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90025960:	ea40 000c 	orr.w	r0, r0, ip
90025964:	f8a8 0000 	strh.w	r0, [r8]
90025968:	e7a1      	b.n	900258ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
9002596a:	b017      	add	sp, #92	@ 0x5c
9002596c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025970 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90025970:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90025974:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90025978:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
9002597c:	2d00      	cmp	r5, #0
9002597e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90025982:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90025986:	fb05 0e03 	mla	lr, r5, r3, r0
9002598a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
9002598e:	f2c0 80b0 	blt.w	90025af2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90025992:	45a9      	cmp	r9, r5
90025994:	f340 80ad 	ble.w	90025af2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90025998:	2800      	cmp	r0, #0
9002599a:	f2c0 80a8 	blt.w	90025aee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
9002599e:	4580      	cmp	r8, r0
900259a0:	f340 80a5 	ble.w	90025aee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900259a4:	ea4f 045e 	mov.w	r4, lr, lsr #1
900259a8:	f01e 0f01 	tst.w	lr, #1
900259ac:	5d16      	ldrb	r6, [r2, r4]
900259ae:	bf0c      	ite	eq
900259b0:	f006 060f 	andeq.w	r6, r6, #15
900259b4:	1136      	asrne	r6, r6, #4
900259b6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
900259ba:	b2f6      	uxtb	r6, r6
900259bc:	1c44      	adds	r4, r0, #1
900259be:	f100 809b 	bmi.w	90025af8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
900259c2:	45a0      	cmp	r8, r4
900259c4:	f340 8098 	ble.w	90025af8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
900259c8:	2f00      	cmp	r7, #0
900259ca:	f000 8097 	beq.w	90025afc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
900259ce:	f10e 0a01 	add.w	sl, lr, #1
900259d2:	ea4f 045a 	mov.w	r4, sl, lsr #1
900259d6:	f01a 0f01 	tst.w	sl, #1
900259da:	5d14      	ldrb	r4, [r2, r4]
900259dc:	bf0c      	ite	eq
900259de:	f004 040f 	andeq.w	r4, r4, #15
900259e2:	1124      	asrne	r4, r4, #4
900259e4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
900259e8:	b2e4      	uxtb	r4, r4
900259ea:	3501      	adds	r5, #1
900259ec:	f100 808a 	bmi.w	90025b04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
900259f0:	45a9      	cmp	r9, r5
900259f2:	f340 8087 	ble.w	90025b04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
900259f6:	f1bc 0f00 	cmp.w	ip, #0
900259fa:	f000 8086 	beq.w	90025b0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
900259fe:	2800      	cmp	r0, #0
90025a00:	db7e      	blt.n	90025b00 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90025a02:	4580      	cmp	r8, r0
90025a04:	dd7c      	ble.n	90025b00 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90025a06:	eb03 090e 	add.w	r9, r3, lr
90025a0a:	ea4f 0559 	mov.w	r5, r9, lsr #1
90025a0e:	f019 0f01 	tst.w	r9, #1
90025a12:	5d55      	ldrb	r5, [r2, r5]
90025a14:	bf0c      	ite	eq
90025a16:	f005 050f 	andeq.w	r5, r5, #15
90025a1a:	112d      	asrne	r5, r5, #4
90025a1c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90025a20:	b2ed      	uxtb	r5, r5
90025a22:	3001      	adds	r0, #1
90025a24:	d474      	bmi.n	90025b10 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90025a26:	4580      	cmp	r8, r0
90025a28:	dd72      	ble.n	90025b10 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90025a2a:	2f00      	cmp	r7, #0
90025a2c:	d072      	beq.n	90025b14 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
90025a2e:	3301      	adds	r3, #1
90025a30:	449e      	add	lr, r3
90025a32:	ea4f 035e 	mov.w	r3, lr, lsr #1
90025a36:	f01e 0f01 	tst.w	lr, #1
90025a3a:	5cd0      	ldrb	r0, [r2, r3]
90025a3c:	bf0c      	ite	eq
90025a3e:	f000 000f 	andeq.w	r0, r0, #15
90025a42:	1100      	asrne	r0, r0, #4
90025a44:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90025a48:	b2c3      	uxtb	r3, r0
90025a4a:	b2ba      	uxth	r2, r7
90025a4c:	fa1f fc8c 	uxth.w	ip, ip
90025a50:	fb02 f00c 	mul.w	r0, r2, ip
90025a54:	0112      	lsls	r2, r2, #4
90025a56:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90025a5a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90025a5e:	1a12      	subs	r2, r2, r0
90025a60:	fa1f fc8c 	uxth.w	ip, ip
90025a64:	b292      	uxth	r2, r2
90025a66:	eba7 070c 	sub.w	r7, r7, ip
90025a6a:	4362      	muls	r2, r4
90025a6c:	b2bf      	uxth	r7, r7
90025a6e:	fb06 2207 	mla	r2, r6, r7, r2
90025a72:	fb0c 2505 	mla	r5, ip, r5, r2
90025a76:	fb00 5303 	mla	r3, r0, r3, r5
90025a7a:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025a7e:	b3a3      	cbz	r3, 90025aea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90025a80:	4a25      	ldr	r2, [pc, #148]	@ (90025b18 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90025a82:	880e      	ldrh	r6, [r1, #0]
90025a84:	6815      	ldr	r5, [r2, #0]
90025a86:	b29a      	uxth	r2, r3
90025a88:	1234      	asrs	r4, r6, #8
90025a8a:	43db      	mvns	r3, r3
90025a8c:	f3c5 4007 	ubfx	r0, r5, #16, #8
90025a90:	f3c5 2707 	ubfx	r7, r5, #8, #8
90025a94:	b2db      	uxtb	r3, r3
90025a96:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90025a9a:	fb10 f002 	smulbb	r0, r0, r2
90025a9e:	b2ed      	uxtb	r5, r5
90025aa0:	fb17 f702 	smulbb	r7, r7, r2
90025aa4:	fb04 0403 	mla	r4, r4, r3, r0
90025aa8:	10f0      	asrs	r0, r6, #3
90025aaa:	fb15 f202 	smulbb	r2, r5, r2
90025aae:	00f6      	lsls	r6, r6, #3
90025ab0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90025ab4:	b2a4      	uxth	r4, r4
90025ab6:	b2f6      	uxtb	r6, r6
90025ab8:	fb00 7003 	mla	r0, r0, r3, r7
90025abc:	fb06 2303 	mla	r3, r6, r3, r2
90025ac0:	b280      	uxth	r0, r0
90025ac2:	b29a      	uxth	r2, r3
90025ac4:	1c63      	adds	r3, r4, #1
90025ac6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90025aca:	1c53      	adds	r3, r2, #1
90025acc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025ad0:	1c42      	adds	r2, r0, #1
90025ad2:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90025ad6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025ada:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025ade:	0940      	lsrs	r0, r0, #5
90025ae0:	4323      	orrs	r3, r4
90025ae2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025ae6:	4303      	orrs	r3, r0
90025ae8:	800b      	strh	r3, [r1, #0]
90025aea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90025aee:	2600      	movs	r6, #0
90025af0:	e764      	b.n	900259bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90025af2:	2400      	movs	r4, #0
90025af4:	4626      	mov	r6, r4
90025af6:	e778      	b.n	900259ea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90025af8:	2400      	movs	r4, #0
90025afa:	e776      	b.n	900259ea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90025afc:	463c      	mov	r4, r7
90025afe:	e774      	b.n	900259ea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90025b00:	2500      	movs	r5, #0
90025b02:	e78e      	b.n	90025a22 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90025b04:	2300      	movs	r3, #0
90025b06:	461d      	mov	r5, r3
90025b08:	e79f      	b.n	90025a4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90025b0a:	4663      	mov	r3, ip
90025b0c:	4665      	mov	r5, ip
90025b0e:	e79c      	b.n	90025a4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90025b10:	2300      	movs	r3, #0
90025b12:	e79a      	b.n	90025a4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90025b14:	463b      	mov	r3, r7
90025b16:	e798      	b.n	90025a4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90025b18:	2001aa50 	.word	0x2001aa50

90025b1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025b20:	b093      	sub	sp, #76	@ 0x4c
90025b22:	461d      	mov	r5, r3
90025b24:	920c      	str	r2, [sp, #48]	@ 0x30
90025b26:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90025b28:	9011      	str	r0, [sp, #68]	@ 0x44
90025b2a:	9107      	str	r1, [sp, #28]
90025b2c:	6850      	ldr	r0, [r2, #4]
90025b2e:	6812      	ldr	r2, [r2, #0]
90025b30:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90025b34:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90025b38:	fb00 1303 	mla	r3, r0, r3, r1
90025b3c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90025b40:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025b42:	689b      	ldr	r3, [r3, #8]
90025b44:	3301      	adds	r3, #1
90025b46:	f023 0301 	bic.w	r3, r3, #1
90025b4a:	9306      	str	r3, [sp, #24]
90025b4c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025b4e:	681f      	ldr	r7, [r3, #0]
90025b50:	9b07      	ldr	r3, [sp, #28]
90025b52:	2b00      	cmp	r3, #0
90025b54:	dc03      	bgt.n	90025b5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90025b56:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90025b58:	2b00      	cmp	r3, #0
90025b5a:	f340 8267 	ble.w	9002602c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90025b5e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025b60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025b64:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025b68:	1e48      	subs	r0, r1, #1
90025b6a:	f102 3cff 	add.w	ip, r2, #4294967295
90025b6e:	2d00      	cmp	r5, #0
90025b70:	f340 80b7 	ble.w	90025ce2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90025b74:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025b78:	ea4f 4326 	mov.w	r3, r6, asr #16
90025b7c:	d406      	bmi.n	90025b8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90025b7e:	4586      	cmp	lr, r0
90025b80:	da04      	bge.n	90025b8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90025b82:	2b00      	cmp	r3, #0
90025b84:	db02      	blt.n	90025b8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90025b86:	4563      	cmp	r3, ip
90025b88:	f2c0 80ac 	blt.w	90025ce4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90025b8c:	f11e 0e01 	adds.w	lr, lr, #1
90025b90:	f100 809f 	bmi.w	90025cd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90025b94:	4571      	cmp	r1, lr
90025b96:	f2c0 809c 	blt.w	90025cd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90025b9a:	3301      	adds	r3, #1
90025b9c:	f100 8099 	bmi.w	90025cd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90025ba0:	429a      	cmp	r2, r3
90025ba2:	f2c0 8096 	blt.w	90025cd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90025ba6:	46c8      	mov	r8, r9
90025ba8:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90025bac:	9509      	str	r5, [sp, #36]	@ 0x24
90025bae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025bb0:	2b00      	cmp	r3, #0
90025bb2:	f340 80b5 	ble.w	90025d20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90025bb6:	f3c4 3303 	ubfx	r3, r4, #12, #4
90025bba:	1430      	asrs	r0, r6, #16
90025bbc:	f3c6 3103 	ubfx	r1, r6, #12, #4
90025bc0:	9308      	str	r3, [sp, #32]
90025bc2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025bc4:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90025bc8:	1423      	asrs	r3, r4, #16
90025bca:	f100 813f 	bmi.w	90025e4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90025bce:	f10c 3bff 	add.w	fp, ip, #4294967295
90025bd2:	455b      	cmp	r3, fp
90025bd4:	f280 813a 	bge.w	90025e4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90025bd8:	2800      	cmp	r0, #0
90025bda:	f2c0 8137 	blt.w	90025e4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90025bde:	f10e 3bff 	add.w	fp, lr, #4294967295
90025be2:	4558      	cmp	r0, fp
90025be4:	f280 8132 	bge.w	90025e4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90025be8:	9a06      	ldr	r2, [sp, #24]
90025bea:	fb00 3302 	mla	r3, r0, r2, r3
90025bee:	0858      	lsrs	r0, r3, #1
90025bf0:	07da      	lsls	r2, r3, #31
90025bf2:	9a08      	ldr	r2, [sp, #32]
90025bf4:	f817 c000 	ldrb.w	ip, [r7, r0]
90025bf8:	bf54      	ite	pl
90025bfa:	f00c 0c0f 	andpl.w	ip, ip, #15
90025bfe:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90025c02:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025c06:	fa5f fc8c 	uxtb.w	ip, ip
90025c0a:	2a00      	cmp	r2, #0
90025c0c:	f000 80cc 	beq.w	90025da8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90025c10:	1c58      	adds	r0, r3, #1
90025c12:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90025c16:	07c0      	lsls	r0, r0, #31
90025c18:	f817 e00e 	ldrb.w	lr, [r7, lr]
90025c1c:	bf54      	ite	pl
90025c1e:	f00e 0e0f 	andpl.w	lr, lr, #15
90025c22:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90025c26:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90025c2a:	fa5f fe8e 	uxtb.w	lr, lr
90025c2e:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
90025c32:	b1b9      	cbz	r1, 90025c64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90025c34:	4453      	add	r3, sl
90025c36:	0858      	lsrs	r0, r3, #1
90025c38:	07da      	lsls	r2, r3, #31
90025c3a:	5c38      	ldrb	r0, [r7, r0]
90025c3c:	bf54      	ite	pl
90025c3e:	f000 000f 	andpl.w	r0, r0, #15
90025c42:	1100      	asrmi	r0, r0, #4
90025c44:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90025c48:	b2c0      	uxtb	r0, r0
90025c4a:	900a      	str	r0, [sp, #40]	@ 0x28
90025c4c:	1c58      	adds	r0, r3, #1
90025c4e:	0843      	lsrs	r3, r0, #1
90025c50:	07c2      	lsls	r2, r0, #31
90025c52:	5cfb      	ldrb	r3, [r7, r3]
90025c54:	bf54      	ite	pl
90025c56:	f003 030f 	andpl.w	r3, r3, #15
90025c5a:	111b      	asrmi	r3, r3, #4
90025c5c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90025c60:	b2db      	uxtb	r3, r3
90025c62:	930e      	str	r3, [sp, #56]	@ 0x38
90025c64:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90025c68:	b289      	uxth	r1, r1
90025c6a:	fb02 f301 	mul.w	r3, r2, r1
90025c6e:	0112      	lsls	r2, r2, #4
90025c70:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90025c74:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90025c78:	1ad2      	subs	r2, r2, r3
90025c7a:	b289      	uxth	r1, r1
90025c7c:	b292      	uxth	r2, r2
90025c7e:	1a40      	subs	r0, r0, r1
90025c80:	fa1f fe80 	uxth.w	lr, r0
90025c84:	980d      	ldr	r0, [sp, #52]	@ 0x34
90025c86:	4342      	muls	r2, r0
90025c88:	fb0c 2c0e 	mla	ip, ip, lr, r2
90025c8c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90025c8e:	fb01 c102 	mla	r1, r1, r2, ip
90025c92:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90025c94:	fb03 1302 	mla	r3, r3, r2, r1
90025c98:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025c9c:	2bff      	cmp	r3, #255	@ 0xff
90025c9e:	f040 8094 	bne.w	90025dca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90025ca2:	4bbf      	ldr	r3, [pc, #764]	@ (90025fa0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90025ca4:	681a      	ldr	r2, [r3, #0]
90025ca6:	4bbf      	ldr	r3, [pc, #764]	@ (90025fa4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90025ca8:	0951      	lsrs	r1, r2, #5
90025caa:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90025cae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025cb2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025cb6:	430b      	orrs	r3, r1
90025cb8:	4313      	orrs	r3, r2
90025cba:	f8a8 3000 	strh.w	r3, [r8]
90025cbe:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90025cc0:	f108 0802 	add.w	r8, r8, #2
90025cc4:	441c      	add	r4, r3
90025cc6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025cc8:	441e      	add	r6, r3
90025cca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025ccc:	3b01      	subs	r3, #1
90025cce:	9309      	str	r3, [sp, #36]	@ 0x24
90025cd0:	e76d      	b.n	90025bae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025cd2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90025cd4:	3d01      	subs	r5, #1
90025cd6:	f109 0902 	add.w	r9, r9, #2
90025cda:	441c      	add	r4, r3
90025cdc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025cde:	441e      	add	r6, r3
90025ce0:	e745      	b.n	90025b6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90025ce2:	d021      	beq.n	90025d28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90025ce4:	1e6b      	subs	r3, r5, #1
90025ce6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90025ce8:	fb00 4003 	mla	r0, r0, r3, r4
90025cec:	1400      	asrs	r0, r0, #16
90025cee:	f53f af5a 	bmi.w	90025ba6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90025cf2:	3901      	subs	r1, #1
90025cf4:	4288      	cmp	r0, r1
90025cf6:	f6bf af56 	bge.w	90025ba6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90025cfa:	9920      	ldr	r1, [sp, #128]	@ 0x80
90025cfc:	fb01 6303 	mla	r3, r1, r3, r6
90025d00:	141b      	asrs	r3, r3, #16
90025d02:	f53f af50 	bmi.w	90025ba6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90025d06:	3a01      	subs	r2, #1
90025d08:	4293      	cmp	r3, r2
90025d0a:	f6bf af4c 	bge.w	90025ba6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90025d0e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90025d12:	46a8      	mov	r8, r5
90025d14:	46ce      	mov	lr, r9
90025d16:	9308      	str	r3, [sp, #32]
90025d18:	f1b8 0f00 	cmp.w	r8, #0
90025d1c:	f300 80b6 	bgt.w	90025e8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025d20:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90025d24:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90025d28:	9b07      	ldr	r3, [sp, #28]
90025d2a:	2b00      	cmp	r3, #0
90025d2c:	f340 817e 	ble.w	9002602c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90025d30:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025d34:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025d36:	ee30 0a04 	vadd.f32	s0, s0, s8
90025d3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025d3e:	eef0 6a62 	vmov.f32	s13, s5
90025d42:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025d46:	ee31 1a05 	vadd.f32	s2, s2, s10
90025d4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025d4e:	ee16 4a90 	vmov	r4, s13
90025d52:	eef0 6a43 	vmov.f32	s13, s6
90025d56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025d5a:	ee16 6a90 	vmov	r6, s13
90025d5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025d62:	ee61 7a27 	vmul.f32	s15, s2, s15
90025d66:	ee77 2a62 	vsub.f32	s5, s14, s5
90025d6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025d6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025d72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025d76:	ee12 2a90 	vmov	r2, s5
90025d7a:	eef0 2a47 	vmov.f32	s5, s14
90025d7e:	fb92 f3f3 	sdiv	r3, r2, r3
90025d82:	ee13 2a10 	vmov	r2, s6
90025d86:	931f      	str	r3, [sp, #124]	@ 0x7c
90025d88:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025d8a:	eeb0 3a67 	vmov.f32	s6, s15
90025d8e:	fb92 f3f3 	sdiv	r3, r2, r3
90025d92:	9320      	str	r3, [sp, #128]	@ 0x80
90025d94:	9b07      	ldr	r3, [sp, #28]
90025d96:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90025d98:	3b01      	subs	r3, #1
90025d9a:	9307      	str	r3, [sp, #28]
90025d9c:	bf08      	it	eq
90025d9e:	4615      	moveq	r5, r2
90025da0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025da2:	bf18      	it	ne
90025da4:	461d      	movne	r5, r3
90025da6:	e6d3      	b.n	90025b50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90025da8:	2900      	cmp	r1, #0
90025daa:	f43f af5b 	beq.w	90025c64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90025dae:	eb0a 0003 	add.w	r0, sl, r3
90025db2:	0843      	lsrs	r3, r0, #1
90025db4:	07c0      	lsls	r0, r0, #31
90025db6:	5cfb      	ldrb	r3, [r7, r3]
90025db8:	bf54      	ite	pl
90025dba:	f003 030f 	andpl.w	r3, r3, #15
90025dbe:	111b      	asrmi	r3, r3, #4
90025dc0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90025dc4:	b2db      	uxtb	r3, r3
90025dc6:	930a      	str	r3, [sp, #40]	@ 0x28
90025dc8:	e74c      	b.n	90025c64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90025dca:	2b00      	cmp	r3, #0
90025dcc:	f43f af77 	beq.w	90025cbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90025dd0:	4a73      	ldr	r2, [pc, #460]	@ (90025fa0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90025dd2:	fa1f fe83 	uxth.w	lr, r3
90025dd6:	f8b8 c000 	ldrh.w	ip, [r8]
90025dda:	43db      	mvns	r3, r3
90025ddc:	6810      	ldr	r0, [r2, #0]
90025dde:	ea4f 212c 	mov.w	r1, ip, asr #8
90025de2:	f3c0 4207 	ubfx	r2, r0, #16, #8
90025de6:	b2db      	uxtb	r3, r3
90025de8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90025dec:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90025df0:	fb12 f20e 	smulbb	r2, r2, lr
90025df4:	b2c0      	uxtb	r0, r0
90025df6:	fb1b fb0e 	smulbb	fp, fp, lr
90025dfa:	fb01 2103 	mla	r1, r1, r3, r2
90025dfe:	ea4f 02ec 	mov.w	r2, ip, asr #3
90025e02:	fb10 fe0e 	smulbb	lr, r0, lr
90025e06:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90025e0a:	b289      	uxth	r1, r1
90025e0c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025e10:	fa5f fc8c 	uxtb.w	ip, ip
90025e14:	fb02 b203 	mla	r2, r2, r3, fp
90025e18:	1c48      	adds	r0, r1, #1
90025e1a:	fb0c e303 	mla	r3, ip, r3, lr
90025e1e:	b292      	uxth	r2, r2
90025e20:	b29b      	uxth	r3, r3
90025e22:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90025e26:	f102 0b01 	add.w	fp, r2, #1
90025e2a:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
90025e2e:	1c59      	adds	r1, r3, #1
90025e30:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90025e34:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90025e38:	0952      	lsrs	r2, r2, #5
90025e3a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90025e3e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025e42:	4301      	orrs	r1, r0
90025e44:	4311      	orrs	r1, r2
90025e46:	f8a8 1000 	strh.w	r1, [r8]
90025e4a:	e738      	b.n	90025cbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90025e4c:	f113 0b01 	adds.w	fp, r3, #1
90025e50:	f53f af35 	bmi.w	90025cbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90025e54:	45dc      	cmp	ip, fp
90025e56:	f6ff af32 	blt.w	90025cbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90025e5a:	f110 0b01 	adds.w	fp, r0, #1
90025e5e:	f53f af2e 	bmi.w	90025cbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90025e62:	45de      	cmp	lr, fp
90025e64:	f6ff af2b 	blt.w	90025cbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90025e68:	9302      	str	r3, [sp, #8]
90025e6a:	fa0f f38e 	sxth.w	r3, lr
90025e6e:	9a08      	ldr	r2, [sp, #32]
90025e70:	9301      	str	r3, [sp, #4]
90025e72:	fa0f f38c 	sxth.w	r3, ip
90025e76:	9105      	str	r1, [sp, #20]
90025e78:	4641      	mov	r1, r8
90025e7a:	9300      	str	r3, [sp, #0]
90025e7c:	4653      	mov	r3, sl
90025e7e:	e9cd 0203 	strd	r0, r2, [sp, #12]
90025e82:	463a      	mov	r2, r7
90025e84:	9811      	ldr	r0, [sp, #68]	@ 0x44
90025e86:	f7ff fd73 	bl	90025970 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
90025e8a:	e718      	b.n	90025cbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90025e8c:	1422      	asrs	r2, r4, #16
90025e8e:	9906      	ldr	r1, [sp, #24]
90025e90:	1433      	asrs	r3, r6, #16
90025e92:	f3c4 3003 	ubfx	r0, r4, #12, #4
90025e96:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90025e9a:	fb01 2303 	mla	r3, r1, r3, r2
90025e9e:	085a      	lsrs	r2, r3, #1
90025ea0:	07d9      	lsls	r1, r3, #31
90025ea2:	5cba      	ldrb	r2, [r7, r2]
90025ea4:	bf54      	ite	pl
90025ea6:	f002 020f 	andpl.w	r2, r2, #15
90025eaa:	1112      	asrmi	r2, r2, #4
90025eac:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90025eb0:	b2d2      	uxtb	r2, r2
90025eb2:	2800      	cmp	r0, #0
90025eb4:	d063      	beq.n	90025f7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90025eb6:	f103 0a01 	add.w	sl, r3, #1
90025eba:	ea4f 015a 	mov.w	r1, sl, lsr #1
90025ebe:	f01a 0f01 	tst.w	sl, #1
90025ec2:	5c79      	ldrb	r1, [r7, r1]
90025ec4:	bf0c      	ite	eq
90025ec6:	f001 010f 	andeq.w	r1, r1, #15
90025eca:	1109      	asrne	r1, r1, #4
90025ecc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90025ed0:	b2c9      	uxtb	r1, r1
90025ed2:	910f      	str	r1, [sp, #60]	@ 0x3c
90025ed4:	f1bc 0f00 	cmp.w	ip, #0
90025ed8:	d01a      	beq.n	90025f10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90025eda:	9908      	ldr	r1, [sp, #32]
90025edc:	440b      	add	r3, r1
90025ede:	0859      	lsrs	r1, r3, #1
90025ee0:	f013 0f01 	tst.w	r3, #1
90025ee4:	f103 0301 	add.w	r3, r3, #1
90025ee8:	5c79      	ldrb	r1, [r7, r1]
90025eea:	bf0c      	ite	eq
90025eec:	f001 010f 	andeq.w	r1, r1, #15
90025ef0:	1109      	asrne	r1, r1, #4
90025ef2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90025ef6:	b2c9      	uxtb	r1, r1
90025ef8:	910b      	str	r1, [sp, #44]	@ 0x2c
90025efa:	0859      	lsrs	r1, r3, #1
90025efc:	07db      	lsls	r3, r3, #31
90025efe:	5c79      	ldrb	r1, [r7, r1]
90025f00:	bf54      	ite	pl
90025f02:	f001 010f 	andpl.w	r1, r1, #15
90025f06:	1109      	asrmi	r1, r1, #4
90025f08:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90025f0c:	b2c9      	uxtb	r1, r1
90025f0e:	9110      	str	r1, [sp, #64]	@ 0x40
90025f10:	b280      	uxth	r0, r0
90025f12:	fa1f fc8c 	uxth.w	ip, ip
90025f16:	fb00 f30c 	mul.w	r3, r0, ip
90025f1a:	0100      	lsls	r0, r0, #4
90025f1c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90025f20:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
90025f24:	1ac0      	subs	r0, r0, r3
90025f26:	fa1f fc8c 	uxth.w	ip, ip
90025f2a:	b280      	uxth	r0, r0
90025f2c:	eba1 010c 	sub.w	r1, r1, ip
90025f30:	fa1f fa81 	uxth.w	sl, r1
90025f34:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90025f36:	4348      	muls	r0, r1
90025f38:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90025f3a:	fb02 020a 	mla	r2, r2, sl, r0
90025f3e:	fb0c 2c01 	mla	ip, ip, r1, r2
90025f42:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90025f44:	fb03 c302 	mla	r3, r3, r2, ip
90025f48:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025f4c:	2bff      	cmp	r3, #255	@ 0xff
90025f4e:	d12b      	bne.n	90025fa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90025f50:	4b13      	ldr	r3, [pc, #76]	@ (90025fa0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90025f52:	681a      	ldr	r2, [r3, #0]
90025f54:	4b13      	ldr	r3, [pc, #76]	@ (90025fa4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90025f56:	0951      	lsrs	r1, r2, #5
90025f58:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90025f5c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025f60:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025f64:	430b      	orrs	r3, r1
90025f66:	4313      	orrs	r3, r2
90025f68:	f8ae 3000 	strh.w	r3, [lr]
90025f6c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90025f6e:	f10e 0e02 	add.w	lr, lr, #2
90025f72:	f108 38ff 	add.w	r8, r8, #4294967295
90025f76:	441c      	add	r4, r3
90025f78:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025f7a:	441e      	add	r6, r3
90025f7c:	e6cc      	b.n	90025d18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90025f7e:	f1bc 0f00 	cmp.w	ip, #0
90025f82:	d0c5      	beq.n	90025f10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90025f84:	9908      	ldr	r1, [sp, #32]
90025f86:	440b      	add	r3, r1
90025f88:	0859      	lsrs	r1, r3, #1
90025f8a:	07db      	lsls	r3, r3, #31
90025f8c:	5c79      	ldrb	r1, [r7, r1]
90025f8e:	bf54      	ite	pl
90025f90:	f001 010f 	andpl.w	r1, r1, #15
90025f94:	1109      	asrmi	r1, r1, #4
90025f96:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90025f9a:	b2c9      	uxtb	r1, r1
90025f9c:	910b      	str	r1, [sp, #44]	@ 0x2c
90025f9e:	e7b7      	b.n	90025f10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90025fa0:	2001aa50 	.word	0x2001aa50
90025fa4:	fffff800 	.word	0xfffff800
90025fa8:	2b00      	cmp	r3, #0
90025faa:	d0df      	beq.n	90025f6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90025fac:	4a21      	ldr	r2, [pc, #132]	@ (90026034 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90025fae:	fa1f fa83 	uxth.w	sl, r3
90025fb2:	f8be c000 	ldrh.w	ip, [lr]
90025fb6:	43db      	mvns	r3, r3
90025fb8:	6810      	ldr	r0, [r2, #0]
90025fba:	ea4f 212c 	mov.w	r1, ip, asr #8
90025fbe:	f3c0 4207 	ubfx	r2, r0, #16, #8
90025fc2:	b2db      	uxtb	r3, r3
90025fc4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90025fc8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90025fcc:	fb12 f20a 	smulbb	r2, r2, sl
90025fd0:	b2c0      	uxtb	r0, r0
90025fd2:	fb1b fb0a 	smulbb	fp, fp, sl
90025fd6:	fb01 2103 	mla	r1, r1, r3, r2
90025fda:	ea4f 02ec 	mov.w	r2, ip, asr #3
90025fde:	fb10 f00a 	smulbb	r0, r0, sl
90025fe2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90025fe6:	b289      	uxth	r1, r1
90025fe8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025fec:	fa5f fc8c 	uxtb.w	ip, ip
90025ff0:	fb02 b203 	mla	r2, r2, r3, fp
90025ff4:	fb0c 0003 	mla	r0, ip, r3, r0
90025ff8:	1c4b      	adds	r3, r1, #1
90025ffa:	b292      	uxth	r2, r2
90025ffc:	b280      	uxth	r0, r0
90025ffe:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026002:	f100 0b01 	add.w	fp, r0, #1
90026006:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002600a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9002600e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90026012:	ea4b 0101 	orr.w	r1, fp, r1
90026016:	f102 0b01 	add.w	fp, r2, #1
9002601a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
9002601e:	0952      	lsrs	r2, r2, #5
90026020:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026024:	4311      	orrs	r1, r2
90026026:	f8ae 1000 	strh.w	r1, [lr]
9002602a:	e79f      	b.n	90025f6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
9002602c:	b013      	add	sp, #76	@ 0x4c
9002602e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026032:	bf00      	nop
90026034:	2001aa50 	.word	0x2001aa50

90026038 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90026038:	b570      	push	{r4, r5, r6, lr}
9002603a:	1208      	asrs	r0, r1, #8
9002603c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90026040:	b29e      	uxth	r6, r3
90026042:	1213      	asrs	r3, r2, #8
90026044:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90026048:	10cc      	asrs	r4, r1, #3
9002604a:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
9002604e:	00c9      	lsls	r1, r1, #3
90026050:	fb10 f006 	smulbb	r0, r0, r6
90026054:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90026058:	fb13 f305 	smulbb	r3, r3, r5
9002605c:	fb14 f406 	smulbb	r4, r4, r6
90026060:	4418      	add	r0, r3
90026062:	10d3      	asrs	r3, r2, #3
90026064:	00d2      	lsls	r2, r2, #3
90026066:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002606a:	b280      	uxth	r0, r0
9002606c:	b2d2      	uxtb	r2, r2
9002606e:	fb13 f305 	smulbb	r3, r3, r5
90026072:	fb12 f205 	smulbb	r2, r2, r5
90026076:	441c      	add	r4, r3
90026078:	b2cb      	uxtb	r3, r1
9002607a:	fb13 f306 	smulbb	r3, r3, r6
9002607e:	b2a4      	uxth	r4, r4
90026080:	4413      	add	r3, r2
90026082:	1c42      	adds	r2, r0, #1
90026084:	b29b      	uxth	r3, r3
90026086:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002608a:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
9002608e:	1c58      	adds	r0, r3, #1
90026090:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90026094:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90026098:	4310      	orrs	r0, r2
9002609a:	1c62      	adds	r2, r4, #1
9002609c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900260a0:	0964      	lsrs	r4, r4, #5
900260a2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900260a6:	4320      	orrs	r0, r4
900260a8:	bd70      	pop	{r4, r5, r6, pc}
	...

900260ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
900260ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900260b0:	b08f      	sub	sp, #60	@ 0x3c
900260b2:	461c      	mov	r4, r3
900260b4:	460d      	mov	r5, r1
900260b6:	4616      	mov	r6, r2
900260b8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
900260bc:	9004      	str	r0, [sp, #16]
900260be:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900260c0:	2f00      	cmp	r7, #0
900260c2:	f000 80f6 	beq.w	900262b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
900260c6:	6820      	ldr	r0, [r4, #0]
900260c8:	aa0a      	add	r2, sp, #40	@ 0x28
900260ca:	6861      	ldr	r1, [r4, #4]
900260cc:	f04f 0802 	mov.w	r8, #2
900260d0:	3604      	adds	r6, #4
900260d2:	c203      	stmia	r2!, {r0, r1}
900260d4:	6818      	ldr	r0, [r3, #0]
900260d6:	aa0c      	add	r2, sp, #48	@ 0x30
900260d8:	6859      	ldr	r1, [r3, #4]
900260da:	c203      	stmia	r2!, {r0, r1}
900260dc:	a80a      	add	r0, sp, #40	@ 0x28
900260de:	f7ee fe3f 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900260e2:	4621      	mov	r1, r4
900260e4:	a80c      	add	r0, sp, #48	@ 0x30
900260e6:	f7ee fe63 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900260ea:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
900260ee:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
900260f2:	f002 0301 	and.w	r3, r2, #1
900260f6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
900260fa:	9306      	str	r3, [sp, #24]
900260fc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90026100:	f003 0101 	and.w	r1, r3, #1
90026104:	9105      	str	r1, [sp, #20]
90026106:	9805      	ldr	r0, [sp, #20]
90026108:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9002610c:	4403      	add	r3, r0
9002610e:	fb01 2303 	mla	r3, r1, r3, r2
90026112:	fb93 f3f8 	sdiv	r3, r3, r8
90026116:	441d      	add	r5, r3
90026118:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9002611c:	441a      	add	r2, r3
9002611e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90026122:	4419      	add	r1, r3
90026124:	4b64      	ldr	r3, [pc, #400]	@ (900262b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90026126:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9002612a:	6818      	ldr	r0, [r3, #0]
9002612c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90026130:	6803      	ldr	r3, [r0, #0]
90026132:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90026134:	4798      	blx	r3
90026136:	4a61      	ldr	r2, [pc, #388]	@ (900262bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90026138:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
9002613c:	2fff      	cmp	r7, #255	@ 0xff
9002613e:	8813      	ldrh	r3, [r2, #0]
90026140:	4611      	mov	r1, r2
90026142:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
90026146:	fb03 fb0b 	mul.w	fp, r3, fp
9002614a:	fb03 a404 	mla	r4, r3, r4, sl
9002614e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026152:	d06b      	beq.n	9002622c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90026154:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
90026158:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
9002615c:	9303      	str	r3, [sp, #12]
9002615e:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90026162:	e9cd 3207 	strd	r3, r2, [sp, #28]
90026166:	9b07      	ldr	r3, [sp, #28]
90026168:	42a3      	cmp	r3, r4
9002616a:	f240 809d 	bls.w	900262a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
9002616e:	9b06      	ldr	r3, [sp, #24]
90026170:	2b00      	cmp	r3, #0
90026172:	d039      	beq.n	900261e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90026174:	782b      	ldrb	r3, [r5, #0]
90026176:	f105 0801 	add.w	r8, r5, #1
9002617a:	f109 3bff 	add.w	fp, r9, #4294967295
9002617e:	8822      	ldrh	r2, [r4, #0]
90026180:	f003 030f 	and.w	r3, r3, #15
90026184:	9804      	ldr	r0, [sp, #16]
90026186:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002618a:	9b03      	ldr	r3, [sp, #12]
9002618c:	9300      	str	r3, [sp, #0]
9002618e:	463b      	mov	r3, r7
90026190:	f7ff ff52 	bl	90026038 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90026194:	f824 0b02 	strh.w	r0, [r4], #2
90026198:	f1bb 0f01 	cmp.w	fp, #1
9002619c:	46a2      	mov	sl, r4
9002619e:	f104 0404 	add.w	r4, r4, #4
900261a2:	dd24      	ble.n	900261ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
900261a4:	f898 3000 	ldrb.w	r3, [r8]
900261a8:	f1ab 0b02 	sub.w	fp, fp, #2
900261ac:	f834 2c04 	ldrh.w	r2, [r4, #-4]
900261b0:	091b      	lsrs	r3, r3, #4
900261b2:	9804      	ldr	r0, [sp, #16]
900261b4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900261b8:	9b03      	ldr	r3, [sp, #12]
900261ba:	9300      	str	r3, [sp, #0]
900261bc:	463b      	mov	r3, r7
900261be:	f7ff ff3b 	bl	90026038 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900261c2:	f824 0c04 	strh.w	r0, [r4, #-4]
900261c6:	f818 3b01 	ldrb.w	r3, [r8], #1
900261ca:	f834 2c02 	ldrh.w	r2, [r4, #-2]
900261ce:	f003 030f 	and.w	r3, r3, #15
900261d2:	9804      	ldr	r0, [sp, #16]
900261d4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900261d8:	9b03      	ldr	r3, [sp, #12]
900261da:	9300      	str	r3, [sp, #0]
900261dc:	463b      	mov	r3, r7
900261de:	f7ff ff2b 	bl	90026038 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900261e2:	f824 0c02 	strh.w	r0, [r4, #-2]
900261e6:	e7d7      	b.n	90026198 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
900261e8:	46a8      	mov	r8, r5
900261ea:	46cb      	mov	fp, r9
900261ec:	e7d4      	b.n	90026198 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
900261ee:	d10e      	bne.n	9002620e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
900261f0:	f898 3000 	ldrb.w	r3, [r8]
900261f4:	f8ba 2000 	ldrh.w	r2, [sl]
900261f8:	091b      	lsrs	r3, r3, #4
900261fa:	9804      	ldr	r0, [sp, #16]
900261fc:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026200:	9b03      	ldr	r3, [sp, #12]
90026202:	9300      	str	r3, [sp, #0]
90026204:	463b      	mov	r3, r7
90026206:	f7ff ff17 	bl	90026038 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002620a:	f82a 0b02 	strh.w	r0, [sl], #2
9002620e:	9b08      	ldr	r3, [sp, #32]
90026210:	9a05      	ldr	r2, [sp, #20]
90026212:	881c      	ldrh	r4, [r3, #0]
90026214:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90026218:	eba4 0409 	sub.w	r4, r4, r9
9002621c:	4413      	add	r3, r2
9002621e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90026220:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90026224:	fb93 f3f2 	sdiv	r3, r3, r2
90026228:	441d      	add	r5, r3
9002622a:	e79c      	b.n	90026166 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
9002622c:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90026230:	45a3      	cmp	fp, r4
90026232:	d939      	bls.n	900262a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90026234:	9b06      	ldr	r3, [sp, #24]
90026236:	b1fb      	cbz	r3, 90026278 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
90026238:	782b      	ldrb	r3, [r5, #0]
9002623a:	1c6a      	adds	r2, r5, #1
9002623c:	f109 30ff 	add.w	r0, r9, #4294967295
90026240:	3402      	adds	r4, #2
90026242:	f003 030f 	and.w	r3, r3, #15
90026246:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002624a:	f824 3c02 	strh.w	r3, [r4, #-2]
9002624e:	2801      	cmp	r0, #1
90026250:	4623      	mov	r3, r4
90026252:	f104 0404 	add.w	r4, r4, #4
90026256:	dd12      	ble.n	9002627e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
90026258:	7813      	ldrb	r3, [r2, #0]
9002625a:	3802      	subs	r0, #2
9002625c:	091b      	lsrs	r3, r3, #4
9002625e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90026262:	f824 3c04 	strh.w	r3, [r4, #-4]
90026266:	f812 3b01 	ldrb.w	r3, [r2], #1
9002626a:	f003 030f 	and.w	r3, r3, #15
9002626e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90026272:	f824 3c02 	strh.w	r3, [r4, #-2]
90026276:	e7ea      	b.n	9002624e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90026278:	462a      	mov	r2, r5
9002627a:	4648      	mov	r0, r9
9002627c:	e7e7      	b.n	9002624e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002627e:	d106      	bne.n	9002628e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90026280:	7812      	ldrb	r2, [r2, #0]
90026282:	3302      	adds	r3, #2
90026284:	0912      	lsrs	r2, r2, #4
90026286:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002628a:	f823 2c02 	strh.w	r2, [r3, #-2]
9002628e:	880c      	ldrh	r4, [r1, #0]
90026290:	9a05      	ldr	r2, [sp, #20]
90026292:	eba4 0409 	sub.w	r4, r4, r9
90026296:	eb03 0444 	add.w	r4, r3, r4, lsl #1
9002629a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002629e:	4413      	add	r3, r2
900262a0:	fb93 f3f8 	sdiv	r3, r3, r8
900262a4:	441d      	add	r5, r3
900262a6:	e7c3      	b.n	90026230 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
900262a8:	4b03      	ldr	r3, [pc, #12]	@ (900262b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
900262aa:	6818      	ldr	r0, [r3, #0]
900262ac:	6803      	ldr	r3, [r0, #0]
900262ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900262b0:	4798      	blx	r3
900262b2:	b00f      	add	sp, #60	@ 0x3c
900262b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900262b8:	2001aa40 	.word	0x2001aa40
900262bc:	2001aa38 	.word	0x2001aa38

900262c0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
900262c0:	b5f0      	push	{r4, r5, r6, r7, lr}
900262c2:	f89d 5014 	ldrb.w	r5, [sp, #20]
900262c6:	0a0f      	lsrs	r7, r1, #8
900262c8:	2dff      	cmp	r5, #255	@ 0xff
900262ca:	d10c      	bne.n	900262e6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
900262cc:	2bff      	cmp	r3, #255	@ 0xff
900262ce:	d10a      	bne.n	900262e6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
900262d0:	0948      	lsrs	r0, r1, #5
900262d2:	4b25      	ldr	r3, [pc, #148]	@ (90026368 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
900262d4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900262d8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900262dc:	403b      	ands	r3, r7
900262de:	4318      	orrs	r0, r3
900262e0:	4308      	orrs	r0, r1
900262e2:	b280      	uxth	r0, r0
900262e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
900262e6:	fb15 f503 	smulbb	r5, r5, r3
900262ea:	1214      	asrs	r4, r2, #8
900262ec:	10d6      	asrs	r6, r2, #3
900262ee:	b2ab      	uxth	r3, r5
900262f0:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900262f4:	00d0      	lsls	r0, r2, #3
900262f6:	f3c1 4207 	ubfx	r2, r1, #16, #8
900262fa:	1c5d      	adds	r5, r3, #1
900262fc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90026300:	b2c0      	uxtb	r0, r0
90026302:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90026306:	eb05 2513 	add.w	r5, r5, r3, lsr #8
9002630a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9002630e:	f3c5 2507 	ubfx	r5, r5, #8, #8
90026312:	fa1f fc85 	uxth.w	ip, r5
90026316:	43ed      	mvns	r5, r5
90026318:	fb12 f20c 	smulbb	r2, r2, ip
9002631c:	b2eb      	uxtb	r3, r5
9002631e:	b2fd      	uxtb	r5, r7
90026320:	fb04 2403 	mla	r4, r4, r3, r2
90026324:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
90026328:	fb15 f50c 	smulbb	r5, r5, ip
9002632c:	b2c8      	uxtb	r0, r1
9002632e:	b2a4      	uxth	r4, r4
90026330:	fb10 f00c 	smulbb	r0, r0, ip
90026334:	fb06 5503 	mla	r5, r6, r3, r5
90026338:	fb02 0003 	mla	r0, r2, r3, r0
9002633c:	b2ad      	uxth	r5, r5
9002633e:	b283      	uxth	r3, r0
90026340:	1c60      	adds	r0, r4, #1
90026342:	eb00 2414 	add.w	r4, r0, r4, lsr #8
90026346:	1c58      	adds	r0, r3, #1
90026348:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002634c:	1c6b      	adds	r3, r5, #1
9002634e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90026352:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026356:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002635a:	096d      	lsrs	r5, r5, #5
9002635c:	4320      	orrs	r0, r4
9002635e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026362:	4328      	orrs	r0, r5
90026364:	e7be      	b.n	900262e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
90026366:	bf00      	nop
90026368:	00fff800 	.word	0x00fff800

9002636c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9002636c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026370:	461c      	mov	r4, r3
90026372:	b08d      	sub	sp, #52	@ 0x34
90026374:	460d      	mov	r5, r1
90026376:	4616      	mov	r6, r2
90026378:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002637a:	4680      	mov	r8, r0
9002637c:	6861      	ldr	r1, [r4, #4]
9002637e:	aa08      	add	r2, sp, #32
90026380:	6820      	ldr	r0, [r4, #0]
90026382:	f04f 0a02 	mov.w	sl, #2
90026386:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
9002638a:	3604      	adds	r6, #4
9002638c:	c203      	stmia	r2!, {r0, r1}
9002638e:	6818      	ldr	r0, [r3, #0]
90026390:	aa0a      	add	r2, sp, #40	@ 0x28
90026392:	6859      	ldr	r1, [r3, #4]
90026394:	c203      	stmia	r2!, {r0, r1}
90026396:	a808      	add	r0, sp, #32
90026398:	f7ee fce2 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002639c:	4621      	mov	r1, r4
9002639e:	a80a      	add	r0, sp, #40	@ 0x28
900263a0:	f7ee fd06 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900263a4:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
900263a8:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
900263ac:	f002 0301 	and.w	r3, r2, #1
900263b0:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
900263b4:	9303      	str	r3, [sp, #12]
900263b6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
900263ba:	f003 0101 	and.w	r1, r3, #1
900263be:	9102      	str	r1, [sp, #8]
900263c0:	9802      	ldr	r0, [sp, #8]
900263c2:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
900263c6:	4403      	add	r3, r0
900263c8:	fb01 2303 	mla	r3, r1, r3, r2
900263cc:	fb93 f3fa 	sdiv	r3, r3, sl
900263d0:	441d      	add	r5, r3
900263d2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
900263d6:	441a      	add	r2, r3
900263d8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
900263dc:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
900263e0:	4419      	add	r1, r3
900263e2:	4a3e      	ldr	r2, [pc, #248]	@ (900264dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
900263e4:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
900263e8:	6810      	ldr	r0, [r2, #0]
900263ea:	9205      	str	r2, [sp, #20]
900263ec:	6803      	ldr	r3, [r0, #0]
900263ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900263f0:	4798      	blx	r3
900263f2:	4b3b      	ldr	r3, [pc, #236]	@ (900264e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
900263f4:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
900263f8:	8819      	ldrh	r1, [r3, #0]
900263fa:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
900263fe:	434f      	muls	r7, r1
90026400:	fb01 c404 	mla	r4, r1, r4, ip
90026404:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026408:	eb04 0247 	add.w	r2, r4, r7, lsl #1
9002640c:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90026410:	9204      	str	r2, [sp, #16]
90026412:	9b04      	ldr	r3, [sp, #16]
90026414:	429c      	cmp	r4, r3
90026416:	d258      	bcs.n	900264ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90026418:	9b03      	ldr	r3, [sp, #12]
9002641a:	2b00      	cmp	r3, #0
9002641c:	d034      	beq.n	90026488 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
9002641e:	782b      	ldrb	r3, [r5, #0]
90026420:	1c6f      	adds	r7, r5, #1
90026422:	f003 030f 	and.w	r3, r3, #15
90026426:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002642a:	0e0b      	lsrs	r3, r1, #24
9002642c:	d006      	beq.n	9002643c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
9002642e:	8822      	ldrh	r2, [r4, #0]
90026430:	4640      	mov	r0, r8
90026432:	9300      	str	r3, [sp, #0]
90026434:	464b      	mov	r3, r9
90026436:	f7ff ff43 	bl	900262c0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002643a:	8020      	strh	r0, [r4, #0]
9002643c:	3402      	adds	r4, #2
9002643e:	f10b 3aff 	add.w	sl, fp, #4294967295
90026442:	f1ba 0f01 	cmp.w	sl, #1
90026446:	dd22      	ble.n	9002648e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90026448:	783b      	ldrb	r3, [r7, #0]
9002644a:	091b      	lsrs	r3, r3, #4
9002644c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026450:	0e0b      	lsrs	r3, r1, #24
90026452:	d006      	beq.n	90026462 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90026454:	8822      	ldrh	r2, [r4, #0]
90026456:	4640      	mov	r0, r8
90026458:	9300      	str	r3, [sp, #0]
9002645a:	464b      	mov	r3, r9
9002645c:	f7ff ff30 	bl	900262c0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026460:	8020      	strh	r0, [r4, #0]
90026462:	f817 3b01 	ldrb.w	r3, [r7], #1
90026466:	f003 030f 	and.w	r3, r3, #15
9002646a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002646e:	0e0b      	lsrs	r3, r1, #24
90026470:	d006      	beq.n	90026480 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90026472:	8862      	ldrh	r2, [r4, #2]
90026474:	4640      	mov	r0, r8
90026476:	9300      	str	r3, [sp, #0]
90026478:	464b      	mov	r3, r9
9002647a:	f7ff ff21 	bl	900262c0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002647e:	8060      	strh	r0, [r4, #2]
90026480:	3404      	adds	r4, #4
90026482:	f1aa 0a02 	sub.w	sl, sl, #2
90026486:	e7dc      	b.n	90026442 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90026488:	462f      	mov	r7, r5
9002648a:	46da      	mov	sl, fp
9002648c:	e7d9      	b.n	90026442 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
9002648e:	d10d      	bne.n	900264ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90026490:	783b      	ldrb	r3, [r7, #0]
90026492:	091b      	lsrs	r3, r3, #4
90026494:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026498:	0e0b      	lsrs	r3, r1, #24
9002649a:	d006      	beq.n	900264aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
9002649c:	8822      	ldrh	r2, [r4, #0]
9002649e:	4640      	mov	r0, r8
900264a0:	9300      	str	r3, [sp, #0]
900264a2:	464b      	mov	r3, r9
900264a4:	f7ff ff0c 	bl	900262c0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900264a8:	8020      	strh	r0, [r4, #0]
900264aa:	3402      	adds	r4, #2
900264ac:	9b06      	ldr	r3, [sp, #24]
900264ae:	9a02      	ldr	r2, [sp, #8]
900264b0:	881b      	ldrh	r3, [r3, #0]
900264b2:	eba3 030b 	sub.w	r3, r3, fp
900264b6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900264ba:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
900264be:	4413      	add	r3, r2
900264c0:	9a07      	ldr	r2, [sp, #28]
900264c2:	fb93 f3f2 	sdiv	r3, r3, r2
900264c6:	441d      	add	r5, r3
900264c8:	e7a3      	b.n	90026412 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
900264ca:	9b05      	ldr	r3, [sp, #20]
900264cc:	6818      	ldr	r0, [r3, #0]
900264ce:	6803      	ldr	r3, [r0, #0]
900264d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900264d2:	4798      	blx	r3
900264d4:	b00d      	add	sp, #52	@ 0x34
900264d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900264da:	bf00      	nop
900264dc:	2001aa40 	.word	0x2001aa40
900264e0:	2001aa38 	.word	0x2001aa38

900264e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
900264e4:	b570      	push	{r4, r5, r6, lr}
900264e6:	1214      	asrs	r4, r2, #8
900264e8:	788d      	ldrb	r5, [r1, #2]
900264ea:	f89d 6010 	ldrb.w	r6, [sp, #16]
900264ee:	10d0      	asrs	r0, r2, #3
900264f0:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900264f4:	00d2      	lsls	r2, r2, #3
900264f6:	fb15 f503 	smulbb	r5, r5, r3
900264fa:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900264fe:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90026502:	b2d2      	uxtb	r2, r2
90026504:	fb04 5506 	mla	r5, r4, r6, r5
90026508:	784c      	ldrb	r4, [r1, #1]
9002650a:	7809      	ldrb	r1, [r1, #0]
9002650c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90026510:	fb14 f403 	smulbb	r4, r4, r3
90026514:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90026518:	fb11 f303 	smulbb	r3, r1, r3
9002651c:	b2ad      	uxth	r5, r5
9002651e:	fb00 4406 	mla	r4, r0, r6, r4
90026522:	fb02 3306 	mla	r3, r2, r6, r3
90026526:	1c68      	adds	r0, r5, #1
90026528:	b2a4      	uxth	r4, r4
9002652a:	b29b      	uxth	r3, r3
9002652c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90026530:	1c62      	adds	r2, r4, #1
90026532:	1c58      	adds	r0, r3, #1
90026534:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90026538:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9002653c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90026540:	0964      	lsrs	r4, r4, #5
90026542:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90026546:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002654a:	4328      	orrs	r0, r5
9002654c:	4320      	orrs	r0, r4
9002654e:	bd70      	pop	{r4, r5, r6, pc}

90026550 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90026550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026554:	b08f      	sub	sp, #60	@ 0x3c
90026556:	461c      	mov	r4, r3
90026558:	4682      	mov	sl, r0
9002655a:	460e      	mov	r6, r1
9002655c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90026560:	4615      	mov	r5, r2
90026562:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026564:	2f00      	cmp	r7, #0
90026566:	f000 8141 	beq.w	900267ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
9002656a:	6820      	ldr	r0, [r4, #0]
9002656c:	aa0a      	add	r2, sp, #40	@ 0x28
9002656e:	6861      	ldr	r1, [r4, #4]
90026570:	f04f 0802 	mov.w	r8, #2
90026574:	3504      	adds	r5, #4
90026576:	c203      	stmia	r2!, {r0, r1}
90026578:	6818      	ldr	r0, [r3, #0]
9002657a:	aa0c      	add	r2, sp, #48	@ 0x30
9002657c:	6859      	ldr	r1, [r3, #4]
9002657e:	c203      	stmia	r2!, {r0, r1}
90026580:	a80a      	add	r0, sp, #40	@ 0x28
90026582:	f7ee fbed 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90026586:	4621      	mov	r1, r4
90026588:	a80c      	add	r0, sp, #48	@ 0x30
9002658a:	f7ee fc11 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002658e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90026592:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
90026596:	f002 0301 	and.w	r3, r2, #1
9002659a:	9306      	str	r3, [sp, #24]
9002659c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900265a0:	f003 0101 	and.w	r1, r3, #1
900265a4:	9105      	str	r1, [sp, #20]
900265a6:	9805      	ldr	r0, [sp, #20]
900265a8:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
900265ac:	4403      	add	r3, r0
900265ae:	fb01 2303 	mla	r3, r1, r3, r2
900265b2:	fb93 f3f8 	sdiv	r3, r3, r8
900265b6:	441e      	add	r6, r3
900265b8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
900265bc:	441a      	add	r2, r3
900265be:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
900265c2:	4419      	add	r1, r3
900265c4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
900265c8:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
900265cc:	9303      	str	r3, [sp, #12]
900265ce:	4b89      	ldr	r3, [pc, #548]	@ (900267f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
900265d0:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
900265d4:	6818      	ldr	r0, [r3, #0]
900265d6:	6803      	ldr	r3, [r0, #0]
900265d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900265da:	4798      	blx	r3
900265dc:	4a86      	ldr	r2, [pc, #536]	@ (900267f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
900265de:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
900265e2:	2fff      	cmp	r7, #255	@ 0xff
900265e4:	8813      	ldrh	r3, [r2, #0]
900265e6:	4694      	mov	ip, r2
900265e8:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
900265ec:	fb03 9404 	mla	r4, r3, r4, r9
900265f0:	fb03 f30b 	mul.w	r3, r3, fp
900265f4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900265f8:	d071      	beq.n	900266de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
900265fa:	43f9      	mvns	r1, r7
900265fc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90026600:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90026604:	b2c9      	uxtb	r1, r1
90026606:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002660a:	9104      	str	r1, [sp, #16]
9002660c:	9b07      	ldr	r3, [sp, #28]
9002660e:	42a3      	cmp	r3, r4
90026610:	f240 80e7 	bls.w	900267e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90026614:	9b06      	ldr	r3, [sp, #24]
90026616:	2b00      	cmp	r3, #0
90026618:	d03d      	beq.n	90026696 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
9002661a:	7831      	ldrb	r1, [r6, #0]
9002661c:	4650      	mov	r0, sl
9002661e:	9b04      	ldr	r3, [sp, #16]
90026620:	f106 0801 	add.w	r8, r6, #1
90026624:	f001 010f 	and.w	r1, r1, #15
90026628:	8822      	ldrh	r2, [r4, #0]
9002662a:	9300      	str	r3, [sp, #0]
9002662c:	463b      	mov	r3, r7
9002662e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026632:	4429      	add	r1, r5
90026634:	f7ff ff56 	bl	900264e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90026638:	9b03      	ldr	r3, [sp, #12]
9002663a:	f824 0b02 	strh.w	r0, [r4], #2
9002663e:	f103 3bff 	add.w	fp, r3, #4294967295
90026642:	f1bb 0f01 	cmp.w	fp, #1
90026646:	46a1      	mov	r9, r4
90026648:	f104 0404 	add.w	r4, r4, #4
9002664c:	dd27      	ble.n	9002669e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
9002664e:	f898 1000 	ldrb.w	r1, [r8]
90026652:	4650      	mov	r0, sl
90026654:	9b04      	ldr	r3, [sp, #16]
90026656:	f1ab 0b02 	sub.w	fp, fp, #2
9002665a:	0909      	lsrs	r1, r1, #4
9002665c:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90026660:	9300      	str	r3, [sp, #0]
90026662:	463b      	mov	r3, r7
90026664:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026668:	4429      	add	r1, r5
9002666a:	f7ff ff3b 	bl	900264e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002666e:	f824 0c04 	strh.w	r0, [r4, #-4]
90026672:	f818 1b01 	ldrb.w	r1, [r8], #1
90026676:	4650      	mov	r0, sl
90026678:	9b04      	ldr	r3, [sp, #16]
9002667a:	f001 010f 	and.w	r1, r1, #15
9002667e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90026682:	9300      	str	r3, [sp, #0]
90026684:	463b      	mov	r3, r7
90026686:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002668a:	4429      	add	r1, r5
9002668c:	f7ff ff2a 	bl	900264e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90026690:	f824 0c02 	strh.w	r0, [r4, #-2]
90026694:	e7d5      	b.n	90026642 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90026696:	46b0      	mov	r8, r6
90026698:	f8dd b00c 	ldr.w	fp, [sp, #12]
9002669c:	e7d1      	b.n	90026642 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
9002669e:	d10f      	bne.n	900266c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
900266a0:	f898 1000 	ldrb.w	r1, [r8]
900266a4:	4650      	mov	r0, sl
900266a6:	9b04      	ldr	r3, [sp, #16]
900266a8:	0909      	lsrs	r1, r1, #4
900266aa:	f8b9 2000 	ldrh.w	r2, [r9]
900266ae:	9300      	str	r3, [sp, #0]
900266b0:	463b      	mov	r3, r7
900266b2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900266b6:	4429      	add	r1, r5
900266b8:	f7ff ff14 	bl	900264e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900266bc:	f829 0b02 	strh.w	r0, [r9], #2
900266c0:	9b08      	ldr	r3, [sp, #32]
900266c2:	9a05      	ldr	r2, [sp, #20]
900266c4:	881c      	ldrh	r4, [r3, #0]
900266c6:	9b03      	ldr	r3, [sp, #12]
900266c8:	1ae4      	subs	r4, r4, r3
900266ca:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900266ce:	4413      	add	r3, r2
900266d0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900266d2:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900266d6:	fb93 f3f2 	sdiv	r3, r3, r2
900266da:	441e      	add	r6, r3
900266dc:	e796      	b.n	9002660c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
900266de:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900266e2:	4f46      	ldr	r7, [pc, #280]	@ (900267fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
900266e4:	42a3      	cmp	r3, r4
900266e6:	d97c      	bls.n	900267e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
900266e8:	9a06      	ldr	r2, [sp, #24]
900266ea:	2a00      	cmp	r2, #0
900266ec:	d054      	beq.n	90026798 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
900266ee:	7830      	ldrb	r0, [r6, #0]
900266f0:	1c71      	adds	r1, r6, #1
900266f2:	f000 000f 	and.w	r0, r0, #15
900266f6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900266fa:	eb05 0e00 	add.w	lr, r5, r0
900266fe:	5c28      	ldrb	r0, [r5, r0]
90026700:	f89e 2002 	ldrb.w	r2, [lr, #2]
90026704:	f89e e001 	ldrb.w	lr, [lr, #1]
90026708:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002670c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90026710:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90026714:	ea42 020e 	orr.w	r2, r2, lr
90026718:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
9002671c:	f824 2b02 	strh.w	r2, [r4], #2
90026720:	9a03      	ldr	r2, [sp, #12]
90026722:	f102 3eff 	add.w	lr, r2, #4294967295
90026726:	f1be 0f01 	cmp.w	lr, #1
9002672a:	4620      	mov	r0, r4
9002672c:	f104 0404 	add.w	r4, r4, #4
90026730:	dd36      	ble.n	900267a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
90026732:	7808      	ldrb	r0, [r1, #0]
90026734:	f1ae 0e02 	sub.w	lr, lr, #2
90026738:	0900      	lsrs	r0, r0, #4
9002673a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002673e:	eb05 0a00 	add.w	sl, r5, r0
90026742:	f89a 2001 	ldrb.w	r2, [sl, #1]
90026746:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002674a:	00d2      	lsls	r2, r2, #3
9002674c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90026750:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026754:	ea49 0202 	orr.w	r2, r9, r2
90026758:	f815 9000 	ldrb.w	r9, [r5, r0]
9002675c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90026760:	f824 2c04 	strh.w	r2, [r4, #-4]
90026764:	f811 0b01 	ldrb.w	r0, [r1], #1
90026768:	f000 000f 	and.w	r0, r0, #15
9002676c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90026770:	eb05 0a00 	add.w	sl, r5, r0
90026774:	f89a 2001 	ldrb.w	r2, [sl, #1]
90026778:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002677c:	00d2      	lsls	r2, r2, #3
9002677e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90026782:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026786:	ea49 0202 	orr.w	r2, r9, r2
9002678a:	f815 9000 	ldrb.w	r9, [r5, r0]
9002678e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90026792:	f824 2c02 	strh.w	r2, [r4, #-2]
90026796:	e7c6      	b.n	90026726 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90026798:	4631      	mov	r1, r6
9002679a:	f8dd e00c 	ldr.w	lr, [sp, #12]
9002679e:	e7c2      	b.n	90026726 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900267a0:	d111      	bne.n	900267c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
900267a2:	7809      	ldrb	r1, [r1, #0]
900267a4:	0909      	lsrs	r1, r1, #4
900267a6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900267aa:	186c      	adds	r4, r5, r1
900267ac:	5c69      	ldrb	r1, [r5, r1]
900267ae:	78a2      	ldrb	r2, [r4, #2]
900267b0:	7864      	ldrb	r4, [r4, #1]
900267b2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
900267b6:	00e4      	lsls	r4, r4, #3
900267b8:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900267bc:	4322      	orrs	r2, r4
900267be:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
900267c2:	f820 2b02 	strh.w	r2, [r0], #2
900267c6:	9a03      	ldr	r2, [sp, #12]
900267c8:	f8bc 4000 	ldrh.w	r4, [ip]
900267cc:	9905      	ldr	r1, [sp, #20]
900267ce:	1aa4      	subs	r4, r4, r2
900267d0:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
900267d4:	440a      	add	r2, r1
900267d6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900267da:	fb92 f2f8 	sdiv	r2, r2, r8
900267de:	4416      	add	r6, r2
900267e0:	e780      	b.n	900266e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
900267e2:	4b04      	ldr	r3, [pc, #16]	@ (900267f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
900267e4:	6818      	ldr	r0, [r3, #0]
900267e6:	6803      	ldr	r3, [r0, #0]
900267e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900267ea:	4798      	blx	r3
900267ec:	b00f      	add	sp, #60	@ 0x3c
900267ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900267f2:	bf00      	nop
900267f4:	2001aa40 	.word	0x2001aa40
900267f8:	2001aa38 	.word	0x2001aa38
900267fc:	fffff800 	.word	0xfffff800

90026800 <CRC_Lock>:
90026800:	4a2d      	ldr	r2, [pc, #180]	@ (900268b8 <CRC_Lock+0xb8>)
90026802:	b530      	push	{r4, r5, lr}
90026804:	6813      	ldr	r3, [r2, #0]
90026806:	f24c 2540 	movw	r5, #49728	@ 0xc240
9002680a:	f023 0301 	bic.w	r3, r3, #1
9002680e:	6013      	str	r3, [r2, #0]
90026810:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
90026814:	4b29      	ldr	r3, [pc, #164]	@ (900268bc <CRC_Lock+0xbc>)
90026816:	681c      	ldr	r4, [r3, #0]
90026818:	4014      	ands	r4, r2
9002681a:	42ac      	cmp	r4, r5
9002681c:	d005      	beq.n	9002682a <CRC_Lock+0x2a>
9002681e:	681c      	ldr	r4, [r3, #0]
90026820:	f24c 2570 	movw	r5, #49776	@ 0xc270
90026824:	4014      	ands	r4, r2
90026826:	42ac      	cmp	r4, r5
90026828:	d125      	bne.n	90026876 <CRC_Lock+0x76>
9002682a:	4b25      	ldr	r3, [pc, #148]	@ (900268c0 <CRC_Lock+0xc0>)
9002682c:	681b      	ldr	r3, [r3, #0]
9002682e:	2b00      	cmp	r3, #0
90026830:	d139      	bne.n	900268a6 <CRC_Lock+0xa6>
90026832:	4b24      	ldr	r3, [pc, #144]	@ (900268c4 <CRC_Lock+0xc4>)
90026834:	681a      	ldr	r2, [r3, #0]
90026836:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002683a:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
9002683e:	d00d      	beq.n	9002685c <CRC_Lock+0x5c>
90026840:	681a      	ldr	r2, [r3, #0]
90026842:	f240 4483 	movw	r4, #1155	@ 0x483
90026846:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002684a:	42a2      	cmp	r2, r4
9002684c:	d006      	beq.n	9002685c <CRC_Lock+0x5c>
9002684e:	681b      	ldr	r3, [r3, #0]
90026850:	f240 4285 	movw	r2, #1157	@ 0x485
90026854:	f3c3 030b 	ubfx	r3, r3, #0, #12
90026858:	4293      	cmp	r3, r2
9002685a:	d124      	bne.n	900268a6 <CRC_Lock+0xa6>
9002685c:	4b1a      	ldr	r3, [pc, #104]	@ (900268c8 <CRC_Lock+0xc8>)
9002685e:	2201      	movs	r2, #1
90026860:	601a      	str	r2, [r3, #0]
90026862:	681a      	ldr	r2, [r3, #0]
90026864:	2a00      	cmp	r2, #0
90026866:	d1fc      	bne.n	90026862 <CRC_Lock+0x62>
90026868:	4b18      	ldr	r3, [pc, #96]	@ (900268cc <CRC_Lock+0xcc>)
9002686a:	6018      	str	r0, [r3, #0]
9002686c:	6818      	ldr	r0, [r3, #0]
9002686e:	1a43      	subs	r3, r0, r1
90026870:	4258      	negs	r0, r3
90026872:	4158      	adcs	r0, r3
90026874:	e00e      	b.n	90026894 <CRC_Lock+0x94>
90026876:	681b      	ldr	r3, [r3, #0]
90026878:	4013      	ands	r3, r2
9002687a:	f24d 2220 	movw	r2, #53792	@ 0xd220
9002687e:	4293      	cmp	r3, r2
90026880:	d111      	bne.n	900268a6 <CRC_Lock+0xa6>
90026882:	4b13      	ldr	r3, [pc, #76]	@ (900268d0 <CRC_Lock+0xd0>)
90026884:	f240 4286 	movw	r2, #1158	@ 0x486
90026888:	681b      	ldr	r3, [r3, #0]
9002688a:	f3c3 030b 	ubfx	r3, r3, #0, #12
9002688e:	4293      	cmp	r3, r2
90026890:	d001      	beq.n	90026896 <CRC_Lock+0x96>
90026892:	2000      	movs	r0, #0
90026894:	bd30      	pop	{r4, r5, pc}
90026896:	4b0f      	ldr	r3, [pc, #60]	@ (900268d4 <CRC_Lock+0xd4>)
90026898:	2201      	movs	r2, #1
9002689a:	601a      	str	r2, [r3, #0]
9002689c:	681a      	ldr	r2, [r3, #0]
9002689e:	2a00      	cmp	r2, #0
900268a0:	d1fc      	bne.n	9002689c <CRC_Lock+0x9c>
900268a2:	4b0d      	ldr	r3, [pc, #52]	@ (900268d8 <CRC_Lock+0xd8>)
900268a4:	e7e1      	b.n	9002686a <CRC_Lock+0x6a>
900268a6:	4b0d      	ldr	r3, [pc, #52]	@ (900268dc <CRC_Lock+0xdc>)
900268a8:	2201      	movs	r2, #1
900268aa:	601a      	str	r2, [r3, #0]
900268ac:	681a      	ldr	r2, [r3, #0]
900268ae:	2a00      	cmp	r2, #0
900268b0:	d1fc      	bne.n	900268ac <CRC_Lock+0xac>
900268b2:	4b0b      	ldr	r3, [pc, #44]	@ (900268e0 <CRC_Lock+0xe0>)
900268b4:	e7d9      	b.n	9002686a <CRC_Lock+0x6a>
900268b6:	bf00      	nop
900268b8:	e0002000 	.word	0xe0002000
900268bc:	e000ed00 	.word	0xe000ed00
900268c0:	e0042000 	.word	0xe0042000
900268c4:	5c001000 	.word	0x5c001000
900268c8:	58024c08 	.word	0x58024c08
900268cc:	58024c00 	.word	0x58024c00
900268d0:	46008ff0 	.word	0x46008ff0
900268d4:	46024c08 	.word	0x46024c08
900268d8:	46024c00 	.word	0x46024c00
900268dc:	40023008 	.word	0x40023008
900268e0:	40023000 	.word	0x40023000

900268e4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
900268e4:	6101      	str	r1, [r0, #16]
900268e6:	4770      	bx	lr

900268e8 <_ZN8touchgfx8Gestures4tickEv>:
900268e8:	7b83      	ldrb	r3, [r0, #14]
900268ea:	b14b      	cbz	r3, 90026900 <_ZN8touchgfx8Gestures4tickEv+0x18>
900268ec:	8903      	ldrh	r3, [r0, #8]
900268ee:	3301      	adds	r3, #1
900268f0:	b29b      	uxth	r3, r3
900268f2:	2b07      	cmp	r3, #7
900268f4:	8103      	strh	r3, [r0, #8]
900268f6:	bf81      	itttt	hi
900268f8:	2300      	movhi	r3, #0
900268fa:	8143      	strhhi	r3, [r0, #10]
900268fc:	8183      	strhhi	r3, [r0, #12]
900268fe:	7383      	strbhi	r3, [r0, #14]
90026900:	4770      	bx	lr
	...

90026904 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90026904:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90026908:	4698      	mov	r8, r3
9002690a:	8883      	ldrh	r3, [r0, #4]
9002690c:	4604      	mov	r4, r0
9002690e:	4617      	mov	r7, r2
90026910:	f8ad 3006 	strh.w	r3, [sp, #6]
90026914:	eba8 0303 	sub.w	r3, r8, r3
90026918:	4a19      	ldr	r2, [pc, #100]	@ (90026980 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
9002691a:	460e      	mov	r6, r1
9002691c:	b21b      	sxth	r3, r3
9002691e:	88c1      	ldrh	r1, [r0, #6]
90026920:	9200      	str	r2, [sp, #0]
90026922:	2000      	movs	r0, #0
90026924:	2b00      	cmp	r3, #0
90026926:	8aa2      	ldrh	r2, [r4, #20]
90026928:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
9002692c:	bfb8      	it	lt
9002692e:	425b      	neglt	r3, r3
90026930:	f88d 0004 	strb.w	r0, [sp, #4]
90026934:	f8ad 1008 	strh.w	r1, [sp, #8]
90026938:	b21b      	sxth	r3, r3
9002693a:	f8ad 800a 	strh.w	r8, [sp, #10]
9002693e:	f8ad 500c 	strh.w	r5, [sp, #12]
90026942:	4293      	cmp	r3, r2
90026944:	dc07      	bgt.n	90026956 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90026946:	1a69      	subs	r1, r5, r1
90026948:	b209      	sxth	r1, r1
9002694a:	2900      	cmp	r1, #0
9002694c:	bfb8      	it	lt
9002694e:	4249      	neglt	r1, r1
90026950:	b209      	sxth	r1, r1
90026952:	428a      	cmp	r2, r1
90026954:	da10      	bge.n	90026978 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
90026956:	6920      	ldr	r0, [r4, #16]
90026958:	4669      	mov	r1, sp
9002695a:	eba8 0606 	sub.w	r6, r8, r6
9002695e:	1bef      	subs	r7, r5, r7
90026960:	6803      	ldr	r3, [r0, #0]
90026962:	685b      	ldr	r3, [r3, #4]
90026964:	4798      	blx	r3
90026966:	2300      	movs	r3, #0
90026968:	2001      	movs	r0, #1
9002696a:	8166      	strh	r6, [r4, #10]
9002696c:	8123      	strh	r3, [r4, #8]
9002696e:	81a7      	strh	r7, [r4, #12]
90026970:	f8a4 8004 	strh.w	r8, [r4, #4]
90026974:	80e5      	strh	r5, [r4, #6]
90026976:	73a0      	strb	r0, [r4, #14]
90026978:	b004      	add	sp, #16
9002697a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002697e:	bf00      	nop
90026980:	90035bbc 	.word	0x90035bbc

90026984 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
90026984:	b5f0      	push	{r4, r5, r6, r7, lr}
90026986:	461e      	mov	r6, r3
90026988:	1e4b      	subs	r3, r1, #1
9002698a:	b085      	sub	sp, #20
9002698c:	4604      	mov	r4, r0
9002698e:	2b01      	cmp	r3, #1
90026990:	460d      	mov	r5, r1
90026992:	4617      	mov	r7, r2
90026994:	d84b      	bhi.n	90026a2e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
90026996:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9002699a:	1cd3      	adds	r3, r2, #3
9002699c:	b29b      	uxth	r3, r3
9002699e:	2b06      	cmp	r3, #6
900269a0:	d916      	bls.n	900269d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
900269a2:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 90026a44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
900269a6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900269aa:	f8cd c004 	str.w	ip, [sp, #4]
900269ae:	f04f 0c00 	mov.w	ip, #0
900269b2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900269b6:	6900      	ldr	r0, [r0, #16]
900269b8:	f8ad 100c 	strh.w	r1, [sp, #12]
900269bc:	a901      	add	r1, sp, #4
900269be:	f88d c008 	strb.w	ip, [sp, #8]
900269c2:	f8ad 200a 	strh.w	r2, [sp, #10]
900269c6:	f8ad 300e 	strh.w	r3, [sp, #14]
900269ca:	6803      	ldr	r3, [r0, #0]
900269cc:	689b      	ldr	r3, [r3, #8]
900269ce:	4798      	blx	r3
900269d0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900269d4:	1cd3      	adds	r3, r2, #3
900269d6:	b29b      	uxth	r3, r3
900269d8:	2b06      	cmp	r3, #6
900269da:	d916      	bls.n	90026a0a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
900269dc:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90026a44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
900269e0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900269e4:	f8cd c004 	str.w	ip, [sp, #4]
900269e8:	f04f 0c01 	mov.w	ip, #1
900269ec:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900269f0:	6920      	ldr	r0, [r4, #16]
900269f2:	f8ad 100c 	strh.w	r1, [sp, #12]
900269f6:	a901      	add	r1, sp, #4
900269f8:	f88d c008 	strb.w	ip, [sp, #8]
900269fc:	f8ad 200a 	strh.w	r2, [sp, #10]
90026a00:	f8ad 300e 	strh.w	r3, [sp, #14]
90026a04:	6803      	ldr	r3, [r0, #0]
90026a06:	689b      	ldr	r3, [r3, #8]
90026a08:	4798      	blx	r3
90026a0a:	4b0d      	ldr	r3, [pc, #52]	@ (90026a40 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90026a0c:	a901      	add	r1, sp, #4
90026a0e:	6920      	ldr	r0, [r4, #16]
90026a10:	9301      	str	r3, [sp, #4]
90026a12:	2300      	movs	r3, #0
90026a14:	f88d 5008 	strb.w	r5, [sp, #8]
90026a18:	f8ad 700a 	strh.w	r7, [sp, #10]
90026a1c:	f8ad 600c 	strh.w	r6, [sp, #12]
90026a20:	f8ad 300e 	strh.w	r3, [sp, #14]
90026a24:	6803      	ldr	r3, [r0, #0]
90026a26:	681b      	ldr	r3, [r3, #0]
90026a28:	4798      	blx	r3
90026a2a:	b005      	add	sp, #20
90026a2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
90026a2e:	2900      	cmp	r1, #0
90026a30:	d1eb      	bne.n	90026a0a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90026a32:	80a2      	strh	r2, [r4, #4]
90026a34:	80c6      	strh	r6, [r0, #6]
90026a36:	60a1      	str	r1, [r4, #8]
90026a38:	81a1      	strh	r1, [r4, #12]
90026a3a:	73a1      	strb	r1, [r4, #14]
90026a3c:	e7e5      	b.n	90026a0a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90026a3e:	bf00      	nop
90026a40:	90035ba8 	.word	0x90035ba8
90026a44:	90035bd0 	.word	0x90035bd0

90026a48 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
90026a48:	10c9      	asrs	r1, r1, #3
90026a4a:	2900      	cmp	r1, #0
90026a4c:	bfb8      	it	lt
90026a4e:	4249      	neglt	r1, r1
90026a50:	2801      	cmp	r0, #1
90026a52:	d108      	bne.n	90026a66 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90026a54:	f3c1 0008 	ubfx	r0, r1, #0, #9
90026a58:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
90026a5c:	4601      	mov	r1, r0
90026a5e:	dd02      	ble.n	90026a66 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90026a60:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
90026a64:	4770      	bx	lr
90026a66:	29ff      	cmp	r1, #255	@ 0xff
90026a68:	bfa8      	it	ge
90026a6a:	21ff      	movge	r1, #255	@ 0xff
90026a6c:	4608      	mov	r0, r1
90026a6e:	4770      	bx	lr

90026a70 <_ZN8touchgfx10Rasterizer6lineToEii>:
90026a70:	b410      	push	{r4}
90026a72:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90026a76:	429c      	cmp	r4, r3
90026a78:	d803      	bhi.n	90026a82 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
90026a7a:	f85d 4b04 	ldr.w	r4, [sp], #4
90026a7e:	f7ed b923 	b.w	90013cc8 <_ZN8touchgfx7Outline6lineToEii>
90026a82:	f85d 4b04 	ldr.w	r4, [sp], #4
90026a86:	4770      	bx	lr

90026a88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
90026a88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026a8c:	b08b      	sub	sp, #44	@ 0x2c
90026a8e:	4606      	mov	r6, r0
90026a90:	468a      	mov	sl, r1
90026a92:	e9cd 2306 	strd	r2, r3, [sp, #24]
90026a96:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90026a9a:	9308      	str	r3, [sp, #32]
90026a9c:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90026aa0:	9309      	str	r3, [sp, #36]	@ 0x24
90026aa2:	f7ed fa7c 	bl	90013f9e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
90026aa6:	68b5      	ldr	r5, [r6, #8]
90026aa8:	4604      	mov	r4, r0
90026aaa:	2d00      	cmp	r5, #0
90026aac:	d044      	beq.n	90026b38 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90026aae:	6873      	ldr	r3, [r6, #4]
90026ab0:	42ab      	cmp	r3, r5
90026ab2:	d33d      	bcc.n	90026b30 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90026ab4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90026ab8:	f04f 0800 	mov.w	r8, #0
90026abc:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
90026ac0:	eb02 0b03 	add.w	fp, r2, r3
90026ac4:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90026ac8:	fb02 1203 	mla	r2, r2, r3, r1
90026acc:	9205      	str	r2, [sp, #20]
90026ace:	1e6a      	subs	r2, r5, #1
90026ad0:	9204      	str	r2, [sp, #16]
90026ad2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90026ad6:	f9b4 7000 	ldrsh.w	r7, [r4]
90026ada:	454b      	cmp	r3, r9
90026adc:	463a      	mov	r2, r7
90026ade:	d008      	beq.n	90026af2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90026ae0:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
90026ae4:	eb03 0b09 	add.w	fp, r3, r9
90026ae8:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90026aec:	fb03 1309 	mla	r3, r3, r9, r1
90026af0:	9305      	str	r3, [sp, #20]
90026af2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90026af6:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90026afa:	4498      	add	r8, r3
90026afc:	9b04      	ldr	r3, [sp, #16]
90026afe:	3b01      	subs	r3, #1
90026b00:	9304      	str	r3, [sp, #16]
90026b02:	9b04      	ldr	r3, [sp, #16]
90026b04:	3301      	adds	r3, #1
90026b06:	d015      	beq.n	90026b34 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90026b08:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90026b0c:	42bb      	cmp	r3, r7
90026b0e:	d117      	bne.n	90026b40 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90026b10:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90026b14:	9b04      	ldr	r3, [sp, #16]
90026b16:	4548      	cmp	r0, r9
90026b18:	f103 33ff 	add.w	r3, r3, #4294967295
90026b1c:	d17d      	bne.n	90026c1a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
90026b1e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90026b22:	4401      	add	r1, r0
90026b24:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90026b28:	4480      	add	r8, r0
90026b2a:	e7e9      	b.n	90026b00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90026b2c:	461f      	mov	r7, r3
90026b2e:	e042      	b.n	90026bb6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90026b30:	2000      	movs	r0, #0
90026b32:	e002      	b.n	90026b3a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90026b34:	2900      	cmp	r1, #0
90026b36:	d16d      	bne.n	90026c14 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90026b38:	2001      	movs	r0, #1
90026b3a:	b00b      	add	sp, #44	@ 0x2c
90026b3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026b40:	b379      	cbz	r1, 90026ba2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90026b42:	2f00      	cmp	r7, #0
90026b44:	db29      	blt.n	90026b9a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90026b46:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90026b4a:	42bb      	cmp	r3, r7
90026b4c:	dd25      	ble.n	90026b9a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90026b4e:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90026b52:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
90026b56:	f7ff ff77 	bl	90026a48 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90026b5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026b5c:	fb10 f003 	smulbb	r0, r0, r3
90026b60:	b280      	uxth	r0, r0
90026b62:	1c41      	adds	r1, r0, #1
90026b64:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90026b68:	1209      	asrs	r1, r1, #8
90026b6a:	f011 0fff 	tst.w	r1, #255	@ 0xff
90026b6e:	d014      	beq.n	90026b9a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90026b70:	b2c9      	uxtb	r1, r1
90026b72:	9808      	ldr	r0, [sp, #32]
90026b74:	b2ba      	uxth	r2, r7
90026b76:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
90026b78:	9102      	str	r1, [sp, #8]
90026b7a:	2101      	movs	r1, #1
90026b7c:	4413      	add	r3, r2
90026b7e:	4402      	add	r2, r0
90026b80:	9101      	str	r1, [sp, #4]
90026b82:	fa0f f18b 	sxth.w	r1, fp
90026b86:	f8da 0000 	ldr.w	r0, [sl]
90026b8a:	b21b      	sxth	r3, r3
90026b8c:	9100      	str	r1, [sp, #0]
90026b8e:	b212      	sxth	r2, r2
90026b90:	6941      	ldr	r1, [r0, #20]
90026b92:	4650      	mov	r0, sl
90026b94:	460d      	mov	r5, r1
90026b96:	9905      	ldr	r1, [sp, #20]
90026b98:	47a8      	blx	r5
90026b9a:	9b04      	ldr	r3, [sp, #16]
90026b9c:	1c7a      	adds	r2, r7, #1
90026b9e:	3301      	adds	r3, #1
90026ba0:	d0ca      	beq.n	90026b38 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90026ba2:	f9b4 7000 	ldrsh.w	r7, [r4]
90026ba6:	1abb      	subs	r3, r7, r2
90026ba8:	2b00      	cmp	r3, #0
90026baa:	dd31      	ble.n	90026c10 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90026bac:	2a00      	cmp	r2, #0
90026bae:	dabd      	bge.n	90026b2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
90026bb0:	2f00      	cmp	r7, #0
90026bb2:	dd2d      	ble.n	90026c10 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90026bb4:	2200      	movs	r2, #0
90026bb6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90026bba:	19d1      	adds	r1, r2, r7
90026bbc:	4299      	cmp	r1, r3
90026bbe:	db02      	blt.n	90026bc6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90026bc0:	1a9f      	subs	r7, r3, r2
90026bc2:	2f00      	cmp	r7, #0
90026bc4:	dd24      	ble.n	90026c10 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90026bc6:	ea4f 1188 	mov.w	r1, r8, lsl #6
90026bca:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
90026bce:	f7ff ff3b 	bl	90026a48 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90026bd2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026bd4:	fb10 f003 	smulbb	r0, r0, r3
90026bd8:	b280      	uxth	r0, r0
90026bda:	1c41      	adds	r1, r0, #1
90026bdc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90026be0:	1209      	asrs	r1, r1, #8
90026be2:	f011 0fff 	tst.w	r1, #255	@ 0xff
90026be6:	d013      	beq.n	90026c10 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90026be8:	b292      	uxth	r2, r2
90026bea:	9808      	ldr	r0, [sp, #32]
90026bec:	b2c9      	uxtb	r1, r1
90026bee:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
90026bf0:	b23f      	sxth	r7, r7
90026bf2:	4413      	add	r3, r2
90026bf4:	9102      	str	r1, [sp, #8]
90026bf6:	4402      	add	r2, r0
90026bf8:	fa0f f18b 	sxth.w	r1, fp
90026bfc:	f8da 0000 	ldr.w	r0, [sl]
90026c00:	b21b      	sxth	r3, r3
90026c02:	9100      	str	r1, [sp, #0]
90026c04:	b212      	sxth	r2, r2
90026c06:	9701      	str	r7, [sp, #4]
90026c08:	9905      	ldr	r1, [sp, #20]
90026c0a:	6947      	ldr	r7, [r0, #20]
90026c0c:	4650      	mov	r0, sl
90026c0e:	47b8      	blx	r7
90026c10:	464b      	mov	r3, r9
90026c12:	e75e      	b.n	90026ad2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90026c14:	2f00      	cmp	r7, #0
90026c16:	da96      	bge.n	90026b46 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90026c18:	e78e      	b.n	90026b38 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90026c1a:	2900      	cmp	r1, #0
90026c1c:	d0f8      	beq.n	90026c10 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90026c1e:	e790      	b.n	90026b42 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90026c20 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
90026c20:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90026c24:	461e      	mov	r6, r3
90026c26:	4b36      	ldr	r3, [pc, #216]	@ (90026d00 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
90026c28:	2500      	movs	r5, #0
90026c2a:	f100 0814 	add.w	r8, r0, #20
90026c2e:	4604      	mov	r4, r0
90026c30:	4617      	mov	r7, r2
90026c32:	e9c0 3100 	strd	r3, r1, [r0]
90026c36:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90026c3a:	8185      	strh	r5, [r0, #12]
90026c3c:	8103      	strh	r3, [r0, #8]
90026c3e:	f89d 3020 	ldrb.w	r3, [sp, #32]
90026c42:	81c5      	strh	r5, [r0, #14]
90026c44:	7283      	strb	r3, [r0, #10]
90026c46:	8205      	strh	r5, [r0, #16]
90026c48:	8245      	strh	r5, [r0, #18]
90026c4a:	4640      	mov	r0, r8
90026c4c:	f7ec fb82 	bl	90013354 <_ZN8touchgfx7OutlineC1Ev>
90026c50:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
90026c54:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
90026c58:	466b      	mov	r3, sp
90026c5a:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
90026c5e:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
90026c62:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
90026c66:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
90026c6a:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
90026c6e:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
90026c72:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
90026c76:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
90026c7a:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
90026c7e:	6830      	ldr	r0, [r6, #0]
90026c80:	6871      	ldr	r1, [r6, #4]
90026c82:	8872      	ldrh	r2, [r6, #2]
90026c84:	8835      	ldrh	r5, [r6, #0]
90026c86:	c303      	stmia	r3!, {r0, r1}
90026c88:	887b      	ldrh	r3, [r7, #2]
90026c8a:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
90026c8e:	4413      	add	r3, r2
90026c90:	883a      	ldrh	r2, [r7, #0]
90026c92:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
90026c96:	442a      	add	r2, r5
90026c98:	81e3      	strh	r3, [r4, #14]
90026c9a:	8220      	strh	r0, [r4, #16]
90026c9c:	4668      	mov	r0, sp
90026c9e:	81a2      	strh	r2, [r4, #12]
90026ca0:	8261      	strh	r1, [r4, #18]
90026ca2:	4639      	mov	r1, r7
90026ca4:	f7ee f884 	bl	90014db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90026ca8:	f104 000c 	add.w	r0, r4, #12
90026cac:	f7ee f858 	bl	90014d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90026cb0:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90026cb4:	f8bd 2000 	ldrh.w	r2, [sp]
90026cb8:	4640      	mov	r0, r8
90026cba:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
90026cbe:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
90026cc2:	f7ec fb2b 	bl	9001331c <_ZN8touchgfx7Outline5resetEv>
90026cc6:	f9bd 3000 	ldrsh.w	r3, [sp]
90026cca:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
90026cce:	4620      	mov	r0, r4
90026cd0:	015b      	lsls	r3, r3, #5
90026cd2:	64e3      	str	r3, [r4, #76]	@ 0x4c
90026cd4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90026cd8:	015b      	lsls	r3, r3, #5
90026cda:	6523      	str	r3, [r4, #80]	@ 0x50
90026cdc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90026ce0:	015b      	lsls	r3, r3, #5
90026ce2:	6563      	str	r3, [r4, #84]	@ 0x54
90026ce4:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90026ce8:	015b      	lsls	r3, r3, #5
90026cea:	65a3      	str	r3, [r4, #88]	@ 0x58
90026cec:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
90026cf0:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
90026cf4:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
90026cf8:	b002      	add	sp, #8
90026cfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90026cfe:	bf00      	nop
90026d00:	90035f0c 	.word	0x90035f0c

90026d04 <_ZN8touchgfx6Canvas5closeEv>:
90026d04:	b538      	push	{r3, r4, r5, lr}
90026d06:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
90026d0a:	4604      	mov	r4, r0
90026d0c:	b193      	cbz	r3, 90026d34 <_ZN8touchgfx6Canvas5closeEv+0x30>
90026d0e:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
90026d12:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
90026d16:	4213      	tst	r3, r2
90026d18:	d10c      	bne.n	90026d34 <_ZN8touchgfx6Canvas5closeEv+0x30>
90026d1a:	f100 0514 	add.w	r5, r0, #20
90026d1e:	b123      	cbz	r3, 90026d2a <_ZN8touchgfx6Canvas5closeEv+0x26>
90026d20:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
90026d24:	4628      	mov	r0, r5
90026d26:	f7ff fea3 	bl	90026a70 <_ZN8touchgfx10Rasterizer6lineToEii>
90026d2a:	4628      	mov	r0, r5
90026d2c:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
90026d30:	f7ff fe9e 	bl	90026a70 <_ZN8touchgfx10Rasterizer6lineToEii>
90026d34:	2300      	movs	r3, #0
90026d36:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90026d3a:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
90026d3e:	4298      	cmp	r0, r3
90026d40:	bf34      	ite	cc
90026d42:	2000      	movcc	r0, #0
90026d44:	2001      	movcs	r0, #1
90026d46:	bd38      	pop	{r3, r4, r5, pc}

90026d48 <_ZN8touchgfx6Canvas6renderEh>:
90026d48:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90026d4c:	7a85      	ldrb	r5, [r0, #10]
90026d4e:	4604      	mov	r4, r0
90026d50:	4369      	muls	r1, r5
90026d52:	1c4d      	adds	r5, r1, #1
90026d54:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90026d58:	122d      	asrs	r5, r5, #8
90026d5a:	f000 8098 	beq.w	90026e8e <_ZN8touchgfx6Canvas6renderEh+0x146>
90026d5e:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
90026d62:	2b00      	cmp	r3, #0
90026d64:	f000 8093 	beq.w	90026e8e <_ZN8touchgfx6Canvas6renderEh+0x146>
90026d68:	f7ff ffcc 	bl	90026d04 <_ZN8touchgfx6Canvas5closeEv>
90026d6c:	4607      	mov	r7, r0
90026d6e:	2800      	cmp	r0, #0
90026d70:	d045      	beq.n	90026dfe <_ZN8touchgfx6Canvas6renderEh+0xb6>
90026d72:	6860      	ldr	r0, [r4, #4]
90026d74:	4e47      	ldr	r6, [pc, #284]	@ (90026e94 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
90026d76:	6803      	ldr	r3, [r0, #0]
90026d78:	6837      	ldr	r7, [r6, #0]
90026d7a:	689b      	ldr	r3, [r3, #8]
90026d7c:	4798      	blx	r3
90026d7e:	4601      	mov	r1, r0
90026d80:	4638      	mov	r0, r7
90026d82:	f7ea fbc1 	bl	90011508 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
90026d86:	4607      	mov	r7, r0
90026d88:	f7db ffba 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
90026d8c:	6803      	ldr	r3, [r0, #0]
90026d8e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90026d90:	4798      	blx	r3
90026d92:	4680      	mov	r8, r0
90026d94:	f7db ffb4 	bl	90002d00 <_ZN8touchgfx3HAL3lcdEv>
90026d98:	6803      	ldr	r3, [r0, #0]
90026d9a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90026d9c:	4798      	blx	r3
90026d9e:	280b      	cmp	r0, #11
90026da0:	d85a      	bhi.n	90026e58 <_ZN8touchgfx6Canvas6renderEh+0x110>
90026da2:	e8df f000 	tbb	[pc, r0]
90026da6:	5b50      	.short	0x5b50
90026da8:	3059066b 	.word	0x3059066b
90026dac:	64646440 	.word	0x64646440
90026db0:	6464      	.short	0x6464
90026db2:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90026db6:	2208      	movs	r2, #8
90026db8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90026dbc:	fb91 f2f2 	sdiv	r2, r1, r2
90026dc0:	fb08 2303 	mla	r3, r8, r3, r2
90026dc4:	441f      	add	r7, r3
90026dc6:	424b      	negs	r3, r1
90026dc8:	f001 0107 	and.w	r1, r1, #7
90026dcc:	f003 0307 	and.w	r3, r3, #7
90026dd0:	bf58      	it	pl
90026dd2:	4259      	negpl	r1, r3
90026dd4:	b2c9      	uxtb	r1, r1
90026dd6:	b2ed      	uxtb	r5, r5
90026dd8:	463a      	mov	r2, r7
90026dda:	fa0f f388 	sxth.w	r3, r8
90026dde:	f104 0014 	add.w	r0, r4, #20
90026de2:	e9cd 1500 	strd	r1, r5, [sp]
90026de6:	6861      	ldr	r1, [r4, #4]
90026de8:	f7ff fe4e 	bl	90026a88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90026dec:	4607      	mov	r7, r0
90026dee:	6860      	ldr	r0, [r4, #4]
90026df0:	6803      	ldr	r3, [r0, #0]
90026df2:	691b      	ldr	r3, [r3, #16]
90026df4:	4798      	blx	r3
90026df6:	6830      	ldr	r0, [r6, #0]
90026df8:	6803      	ldr	r3, [r0, #0]
90026dfa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90026dfc:	4798      	blx	r3
90026dfe:	4638      	mov	r0, r7
90026e00:	b002      	add	sp, #8
90026e02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90026e06:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90026e0a:	2204      	movs	r2, #4
90026e0c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90026e10:	fb91 f2f2 	sdiv	r2, r1, r2
90026e14:	fb08 2303 	mla	r3, r8, r3, r2
90026e18:	441f      	add	r7, r3
90026e1a:	424b      	negs	r3, r1
90026e1c:	f001 0103 	and.w	r1, r1, #3
90026e20:	f003 0303 	and.w	r3, r3, #3
90026e24:	e7d4      	b.n	90026dd0 <_ZN8touchgfx6Canvas6renderEh+0x88>
90026e26:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90026e2a:	2202      	movs	r2, #2
90026e2c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90026e30:	2900      	cmp	r1, #0
90026e32:	fb91 f2f2 	sdiv	r2, r1, r2
90026e36:	f001 0101 	and.w	r1, r1, #1
90026e3a:	fb08 2303 	mla	r3, r8, r3, r2
90026e3e:	bfb8      	it	lt
90026e40:	4249      	neglt	r1, r1
90026e42:	441f      	add	r7, r3
90026e44:	e7c6      	b.n	90026dd4 <_ZN8touchgfx6Canvas6renderEh+0x8c>
90026e46:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90026e4a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90026e4e:	fb08 f303 	mul.w	r3, r8, r3
90026e52:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90026e56:	441f      	add	r7, r3
90026e58:	2100      	movs	r1, #0
90026e5a:	e7bc      	b.n	90026dd6 <_ZN8touchgfx6Canvas6renderEh+0x8e>
90026e5c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90026e60:	2103      	movs	r1, #3
90026e62:	fb08 f203 	mul.w	r2, r8, r3
90026e66:	89a3      	ldrh	r3, [r4, #12]
90026e68:	fb13 2301 	smlabb	r3, r3, r1, r2
90026e6c:	e7f3      	b.n	90026e56 <_ZN8touchgfx6Canvas6renderEh+0x10e>
90026e6e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90026e72:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90026e76:	fb08 2303 	mla	r3, r8, r3, r2
90026e7a:	e7ec      	b.n	90026e56 <_ZN8touchgfx6Canvas6renderEh+0x10e>
90026e7c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90026e80:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90026e84:	fb08 f303 	mul.w	r3, r8, r3
90026e88:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90026e8c:	e7e3      	b.n	90026e56 <_ZN8touchgfx6Canvas6renderEh+0x10e>
90026e8e:	2701      	movs	r7, #1
90026e90:	e7b5      	b.n	90026dfe <_ZN8touchgfx6Canvas6renderEh+0xb6>
90026e92:	bf00      	nop
90026e94:	2001aa40 	.word	0x2001aa40

90026e98 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90026e98:	4b06      	ldr	r3, [pc, #24]	@ (90026eb4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
90026e9a:	b510      	push	{r4, lr}
90026e9c:	781b      	ldrb	r3, [r3, #0]
90026e9e:	2b01      	cmp	r3, #1
90026ea0:	d107      	bne.n	90026eb2 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
90026ea2:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90026ea6:	680b      	ldr	r3, [r1, #0]
90026ea8:	6814      	ldr	r4, [r2, #0]
90026eaa:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90026eae:	6013      	str	r3, [r2, #0]
90026eb0:	600c      	str	r4, [r1, #0]
90026eb2:	bd10      	pop	{r4, pc}
90026eb4:	2001aa36 	.word	0x2001aa36

90026eb8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90026eb8:	b513      	push	{r0, r1, r4, lr}
90026eba:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
90026ebe:	4604      	mov	r4, r0
90026ec0:	e9cd 2100 	strd	r2, r1, [sp]
90026ec4:	b9a3      	cbnz	r3, 90026ef0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
90026ec6:	466a      	mov	r2, sp
90026ec8:	a901      	add	r1, sp, #4
90026eca:	4620      	mov	r0, r4
90026ecc:	f7ff ffe4 	bl	90026e98 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90026ed0:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90026ed2:	9901      	ldr	r1, [sp, #4]
90026ed4:	9a00      	ldr	r2, [sp, #0]
90026ed6:	1ac9      	subs	r1, r1, r3
90026ed8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90026eda:	1ad2      	subs	r2, r2, r3
90026edc:	9101      	str	r1, [sp, #4]
90026ede:	2a00      	cmp	r2, #0
90026ee0:	9200      	str	r2, [sp, #0]
90026ee2:	da0b      	bge.n	90026efc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
90026ee4:	2301      	movs	r3, #1
90026ee6:	2900      	cmp	r1, #0
90026ee8:	da0e      	bge.n	90026f08 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90026eea:	f043 0304 	orr.w	r3, r3, #4
90026eee:	e013      	b.n	90026f18 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90026ef0:	f7ff ff08 	bl	90026d04 <_ZN8touchgfx6Canvas5closeEv>
90026ef4:	2800      	cmp	r0, #0
90026ef6:	d1e6      	bne.n	90026ec6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90026ef8:	b002      	add	sp, #8
90026efa:	bd10      	pop	{r4, pc}
90026efc:	6da3      	ldr	r3, [r4, #88]	@ 0x58
90026efe:	429a      	cmp	r2, r3
90026f00:	bfac      	ite	ge
90026f02:	2302      	movge	r3, #2
90026f04:	2300      	movlt	r3, #0
90026f06:	e7ee      	b.n	90026ee6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90026f08:	6d60      	ldr	r0, [r4, #84]	@ 0x54
90026f0a:	4281      	cmp	r1, r0
90026f0c:	bfac      	ite	ge
90026f0e:	2008      	movge	r0, #8
90026f10:	2000      	movlt	r0, #0
90026f12:	4318      	orrs	r0, r3
90026f14:	b2c3      	uxtb	r3, r0
90026f16:	b158      	cbz	r0, 90026f30 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90026f18:	2200      	movs	r2, #0
90026f1a:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
90026f1e:	9901      	ldr	r1, [sp, #4]
90026f20:	9a00      	ldr	r2, [sp, #0]
90026f22:	66e1      	str	r1, [r4, #108]	@ 0x6c
90026f24:	6722      	str	r2, [r4, #112]	@ 0x70
90026f26:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
90026f2a:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
90026f2e:	e7e3      	b.n	90026ef8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90026f30:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90026f34:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90026f38:	4298      	cmp	r0, r3
90026f3a:	d803      	bhi.n	90026f44 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90026f3c:	f104 0014 	add.w	r0, r4, #20
90026f40:	f7ec fedc 	bl	90013cfc <_ZN8touchgfx7Outline6moveToEii>
90026f44:	2301      	movs	r3, #1
90026f46:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90026f4a:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
90026f4e:	2300      	movs	r3, #0
90026f50:	e7e5      	b.n	90026f1e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

90026f52 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
90026f52:	b573      	push	{r0, r1, r4, r5, r6, lr}
90026f54:	ab02      	add	r3, sp, #8
90026f56:	4604      	mov	r4, r0
90026f58:	9101      	str	r1, [sp, #4]
90026f5a:	a901      	add	r1, sp, #4
90026f5c:	f843 2d08 	str.w	r2, [r3, #-8]!
90026f60:	461a      	mov	r2, r3
90026f62:	f7ff ff99 	bl	90026e98 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90026f66:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90026f68:	9901      	ldr	r1, [sp, #4]
90026f6a:	9a00      	ldr	r2, [sp, #0]
90026f6c:	1ac9      	subs	r1, r1, r3
90026f6e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90026f70:	1ad2      	subs	r2, r2, r3
90026f72:	9101      	str	r1, [sp, #4]
90026f74:	2a00      	cmp	r2, #0
90026f76:	9200      	str	r2, [sp, #0]
90026f78:	db1c      	blt.n	90026fb4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90026f7a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
90026f7c:	429a      	cmp	r2, r3
90026f7e:	bfac      	ite	ge
90026f80:	2002      	movge	r0, #2
90026f82:	2000      	movlt	r0, #0
90026f84:	2900      	cmp	r1, #0
90026f86:	db17      	blt.n	90026fb8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90026f88:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90026f8a:	4299      	cmp	r1, r3
90026f8c:	bfac      	ite	ge
90026f8e:	2308      	movge	r3, #8
90026f90:	2300      	movlt	r3, #0
90026f92:	4303      	orrs	r3, r0
90026f94:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
90026f98:	b2dd      	uxtb	r5, r3
90026f9a:	b978      	cbnz	r0, 90026fbc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90026f9c:	f104 0014 	add.w	r0, r4, #20
90026fa0:	f7ff fd66 	bl	90026a70 <_ZN8touchgfx10Rasterizer6lineToEii>
90026fa4:	9b01      	ldr	r3, [sp, #4]
90026fa6:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
90026faa:	6623      	str	r3, [r4, #96]	@ 0x60
90026fac:	9b00      	ldr	r3, [sp, #0]
90026fae:	6663      	str	r3, [r4, #100]	@ 0x64
90026fb0:	b002      	add	sp, #8
90026fb2:	bd70      	pop	{r4, r5, r6, pc}
90026fb4:	2001      	movs	r0, #1
90026fb6:	e7e5      	b.n	90026f84 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90026fb8:	2304      	movs	r3, #4
90026fba:	e7ea      	b.n	90026f92 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90026fbc:	b113      	cbz	r3, 90026fc4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
90026fbe:	ea10 0305 	ands.w	r3, r0, r5
90026fc2:	d11c      	bne.n	90026ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90026fc4:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
90026fc8:	f104 0614 	add.w	r6, r4, #20
90026fcc:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
90026fd0:	b98b      	cbnz	r3, 90026ff6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
90026fd2:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90026fd6:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90026fda:	4298      	cmp	r0, r3
90026fdc:	d802      	bhi.n	90026fe4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90026fde:	4630      	mov	r0, r6
90026fe0:	f7ec fe8c 	bl	90013cfc <_ZN8touchgfx7Outline6moveToEii>
90026fe4:	2301      	movs	r3, #1
90026fe6:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90026fea:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
90026fee:	4630      	mov	r0, r6
90026ff0:	e9dd 2100 	ldrd	r2, r1, [sp]
90026ff4:	e7d4      	b.n	90026fa0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90026ff6:	4630      	mov	r0, r6
90026ff8:	f7ff fd3a 	bl	90026a70 <_ZN8touchgfx10Rasterizer6lineToEii>
90026ffc:	e7f7      	b.n	90026fee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90026ffe:	461d      	mov	r5, r3
90027000:	e7d0      	b.n	90026fa4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90027004 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
90027004:	b538      	push	{r3, r4, r5, lr}
90027006:	ed2d 8b10 	vpush	{d8-d15}
9002700a:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
9002700e:	4605      	mov	r5, r0
90027010:	eeb0 ca40 	vmov.f32	s24, s0
90027014:	460c      	mov	r4, r1
90027016:	eef0 ca60 	vmov.f32	s25, s1
9002701a:	ed9f ba57 	vldr	s22, [pc, #348]	@ 90027178 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
9002701e:	eeb0 da41 	vmov.f32	s26, s2
90027022:	eef0 da61 	vmov.f32	s27, s3
90027026:	eeb0 ea42 	vmov.f32	s28, s4
9002702a:	eef0 ea62 	vmov.f32	s29, s5
9002702e:	eef0 aa6b 	vmov.f32	s21, s23
90027032:	2c08      	cmp	r4, #8
90027034:	d86e      	bhi.n	90027114 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
90027036:	ee7e 6a4c 	vsub.f32	s13, s28, s24
9002703a:	ee7d 7aee 	vsub.f32	s15, s27, s29
9002703e:	ee3d 6a4e 	vsub.f32	s12, s26, s28
90027042:	ee3e 7aec 	vsub.f32	s14, s29, s25
90027046:	ee66 7ae7 	vnmul.f32	s15, s13, s15
9002704a:	ee3c fa0d 	vadd.f32	s30, s24, s26
9002704e:	ee7c faad 	vadd.f32	s31, s25, s27
90027052:	eee6 7a07 	vfma.f32	s15, s12, s14
90027056:	ee7d 9a0e 	vadd.f32	s19, s26, s28
9002705a:	ee3d aaae 	vadd.f32	s20, s27, s29
9002705e:	ee2f fa2b 	vmul.f32	s30, s30, s23
90027062:	ee6f faab 	vmul.f32	s31, s31, s23
90027066:	ee69 9aab 	vmul.f32	s19, s19, s23
9002706a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9002706e:	ee2a aa2b 	vmul.f32	s20, s20, s23
90027072:	ee7f 8a29 	vadd.f32	s17, s30, s19
90027076:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002707a:	ee3f 9a8a 	vadd.f32	s18, s31, s20
9002707e:	ee68 8aab 	vmul.f32	s17, s17, s23
90027082:	bf48      	it	mi
90027084:	eef1 7a67 	vnegmi.f32	s15, s15
90027088:	ee29 9a2b 	vmul.f32	s18, s18, s23
9002708c:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
90027090:	eef4 7acb 	vcmpe.f32	s15, s22
90027094:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027098:	dd3f      	ble.n	9002711a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
9002709a:	ee27 7a07 	vmul.f32	s14, s14, s14
9002709e:	ee67 7aa7 	vmul.f32	s15, s15, s15
900270a2:	eea6 7aa6 	vfma.f32	s14, s13, s13
900270a6:	ee27 7a06 	vmul.f32	s14, s14, s12
900270aa:	eef4 7ac7 	vcmpe.f32	s15, s14
900270ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900270b2:	d847      	bhi.n	90027144 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
900270b4:	ee7e 0a4d 	vsub.f32	s1, s28, s26
900270b8:	ee3e 0aed 	vsub.f32	s0, s29, s27
900270bc:	f000 fa57 	bl	9002756e <atan2f>
900270c0:	eeb0 8a40 	vmov.f32	s16, s0
900270c4:	ee7d 0a4c 	vsub.f32	s1, s26, s24
900270c8:	ee3d 0aec 	vsub.f32	s0, s27, s25
900270cc:	f000 fa4f 	bl	9002756e <atan2f>
900270d0:	ee38 0a40 	vsub.f32	s0, s16, s0
900270d4:	eddf 7a29 	vldr	s15, [pc, #164]	@ 9002717c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
900270d8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
900270dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900270e0:	bf48      	it	mi
900270e2:	eeb1 0a40 	vnegmi.f32	s0, s0
900270e6:	eeb4 0ae7 	vcmpe.f32	s0, s15
900270ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900270ee:	bfa4      	itt	ge
900270f0:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 90027180 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
900270f4:	ee37 0ac0 	vsubge.f32	s0, s15, s0
900270f8:	eddf 7a22 	vldr	s15, [pc, #136]	@ 90027184 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
900270fc:	eeb4 0ae7 	vcmpe.f32	s0, s15
90027100:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027104:	d51e      	bpl.n	90027144 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90027106:	eef0 0a49 	vmov.f32	s1, s18
9002710a:	4628      	mov	r0, r5
9002710c:	eeb0 0a68 	vmov.f32	s0, s17
90027110:	f7eb fc06 	bl	90012920 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90027114:	ecbd 8b10 	vpop	{d8-d15}
90027118:	bd38      	pop	{r3, r4, r5, pc}
9002711a:	ee7c 7a0e 	vadd.f32	s15, s24, s28
9002711e:	eeb0 7a68 	vmov.f32	s14, s17
90027122:	eef0 6a49 	vmov.f32	s13, s18
90027126:	eea7 7aea 	vfms.f32	s14, s15, s21
9002712a:	ee7c 7aae 	vadd.f32	s15, s25, s29
9002712e:	eee7 6aea 	vfms.f32	s13, s15, s21
90027132:	ee66 7aa6 	vmul.f32	s15, s13, s13
90027136:	eee7 7a07 	vfma.f32	s15, s14, s14
9002713a:	eef4 7ac6 	vcmpe.f32	s15, s12
9002713e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027142:	d9e0      	bls.n	90027106 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
90027144:	3401      	adds	r4, #1
90027146:	eef0 0a6c 	vmov.f32	s1, s25
9002714a:	eeb0 0a4c 	vmov.f32	s0, s24
9002714e:	4628      	mov	r0, r5
90027150:	4621      	mov	r1, r4
90027152:	eef0 2a49 	vmov.f32	s5, s18
90027156:	eeb0 2a68 	vmov.f32	s4, s17
9002715a:	eef0 1a6f 	vmov.f32	s3, s31
9002715e:	eeb0 1a4f 	vmov.f32	s2, s30
90027162:	f7ff ff4f 	bl	90027004 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90027166:	eef0 da4a 	vmov.f32	s27, s20
9002716a:	eeb0 da69 	vmov.f32	s26, s19
9002716e:	eef0 ca49 	vmov.f32	s25, s18
90027172:	eeb0 ca68 	vmov.f32	s24, s17
90027176:	e75c      	b.n	90027032 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
90027178:	2edbe6ff 	.word	0x2edbe6ff
9002717c:	40490fdb 	.word	0x40490fdb
90027180:	40c90fdb 	.word	0x40c90fdb
90027184:	3dcccccd 	.word	0x3dcccccd

90027188 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
90027188:	b530      	push	{r4, r5, lr}
9002718a:	ed2d 8b10 	vpush	{d8-d15}
9002718e:	eef0 8a40 	vmov.f32	s17, s0
90027192:	b085      	sub	sp, #20
90027194:	eef0 9a60 	vmov.f32	s19, s1
90027198:	4604      	mov	r4, r0
9002719a:	eef0 fa41 	vmov.f32	s31, s2
9002719e:	460d      	mov	r5, r1
900271a0:	eeb0 fa61 	vmov.f32	s30, s3
900271a4:	eef0 ba42 	vmov.f32	s23, s4
900271a8:	eeb0 ca62 	vmov.f32	s24, s5
900271ac:	eef0 aa43 	vmov.f32	s21, s6
900271b0:	eeb0 ba63 	vmov.f32	s22, s7
900271b4:	2d08      	cmp	r5, #8
900271b6:	f200 8113 	bhi.w	900273e0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
900271ba:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
900271be:	ee3b 6aaa 	vadd.f32	s12, s23, s21
900271c2:	ee7f 6aab 	vadd.f32	s13, s31, s23
900271c6:	ee38 daaf 	vadd.f32	s26, s17, s31
900271ca:	ee26 6a27 	vmul.f32	s12, s12, s15
900271ce:	ee7c ca0b 	vadd.f32	s25, s24, s22
900271d2:	ee2d da27 	vmul.f32	s26, s26, s15
900271d6:	ed8d 6a01 	vstr	s12, [sp, #4]
900271da:	eea6 6aa7 	vfma.f32	s12, s13, s15
900271de:	ee6c caa7 	vmul.f32	s25, s25, s15
900271e2:	eeb0 ea4d 	vmov.f32	s28, s26
900271e6:	ee79 da8f 	vadd.f32	s27, s19, s30
900271ea:	ee3f 7a0c 	vadd.f32	s14, s30, s24
900271ee:	eea6 eaa7 	vfma.f32	s28, s13, s15
900271f2:	ee66 6a27 	vmul.f32	s13, s12, s15
900271f6:	ee6d daa7 	vmul.f32	s27, s27, s15
900271fa:	edcd 6a03 	vstr	s13, [sp, #12]
900271fe:	eef0 6a6c 	vmov.f32	s13, s25
90027202:	eef0 ea6d 	vmov.f32	s29, s27
90027206:	ee2e ea27 	vmul.f32	s28, s28, s15
9002720a:	eee7 6a27 	vfma.f32	s13, s14, s15
9002720e:	eee7 ea27 	vfma.f32	s29, s14, s15
90027212:	ee26 7aa7 	vmul.f32	s14, s13, s15
90027216:	ee6e eaa7 	vmul.f32	s29, s29, s15
9002721a:	eef0 6a67 	vmov.f32	s13, s15
9002721e:	ed8d 7a02 	vstr	s14, [sp, #8]
90027222:	ed9d 7a03 	vldr	s14, [sp, #12]
90027226:	ee3e 9a07 	vadd.f32	s18, s28, s14
9002722a:	ed9d 7a02 	vldr	s14, [sp, #8]
9002722e:	ee3e aa87 	vadd.f32	s20, s29, s14
90027232:	ee29 9a27 	vmul.f32	s18, s18, s15
90027236:	ee2a aa27 	vmul.f32	s20, s20, s15
9002723a:	2d00      	cmp	r5, #0
9002723c:	f000 810b 	beq.w	90027456 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90027240:	ee7a 5ae8 	vsub.f32	s11, s21, s17
90027244:	eddf 4a95 	vldr	s9, [pc, #596]	@ 9002749c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90027248:	ee3f 7a4b 	vsub.f32	s14, s30, s22
9002724c:	ee7b 7a69 	vsub.f32	s15, s22, s19
90027250:	ee3f 6aea 	vsub.f32	s12, s31, s21
90027254:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90027258:	ee3b 5aea 	vsub.f32	s10, s23, s21
9002725c:	eea6 7a27 	vfma.f32	s14, s12, s15
90027260:	ee3c 6a4b 	vsub.f32	s12, s24, s22
90027264:	ee25 6ac6 	vnmul.f32	s12, s11, s12
90027268:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9002726c:	eea5 6a27 	vfma.f32	s12, s10, s15
90027270:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
90027274:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027278:	bf48      	it	mi
9002727a:	eeb1 7a47 	vnegmi.f32	s14, s14
9002727e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
90027282:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027286:	eeb4 7ae4 	vcmpe.f32	s14, s9
9002728a:	bf48      	it	mi
9002728c:	eeb1 6a46 	vnegmi.f32	s12, s12
90027290:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027294:	f340 80a8 	ble.w	900273e8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
90027298:	eeb4 6ae4 	vcmpe.f32	s12, s9
9002729c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900272a0:	dd5a      	ble.n	90027358 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
900272a2:	ee65 5aa5 	vmul.f32	s11, s11, s11
900272a6:	ee37 7a06 	vadd.f32	s14, s14, s12
900272aa:	eee7 5aa7 	vfma.f32	s11, s15, s15
900272ae:	ee27 7a07 	vmul.f32	s14, s14, s14
900272b2:	ee65 7a85 	vmul.f32	s15, s11, s10
900272b6:	eeb4 7ae7 	vcmpe.f32	s14, s15
900272ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900272be:	f200 80ca 	bhi.w	90027456 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
900272c2:	ee7b 0aef 	vsub.f32	s1, s23, s31
900272c6:	ee3c 0a4f 	vsub.f32	s0, s24, s30
900272ca:	f000 f950 	bl	9002756e <atan2f>
900272ce:	eeb0 8a40 	vmov.f32	s16, s0
900272d2:	ee7f 0ae8 	vsub.f32	s1, s31, s17
900272d6:	ee3f 0a69 	vsub.f32	s0, s30, s19
900272da:	f000 f948 	bl	9002756e <atan2f>
900272de:	ee38 fa40 	vsub.f32	s30, s16, s0
900272e2:	ee7a 0aeb 	vsub.f32	s1, s21, s23
900272e6:	ee3b 0a4c 	vsub.f32	s0, s22, s24
900272ea:	eeb5 fac0 	vcmpe.f32	s30, #0.0
900272ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900272f2:	bf48      	it	mi
900272f4:	eeb1 fa4f 	vnegmi.f32	s30, s30
900272f8:	f000 f939 	bl	9002756e <atan2f>
900272fc:	ee30 0a48 	vsub.f32	s0, s0, s16
90027300:	eddf 7a67 	vldr	s15, [pc, #412]	@ 900274a0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90027304:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90027308:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002730c:	eeb4 fae7 	vcmpe.f32	s30, s15
90027310:	eddf 7a63 	vldr	s15, [pc, #396]	@ 900274a0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90027314:	bf48      	it	mi
90027316:	eeb1 0a40 	vnegmi.f32	s0, s0
9002731a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002731e:	eeb4 0ae7 	vcmpe.f32	s0, s15
90027322:	eddf 7a60 	vldr	s15, [pc, #384]	@ 900274a4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90027326:	bfa4      	itt	ge
90027328:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 900274a8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002732c:	ee37 fa4f 	vsubge.f32	s30, s14, s30
90027330:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027334:	bfa4      	itt	ge
90027336:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 900274a8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002733a:	ee37 0a40 	vsubge.f32	s0, s14, s0
9002733e:	ee3f 0a00 	vadd.f32	s0, s30, s0
90027342:	eeb4 0ae7 	vcmpe.f32	s0, s15
90027346:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002734a:	f140 8084 	bpl.w	90027456 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002734e:	eef0 0a4a 	vmov.f32	s1, s20
90027352:	eeb0 0a49 	vmov.f32	s0, s18
90027356:	e040      	b.n	900273da <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
90027358:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002735c:	ee27 7a07 	vmul.f32	s14, s14, s14
90027360:	eee5 7aa5 	vfma.f32	s15, s11, s11
90027364:	ee67 7a85 	vmul.f32	s15, s15, s10
90027368:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002736c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027370:	d871      	bhi.n	90027456 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90027372:	ee7b 0aef 	vsub.f32	s1, s23, s31
90027376:	ee3c 0a4f 	vsub.f32	s0, s24, s30
9002737a:	f000 f8f8 	bl	9002756e <atan2f>
9002737e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90027382:	eeb0 8a40 	vmov.f32	s16, s0
90027386:	ee3f 0a69 	vsub.f32	s0, s30, s19
9002738a:	f000 f8f0 	bl	9002756e <atan2f>
9002738e:	ee38 0a40 	vsub.f32	s0, s16, s0
90027392:	eddf 7a43 	vldr	s15, [pc, #268]	@ 900274a0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90027396:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9002739a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002739e:	bf48      	it	mi
900273a0:	eeb1 0a40 	vnegmi.f32	s0, s0
900273a4:	eeb4 0ae7 	vcmpe.f32	s0, s15
900273a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900273ac:	bfa4      	itt	ge
900273ae:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 900274a8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
900273b2:	ee37 0ac0 	vsubge.f32	s0, s15, s0
900273b6:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 900274a4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
900273ba:	eeb4 0ae7 	vcmpe.f32	s0, s15
900273be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900273c2:	d548      	bpl.n	90027456 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
900273c4:	eef0 0a4f 	vmov.f32	s1, s30
900273c8:	4620      	mov	r0, r4
900273ca:	eeb0 0a6f 	vmov.f32	s0, s31
900273ce:	f7eb faa7 	bl	90012920 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
900273d2:	eef0 0a4c 	vmov.f32	s1, s24
900273d6:	eeb0 0a6b 	vmov.f32	s0, s23
900273da:	4620      	mov	r0, r4
900273dc:	f7eb faa0 	bl	90012920 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
900273e0:	b005      	add	sp, #20
900273e2:	ecbd 8b10 	vpop	{d8-d15}
900273e6:	bd30      	pop	{r4, r5, pc}
900273e8:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 9002749c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
900273ec:	eeb4 6ac7 	vcmpe.f32	s12, s14
900273f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900273f4:	dd19      	ble.n	9002742a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
900273f6:	ee67 7aa7 	vmul.f32	s15, s15, s15
900273fa:	ee26 7a06 	vmul.f32	s14, s12, s12
900273fe:	eee5 7aa5 	vfma.f32	s15, s11, s11
90027402:	ee67 7a85 	vmul.f32	s15, s15, s10
90027406:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002740a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002740e:	d822      	bhi.n	90027456 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90027410:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90027414:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90027418:	f000 f8a9 	bl	9002756e <atan2f>
9002741c:	ee7b 0aef 	vsub.f32	s1, s23, s31
90027420:	eeb0 8a40 	vmov.f32	s16, s0
90027424:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90027428:	e7af      	b.n	9002738a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
9002742a:	ee78 7aaa 	vadd.f32	s15, s17, s21
9002742e:	eeb0 7a49 	vmov.f32	s14, s18
90027432:	eeb0 6a4a 	vmov.f32	s12, s20
90027436:	eea7 7ae6 	vfms.f32	s14, s15, s13
9002743a:	ee79 7a8b 	vadd.f32	s15, s19, s22
9002743e:	eea7 6ae6 	vfms.f32	s12, s15, s13
90027442:	ee66 7a06 	vmul.f32	s15, s12, s12
90027446:	eee7 7a07 	vfma.f32	s15, s14, s14
9002744a:	eef4 7ac5 	vcmpe.f32	s15, s10
9002744e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027452:	f67f af7c 	bls.w	9002734e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
90027456:	3501      	adds	r5, #1
90027458:	eef0 0a69 	vmov.f32	s1, s19
9002745c:	eeb0 0a68 	vmov.f32	s0, s17
90027460:	4620      	mov	r0, r4
90027462:	4629      	mov	r1, r5
90027464:	eef0 3a4a 	vmov.f32	s7, s20
90027468:	eeb0 3a49 	vmov.f32	s6, s18
9002746c:	eef0 2a6e 	vmov.f32	s5, s29
90027470:	eeb0 2a4e 	vmov.f32	s4, s28
90027474:	eef0 1a6d 	vmov.f32	s3, s27
90027478:	eeb0 1a4d 	vmov.f32	s2, s26
9002747c:	f7ff fe84 	bl	90027188 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90027480:	eeb0 ca6c 	vmov.f32	s24, s25
90027484:	eddd ba01 	vldr	s23, [sp, #4]
90027488:	eef0 9a4a 	vmov.f32	s19, s20
9002748c:	ed9d fa02 	vldr	s30, [sp, #8]
90027490:	eef0 8a49 	vmov.f32	s17, s18
90027494:	eddd fa03 	vldr	s31, [sp, #12]
90027498:	e68c      	b.n	900271b4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
9002749a:	bf00      	nop
9002749c:	2edbe6ff 	.word	0x2edbe6ff
900274a0:	40490fdb 	.word	0x40490fdb
900274a4:	3dcccccd 	.word	0x3dcccccd
900274a8:	40c90fdb 	.word	0x40c90fdb

900274ac <_ZN8touchgfx6CanvasD1Ev>:
900274ac:	4b04      	ldr	r3, [pc, #16]	@ (900274c0 <_ZN8touchgfx6CanvasD1Ev+0x14>)
900274ae:	b510      	push	{r4, lr}
900274b0:	4604      	mov	r4, r0
900274b2:	f840 3b14 	str.w	r3, [r0], #20
900274b6:	f7eb ff29 	bl	9001330c <_ZN8touchgfx7OutlineD1Ev>
900274ba:	4620      	mov	r0, r4
900274bc:	bd10      	pop	{r4, pc}
900274be:	bf00      	nop
900274c0:	90035f0c 	.word	0x90035f0c

900274c4 <_ZN8touchgfx6CanvasD0Ev>:
900274c4:	b510      	push	{r4, lr}
900274c6:	4604      	mov	r4, r0
900274c8:	f7ff fff0 	bl	900274ac <_ZN8touchgfx6CanvasD1Ev>
900274cc:	2174      	movs	r1, #116	@ 0x74
900274ce:	4620      	mov	r0, r4
900274d0:	f000 f826 	bl	90027520 <_ZdlPvj>
900274d4:	4620      	mov	r0, r4
900274d6:	bd10      	pop	{r4, pc}

900274d8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
900274d8:	790b      	ldrb	r3, [r1, #4]
900274da:	2b00      	cmp	r3, #0
900274dc:	bf0c      	ite	eq
900274de:	2301      	moveq	r3, #1
900274e0:	2300      	movne	r3, #0
900274e2:	b570      	push	{r4, r5, r6, lr}
900274e4:	4604      	mov	r4, r0
900274e6:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
900274ea:	460e      	mov	r6, r1
900274ec:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
900274f0:	d109      	bne.n	90027506 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
900274f2:	b14d      	cbz	r5, 90027508 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
900274f4:	7933      	ldrb	r3, [r6, #4]
900274f6:	2b01      	cmp	r3, #1
900274f8:	d10c      	bne.n	90027514 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
900274fa:	6823      	ldr	r3, [r4, #0]
900274fc:	4620      	mov	r0, r4
900274fe:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90027500:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90027504:	4718      	bx	r3
90027506:	b12d      	cbz	r5, 90027514 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90027508:	6823      	ldr	r3, [r4, #0]
9002750a:	4620      	mov	r0, r4
9002750c:	695b      	ldr	r3, [r3, #20]
9002750e:	4798      	blx	r3
90027510:	2d00      	cmp	r5, #0
90027512:	d1ef      	bne.n	900274f4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90027514:	bd70      	pop	{r4, r5, r6, pc}

90027516 <__aeabi_atexit>:
90027516:	460b      	mov	r3, r1
90027518:	4601      	mov	r1, r0
9002751a:	4618      	mov	r0, r3
9002751c:	f001 b85c 	b.w	900285d8 <__cxa_atexit>

90027520 <_ZdlPvj>:
90027520:	f000 b812 	b.w	90027548 <_ZdlPv>

90027524 <__cxa_guard_acquire>:
90027524:	6802      	ldr	r2, [r0, #0]
90027526:	07d2      	lsls	r2, r2, #31
90027528:	4603      	mov	r3, r0
9002752a:	d405      	bmi.n	90027538 <__cxa_guard_acquire+0x14>
9002752c:	7842      	ldrb	r2, [r0, #1]
9002752e:	b102      	cbz	r2, 90027532 <__cxa_guard_acquire+0xe>
90027530:	deff      	udf	#255	@ 0xff
90027532:	2001      	movs	r0, #1
90027534:	7058      	strb	r0, [r3, #1]
90027536:	4770      	bx	lr
90027538:	2000      	movs	r0, #0
9002753a:	4770      	bx	lr

9002753c <__cxa_guard_release>:
9002753c:	2301      	movs	r3, #1
9002753e:	6003      	str	r3, [r0, #0]
90027540:	4770      	bx	lr

90027542 <__cxa_pure_virtual>:
90027542:	b508      	push	{r3, lr}
90027544:	f000 f80e 	bl	90027564 <_ZSt9terminatev>

90027548 <_ZdlPv>:
90027548:	f000 bf52 	b.w	900283f0 <free>

9002754c <_ZN10__cxxabiv111__terminateEPFvvE>:
9002754c:	b508      	push	{r3, lr}
9002754e:	4780      	blx	r0
90027550:	f000 ff1a 	bl	90028388 <abort>

90027554 <_ZSt13get_terminatev>:
90027554:	4b02      	ldr	r3, [pc, #8]	@ (90027560 <_ZSt13get_terminatev+0xc>)
90027556:	6818      	ldr	r0, [r3, #0]
90027558:	f3bf 8f5b 	dmb	ish
9002755c:	4770      	bx	lr
9002755e:	bf00      	nop
90027560:	200001bc 	.word	0x200001bc

90027564 <_ZSt9terminatev>:
90027564:	b508      	push	{r3, lr}
90027566:	f7ff fff5 	bl	90027554 <_ZSt13get_terminatev>
9002756a:	f7ff ffef 	bl	9002754c <_ZN10__cxxabiv111__terminateEPFvvE>

9002756e <atan2f>:
9002756e:	f000 b94d 	b.w	9002780c <__ieee754_atan2f>
	...

90027574 <sqrtf>:
90027574:	b508      	push	{r3, lr}
90027576:	ed2d 8b02 	vpush	{d8}
9002757a:	eeb0 8a40 	vmov.f32	s16, s0
9002757e:	f000 f8a1 	bl	900276c4 <__ieee754_sqrtf>
90027582:	eeb4 8a48 	vcmp.f32	s16, s16
90027586:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002758a:	d60c      	bvs.n	900275a6 <sqrtf+0x32>
9002758c:	eddf 8a07 	vldr	s17, [pc, #28]	@ 900275ac <sqrtf+0x38>
90027590:	eeb4 8ae8 	vcmpe.f32	s16, s17
90027594:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027598:	d505      	bpl.n	900275a6 <sqrtf+0x32>
9002759a:	f001 fa25 	bl	900289e8 <__errno>
9002759e:	ee88 0aa8 	vdiv.f32	s0, s17, s17
900275a2:	2321      	movs	r3, #33	@ 0x21
900275a4:	6003      	str	r3, [r0, #0]
900275a6:	ecbd 8b02 	vpop	{d8}
900275aa:	bd08      	pop	{r3, pc}
900275ac:	00000000 	.word	0x00000000

900275b0 <cosf>:
900275b0:	ee10 3a10 	vmov	r3, s0
900275b4:	b507      	push	{r0, r1, r2, lr}
900275b6:	4a1e      	ldr	r2, [pc, #120]	@ (90027630 <cosf+0x80>)
900275b8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
900275bc:	4293      	cmp	r3, r2
900275be:	d806      	bhi.n	900275ce <cosf+0x1e>
900275c0:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 90027634 <cosf+0x84>
900275c4:	b003      	add	sp, #12
900275c6:	f85d eb04 	ldr.w	lr, [sp], #4
900275ca:	f000 b87f 	b.w	900276cc <__kernel_cosf>
900275ce:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
900275d2:	d304      	bcc.n	900275de <cosf+0x2e>
900275d4:	ee30 0a40 	vsub.f32	s0, s0, s0
900275d8:	b003      	add	sp, #12
900275da:	f85d fb04 	ldr.w	pc, [sp], #4
900275de:	4668      	mov	r0, sp
900275e0:	f000 f9b4 	bl	9002794c <__ieee754_rem_pio2f>
900275e4:	f000 0003 	and.w	r0, r0, #3
900275e8:	2801      	cmp	r0, #1
900275ea:	d009      	beq.n	90027600 <cosf+0x50>
900275ec:	2802      	cmp	r0, #2
900275ee:	d010      	beq.n	90027612 <cosf+0x62>
900275f0:	b9b0      	cbnz	r0, 90027620 <cosf+0x70>
900275f2:	eddd 0a01 	vldr	s1, [sp, #4]
900275f6:	ed9d 0a00 	vldr	s0, [sp]
900275fa:	f000 f867 	bl	900276cc <__kernel_cosf>
900275fe:	e7eb      	b.n	900275d8 <cosf+0x28>
90027600:	eddd 0a01 	vldr	s1, [sp, #4]
90027604:	ed9d 0a00 	vldr	s0, [sp]
90027608:	f000 f8b8 	bl	9002777c <__kernel_sinf>
9002760c:	eeb1 0a40 	vneg.f32	s0, s0
90027610:	e7e2      	b.n	900275d8 <cosf+0x28>
90027612:	eddd 0a01 	vldr	s1, [sp, #4]
90027616:	ed9d 0a00 	vldr	s0, [sp]
9002761a:	f000 f857 	bl	900276cc <__kernel_cosf>
9002761e:	e7f5      	b.n	9002760c <cosf+0x5c>
90027620:	eddd 0a01 	vldr	s1, [sp, #4]
90027624:	ed9d 0a00 	vldr	s0, [sp]
90027628:	2001      	movs	r0, #1
9002762a:	f000 f8a7 	bl	9002777c <__kernel_sinf>
9002762e:	e7d3      	b.n	900275d8 <cosf+0x28>
90027630:	3f490fd8 	.word	0x3f490fd8
90027634:	00000000 	.word	0x00000000

90027638 <sinf>:
90027638:	ee10 3a10 	vmov	r3, s0
9002763c:	b507      	push	{r0, r1, r2, lr}
9002763e:	4a1f      	ldr	r2, [pc, #124]	@ (900276bc <sinf+0x84>)
90027640:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
90027644:	4293      	cmp	r3, r2
90027646:	d807      	bhi.n	90027658 <sinf+0x20>
90027648:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 900276c0 <sinf+0x88>
9002764c:	2000      	movs	r0, #0
9002764e:	b003      	add	sp, #12
90027650:	f85d eb04 	ldr.w	lr, [sp], #4
90027654:	f000 b892 	b.w	9002777c <__kernel_sinf>
90027658:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002765c:	d304      	bcc.n	90027668 <sinf+0x30>
9002765e:	ee30 0a40 	vsub.f32	s0, s0, s0
90027662:	b003      	add	sp, #12
90027664:	f85d fb04 	ldr.w	pc, [sp], #4
90027668:	4668      	mov	r0, sp
9002766a:	f000 f96f 	bl	9002794c <__ieee754_rem_pio2f>
9002766e:	f000 0003 	and.w	r0, r0, #3
90027672:	2801      	cmp	r0, #1
90027674:	d00a      	beq.n	9002768c <sinf+0x54>
90027676:	2802      	cmp	r0, #2
90027678:	d00f      	beq.n	9002769a <sinf+0x62>
9002767a:	b9c0      	cbnz	r0, 900276ae <sinf+0x76>
9002767c:	eddd 0a01 	vldr	s1, [sp, #4]
90027680:	ed9d 0a00 	vldr	s0, [sp]
90027684:	2001      	movs	r0, #1
90027686:	f000 f879 	bl	9002777c <__kernel_sinf>
9002768a:	e7ea      	b.n	90027662 <sinf+0x2a>
9002768c:	eddd 0a01 	vldr	s1, [sp, #4]
90027690:	ed9d 0a00 	vldr	s0, [sp]
90027694:	f000 f81a 	bl	900276cc <__kernel_cosf>
90027698:	e7e3      	b.n	90027662 <sinf+0x2a>
9002769a:	eddd 0a01 	vldr	s1, [sp, #4]
9002769e:	ed9d 0a00 	vldr	s0, [sp]
900276a2:	2001      	movs	r0, #1
900276a4:	f000 f86a 	bl	9002777c <__kernel_sinf>
900276a8:	eeb1 0a40 	vneg.f32	s0, s0
900276ac:	e7d9      	b.n	90027662 <sinf+0x2a>
900276ae:	eddd 0a01 	vldr	s1, [sp, #4]
900276b2:	ed9d 0a00 	vldr	s0, [sp]
900276b6:	f000 f809 	bl	900276cc <__kernel_cosf>
900276ba:	e7f5      	b.n	900276a8 <sinf+0x70>
900276bc:	3f490fd8 	.word	0x3f490fd8
900276c0:	00000000 	.word	0x00000000

900276c4 <__ieee754_sqrtf>:
900276c4:	eeb1 0ac0 	vsqrt.f32	s0, s0
900276c8:	4770      	bx	lr
	...

900276cc <__kernel_cosf>:
900276cc:	ee10 3a10 	vmov	r3, s0
900276d0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
900276d4:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
900276d8:	eef0 6a40 	vmov.f32	s13, s0
900276dc:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
900276e0:	d204      	bcs.n	900276ec <__kernel_cosf+0x20>
900276e2:	eefd 7ae6 	vcvt.s32.f32	s15, s13
900276e6:	ee17 2a90 	vmov	r2, s15
900276ea:	b342      	cbz	r2, 9002773e <__kernel_cosf+0x72>
900276ec:	ee26 7aa6 	vmul.f32	s14, s13, s13
900276f0:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 9002775c <__kernel_cosf+0x90>
900276f4:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 90027760 <__kernel_cosf+0x94>
900276f8:	4a1a      	ldr	r2, [pc, #104]	@ (90027764 <__kernel_cosf+0x98>)
900276fa:	eea7 6a27 	vfma.f32	s12, s14, s15
900276fe:	4293      	cmp	r3, r2
90027700:	eddf 7a19 	vldr	s15, [pc, #100]	@ 90027768 <__kernel_cosf+0x9c>
90027704:	eee6 7a07 	vfma.f32	s15, s12, s14
90027708:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 9002776c <__kernel_cosf+0xa0>
9002770c:	eea7 6a87 	vfma.f32	s12, s15, s14
90027710:	eddf 7a17 	vldr	s15, [pc, #92]	@ 90027770 <__kernel_cosf+0xa4>
90027714:	eee6 7a07 	vfma.f32	s15, s12, s14
90027718:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 90027774 <__kernel_cosf+0xa8>
9002771c:	eea7 6a87 	vfma.f32	s12, s15, s14
90027720:	ee60 0ae6 	vnmul.f32	s1, s1, s13
90027724:	ee26 6a07 	vmul.f32	s12, s12, s14
90027728:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
9002772c:	eee7 0a06 	vfma.f32	s1, s14, s12
90027730:	ee67 7a27 	vmul.f32	s15, s14, s15
90027734:	d804      	bhi.n	90027740 <__kernel_cosf+0x74>
90027736:	ee77 7ae0 	vsub.f32	s15, s15, s1
9002773a:	ee30 0a67 	vsub.f32	s0, s0, s15
9002773e:	4770      	bx	lr
90027740:	4a0d      	ldr	r2, [pc, #52]	@ (90027778 <__kernel_cosf+0xac>)
90027742:	4293      	cmp	r3, r2
90027744:	bf9a      	itte	ls
90027746:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
9002774a:	ee07 3a10 	vmovls	s14, r3
9002774e:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
90027752:	ee30 0a47 	vsub.f32	s0, s0, s14
90027756:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002775a:	e7ec      	b.n	90027736 <__kernel_cosf+0x6a>
9002775c:	ad47d74e 	.word	0xad47d74e
90027760:	310f74f6 	.word	0x310f74f6
90027764:	3e999999 	.word	0x3e999999
90027768:	b493f27c 	.word	0xb493f27c
9002776c:	37d00d01 	.word	0x37d00d01
90027770:	bab60b61 	.word	0xbab60b61
90027774:	3d2aaaab 	.word	0x3d2aaaab
90027778:	3f480000 	.word	0x3f480000

9002777c <__kernel_sinf>:
9002777c:	ee10 3a10 	vmov	r3, s0
90027780:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
90027784:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
90027788:	d204      	bcs.n	90027794 <__kernel_sinf+0x18>
9002778a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
9002778e:	ee17 3a90 	vmov	r3, s15
90027792:	b35b      	cbz	r3, 900277ec <__kernel_sinf+0x70>
90027794:	ee20 7a00 	vmul.f32	s14, s0, s0
90027798:	eddf 7a15 	vldr	s15, [pc, #84]	@ 900277f0 <__kernel_sinf+0x74>
9002779c:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 900277f4 <__kernel_sinf+0x78>
900277a0:	eea7 6a27 	vfma.f32	s12, s14, s15
900277a4:	eddf 7a14 	vldr	s15, [pc, #80]	@ 900277f8 <__kernel_sinf+0x7c>
900277a8:	eee6 7a07 	vfma.f32	s15, s12, s14
900277ac:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 900277fc <__kernel_sinf+0x80>
900277b0:	eea7 6a87 	vfma.f32	s12, s15, s14
900277b4:	eddf 7a12 	vldr	s15, [pc, #72]	@ 90027800 <__kernel_sinf+0x84>
900277b8:	ee60 6a07 	vmul.f32	s13, s0, s14
900277bc:	eee6 7a07 	vfma.f32	s15, s12, s14
900277c0:	b930      	cbnz	r0, 900277d0 <__kernel_sinf+0x54>
900277c2:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 90027804 <__kernel_sinf+0x88>
900277c6:	eea7 6a27 	vfma.f32	s12, s14, s15
900277ca:	eea6 0a26 	vfma.f32	s0, s12, s13
900277ce:	4770      	bx	lr
900277d0:	ee67 7ae6 	vnmul.f32	s15, s15, s13
900277d4:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
900277d8:	eee0 7a86 	vfma.f32	s15, s1, s12
900277dc:	eed7 0a87 	vfnms.f32	s1, s15, s14
900277e0:	eddf 7a09 	vldr	s15, [pc, #36]	@ 90027808 <__kernel_sinf+0x8c>
900277e4:	eee6 0aa7 	vfma.f32	s1, s13, s15
900277e8:	ee30 0a60 	vsub.f32	s0, s0, s1
900277ec:	4770      	bx	lr
900277ee:	bf00      	nop
900277f0:	2f2ec9d3 	.word	0x2f2ec9d3
900277f4:	b2d72f34 	.word	0xb2d72f34
900277f8:	3638ef1b 	.word	0x3638ef1b
900277fc:	b9500d01 	.word	0xb9500d01
90027800:	3c088889 	.word	0x3c088889
90027804:	be2aaaab 	.word	0xbe2aaaab
90027808:	3e2aaaab 	.word	0x3e2aaaab

9002780c <__ieee754_atan2f>:
9002780c:	ee10 2a90 	vmov	r2, s1
90027810:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
90027814:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
90027818:	b510      	push	{r4, lr}
9002781a:	eef0 7a40 	vmov.f32	s15, s0
9002781e:	d806      	bhi.n	9002782e <__ieee754_atan2f+0x22>
90027820:	ee10 0a10 	vmov	r0, s0
90027824:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
90027828:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002782c:	d904      	bls.n	90027838 <__ieee754_atan2f+0x2c>
9002782e:	ee77 7aa0 	vadd.f32	s15, s15, s1
90027832:	eeb0 0a67 	vmov.f32	s0, s15
90027836:	bd10      	pop	{r4, pc}
90027838:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
9002783c:	d103      	bne.n	90027846 <__ieee754_atan2f+0x3a>
9002783e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90027842:	f000 b9b3 	b.w	90027bac <atanf>
90027846:	1794      	asrs	r4, r2, #30
90027848:	f004 0402 	and.w	r4, r4, #2
9002784c:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
90027850:	b943      	cbnz	r3, 90027864 <__ieee754_atan2f+0x58>
90027852:	2c02      	cmp	r4, #2
90027854:	d05e      	beq.n	90027914 <__ieee754_atan2f+0x108>
90027856:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 90027928 <__ieee754_atan2f+0x11c>
9002785a:	2c03      	cmp	r4, #3
9002785c:	bf08      	it	eq
9002785e:	eef0 7a47 	vmoveq.f32	s15, s14
90027862:	e7e6      	b.n	90027832 <__ieee754_atan2f+0x26>
90027864:	b941      	cbnz	r1, 90027878 <__ieee754_atan2f+0x6c>
90027866:	eddf 7a31 	vldr	s15, [pc, #196]	@ 9002792c <__ieee754_atan2f+0x120>
9002786a:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 90027930 <__ieee754_atan2f+0x124>
9002786e:	2800      	cmp	r0, #0
90027870:	bfa8      	it	ge
90027872:	eef0 7a47 	vmovge.f32	s15, s14
90027876:	e7dc      	b.n	90027832 <__ieee754_atan2f+0x26>
90027878:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002787c:	d110      	bne.n	900278a0 <__ieee754_atan2f+0x94>
9002787e:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
90027882:	f104 34ff 	add.w	r4, r4, #4294967295
90027886:	d107      	bne.n	90027898 <__ieee754_atan2f+0x8c>
90027888:	2c02      	cmp	r4, #2
9002788a:	d846      	bhi.n	9002791a <__ieee754_atan2f+0x10e>
9002788c:	4b29      	ldr	r3, [pc, #164]	@ (90027934 <__ieee754_atan2f+0x128>)
9002788e:	eb03 0384 	add.w	r3, r3, r4, lsl #2
90027892:	edd3 7a00 	vldr	s15, [r3]
90027896:	e7cc      	b.n	90027832 <__ieee754_atan2f+0x26>
90027898:	2c02      	cmp	r4, #2
9002789a:	d841      	bhi.n	90027920 <__ieee754_atan2f+0x114>
9002789c:	4b26      	ldr	r3, [pc, #152]	@ (90027938 <__ieee754_atan2f+0x12c>)
9002789e:	e7f6      	b.n	9002788e <__ieee754_atan2f+0x82>
900278a0:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
900278a4:	d0df      	beq.n	90027866 <__ieee754_atan2f+0x5a>
900278a6:	1a5b      	subs	r3, r3, r1
900278a8:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
900278ac:	ea4f 51e3 	mov.w	r1, r3, asr #23
900278b0:	da1a      	bge.n	900278e8 <__ieee754_atan2f+0xdc>
900278b2:	2a00      	cmp	r2, #0
900278b4:	da01      	bge.n	900278ba <__ieee754_atan2f+0xae>
900278b6:	313c      	adds	r1, #60	@ 0x3c
900278b8:	db19      	blt.n	900278ee <__ieee754_atan2f+0xe2>
900278ba:	ee87 0aa0 	vdiv.f32	s0, s15, s1
900278be:	f000 fa49 	bl	90027d54 <fabsf>
900278c2:	f000 f973 	bl	90027bac <atanf>
900278c6:	eef0 7a40 	vmov.f32	s15, s0
900278ca:	2c01      	cmp	r4, #1
900278cc:	d012      	beq.n	900278f4 <__ieee754_atan2f+0xe8>
900278ce:	2c02      	cmp	r4, #2
900278d0:	d017      	beq.n	90027902 <__ieee754_atan2f+0xf6>
900278d2:	2c00      	cmp	r4, #0
900278d4:	d0ad      	beq.n	90027832 <__ieee754_atan2f+0x26>
900278d6:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 9002793c <__ieee754_atan2f+0x130>
900278da:	ee77 7a87 	vadd.f32	s15, s15, s14
900278de:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 90027940 <__ieee754_atan2f+0x134>
900278e2:	ee77 7ac7 	vsub.f32	s15, s15, s14
900278e6:	e7a4      	b.n	90027832 <__ieee754_atan2f+0x26>
900278e8:	eddf 7a11 	vldr	s15, [pc, #68]	@ 90027930 <__ieee754_atan2f+0x124>
900278ec:	e7ed      	b.n	900278ca <__ieee754_atan2f+0xbe>
900278ee:	eddf 7a15 	vldr	s15, [pc, #84]	@ 90027944 <__ieee754_atan2f+0x138>
900278f2:	e7ea      	b.n	900278ca <__ieee754_atan2f+0xbe>
900278f4:	ee17 3a90 	vmov	r3, s15
900278f8:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
900278fc:	ee07 3a90 	vmov	s15, r3
90027900:	e797      	b.n	90027832 <__ieee754_atan2f+0x26>
90027902:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 9002793c <__ieee754_atan2f+0x130>
90027906:	ee77 7a87 	vadd.f32	s15, s15, s14
9002790a:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 90027940 <__ieee754_atan2f+0x134>
9002790e:	ee77 7a67 	vsub.f32	s15, s14, s15
90027912:	e78e      	b.n	90027832 <__ieee754_atan2f+0x26>
90027914:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 90027940 <__ieee754_atan2f+0x134>
90027918:	e78b      	b.n	90027832 <__ieee754_atan2f+0x26>
9002791a:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 90027948 <__ieee754_atan2f+0x13c>
9002791e:	e788      	b.n	90027832 <__ieee754_atan2f+0x26>
90027920:	eddf 7a08 	vldr	s15, [pc, #32]	@ 90027944 <__ieee754_atan2f+0x138>
90027924:	e785      	b.n	90027832 <__ieee754_atan2f+0x26>
90027926:	bf00      	nop
90027928:	c0490fdb 	.word	0xc0490fdb
9002792c:	bfc90fdb 	.word	0xbfc90fdb
90027930:	3fc90fdb 	.word	0x3fc90fdb
90027934:	90035f24 	.word	0x90035f24
90027938:	90035f18 	.word	0x90035f18
9002793c:	33bbbd2e 	.word	0x33bbbd2e
90027940:	40490fdb 	.word	0x40490fdb
90027944:	00000000 	.word	0x00000000
90027948:	3f490fdb 	.word	0x3f490fdb

9002794c <__ieee754_rem_pio2f>:
9002794c:	b5f0      	push	{r4, r5, r6, r7, lr}
9002794e:	ee10 6a10 	vmov	r6, s0
90027952:	4b88      	ldr	r3, [pc, #544]	@ (90027b74 <__ieee754_rem_pio2f+0x228>)
90027954:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
90027958:	429d      	cmp	r5, r3
9002795a:	b087      	sub	sp, #28
9002795c:	4604      	mov	r4, r0
9002795e:	d805      	bhi.n	9002796c <__ieee754_rem_pio2f+0x20>
90027960:	2300      	movs	r3, #0
90027962:	ed80 0a00 	vstr	s0, [r0]
90027966:	6043      	str	r3, [r0, #4]
90027968:	2000      	movs	r0, #0
9002796a:	e022      	b.n	900279b2 <__ieee754_rem_pio2f+0x66>
9002796c:	4b82      	ldr	r3, [pc, #520]	@ (90027b78 <__ieee754_rem_pio2f+0x22c>)
9002796e:	429d      	cmp	r5, r3
90027970:	d83a      	bhi.n	900279e8 <__ieee754_rem_pio2f+0x9c>
90027972:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
90027976:	2e00      	cmp	r6, #0
90027978:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 90027b7c <__ieee754_rem_pio2f+0x230>
9002797c:	4a80      	ldr	r2, [pc, #512]	@ (90027b80 <__ieee754_rem_pio2f+0x234>)
9002797e:	f023 030f 	bic.w	r3, r3, #15
90027982:	dd18      	ble.n	900279b6 <__ieee754_rem_pio2f+0x6a>
90027984:	4293      	cmp	r3, r2
90027986:	ee70 7a47 	vsub.f32	s15, s0, s14
9002798a:	bf09      	itett	eq
9002798c:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 90027b84 <__ieee754_rem_pio2f+0x238>
90027990:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 90027b88 <__ieee754_rem_pio2f+0x23c>
90027994:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 90027b8c <__ieee754_rem_pio2f+0x240>
90027998:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
9002799c:	ee37 7ae6 	vsub.f32	s14, s15, s13
900279a0:	ee77 7ac7 	vsub.f32	s15, s15, s14
900279a4:	ed80 7a00 	vstr	s14, [r0]
900279a8:	ee77 7ae6 	vsub.f32	s15, s15, s13
900279ac:	edc0 7a01 	vstr	s15, [r0, #4]
900279b0:	2001      	movs	r0, #1
900279b2:	b007      	add	sp, #28
900279b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
900279b6:	4293      	cmp	r3, r2
900279b8:	ee70 7a07 	vadd.f32	s15, s0, s14
900279bc:	bf09      	itett	eq
900279be:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 90027b84 <__ieee754_rem_pio2f+0x238>
900279c2:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 90027b88 <__ieee754_rem_pio2f+0x23c>
900279c6:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 90027b8c <__ieee754_rem_pio2f+0x240>
900279ca:	ee77 7a87 	vaddeq.f32	s15, s15, s14
900279ce:	ee37 7aa6 	vadd.f32	s14, s15, s13
900279d2:	ee77 7ac7 	vsub.f32	s15, s15, s14
900279d6:	ed80 7a00 	vstr	s14, [r0]
900279da:	ee77 7aa6 	vadd.f32	s15, s15, s13
900279de:	edc0 7a01 	vstr	s15, [r0, #4]
900279e2:	f04f 30ff 	mov.w	r0, #4294967295
900279e6:	e7e4      	b.n	900279b2 <__ieee754_rem_pio2f+0x66>
900279e8:	4b69      	ldr	r3, [pc, #420]	@ (90027b90 <__ieee754_rem_pio2f+0x244>)
900279ea:	429d      	cmp	r5, r3
900279ec:	d873      	bhi.n	90027ad6 <__ieee754_rem_pio2f+0x18a>
900279ee:	f000 f9b1 	bl	90027d54 <fabsf>
900279f2:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 90027b94 <__ieee754_rem_pio2f+0x248>
900279f6:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
900279fa:	eee0 7a07 	vfma.f32	s15, s0, s14
900279fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90027a02:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
90027a06:	ee17 0a90 	vmov	r0, s15
90027a0a:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 90027b7c <__ieee754_rem_pio2f+0x230>
90027a0e:	eea7 0a67 	vfms.f32	s0, s14, s15
90027a12:	281f      	cmp	r0, #31
90027a14:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 90027b88 <__ieee754_rem_pio2f+0x23c>
90027a18:	ee67 7a27 	vmul.f32	s15, s14, s15
90027a1c:	eeb1 6a47 	vneg.f32	s12, s14
90027a20:	ee70 6a67 	vsub.f32	s13, s0, s15
90027a24:	ee16 1a90 	vmov	r1, s13
90027a28:	dc09      	bgt.n	90027a3e <__ieee754_rem_pio2f+0xf2>
90027a2a:	4a5b      	ldr	r2, [pc, #364]	@ (90027b98 <__ieee754_rem_pio2f+0x24c>)
90027a2c:	1e47      	subs	r7, r0, #1
90027a2e:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
90027a32:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
90027a36:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
90027a3a:	4293      	cmp	r3, r2
90027a3c:	d107      	bne.n	90027a4e <__ieee754_rem_pio2f+0x102>
90027a3e:	f3c1 52c7 	ubfx	r2, r1, #23, #8
90027a42:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
90027a46:	2a08      	cmp	r2, #8
90027a48:	ea4f 53e5 	mov.w	r3, r5, asr #23
90027a4c:	dc14      	bgt.n	90027a78 <__ieee754_rem_pio2f+0x12c>
90027a4e:	6021      	str	r1, [r4, #0]
90027a50:	ed94 7a00 	vldr	s14, [r4]
90027a54:	ee30 0a47 	vsub.f32	s0, s0, s14
90027a58:	2e00      	cmp	r6, #0
90027a5a:	ee30 0a67 	vsub.f32	s0, s0, s15
90027a5e:	ed84 0a01 	vstr	s0, [r4, #4]
90027a62:	daa6      	bge.n	900279b2 <__ieee754_rem_pio2f+0x66>
90027a64:	eeb1 7a47 	vneg.f32	s14, s14
90027a68:	eeb1 0a40 	vneg.f32	s0, s0
90027a6c:	ed84 7a00 	vstr	s14, [r4]
90027a70:	ed84 0a01 	vstr	s0, [r4, #4]
90027a74:	4240      	negs	r0, r0
90027a76:	e79c      	b.n	900279b2 <__ieee754_rem_pio2f+0x66>
90027a78:	eddf 5a42 	vldr	s11, [pc, #264]	@ 90027b84 <__ieee754_rem_pio2f+0x238>
90027a7c:	eef0 6a40 	vmov.f32	s13, s0
90027a80:	eee6 6a25 	vfma.f32	s13, s12, s11
90027a84:	ee70 7a66 	vsub.f32	s15, s0, s13
90027a88:	eee6 7a25 	vfma.f32	s15, s12, s11
90027a8c:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 90027b8c <__ieee754_rem_pio2f+0x240>
90027a90:	eed7 7a25 	vfnms.f32	s15, s14, s11
90027a94:	ee76 5ae7 	vsub.f32	s11, s13, s15
90027a98:	ee15 2a90 	vmov	r2, s11
90027a9c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
90027aa0:	1a5b      	subs	r3, r3, r1
90027aa2:	2b19      	cmp	r3, #25
90027aa4:	dc04      	bgt.n	90027ab0 <__ieee754_rem_pio2f+0x164>
90027aa6:	edc4 5a00 	vstr	s11, [r4]
90027aaa:	eeb0 0a66 	vmov.f32	s0, s13
90027aae:	e7cf      	b.n	90027a50 <__ieee754_rem_pio2f+0x104>
90027ab0:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 90027b9c <__ieee754_rem_pio2f+0x250>
90027ab4:	eeb0 0a66 	vmov.f32	s0, s13
90027ab8:	eea6 0a25 	vfma.f32	s0, s12, s11
90027abc:	ee76 7ac0 	vsub.f32	s15, s13, s0
90027ac0:	eddf 6a37 	vldr	s13, [pc, #220]	@ 90027ba0 <__ieee754_rem_pio2f+0x254>
90027ac4:	eee6 7a25 	vfma.f32	s15, s12, s11
90027ac8:	eed7 7a26 	vfnms.f32	s15, s14, s13
90027acc:	ee30 7a67 	vsub.f32	s14, s0, s15
90027ad0:	ed84 7a00 	vstr	s14, [r4]
90027ad4:	e7bc      	b.n	90027a50 <__ieee754_rem_pio2f+0x104>
90027ad6:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
90027ada:	d306      	bcc.n	90027aea <__ieee754_rem_pio2f+0x19e>
90027adc:	ee70 7a40 	vsub.f32	s15, s0, s0
90027ae0:	edc0 7a01 	vstr	s15, [r0, #4]
90027ae4:	edc0 7a00 	vstr	s15, [r0]
90027ae8:	e73e      	b.n	90027968 <__ieee754_rem_pio2f+0x1c>
90027aea:	15ea      	asrs	r2, r5, #23
90027aec:	3a86      	subs	r2, #134	@ 0x86
90027aee:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
90027af2:	ee07 3a90 	vmov	s15, r3
90027af6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
90027afa:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 90027ba4 <__ieee754_rem_pio2f+0x258>
90027afe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90027b02:	ee77 7ac7 	vsub.f32	s15, s15, s14
90027b06:	ed8d 7a03 	vstr	s14, [sp, #12]
90027b0a:	ee67 7aa6 	vmul.f32	s15, s15, s13
90027b0e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
90027b12:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90027b16:	ee77 7ac7 	vsub.f32	s15, s15, s14
90027b1a:	ed8d 7a04 	vstr	s14, [sp, #16]
90027b1e:	ee67 7aa6 	vmul.f32	s15, s15, s13
90027b22:	eef5 7a40 	vcmp.f32	s15, #0.0
90027b26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027b2a:	edcd 7a05 	vstr	s15, [sp, #20]
90027b2e:	d11e      	bne.n	90027b6e <__ieee754_rem_pio2f+0x222>
90027b30:	eeb5 7a40 	vcmp.f32	s14, #0.0
90027b34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027b38:	bf0c      	ite	eq
90027b3a:	2301      	moveq	r3, #1
90027b3c:	2302      	movne	r3, #2
90027b3e:	491a      	ldr	r1, [pc, #104]	@ (90027ba8 <__ieee754_rem_pio2f+0x25c>)
90027b40:	9101      	str	r1, [sp, #4]
90027b42:	2102      	movs	r1, #2
90027b44:	9100      	str	r1, [sp, #0]
90027b46:	a803      	add	r0, sp, #12
90027b48:	4621      	mov	r1, r4
90027b4a:	f000 f90b 	bl	90027d64 <__kernel_rem_pio2f>
90027b4e:	2e00      	cmp	r6, #0
90027b50:	f6bf af2f 	bge.w	900279b2 <__ieee754_rem_pio2f+0x66>
90027b54:	edd4 7a00 	vldr	s15, [r4]
90027b58:	eef1 7a67 	vneg.f32	s15, s15
90027b5c:	edc4 7a00 	vstr	s15, [r4]
90027b60:	edd4 7a01 	vldr	s15, [r4, #4]
90027b64:	eef1 7a67 	vneg.f32	s15, s15
90027b68:	edc4 7a01 	vstr	s15, [r4, #4]
90027b6c:	e782      	b.n	90027a74 <__ieee754_rem_pio2f+0x128>
90027b6e:	2303      	movs	r3, #3
90027b70:	e7e5      	b.n	90027b3e <__ieee754_rem_pio2f+0x1f2>
90027b72:	bf00      	nop
90027b74:	3f490fd8 	.word	0x3f490fd8
90027b78:	4016cbe3 	.word	0x4016cbe3
90027b7c:	3fc90f80 	.word	0x3fc90f80
90027b80:	3fc90fd0 	.word	0x3fc90fd0
90027b84:	37354400 	.word	0x37354400
90027b88:	37354443 	.word	0x37354443
90027b8c:	2e85a308 	.word	0x2e85a308
90027b90:	43490f80 	.word	0x43490f80
90027b94:	3f22f984 	.word	0x3f22f984
90027b98:	90035f30 	.word	0x90035f30
90027b9c:	2e85a300 	.word	0x2e85a300
90027ba0:	248d3132 	.word	0x248d3132
90027ba4:	43800000 	.word	0x43800000
90027ba8:	90035fb0 	.word	0x90035fb0

90027bac <atanf>:
90027bac:	b538      	push	{r3, r4, r5, lr}
90027bae:	ee10 5a10 	vmov	r5, s0
90027bb2:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
90027bb6:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
90027bba:	eef0 7a40 	vmov.f32	s15, s0
90027bbe:	d310      	bcc.n	90027be2 <atanf+0x36>
90027bc0:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
90027bc4:	d904      	bls.n	90027bd0 <atanf+0x24>
90027bc6:	ee70 7a00 	vadd.f32	s15, s0, s0
90027bca:	eeb0 0a67 	vmov.f32	s0, s15
90027bce:	bd38      	pop	{r3, r4, r5, pc}
90027bd0:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 90027d08 <atanf+0x15c>
90027bd4:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 90027d0c <atanf+0x160>
90027bd8:	2d00      	cmp	r5, #0
90027bda:	bfc8      	it	gt
90027bdc:	eef0 7a47 	vmovgt.f32	s15, s14
90027be0:	e7f3      	b.n	90027bca <atanf+0x1e>
90027be2:	4b4b      	ldr	r3, [pc, #300]	@ (90027d10 <atanf+0x164>)
90027be4:	429c      	cmp	r4, r3
90027be6:	d810      	bhi.n	90027c0a <atanf+0x5e>
90027be8:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
90027bec:	d20a      	bcs.n	90027c04 <atanf+0x58>
90027bee:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 90027d14 <atanf+0x168>
90027bf2:	ee30 7a07 	vadd.f32	s14, s0, s14
90027bf6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90027bfa:	eeb4 7ae6 	vcmpe.f32	s14, s13
90027bfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027c02:	dce2      	bgt.n	90027bca <atanf+0x1e>
90027c04:	f04f 33ff 	mov.w	r3, #4294967295
90027c08:	e013      	b.n	90027c32 <atanf+0x86>
90027c0a:	f000 f8a3 	bl	90027d54 <fabsf>
90027c0e:	4b42      	ldr	r3, [pc, #264]	@ (90027d18 <atanf+0x16c>)
90027c10:	429c      	cmp	r4, r3
90027c12:	d84f      	bhi.n	90027cb4 <atanf+0x108>
90027c14:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
90027c18:	429c      	cmp	r4, r3
90027c1a:	d841      	bhi.n	90027ca0 <atanf+0xf4>
90027c1c:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
90027c20:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
90027c24:	eea0 7a27 	vfma.f32	s14, s0, s15
90027c28:	2300      	movs	r3, #0
90027c2a:	ee30 0a27 	vadd.f32	s0, s0, s15
90027c2e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027c32:	1c5a      	adds	r2, r3, #1
90027c34:	ee27 6aa7 	vmul.f32	s12, s15, s15
90027c38:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 90027d1c <atanf+0x170>
90027c3c:	eddf 5a38 	vldr	s11, [pc, #224]	@ 90027d20 <atanf+0x174>
90027c40:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 90027d24 <atanf+0x178>
90027c44:	ee66 6a06 	vmul.f32	s13, s12, s12
90027c48:	eee6 5a87 	vfma.f32	s11, s13, s14
90027c4c:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 90027d28 <atanf+0x17c>
90027c50:	eea5 7aa6 	vfma.f32	s14, s11, s13
90027c54:	eddf 5a35 	vldr	s11, [pc, #212]	@ 90027d2c <atanf+0x180>
90027c58:	eee7 5a26 	vfma.f32	s11, s14, s13
90027c5c:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 90027d30 <atanf+0x184>
90027c60:	eea5 7aa6 	vfma.f32	s14, s11, s13
90027c64:	eddf 5a33 	vldr	s11, [pc, #204]	@ 90027d34 <atanf+0x188>
90027c68:	eee7 5a26 	vfma.f32	s11, s14, s13
90027c6c:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 90027d38 <atanf+0x18c>
90027c70:	eea6 5a87 	vfma.f32	s10, s13, s14
90027c74:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 90027d3c <atanf+0x190>
90027c78:	eea5 7a26 	vfma.f32	s14, s10, s13
90027c7c:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 90027d40 <atanf+0x194>
90027c80:	eea7 5a26 	vfma.f32	s10, s14, s13
90027c84:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 90027d44 <atanf+0x198>
90027c88:	eea5 7a26 	vfma.f32	s14, s10, s13
90027c8c:	ee27 7a26 	vmul.f32	s14, s14, s13
90027c90:	eea5 7a86 	vfma.f32	s14, s11, s12
90027c94:	ee27 7a87 	vmul.f32	s14, s15, s14
90027c98:	d121      	bne.n	90027cde <atanf+0x132>
90027c9a:	ee77 7ac7 	vsub.f32	s15, s15, s14
90027c9e:	e794      	b.n	90027bca <atanf+0x1e>
90027ca0:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90027ca4:	ee30 7a67 	vsub.f32	s14, s0, s15
90027ca8:	ee30 0a27 	vadd.f32	s0, s0, s15
90027cac:	2301      	movs	r3, #1
90027cae:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027cb2:	e7be      	b.n	90027c32 <atanf+0x86>
90027cb4:	4b24      	ldr	r3, [pc, #144]	@ (90027d48 <atanf+0x19c>)
90027cb6:	429c      	cmp	r4, r3
90027cb8:	d80b      	bhi.n	90027cd2 <atanf+0x126>
90027cba:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
90027cbe:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027cc2:	eea0 7a27 	vfma.f32	s14, s0, s15
90027cc6:	2302      	movs	r3, #2
90027cc8:	ee70 6a67 	vsub.f32	s13, s0, s15
90027ccc:	eec6 7a87 	vdiv.f32	s15, s13, s14
90027cd0:	e7af      	b.n	90027c32 <atanf+0x86>
90027cd2:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
90027cd6:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027cda:	2303      	movs	r3, #3
90027cdc:	e7a9      	b.n	90027c32 <atanf+0x86>
90027cde:	4a1b      	ldr	r2, [pc, #108]	@ (90027d4c <atanf+0x1a0>)
90027ce0:	491b      	ldr	r1, [pc, #108]	@ (90027d50 <atanf+0x1a4>)
90027ce2:	eb02 0283 	add.w	r2, r2, r3, lsl #2
90027ce6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
90027cea:	edd3 6a00 	vldr	s13, [r3]
90027cee:	ee37 7a66 	vsub.f32	s14, s14, s13
90027cf2:	2d00      	cmp	r5, #0
90027cf4:	ee37 7a67 	vsub.f32	s14, s14, s15
90027cf8:	edd2 7a00 	vldr	s15, [r2]
90027cfc:	ee77 7ac7 	vsub.f32	s15, s15, s14
90027d00:	bfb8      	it	lt
90027d02:	eef1 7a67 	vneglt.f32	s15, s15
90027d06:	e760      	b.n	90027bca <atanf+0x1e>
90027d08:	bfc90fdb 	.word	0xbfc90fdb
90027d0c:	3fc90fdb 	.word	0x3fc90fdb
90027d10:	3edfffff 	.word	0x3edfffff
90027d14:	7149f2ca 	.word	0x7149f2ca
90027d18:	3f97ffff 	.word	0x3f97ffff
90027d1c:	3c8569d7 	.word	0x3c8569d7
90027d20:	3d4bda59 	.word	0x3d4bda59
90027d24:	bd6ef16b 	.word	0xbd6ef16b
90027d28:	3d886b35 	.word	0x3d886b35
90027d2c:	3dba2e6e 	.word	0x3dba2e6e
90027d30:	3e124925 	.word	0x3e124925
90027d34:	3eaaaaab 	.word	0x3eaaaaab
90027d38:	bd15a221 	.word	0xbd15a221
90027d3c:	bd9d8795 	.word	0xbd9d8795
90027d40:	bde38e38 	.word	0xbde38e38
90027d44:	be4ccccd 	.word	0xbe4ccccd
90027d48:	401bffff 	.word	0x401bffff
90027d4c:	900362d8 	.word	0x900362d8
90027d50:	900362c8 	.word	0x900362c8

90027d54 <fabsf>:
90027d54:	ee10 3a10 	vmov	r3, s0
90027d58:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
90027d5c:	ee00 3a10 	vmov	s0, r3
90027d60:	4770      	bx	lr
	...

90027d64 <__kernel_rem_pio2f>:
90027d64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027d68:	ed2d 8b04 	vpush	{d8-d9}
90027d6c:	b0d9      	sub	sp, #356	@ 0x164
90027d6e:	4690      	mov	r8, r2
90027d70:	9001      	str	r0, [sp, #4]
90027d72:	4ab6      	ldr	r2, [pc, #728]	@ (9002804c <__kernel_rem_pio2f+0x2e8>)
90027d74:	9866      	ldr	r0, [sp, #408]	@ 0x198
90027d76:	f118 0f04 	cmn.w	r8, #4
90027d7a:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
90027d7e:	460f      	mov	r7, r1
90027d80:	f103 3bff 	add.w	fp, r3, #4294967295
90027d84:	db26      	blt.n	90027dd4 <__kernel_rem_pio2f+0x70>
90027d86:	f1b8 0203 	subs.w	r2, r8, #3
90027d8a:	bf48      	it	mi
90027d8c:	f108 0204 	addmi.w	r2, r8, #4
90027d90:	10d2      	asrs	r2, r2, #3
90027d92:	1c55      	adds	r5, r2, #1
90027d94:	9967      	ldr	r1, [sp, #412]	@ 0x19c
90027d96:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 9002805c <__kernel_rem_pio2f+0x2f8>
90027d9a:	00e8      	lsls	r0, r5, #3
90027d9c:	eba2 060b 	sub.w	r6, r2, fp
90027da0:	9002      	str	r0, [sp, #8]
90027da2:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
90027da6:	eb0a 0c0b 	add.w	ip, sl, fp
90027daa:	ac1c      	add	r4, sp, #112	@ 0x70
90027dac:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
90027db0:	2000      	movs	r0, #0
90027db2:	4560      	cmp	r0, ip
90027db4:	dd10      	ble.n	90027dd8 <__kernel_rem_pio2f+0x74>
90027db6:	a91c      	add	r1, sp, #112	@ 0x70
90027db8:	eb01 0083 	add.w	r0, r1, r3, lsl #2
90027dbc:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
90027dc0:	2600      	movs	r6, #0
90027dc2:	4556      	cmp	r6, sl
90027dc4:	dc24      	bgt.n	90027e10 <__kernel_rem_pio2f+0xac>
90027dc6:	f8dd e004 	ldr.w	lr, [sp, #4]
90027dca:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 9002805c <__kernel_rem_pio2f+0x2f8>
90027dce:	4684      	mov	ip, r0
90027dd0:	2400      	movs	r4, #0
90027dd2:	e016      	b.n	90027e02 <__kernel_rem_pio2f+0x9e>
90027dd4:	2200      	movs	r2, #0
90027dd6:	e7dc      	b.n	90027d92 <__kernel_rem_pio2f+0x2e>
90027dd8:	42c6      	cmn	r6, r0
90027dda:	bf5d      	ittte	pl
90027ddc:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
90027de0:	ee07 1a90 	vmovpl	s15, r1
90027de4:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
90027de8:	eef0 7a47 	vmovmi.f32	s15, s14
90027dec:	ece4 7a01 	vstmia	r4!, {s15}
90027df0:	3001      	adds	r0, #1
90027df2:	e7de      	b.n	90027db2 <__kernel_rem_pio2f+0x4e>
90027df4:	ecfe 6a01 	vldmia	lr!, {s13}
90027df8:	ed3c 7a01 	vldmdb	ip!, {s14}
90027dfc:	eee6 7a87 	vfma.f32	s15, s13, s14
90027e00:	3401      	adds	r4, #1
90027e02:	455c      	cmp	r4, fp
90027e04:	ddf6      	ble.n	90027df4 <__kernel_rem_pio2f+0x90>
90027e06:	ece9 7a01 	vstmia	r9!, {s15}
90027e0a:	3601      	adds	r6, #1
90027e0c:	3004      	adds	r0, #4
90027e0e:	e7d8      	b.n	90027dc2 <__kernel_rem_pio2f+0x5e>
90027e10:	a908      	add	r1, sp, #32
90027e12:	eb01 018a 	add.w	r1, r1, sl, lsl #2
90027e16:	9104      	str	r1, [sp, #16]
90027e18:	9967      	ldr	r1, [sp, #412]	@ 0x19c
90027e1a:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 90028058 <__kernel_rem_pio2f+0x2f4>
90027e1e:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 90028054 <__kernel_rem_pio2f+0x2f0>
90027e22:	eb01 0282 	add.w	r2, r1, r2, lsl #2
90027e26:	9203      	str	r2, [sp, #12]
90027e28:	4654      	mov	r4, sl
90027e2a:	00a2      	lsls	r2, r4, #2
90027e2c:	9205      	str	r2, [sp, #20]
90027e2e:	aa58      	add	r2, sp, #352	@ 0x160
90027e30:	eb02 0284 	add.w	r2, r2, r4, lsl #2
90027e34:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
90027e38:	a944      	add	r1, sp, #272	@ 0x110
90027e3a:	aa08      	add	r2, sp, #32
90027e3c:	eb01 0084 	add.w	r0, r1, r4, lsl #2
90027e40:	4694      	mov	ip, r2
90027e42:	4626      	mov	r6, r4
90027e44:	2e00      	cmp	r6, #0
90027e46:	dc4c      	bgt.n	90027ee2 <__kernel_rem_pio2f+0x17e>
90027e48:	4628      	mov	r0, r5
90027e4a:	e9cd 2306 	strd	r2, r3, [sp, #24]
90027e4e:	f000 f9f1 	bl	90028234 <scalbnf>
90027e52:	eeb0 8a40 	vmov.f32	s16, s0
90027e56:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
90027e5a:	ee28 0a00 	vmul.f32	s0, s16, s0
90027e5e:	f000 fa4f 	bl	90028300 <floorf>
90027e62:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
90027e66:	eea0 8a67 	vfms.f32	s16, s0, s15
90027e6a:	2d00      	cmp	r5, #0
90027e6c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
90027e70:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90027e74:	ee17 9a90 	vmov	r9, s15
90027e78:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90027e7c:	ee38 8a67 	vsub.f32	s16, s16, s15
90027e80:	dd41      	ble.n	90027f06 <__kernel_rem_pio2f+0x1a2>
90027e82:	f104 3cff 	add.w	ip, r4, #4294967295
90027e86:	a908      	add	r1, sp, #32
90027e88:	f1c5 0e08 	rsb	lr, r5, #8
90027e8c:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
90027e90:	fa46 f00e 	asr.w	r0, r6, lr
90027e94:	4481      	add	r9, r0
90027e96:	fa00 f00e 	lsl.w	r0, r0, lr
90027e9a:	1a36      	subs	r6, r6, r0
90027e9c:	f1c5 0007 	rsb	r0, r5, #7
90027ea0:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
90027ea4:	4106      	asrs	r6, r0
90027ea6:	2e00      	cmp	r6, #0
90027ea8:	dd3c      	ble.n	90027f24 <__kernel_rem_pio2f+0x1c0>
90027eaa:	f04f 0e00 	mov.w	lr, #0
90027eae:	f109 0901 	add.w	r9, r9, #1
90027eb2:	4670      	mov	r0, lr
90027eb4:	4574      	cmp	r4, lr
90027eb6:	dc68      	bgt.n	90027f8a <__kernel_rem_pio2f+0x226>
90027eb8:	2d00      	cmp	r5, #0
90027eba:	dd03      	ble.n	90027ec4 <__kernel_rem_pio2f+0x160>
90027ebc:	2d01      	cmp	r5, #1
90027ebe:	d074      	beq.n	90027faa <__kernel_rem_pio2f+0x246>
90027ec0:	2d02      	cmp	r5, #2
90027ec2:	d07d      	beq.n	90027fc0 <__kernel_rem_pio2f+0x25c>
90027ec4:	2e02      	cmp	r6, #2
90027ec6:	d12d      	bne.n	90027f24 <__kernel_rem_pio2f+0x1c0>
90027ec8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
90027ecc:	ee30 8a48 	vsub.f32	s16, s0, s16
90027ed0:	b340      	cbz	r0, 90027f24 <__kernel_rem_pio2f+0x1c0>
90027ed2:	4628      	mov	r0, r5
90027ed4:	9306      	str	r3, [sp, #24]
90027ed6:	f000 f9ad 	bl	90028234 <scalbnf>
90027eda:	9b06      	ldr	r3, [sp, #24]
90027edc:	ee38 8a40 	vsub.f32	s16, s16, s0
90027ee0:	e020      	b.n	90027f24 <__kernel_rem_pio2f+0x1c0>
90027ee2:	ee60 7a28 	vmul.f32	s15, s0, s17
90027ee6:	3e01      	subs	r6, #1
90027ee8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90027eec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90027ef0:	eea7 0ac9 	vfms.f32	s0, s15, s18
90027ef4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
90027ef8:	ecac 0a01 	vstmia	ip!, {s0}
90027efc:	ed30 0a01 	vldmdb	r0!, {s0}
90027f00:	ee37 0a80 	vadd.f32	s0, s15, s0
90027f04:	e79e      	b.n	90027e44 <__kernel_rem_pio2f+0xe0>
90027f06:	d105      	bne.n	90027f14 <__kernel_rem_pio2f+0x1b0>
90027f08:	1e60      	subs	r0, r4, #1
90027f0a:	a908      	add	r1, sp, #32
90027f0c:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
90027f10:	11f6      	asrs	r6, r6, #7
90027f12:	e7c8      	b.n	90027ea6 <__kernel_rem_pio2f+0x142>
90027f14:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90027f18:	eeb4 8ae7 	vcmpe.f32	s16, s15
90027f1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027f20:	da31      	bge.n	90027f86 <__kernel_rem_pio2f+0x222>
90027f22:	2600      	movs	r6, #0
90027f24:	eeb5 8a40 	vcmp.f32	s16, #0.0
90027f28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027f2c:	f040 8098 	bne.w	90028060 <__kernel_rem_pio2f+0x2fc>
90027f30:	1e60      	subs	r0, r4, #1
90027f32:	2200      	movs	r2, #0
90027f34:	4550      	cmp	r0, sl
90027f36:	da4b      	bge.n	90027fd0 <__kernel_rem_pio2f+0x26c>
90027f38:	2a00      	cmp	r2, #0
90027f3a:	d065      	beq.n	90028008 <__kernel_rem_pio2f+0x2a4>
90027f3c:	3c01      	subs	r4, #1
90027f3e:	ab08      	add	r3, sp, #32
90027f40:	3d08      	subs	r5, #8
90027f42:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
90027f46:	2b00      	cmp	r3, #0
90027f48:	d0f8      	beq.n	90027f3c <__kernel_rem_pio2f+0x1d8>
90027f4a:	4628      	mov	r0, r5
90027f4c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
90027f50:	f000 f970 	bl	90028234 <scalbnf>
90027f54:	1c63      	adds	r3, r4, #1
90027f56:	aa44      	add	r2, sp, #272	@ 0x110
90027f58:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 90028058 <__kernel_rem_pio2f+0x2f4>
90027f5c:	0099      	lsls	r1, r3, #2
90027f5e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
90027f62:	4623      	mov	r3, r4
90027f64:	2b00      	cmp	r3, #0
90027f66:	f280 80a9 	bge.w	900280bc <__kernel_rem_pio2f+0x358>
90027f6a:	4623      	mov	r3, r4
90027f6c:	2b00      	cmp	r3, #0
90027f6e:	f2c0 80c7 	blt.w	90028100 <__kernel_rem_pio2f+0x39c>
90027f72:	aa44      	add	r2, sp, #272	@ 0x110
90027f74:	eb02 0583 	add.w	r5, r2, r3, lsl #2
90027f78:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 90028050 <__kernel_rem_pio2f+0x2ec>
90027f7c:	eddf 7a37 	vldr	s15, [pc, #220]	@ 9002805c <__kernel_rem_pio2f+0x2f8>
90027f80:	2000      	movs	r0, #0
90027f82:	1ae2      	subs	r2, r4, r3
90027f84:	e0b1      	b.n	900280ea <__kernel_rem_pio2f+0x386>
90027f86:	2602      	movs	r6, #2
90027f88:	e78f      	b.n	90027eaa <__kernel_rem_pio2f+0x146>
90027f8a:	f852 1b04 	ldr.w	r1, [r2], #4
90027f8e:	b948      	cbnz	r0, 90027fa4 <__kernel_rem_pio2f+0x240>
90027f90:	b121      	cbz	r1, 90027f9c <__kernel_rem_pio2f+0x238>
90027f92:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
90027f96:	f842 1c04 	str.w	r1, [r2, #-4]
90027f9a:	2101      	movs	r1, #1
90027f9c:	f10e 0e01 	add.w	lr, lr, #1
90027fa0:	4608      	mov	r0, r1
90027fa2:	e787      	b.n	90027eb4 <__kernel_rem_pio2f+0x150>
90027fa4:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
90027fa8:	e7f5      	b.n	90027f96 <__kernel_rem_pio2f+0x232>
90027faa:	f104 3cff 	add.w	ip, r4, #4294967295
90027fae:	aa08      	add	r2, sp, #32
90027fb0:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
90027fb4:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
90027fb8:	a908      	add	r1, sp, #32
90027fba:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
90027fbe:	e781      	b.n	90027ec4 <__kernel_rem_pio2f+0x160>
90027fc0:	f104 3cff 	add.w	ip, r4, #4294967295
90027fc4:	aa08      	add	r2, sp, #32
90027fc6:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
90027fca:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
90027fce:	e7f3      	b.n	90027fb8 <__kernel_rem_pio2f+0x254>
90027fd0:	a908      	add	r1, sp, #32
90027fd2:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
90027fd6:	3801      	subs	r0, #1
90027fd8:	430a      	orrs	r2, r1
90027fda:	e7ab      	b.n	90027f34 <__kernel_rem_pio2f+0x1d0>
90027fdc:	3201      	adds	r2, #1
90027fde:	f850 6d04 	ldr.w	r6, [r0, #-4]!
90027fe2:	2e00      	cmp	r6, #0
90027fe4:	d0fa      	beq.n	90027fdc <__kernel_rem_pio2f+0x278>
90027fe6:	9905      	ldr	r1, [sp, #20]
90027fe8:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
90027fec:	eb0d 0001 	add.w	r0, sp, r1
90027ff0:	18e6      	adds	r6, r4, r3
90027ff2:	a91c      	add	r1, sp, #112	@ 0x70
90027ff4:	f104 0c01 	add.w	ip, r4, #1
90027ff8:	384c      	subs	r0, #76	@ 0x4c
90027ffa:	eb01 0686 	add.w	r6, r1, r6, lsl #2
90027ffe:	4422      	add	r2, r4
90028000:	4562      	cmp	r2, ip
90028002:	da04      	bge.n	9002800e <__kernel_rem_pio2f+0x2aa>
90028004:	4614      	mov	r4, r2
90028006:	e710      	b.n	90027e2a <__kernel_rem_pio2f+0xc6>
90028008:	9804      	ldr	r0, [sp, #16]
9002800a:	2201      	movs	r2, #1
9002800c:	e7e7      	b.n	90027fde <__kernel_rem_pio2f+0x27a>
9002800e:	9903      	ldr	r1, [sp, #12]
90028010:	f8dd e004 	ldr.w	lr, [sp, #4]
90028014:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
90028018:	9105      	str	r1, [sp, #20]
9002801a:	ee07 1a90 	vmov	s15, r1
9002801e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90028022:	2400      	movs	r4, #0
90028024:	ece6 7a01 	vstmia	r6!, {s15}
90028028:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 9002805c <__kernel_rem_pio2f+0x2f8>
9002802c:	46b1      	mov	r9, r6
9002802e:	455c      	cmp	r4, fp
90028030:	dd04      	ble.n	9002803c <__kernel_rem_pio2f+0x2d8>
90028032:	ece0 7a01 	vstmia	r0!, {s15}
90028036:	f10c 0c01 	add.w	ip, ip, #1
9002803a:	e7e1      	b.n	90028000 <__kernel_rem_pio2f+0x29c>
9002803c:	ecfe 6a01 	vldmia	lr!, {s13}
90028040:	ed39 7a01 	vldmdb	r9!, {s14}
90028044:	3401      	adds	r4, #1
90028046:	eee6 7a87 	vfma.f32	s15, s13, s14
9002804a:	e7f0      	b.n	9002802e <__kernel_rem_pio2f+0x2ca>
9002804c:	90036314 	.word	0x90036314
90028050:	900362e8 	.word	0x900362e8
90028054:	43800000 	.word	0x43800000
90028058:	3b800000 	.word	0x3b800000
9002805c:	00000000 	.word	0x00000000
90028060:	9b02      	ldr	r3, [sp, #8]
90028062:	eeb0 0a48 	vmov.f32	s0, s16
90028066:	eba3 0008 	sub.w	r0, r3, r8
9002806a:	f000 f8e3 	bl	90028234 <scalbnf>
9002806e:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 90028054 <__kernel_rem_pio2f+0x2f0>
90028072:	eeb4 0ac7 	vcmpe.f32	s0, s14
90028076:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002807a:	db19      	blt.n	900280b0 <__kernel_rem_pio2f+0x34c>
9002807c:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 90028058 <__kernel_rem_pio2f+0x2f4>
90028080:	ee60 7a27 	vmul.f32	s15, s0, s15
90028084:	aa08      	add	r2, sp, #32
90028086:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9002808a:	3508      	adds	r5, #8
9002808c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90028090:	eea7 0ac7 	vfms.f32	s0, s15, s14
90028094:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90028098:	eebd 0ac0 	vcvt.s32.f32	s0, s0
9002809c:	ee10 3a10 	vmov	r3, s0
900280a0:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
900280a4:	ee17 3a90 	vmov	r3, s15
900280a8:	3401      	adds	r4, #1
900280aa:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
900280ae:	e74c      	b.n	90027f4a <__kernel_rem_pio2f+0x1e6>
900280b0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
900280b4:	aa08      	add	r2, sp, #32
900280b6:	ee10 3a10 	vmov	r3, s0
900280ba:	e7f6      	b.n	900280aa <__kernel_rem_pio2f+0x346>
900280bc:	a808      	add	r0, sp, #32
900280be:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
900280c2:	9001      	str	r0, [sp, #4]
900280c4:	ee07 0a90 	vmov	s15, r0
900280c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900280cc:	3b01      	subs	r3, #1
900280ce:	ee67 7a80 	vmul.f32	s15, s15, s0
900280d2:	ee20 0a07 	vmul.f32	s0, s0, s14
900280d6:	ed62 7a01 	vstmdb	r2!, {s15}
900280da:	e743      	b.n	90027f64 <__kernel_rem_pio2f+0x200>
900280dc:	ecfc 6a01 	vldmia	ip!, {s13}
900280e0:	ecb5 7a01 	vldmia	r5!, {s14}
900280e4:	eee6 7a87 	vfma.f32	s15, s13, s14
900280e8:	3001      	adds	r0, #1
900280ea:	4550      	cmp	r0, sl
900280ec:	dc01      	bgt.n	900280f2 <__kernel_rem_pio2f+0x38e>
900280ee:	4290      	cmp	r0, r2
900280f0:	ddf4      	ble.n	900280dc <__kernel_rem_pio2f+0x378>
900280f2:	a858      	add	r0, sp, #352	@ 0x160
900280f4:	eb00 0282 	add.w	r2, r0, r2, lsl #2
900280f8:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
900280fc:	3b01      	subs	r3, #1
900280fe:	e735      	b.n	90027f6c <__kernel_rem_pio2f+0x208>
90028100:	9b66      	ldr	r3, [sp, #408]	@ 0x198
90028102:	2b02      	cmp	r3, #2
90028104:	dc09      	bgt.n	9002811a <__kernel_rem_pio2f+0x3b6>
90028106:	2b00      	cmp	r3, #0
90028108:	dc27      	bgt.n	9002815a <__kernel_rem_pio2f+0x3f6>
9002810a:	d040      	beq.n	9002818e <__kernel_rem_pio2f+0x42a>
9002810c:	f009 0007 	and.w	r0, r9, #7
90028110:	b059      	add	sp, #356	@ 0x164
90028112:	ecbd 8b04 	vpop	{d8-d9}
90028116:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002811a:	9b66      	ldr	r3, [sp, #408]	@ 0x198
9002811c:	2b03      	cmp	r3, #3
9002811e:	d1f5      	bne.n	9002810c <__kernel_rem_pio2f+0x3a8>
90028120:	aa30      	add	r2, sp, #192	@ 0xc0
90028122:	1f0b      	subs	r3, r1, #4
90028124:	4413      	add	r3, r2
90028126:	461a      	mov	r2, r3
90028128:	4620      	mov	r0, r4
9002812a:	2800      	cmp	r0, #0
9002812c:	dc50      	bgt.n	900281d0 <__kernel_rem_pio2f+0x46c>
9002812e:	4622      	mov	r2, r4
90028130:	2a01      	cmp	r2, #1
90028132:	dc5d      	bgt.n	900281f0 <__kernel_rem_pio2f+0x48c>
90028134:	ab30      	add	r3, sp, #192	@ 0xc0
90028136:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 9002805c <__kernel_rem_pio2f+0x2f8>
9002813a:	440b      	add	r3, r1
9002813c:	2c01      	cmp	r4, #1
9002813e:	dc67      	bgt.n	90028210 <__kernel_rem_pio2f+0x4ac>
90028140:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
90028144:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
90028148:	2e00      	cmp	r6, #0
9002814a:	d167      	bne.n	9002821c <__kernel_rem_pio2f+0x4b8>
9002814c:	edc7 6a00 	vstr	s13, [r7]
90028150:	ed87 7a01 	vstr	s14, [r7, #4]
90028154:	edc7 7a02 	vstr	s15, [r7, #8]
90028158:	e7d8      	b.n	9002810c <__kernel_rem_pio2f+0x3a8>
9002815a:	ab30      	add	r3, sp, #192	@ 0xc0
9002815c:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 9002805c <__kernel_rem_pio2f+0x2f8>
90028160:	440b      	add	r3, r1
90028162:	4622      	mov	r2, r4
90028164:	2a00      	cmp	r2, #0
90028166:	da24      	bge.n	900281b2 <__kernel_rem_pio2f+0x44e>
90028168:	b34e      	cbz	r6, 900281be <__kernel_rem_pio2f+0x45a>
9002816a:	eef1 7a47 	vneg.f32	s15, s14
9002816e:	edc7 7a00 	vstr	s15, [r7]
90028172:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
90028176:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002817a:	aa31      	add	r2, sp, #196	@ 0xc4
9002817c:	2301      	movs	r3, #1
9002817e:	429c      	cmp	r4, r3
90028180:	da20      	bge.n	900281c4 <__kernel_rem_pio2f+0x460>
90028182:	b10e      	cbz	r6, 90028188 <__kernel_rem_pio2f+0x424>
90028184:	eef1 7a67 	vneg.f32	s15, s15
90028188:	edc7 7a01 	vstr	s15, [r7, #4]
9002818c:	e7be      	b.n	9002810c <__kernel_rem_pio2f+0x3a8>
9002818e:	ab30      	add	r3, sp, #192	@ 0xc0
90028190:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 9002805c <__kernel_rem_pio2f+0x2f8>
90028194:	440b      	add	r3, r1
90028196:	2c00      	cmp	r4, #0
90028198:	da05      	bge.n	900281a6 <__kernel_rem_pio2f+0x442>
9002819a:	b10e      	cbz	r6, 900281a0 <__kernel_rem_pio2f+0x43c>
9002819c:	eef1 7a67 	vneg.f32	s15, s15
900281a0:	edc7 7a00 	vstr	s15, [r7]
900281a4:	e7b2      	b.n	9002810c <__kernel_rem_pio2f+0x3a8>
900281a6:	ed33 7a01 	vldmdb	r3!, {s14}
900281aa:	3c01      	subs	r4, #1
900281ac:	ee77 7a87 	vadd.f32	s15, s15, s14
900281b0:	e7f1      	b.n	90028196 <__kernel_rem_pio2f+0x432>
900281b2:	ed73 7a01 	vldmdb	r3!, {s15}
900281b6:	3a01      	subs	r2, #1
900281b8:	ee37 7a27 	vadd.f32	s14, s14, s15
900281bc:	e7d2      	b.n	90028164 <__kernel_rem_pio2f+0x400>
900281be:	eef0 7a47 	vmov.f32	s15, s14
900281c2:	e7d4      	b.n	9002816e <__kernel_rem_pio2f+0x40a>
900281c4:	ecb2 7a01 	vldmia	r2!, {s14}
900281c8:	3301      	adds	r3, #1
900281ca:	ee77 7a87 	vadd.f32	s15, s15, s14
900281ce:	e7d6      	b.n	9002817e <__kernel_rem_pio2f+0x41a>
900281d0:	ed72 7a01 	vldmdb	r2!, {s15}
900281d4:	edd2 6a01 	vldr	s13, [r2, #4]
900281d8:	ee37 7aa6 	vadd.f32	s14, s15, s13
900281dc:	3801      	subs	r0, #1
900281de:	ee77 7ac7 	vsub.f32	s15, s15, s14
900281e2:	ed82 7a00 	vstr	s14, [r2]
900281e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
900281ea:	edc2 7a01 	vstr	s15, [r2, #4]
900281ee:	e79c      	b.n	9002812a <__kernel_rem_pio2f+0x3c6>
900281f0:	ed73 7a01 	vldmdb	r3!, {s15}
900281f4:	edd3 6a01 	vldr	s13, [r3, #4]
900281f8:	ee37 7aa6 	vadd.f32	s14, s15, s13
900281fc:	3a01      	subs	r2, #1
900281fe:	ee77 7ac7 	vsub.f32	s15, s15, s14
90028202:	ed83 7a00 	vstr	s14, [r3]
90028206:	ee77 7aa6 	vadd.f32	s15, s15, s13
9002820a:	edc3 7a01 	vstr	s15, [r3, #4]
9002820e:	e78f      	b.n	90028130 <__kernel_rem_pio2f+0x3cc>
90028210:	ed33 7a01 	vldmdb	r3!, {s14}
90028214:	3c01      	subs	r4, #1
90028216:	ee77 7a87 	vadd.f32	s15, s15, s14
9002821a:	e78f      	b.n	9002813c <__kernel_rem_pio2f+0x3d8>
9002821c:	eef1 6a66 	vneg.f32	s13, s13
90028220:	eeb1 7a47 	vneg.f32	s14, s14
90028224:	edc7 6a00 	vstr	s13, [r7]
90028228:	ed87 7a01 	vstr	s14, [r7, #4]
9002822c:	eef1 7a67 	vneg.f32	s15, s15
90028230:	e790      	b.n	90028154 <__kernel_rem_pio2f+0x3f0>
90028232:	bf00      	nop

90028234 <scalbnf>:
90028234:	ee10 3a10 	vmov	r3, s0
90028238:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
9002823c:	d02b      	beq.n	90028296 <scalbnf+0x62>
9002823e:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
90028242:	d302      	bcc.n	9002824a <scalbnf+0x16>
90028244:	ee30 0a00 	vadd.f32	s0, s0, s0
90028248:	4770      	bx	lr
9002824a:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
9002824e:	d123      	bne.n	90028298 <scalbnf+0x64>
90028250:	4b24      	ldr	r3, [pc, #144]	@ (900282e4 <scalbnf+0xb0>)
90028252:	eddf 7a25 	vldr	s15, [pc, #148]	@ 900282e8 <scalbnf+0xb4>
90028256:	4298      	cmp	r0, r3
90028258:	ee20 0a27 	vmul.f32	s0, s0, s15
9002825c:	db17      	blt.n	9002828e <scalbnf+0x5a>
9002825e:	ee10 3a10 	vmov	r3, s0
90028262:	f3c3 52c7 	ubfx	r2, r3, #23, #8
90028266:	3a19      	subs	r2, #25
90028268:	f24c 3150 	movw	r1, #50000	@ 0xc350
9002826c:	4288      	cmp	r0, r1
9002826e:	dd15      	ble.n	9002829c <scalbnf+0x68>
90028270:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 900282ec <scalbnf+0xb8>
90028274:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 900282f0 <scalbnf+0xbc>
90028278:	ee10 3a10 	vmov	r3, s0
9002827c:	eeb0 7a67 	vmov.f32	s14, s15
90028280:	2b00      	cmp	r3, #0
90028282:	bfb8      	it	lt
90028284:	eef0 7a66 	vmovlt.f32	s15, s13
90028288:	ee27 0a87 	vmul.f32	s0, s15, s14
9002828c:	4770      	bx	lr
9002828e:	eddf 7a19 	vldr	s15, [pc, #100]	@ 900282f4 <scalbnf+0xc0>
90028292:	ee27 0a80 	vmul.f32	s0, s15, s0
90028296:	4770      	bx	lr
90028298:	0dd2      	lsrs	r2, r2, #23
9002829a:	e7e5      	b.n	90028268 <scalbnf+0x34>
9002829c:	4410      	add	r0, r2
9002829e:	28fe      	cmp	r0, #254	@ 0xfe
900282a0:	dce6      	bgt.n	90028270 <scalbnf+0x3c>
900282a2:	2800      	cmp	r0, #0
900282a4:	dd06      	ble.n	900282b4 <scalbnf+0x80>
900282a6:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
900282aa:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
900282ae:	ee00 3a10 	vmov	s0, r3
900282b2:	4770      	bx	lr
900282b4:	f110 0f16 	cmn.w	r0, #22
900282b8:	da09      	bge.n	900282ce <scalbnf+0x9a>
900282ba:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 900282f4 <scalbnf+0xc0>
900282be:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 900282f8 <scalbnf+0xc4>
900282c2:	ee10 3a10 	vmov	r3, s0
900282c6:	eeb0 7a67 	vmov.f32	s14, s15
900282ca:	2b00      	cmp	r3, #0
900282cc:	e7d9      	b.n	90028282 <scalbnf+0x4e>
900282ce:	3019      	adds	r0, #25
900282d0:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
900282d4:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
900282d8:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 900282fc <scalbnf+0xc8>
900282dc:	ee07 3a90 	vmov	s15, r3
900282e0:	e7d7      	b.n	90028292 <scalbnf+0x5e>
900282e2:	bf00      	nop
900282e4:	ffff3cb0 	.word	0xffff3cb0
900282e8:	4c000000 	.word	0x4c000000
900282ec:	7149f2ca 	.word	0x7149f2ca
900282f0:	f149f2ca 	.word	0xf149f2ca
900282f4:	0da24260 	.word	0x0da24260
900282f8:	8da24260 	.word	0x8da24260
900282fc:	33000000 	.word	0x33000000

90028300 <floorf>:
90028300:	ee10 3a10 	vmov	r3, s0
90028304:	f3c3 52c7 	ubfx	r2, r3, #23, #8
90028308:	3a7f      	subs	r2, #127	@ 0x7f
9002830a:	2a16      	cmp	r2, #22
9002830c:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
90028310:	dc2b      	bgt.n	9002836a <floorf+0x6a>
90028312:	2a00      	cmp	r2, #0
90028314:	da12      	bge.n	9002833c <floorf+0x3c>
90028316:	eddf 7a19 	vldr	s15, [pc, #100]	@ 9002837c <floorf+0x7c>
9002831a:	ee30 0a27 	vadd.f32	s0, s0, s15
9002831e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90028322:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028326:	dd06      	ble.n	90028336 <floorf+0x36>
90028328:	2b00      	cmp	r3, #0
9002832a:	da24      	bge.n	90028376 <floorf+0x76>
9002832c:	2900      	cmp	r1, #0
9002832e:	4b14      	ldr	r3, [pc, #80]	@ (90028380 <floorf+0x80>)
90028330:	bf08      	it	eq
90028332:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
90028336:	ee00 3a10 	vmov	s0, r3
9002833a:	4770      	bx	lr
9002833c:	4911      	ldr	r1, [pc, #68]	@ (90028384 <floorf+0x84>)
9002833e:	4111      	asrs	r1, r2
90028340:	420b      	tst	r3, r1
90028342:	d0fa      	beq.n	9002833a <floorf+0x3a>
90028344:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 9002837c <floorf+0x7c>
90028348:	ee30 0a27 	vadd.f32	s0, s0, s15
9002834c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90028350:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028354:	ddef      	ble.n	90028336 <floorf+0x36>
90028356:	2b00      	cmp	r3, #0
90028358:	bfbe      	ittt	lt
9002835a:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
9002835e:	fa40 f202 	asrlt.w	r2, r0, r2
90028362:	189b      	addlt	r3, r3, r2
90028364:	ea23 0301 	bic.w	r3, r3, r1
90028368:	e7e5      	b.n	90028336 <floorf+0x36>
9002836a:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002836e:	d3e4      	bcc.n	9002833a <floorf+0x3a>
90028370:	ee30 0a00 	vadd.f32	s0, s0, s0
90028374:	4770      	bx	lr
90028376:	2300      	movs	r3, #0
90028378:	e7dd      	b.n	90028336 <floorf+0x36>
9002837a:	bf00      	nop
9002837c:	7149f2ca 	.word	0x7149f2ca
90028380:	bf800000 	.word	0xbf800000
90028384:	007fffff 	.word	0x007fffff

90028388 <abort>:
90028388:	b508      	push	{r3, lr}
9002838a:	2006      	movs	r0, #6
9002838c:	f000 faba 	bl	90028904 <raise>
90028390:	2001      	movs	r0, #1
90028392:	f7da fb11 	bl	900029b8 <_exit>
	...

90028398 <__assert_func>:
90028398:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002839a:	4614      	mov	r4, r2
9002839c:	461a      	mov	r2, r3
9002839e:	4b09      	ldr	r3, [pc, #36]	@ (900283c4 <__assert_func+0x2c>)
900283a0:	681b      	ldr	r3, [r3, #0]
900283a2:	4605      	mov	r5, r0
900283a4:	68d8      	ldr	r0, [r3, #12]
900283a6:	b14c      	cbz	r4, 900283bc <__assert_func+0x24>
900283a8:	4b07      	ldr	r3, [pc, #28]	@ (900283c8 <__assert_func+0x30>)
900283aa:	9100      	str	r1, [sp, #0]
900283ac:	e9cd 3401 	strd	r3, r4, [sp, #4]
900283b0:	4906      	ldr	r1, [pc, #24]	@ (900283cc <__assert_func+0x34>)
900283b2:	462b      	mov	r3, r5
900283b4:	f000 f9c2 	bl	9002873c <fiprintf>
900283b8:	f7ff ffe6 	bl	90028388 <abort>
900283bc:	4b04      	ldr	r3, [pc, #16]	@ (900283d0 <__assert_func+0x38>)
900283be:	461c      	mov	r4, r3
900283c0:	e7f3      	b.n	900283aa <__assert_func+0x12>
900283c2:	bf00      	nop
900283c4:	200001cc 	.word	0x200001cc
900283c8:	9002a54a 	.word	0x9002a54a
900283cc:	9002a557 	.word	0x9002a557
900283d0:	9002a4f2 	.word	0x9002a4f2

900283d4 <atexit>:
900283d4:	2300      	movs	r3, #0
900283d6:	4601      	mov	r1, r0
900283d8:	461a      	mov	r2, r3
900283da:	4618      	mov	r0, r3
900283dc:	f000 bb48 	b.w	90028a70 <__register_exitproc>

900283e0 <malloc>:
900283e0:	4b02      	ldr	r3, [pc, #8]	@ (900283ec <malloc+0xc>)
900283e2:	4601      	mov	r1, r0
900283e4:	6818      	ldr	r0, [r3, #0]
900283e6:	f000 b82d 	b.w	90028444 <_malloc_r>
900283ea:	bf00      	nop
900283ec:	200001cc 	.word	0x200001cc

900283f0 <free>:
900283f0:	4b02      	ldr	r3, [pc, #8]	@ (900283fc <free+0xc>)
900283f2:	4601      	mov	r1, r0
900283f4:	6818      	ldr	r0, [r3, #0]
900283f6:	f000 bb97 	b.w	90028b28 <_free_r>
900283fa:	bf00      	nop
900283fc:	200001cc 	.word	0x200001cc

90028400 <sbrk_aligned>:
90028400:	b570      	push	{r4, r5, r6, lr}
90028402:	4e0f      	ldr	r6, [pc, #60]	@ (90028440 <sbrk_aligned+0x40>)
90028404:	460c      	mov	r4, r1
90028406:	6831      	ldr	r1, [r6, #0]
90028408:	4605      	mov	r5, r0
9002840a:	b911      	cbnz	r1, 90028412 <sbrk_aligned+0x12>
9002840c:	f000 faca 	bl	900289a4 <_sbrk_r>
90028410:	6030      	str	r0, [r6, #0]
90028412:	4621      	mov	r1, r4
90028414:	4628      	mov	r0, r5
90028416:	f000 fac5 	bl	900289a4 <_sbrk_r>
9002841a:	1c43      	adds	r3, r0, #1
9002841c:	d103      	bne.n	90028426 <sbrk_aligned+0x26>
9002841e:	f04f 34ff 	mov.w	r4, #4294967295
90028422:	4620      	mov	r0, r4
90028424:	bd70      	pop	{r4, r5, r6, pc}
90028426:	1cc4      	adds	r4, r0, #3
90028428:	f024 0403 	bic.w	r4, r4, #3
9002842c:	42a0      	cmp	r0, r4
9002842e:	d0f8      	beq.n	90028422 <sbrk_aligned+0x22>
90028430:	1a21      	subs	r1, r4, r0
90028432:	4628      	mov	r0, r5
90028434:	f000 fab6 	bl	900289a4 <_sbrk_r>
90028438:	3001      	adds	r0, #1
9002843a:	d1f2      	bne.n	90028422 <sbrk_aligned+0x22>
9002843c:	e7ef      	b.n	9002841e <sbrk_aligned+0x1e>
9002843e:	bf00      	nop
90028440:	2001b49c 	.word	0x2001b49c

90028444 <_malloc_r>:
90028444:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90028448:	1ccd      	adds	r5, r1, #3
9002844a:	f025 0503 	bic.w	r5, r5, #3
9002844e:	3508      	adds	r5, #8
90028450:	2d0c      	cmp	r5, #12
90028452:	bf38      	it	cc
90028454:	250c      	movcc	r5, #12
90028456:	2d00      	cmp	r5, #0
90028458:	4606      	mov	r6, r0
9002845a:	db01      	blt.n	90028460 <_malloc_r+0x1c>
9002845c:	42a9      	cmp	r1, r5
9002845e:	d904      	bls.n	9002846a <_malloc_r+0x26>
90028460:	230c      	movs	r3, #12
90028462:	6033      	str	r3, [r6, #0]
90028464:	2000      	movs	r0, #0
90028466:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002846a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 90028540 <_malloc_r+0xfc>
9002846e:	f000 f869 	bl	90028544 <__malloc_lock>
90028472:	f8d8 3000 	ldr.w	r3, [r8]
90028476:	461c      	mov	r4, r3
90028478:	bb44      	cbnz	r4, 900284cc <_malloc_r+0x88>
9002847a:	4629      	mov	r1, r5
9002847c:	4630      	mov	r0, r6
9002847e:	f7ff ffbf 	bl	90028400 <sbrk_aligned>
90028482:	1c43      	adds	r3, r0, #1
90028484:	4604      	mov	r4, r0
90028486:	d158      	bne.n	9002853a <_malloc_r+0xf6>
90028488:	f8d8 4000 	ldr.w	r4, [r8]
9002848c:	4627      	mov	r7, r4
9002848e:	2f00      	cmp	r7, #0
90028490:	d143      	bne.n	9002851a <_malloc_r+0xd6>
90028492:	2c00      	cmp	r4, #0
90028494:	d04b      	beq.n	9002852e <_malloc_r+0xea>
90028496:	6823      	ldr	r3, [r4, #0]
90028498:	4639      	mov	r1, r7
9002849a:	4630      	mov	r0, r6
9002849c:	eb04 0903 	add.w	r9, r4, r3
900284a0:	f000 fa80 	bl	900289a4 <_sbrk_r>
900284a4:	4581      	cmp	r9, r0
900284a6:	d142      	bne.n	9002852e <_malloc_r+0xea>
900284a8:	6821      	ldr	r1, [r4, #0]
900284aa:	1a6d      	subs	r5, r5, r1
900284ac:	4629      	mov	r1, r5
900284ae:	4630      	mov	r0, r6
900284b0:	f7ff ffa6 	bl	90028400 <sbrk_aligned>
900284b4:	3001      	adds	r0, #1
900284b6:	d03a      	beq.n	9002852e <_malloc_r+0xea>
900284b8:	6823      	ldr	r3, [r4, #0]
900284ba:	442b      	add	r3, r5
900284bc:	6023      	str	r3, [r4, #0]
900284be:	f8d8 3000 	ldr.w	r3, [r8]
900284c2:	685a      	ldr	r2, [r3, #4]
900284c4:	bb62      	cbnz	r2, 90028520 <_malloc_r+0xdc>
900284c6:	f8c8 7000 	str.w	r7, [r8]
900284ca:	e00f      	b.n	900284ec <_malloc_r+0xa8>
900284cc:	6822      	ldr	r2, [r4, #0]
900284ce:	1b52      	subs	r2, r2, r5
900284d0:	d420      	bmi.n	90028514 <_malloc_r+0xd0>
900284d2:	2a0b      	cmp	r2, #11
900284d4:	d917      	bls.n	90028506 <_malloc_r+0xc2>
900284d6:	1961      	adds	r1, r4, r5
900284d8:	42a3      	cmp	r3, r4
900284da:	6025      	str	r5, [r4, #0]
900284dc:	bf18      	it	ne
900284de:	6059      	strne	r1, [r3, #4]
900284e0:	6863      	ldr	r3, [r4, #4]
900284e2:	bf08      	it	eq
900284e4:	f8c8 1000 	streq.w	r1, [r8]
900284e8:	5162      	str	r2, [r4, r5]
900284ea:	604b      	str	r3, [r1, #4]
900284ec:	4630      	mov	r0, r6
900284ee:	f000 f82f 	bl	90028550 <__malloc_unlock>
900284f2:	f104 000b 	add.w	r0, r4, #11
900284f6:	1d23      	adds	r3, r4, #4
900284f8:	f020 0007 	bic.w	r0, r0, #7
900284fc:	1ac2      	subs	r2, r0, r3
900284fe:	bf1c      	itt	ne
90028500:	1a1b      	subne	r3, r3, r0
90028502:	50a3      	strne	r3, [r4, r2]
90028504:	e7af      	b.n	90028466 <_malloc_r+0x22>
90028506:	6862      	ldr	r2, [r4, #4]
90028508:	42a3      	cmp	r3, r4
9002850a:	bf0c      	ite	eq
9002850c:	f8c8 2000 	streq.w	r2, [r8]
90028510:	605a      	strne	r2, [r3, #4]
90028512:	e7eb      	b.n	900284ec <_malloc_r+0xa8>
90028514:	4623      	mov	r3, r4
90028516:	6864      	ldr	r4, [r4, #4]
90028518:	e7ae      	b.n	90028478 <_malloc_r+0x34>
9002851a:	463c      	mov	r4, r7
9002851c:	687f      	ldr	r7, [r7, #4]
9002851e:	e7b6      	b.n	9002848e <_malloc_r+0x4a>
90028520:	461a      	mov	r2, r3
90028522:	685b      	ldr	r3, [r3, #4]
90028524:	42a3      	cmp	r3, r4
90028526:	d1fb      	bne.n	90028520 <_malloc_r+0xdc>
90028528:	2300      	movs	r3, #0
9002852a:	6053      	str	r3, [r2, #4]
9002852c:	e7de      	b.n	900284ec <_malloc_r+0xa8>
9002852e:	230c      	movs	r3, #12
90028530:	6033      	str	r3, [r6, #0]
90028532:	4630      	mov	r0, r6
90028534:	f000 f80c 	bl	90028550 <__malloc_unlock>
90028538:	e794      	b.n	90028464 <_malloc_r+0x20>
9002853a:	6005      	str	r5, [r0, #0]
9002853c:	e7d6      	b.n	900284ec <_malloc_r+0xa8>
9002853e:	bf00      	nop
90028540:	2001b4a0 	.word	0x2001b4a0

90028544 <__malloc_lock>:
90028544:	4801      	ldr	r0, [pc, #4]	@ (9002854c <__malloc_lock+0x8>)
90028546:	f000 ba7a 	b.w	90028a3e <__retarget_lock_acquire_recursive>
9002854a:	bf00      	nop
9002854c:	2001b5e4 	.word	0x2001b5e4

90028550 <__malloc_unlock>:
90028550:	4801      	ldr	r0, [pc, #4]	@ (90028558 <__malloc_unlock+0x8>)
90028552:	f000 ba75 	b.w	90028a40 <__retarget_lock_release_recursive>
90028556:	bf00      	nop
90028558:	2001b5e4 	.word	0x2001b5e4

9002855c <rand>:
9002855c:	4b16      	ldr	r3, [pc, #88]	@ (900285b8 <rand+0x5c>)
9002855e:	b510      	push	{r4, lr}
90028560:	681c      	ldr	r4, [r3, #0]
90028562:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90028564:	b9b3      	cbnz	r3, 90028594 <rand+0x38>
90028566:	2018      	movs	r0, #24
90028568:	f7ff ff3a 	bl	900283e0 <malloc>
9002856c:	4602      	mov	r2, r0
9002856e:	6320      	str	r0, [r4, #48]	@ 0x30
90028570:	b920      	cbnz	r0, 9002857c <rand+0x20>
90028572:	4b12      	ldr	r3, [pc, #72]	@ (900285bc <rand+0x60>)
90028574:	4812      	ldr	r0, [pc, #72]	@ (900285c0 <rand+0x64>)
90028576:	2152      	movs	r1, #82	@ 0x52
90028578:	f7ff ff0e 	bl	90028398 <__assert_func>
9002857c:	4911      	ldr	r1, [pc, #68]	@ (900285c4 <rand+0x68>)
9002857e:	4b12      	ldr	r3, [pc, #72]	@ (900285c8 <rand+0x6c>)
90028580:	e9c0 1300 	strd	r1, r3, [r0]
90028584:	4b11      	ldr	r3, [pc, #68]	@ (900285cc <rand+0x70>)
90028586:	6083      	str	r3, [r0, #8]
90028588:	230b      	movs	r3, #11
9002858a:	8183      	strh	r3, [r0, #12]
9002858c:	2100      	movs	r1, #0
9002858e:	2001      	movs	r0, #1
90028590:	e9c2 0104 	strd	r0, r1, [r2, #16]
90028594:	6b21      	ldr	r1, [r4, #48]	@ 0x30
90028596:	480e      	ldr	r0, [pc, #56]	@ (900285d0 <rand+0x74>)
90028598:	690b      	ldr	r3, [r1, #16]
9002859a:	694c      	ldr	r4, [r1, #20]
9002859c:	4a0d      	ldr	r2, [pc, #52]	@ (900285d4 <rand+0x78>)
9002859e:	4358      	muls	r0, r3
900285a0:	fb02 0004 	mla	r0, r2, r4, r0
900285a4:	fba3 3202 	umull	r3, r2, r3, r2
900285a8:	3301      	adds	r3, #1
900285aa:	eb40 0002 	adc.w	r0, r0, r2
900285ae:	e9c1 3004 	strd	r3, r0, [r1, #16]
900285b2:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
900285b6:	bd10      	pop	{r4, pc}
900285b8:	200001cc 	.word	0x200001cc
900285bc:	9002a586 	.word	0x9002a586
900285c0:	9002a59d 	.word	0x9002a59d
900285c4:	abcd330e 	.word	0xabcd330e
900285c8:	e66d1234 	.word	0xe66d1234
900285cc:	0005deec 	.word	0x0005deec
900285d0:	5851f42d 	.word	0x5851f42d
900285d4:	4c957f2d 	.word	0x4c957f2d

900285d8 <__cxa_atexit>:
900285d8:	b510      	push	{r4, lr}
900285da:	4604      	mov	r4, r0
900285dc:	4804      	ldr	r0, [pc, #16]	@ (900285f0 <__cxa_atexit+0x18>)
900285de:	4613      	mov	r3, r2
900285e0:	b120      	cbz	r0, 900285ec <__cxa_atexit+0x14>
900285e2:	460a      	mov	r2, r1
900285e4:	2002      	movs	r0, #2
900285e6:	4621      	mov	r1, r4
900285e8:	f000 fa42 	bl	90028a70 <__register_exitproc>
900285ec:	bd10      	pop	{r4, pc}
900285ee:	bf00      	nop
900285f0:	90028a71 	.word	0x90028a71

900285f4 <std>:
900285f4:	2300      	movs	r3, #0
900285f6:	b510      	push	{r4, lr}
900285f8:	4604      	mov	r4, r0
900285fa:	e9c0 3300 	strd	r3, r3, [r0]
900285fe:	e9c0 3304 	strd	r3, r3, [r0, #16]
90028602:	6083      	str	r3, [r0, #8]
90028604:	8181      	strh	r1, [r0, #12]
90028606:	6643      	str	r3, [r0, #100]	@ 0x64
90028608:	81c2      	strh	r2, [r0, #14]
9002860a:	6183      	str	r3, [r0, #24]
9002860c:	4619      	mov	r1, r3
9002860e:	2208      	movs	r2, #8
90028610:	305c      	adds	r0, #92	@ 0x5c
90028612:	f000 f928 	bl	90028866 <memset>
90028616:	4b0d      	ldr	r3, [pc, #52]	@ (9002864c <std+0x58>)
90028618:	6263      	str	r3, [r4, #36]	@ 0x24
9002861a:	4b0d      	ldr	r3, [pc, #52]	@ (90028650 <std+0x5c>)
9002861c:	62a3      	str	r3, [r4, #40]	@ 0x28
9002861e:	4b0d      	ldr	r3, [pc, #52]	@ (90028654 <std+0x60>)
90028620:	62e3      	str	r3, [r4, #44]	@ 0x2c
90028622:	4b0d      	ldr	r3, [pc, #52]	@ (90028658 <std+0x64>)
90028624:	6323      	str	r3, [r4, #48]	@ 0x30
90028626:	4b0d      	ldr	r3, [pc, #52]	@ (9002865c <std+0x68>)
90028628:	6224      	str	r4, [r4, #32]
9002862a:	429c      	cmp	r4, r3
9002862c:	d006      	beq.n	9002863c <std+0x48>
9002862e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
90028632:	4294      	cmp	r4, r2
90028634:	d002      	beq.n	9002863c <std+0x48>
90028636:	33d0      	adds	r3, #208	@ 0xd0
90028638:	429c      	cmp	r4, r3
9002863a:	d105      	bne.n	90028648 <std+0x54>
9002863c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
90028640:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90028644:	f000 b9fa 	b.w	90028a3c <__retarget_lock_init_recursive>
90028648:	bd10      	pop	{r4, pc}
9002864a:	bf00      	nop
9002864c:	900287c1 	.word	0x900287c1
90028650:	900287e3 	.word	0x900287e3
90028654:	9002881b 	.word	0x9002881b
90028658:	9002883f 	.word	0x9002883f
9002865c:	2001b4a4 	.word	0x2001b4a4

90028660 <stdio_exit_handler>:
90028660:	4a02      	ldr	r2, [pc, #8]	@ (9002866c <stdio_exit_handler+0xc>)
90028662:	4903      	ldr	r1, [pc, #12]	@ (90028670 <stdio_exit_handler+0x10>)
90028664:	4803      	ldr	r0, [pc, #12]	@ (90028674 <stdio_exit_handler+0x14>)
90028666:	f000 b87b 	b.w	90028760 <_fwalk_sglue>
9002866a:	bf00      	nop
9002866c:	200001c0 	.word	0x200001c0
90028670:	90029261 	.word	0x90029261
90028674:	200001d0 	.word	0x200001d0

90028678 <cleanup_stdio>:
90028678:	6841      	ldr	r1, [r0, #4]
9002867a:	4b0c      	ldr	r3, [pc, #48]	@ (900286ac <cleanup_stdio+0x34>)
9002867c:	4299      	cmp	r1, r3
9002867e:	b510      	push	{r4, lr}
90028680:	4604      	mov	r4, r0
90028682:	d001      	beq.n	90028688 <cleanup_stdio+0x10>
90028684:	f000 fdec 	bl	90029260 <_fflush_r>
90028688:	68a1      	ldr	r1, [r4, #8]
9002868a:	4b09      	ldr	r3, [pc, #36]	@ (900286b0 <cleanup_stdio+0x38>)
9002868c:	4299      	cmp	r1, r3
9002868e:	d002      	beq.n	90028696 <cleanup_stdio+0x1e>
90028690:	4620      	mov	r0, r4
90028692:	f000 fde5 	bl	90029260 <_fflush_r>
90028696:	68e1      	ldr	r1, [r4, #12]
90028698:	4b06      	ldr	r3, [pc, #24]	@ (900286b4 <cleanup_stdio+0x3c>)
9002869a:	4299      	cmp	r1, r3
9002869c:	d004      	beq.n	900286a8 <cleanup_stdio+0x30>
9002869e:	4620      	mov	r0, r4
900286a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900286a4:	f000 bddc 	b.w	90029260 <_fflush_r>
900286a8:	bd10      	pop	{r4, pc}
900286aa:	bf00      	nop
900286ac:	2001b4a4 	.word	0x2001b4a4
900286b0:	2001b50c 	.word	0x2001b50c
900286b4:	2001b574 	.word	0x2001b574

900286b8 <global_stdio_init.part.0>:
900286b8:	b510      	push	{r4, lr}
900286ba:	4b0b      	ldr	r3, [pc, #44]	@ (900286e8 <global_stdio_init.part.0+0x30>)
900286bc:	4c0b      	ldr	r4, [pc, #44]	@ (900286ec <global_stdio_init.part.0+0x34>)
900286be:	4a0c      	ldr	r2, [pc, #48]	@ (900286f0 <global_stdio_init.part.0+0x38>)
900286c0:	601a      	str	r2, [r3, #0]
900286c2:	4620      	mov	r0, r4
900286c4:	2200      	movs	r2, #0
900286c6:	2104      	movs	r1, #4
900286c8:	f7ff ff94 	bl	900285f4 <std>
900286cc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
900286d0:	2201      	movs	r2, #1
900286d2:	2109      	movs	r1, #9
900286d4:	f7ff ff8e 	bl	900285f4 <std>
900286d8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
900286dc:	2202      	movs	r2, #2
900286de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900286e2:	2112      	movs	r1, #18
900286e4:	f7ff bf86 	b.w	900285f4 <std>
900286e8:	2001b5dc 	.word	0x2001b5dc
900286ec:	2001b4a4 	.word	0x2001b4a4
900286f0:	90028661 	.word	0x90028661

900286f4 <__sfp_lock_acquire>:
900286f4:	4801      	ldr	r0, [pc, #4]	@ (900286fc <__sfp_lock_acquire+0x8>)
900286f6:	f000 b9a2 	b.w	90028a3e <__retarget_lock_acquire_recursive>
900286fa:	bf00      	nop
900286fc:	2001b5e6 	.word	0x2001b5e6

90028700 <__sfp_lock_release>:
90028700:	4801      	ldr	r0, [pc, #4]	@ (90028708 <__sfp_lock_release+0x8>)
90028702:	f000 b99d 	b.w	90028a40 <__retarget_lock_release_recursive>
90028706:	bf00      	nop
90028708:	2001b5e6 	.word	0x2001b5e6

9002870c <__sinit>:
9002870c:	b510      	push	{r4, lr}
9002870e:	4604      	mov	r4, r0
90028710:	f7ff fff0 	bl	900286f4 <__sfp_lock_acquire>
90028714:	6a23      	ldr	r3, [r4, #32]
90028716:	b11b      	cbz	r3, 90028720 <__sinit+0x14>
90028718:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002871c:	f7ff bff0 	b.w	90028700 <__sfp_lock_release>
90028720:	4b04      	ldr	r3, [pc, #16]	@ (90028734 <__sinit+0x28>)
90028722:	6223      	str	r3, [r4, #32]
90028724:	4b04      	ldr	r3, [pc, #16]	@ (90028738 <__sinit+0x2c>)
90028726:	681b      	ldr	r3, [r3, #0]
90028728:	2b00      	cmp	r3, #0
9002872a:	d1f5      	bne.n	90028718 <__sinit+0xc>
9002872c:	f7ff ffc4 	bl	900286b8 <global_stdio_init.part.0>
90028730:	e7f2      	b.n	90028718 <__sinit+0xc>
90028732:	bf00      	nop
90028734:	90028679 	.word	0x90028679
90028738:	2001b5dc 	.word	0x2001b5dc

9002873c <fiprintf>:
9002873c:	b40e      	push	{r1, r2, r3}
9002873e:	b503      	push	{r0, r1, lr}
90028740:	4601      	mov	r1, r0
90028742:	ab03      	add	r3, sp, #12
90028744:	4805      	ldr	r0, [pc, #20]	@ (9002875c <fiprintf+0x20>)
90028746:	f853 2b04 	ldr.w	r2, [r3], #4
9002874a:	6800      	ldr	r0, [r0, #0]
9002874c:	9301      	str	r3, [sp, #4]
9002874e:	f000 fa5f 	bl	90028c10 <_vfiprintf_r>
90028752:	b002      	add	sp, #8
90028754:	f85d eb04 	ldr.w	lr, [sp], #4
90028758:	b003      	add	sp, #12
9002875a:	4770      	bx	lr
9002875c:	200001cc 	.word	0x200001cc

90028760 <_fwalk_sglue>:
90028760:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90028764:	4607      	mov	r7, r0
90028766:	4688      	mov	r8, r1
90028768:	4614      	mov	r4, r2
9002876a:	2600      	movs	r6, #0
9002876c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
90028770:	f1b9 0901 	subs.w	r9, r9, #1
90028774:	d505      	bpl.n	90028782 <_fwalk_sglue+0x22>
90028776:	6824      	ldr	r4, [r4, #0]
90028778:	2c00      	cmp	r4, #0
9002877a:	d1f7      	bne.n	9002876c <_fwalk_sglue+0xc>
9002877c:	4630      	mov	r0, r6
9002877e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90028782:	89ab      	ldrh	r3, [r5, #12]
90028784:	2b01      	cmp	r3, #1
90028786:	d907      	bls.n	90028798 <_fwalk_sglue+0x38>
90028788:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9002878c:	3301      	adds	r3, #1
9002878e:	d003      	beq.n	90028798 <_fwalk_sglue+0x38>
90028790:	4629      	mov	r1, r5
90028792:	4638      	mov	r0, r7
90028794:	47c0      	blx	r8
90028796:	4306      	orrs	r6, r0
90028798:	3568      	adds	r5, #104	@ 0x68
9002879a:	e7e9      	b.n	90028770 <_fwalk_sglue+0x10>

9002879c <iprintf>:
9002879c:	b40f      	push	{r0, r1, r2, r3}
9002879e:	b507      	push	{r0, r1, r2, lr}
900287a0:	4906      	ldr	r1, [pc, #24]	@ (900287bc <iprintf+0x20>)
900287a2:	ab04      	add	r3, sp, #16
900287a4:	6808      	ldr	r0, [r1, #0]
900287a6:	f853 2b04 	ldr.w	r2, [r3], #4
900287aa:	6881      	ldr	r1, [r0, #8]
900287ac:	9301      	str	r3, [sp, #4]
900287ae:	f000 fa2f 	bl	90028c10 <_vfiprintf_r>
900287b2:	b003      	add	sp, #12
900287b4:	f85d eb04 	ldr.w	lr, [sp], #4
900287b8:	b004      	add	sp, #16
900287ba:	4770      	bx	lr
900287bc:	200001cc 	.word	0x200001cc

900287c0 <__sread>:
900287c0:	b510      	push	{r4, lr}
900287c2:	460c      	mov	r4, r1
900287c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900287c8:	f000 f8c6 	bl	90028958 <_read_r>
900287cc:	2800      	cmp	r0, #0
900287ce:	bfab      	itete	ge
900287d0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
900287d2:	89a3      	ldrhlt	r3, [r4, #12]
900287d4:	181b      	addge	r3, r3, r0
900287d6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
900287da:	bfac      	ite	ge
900287dc:	6563      	strge	r3, [r4, #84]	@ 0x54
900287de:	81a3      	strhlt	r3, [r4, #12]
900287e0:	bd10      	pop	{r4, pc}

900287e2 <__swrite>:
900287e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900287e6:	461f      	mov	r7, r3
900287e8:	898b      	ldrh	r3, [r1, #12]
900287ea:	05db      	lsls	r3, r3, #23
900287ec:	4605      	mov	r5, r0
900287ee:	460c      	mov	r4, r1
900287f0:	4616      	mov	r6, r2
900287f2:	d505      	bpl.n	90028800 <__swrite+0x1e>
900287f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900287f8:	2302      	movs	r3, #2
900287fa:	2200      	movs	r2, #0
900287fc:	f000 f89a 	bl	90028934 <_lseek_r>
90028800:	89a3      	ldrh	r3, [r4, #12]
90028802:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90028806:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9002880a:	81a3      	strh	r3, [r4, #12]
9002880c:	4632      	mov	r2, r6
9002880e:	463b      	mov	r3, r7
90028810:	4628      	mov	r0, r5
90028812:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90028816:	f000 b8d5 	b.w	900289c4 <_write_r>

9002881a <__sseek>:
9002881a:	b510      	push	{r4, lr}
9002881c:	460c      	mov	r4, r1
9002881e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028822:	f000 f887 	bl	90028934 <_lseek_r>
90028826:	1c43      	adds	r3, r0, #1
90028828:	89a3      	ldrh	r3, [r4, #12]
9002882a:	bf15      	itete	ne
9002882c:	6560      	strne	r0, [r4, #84]	@ 0x54
9002882e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
90028832:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
90028836:	81a3      	strheq	r3, [r4, #12]
90028838:	bf18      	it	ne
9002883a:	81a3      	strhne	r3, [r4, #12]
9002883c:	bd10      	pop	{r4, pc}

9002883e <__sclose>:
9002883e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028842:	f000 b867 	b.w	90028914 <_close_r>

90028846 <memcmp>:
90028846:	b510      	push	{r4, lr}
90028848:	3901      	subs	r1, #1
9002884a:	4402      	add	r2, r0
9002884c:	4290      	cmp	r0, r2
9002884e:	d101      	bne.n	90028854 <memcmp+0xe>
90028850:	2000      	movs	r0, #0
90028852:	e005      	b.n	90028860 <memcmp+0x1a>
90028854:	7803      	ldrb	r3, [r0, #0]
90028856:	f811 4f01 	ldrb.w	r4, [r1, #1]!
9002885a:	42a3      	cmp	r3, r4
9002885c:	d001      	beq.n	90028862 <memcmp+0x1c>
9002885e:	1b18      	subs	r0, r3, r4
90028860:	bd10      	pop	{r4, pc}
90028862:	3001      	adds	r0, #1
90028864:	e7f2      	b.n	9002884c <memcmp+0x6>

90028866 <memset>:
90028866:	4402      	add	r2, r0
90028868:	4603      	mov	r3, r0
9002886a:	4293      	cmp	r3, r2
9002886c:	d100      	bne.n	90028870 <memset+0xa>
9002886e:	4770      	bx	lr
90028870:	f803 1b01 	strb.w	r1, [r3], #1
90028874:	e7f9      	b.n	9002886a <memset+0x4>

90028876 <strchr>:
90028876:	b2c9      	uxtb	r1, r1
90028878:	4603      	mov	r3, r0
9002887a:	4618      	mov	r0, r3
9002887c:	f813 2b01 	ldrb.w	r2, [r3], #1
90028880:	b112      	cbz	r2, 90028888 <strchr+0x12>
90028882:	428a      	cmp	r2, r1
90028884:	d1f9      	bne.n	9002887a <strchr+0x4>
90028886:	4770      	bx	lr
90028888:	2900      	cmp	r1, #0
9002888a:	bf18      	it	ne
9002888c:	2000      	movne	r0, #0
9002888e:	4770      	bx	lr

90028890 <strncmp>:
90028890:	b510      	push	{r4, lr}
90028892:	b16a      	cbz	r2, 900288b0 <strncmp+0x20>
90028894:	3901      	subs	r1, #1
90028896:	1884      	adds	r4, r0, r2
90028898:	f810 2b01 	ldrb.w	r2, [r0], #1
9002889c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
900288a0:	429a      	cmp	r2, r3
900288a2:	d103      	bne.n	900288ac <strncmp+0x1c>
900288a4:	42a0      	cmp	r0, r4
900288a6:	d001      	beq.n	900288ac <strncmp+0x1c>
900288a8:	2a00      	cmp	r2, #0
900288aa:	d1f5      	bne.n	90028898 <strncmp+0x8>
900288ac:	1ad0      	subs	r0, r2, r3
900288ae:	bd10      	pop	{r4, pc}
900288b0:	4610      	mov	r0, r2
900288b2:	e7fc      	b.n	900288ae <strncmp+0x1e>

900288b4 <_raise_r>:
900288b4:	291f      	cmp	r1, #31
900288b6:	b538      	push	{r3, r4, r5, lr}
900288b8:	4605      	mov	r5, r0
900288ba:	460c      	mov	r4, r1
900288bc:	d904      	bls.n	900288c8 <_raise_r+0x14>
900288be:	2316      	movs	r3, #22
900288c0:	6003      	str	r3, [r0, #0]
900288c2:	f04f 30ff 	mov.w	r0, #4294967295
900288c6:	bd38      	pop	{r3, r4, r5, pc}
900288c8:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
900288ca:	b112      	cbz	r2, 900288d2 <_raise_r+0x1e>
900288cc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
900288d0:	b94b      	cbnz	r3, 900288e6 <_raise_r+0x32>
900288d2:	4628      	mov	r0, r5
900288d4:	f000 f864 	bl	900289a0 <_getpid_r>
900288d8:	4622      	mov	r2, r4
900288da:	4601      	mov	r1, r0
900288dc:	4628      	mov	r0, r5
900288de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
900288e2:	f000 b84b 	b.w	9002897c <_kill_r>
900288e6:	2b01      	cmp	r3, #1
900288e8:	d00a      	beq.n	90028900 <_raise_r+0x4c>
900288ea:	1c59      	adds	r1, r3, #1
900288ec:	d103      	bne.n	900288f6 <_raise_r+0x42>
900288ee:	2316      	movs	r3, #22
900288f0:	6003      	str	r3, [r0, #0]
900288f2:	2001      	movs	r0, #1
900288f4:	e7e7      	b.n	900288c6 <_raise_r+0x12>
900288f6:	2100      	movs	r1, #0
900288f8:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
900288fc:	4620      	mov	r0, r4
900288fe:	4798      	blx	r3
90028900:	2000      	movs	r0, #0
90028902:	e7e0      	b.n	900288c6 <_raise_r+0x12>

90028904 <raise>:
90028904:	4b02      	ldr	r3, [pc, #8]	@ (90028910 <raise+0xc>)
90028906:	4601      	mov	r1, r0
90028908:	6818      	ldr	r0, [r3, #0]
9002890a:	f7ff bfd3 	b.w	900288b4 <_raise_r>
9002890e:	bf00      	nop
90028910:	200001cc 	.word	0x200001cc

90028914 <_close_r>:
90028914:	b538      	push	{r3, r4, r5, lr}
90028916:	4d06      	ldr	r5, [pc, #24]	@ (90028930 <_close_r+0x1c>)
90028918:	2300      	movs	r3, #0
9002891a:	4604      	mov	r4, r0
9002891c:	4608      	mov	r0, r1
9002891e:	602b      	str	r3, [r5, #0]
90028920:	f7da f86c 	bl	900029fc <_close>
90028924:	1c43      	adds	r3, r0, #1
90028926:	d102      	bne.n	9002892e <_close_r+0x1a>
90028928:	682b      	ldr	r3, [r5, #0]
9002892a:	b103      	cbz	r3, 9002892e <_close_r+0x1a>
9002892c:	6023      	str	r3, [r4, #0]
9002892e:	bd38      	pop	{r3, r4, r5, pc}
90028930:	2001b5e0 	.word	0x2001b5e0

90028934 <_lseek_r>:
90028934:	b538      	push	{r3, r4, r5, lr}
90028936:	4d07      	ldr	r5, [pc, #28]	@ (90028954 <_lseek_r+0x20>)
90028938:	4604      	mov	r4, r0
9002893a:	4608      	mov	r0, r1
9002893c:	4611      	mov	r1, r2
9002893e:	2200      	movs	r2, #0
90028940:	602a      	str	r2, [r5, #0]
90028942:	461a      	mov	r2, r3
90028944:	f7da f864 	bl	90002a10 <_lseek>
90028948:	1c43      	adds	r3, r0, #1
9002894a:	d102      	bne.n	90028952 <_lseek_r+0x1e>
9002894c:	682b      	ldr	r3, [r5, #0]
9002894e:	b103      	cbz	r3, 90028952 <_lseek_r+0x1e>
90028950:	6023      	str	r3, [r4, #0]
90028952:	bd38      	pop	{r3, r4, r5, pc}
90028954:	2001b5e0 	.word	0x2001b5e0

90028958 <_read_r>:
90028958:	b538      	push	{r3, r4, r5, lr}
9002895a:	4d07      	ldr	r5, [pc, #28]	@ (90028978 <_read_r+0x20>)
9002895c:	4604      	mov	r4, r0
9002895e:	4608      	mov	r0, r1
90028960:	4611      	mov	r1, r2
90028962:	2200      	movs	r2, #0
90028964:	602a      	str	r2, [r5, #0]
90028966:	461a      	mov	r2, r3
90028968:	f7da f82c 	bl	900029c4 <_read>
9002896c:	1c43      	adds	r3, r0, #1
9002896e:	d102      	bne.n	90028976 <_read_r+0x1e>
90028970:	682b      	ldr	r3, [r5, #0]
90028972:	b103      	cbz	r3, 90028976 <_read_r+0x1e>
90028974:	6023      	str	r3, [r4, #0]
90028976:	bd38      	pop	{r3, r4, r5, pc}
90028978:	2001b5e0 	.word	0x2001b5e0

9002897c <_kill_r>:
9002897c:	b538      	push	{r3, r4, r5, lr}
9002897e:	4d07      	ldr	r5, [pc, #28]	@ (9002899c <_kill_r+0x20>)
90028980:	2300      	movs	r3, #0
90028982:	4604      	mov	r4, r0
90028984:	4608      	mov	r0, r1
90028986:	4611      	mov	r1, r2
90028988:	602b      	str	r3, [r5, #0]
9002898a:	f7da f80d 	bl	900029a8 <_kill>
9002898e:	1c43      	adds	r3, r0, #1
90028990:	d102      	bne.n	90028998 <_kill_r+0x1c>
90028992:	682b      	ldr	r3, [r5, #0]
90028994:	b103      	cbz	r3, 90028998 <_kill_r+0x1c>
90028996:	6023      	str	r3, [r4, #0]
90028998:	bd38      	pop	{r3, r4, r5, pc}
9002899a:	bf00      	nop
9002899c:	2001b5e0 	.word	0x2001b5e0

900289a0 <_getpid_r>:
900289a0:	f7da b800 	b.w	900029a4 <_getpid>

900289a4 <_sbrk_r>:
900289a4:	b538      	push	{r3, r4, r5, lr}
900289a6:	4d06      	ldr	r5, [pc, #24]	@ (900289c0 <_sbrk_r+0x1c>)
900289a8:	2300      	movs	r3, #0
900289aa:	4604      	mov	r4, r0
900289ac:	4608      	mov	r0, r1
900289ae:	602b      	str	r3, [r5, #0]
900289b0:	f7da f830 	bl	90002a14 <_sbrk>
900289b4:	1c43      	adds	r3, r0, #1
900289b6:	d102      	bne.n	900289be <_sbrk_r+0x1a>
900289b8:	682b      	ldr	r3, [r5, #0]
900289ba:	b103      	cbz	r3, 900289be <_sbrk_r+0x1a>
900289bc:	6023      	str	r3, [r4, #0]
900289be:	bd38      	pop	{r3, r4, r5, pc}
900289c0:	2001b5e0 	.word	0x2001b5e0

900289c4 <_write_r>:
900289c4:	b538      	push	{r3, r4, r5, lr}
900289c6:	4d07      	ldr	r5, [pc, #28]	@ (900289e4 <_write_r+0x20>)
900289c8:	4604      	mov	r4, r0
900289ca:	4608      	mov	r0, r1
900289cc:	4611      	mov	r1, r2
900289ce:	2200      	movs	r2, #0
900289d0:	602a      	str	r2, [r5, #0]
900289d2:	461a      	mov	r2, r3
900289d4:	f7da f804 	bl	900029e0 <_write>
900289d8:	1c43      	adds	r3, r0, #1
900289da:	d102      	bne.n	900289e2 <_write_r+0x1e>
900289dc:	682b      	ldr	r3, [r5, #0]
900289de:	b103      	cbz	r3, 900289e2 <_write_r+0x1e>
900289e0:	6023      	str	r3, [r4, #0]
900289e2:	bd38      	pop	{r3, r4, r5, pc}
900289e4:	2001b5e0 	.word	0x2001b5e0

900289e8 <__errno>:
900289e8:	4b01      	ldr	r3, [pc, #4]	@ (900289f0 <__errno+0x8>)
900289ea:	6818      	ldr	r0, [r3, #0]
900289ec:	4770      	bx	lr
900289ee:	bf00      	nop
900289f0:	200001cc 	.word	0x200001cc

900289f4 <__libc_init_array>:
900289f4:	b570      	push	{r4, r5, r6, lr}
900289f6:	4d0d      	ldr	r5, [pc, #52]	@ (90028a2c <__libc_init_array+0x38>)
900289f8:	4c0d      	ldr	r4, [pc, #52]	@ (90028a30 <__libc_init_array+0x3c>)
900289fa:	1b64      	subs	r4, r4, r5
900289fc:	10a4      	asrs	r4, r4, #2
900289fe:	2600      	movs	r6, #0
90028a00:	42a6      	cmp	r6, r4
90028a02:	d109      	bne.n	90028a18 <__libc_init_array+0x24>
90028a04:	4d0b      	ldr	r5, [pc, #44]	@ (90028a34 <__libc_init_array+0x40>)
90028a06:	4c0c      	ldr	r4, [pc, #48]	@ (90028a38 <__libc_init_array+0x44>)
90028a08:	f000 fd6a 	bl	900294e0 <_init>
90028a0c:	1b64      	subs	r4, r4, r5
90028a0e:	10a4      	asrs	r4, r4, #2
90028a10:	2600      	movs	r6, #0
90028a12:	42a6      	cmp	r6, r4
90028a14:	d105      	bne.n	90028a22 <__libc_init_array+0x2e>
90028a16:	bd70      	pop	{r4, r5, r6, pc}
90028a18:	f855 3b04 	ldr.w	r3, [r5], #4
90028a1c:	4798      	blx	r3
90028a1e:	3601      	adds	r6, #1
90028a20:	e7ee      	b.n	90028a00 <__libc_init_array+0xc>
90028a22:	f855 3b04 	ldr.w	r3, [r5], #4
90028a26:	4798      	blx	r3
90028a28:	3601      	adds	r6, #1
90028a2a:	e7f2      	b.n	90028a12 <__libc_init_array+0x1e>
90028a2c:	90036344 	.word	0x90036344
90028a30:	90036344 	.word	0x90036344
90028a34:	90036344 	.word	0x90036344
90028a38:	9003635c 	.word	0x9003635c

90028a3c <__retarget_lock_init_recursive>:
90028a3c:	4770      	bx	lr

90028a3e <__retarget_lock_acquire_recursive>:
90028a3e:	4770      	bx	lr

90028a40 <__retarget_lock_release_recursive>:
90028a40:	4770      	bx	lr

90028a42 <strcpy>:
90028a42:	4603      	mov	r3, r0
90028a44:	f811 2b01 	ldrb.w	r2, [r1], #1
90028a48:	f803 2b01 	strb.w	r2, [r3], #1
90028a4c:	2a00      	cmp	r2, #0
90028a4e:	d1f9      	bne.n	90028a44 <strcpy+0x2>
90028a50:	4770      	bx	lr

90028a52 <memcpy>:
90028a52:	440a      	add	r2, r1
90028a54:	4291      	cmp	r1, r2
90028a56:	f100 33ff 	add.w	r3, r0, #4294967295
90028a5a:	d100      	bne.n	90028a5e <memcpy+0xc>
90028a5c:	4770      	bx	lr
90028a5e:	b510      	push	{r4, lr}
90028a60:	f811 4b01 	ldrb.w	r4, [r1], #1
90028a64:	f803 4f01 	strb.w	r4, [r3, #1]!
90028a68:	4291      	cmp	r1, r2
90028a6a:	d1f9      	bne.n	90028a60 <memcpy+0xe>
90028a6c:	bd10      	pop	{r4, pc}
	...

90028a70 <__register_exitproc>:
90028a70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90028a74:	4d27      	ldr	r5, [pc, #156]	@ (90028b14 <__register_exitproc+0xa4>)
90028a76:	4607      	mov	r7, r0
90028a78:	6828      	ldr	r0, [r5, #0]
90028a7a:	4691      	mov	r9, r2
90028a7c:	460e      	mov	r6, r1
90028a7e:	4698      	mov	r8, r3
90028a80:	f7ff ffdd 	bl	90028a3e <__retarget_lock_acquire_recursive>
90028a84:	4a24      	ldr	r2, [pc, #144]	@ (90028b18 <__register_exitproc+0xa8>)
90028a86:	6814      	ldr	r4, [r2, #0]
90028a88:	b93c      	cbnz	r4, 90028a9a <__register_exitproc+0x2a>
90028a8a:	4b24      	ldr	r3, [pc, #144]	@ (90028b1c <__register_exitproc+0xac>)
90028a8c:	6013      	str	r3, [r2, #0]
90028a8e:	4a24      	ldr	r2, [pc, #144]	@ (90028b20 <__register_exitproc+0xb0>)
90028a90:	b112      	cbz	r2, 90028a98 <__register_exitproc+0x28>
90028a92:	6812      	ldr	r2, [r2, #0]
90028a94:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
90028a98:	4c20      	ldr	r4, [pc, #128]	@ (90028b1c <__register_exitproc+0xac>)
90028a9a:	6863      	ldr	r3, [r4, #4]
90028a9c:	2b1f      	cmp	r3, #31
90028a9e:	dd06      	ble.n	90028aae <__register_exitproc+0x3e>
90028aa0:	6828      	ldr	r0, [r5, #0]
90028aa2:	f7ff ffcd 	bl	90028a40 <__retarget_lock_release_recursive>
90028aa6:	f04f 30ff 	mov.w	r0, #4294967295
90028aaa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90028aae:	b32f      	cbz	r7, 90028afc <__register_exitproc+0x8c>
90028ab0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
90028ab4:	b968      	cbnz	r0, 90028ad2 <__register_exitproc+0x62>
90028ab6:	4b1b      	ldr	r3, [pc, #108]	@ (90028b24 <__register_exitproc+0xb4>)
90028ab8:	2b00      	cmp	r3, #0
90028aba:	d0f1      	beq.n	90028aa0 <__register_exitproc+0x30>
90028abc:	f44f 7084 	mov.w	r0, #264	@ 0x108
90028ac0:	f7ff fc8e 	bl	900283e0 <malloc>
90028ac4:	2800      	cmp	r0, #0
90028ac6:	d0eb      	beq.n	90028aa0 <__register_exitproc+0x30>
90028ac8:	2300      	movs	r3, #0
90028aca:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
90028ace:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
90028ad2:	6863      	ldr	r3, [r4, #4]
90028ad4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
90028ad8:	2201      	movs	r2, #1
90028ada:	409a      	lsls	r2, r3
90028adc:	eb00 0183 	add.w	r1, r0, r3, lsl #2
90028ae0:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
90028ae4:	4313      	orrs	r3, r2
90028ae6:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
90028aea:	2f02      	cmp	r7, #2
90028aec:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
90028af0:	bf02      	ittt	eq
90028af2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
90028af6:	4313      	orreq	r3, r2
90028af8:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
90028afc:	6863      	ldr	r3, [r4, #4]
90028afe:	6828      	ldr	r0, [r5, #0]
90028b00:	1c5a      	adds	r2, r3, #1
90028b02:	3302      	adds	r3, #2
90028b04:	6062      	str	r2, [r4, #4]
90028b06:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
90028b0a:	f7ff ff99 	bl	90028a40 <__retarget_lock_release_recursive>
90028b0e:	2000      	movs	r0, #0
90028b10:	e7cb      	b.n	90028aaa <__register_exitproc+0x3a>
90028b12:	bf00      	nop
90028b14:	2000021c 	.word	0x2000021c
90028b18:	2001b674 	.word	0x2001b674
90028b1c:	2001b5e8 	.word	0x2001b5e8
90028b20:	90036320 	.word	0x90036320
90028b24:	900283e1 	.word	0x900283e1

90028b28 <_free_r>:
90028b28:	b538      	push	{r3, r4, r5, lr}
90028b2a:	4605      	mov	r5, r0
90028b2c:	2900      	cmp	r1, #0
90028b2e:	d041      	beq.n	90028bb4 <_free_r+0x8c>
90028b30:	f851 3c04 	ldr.w	r3, [r1, #-4]
90028b34:	1f0c      	subs	r4, r1, #4
90028b36:	2b00      	cmp	r3, #0
90028b38:	bfb8      	it	lt
90028b3a:	18e4      	addlt	r4, r4, r3
90028b3c:	f7ff fd02 	bl	90028544 <__malloc_lock>
90028b40:	4a1d      	ldr	r2, [pc, #116]	@ (90028bb8 <_free_r+0x90>)
90028b42:	6813      	ldr	r3, [r2, #0]
90028b44:	b933      	cbnz	r3, 90028b54 <_free_r+0x2c>
90028b46:	6063      	str	r3, [r4, #4]
90028b48:	6014      	str	r4, [r2, #0]
90028b4a:	4628      	mov	r0, r5
90028b4c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90028b50:	f7ff bcfe 	b.w	90028550 <__malloc_unlock>
90028b54:	42a3      	cmp	r3, r4
90028b56:	d908      	bls.n	90028b6a <_free_r+0x42>
90028b58:	6820      	ldr	r0, [r4, #0]
90028b5a:	1821      	adds	r1, r4, r0
90028b5c:	428b      	cmp	r3, r1
90028b5e:	bf01      	itttt	eq
90028b60:	6819      	ldreq	r1, [r3, #0]
90028b62:	685b      	ldreq	r3, [r3, #4]
90028b64:	1809      	addeq	r1, r1, r0
90028b66:	6021      	streq	r1, [r4, #0]
90028b68:	e7ed      	b.n	90028b46 <_free_r+0x1e>
90028b6a:	461a      	mov	r2, r3
90028b6c:	685b      	ldr	r3, [r3, #4]
90028b6e:	b10b      	cbz	r3, 90028b74 <_free_r+0x4c>
90028b70:	42a3      	cmp	r3, r4
90028b72:	d9fa      	bls.n	90028b6a <_free_r+0x42>
90028b74:	6811      	ldr	r1, [r2, #0]
90028b76:	1850      	adds	r0, r2, r1
90028b78:	42a0      	cmp	r0, r4
90028b7a:	d10b      	bne.n	90028b94 <_free_r+0x6c>
90028b7c:	6820      	ldr	r0, [r4, #0]
90028b7e:	4401      	add	r1, r0
90028b80:	1850      	adds	r0, r2, r1
90028b82:	4283      	cmp	r3, r0
90028b84:	6011      	str	r1, [r2, #0]
90028b86:	d1e0      	bne.n	90028b4a <_free_r+0x22>
90028b88:	6818      	ldr	r0, [r3, #0]
90028b8a:	685b      	ldr	r3, [r3, #4]
90028b8c:	6053      	str	r3, [r2, #4]
90028b8e:	4408      	add	r0, r1
90028b90:	6010      	str	r0, [r2, #0]
90028b92:	e7da      	b.n	90028b4a <_free_r+0x22>
90028b94:	d902      	bls.n	90028b9c <_free_r+0x74>
90028b96:	230c      	movs	r3, #12
90028b98:	602b      	str	r3, [r5, #0]
90028b9a:	e7d6      	b.n	90028b4a <_free_r+0x22>
90028b9c:	6820      	ldr	r0, [r4, #0]
90028b9e:	1821      	adds	r1, r4, r0
90028ba0:	428b      	cmp	r3, r1
90028ba2:	bf04      	itt	eq
90028ba4:	6819      	ldreq	r1, [r3, #0]
90028ba6:	685b      	ldreq	r3, [r3, #4]
90028ba8:	6063      	str	r3, [r4, #4]
90028baa:	bf04      	itt	eq
90028bac:	1809      	addeq	r1, r1, r0
90028bae:	6021      	streq	r1, [r4, #0]
90028bb0:	6054      	str	r4, [r2, #4]
90028bb2:	e7ca      	b.n	90028b4a <_free_r+0x22>
90028bb4:	bd38      	pop	{r3, r4, r5, pc}
90028bb6:	bf00      	nop
90028bb8:	2001b4a0 	.word	0x2001b4a0

90028bbc <__sfputc_r>:
90028bbc:	6893      	ldr	r3, [r2, #8]
90028bbe:	3b01      	subs	r3, #1
90028bc0:	2b00      	cmp	r3, #0
90028bc2:	b410      	push	{r4}
90028bc4:	6093      	str	r3, [r2, #8]
90028bc6:	da08      	bge.n	90028bda <__sfputc_r+0x1e>
90028bc8:	6994      	ldr	r4, [r2, #24]
90028bca:	42a3      	cmp	r3, r4
90028bcc:	db01      	blt.n	90028bd2 <__sfputc_r+0x16>
90028bce:	290a      	cmp	r1, #10
90028bd0:	d103      	bne.n	90028bda <__sfputc_r+0x1e>
90028bd2:	f85d 4b04 	ldr.w	r4, [sp], #4
90028bd6:	f000 bb6b 	b.w	900292b0 <__swbuf_r>
90028bda:	6813      	ldr	r3, [r2, #0]
90028bdc:	1c58      	adds	r0, r3, #1
90028bde:	6010      	str	r0, [r2, #0]
90028be0:	7019      	strb	r1, [r3, #0]
90028be2:	4608      	mov	r0, r1
90028be4:	f85d 4b04 	ldr.w	r4, [sp], #4
90028be8:	4770      	bx	lr

90028bea <__sfputs_r>:
90028bea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90028bec:	4606      	mov	r6, r0
90028bee:	460f      	mov	r7, r1
90028bf0:	4614      	mov	r4, r2
90028bf2:	18d5      	adds	r5, r2, r3
90028bf4:	42ac      	cmp	r4, r5
90028bf6:	d101      	bne.n	90028bfc <__sfputs_r+0x12>
90028bf8:	2000      	movs	r0, #0
90028bfa:	e007      	b.n	90028c0c <__sfputs_r+0x22>
90028bfc:	f814 1b01 	ldrb.w	r1, [r4], #1
90028c00:	463a      	mov	r2, r7
90028c02:	4630      	mov	r0, r6
90028c04:	f7ff ffda 	bl	90028bbc <__sfputc_r>
90028c08:	1c43      	adds	r3, r0, #1
90028c0a:	d1f3      	bne.n	90028bf4 <__sfputs_r+0xa>
90028c0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

90028c10 <_vfiprintf_r>:
90028c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028c14:	460d      	mov	r5, r1
90028c16:	b09d      	sub	sp, #116	@ 0x74
90028c18:	4614      	mov	r4, r2
90028c1a:	4698      	mov	r8, r3
90028c1c:	4606      	mov	r6, r0
90028c1e:	b118      	cbz	r0, 90028c28 <_vfiprintf_r+0x18>
90028c20:	6a03      	ldr	r3, [r0, #32]
90028c22:	b90b      	cbnz	r3, 90028c28 <_vfiprintf_r+0x18>
90028c24:	f7ff fd72 	bl	9002870c <__sinit>
90028c28:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
90028c2a:	07d9      	lsls	r1, r3, #31
90028c2c:	d405      	bmi.n	90028c3a <_vfiprintf_r+0x2a>
90028c2e:	89ab      	ldrh	r3, [r5, #12]
90028c30:	059a      	lsls	r2, r3, #22
90028c32:	d402      	bmi.n	90028c3a <_vfiprintf_r+0x2a>
90028c34:	6da8      	ldr	r0, [r5, #88]	@ 0x58
90028c36:	f7ff ff02 	bl	90028a3e <__retarget_lock_acquire_recursive>
90028c3a:	89ab      	ldrh	r3, [r5, #12]
90028c3c:	071b      	lsls	r3, r3, #28
90028c3e:	d501      	bpl.n	90028c44 <_vfiprintf_r+0x34>
90028c40:	692b      	ldr	r3, [r5, #16]
90028c42:	b99b      	cbnz	r3, 90028c6c <_vfiprintf_r+0x5c>
90028c44:	4629      	mov	r1, r5
90028c46:	4630      	mov	r0, r6
90028c48:	f000 fb70 	bl	9002932c <__swsetup_r>
90028c4c:	b170      	cbz	r0, 90028c6c <_vfiprintf_r+0x5c>
90028c4e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
90028c50:	07dc      	lsls	r4, r3, #31
90028c52:	d504      	bpl.n	90028c5e <_vfiprintf_r+0x4e>
90028c54:	f04f 30ff 	mov.w	r0, #4294967295
90028c58:	b01d      	add	sp, #116	@ 0x74
90028c5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028c5e:	89ab      	ldrh	r3, [r5, #12]
90028c60:	0598      	lsls	r0, r3, #22
90028c62:	d4f7      	bmi.n	90028c54 <_vfiprintf_r+0x44>
90028c64:	6da8      	ldr	r0, [r5, #88]	@ 0x58
90028c66:	f7ff feeb 	bl	90028a40 <__retarget_lock_release_recursive>
90028c6a:	e7f3      	b.n	90028c54 <_vfiprintf_r+0x44>
90028c6c:	2300      	movs	r3, #0
90028c6e:	9309      	str	r3, [sp, #36]	@ 0x24
90028c70:	2320      	movs	r3, #32
90028c72:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
90028c76:	f8cd 800c 	str.w	r8, [sp, #12]
90028c7a:	2330      	movs	r3, #48	@ 0x30
90028c7c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 90028e2c <_vfiprintf_r+0x21c>
90028c80:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
90028c84:	f04f 0901 	mov.w	r9, #1
90028c88:	4623      	mov	r3, r4
90028c8a:	469a      	mov	sl, r3
90028c8c:	f813 2b01 	ldrb.w	r2, [r3], #1
90028c90:	b10a      	cbz	r2, 90028c96 <_vfiprintf_r+0x86>
90028c92:	2a25      	cmp	r2, #37	@ 0x25
90028c94:	d1f9      	bne.n	90028c8a <_vfiprintf_r+0x7a>
90028c96:	ebba 0b04 	subs.w	fp, sl, r4
90028c9a:	d00b      	beq.n	90028cb4 <_vfiprintf_r+0xa4>
90028c9c:	465b      	mov	r3, fp
90028c9e:	4622      	mov	r2, r4
90028ca0:	4629      	mov	r1, r5
90028ca2:	4630      	mov	r0, r6
90028ca4:	f7ff ffa1 	bl	90028bea <__sfputs_r>
90028ca8:	3001      	adds	r0, #1
90028caa:	f000 80a7 	beq.w	90028dfc <_vfiprintf_r+0x1ec>
90028cae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90028cb0:	445a      	add	r2, fp
90028cb2:	9209      	str	r2, [sp, #36]	@ 0x24
90028cb4:	f89a 3000 	ldrb.w	r3, [sl]
90028cb8:	2b00      	cmp	r3, #0
90028cba:	f000 809f 	beq.w	90028dfc <_vfiprintf_r+0x1ec>
90028cbe:	2300      	movs	r3, #0
90028cc0:	f04f 32ff 	mov.w	r2, #4294967295
90028cc4:	e9cd 2305 	strd	r2, r3, [sp, #20]
90028cc8:	f10a 0a01 	add.w	sl, sl, #1
90028ccc:	9304      	str	r3, [sp, #16]
90028cce:	9307      	str	r3, [sp, #28]
90028cd0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
90028cd4:	931a      	str	r3, [sp, #104]	@ 0x68
90028cd6:	4654      	mov	r4, sl
90028cd8:	2205      	movs	r2, #5
90028cda:	f814 1b01 	ldrb.w	r1, [r4], #1
90028cde:	4853      	ldr	r0, [pc, #332]	@ (90028e2c <_vfiprintf_r+0x21c>)
90028ce0:	f7d7 faae 	bl	90000240 <memchr>
90028ce4:	9a04      	ldr	r2, [sp, #16]
90028ce6:	b9d8      	cbnz	r0, 90028d20 <_vfiprintf_r+0x110>
90028ce8:	06d1      	lsls	r1, r2, #27
90028cea:	bf44      	itt	mi
90028cec:	2320      	movmi	r3, #32
90028cee:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
90028cf2:	0713      	lsls	r3, r2, #28
90028cf4:	bf44      	itt	mi
90028cf6:	232b      	movmi	r3, #43	@ 0x2b
90028cf8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
90028cfc:	f89a 3000 	ldrb.w	r3, [sl]
90028d00:	2b2a      	cmp	r3, #42	@ 0x2a
90028d02:	d015      	beq.n	90028d30 <_vfiprintf_r+0x120>
90028d04:	9a07      	ldr	r2, [sp, #28]
90028d06:	4654      	mov	r4, sl
90028d08:	2000      	movs	r0, #0
90028d0a:	f04f 0c0a 	mov.w	ip, #10
90028d0e:	4621      	mov	r1, r4
90028d10:	f811 3b01 	ldrb.w	r3, [r1], #1
90028d14:	3b30      	subs	r3, #48	@ 0x30
90028d16:	2b09      	cmp	r3, #9
90028d18:	d94b      	bls.n	90028db2 <_vfiprintf_r+0x1a2>
90028d1a:	b1b0      	cbz	r0, 90028d4a <_vfiprintf_r+0x13a>
90028d1c:	9207      	str	r2, [sp, #28]
90028d1e:	e014      	b.n	90028d4a <_vfiprintf_r+0x13a>
90028d20:	eba0 0308 	sub.w	r3, r0, r8
90028d24:	fa09 f303 	lsl.w	r3, r9, r3
90028d28:	4313      	orrs	r3, r2
90028d2a:	9304      	str	r3, [sp, #16]
90028d2c:	46a2      	mov	sl, r4
90028d2e:	e7d2      	b.n	90028cd6 <_vfiprintf_r+0xc6>
90028d30:	9b03      	ldr	r3, [sp, #12]
90028d32:	1d19      	adds	r1, r3, #4
90028d34:	681b      	ldr	r3, [r3, #0]
90028d36:	9103      	str	r1, [sp, #12]
90028d38:	2b00      	cmp	r3, #0
90028d3a:	bfbb      	ittet	lt
90028d3c:	425b      	neglt	r3, r3
90028d3e:	f042 0202 	orrlt.w	r2, r2, #2
90028d42:	9307      	strge	r3, [sp, #28]
90028d44:	9307      	strlt	r3, [sp, #28]
90028d46:	bfb8      	it	lt
90028d48:	9204      	strlt	r2, [sp, #16]
90028d4a:	7823      	ldrb	r3, [r4, #0]
90028d4c:	2b2e      	cmp	r3, #46	@ 0x2e
90028d4e:	d10a      	bne.n	90028d66 <_vfiprintf_r+0x156>
90028d50:	7863      	ldrb	r3, [r4, #1]
90028d52:	2b2a      	cmp	r3, #42	@ 0x2a
90028d54:	d132      	bne.n	90028dbc <_vfiprintf_r+0x1ac>
90028d56:	9b03      	ldr	r3, [sp, #12]
90028d58:	1d1a      	adds	r2, r3, #4
90028d5a:	681b      	ldr	r3, [r3, #0]
90028d5c:	9203      	str	r2, [sp, #12]
90028d5e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
90028d62:	3402      	adds	r4, #2
90028d64:	9305      	str	r3, [sp, #20]
90028d66:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 90028e3c <_vfiprintf_r+0x22c>
90028d6a:	7821      	ldrb	r1, [r4, #0]
90028d6c:	2203      	movs	r2, #3
90028d6e:	4650      	mov	r0, sl
90028d70:	f7d7 fa66 	bl	90000240 <memchr>
90028d74:	b138      	cbz	r0, 90028d86 <_vfiprintf_r+0x176>
90028d76:	9b04      	ldr	r3, [sp, #16]
90028d78:	eba0 000a 	sub.w	r0, r0, sl
90028d7c:	2240      	movs	r2, #64	@ 0x40
90028d7e:	4082      	lsls	r2, r0
90028d80:	4313      	orrs	r3, r2
90028d82:	3401      	adds	r4, #1
90028d84:	9304      	str	r3, [sp, #16]
90028d86:	f814 1b01 	ldrb.w	r1, [r4], #1
90028d8a:	4829      	ldr	r0, [pc, #164]	@ (90028e30 <_vfiprintf_r+0x220>)
90028d8c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
90028d90:	2206      	movs	r2, #6
90028d92:	f7d7 fa55 	bl	90000240 <memchr>
90028d96:	2800      	cmp	r0, #0
90028d98:	d03f      	beq.n	90028e1a <_vfiprintf_r+0x20a>
90028d9a:	4b26      	ldr	r3, [pc, #152]	@ (90028e34 <_vfiprintf_r+0x224>)
90028d9c:	bb1b      	cbnz	r3, 90028de6 <_vfiprintf_r+0x1d6>
90028d9e:	9b03      	ldr	r3, [sp, #12]
90028da0:	3307      	adds	r3, #7
90028da2:	f023 0307 	bic.w	r3, r3, #7
90028da6:	3308      	adds	r3, #8
90028da8:	9303      	str	r3, [sp, #12]
90028daa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028dac:	443b      	add	r3, r7
90028dae:	9309      	str	r3, [sp, #36]	@ 0x24
90028db0:	e76a      	b.n	90028c88 <_vfiprintf_r+0x78>
90028db2:	fb0c 3202 	mla	r2, ip, r2, r3
90028db6:	460c      	mov	r4, r1
90028db8:	2001      	movs	r0, #1
90028dba:	e7a8      	b.n	90028d0e <_vfiprintf_r+0xfe>
90028dbc:	2300      	movs	r3, #0
90028dbe:	3401      	adds	r4, #1
90028dc0:	9305      	str	r3, [sp, #20]
90028dc2:	4619      	mov	r1, r3
90028dc4:	f04f 0c0a 	mov.w	ip, #10
90028dc8:	4620      	mov	r0, r4
90028dca:	f810 2b01 	ldrb.w	r2, [r0], #1
90028dce:	3a30      	subs	r2, #48	@ 0x30
90028dd0:	2a09      	cmp	r2, #9
90028dd2:	d903      	bls.n	90028ddc <_vfiprintf_r+0x1cc>
90028dd4:	2b00      	cmp	r3, #0
90028dd6:	d0c6      	beq.n	90028d66 <_vfiprintf_r+0x156>
90028dd8:	9105      	str	r1, [sp, #20]
90028dda:	e7c4      	b.n	90028d66 <_vfiprintf_r+0x156>
90028ddc:	fb0c 2101 	mla	r1, ip, r1, r2
90028de0:	4604      	mov	r4, r0
90028de2:	2301      	movs	r3, #1
90028de4:	e7f0      	b.n	90028dc8 <_vfiprintf_r+0x1b8>
90028de6:	ab03      	add	r3, sp, #12
90028de8:	9300      	str	r3, [sp, #0]
90028dea:	462a      	mov	r2, r5
90028dec:	4b12      	ldr	r3, [pc, #72]	@ (90028e38 <_vfiprintf_r+0x228>)
90028dee:	a904      	add	r1, sp, #16
90028df0:	4630      	mov	r0, r6
90028df2:	f3af 8000 	nop.w
90028df6:	4607      	mov	r7, r0
90028df8:	1c78      	adds	r0, r7, #1
90028dfa:	d1d6      	bne.n	90028daa <_vfiprintf_r+0x19a>
90028dfc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
90028dfe:	07d9      	lsls	r1, r3, #31
90028e00:	d405      	bmi.n	90028e0e <_vfiprintf_r+0x1fe>
90028e02:	89ab      	ldrh	r3, [r5, #12]
90028e04:	059a      	lsls	r2, r3, #22
90028e06:	d402      	bmi.n	90028e0e <_vfiprintf_r+0x1fe>
90028e08:	6da8      	ldr	r0, [r5, #88]	@ 0x58
90028e0a:	f7ff fe19 	bl	90028a40 <__retarget_lock_release_recursive>
90028e0e:	89ab      	ldrh	r3, [r5, #12]
90028e10:	065b      	lsls	r3, r3, #25
90028e12:	f53f af1f 	bmi.w	90028c54 <_vfiprintf_r+0x44>
90028e16:	9809      	ldr	r0, [sp, #36]	@ 0x24
90028e18:	e71e      	b.n	90028c58 <_vfiprintf_r+0x48>
90028e1a:	ab03      	add	r3, sp, #12
90028e1c:	9300      	str	r3, [sp, #0]
90028e1e:	462a      	mov	r2, r5
90028e20:	4b05      	ldr	r3, [pc, #20]	@ (90028e38 <_vfiprintf_r+0x228>)
90028e22:	a904      	add	r1, sp, #16
90028e24:	4630      	mov	r0, r6
90028e26:	f000 f879 	bl	90028f1c <_printf_i>
90028e2a:	e7e4      	b.n	90028df6 <_vfiprintf_r+0x1e6>
90028e2c:	9002a5f5 	.word	0x9002a5f5
90028e30:	9002a5ff 	.word	0x9002a5ff
90028e34:	00000000 	.word	0x00000000
90028e38:	90028beb 	.word	0x90028beb
90028e3c:	9002a5fb 	.word	0x9002a5fb

90028e40 <_printf_common>:
90028e40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90028e44:	4616      	mov	r6, r2
90028e46:	4698      	mov	r8, r3
90028e48:	688a      	ldr	r2, [r1, #8]
90028e4a:	690b      	ldr	r3, [r1, #16]
90028e4c:	f8dd 9020 	ldr.w	r9, [sp, #32]
90028e50:	4293      	cmp	r3, r2
90028e52:	bfb8      	it	lt
90028e54:	4613      	movlt	r3, r2
90028e56:	6033      	str	r3, [r6, #0]
90028e58:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
90028e5c:	4607      	mov	r7, r0
90028e5e:	460c      	mov	r4, r1
90028e60:	b10a      	cbz	r2, 90028e66 <_printf_common+0x26>
90028e62:	3301      	adds	r3, #1
90028e64:	6033      	str	r3, [r6, #0]
90028e66:	6823      	ldr	r3, [r4, #0]
90028e68:	0699      	lsls	r1, r3, #26
90028e6a:	bf42      	ittt	mi
90028e6c:	6833      	ldrmi	r3, [r6, #0]
90028e6e:	3302      	addmi	r3, #2
90028e70:	6033      	strmi	r3, [r6, #0]
90028e72:	6825      	ldr	r5, [r4, #0]
90028e74:	f015 0506 	ands.w	r5, r5, #6
90028e78:	d106      	bne.n	90028e88 <_printf_common+0x48>
90028e7a:	f104 0a19 	add.w	sl, r4, #25
90028e7e:	68e3      	ldr	r3, [r4, #12]
90028e80:	6832      	ldr	r2, [r6, #0]
90028e82:	1a9b      	subs	r3, r3, r2
90028e84:	42ab      	cmp	r3, r5
90028e86:	dc26      	bgt.n	90028ed6 <_printf_common+0x96>
90028e88:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
90028e8c:	6822      	ldr	r2, [r4, #0]
90028e8e:	3b00      	subs	r3, #0
90028e90:	bf18      	it	ne
90028e92:	2301      	movne	r3, #1
90028e94:	0692      	lsls	r2, r2, #26
90028e96:	d42b      	bmi.n	90028ef0 <_printf_common+0xb0>
90028e98:	f104 0243 	add.w	r2, r4, #67	@ 0x43
90028e9c:	4641      	mov	r1, r8
90028e9e:	4638      	mov	r0, r7
90028ea0:	47c8      	blx	r9
90028ea2:	3001      	adds	r0, #1
90028ea4:	d01e      	beq.n	90028ee4 <_printf_common+0xa4>
90028ea6:	6823      	ldr	r3, [r4, #0]
90028ea8:	6922      	ldr	r2, [r4, #16]
90028eaa:	f003 0306 	and.w	r3, r3, #6
90028eae:	2b04      	cmp	r3, #4
90028eb0:	bf02      	ittt	eq
90028eb2:	68e5      	ldreq	r5, [r4, #12]
90028eb4:	6833      	ldreq	r3, [r6, #0]
90028eb6:	1aed      	subeq	r5, r5, r3
90028eb8:	68a3      	ldr	r3, [r4, #8]
90028eba:	bf0c      	ite	eq
90028ebc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
90028ec0:	2500      	movne	r5, #0
90028ec2:	4293      	cmp	r3, r2
90028ec4:	bfc4      	itt	gt
90028ec6:	1a9b      	subgt	r3, r3, r2
90028ec8:	18ed      	addgt	r5, r5, r3
90028eca:	2600      	movs	r6, #0
90028ecc:	341a      	adds	r4, #26
90028ece:	42b5      	cmp	r5, r6
90028ed0:	d11a      	bne.n	90028f08 <_printf_common+0xc8>
90028ed2:	2000      	movs	r0, #0
90028ed4:	e008      	b.n	90028ee8 <_printf_common+0xa8>
90028ed6:	2301      	movs	r3, #1
90028ed8:	4652      	mov	r2, sl
90028eda:	4641      	mov	r1, r8
90028edc:	4638      	mov	r0, r7
90028ede:	47c8      	blx	r9
90028ee0:	3001      	adds	r0, #1
90028ee2:	d103      	bne.n	90028eec <_printf_common+0xac>
90028ee4:	f04f 30ff 	mov.w	r0, #4294967295
90028ee8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90028eec:	3501      	adds	r5, #1
90028eee:	e7c6      	b.n	90028e7e <_printf_common+0x3e>
90028ef0:	18e1      	adds	r1, r4, r3
90028ef2:	1c5a      	adds	r2, r3, #1
90028ef4:	2030      	movs	r0, #48	@ 0x30
90028ef6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
90028efa:	4422      	add	r2, r4
90028efc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
90028f00:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
90028f04:	3302      	adds	r3, #2
90028f06:	e7c7      	b.n	90028e98 <_printf_common+0x58>
90028f08:	2301      	movs	r3, #1
90028f0a:	4622      	mov	r2, r4
90028f0c:	4641      	mov	r1, r8
90028f0e:	4638      	mov	r0, r7
90028f10:	47c8      	blx	r9
90028f12:	3001      	adds	r0, #1
90028f14:	d0e6      	beq.n	90028ee4 <_printf_common+0xa4>
90028f16:	3601      	adds	r6, #1
90028f18:	e7d9      	b.n	90028ece <_printf_common+0x8e>
	...

90028f1c <_printf_i>:
90028f1c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90028f20:	7e0f      	ldrb	r7, [r1, #24]
90028f22:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90028f24:	2f78      	cmp	r7, #120	@ 0x78
90028f26:	4691      	mov	r9, r2
90028f28:	4680      	mov	r8, r0
90028f2a:	460c      	mov	r4, r1
90028f2c:	469a      	mov	sl, r3
90028f2e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
90028f32:	d807      	bhi.n	90028f44 <_printf_i+0x28>
90028f34:	2f62      	cmp	r7, #98	@ 0x62
90028f36:	d80a      	bhi.n	90028f4e <_printf_i+0x32>
90028f38:	2f00      	cmp	r7, #0
90028f3a:	f000 80d1 	beq.w	900290e0 <_printf_i+0x1c4>
90028f3e:	2f58      	cmp	r7, #88	@ 0x58
90028f40:	f000 80b8 	beq.w	900290b4 <_printf_i+0x198>
90028f44:	f104 0642 	add.w	r6, r4, #66	@ 0x42
90028f48:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
90028f4c:	e03a      	b.n	90028fc4 <_printf_i+0xa8>
90028f4e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
90028f52:	2b15      	cmp	r3, #21
90028f54:	d8f6      	bhi.n	90028f44 <_printf_i+0x28>
90028f56:	a101      	add	r1, pc, #4	@ (adr r1, 90028f5c <_printf_i+0x40>)
90028f58:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
90028f5c:	90028fb5 	.word	0x90028fb5
90028f60:	90028fc9 	.word	0x90028fc9
90028f64:	90028f45 	.word	0x90028f45
90028f68:	90028f45 	.word	0x90028f45
90028f6c:	90028f45 	.word	0x90028f45
90028f70:	90028f45 	.word	0x90028f45
90028f74:	90028fc9 	.word	0x90028fc9
90028f78:	90028f45 	.word	0x90028f45
90028f7c:	90028f45 	.word	0x90028f45
90028f80:	90028f45 	.word	0x90028f45
90028f84:	90028f45 	.word	0x90028f45
90028f88:	900290c7 	.word	0x900290c7
90028f8c:	90028ff3 	.word	0x90028ff3
90028f90:	90029081 	.word	0x90029081
90028f94:	90028f45 	.word	0x90028f45
90028f98:	90028f45 	.word	0x90028f45
90028f9c:	900290e9 	.word	0x900290e9
90028fa0:	90028f45 	.word	0x90028f45
90028fa4:	90028ff3 	.word	0x90028ff3
90028fa8:	90028f45 	.word	0x90028f45
90028fac:	90028f45 	.word	0x90028f45
90028fb0:	90029089 	.word	0x90029089
90028fb4:	6833      	ldr	r3, [r6, #0]
90028fb6:	1d1a      	adds	r2, r3, #4
90028fb8:	681b      	ldr	r3, [r3, #0]
90028fba:	6032      	str	r2, [r6, #0]
90028fbc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
90028fc0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
90028fc4:	2301      	movs	r3, #1
90028fc6:	e09c      	b.n	90029102 <_printf_i+0x1e6>
90028fc8:	6833      	ldr	r3, [r6, #0]
90028fca:	6820      	ldr	r0, [r4, #0]
90028fcc:	1d19      	adds	r1, r3, #4
90028fce:	6031      	str	r1, [r6, #0]
90028fd0:	0606      	lsls	r6, r0, #24
90028fd2:	d501      	bpl.n	90028fd8 <_printf_i+0xbc>
90028fd4:	681d      	ldr	r5, [r3, #0]
90028fd6:	e003      	b.n	90028fe0 <_printf_i+0xc4>
90028fd8:	0645      	lsls	r5, r0, #25
90028fda:	d5fb      	bpl.n	90028fd4 <_printf_i+0xb8>
90028fdc:	f9b3 5000 	ldrsh.w	r5, [r3]
90028fe0:	2d00      	cmp	r5, #0
90028fe2:	da03      	bge.n	90028fec <_printf_i+0xd0>
90028fe4:	232d      	movs	r3, #45	@ 0x2d
90028fe6:	426d      	negs	r5, r5
90028fe8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
90028fec:	4858      	ldr	r0, [pc, #352]	@ (90029150 <_printf_i+0x234>)
90028fee:	230a      	movs	r3, #10
90028ff0:	e011      	b.n	90029016 <_printf_i+0xfa>
90028ff2:	6821      	ldr	r1, [r4, #0]
90028ff4:	6833      	ldr	r3, [r6, #0]
90028ff6:	0608      	lsls	r0, r1, #24
90028ff8:	f853 5b04 	ldr.w	r5, [r3], #4
90028ffc:	d402      	bmi.n	90029004 <_printf_i+0xe8>
90028ffe:	0649      	lsls	r1, r1, #25
90029000:	bf48      	it	mi
90029002:	b2ad      	uxthmi	r5, r5
90029004:	2f6f      	cmp	r7, #111	@ 0x6f
90029006:	4852      	ldr	r0, [pc, #328]	@ (90029150 <_printf_i+0x234>)
90029008:	6033      	str	r3, [r6, #0]
9002900a:	bf14      	ite	ne
9002900c:	230a      	movne	r3, #10
9002900e:	2308      	moveq	r3, #8
90029010:	2100      	movs	r1, #0
90029012:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
90029016:	6866      	ldr	r6, [r4, #4]
90029018:	60a6      	str	r6, [r4, #8]
9002901a:	2e00      	cmp	r6, #0
9002901c:	db05      	blt.n	9002902a <_printf_i+0x10e>
9002901e:	6821      	ldr	r1, [r4, #0]
90029020:	432e      	orrs	r6, r5
90029022:	f021 0104 	bic.w	r1, r1, #4
90029026:	6021      	str	r1, [r4, #0]
90029028:	d04b      	beq.n	900290c2 <_printf_i+0x1a6>
9002902a:	4616      	mov	r6, r2
9002902c:	fbb5 f1f3 	udiv	r1, r5, r3
90029030:	fb03 5711 	mls	r7, r3, r1, r5
90029034:	5dc7      	ldrb	r7, [r0, r7]
90029036:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002903a:	462f      	mov	r7, r5
9002903c:	42bb      	cmp	r3, r7
9002903e:	460d      	mov	r5, r1
90029040:	d9f4      	bls.n	9002902c <_printf_i+0x110>
90029042:	2b08      	cmp	r3, #8
90029044:	d10b      	bne.n	9002905e <_printf_i+0x142>
90029046:	6823      	ldr	r3, [r4, #0]
90029048:	07df      	lsls	r7, r3, #31
9002904a:	d508      	bpl.n	9002905e <_printf_i+0x142>
9002904c:	6923      	ldr	r3, [r4, #16]
9002904e:	6861      	ldr	r1, [r4, #4]
90029050:	4299      	cmp	r1, r3
90029052:	bfde      	ittt	le
90029054:	2330      	movle	r3, #48	@ 0x30
90029056:	f806 3c01 	strble.w	r3, [r6, #-1]
9002905a:	f106 36ff 	addle.w	r6, r6, #4294967295
9002905e:	1b92      	subs	r2, r2, r6
90029060:	6122      	str	r2, [r4, #16]
90029062:	f8cd a000 	str.w	sl, [sp]
90029066:	464b      	mov	r3, r9
90029068:	aa03      	add	r2, sp, #12
9002906a:	4621      	mov	r1, r4
9002906c:	4640      	mov	r0, r8
9002906e:	f7ff fee7 	bl	90028e40 <_printf_common>
90029072:	3001      	adds	r0, #1
90029074:	d14a      	bne.n	9002910c <_printf_i+0x1f0>
90029076:	f04f 30ff 	mov.w	r0, #4294967295
9002907a:	b004      	add	sp, #16
9002907c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90029080:	6823      	ldr	r3, [r4, #0]
90029082:	f043 0320 	orr.w	r3, r3, #32
90029086:	6023      	str	r3, [r4, #0]
90029088:	4832      	ldr	r0, [pc, #200]	@ (90029154 <_printf_i+0x238>)
9002908a:	2778      	movs	r7, #120	@ 0x78
9002908c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
90029090:	6823      	ldr	r3, [r4, #0]
90029092:	6831      	ldr	r1, [r6, #0]
90029094:	061f      	lsls	r7, r3, #24
90029096:	f851 5b04 	ldr.w	r5, [r1], #4
9002909a:	d402      	bmi.n	900290a2 <_printf_i+0x186>
9002909c:	065f      	lsls	r7, r3, #25
9002909e:	bf48      	it	mi
900290a0:	b2ad      	uxthmi	r5, r5
900290a2:	6031      	str	r1, [r6, #0]
900290a4:	07d9      	lsls	r1, r3, #31
900290a6:	bf44      	itt	mi
900290a8:	f043 0320 	orrmi.w	r3, r3, #32
900290ac:	6023      	strmi	r3, [r4, #0]
900290ae:	b11d      	cbz	r5, 900290b8 <_printf_i+0x19c>
900290b0:	2310      	movs	r3, #16
900290b2:	e7ad      	b.n	90029010 <_printf_i+0xf4>
900290b4:	4826      	ldr	r0, [pc, #152]	@ (90029150 <_printf_i+0x234>)
900290b6:	e7e9      	b.n	9002908c <_printf_i+0x170>
900290b8:	6823      	ldr	r3, [r4, #0]
900290ba:	f023 0320 	bic.w	r3, r3, #32
900290be:	6023      	str	r3, [r4, #0]
900290c0:	e7f6      	b.n	900290b0 <_printf_i+0x194>
900290c2:	4616      	mov	r6, r2
900290c4:	e7bd      	b.n	90029042 <_printf_i+0x126>
900290c6:	6833      	ldr	r3, [r6, #0]
900290c8:	6825      	ldr	r5, [r4, #0]
900290ca:	6961      	ldr	r1, [r4, #20]
900290cc:	1d18      	adds	r0, r3, #4
900290ce:	6030      	str	r0, [r6, #0]
900290d0:	062e      	lsls	r6, r5, #24
900290d2:	681b      	ldr	r3, [r3, #0]
900290d4:	d501      	bpl.n	900290da <_printf_i+0x1be>
900290d6:	6019      	str	r1, [r3, #0]
900290d8:	e002      	b.n	900290e0 <_printf_i+0x1c4>
900290da:	0668      	lsls	r0, r5, #25
900290dc:	d5fb      	bpl.n	900290d6 <_printf_i+0x1ba>
900290de:	8019      	strh	r1, [r3, #0]
900290e0:	2300      	movs	r3, #0
900290e2:	6123      	str	r3, [r4, #16]
900290e4:	4616      	mov	r6, r2
900290e6:	e7bc      	b.n	90029062 <_printf_i+0x146>
900290e8:	6833      	ldr	r3, [r6, #0]
900290ea:	1d1a      	adds	r2, r3, #4
900290ec:	6032      	str	r2, [r6, #0]
900290ee:	681e      	ldr	r6, [r3, #0]
900290f0:	6862      	ldr	r2, [r4, #4]
900290f2:	2100      	movs	r1, #0
900290f4:	4630      	mov	r0, r6
900290f6:	f7d7 f8a3 	bl	90000240 <memchr>
900290fa:	b108      	cbz	r0, 90029100 <_printf_i+0x1e4>
900290fc:	1b80      	subs	r0, r0, r6
900290fe:	6060      	str	r0, [r4, #4]
90029100:	6863      	ldr	r3, [r4, #4]
90029102:	6123      	str	r3, [r4, #16]
90029104:	2300      	movs	r3, #0
90029106:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002910a:	e7aa      	b.n	90029062 <_printf_i+0x146>
9002910c:	6923      	ldr	r3, [r4, #16]
9002910e:	4632      	mov	r2, r6
90029110:	4649      	mov	r1, r9
90029112:	4640      	mov	r0, r8
90029114:	47d0      	blx	sl
90029116:	3001      	adds	r0, #1
90029118:	d0ad      	beq.n	90029076 <_printf_i+0x15a>
9002911a:	6823      	ldr	r3, [r4, #0]
9002911c:	079b      	lsls	r3, r3, #30
9002911e:	d413      	bmi.n	90029148 <_printf_i+0x22c>
90029120:	68e0      	ldr	r0, [r4, #12]
90029122:	9b03      	ldr	r3, [sp, #12]
90029124:	4298      	cmp	r0, r3
90029126:	bfb8      	it	lt
90029128:	4618      	movlt	r0, r3
9002912a:	e7a6      	b.n	9002907a <_printf_i+0x15e>
9002912c:	2301      	movs	r3, #1
9002912e:	4632      	mov	r2, r6
90029130:	4649      	mov	r1, r9
90029132:	4640      	mov	r0, r8
90029134:	47d0      	blx	sl
90029136:	3001      	adds	r0, #1
90029138:	d09d      	beq.n	90029076 <_printf_i+0x15a>
9002913a:	3501      	adds	r5, #1
9002913c:	68e3      	ldr	r3, [r4, #12]
9002913e:	9903      	ldr	r1, [sp, #12]
90029140:	1a5b      	subs	r3, r3, r1
90029142:	42ab      	cmp	r3, r5
90029144:	dcf2      	bgt.n	9002912c <_printf_i+0x210>
90029146:	e7eb      	b.n	90029120 <_printf_i+0x204>
90029148:	2500      	movs	r5, #0
9002914a:	f104 0619 	add.w	r6, r4, #25
9002914e:	e7f5      	b.n	9002913c <_printf_i+0x220>
90029150:	9002a606 	.word	0x9002a606
90029154:	9002a617 	.word	0x9002a617

90029158 <__sflush_r>:
90029158:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
9002915c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90029160:	0716      	lsls	r6, r2, #28
90029162:	4605      	mov	r5, r0
90029164:	460c      	mov	r4, r1
90029166:	d454      	bmi.n	90029212 <__sflush_r+0xba>
90029168:	684b      	ldr	r3, [r1, #4]
9002916a:	2b00      	cmp	r3, #0
9002916c:	dc02      	bgt.n	90029174 <__sflush_r+0x1c>
9002916e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
90029170:	2b00      	cmp	r3, #0
90029172:	dd48      	ble.n	90029206 <__sflush_r+0xae>
90029174:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
90029176:	2e00      	cmp	r6, #0
90029178:	d045      	beq.n	90029206 <__sflush_r+0xae>
9002917a:	2300      	movs	r3, #0
9002917c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
90029180:	682f      	ldr	r7, [r5, #0]
90029182:	6a21      	ldr	r1, [r4, #32]
90029184:	602b      	str	r3, [r5, #0]
90029186:	d030      	beq.n	900291ea <__sflush_r+0x92>
90029188:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9002918a:	89a3      	ldrh	r3, [r4, #12]
9002918c:	0759      	lsls	r1, r3, #29
9002918e:	d505      	bpl.n	9002919c <__sflush_r+0x44>
90029190:	6863      	ldr	r3, [r4, #4]
90029192:	1ad2      	subs	r2, r2, r3
90029194:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90029196:	b10b      	cbz	r3, 9002919c <__sflush_r+0x44>
90029198:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9002919a:	1ad2      	subs	r2, r2, r3
9002919c:	2300      	movs	r3, #0
9002919e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
900291a0:	6a21      	ldr	r1, [r4, #32]
900291a2:	4628      	mov	r0, r5
900291a4:	47b0      	blx	r6
900291a6:	1c43      	adds	r3, r0, #1
900291a8:	89a3      	ldrh	r3, [r4, #12]
900291aa:	d106      	bne.n	900291ba <__sflush_r+0x62>
900291ac:	6829      	ldr	r1, [r5, #0]
900291ae:	291d      	cmp	r1, #29
900291b0:	d82b      	bhi.n	9002920a <__sflush_r+0xb2>
900291b2:	4a2a      	ldr	r2, [pc, #168]	@ (9002925c <__sflush_r+0x104>)
900291b4:	40ca      	lsrs	r2, r1
900291b6:	07d6      	lsls	r6, r2, #31
900291b8:	d527      	bpl.n	9002920a <__sflush_r+0xb2>
900291ba:	2200      	movs	r2, #0
900291bc:	6062      	str	r2, [r4, #4]
900291be:	04d9      	lsls	r1, r3, #19
900291c0:	6922      	ldr	r2, [r4, #16]
900291c2:	6022      	str	r2, [r4, #0]
900291c4:	d504      	bpl.n	900291d0 <__sflush_r+0x78>
900291c6:	1c42      	adds	r2, r0, #1
900291c8:	d101      	bne.n	900291ce <__sflush_r+0x76>
900291ca:	682b      	ldr	r3, [r5, #0]
900291cc:	b903      	cbnz	r3, 900291d0 <__sflush_r+0x78>
900291ce:	6560      	str	r0, [r4, #84]	@ 0x54
900291d0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900291d2:	602f      	str	r7, [r5, #0]
900291d4:	b1b9      	cbz	r1, 90029206 <__sflush_r+0xae>
900291d6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
900291da:	4299      	cmp	r1, r3
900291dc:	d002      	beq.n	900291e4 <__sflush_r+0x8c>
900291de:	4628      	mov	r0, r5
900291e0:	f7ff fca2 	bl	90028b28 <_free_r>
900291e4:	2300      	movs	r3, #0
900291e6:	6363      	str	r3, [r4, #52]	@ 0x34
900291e8:	e00d      	b.n	90029206 <__sflush_r+0xae>
900291ea:	2301      	movs	r3, #1
900291ec:	4628      	mov	r0, r5
900291ee:	47b0      	blx	r6
900291f0:	4602      	mov	r2, r0
900291f2:	1c50      	adds	r0, r2, #1
900291f4:	d1c9      	bne.n	9002918a <__sflush_r+0x32>
900291f6:	682b      	ldr	r3, [r5, #0]
900291f8:	2b00      	cmp	r3, #0
900291fa:	d0c6      	beq.n	9002918a <__sflush_r+0x32>
900291fc:	2b1d      	cmp	r3, #29
900291fe:	d001      	beq.n	90029204 <__sflush_r+0xac>
90029200:	2b16      	cmp	r3, #22
90029202:	d11e      	bne.n	90029242 <__sflush_r+0xea>
90029204:	602f      	str	r7, [r5, #0]
90029206:	2000      	movs	r0, #0
90029208:	e022      	b.n	90029250 <__sflush_r+0xf8>
9002920a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002920e:	b21b      	sxth	r3, r3
90029210:	e01b      	b.n	9002924a <__sflush_r+0xf2>
90029212:	690f      	ldr	r7, [r1, #16]
90029214:	2f00      	cmp	r7, #0
90029216:	d0f6      	beq.n	90029206 <__sflush_r+0xae>
90029218:	0793      	lsls	r3, r2, #30
9002921a:	680e      	ldr	r6, [r1, #0]
9002921c:	bf08      	it	eq
9002921e:	694b      	ldreq	r3, [r1, #20]
90029220:	600f      	str	r7, [r1, #0]
90029222:	bf18      	it	ne
90029224:	2300      	movne	r3, #0
90029226:	eba6 0807 	sub.w	r8, r6, r7
9002922a:	608b      	str	r3, [r1, #8]
9002922c:	f1b8 0f00 	cmp.w	r8, #0
90029230:	dde9      	ble.n	90029206 <__sflush_r+0xae>
90029232:	6a21      	ldr	r1, [r4, #32]
90029234:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
90029236:	4643      	mov	r3, r8
90029238:	463a      	mov	r2, r7
9002923a:	4628      	mov	r0, r5
9002923c:	47b0      	blx	r6
9002923e:	2800      	cmp	r0, #0
90029240:	dc08      	bgt.n	90029254 <__sflush_r+0xfc>
90029242:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90029246:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002924a:	81a3      	strh	r3, [r4, #12]
9002924c:	f04f 30ff 	mov.w	r0, #4294967295
90029250:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90029254:	4407      	add	r7, r0
90029256:	eba8 0800 	sub.w	r8, r8, r0
9002925a:	e7e7      	b.n	9002922c <__sflush_r+0xd4>
9002925c:	20400001 	.word	0x20400001

90029260 <_fflush_r>:
90029260:	b538      	push	{r3, r4, r5, lr}
90029262:	690b      	ldr	r3, [r1, #16]
90029264:	4605      	mov	r5, r0
90029266:	460c      	mov	r4, r1
90029268:	b913      	cbnz	r3, 90029270 <_fflush_r+0x10>
9002926a:	2500      	movs	r5, #0
9002926c:	4628      	mov	r0, r5
9002926e:	bd38      	pop	{r3, r4, r5, pc}
90029270:	b118      	cbz	r0, 9002927a <_fflush_r+0x1a>
90029272:	6a03      	ldr	r3, [r0, #32]
90029274:	b90b      	cbnz	r3, 9002927a <_fflush_r+0x1a>
90029276:	f7ff fa49 	bl	9002870c <__sinit>
9002927a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002927e:	2b00      	cmp	r3, #0
90029280:	d0f3      	beq.n	9002926a <_fflush_r+0xa>
90029282:	6e62      	ldr	r2, [r4, #100]	@ 0x64
90029284:	07d0      	lsls	r0, r2, #31
90029286:	d404      	bmi.n	90029292 <_fflush_r+0x32>
90029288:	0599      	lsls	r1, r3, #22
9002928a:	d402      	bmi.n	90029292 <_fflush_r+0x32>
9002928c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002928e:	f7ff fbd6 	bl	90028a3e <__retarget_lock_acquire_recursive>
90029292:	4628      	mov	r0, r5
90029294:	4621      	mov	r1, r4
90029296:	f7ff ff5f 	bl	90029158 <__sflush_r>
9002929a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9002929c:	07da      	lsls	r2, r3, #31
9002929e:	4605      	mov	r5, r0
900292a0:	d4e4      	bmi.n	9002926c <_fflush_r+0xc>
900292a2:	89a3      	ldrh	r3, [r4, #12]
900292a4:	059b      	lsls	r3, r3, #22
900292a6:	d4e1      	bmi.n	9002926c <_fflush_r+0xc>
900292a8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
900292aa:	f7ff fbc9 	bl	90028a40 <__retarget_lock_release_recursive>
900292ae:	e7dd      	b.n	9002926c <_fflush_r+0xc>

900292b0 <__swbuf_r>:
900292b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900292b2:	460e      	mov	r6, r1
900292b4:	4614      	mov	r4, r2
900292b6:	4605      	mov	r5, r0
900292b8:	b118      	cbz	r0, 900292c2 <__swbuf_r+0x12>
900292ba:	6a03      	ldr	r3, [r0, #32]
900292bc:	b90b      	cbnz	r3, 900292c2 <__swbuf_r+0x12>
900292be:	f7ff fa25 	bl	9002870c <__sinit>
900292c2:	69a3      	ldr	r3, [r4, #24]
900292c4:	60a3      	str	r3, [r4, #8]
900292c6:	89a3      	ldrh	r3, [r4, #12]
900292c8:	071a      	lsls	r2, r3, #28
900292ca:	d501      	bpl.n	900292d0 <__swbuf_r+0x20>
900292cc:	6923      	ldr	r3, [r4, #16]
900292ce:	b943      	cbnz	r3, 900292e2 <__swbuf_r+0x32>
900292d0:	4621      	mov	r1, r4
900292d2:	4628      	mov	r0, r5
900292d4:	f000 f82a 	bl	9002932c <__swsetup_r>
900292d8:	b118      	cbz	r0, 900292e2 <__swbuf_r+0x32>
900292da:	f04f 37ff 	mov.w	r7, #4294967295
900292de:	4638      	mov	r0, r7
900292e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900292e2:	6823      	ldr	r3, [r4, #0]
900292e4:	6922      	ldr	r2, [r4, #16]
900292e6:	1a98      	subs	r0, r3, r2
900292e8:	6963      	ldr	r3, [r4, #20]
900292ea:	b2f6      	uxtb	r6, r6
900292ec:	4283      	cmp	r3, r0
900292ee:	4637      	mov	r7, r6
900292f0:	dc05      	bgt.n	900292fe <__swbuf_r+0x4e>
900292f2:	4621      	mov	r1, r4
900292f4:	4628      	mov	r0, r5
900292f6:	f7ff ffb3 	bl	90029260 <_fflush_r>
900292fa:	2800      	cmp	r0, #0
900292fc:	d1ed      	bne.n	900292da <__swbuf_r+0x2a>
900292fe:	68a3      	ldr	r3, [r4, #8]
90029300:	3b01      	subs	r3, #1
90029302:	60a3      	str	r3, [r4, #8]
90029304:	6823      	ldr	r3, [r4, #0]
90029306:	1c5a      	adds	r2, r3, #1
90029308:	6022      	str	r2, [r4, #0]
9002930a:	701e      	strb	r6, [r3, #0]
9002930c:	6962      	ldr	r2, [r4, #20]
9002930e:	1c43      	adds	r3, r0, #1
90029310:	429a      	cmp	r2, r3
90029312:	d004      	beq.n	9002931e <__swbuf_r+0x6e>
90029314:	89a3      	ldrh	r3, [r4, #12]
90029316:	07db      	lsls	r3, r3, #31
90029318:	d5e1      	bpl.n	900292de <__swbuf_r+0x2e>
9002931a:	2e0a      	cmp	r6, #10
9002931c:	d1df      	bne.n	900292de <__swbuf_r+0x2e>
9002931e:	4621      	mov	r1, r4
90029320:	4628      	mov	r0, r5
90029322:	f7ff ff9d 	bl	90029260 <_fflush_r>
90029326:	2800      	cmp	r0, #0
90029328:	d0d9      	beq.n	900292de <__swbuf_r+0x2e>
9002932a:	e7d6      	b.n	900292da <__swbuf_r+0x2a>

9002932c <__swsetup_r>:
9002932c:	b538      	push	{r3, r4, r5, lr}
9002932e:	4b29      	ldr	r3, [pc, #164]	@ (900293d4 <__swsetup_r+0xa8>)
90029330:	4605      	mov	r5, r0
90029332:	6818      	ldr	r0, [r3, #0]
90029334:	460c      	mov	r4, r1
90029336:	b118      	cbz	r0, 90029340 <__swsetup_r+0x14>
90029338:	6a03      	ldr	r3, [r0, #32]
9002933a:	b90b      	cbnz	r3, 90029340 <__swsetup_r+0x14>
9002933c:	f7ff f9e6 	bl	9002870c <__sinit>
90029340:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90029344:	0719      	lsls	r1, r3, #28
90029346:	d422      	bmi.n	9002938e <__swsetup_r+0x62>
90029348:	06da      	lsls	r2, r3, #27
9002934a:	d407      	bmi.n	9002935c <__swsetup_r+0x30>
9002934c:	2209      	movs	r2, #9
9002934e:	602a      	str	r2, [r5, #0]
90029350:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90029354:	81a3      	strh	r3, [r4, #12]
90029356:	f04f 30ff 	mov.w	r0, #4294967295
9002935a:	e033      	b.n	900293c4 <__swsetup_r+0x98>
9002935c:	0758      	lsls	r0, r3, #29
9002935e:	d512      	bpl.n	90029386 <__swsetup_r+0x5a>
90029360:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90029362:	b141      	cbz	r1, 90029376 <__swsetup_r+0x4a>
90029364:	f104 0344 	add.w	r3, r4, #68	@ 0x44
90029368:	4299      	cmp	r1, r3
9002936a:	d002      	beq.n	90029372 <__swsetup_r+0x46>
9002936c:	4628      	mov	r0, r5
9002936e:	f7ff fbdb 	bl	90028b28 <_free_r>
90029372:	2300      	movs	r3, #0
90029374:	6363      	str	r3, [r4, #52]	@ 0x34
90029376:	89a3      	ldrh	r3, [r4, #12]
90029378:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
9002937c:	81a3      	strh	r3, [r4, #12]
9002937e:	2300      	movs	r3, #0
90029380:	6063      	str	r3, [r4, #4]
90029382:	6923      	ldr	r3, [r4, #16]
90029384:	6023      	str	r3, [r4, #0]
90029386:	89a3      	ldrh	r3, [r4, #12]
90029388:	f043 0308 	orr.w	r3, r3, #8
9002938c:	81a3      	strh	r3, [r4, #12]
9002938e:	6923      	ldr	r3, [r4, #16]
90029390:	b94b      	cbnz	r3, 900293a6 <__swsetup_r+0x7a>
90029392:	89a3      	ldrh	r3, [r4, #12]
90029394:	f403 7320 	and.w	r3, r3, #640	@ 0x280
90029398:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
9002939c:	d003      	beq.n	900293a6 <__swsetup_r+0x7a>
9002939e:	4621      	mov	r1, r4
900293a0:	4628      	mov	r0, r5
900293a2:	f000 f83f 	bl	90029424 <__smakebuf_r>
900293a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
900293aa:	f013 0201 	ands.w	r2, r3, #1
900293ae:	d00a      	beq.n	900293c6 <__swsetup_r+0x9a>
900293b0:	2200      	movs	r2, #0
900293b2:	60a2      	str	r2, [r4, #8]
900293b4:	6962      	ldr	r2, [r4, #20]
900293b6:	4252      	negs	r2, r2
900293b8:	61a2      	str	r2, [r4, #24]
900293ba:	6922      	ldr	r2, [r4, #16]
900293bc:	b942      	cbnz	r2, 900293d0 <__swsetup_r+0xa4>
900293be:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
900293c2:	d1c5      	bne.n	90029350 <__swsetup_r+0x24>
900293c4:	bd38      	pop	{r3, r4, r5, pc}
900293c6:	0799      	lsls	r1, r3, #30
900293c8:	bf58      	it	pl
900293ca:	6962      	ldrpl	r2, [r4, #20]
900293cc:	60a2      	str	r2, [r4, #8]
900293ce:	e7f4      	b.n	900293ba <__swsetup_r+0x8e>
900293d0:	2000      	movs	r0, #0
900293d2:	e7f7      	b.n	900293c4 <__swsetup_r+0x98>
900293d4:	200001cc 	.word	0x200001cc

900293d8 <__swhatbuf_r>:
900293d8:	b570      	push	{r4, r5, r6, lr}
900293da:	460c      	mov	r4, r1
900293dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900293e0:	2900      	cmp	r1, #0
900293e2:	b096      	sub	sp, #88	@ 0x58
900293e4:	4615      	mov	r5, r2
900293e6:	461e      	mov	r6, r3
900293e8:	da0d      	bge.n	90029406 <__swhatbuf_r+0x2e>
900293ea:	89a3      	ldrh	r3, [r4, #12]
900293ec:	f013 0f80 	tst.w	r3, #128	@ 0x80
900293f0:	f04f 0100 	mov.w	r1, #0
900293f4:	bf14      	ite	ne
900293f6:	2340      	movne	r3, #64	@ 0x40
900293f8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
900293fc:	2000      	movs	r0, #0
900293fe:	6031      	str	r1, [r6, #0]
90029400:	602b      	str	r3, [r5, #0]
90029402:	b016      	add	sp, #88	@ 0x58
90029404:	bd70      	pop	{r4, r5, r6, pc}
90029406:	466a      	mov	r2, sp
90029408:	f000 f848 	bl	9002949c <_fstat_r>
9002940c:	2800      	cmp	r0, #0
9002940e:	dbec      	blt.n	900293ea <__swhatbuf_r+0x12>
90029410:	9901      	ldr	r1, [sp, #4]
90029412:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
90029416:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
9002941a:	4259      	negs	r1, r3
9002941c:	4159      	adcs	r1, r3
9002941e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90029422:	e7eb      	b.n	900293fc <__swhatbuf_r+0x24>

90029424 <__smakebuf_r>:
90029424:	898b      	ldrh	r3, [r1, #12]
90029426:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90029428:	079d      	lsls	r5, r3, #30
9002942a:	4606      	mov	r6, r0
9002942c:	460c      	mov	r4, r1
9002942e:	d507      	bpl.n	90029440 <__smakebuf_r+0x1c>
90029430:	f104 0347 	add.w	r3, r4, #71	@ 0x47
90029434:	6023      	str	r3, [r4, #0]
90029436:	6123      	str	r3, [r4, #16]
90029438:	2301      	movs	r3, #1
9002943a:	6163      	str	r3, [r4, #20]
9002943c:	b003      	add	sp, #12
9002943e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90029440:	ab01      	add	r3, sp, #4
90029442:	466a      	mov	r2, sp
90029444:	f7ff ffc8 	bl	900293d8 <__swhatbuf_r>
90029448:	9f00      	ldr	r7, [sp, #0]
9002944a:	4605      	mov	r5, r0
9002944c:	4639      	mov	r1, r7
9002944e:	4630      	mov	r0, r6
90029450:	f7fe fff8 	bl	90028444 <_malloc_r>
90029454:	b948      	cbnz	r0, 9002946a <__smakebuf_r+0x46>
90029456:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002945a:	059a      	lsls	r2, r3, #22
9002945c:	d4ee      	bmi.n	9002943c <__smakebuf_r+0x18>
9002945e:	f023 0303 	bic.w	r3, r3, #3
90029462:	f043 0302 	orr.w	r3, r3, #2
90029466:	81a3      	strh	r3, [r4, #12]
90029468:	e7e2      	b.n	90029430 <__smakebuf_r+0xc>
9002946a:	89a3      	ldrh	r3, [r4, #12]
9002946c:	6020      	str	r0, [r4, #0]
9002946e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90029472:	81a3      	strh	r3, [r4, #12]
90029474:	9b01      	ldr	r3, [sp, #4]
90029476:	e9c4 0704 	strd	r0, r7, [r4, #16]
9002947a:	b15b      	cbz	r3, 90029494 <__smakebuf_r+0x70>
9002947c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90029480:	4630      	mov	r0, r6
90029482:	f000 f81d 	bl	900294c0 <_isatty_r>
90029486:	b128      	cbz	r0, 90029494 <__smakebuf_r+0x70>
90029488:	89a3      	ldrh	r3, [r4, #12]
9002948a:	f023 0303 	bic.w	r3, r3, #3
9002948e:	f043 0301 	orr.w	r3, r3, #1
90029492:	81a3      	strh	r3, [r4, #12]
90029494:	89a3      	ldrh	r3, [r4, #12]
90029496:	431d      	orrs	r5, r3
90029498:	81a5      	strh	r5, [r4, #12]
9002949a:	e7cf      	b.n	9002943c <__smakebuf_r+0x18>

9002949c <_fstat_r>:
9002949c:	b538      	push	{r3, r4, r5, lr}
9002949e:	4d07      	ldr	r5, [pc, #28]	@ (900294bc <_fstat_r+0x20>)
900294a0:	2300      	movs	r3, #0
900294a2:	4604      	mov	r4, r0
900294a4:	4608      	mov	r0, r1
900294a6:	4611      	mov	r1, r2
900294a8:	602b      	str	r3, [r5, #0]
900294aa:	f7d9 faaa 	bl	90002a02 <_fstat>
900294ae:	1c43      	adds	r3, r0, #1
900294b0:	d102      	bne.n	900294b8 <_fstat_r+0x1c>
900294b2:	682b      	ldr	r3, [r5, #0]
900294b4:	b103      	cbz	r3, 900294b8 <_fstat_r+0x1c>
900294b6:	6023      	str	r3, [r4, #0]
900294b8:	bd38      	pop	{r3, r4, r5, pc}
900294ba:	bf00      	nop
900294bc:	2001b5e0 	.word	0x2001b5e0

900294c0 <_isatty_r>:
900294c0:	b538      	push	{r3, r4, r5, lr}
900294c2:	4d06      	ldr	r5, [pc, #24]	@ (900294dc <_isatty_r+0x1c>)
900294c4:	2300      	movs	r3, #0
900294c6:	4604      	mov	r4, r0
900294c8:	4608      	mov	r0, r1
900294ca:	602b      	str	r3, [r5, #0]
900294cc:	f7d9 fa9e 	bl	90002a0c <_isatty>
900294d0:	1c43      	adds	r3, r0, #1
900294d2:	d102      	bne.n	900294da <_isatty_r+0x1a>
900294d4:	682b      	ldr	r3, [r5, #0]
900294d6:	b103      	cbz	r3, 900294da <_isatty_r+0x1a>
900294d8:	6023      	str	r3, [r4, #0]
900294da:	bd38      	pop	{r3, r4, r5, pc}
900294dc:	2001b5e0 	.word	0x2001b5e0

900294e0 <_init>:
900294e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900294e2:	bf00      	nop
900294e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
900294e6:	bc08      	pop	{r3}
900294e8:	469e      	mov	lr, r3
900294ea:	4770      	bx	lr

900294ec <_fini>:
900294ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900294ee:	bf00      	nop
900294f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
900294f2:	bc08      	pop	{r3}
900294f4:	469e      	mov	lr, r3
900294f6:	4770      	bx	lr
